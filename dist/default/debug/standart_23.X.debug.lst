

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Apr 28 15:25:45 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1823
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	text41,local,class=CODE,merge=1,delta=2
    55                           	psect	text42,local,class=CODE,merge=1,delta=2
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    58                           	dabs	1,0x7E,2
    59  0000                     
    60                           ; Version 2.40
    61                           ; Generated 17/11/2021 GMT
    62                           ; 
    63                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC16F1823 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0006                     	;# 
   102  0007                     	;# 
   103  0008                     	;# 
   104  0009                     	;# 
   105  000A                     	;# 
   106  000B                     	;# 
   107  000C                     	;# 
   108  000E                     	;# 
   109  0011                     	;# 
   110  0012                     	;# 
   111  0015                     	;# 
   112  0016                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001E                     	;# 
   121  001F                     	;# 
   122  008C                     	;# 
   123  008E                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  010C                     	;# 
   138  010E                     	;# 
   139  0111                     	;# 
   140  0112                     	;# 
   141  0113                     	;# 
   142  0114                     	;# 
   143  0115                     	;# 
   144  0116                     	;# 
   145  0117                     	;# 
   146  0118                     	;# 
   147  0119                     	;# 
   148  011A                     	;# 
   149  011B                     	;# 
   150  011D                     	;# 
   151  011D                     	;# 
   152  018C                     	;# 
   153  018E                     	;# 
   154  0191                     	;# 
   155  0191                     	;# 
   156  0192                     	;# 
   157  0193                     	;# 
   158  0193                     	;# 
   159  0193                     	;# 
   160  0194                     	;# 
   161  0195                     	;# 
   162  0196                     	;# 
   163  0199                     	;# 
   164  019A                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019C                     	;# 
   170  019C                     	;# 
   171  019D                     	;# 
   172  019E                     	;# 
   173  019F                     	;# 
   174  020C                     	;# 
   175  020E                     	;# 
   176  0211                     	;# 
   177  0211                     	;# 
   178  0212                     	;# 
   179  0212                     	;# 
   180  0213                     	;# 
   181  0213                     	;# 
   182  0214                     	;# 
   183  0214                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0216                     	;# 
   188  0216                     	;# 
   189  0217                     	;# 
   190  0217                     	;# 
   191  0291                     	;# 
   192  0291                     	;# 
   193  0292                     	;# 
   194  0293                     	;# 
   195  0294                     	;# 
   196  0295                     	;# 
   197  0295                     	;# 
   198  0296                     	;# 
   199  0391                     	;# 
   200  0392                     	;# 
   201  0393                     	;# 
   202  039A                     	;# 
   203  039C                     	;# 
   204  039D                     	;# 
   205  039E                     	;# 
   206  039F                     	;# 
   207  0FE4                     	;# 
   208  0FE5                     	;# 
   209  0FE6                     	;# 
   210  0FE7                     	;# 
   211  0FE8                     	;# 
   212  0FE9                     	;# 
   213  0FEA                     	;# 
   214  0FEB                     	;# 
   215  0FED                     	;# 
   216  0FEE                     	;# 
   217  0FEF                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000E                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  008C                     	;# 
   246  008E                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0095                     	;# 
   250  0096                     	;# 
   251  0097                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009A                     	;# 
   255  009B                     	;# 
   256  009B                     	;# 
   257  009C                     	;# 
   258  009D                     	;# 
   259  009E                     	;# 
   260  010C                     	;# 
   261  010E                     	;# 
   262  0111                     	;# 
   263  0112                     	;# 
   264  0113                     	;# 
   265  0114                     	;# 
   266  0115                     	;# 
   267  0116                     	;# 
   268  0117                     	;# 
   269  0118                     	;# 
   270  0119                     	;# 
   271  011A                     	;# 
   272  011B                     	;# 
   273  011D                     	;# 
   274  011D                     	;# 
   275  018C                     	;# 
   276  018E                     	;# 
   277  0191                     	;# 
   278  0191                     	;# 
   279  0192                     	;# 
   280  0193                     	;# 
   281  0193                     	;# 
   282  0193                     	;# 
   283  0194                     	;# 
   284  0195                     	;# 
   285  0196                     	;# 
   286  0199                     	;# 
   287  019A                     	;# 
   288  019B                     	;# 
   289  019B                     	;# 
   290  019B                     	;# 
   291  019B                     	;# 
   292  019C                     	;# 
   293  019C                     	;# 
   294  019D                     	;# 
   295  019E                     	;# 
   296  019F                     	;# 
   297  020C                     	;# 
   298  020E                     	;# 
   299  0211                     	;# 
   300  0211                     	;# 
   301  0212                     	;# 
   302  0212                     	;# 
   303  0213                     	;# 
   304  0213                     	;# 
   305  0214                     	;# 
   306  0214                     	;# 
   307  0215                     	;# 
   308  0215                     	;# 
   309  0215                     	;# 
   310  0216                     	;# 
   311  0216                     	;# 
   312  0217                     	;# 
   313  0217                     	;# 
   314  0291                     	;# 
   315  0291                     	;# 
   316  0292                     	;# 
   317  0293                     	;# 
   318  0294                     	;# 
   319  0295                     	;# 
   320  0295                     	;# 
   321  0296                     	;# 
   322  0391                     	;# 
   323  0392                     	;# 
   324  0393                     	;# 
   325  039A                     	;# 
   326  039C                     	;# 
   327  039D                     	;# 
   328  039E                     	;# 
   329  039F                     	;# 
   330  0FE4                     	;# 
   331  0FE5                     	;# 
   332  0FE6                     	;# 
   333  0FE7                     	;# 
   334  0FE8                     	;# 
   335  0FE9                     	;# 
   336  0FEA                     	;# 
   337  0FEB                     	;# 
   338  0FED                     	;# 
   339  0FEE                     	;# 
   340  0FEF                     	;# 
   341  0000                     	;# 
   342  0001                     	;# 
   343  0002                     	;# 
   344  0003                     	;# 
   345  0004                     	;# 
   346  0005                     	;# 
   347  0006                     	;# 
   348  0007                     	;# 
   349  0008                     	;# 
   350  0009                     	;# 
   351  000A                     	;# 
   352  000B                     	;# 
   353  000C                     	;# 
   354  000E                     	;# 
   355  0011                     	;# 
   356  0012                     	;# 
   357  0015                     	;# 
   358  0016                     	;# 
   359  0016                     	;# 
   360  0017                     	;# 
   361  0018                     	;# 
   362  0019                     	;# 
   363  001A                     	;# 
   364  001B                     	;# 
   365  001C                     	;# 
   366  001E                     	;# 
   367  001F                     	;# 
   368  008C                     	;# 
   369  008E                     	;# 
   370  0091                     	;# 
   371  0092                     	;# 
   372  0095                     	;# 
   373  0096                     	;# 
   374  0097                     	;# 
   375  0098                     	;# 
   376  0099                     	;# 
   377  009A                     	;# 
   378  009B                     	;# 
   379  009B                     	;# 
   380  009C                     	;# 
   381  009D                     	;# 
   382  009E                     	;# 
   383  010C                     	;# 
   384  010E                     	;# 
   385  0111                     	;# 
   386  0112                     	;# 
   387  0113                     	;# 
   388  0114                     	;# 
   389  0115                     	;# 
   390  0116                     	;# 
   391  0117                     	;# 
   392  0118                     	;# 
   393  0119                     	;# 
   394  011A                     	;# 
   395  011B                     	;# 
   396  011D                     	;# 
   397  011D                     	;# 
   398  018C                     	;# 
   399  018E                     	;# 
   400  0191                     	;# 
   401  0191                     	;# 
   402  0192                     	;# 
   403  0193                     	;# 
   404  0193                     	;# 
   405  0193                     	;# 
   406  0194                     	;# 
   407  0195                     	;# 
   408  0196                     	;# 
   409  0199                     	;# 
   410  019A                     	;# 
   411  019B                     	;# 
   412  019B                     	;# 
   413  019B                     	;# 
   414  019B                     	;# 
   415  019C                     	;# 
   416  019C                     	;# 
   417  019D                     	;# 
   418  019E                     	;# 
   419  019F                     	;# 
   420  020C                     	;# 
   421  020E                     	;# 
   422  0211                     	;# 
   423  0211                     	;# 
   424  0212                     	;# 
   425  0212                     	;# 
   426  0213                     	;# 
   427  0213                     	;# 
   428  0214                     	;# 
   429  0214                     	;# 
   430  0215                     	;# 
   431  0215                     	;# 
   432  0215                     	;# 
   433  0216                     	;# 
   434  0216                     	;# 
   435  0217                     	;# 
   436  0217                     	;# 
   437  0291                     	;# 
   438  0291                     	;# 
   439  0292                     	;# 
   440  0293                     	;# 
   441  0294                     	;# 
   442  0295                     	;# 
   443  0295                     	;# 
   444  0296                     	;# 
   445  0391                     	;# 
   446  0392                     	;# 
   447  0393                     	;# 
   448  039A                     	;# 
   449  039C                     	;# 
   450  039D                     	;# 
   451  039E                     	;# 
   452  039F                     	;# 
   453  0FE4                     	;# 
   454  0FE5                     	;# 
   455  0FE6                     	;# 
   456  0FE7                     	;# 
   457  0FE8                     	;# 
   458  0FE9                     	;# 
   459  0FEA                     	;# 
   460  0FEB                     	;# 
   461  0FED                     	;# 
   462  0FEE                     	;# 
   463  0FEF                     	;# 
   464  0000                     	;# 
   465  0001                     	;# 
   466  0002                     	;# 
   467  0003                     	;# 
   468  0004                     	;# 
   469  0005                     	;# 
   470  0006                     	;# 
   471  0007                     	;# 
   472  0008                     	;# 
   473  0009                     	;# 
   474  000A                     	;# 
   475  000B                     	;# 
   476  000C                     	;# 
   477  000E                     	;# 
   478  0011                     	;# 
   479  0012                     	;# 
   480  0015                     	;# 
   481  0016                     	;# 
   482  0016                     	;# 
   483  0017                     	;# 
   484  0018                     	;# 
   485  0019                     	;# 
   486  001A                     	;# 
   487  001B                     	;# 
   488  001C                     	;# 
   489  001E                     	;# 
   490  001F                     	;# 
   491  008C                     	;# 
   492  008E                     	;# 
   493  0091                     	;# 
   494  0092                     	;# 
   495  0095                     	;# 
   496  0096                     	;# 
   497  0097                     	;# 
   498  0098                     	;# 
   499  0099                     	;# 
   500  009A                     	;# 
   501  009B                     	;# 
   502  009B                     	;# 
   503  009C                     	;# 
   504  009D                     	;# 
   505  009E                     	;# 
   506  010C                     	;# 
   507  010E                     	;# 
   508  0111                     	;# 
   509  0112                     	;# 
   510  0113                     	;# 
   511  0114                     	;# 
   512  0115                     	;# 
   513  0116                     	;# 
   514  0117                     	;# 
   515  0118                     	;# 
   516  0119                     	;# 
   517  011A                     	;# 
   518  011B                     	;# 
   519  011D                     	;# 
   520  011D                     	;# 
   521  018C                     	;# 
   522  018E                     	;# 
   523  0191                     	;# 
   524  0191                     	;# 
   525  0192                     	;# 
   526  0193                     	;# 
   527  0193                     	;# 
   528  0193                     	;# 
   529  0194                     	;# 
   530  0195                     	;# 
   531  0196                     	;# 
   532  0199                     	;# 
   533  019A                     	;# 
   534  019B                     	;# 
   535  019B                     	;# 
   536  019B                     	;# 
   537  019B                     	;# 
   538  019C                     	;# 
   539  019C                     	;# 
   540  019D                     	;# 
   541  019E                     	;# 
   542  019F                     	;# 
   543  020C                     	;# 
   544  020E                     	;# 
   545  0211                     	;# 
   546  0211                     	;# 
   547  0212                     	;# 
   548  0212                     	;# 
   549  0213                     	;# 
   550  0213                     	;# 
   551  0214                     	;# 
   552  0214                     	;# 
   553  0215                     	;# 
   554  0215                     	;# 
   555  0215                     	;# 
   556  0216                     	;# 
   557  0216                     	;# 
   558  0217                     	;# 
   559  0217                     	;# 
   560  0291                     	;# 
   561  0291                     	;# 
   562  0292                     	;# 
   563  0293                     	;# 
   564  0294                     	;# 
   565  0295                     	;# 
   566  0295                     	;# 
   567  0296                     	;# 
   568  0391                     	;# 
   569  0392                     	;# 
   570  0393                     	;# 
   571  039A                     	;# 
   572  039C                     	;# 
   573  039D                     	;# 
   574  039E                     	;# 
   575  039F                     	;# 
   576  0FE4                     	;# 
   577  0FE5                     	;# 
   578  0FE6                     	;# 
   579  0FE7                     	;# 
   580  0FE8                     	;# 
   581  0FE9                     	;# 
   582  0FEA                     	;# 
   583  0FEB                     	;# 
   584  0FED                     	;# 
   585  0FEE                     	;# 
   586  0FEF                     	;# 
   587  0000                     	;# 
   588  0001                     	;# 
   589  0002                     	;# 
   590  0003                     	;# 
   591  0004                     	;# 
   592  0005                     	;# 
   593  0006                     	;# 
   594  0007                     	;# 
   595  0008                     	;# 
   596  0009                     	;# 
   597  000A                     	;# 
   598  000B                     	;# 
   599  000C                     	;# 
   600  000E                     	;# 
   601  0011                     	;# 
   602  0012                     	;# 
   603  0015                     	;# 
   604  0016                     	;# 
   605  0016                     	;# 
   606  0017                     	;# 
   607  0018                     	;# 
   608  0019                     	;# 
   609  001A                     	;# 
   610  001B                     	;# 
   611  001C                     	;# 
   612  001E                     	;# 
   613  001F                     	;# 
   614  008C                     	;# 
   615  008E                     	;# 
   616  0091                     	;# 
   617  0092                     	;# 
   618  0095                     	;# 
   619  0096                     	;# 
   620  0097                     	;# 
   621  0098                     	;# 
   622  0099                     	;# 
   623  009A                     	;# 
   624  009B                     	;# 
   625  009B                     	;# 
   626  009C                     	;# 
   627  009D                     	;# 
   628  009E                     	;# 
   629  010C                     	;# 
   630  010E                     	;# 
   631  0111                     	;# 
   632  0112                     	;# 
   633  0113                     	;# 
   634  0114                     	;# 
   635  0115                     	;# 
   636  0116                     	;# 
   637  0117                     	;# 
   638  0118                     	;# 
   639  0119                     	;# 
   640  011A                     	;# 
   641  011B                     	;# 
   642  011D                     	;# 
   643  011D                     	;# 
   644  018C                     	;# 
   645  018E                     	;# 
   646  0191                     	;# 
   647  0191                     	;# 
   648  0192                     	;# 
   649  0193                     	;# 
   650  0193                     	;# 
   651  0193                     	;# 
   652  0194                     	;# 
   653  0195                     	;# 
   654  0196                     	;# 
   655  0199                     	;# 
   656  019A                     	;# 
   657  019B                     	;# 
   658  019B                     	;# 
   659  019B                     	;# 
   660  019B                     	;# 
   661  019C                     	;# 
   662  019C                     	;# 
   663  019D                     	;# 
   664  019E                     	;# 
   665  019F                     	;# 
   666  020C                     	;# 
   667  020E                     	;# 
   668  0211                     	;# 
   669  0211                     	;# 
   670  0212                     	;# 
   671  0212                     	;# 
   672  0213                     	;# 
   673  0213                     	;# 
   674  0214                     	;# 
   675  0214                     	;# 
   676  0215                     	;# 
   677  0215                     	;# 
   678  0215                     	;# 
   679  0216                     	;# 
   680  0216                     	;# 
   681  0217                     	;# 
   682  0217                     	;# 
   683  0291                     	;# 
   684  0291                     	;# 
   685  0292                     	;# 
   686  0293                     	;# 
   687  0294                     	;# 
   688  0295                     	;# 
   689  0295                     	;# 
   690  0296                     	;# 
   691  0391                     	;# 
   692  0392                     	;# 
   693  0393                     	;# 
   694  039A                     	;# 
   695  039C                     	;# 
   696  039D                     	;# 
   697  039E                     	;# 
   698  039F                     	;# 
   699  0FE4                     	;# 
   700  0FE5                     	;# 
   701  0FE6                     	;# 
   702  0FE7                     	;# 
   703  0FE8                     	;# 
   704  0FE9                     	;# 
   705  0FEA                     	;# 
   706  0FEB                     	;# 
   707  0FED                     	;# 
   708  0FEE                     	;# 
   709  0FEF                     	;# 
   710  0000                     	;# 
   711  0001                     	;# 
   712  0002                     	;# 
   713  0003                     	;# 
   714  0004                     	;# 
   715  0005                     	;# 
   716  0006                     	;# 
   717  0007                     	;# 
   718  0008                     	;# 
   719  0009                     	;# 
   720  000A                     	;# 
   721  000B                     	;# 
   722  000C                     	;# 
   723  000E                     	;# 
   724  0011                     	;# 
   725  0012                     	;# 
   726  0015                     	;# 
   727  0016                     	;# 
   728  0016                     	;# 
   729  0017                     	;# 
   730  0018                     	;# 
   731  0019                     	;# 
   732  001A                     	;# 
   733  001B                     	;# 
   734  001C                     	;# 
   735  001E                     	;# 
   736  001F                     	;# 
   737  008C                     	;# 
   738  008E                     	;# 
   739  0091                     	;# 
   740  0092                     	;# 
   741  0095                     	;# 
   742  0096                     	;# 
   743  0097                     	;# 
   744  0098                     	;# 
   745  0099                     	;# 
   746  009A                     	;# 
   747  009B                     	;# 
   748  009B                     	;# 
   749  009C                     	;# 
   750  009D                     	;# 
   751  009E                     	;# 
   752  010C                     	;# 
   753  010E                     	;# 
   754  0111                     	;# 
   755  0112                     	;# 
   756  0113                     	;# 
   757  0114                     	;# 
   758  0115                     	;# 
   759  0116                     	;# 
   760  0117                     	;# 
   761  0118                     	;# 
   762  0119                     	;# 
   763  011A                     	;# 
   764  011B                     	;# 
   765  011D                     	;# 
   766  011D                     	;# 
   767  018C                     	;# 
   768  018E                     	;# 
   769  0191                     	;# 
   770  0191                     	;# 
   771  0192                     	;# 
   772  0193                     	;# 
   773  0193                     	;# 
   774  0193                     	;# 
   775  0194                     	;# 
   776  0195                     	;# 
   777  0196                     	;# 
   778  0199                     	;# 
   779  019A                     	;# 
   780  019B                     	;# 
   781  019B                     	;# 
   782  019B                     	;# 
   783  019B                     	;# 
   784  019C                     	;# 
   785  019C                     	;# 
   786  019D                     	;# 
   787  019E                     	;# 
   788  019F                     	;# 
   789  020C                     	;# 
   790  020E                     	;# 
   791  0211                     	;# 
   792  0211                     	;# 
   793  0212                     	;# 
   794  0212                     	;# 
   795  0213                     	;# 
   796  0213                     	;# 
   797  0214                     	;# 
   798  0214                     	;# 
   799  0215                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0216                     	;# 
   803  0216                     	;# 
   804  0217                     	;# 
   805  0217                     	;# 
   806  0291                     	;# 
   807  0291                     	;# 
   808  0292                     	;# 
   809  0293                     	;# 
   810  0294                     	;# 
   811  0295                     	;# 
   812  0295                     	;# 
   813  0296                     	;# 
   814  0391                     	;# 
   815  0392                     	;# 
   816  0393                     	;# 
   817  039A                     	;# 
   818  039C                     	;# 
   819  039D                     	;# 
   820  039E                     	;# 
   821  039F                     	;# 
   822  0FE4                     	;# 
   823  0FE5                     	;# 
   824  0FE6                     	;# 
   825  0FE7                     	;# 
   826  0FE8                     	;# 
   827  0FE9                     	;# 
   828  0FEA                     	;# 
   829  0FEB                     	;# 
   830  0FED                     	;# 
   831  0FEE                     	;# 
   832  0FEF                     	;# 
   833  0000                     	;# 
   834  0001                     	;# 
   835  0002                     	;# 
   836  0003                     	;# 
   837  0004                     	;# 
   838  0005                     	;# 
   839  0006                     	;# 
   840  0007                     	;# 
   841  0008                     	;# 
   842  0009                     	;# 
   843  000A                     	;# 
   844  000B                     	;# 
   845  000C                     	;# 
   846  000E                     	;# 
   847  0011                     	;# 
   848  0012                     	;# 
   849  0015                     	;# 
   850  0016                     	;# 
   851  0016                     	;# 
   852  0017                     	;# 
   853  0018                     	;# 
   854  0019                     	;# 
   855  001A                     	;# 
   856  001B                     	;# 
   857  001C                     	;# 
   858  001E                     	;# 
   859  001F                     	;# 
   860  008C                     	;# 
   861  008E                     	;# 
   862  0091                     	;# 
   863  0092                     	;# 
   864  0095                     	;# 
   865  0096                     	;# 
   866  0097                     	;# 
   867  0098                     	;# 
   868  0099                     	;# 
   869  009A                     	;# 
   870  009B                     	;# 
   871  009B                     	;# 
   872  009C                     	;# 
   873  009D                     	;# 
   874  009E                     	;# 
   875  010C                     	;# 
   876  010E                     	;# 
   877  0111                     	;# 
   878  0112                     	;# 
   879  0113                     	;# 
   880  0114                     	;# 
   881  0115                     	;# 
   882  0116                     	;# 
   883  0117                     	;# 
   884  0118                     	;# 
   885  0119                     	;# 
   886  011A                     	;# 
   887  011B                     	;# 
   888  011D                     	;# 
   889  011D                     	;# 
   890  018C                     	;# 
   891  018E                     	;# 
   892  0191                     	;# 
   893  0191                     	;# 
   894  0192                     	;# 
   895  0193                     	;# 
   896  0193                     	;# 
   897  0193                     	;# 
   898  0194                     	;# 
   899  0195                     	;# 
   900  0196                     	;# 
   901  0199                     	;# 
   902  019A                     	;# 
   903  019B                     	;# 
   904  019B                     	;# 
   905  019B                     	;# 
   906  019B                     	;# 
   907  019C                     	;# 
   908  019C                     	;# 
   909  019D                     	;# 
   910  019E                     	;# 
   911  019F                     	;# 
   912  020C                     	;# 
   913  020E                     	;# 
   914  0211                     	;# 
   915  0211                     	;# 
   916  0212                     	;# 
   917  0212                     	;# 
   918  0213                     	;# 
   919  0213                     	;# 
   920  0214                     	;# 
   921  0214                     	;# 
   922  0215                     	;# 
   923  0215                     	;# 
   924  0215                     	;# 
   925  0216                     	;# 
   926  0216                     	;# 
   927  0217                     	;# 
   928  0217                     	;# 
   929  0291                     	;# 
   930  0291                     	;# 
   931  0292                     	;# 
   932  0293                     	;# 
   933  0294                     	;# 
   934  0295                     	;# 
   935  0295                     	;# 
   936  0296                     	;# 
   937  0391                     	;# 
   938  0392                     	;# 
   939  0393                     	;# 
   940  039A                     	;# 
   941  039C                     	;# 
   942  039D                     	;# 
   943  039E                     	;# 
   944  039F                     	;# 
   945  0FE4                     	;# 
   946  0FE5                     	;# 
   947  0FE6                     	;# 
   948  0FE7                     	;# 
   949  0FE8                     	;# 
   950  0FE9                     	;# 
   951  0FEA                     	;# 
   952  0FEB                     	;# 
   953  0FED                     	;# 
   954  0FEE                     	;# 
   955  0FEF                     	;# 
   956  0000                     	;# 
   957  0001                     	;# 
   958  0002                     	;# 
   959  0003                     	;# 
   960  0004                     	;# 
   961  0005                     	;# 
   962  0006                     	;# 
   963  0007                     	;# 
   964  0008                     	;# 
   965  0009                     	;# 
   966  000A                     	;# 
   967  000B                     	;# 
   968  000C                     	;# 
   969  000E                     	;# 
   970  0011                     	;# 
   971  0012                     	;# 
   972  0015                     	;# 
   973  0016                     	;# 
   974  0016                     	;# 
   975  0017                     	;# 
   976  0018                     	;# 
   977  0019                     	;# 
   978  001A                     	;# 
   979  001B                     	;# 
   980  001C                     	;# 
   981  001E                     	;# 
   982  001F                     	;# 
   983  008C                     	;# 
   984  008E                     	;# 
   985  0091                     	;# 
   986  0092                     	;# 
   987  0095                     	;# 
   988  0096                     	;# 
   989  0097                     	;# 
   990  0098                     	;# 
   991  0099                     	;# 
   992  009A                     	;# 
   993  009B                     	;# 
   994  009B                     	;# 
   995  009C                     	;# 
   996  009D                     	;# 
   997  009E                     	;# 
   998  010C                     	;# 
   999  010E                     	;# 
  1000  0111                     	;# 
  1001  0112                     	;# 
  1002  0113                     	;# 
  1003  0114                     	;# 
  1004  0115                     	;# 
  1005  0116                     	;# 
  1006  0117                     	;# 
  1007  0118                     	;# 
  1008  0119                     	;# 
  1009  011A                     	;# 
  1010  011B                     	;# 
  1011  011D                     	;# 
  1012  011D                     	;# 
  1013  018C                     	;# 
  1014  018E                     	;# 
  1015  0191                     	;# 
  1016  0191                     	;# 
  1017  0192                     	;# 
  1018  0193                     	;# 
  1019  0193                     	;# 
  1020  0193                     	;# 
  1021  0194                     	;# 
  1022  0195                     	;# 
  1023  0196                     	;# 
  1024  0199                     	;# 
  1025  019A                     	;# 
  1026  019B                     	;# 
  1027  019B                     	;# 
  1028  019B                     	;# 
  1029  019B                     	;# 
  1030  019C                     	;# 
  1031  019C                     	;# 
  1032  019D                     	;# 
  1033  019E                     	;# 
  1034  019F                     	;# 
  1035  020C                     	;# 
  1036  020E                     	;# 
  1037  0211                     	;# 
  1038  0211                     	;# 
  1039  0212                     	;# 
  1040  0212                     	;# 
  1041  0213                     	;# 
  1042  0213                     	;# 
  1043  0214                     	;# 
  1044  0214                     	;# 
  1045  0215                     	;# 
  1046  0215                     	;# 
  1047  0215                     	;# 
  1048  0216                     	;# 
  1049  0216                     	;# 
  1050  0217                     	;# 
  1051  0217                     	;# 
  1052  0291                     	;# 
  1053  0291                     	;# 
  1054  0292                     	;# 
  1055  0293                     	;# 
  1056  0294                     	;# 
  1057  0295                     	;# 
  1058  0295                     	;# 
  1059  0296                     	;# 
  1060  0391                     	;# 
  1061  0392                     	;# 
  1062  0393                     	;# 
  1063  039A                     	;# 
  1064  039C                     	;# 
  1065  039D                     	;# 
  1066  039E                     	;# 
  1067  039F                     	;# 
  1068  0FE4                     	;# 
  1069  0FE5                     	;# 
  1070  0FE6                     	;# 
  1071  0FE7                     	;# 
  1072  0FE8                     	;# 
  1073  0FE9                     	;# 
  1074  0FEA                     	;# 
  1075  0FEB                     	;# 
  1076  0FED                     	;# 
  1077  0FEE                     	;# 
  1078  0FEF                     	;# 
  1079  0000                     	;# 
  1080  0001                     	;# 
  1081  0002                     	;# 
  1082  0003                     	;# 
  1083  0004                     	;# 
  1084  0005                     	;# 
  1085  0006                     	;# 
  1086  0007                     	;# 
  1087  0008                     	;# 
  1088  0009                     	;# 
  1089  000A                     	;# 
  1090  000B                     	;# 
  1091  000C                     	;# 
  1092  000E                     	;# 
  1093  0011                     	;# 
  1094  0012                     	;# 
  1095  0015                     	;# 
  1096  0016                     	;# 
  1097  0016                     	;# 
  1098  0017                     	;# 
  1099  0018                     	;# 
  1100  0019                     	;# 
  1101  001A                     	;# 
  1102  001B                     	;# 
  1103  001C                     	;# 
  1104  001E                     	;# 
  1105  001F                     	;# 
  1106  008C                     	;# 
  1107  008E                     	;# 
  1108  0091                     	;# 
  1109  0092                     	;# 
  1110  0095                     	;# 
  1111  0096                     	;# 
  1112  0097                     	;# 
  1113  0098                     	;# 
  1114  0099                     	;# 
  1115  009A                     	;# 
  1116  009B                     	;# 
  1117  009B                     	;# 
  1118  009C                     	;# 
  1119  009D                     	;# 
  1120  009E                     	;# 
  1121  010C                     	;# 
  1122  010E                     	;# 
  1123  0111                     	;# 
  1124  0112                     	;# 
  1125  0113                     	;# 
  1126  0114                     	;# 
  1127  0115                     	;# 
  1128  0116                     	;# 
  1129  0117                     	;# 
  1130  0118                     	;# 
  1131  0119                     	;# 
  1132  011A                     	;# 
  1133  011B                     	;# 
  1134  011D                     	;# 
  1135  011D                     	;# 
  1136  018C                     	;# 
  1137  018E                     	;# 
  1138  0191                     	;# 
  1139  0191                     	;# 
  1140  0192                     	;# 
  1141  0193                     	;# 
  1142  0193                     	;# 
  1143  0193                     	;# 
  1144  0194                     	;# 
  1145  0195                     	;# 
  1146  0196                     	;# 
  1147  0199                     	;# 
  1148  019A                     	;# 
  1149  019B                     	;# 
  1150  019B                     	;# 
  1151  019B                     	;# 
  1152  019B                     	;# 
  1153  019C                     	;# 
  1154  019C                     	;# 
  1155  019D                     	;# 
  1156  019E                     	;# 
  1157  019F                     	;# 
  1158  020C                     	;# 
  1159  020E                     	;# 
  1160  0211                     	;# 
  1161  0211                     	;# 
  1162  0212                     	;# 
  1163  0212                     	;# 
  1164  0213                     	;# 
  1165  0213                     	;# 
  1166  0214                     	;# 
  1167  0214                     	;# 
  1168  0215                     	;# 
  1169  0215                     	;# 
  1170  0215                     	;# 
  1171  0216                     	;# 
  1172  0216                     	;# 
  1173  0217                     	;# 
  1174  0217                     	;# 
  1175  0291                     	;# 
  1176  0291                     	;# 
  1177  0292                     	;# 
  1178  0293                     	;# 
  1179  0294                     	;# 
  1180  0295                     	;# 
  1181  0295                     	;# 
  1182  0296                     	;# 
  1183  0391                     	;# 
  1184  0392                     	;# 
  1185  0393                     	;# 
  1186  039A                     	;# 
  1187  039C                     	;# 
  1188  039D                     	;# 
  1189  039E                     	;# 
  1190  039F                     	;# 
  1191  0FE4                     	;# 
  1192  0FE5                     	;# 
  1193  0FE6                     	;# 
  1194  0FE7                     	;# 
  1195  0FE8                     	;# 
  1196  0FE9                     	;# 
  1197  0FEA                     	;# 
  1198  0FEB                     	;# 
  1199  0FED                     	;# 
  1200  0FEE                     	;# 
  1201  0FEF                     	;# 
  1202                           
  1203                           	psect	stringtext1
  1204  04C3                     __pstringtext1:
  1205  04C3                     _ROTATION_TIME:
  1206  04C3  343C               	retlw	60
  1207  04C4  3400               	retlw	0
  1208  04C5  3400               	retlw	0
  1209  04C6  3400               	retlw	0
  1210  04C7                     __end_of_ROTATION_TIME:
  1211                           
  1212                           	psect	stringtext2
  1213  04C7                     __pstringtext2:
  1214  04C7                     _GOOD_WSP_VOLTAGE:
  1215  04C7  3440               	retlw	64
  1216  04C8  349C               	retlw	156
  1217  04C9  3400               	retlw	0
  1218  04CA  3400               	retlw	0
  1219  04CB                     __end_of_GOOD_WSP_VOLTAGE:
  1220                           
  1221                           	psect	stringtext3
  1222  04CB                     __pstringtext3:
  1223  04CB                     _BAD_WSP_VOLTAGE:
  1224  04CB  3420               	retlw	32
  1225  04CC  344E               	retlw	78
  1226  04CD  3400               	retlw	0
  1227  04CE  3400               	retlw	0
  1228  04CF                     __end_of_BAD_WSP_VOLTAGE:
  1229                           
  1230                           	psect	nvBANK0
  1231  0036                     __pnvBANK0:
  1232  0036                     _TMR0_InterruptHandler:
  1233  0036                     	ds	2
  1234  0038                     _TMR2_InterruptHandler:
  1235  0038                     	ds	2
  1236  003A                     _timer0ReloadVal:
  1237  003A                     	ds	1
  1238  0015                     _TMR0	set	21
  1239  001C                     _T2CONbits	set	28
  1240  001C                     _T2CON	set	28
  1241  001A                     _TMR2	set	26
  1242  001B                     _PR2	set	27
  1243  0011                     _PIR1bits	set	17
  1244  000B                     _INTCONbits	set	11
  1245  008E                     _TRISCbits	set	142
  1246  008C                     _TRISAbits	set	140
  1247  0095                     _OPTION_REG	set	149
  1248  0091                     _PIE1bits	set	145
  1249  0095                     _OPTION_REGbits	set	149
  1250  008E                     _TRISC	set	142
  1251  008C                     _TRISA	set	140
  1252  009D                     _ADCON0bits	set	157
  1253  009D                     _ADCON0	set	157
  1254  009C                     _ADRESH	set	156
  1255  009B                     _ADRESL	set	155
  1256  009E                     _ADCON1	set	158
  1257  0097                     _WDTCON	set	151
  1258  0098                     _OSCTUNE	set	152
  1259  0099                     _OSCCON	set	153
  1260  0117                     _FVRCONbits	set	279
  1261  0117                     _FVRCON	set	279
  1262  010E                     _LATCbits	set	270
  1263  010C                     _LATAbits	set	268
  1264  011D                     _APFCON	set	285
  1265  010E                     _LATC	set	270
  1266  010C                     _LATA	set	268
  1267  0116                     _BORCON	set	278
  1268  018C                     _ANSELAbits	set	396
  1269  018E                     _ANSELCbits	set	398
  1270  018C                     _ANSELA	set	396
  1271  018E                     _ANSELC	set	398
  1272  020E                     _WPUCbits	set	526
  1273  020C                     _WPUAbits	set	524
  1274  020E                     _WPUC	set	526
  1275  020C                     _WPUA	set	524
  1276                           
  1277                           	psect	cinit
  1278  0027                     start_initialization:	
  1279                           ; #config settings
  1280                           
  1281  0027                     __initialization:
  1282                           
  1283                           ; Clear objects allocated to COMMON
  1284  0027  01F8               	clrf	__pbssCOMMON& (0+127)
  1285  0028  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1286  0029  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1287  002A  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1288  002B  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1289                           
  1290                           ; Clear objects allocated to BANK0
  1291  002C  0020               	movlb	0	; select bank0
  1292  002D  01A0               	clrf	__pbssBANK0& (0+127)
  1293  002E  01A1               	clrf	(__pbssBANK0+1)& (0+127)
  1294  002F  01A2               	clrf	(__pbssBANK0+2)& (0+127)
  1295  0030  01A3               	clrf	(__pbssBANK0+3)& (0+127)
  1296  0031  01A4               	clrf	(__pbssBANK0+4)& (0+127)
  1297  0032  01A5               	clrf	(__pbssBANK0+5)& (0+127)
  1298  0033  01A6               	clrf	(__pbssBANK0+6)& (0+127)
  1299  0034  01A7               	clrf	(__pbssBANK0+7)& (0+127)
  1300  0035  01A8               	clrf	(__pbssBANK0+8)& (0+127)
  1301  0036  01A9               	clrf	(__pbssBANK0+9)& (0+127)
  1302  0037  01AA               	clrf	(__pbssBANK0+10)& (0+127)
  1303  0038                     end_of_initialization:	
  1304                           ;End of C runtime variable initialization code
  1305                           
  1306  0038                     __end_of__initialization:
  1307  0038  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1308  0039  0020               	movlb	0
  1309  003A  2B7E               	ljmp	_main	;jump to C main() function
  1310                           
  1311                           	psect	bssCOMMON
  1312  0078                     __pbssCOMMON:
  1313  0078                     TMR2_ISR@CountCallBack:
  1314  0078                     	ds	2
  1315  007A                     sec_tick_work@iled:
  1316  007A                     	ds	1
  1317  007B                     get_measure@measures:
  1318  007B                     	ds	1
  1319  007C                     _FLAGS:
  1320  007C                     	ds	1
  1321                           
  1322                           	psect	bssBANK0
  1323  0020                     __pbssBANK0:
  1324  0020                     _time_s:
  1325  0020                     	ds	4
  1326  0024                     _ADC_InterruptHandler:
  1327  0024                     	ds	2
  1328  0026                     get_jump_full@jump_counter:
  1329  0026                     	ds	1
  1330  0027                     get_jump@jump_counter:
  1331  0027                     	ds	1
  1332  0028                     get_fun_full@fun_counter:
  1333  0028                     	ds	1
  1334  0029                     get_fun@fun_counter:
  1335  0029                     	ds	1
  1336  002A                     _time_pow_s:
  1337  002A                     	ds	1
  1338                           
  1339                           	psect	cstackCOMMON
  1340  0070                     __pcstackCOMMON:
  1341  0070                     ?_PIN_MANAGER_Initialize:
  1342  0070                     ?_OSCILLATOR_Initialize:	
  1343                           ; 1 bytes @ 0x0
  1344                           
  1345  0070                     ?_WDT_Initialize:	
  1346                           ; 1 bytes @ 0x0
  1347                           
  1348  0070                     ?_FVR_Initialize:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351  0070                     ?_ADC_Initialize:	
  1352                           ; 1 bytes @ 0x0
  1353                           
  1354  0070                     ?_TMR2_Initialize:	
  1355                           ; 1 bytes @ 0x0
  1356                           
  1357  0070                     ?_TMR0_Initialize:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0070                     ?_TMR0_ISR:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0070                     ??_TMR0_ISR:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366  0070                     ?_TMR2_ISR:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369  0070                     ?_TMR2_DefaultInterruptHandler:	
  1370                           ; 1 bytes @ 0x0
  1371                           
  1372  0070                     ??_TMR2_DefaultInterruptHandler:	
  1373                           ; 1 bytes @ 0x0
  1374                           
  1375  0070                     ?_TMR2_CallBack:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378  0070                     ?_TMR0_DefaultInterruptHandler:	
  1379                           ; 1 bytes @ 0x0
  1380                           
  1381  0070                     ??_TMR0_DefaultInterruptHandler:	
  1382                           ; 1 bytes @ 0x0
  1383                           
  1384  0070                     ?_SYSTEM_Initialize:	
  1385                           ; 1 bytes @ 0x0
  1386                           
  1387  0070                     ?_INTERRUPT_InterruptManager:	
  1388                           ; 1 bytes @ 0x0
  1389                           
  1390  0070                     ?_TMR2_StartTimer:	
  1391                           ; 1 bytes @ 0x0
  1392                           
  1393  0070                     ?_switch_zum:	
  1394                           ; 1 bytes @ 0x0
  1395                           
  1396  0070                     ?_toggle_tone:	
  1397                           ; 1 bytes @ 0x0
  1398                           
  1399  0070                     ??_toggle_tone:	
  1400                           ; 1 bytes @ 0x0
  1401                           
  1402  0070                     ?_go_close:	
  1403                           ; 1 bytes @ 0x0
  1404                           
  1405  0070                     ?_go_open:	
  1406                           ; 1 bytes @ 0x0
  1407                           
  1408  0070                     ?_go_close_alt:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411  0070                     ?_go_open_alt:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414  0070                     ?_start_alarm:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417  0070                     ?_get_measure:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420  0070                     ?_get_fun:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423  0070                     ?_get_fun_full:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426  0070                     ?_get_jump:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429  0070                     ?_get_jump_full:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432  0070                     ?_rele_tick:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435  0070                     ??_rele_tick:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438  0070                     ?_sec_tick_work:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441  0070                     ?_povorot:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444  0070                     ?_fun_work:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447  0070                     ?_switch_wm:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450  0070                     ?_get_voltage:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453  0070                     ?_start_setup:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456  0070                     ?_main:	
  1457                           ; 1 bytes @ 0x0
  1458                           
  1459  0070                     ?i1_switch_zum:	
  1460                           ; 1 bytes @ 0x0
  1461                           
  1462  0070                     ??i1_switch_zum:	
  1463                           ; 1 bytes @ 0x0
  1464                           
  1465  0070                     ?i1_go_close:	
  1466                           ; 1 bytes @ 0x0
  1467                           
  1468  0070                     ??i1_go_close:	
  1469                           ; 1 bytes @ 0x0
  1470                           
  1471  0070                     ?i1_go_close_alt:	
  1472                           ; 1 bytes @ 0x0
  1473                           
  1474  0070                     ??i1_go_close_alt:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  0070                     ?i1_ADC_GetConversion:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480                           
  1481                           ; 2 bytes @ 0x0
  1482  0070                     	ds	2
  1483  0072                     ??_start_alarm:
  1484  0072                     ??i1_ADC_GetConversion:	
  1485                           ; 1 bytes @ 0x2
  1486                           
  1487                           
  1488                           ; 1 bytes @ 0x2
  1489  0072                     	ds	1
  1490  0073                     i1ADC_GetConversion@channel:
  1491                           
  1492                           ; 1 bytes @ 0x3
  1493  0073                     	ds	1
  1494  0074                     ??_get_measure:
  1495                           
  1496                           ; 1 bytes @ 0x4
  1497  0074                     	ds	1
  1498  0075                     get_measure@res:
  1499                           
  1500                           ; 2 bytes @ 0x5
  1501  0075                     	ds	2
  1502  0077                     ??_sec_tick_work:
  1503                           
  1504                           ; 1 bytes @ 0x7
  1505  0077                     	ds	1
  1506  0078                     ??_TMR2_ISR:
  1507  0078                     ??_TMR2_CallBack:	
  1508                           ; 1 bytes @ 0x8
  1509                           
  1510  0078                     ??_INTERRUPT_InterruptManager:	
  1511                           ; 1 bytes @ 0x8
  1512                           
  1513                           
  1514                           	psect	cstackBANK0
  1515  002B                     __pcstackBANK0:	
  1516                           ; 1 bytes @ 0x8
  1517                           
  1518  002B                     ??_PIN_MANAGER_Initialize:
  1519  002B                     ??_OSCILLATOR_Initialize:	
  1520                           ; 1 bytes @ 0x0
  1521                           
  1522  002B                     ??_WDT_Initialize:	
  1523                           ; 1 bytes @ 0x0
  1524                           
  1525  002B                     ??_FVR_Initialize:	
  1526                           ; 1 bytes @ 0x0
  1527                           
  1528  002B                     ??_ADC_Initialize:	
  1529                           ; 1 bytes @ 0x0
  1530                           
  1531  002B                     ?_TMR2_SetInterruptHandler:	
  1532                           ; 1 bytes @ 0x0
  1533                           
  1534  002B                     ?_TMR0_SetInterruptHandler:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537  002B                     ??_TMR2_StartTimer:	
  1538                           ; 1 bytes @ 0x0
  1539                           
  1540  002B                     ??_switch_zum:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543  002B                     ?_beep:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546  002B                     ??_go_close:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549  002B                     ??_go_open:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552  002B                     ??_go_close_alt:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555  002B                     ??_go_open_alt:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558  002B                     ?_ADC_GetConversion:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561  002B                     TMR2_SetInterruptHandler@InterruptHandler:	
  1562                           ; 2 bytes @ 0x0
  1563                           
  1564  002B                     TMR0_SetInterruptHandler@InterruptHandler:	
  1565                           ; 2 bytes @ 0x0
  1566                           
  1567  002B                     beep@delay:	
  1568                           ; 2 bytes @ 0x0
  1569                           
  1570                           
  1571                           ; 2 bytes @ 0x0
  1572  002B                     	ds	2
  1573  002D                     ??_TMR2_Initialize:
  1574  002D                     ??_TMR0_Initialize:	
  1575                           ; 1 bytes @ 0x2
  1576                           
  1577  002D                     ??_TMR2_SetInterruptHandler:	
  1578                           ; 1 bytes @ 0x2
  1579                           
  1580  002D                     ??_TMR0_SetInterruptHandler:	
  1581                           ; 1 bytes @ 0x2
  1582                           
  1583  002D                     ??_ADC_GetConversion:	
  1584                           ; 1 bytes @ 0x2
  1585                           
  1586  002D                     ??_povorot:	
  1587                           ; 1 bytes @ 0x2
  1588                           
  1589  002D                     beep@pause:	
  1590                           ; 1 bytes @ 0x2
  1591                           
  1592                           
  1593                           ; 2 bytes @ 0x2
  1594  002D                     	ds	1
  1595  002E                     ??_SYSTEM_Initialize:
  1596  002E                     ADC_GetConversion@channel:	
  1597                           ; 1 bytes @ 0x3
  1598                           
  1599                           
  1600                           ; 1 bytes @ 0x3
  1601  002E                     	ds	1
  1602  002F                     ??_get_fun:
  1603  002F                     ??_get_fun_full:	
  1604                           ; 1 bytes @ 0x4
  1605                           
  1606  002F                     ??_get_jump:	
  1607                           ; 1 bytes @ 0x4
  1608                           
  1609  002F                     ??_get_jump_full:	
  1610                           ; 1 bytes @ 0x4
  1611                           
  1612  002F                     ??_get_voltage:	
  1613                           ; 1 bytes @ 0x4
  1614                           
  1615  002F                     beep@time:	
  1616                           ; 1 bytes @ 0x4
  1617                           
  1618  002F                     get_voltage@res:	
  1619                           ; 1 bytes @ 0x4
  1620                           
  1621                           
  1622                           ; 2 bytes @ 0x4
  1623  002F                     	ds	1
  1624  0030                     beep@count:
  1625  0030                     get_fun@res:	
  1626                           ; 1 bytes @ 0x5
  1627                           
  1628  0030                     get_fun_full@res:	
  1629                           ; 2 bytes @ 0x5
  1630                           
  1631  0030                     get_jump@res:	
  1632                           ; 2 bytes @ 0x5
  1633                           
  1634  0030                     get_jump_full@res:	
  1635                           ; 2 bytes @ 0x5
  1636                           
  1637                           
  1638                           ; 2 bytes @ 0x5
  1639  0030                     	ds	1
  1640  0031                     ??_beep:
  1641                           
  1642                           ; 1 bytes @ 0x6
  1643  0031                     	ds	1
  1644  0032                     beep@j:
  1645  0032                     get_fun_full@flag:	
  1646                           ; 1 bytes @ 0x7
  1647                           
  1648  0032                     get_jump_full@flag:	
  1649                           ; 1 bytes @ 0x7
  1650                           
  1651                           
  1652                           ; 1 bytes @ 0x7
  1653  0032                     	ds	1
  1654  0033                     ??_start_setup:
  1655  0033                     beep@i:	
  1656                           ; 1 bytes @ 0x8
  1657                           
  1658                           
  1659                           ; 1 bytes @ 0x8
  1660  0033                     	ds	1
  1661  0034                     ??_fun_work:
  1662  0034                     ??_switch_wm:	
  1663                           ; 1 bytes @ 0x9
  1664                           
  1665                           
  1666                           ; 1 bytes @ 0x9
  1667  0034                     	ds	2
  1668  0036                     ??_main:
  1669                           
  1670                           	psect	maintext
  1671  037E                     __pmaintext:	
  1672                           ; 1 bytes @ 0xB
  1673 ;;
  1674 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1675 ;;
  1676 ;; *************** function _main *****************
  1677 ;; Defined at:
  1678 ;;		line 369 in file "main.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2, status,0, pclath, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : B1F/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1
  1692 ;;      Params:         0       0       0
  1693 ;;      Locals:         0       0       0
  1694 ;;      Temps:          0       0       0
  1695 ;;      Totals:         0       0       0
  1696 ;;Total ram usage:        0 bytes
  1697 ;; Hardware stack levels required when called: 11
  1698 ;; This function calls:
  1699 ;;		_fun_work
  1700 ;;		_get_fun
  1701 ;;		_get_jump
  1702 ;;		_get_voltage
  1703 ;;		_povorot
  1704 ;;		_start_setup
  1705 ;;		_switch_wm
  1706 ;;		_switch_zum
  1707 ;; This function is called by:
  1708 ;;		Startup code after reset
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712  037E                     _main:	
  1713                           ;psect for function _main
  1714                           
  1715  037E                     l2050:	
  1716                           ;incstack = 0
  1717                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1718                           
  1719                           
  1720                           ;main.c: 371:     start_setup();
  1721  037E  3182  2260  3183   	fcall	_start_setup
  1722  0381                     l468:	
  1723                           ;main.c: 376:     while (1) {
  1724                           
  1725                           
  1726                           ;main.c: 378:         get_voltage();
  1727  0381  3183  239C  3183   	fcall	_get_voltage
  1728  0384                     l2052:
  1729                           
  1730                           ;main.c: 379:         if (!FLAGS.bits.ALARM) {
  1731  0384  187C               	btfsc	_FLAGS,0
  1732  0385  2B87               	goto	u1381
  1733  0386  2B88               	goto	u1380
  1734  0387                     u1381:
  1735  0387  2B81               	goto	l468
  1736  0388                     u1380:
  1737  0388                     l2054:
  1738                           
  1739                           ;main.c: 380:             get_fun();
  1740  0388  3181  21AC  3183   	fcall	_get_fun
  1741                           
  1742                           ;main.c: 381:             fun_work();
  1743  038B  3180  203B  3183   	fcall	_fun_work
  1744                           
  1745                           ;main.c: 382:             get_jump();
  1746  038E  3182  2226  3183   	fcall	_get_jump
  1747                           
  1748                           ;main.c: 383:             switch_wm();
  1749  0391  3181  2123  3183   	fcall	_switch_wm
  1750                           
  1751                           ;main.c: 384:             povorot();
  1752  0394  3180  2094  3183   	fcall	_povorot
  1753  0397                     l2056:
  1754                           
  1755                           ;main.c: 386:             switch_zum();
  1756  0397  3184  243B  3183   	fcall	_switch_zum
  1757  039A  2B81               	goto	l468
  1758  039B  2826               	ljmp	start
  1759  039C                     __end_of_main:
  1760                           
  1761                           	psect	text1
  1762  0123                     __ptext1:	
  1763 ;; *************** function _switch_wm *****************
  1764 ;; Defined at:
  1765 ;;		line 306 in file "main.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;		None
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;		None
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		wreg, status,2, status,0, pclath, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMMON   BANK0   BANK1
  1779 ;;      Params:         0       0       0
  1780 ;;      Locals:         0       0       0
  1781 ;;      Temps:          0       2       0
  1782 ;;      Totals:         0       2       0
  1783 ;;Total ram usage:        2 bytes
  1784 ;; Hardware stack levels used: 1
  1785 ;; Hardware stack levels required when called: 9
  1786 ;; This function calls:
  1787 ;;		_beep
  1788 ;;		_go_close
  1789 ;;		_go_close_alt
  1790 ;; This function is called by:
  1791 ;;		_main
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795  0123                     _switch_wm:	
  1796                           ;psect for function _switch_wm
  1797                           
  1798  0123                     l1976:	
  1799                           ;incstack = 0
  1800                           ; Regs used in _switch_wm: [wreg+status,2+status,0+pclath+cstack]
  1801                           
  1802                           
  1803                           ;main.c: 307:     if (FLAGS.bits._JUMP_CONNECTED) {
  1804  0123  1E7C               	btfss	_FLAGS,4
  1805  0124  2926               	goto	u1271
  1806  0125  2927               	goto	u1270
  1807  0126                     u1271:
  1808  0126  2948               	goto	l428
  1809  0127                     u1270:
  1810  0127                     l1978:
  1811                           
  1812                           ;main.c: 308:         if (FLAGS.bits.NORMAL_WORK_MODE) {
  1813  0127  1CFC               	btfss	_FLAGS,1
  1814  0128  292A               	goto	u1281
  1815  0129  292B               	goto	u1280
  1816  012A                     u1281:
  1817  012A  2968               	goto	l434
  1818  012B                     u1280:
  1819  012B                     l1980:
  1820                           
  1821                           ;main.c: 309:             FLAGS.bits.NORMAL_WORK_MODE = 0;
  1822  012B  10FC               	bcf	_FLAGS,1
  1823                           
  1824                           ;main.c: 310:             if (FLAGS.bits.CLOSED) go_close_alt();
  1825  012C  1D7C               	btfss	_FLAGS,2
  1826  012D  292F               	goto	u1291
  1827  012E  2930               	goto	u1290
  1828  012F                     u1291:
  1829  012F  2933               	goto	l1984
  1830  0130                     u1290:
  1831  0130                     l1982:
  1832  0130  3184  24B9  3181   	fcall	_go_close_alt
  1833  0133                     l1984:
  1834                           
  1835                           ;main.c: 312:             beep(250, 100, 40, 3);
  1836  0133  30FA               	movlw	250
  1837  0134  0020               	movlb	0	; select bank0
  1838  0135  00AB               	movwf	beep@delay
  1839  0136  3000               	movlw	0
  1840  0137  00AC               	movwf	beep@delay+1
  1841  0138  3064               	movlw	100
  1842  0139  00AD               	movwf	beep@pause
  1843  013A  3000               	movlw	0
  1844  013B  00AE               	movwf	beep@pause+1
  1845  013C  3028               	movlw	40
  1846  013D  00B4               	movwf	??_switch_wm
  1847  013E  0834               	movf	??_switch_wm,w
  1848  013F  00AF               	movwf	beep@time
  1849  0140  3003               	movlw	3
  1850  0141  00B5               	movwf	??_switch_wm+1
  1851  0142  0835               	movf	??_switch_wm+1,w
  1852  0143  00B0               	movwf	beep@count
  1853  0144  3182  22C7  3181   	fcall	_beep
  1854  0147  2968               	goto	l434
  1855  0148                     l428:
  1856                           
  1857                           ;main.c: 315:         if (!FLAGS.bits.NORMAL_WORK_MODE) {
  1858  0148  18FC               	btfsc	_FLAGS,1
  1859  0149  294B               	goto	u1301
  1860  014A  294C               	goto	u1300
  1861  014B                     u1301:
  1862  014B  2968               	goto	l434
  1863  014C                     u1300:
  1864  014C                     l1986:
  1865                           
  1866                           ;main.c: 316:             FLAGS.bits.NORMAL_WORK_MODE = 1;
  1867  014C  14FC               	bsf	_FLAGS,1
  1868                           
  1869                           ;main.c: 317:             if (FLAGS.bits.CLOSED) go_close();
  1870  014D  1D7C               	btfss	_FLAGS,2
  1871  014E  2950               	goto	u1311
  1872  014F  2951               	goto	u1310
  1873  0150                     u1311:
  1874  0150  2954               	goto	l433
  1875  0151                     u1310:
  1876  0151                     l1988:
  1877  0151  3183  231B  3181   	fcall	_go_close
  1878  0154                     l433:
  1879                           
  1880                           ;main.c: 319:             beep(250, 100, 40, 2);
  1881  0154  30FA               	movlw	250
  1882  0155  0020               	movlb	0	; select bank0
  1883  0156  00AB               	movwf	beep@delay
  1884  0157  3000               	movlw	0
  1885  0158  00AC               	movwf	beep@delay+1
  1886  0159  3064               	movlw	100
  1887  015A  00AD               	movwf	beep@pause
  1888  015B  3000               	movlw	0
  1889  015C  00AE               	movwf	beep@pause+1
  1890  015D  3028               	movlw	40
  1891  015E  00B4               	movwf	??_switch_wm
  1892  015F  0834               	movf	??_switch_wm,w
  1893  0160  00AF               	movwf	beep@time
  1894  0161  3002               	movlw	2
  1895  0162  00B5               	movwf	??_switch_wm+1
  1896  0163  0835               	movf	??_switch_wm+1,w
  1897  0164  00B0               	movwf	beep@count
  1898  0165  3182  22C7  3181   	fcall	_beep
  1899  0168                     l434:
  1900  0168  0008               	return
  1901  0169                     __end_of_switch_wm:
  1902                           
  1903                           	psect	text2
  1904  0260                     __ptext2:	
  1905 ;; *************** function _start_setup *****************
  1906 ;; Defined at:
  1907 ;;		line 334 in file "main.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		wreg, status,2, status,0, pclath, cstack
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1
  1921 ;;      Params:         0       0       0
  1922 ;;      Locals:         0       0       0
  1923 ;;      Temps:          0       0       0
  1924 ;;      Totals:         0       0       0
  1925 ;;Total ram usage:        0 bytes
  1926 ;; Hardware stack levels used: 1
  1927 ;; Hardware stack levels required when called: 10
  1928 ;; This function calls:
  1929 ;;		_SYSTEM_Initialize
  1930 ;;		_TMR0_SetInterruptHandler
  1931 ;;		_TMR2_SetInterruptHandler
  1932 ;;		_TMR2_StartTimer
  1933 ;;		_get_fun_full
  1934 ;;		_get_jump_full
  1935 ;; This function is called by:
  1936 ;;		_main
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940  0260                     _start_setup:	
  1941                           ;psect for function _start_setup
  1942                           
  1943  0260                     l1996:	
  1944                           ;incstack = 0
  1945                           ; Regs used in _start_setup: [wreg+status,2+status,0+pclath+cstack]
  1946                           
  1947                           
  1948                           ;main.c: 336:     SYSTEM_Initialize();
  1949  0260  3183  23D2  3182   	fcall	_SYSTEM_Initialize
  1950  0263                     l1998:
  1951                           
  1952                           ;main.c: 337:     (INTCONbits.GIE = 1);
  1953  0263  178B               	bsf	11,7	;volatile
  1954  0264                     l2000:
  1955                           
  1956                           ;main.c: 338:     (INTCONbits.PEIE = 1);
  1957  0264  170B               	bsf	11,6	;volatile
  1958                           
  1959                           ;main.c: 341:     TMR0_SetInterruptHandler(switch_zum);
  1960  0265  303B               	movlw	low _switch_zum
  1961  0266  0020               	movlb	0	; select bank0
  1962  0267  00AB               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1963  0268  3004               	movlw	high _switch_zum
  1964  0269  00AC               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1965  026A  3184  24AE  3182   	fcall	_TMR0_SetInterruptHandler
  1966                           
  1967                           ;main.c: 342:     TMR2_SetInterruptHandler(sec_tick_work);
  1968  026D  30EA               	movlw	low _sec_tick_work
  1969  026E  0020               	movlb	0	; select bank0
  1970  026F  00AB               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  1971  0270  3001               	movlw	high _sec_tick_work
  1972  0271  00AC               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  1973  0272  3184  24A8  3182   	fcall	_TMR2_SetInterruptHandler
  1974  0275                     l2002:
  1975                           
  1976                           ;main.c: 343:     TMR2_StartTimer();
  1977  0275  3184  24D7  3182   	fcall	_TMR2_StartTimer
  1978  0278                     l2004:
  1979  0278  0023               	movlb	3	; select bank3
  1980  0279  118E               	bcf	14,3	;volatile
  1981  027A                     l2006:
  1982  027A  108C               	bcf	12,1	;volatile
  1983  027B                     l2008:
  1984  027B  110E               	bcf	14,2	;volatile
  1985  027C                     l2010:
  1986  027C  0024               	movlb	4	; select bank4
  1987  027D  108C               	bcf	12,1	;volatile
  1988  027E                     l2012:
  1989  027E  0021               	movlb	1	; select bank1
  1990  027F  148C               	bsf	12,1	;volatile
  1991  0280                     l2014:
  1992  0280  0024               	movlb	4	; select bank4
  1993  0281  110E               	bcf	14,2	;volatile
  1994  0282                     l2016:
  1995  0282  0021               	movlb	1	; select bank1
  1996  0283  150E               	bsf	14,2	;volatile
  1997  0284                     l2018:
  1998                           
  1999                           ;main.c: 355:     INTCONbits.TMR0IE = 0;
  2000  0284  128B               	bcf	11,5	;volatile
  2001  0285                     l2020:
  2002                           
  2003                           ;main.c: 356:     FLAGS.value = 0;
  2004  0285  01FC               	clrf	_FLAGS
  2005  0286                     l2022:
  2006  0286  0022               	movlb	2	; select bank2
  2007  0287  128E               	bcf	14,5	;volatile
  2008  0288                     l2024:
  2009  0288  120E               	bcf	14,4	;volatile
  2010  0289                     l2026:
  2011  0289  100E               	bcf	14,0	;volatile
  2012  028A                     l2028:
  2013  028A  0021               	movlb	1	; select bank1
  2014  028B  100E               	bcf	14,0	;volatile
  2015  028C                     l2030:
  2016                           
  2017                           ;main.c: 363:     get_fun_full();
  2018  028C  3180  20DC  3182   	fcall	_get_fun_full
  2019  028F                     l2032:
  2020                           
  2021                           ;main.c: 364:     get_jump_full();
  2022  028F  3181  2169  3182   	fcall	_get_jump_full
  2023  0292                     l2034:
  2024                           
  2025                           ;main.c: 365:     time_pow_s = 0;
  2026  0292  0020               	movlb	0	; select bank0
  2027  0293  01AA               	clrf	_time_pow_s
  2028  0294                     l463:
  2029  0294  0008               	return
  2030  0295                     __end_of_start_setup:
  2031                           
  2032                           	psect	text3
  2033  0169                     __ptext3:	
  2034 ;; *************** function _get_jump_full *****************
  2035 ;; Defined at:
  2036 ;;		line 203 in file "main.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;		None
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  res             2    5[BANK0 ] unsigned int 
  2041 ;;  flag            1    7[BANK0 ] unsigned char 
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, status,2, status,0, pclath, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMMON   BANK0   BANK1
  2051 ;;      Params:         0       0       0
  2052 ;;      Locals:         0       3       0
  2053 ;;      Temps:          0       1       0
  2054 ;;      Totals:         0       4       0
  2055 ;;Total ram usage:        4 bytes
  2056 ;; Hardware stack levels used: 1
  2057 ;; Hardware stack levels required when called: 8
  2058 ;; This function calls:
  2059 ;;		_ADC_GetConversion
  2060 ;; This function is called by:
  2061 ;;		_start_setup
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065  0169                     _get_jump_full:	
  2066                           ;psect for function _get_jump_full
  2067                           
  2068  0169                     l374:	
  2069                           ;incstack = 0
  2070                           ; Regs used in _get_jump_full: [wreg+status,2+status,0+pclath+cstack]
  2071                           ;main.c: 205:     static signed char jump_counter;;main.c: 206:     do { ANSELAbits.ANSA
      +                          1 = 1; } while(0);
  2072                           
  2073  0169  0023               	movlb	3	; select bank3
  2074  016A  148C               	bsf	12,1	;volatile
  2075  016B                     l1828:
  2076                           
  2077                           ;main.c: 207:     char flag = 0;
  2078  016B  0020               	movlb	0	; select bank0
  2079  016C  01B2               	clrf	get_jump_full@flag
  2080  016D                     l1830:
  2081                           
  2082                           ;main.c: 209:         unsigned res = ADC_GetConversion(PIN_JUMP_STATE);
  2083  016D  3001               	movlw	1
  2084  016E  3183  233D  3181   	fcall	_ADC_GetConversion
  2085  0171  0020               	movlb	0	; select bank0
  2086  0172  082C               	movf	?_ADC_GetConversion+1,w
  2087  0173  00B1               	movwf	get_jump_full@res+1
  2088  0174  082B               	movf	?_ADC_GetConversion,w
  2089  0175  00B0               	movwf	get_jump_full@res
  2090  0176                     l1832:
  2091                           
  2092                           ;main.c: 210:         if (res < 2000) jump_counter--;
  2093  0176  3007               	movlw	7
  2094  0177  0231               	subwf	get_jump_full@res+1,w
  2095  0178  30D0               	movlw	208
  2096  0179  1903               	skipnz
  2097  017A  0230               	subwf	get_jump_full@res,w
  2098  017B  1803               	skipnc
  2099  017C  297E               	goto	u961
  2100  017D  297F               	goto	u960
  2101  017E                     u961:
  2102  017E  2984               	goto	l1836
  2103  017F                     u960:
  2104  017F                     l1834:
  2105  017F  30FF               	movlw	255
  2106  0180  00AF               	movwf	??_get_jump_full
  2107  0181  082F               	movf	??_get_jump_full,w
  2108  0182  07A6               	addwf	get_jump_full@jump_counter,f
  2109  0183  2988               	goto	l1838
  2110  0184                     l1836:
  2111  0184  3001               	movlw	1
  2112  0185  00AF               	movwf	??_get_jump_full
  2113  0186  082F               	movf	??_get_jump_full,w
  2114  0187  07A6               	addwf	get_jump_full@jump_counter,f
  2115  0188                     l1838:
  2116                           
  2117                           ;main.c: 213:         if (jump_counter > 10) {
  2118  0188  0826               	movf	get_jump_full@jump_counter,w
  2119  0189  3A80               	xorlw	128
  2120  018A  3E75               	addlw	-139
  2121  018B  1C03               	skipc
  2122  018C  298E               	goto	u971
  2123  018D  298F               	goto	u970
  2124  018E                     u971:
  2125  018E  2997               	goto	l1846
  2126  018F                     u970:
  2127  018F                     l1840:
  2128                           
  2129                           ;main.c: 214:             jump_counter = 10;
  2130  018F  300A               	movlw	10
  2131  0190  00AF               	movwf	??_get_jump_full
  2132  0191  082F               	movf	??_get_jump_full,w
  2133  0192  00A6               	movwf	get_jump_full@jump_counter
  2134  0193                     l1842:
  2135                           
  2136                           ;main.c: 215:             FLAGS.bits._JUMP_CONNECTED = 0;
  2137  0193  127C               	bcf	_FLAGS,4
  2138  0194                     l1844:
  2139                           
  2140                           ;main.c: 216:             flag = 1;
  2141  0194  01B2               	clrf	get_jump_full@flag
  2142  0195  0AB2               	incf	get_jump_full@flag,f
  2143                           
  2144                           ;main.c: 217:         } else if (jump_counter<-10) {
  2145  0196  29A4               	goto	l1854
  2146  0197                     l1846:
  2147  0197  0826               	movf	get_jump_full@jump_counter,w
  2148  0198  3A80               	xorlw	128
  2149  0199  3E8A               	addlw	138
  2150  019A  1803               	skipnc
  2151  019B  299D               	goto	u981
  2152  019C  299E               	goto	u980
  2153  019D                     u981:
  2154  019D  29A4               	goto	l1854
  2155  019E                     u980:
  2156  019E                     l1848:
  2157                           
  2158                           ;main.c: 218:             jump_counter = -10;
  2159  019E  30F6               	movlw	246
  2160  019F  00AF               	movwf	??_get_jump_full
  2161  01A0  082F               	movf	??_get_jump_full,w
  2162  01A1  00A6               	movwf	get_jump_full@jump_counter
  2163  01A2                     l1850:
  2164                           
  2165                           ;main.c: 219:             FLAGS.bits._JUMP_CONNECTED = 1;
  2166  01A2  167C               	bsf	_FLAGS,4
  2167  01A3  2994               	goto	l1844
  2168  01A4                     l1854:
  2169                           
  2170                           ;main.c: 222:     } while (flag == 0);
  2171  01A4  0832               	movf	get_jump_full@flag,w
  2172  01A5  1903               	btfsc	3,2
  2173  01A6  29A8               	goto	u991
  2174  01A7  29A9               	goto	u990
  2175  01A8                     u991:
  2176  01A8  296D               	goto	l1830
  2177  01A9                     u990:
  2178  01A9                     l383:	
  2179                           ;main.c: 223:     do { ANSELAbits.ANSA1 = 0; } while(0);
  2180                           
  2181  01A9  0023               	movlb	3	; select bank3
  2182  01AA  108C               	bcf	12,1	;volatile
  2183  01AB                     l385:
  2184  01AB  0008               	return
  2185  01AC                     __end_of_get_jump_full:
  2186                           
  2187                           	psect	text4
  2188  00DC                     __ptext4:	
  2189 ;; *************** function _get_fun_full *****************
  2190 ;; Defined at:
  2191 ;;		line 156 in file "main.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;		None
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  res             2    5[BANK0 ] unsigned int 
  2196 ;;  flag            1    7[BANK0 ] unsigned char 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0, pclath, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMMON   BANK0   BANK1
  2206 ;;      Params:         0       0       0
  2207 ;;      Locals:         0       3       0
  2208 ;;      Temps:          0       1       0
  2209 ;;      Totals:         0       4       0
  2210 ;;Total ram usage:        4 bytes
  2211 ;; Hardware stack levels used: 1
  2212 ;; Hardware stack levels required when called: 8
  2213 ;; This function calls:
  2214 ;;		_ADC_GetConversion
  2215 ;; This function is called by:
  2216 ;;		_start_setup
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220  00DC                     _get_fun_full:	
  2221                           ;psect for function _get_fun_full
  2222                           
  2223  00DC                     l340:	
  2224                           ;incstack = 0
  2225                           ; Regs used in _get_fun_full: [wreg+status,2+status,0+pclath+cstack]
  2226                           ;main.c: 158:     static signed char fun_counter;;main.c: 159:     do { LATCbits.LATC1 =
      +                           1; } while(0);
  2227                           
  2228  00DC  0022               	movlb	2	; select bank2
  2229  00DD  148E               	bsf	14,1	;volatile
  2230  00DE                     l342:	
  2231                           ;main.c: 160:     do { ANSELCbits.ANSC2 = 1; } while(0);
  2232                           
  2233  00DE  0023               	movlb	3	; select bank3
  2234  00DF  150E               	bsf	14,2	;volatile
  2235  00E0                     l1800:
  2236                           
  2237                           ;main.c: 161:     char flag = 0;
  2238  00E0  0020               	movlb	0	; select bank0
  2239  00E1  01B2               	clrf	get_fun_full@flag
  2240  00E2                     l1802:
  2241                           
  2242                           ;main.c: 163:         unsigned res = ADC_GetConversion(PIN_FUN_STATE);
  2243  00E2  3006               	movlw	6
  2244  00E3  3183  233D  3180   	fcall	_ADC_GetConversion
  2245  00E6  0020               	movlb	0	; select bank0
  2246  00E7  082C               	movf	?_ADC_GetConversion+1,w
  2247  00E8  00B1               	movwf	get_fun_full@res+1
  2248  00E9  082B               	movf	?_ADC_GetConversion,w
  2249  00EA  00B0               	movwf	get_fun_full@res
  2250  00EB                     l1804:
  2251                           
  2252                           ;main.c: 164:         if (res < 2000) fun_counter--;
  2253  00EB  3007               	movlw	7
  2254  00EC  0231               	subwf	get_fun_full@res+1,w
  2255  00ED  30D0               	movlw	208
  2256  00EE  1903               	skipnz
  2257  00EF  0230               	subwf	get_fun_full@res,w
  2258  00F0  1803               	skipnc
  2259  00F1  28F3               	goto	u921
  2260  00F2  28F4               	goto	u920
  2261  00F3                     u921:
  2262  00F3  28F9               	goto	l1808
  2263  00F4                     u920:
  2264  00F4                     l1806:
  2265  00F4  30FF               	movlw	255
  2266  00F5  00AF               	movwf	??_get_fun_full
  2267  00F6  082F               	movf	??_get_fun_full,w
  2268  00F7  07A8               	addwf	get_fun_full@fun_counter,f
  2269  00F8  28FD               	goto	l1810
  2270  00F9                     l1808:
  2271  00F9  3001               	movlw	1
  2272  00FA  00AF               	movwf	??_get_fun_full
  2273  00FB  082F               	movf	??_get_fun_full,w
  2274  00FC  07A8               	addwf	get_fun_full@fun_counter,f
  2275  00FD                     l1810:
  2276                           
  2277                           ;main.c: 166:         if (fun_counter > 10) {
  2278  00FD  0828               	movf	get_fun_full@fun_counter,w
  2279  00FE  3A80               	xorlw	128
  2280  00FF  3E75               	addlw	-139
  2281  0100  1C03               	skipc
  2282  0101  2903               	goto	u931
  2283  0102  2904               	goto	u930
  2284  0103                     u931:
  2285  0103  290C               	goto	l1818
  2286  0104                     u930:
  2287  0104                     l1812:
  2288                           
  2289                           ;main.c: 167:             fun_counter = 10;
  2290  0104  300A               	movlw	10
  2291  0105  00AF               	movwf	??_get_fun_full
  2292  0106  082F               	movf	??_get_fun_full,w
  2293  0107  00A8               	movwf	get_fun_full@fun_counter
  2294  0108                     l1814:
  2295                           
  2296                           ;main.c: 168:             FLAGS.bits._FUN_CONNECTED = 0;
  2297  0108  11FC               	bcf	_FLAGS,3
  2298  0109                     l1816:
  2299                           
  2300                           ;main.c: 169:             flag = 1;
  2301  0109  01B2               	clrf	get_fun_full@flag
  2302  010A  0AB2               	incf	get_fun_full@flag,f
  2303                           
  2304                           ;main.c: 170:         } else if (fun_counter<-10) {
  2305  010B  2919               	goto	l1826
  2306  010C                     l1818:
  2307  010C  0828               	movf	get_fun_full@fun_counter,w
  2308  010D  3A80               	xorlw	128
  2309  010E  3E8A               	addlw	138
  2310  010F  1803               	skipnc
  2311  0110  2912               	goto	u941
  2312  0111  2913               	goto	u940
  2313  0112                     u941:
  2314  0112  2919               	goto	l1826
  2315  0113                     u940:
  2316  0113                     l1820:
  2317                           
  2318                           ;main.c: 171:             fun_counter = -10;
  2319  0113  30F6               	movlw	246
  2320  0114  00AF               	movwf	??_get_fun_full
  2321  0115  082F               	movf	??_get_fun_full,w
  2322  0116  00A8               	movwf	get_fun_full@fun_counter
  2323  0117                     l1822:
  2324                           
  2325                           ;main.c: 172:             FLAGS.bits._FUN_CONNECTED = 1;
  2326  0117  15FC               	bsf	_FLAGS,3
  2327  0118  2909               	goto	l1816
  2328  0119                     l1826:
  2329                           
  2330                           ;main.c: 175:     } while (flag == 0);
  2331  0119  0832               	movf	get_fun_full@flag,w
  2332  011A  1903               	btfsc	3,2
  2333  011B  291D               	goto	u951
  2334  011C  291E               	goto	u950
  2335  011D                     u951:
  2336  011D  28E2               	goto	l1802
  2337  011E                     u950:
  2338  011E                     l351:	
  2339                           ;main.c: 177:     do { ANSELCbits.ANSC2 = 0; } while(0);
  2340                           
  2341  011E  0023               	movlb	3	; select bank3
  2342  011F  110E               	bcf	14,2	;volatile
  2343  0120                     l353:	
  2344                           ;main.c: 178:     do { LATCbits.LATC1 = 0; } while(0);
  2345                           
  2346  0120  0022               	movlb	2	; select bank2
  2347  0121  108E               	bcf	14,1	;volatile
  2348  0122                     l355:
  2349  0122  0008               	return
  2350  0123                     __end_of_get_fun_full:
  2351                           
  2352                           	psect	text5
  2353  04D7                     __ptext5:	
  2354 ;; *************** function _TMR2_StartTimer *****************
  2355 ;; Defined at:
  2356 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;		None
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;		None
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      void 
  2363 ;; Registers used:
  2364 ;;		None
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMMON   BANK0   BANK1
  2370 ;;      Params:         0       0       0
  2371 ;;      Locals:         0       0       0
  2372 ;;      Temps:          0       0       0
  2373 ;;      Totals:         0       0       0
  2374 ;;Total ram usage:        0 bytes
  2375 ;; Hardware stack levels used: 1
  2376 ;; Hardware stack levels required when called: 7
  2377 ;; This function calls:
  2378 ;;		Nothing
  2379 ;; This function is called by:
  2380 ;;		_start_setup
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384  04D7                     _TMR2_StartTimer:	
  2385                           ;psect for function _TMR2_StartTimer
  2386                           
  2387  04D7                     l1754:	
  2388                           ;incstack = 0
  2389                           ; Regs used in _TMR2_StartTimer: []
  2390                           
  2391                           
  2392                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  2393  04D7  0020               	movlb	0	; select bank0
  2394  04D8  151C               	bsf	28,2	;volatile
  2395  04D9                     l142:
  2396  04D9  0008               	return
  2397  04DA                     __end_of_TMR2_StartTimer:
  2398                           
  2399                           	psect	text6
  2400  03D2                     __ptext6:	
  2401 ;; *************** function _SYSTEM_Initialize *****************
  2402 ;; Defined at:
  2403 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;		None
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;		None
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  1    wreg      void 
  2410 ;; Registers used:
  2411 ;;		wreg, status,2, status,0, pclath, cstack
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMMON   BANK0   BANK1
  2417 ;;      Params:         0       0       0
  2418 ;;      Locals:         0       0       0
  2419 ;;      Temps:          0       0       0
  2420 ;;      Totals:         0       0       0
  2421 ;;Total ram usage:        0 bytes
  2422 ;; Hardware stack levels used: 1
  2423 ;; Hardware stack levels required when called: 9
  2424 ;; This function calls:
  2425 ;;		_ADC_Initialize
  2426 ;;		_FVR_Initialize
  2427 ;;		_OSCILLATOR_Initialize
  2428 ;;		_PIN_MANAGER_Initialize
  2429 ;;		_TMR0_Initialize
  2430 ;;		_TMR2_Initialize
  2431 ;;		_WDT_Initialize
  2432 ;; This function is called by:
  2433 ;;		_start_setup
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437  03D2                     _SYSTEM_Initialize:	
  2438                           ;psect for function _SYSTEM_Initialize
  2439                           
  2440  03D2                     l1752:	
  2441                           ;incstack = 0
  2442                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2443                           
  2444                           
  2445                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2446  03D2  3183  23FE  3183   	fcall	_PIN_MANAGER_Initialize
  2447                           
  2448                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2449  03D5  3184  24A1  3183   	fcall	_OSCILLATOR_Initialize
  2450                           
  2451                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2452  03D8  3184  24CF  3183   	fcall	_WDT_Initialize
  2453                           
  2454                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  2455  03DB  3184  24D3  3183   	fcall	_FVR_Initialize
  2456                           
  2457                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2458  03DE  3184  2499  3183   	fcall	_ADC_Initialize
  2459                           
  2460                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  2461  03E1  3184  2428  3183   	fcall	_TMR2_Initialize
  2462                           
  2463                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  2464  03E4  3183  23E8  3183   	fcall	_TMR0_Initialize
  2465  03E7                     l25:
  2466  03E7  0008               	return
  2467  03E8                     __end_of_SYSTEM_Initialize:
  2468                           
  2469                           	psect	text7
  2470  04CF                     __ptext7:	
  2471 ;; *************** function _WDT_Initialize *****************
  2472 ;; Defined at:
  2473 ;;		line 72 in file "mcc_generated_files/mcc.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;		None
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;		None
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  1    wreg      void 
  2480 ;; Registers used:
  2481 ;;		wreg
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMMON   BANK0   BANK1
  2487 ;;      Params:         0       0       0
  2488 ;;      Locals:         0       0       0
  2489 ;;      Temps:          0       0       0
  2490 ;;      Totals:         0       0       0
  2491 ;;Total ram usage:        0 bytes
  2492 ;; Hardware stack levels used: 1
  2493 ;; Hardware stack levels required when called: 7
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		_SYSTEM_Initialize
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501  04CF                     _WDT_Initialize:	
  2502                           ;psect for function _WDT_Initialize
  2503                           
  2504  04CF                     l1684:	
  2505                           ;incstack = 0
  2506                           ; Regs used in _WDT_Initialize: [wreg]
  2507                           
  2508                           
  2509                           ;mcc_generated_files/mcc.c: 75:     WDTCON = 0x16;
  2510  04CF  3016               	movlw	22
  2511  04D0  0021               	movlb	1	; select bank1
  2512  04D1  0097               	movwf	23	;volatile
  2513  04D2                     l31:
  2514  04D2  0008               	return
  2515  04D3                     __end_of_WDT_Initialize:
  2516                           
  2517                           	psect	text8
  2518  0428                     __ptext8:	
  2519 ;; *************** function _TMR2_Initialize *****************
  2520 ;; Defined at:
  2521 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;		None
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;		None
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      void 
  2528 ;; Registers used:
  2529 ;;		wreg, status,2, status,0, pclath, cstack
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMMON   BANK0   BANK1
  2535 ;;      Params:         0       0       0
  2536 ;;      Locals:         0       0       0
  2537 ;;      Temps:          0       0       0
  2538 ;;      Totals:         0       0       0
  2539 ;;Total ram usage:        0 bytes
  2540 ;; Hardware stack levels used: 1
  2541 ;; Hardware stack levels required when called: 8
  2542 ;; This function calls:
  2543 ;;		_TMR2_SetInterruptHandler
  2544 ;; This function is called by:
  2545 ;;		_SYSTEM_Initialize
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549  0428                     _TMR2_Initialize:	
  2550                           ;psect for function _TMR2_Initialize
  2551                           
  2552  0428                     l1694:	
  2553                           ;incstack = 0
  2554                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2555                           
  2556                           
  2557                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xF9;
  2558  0428  30F9               	movlw	249
  2559  0429  0020               	movlb	0	; select bank0
  2560  042A  009B               	movwf	27	;volatile
  2561  042B                     l1696:
  2562                           
  2563                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  2564  042B  019A               	clrf	26	;volatile
  2565  042C                     l1698:
  2566                           
  2567                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  2568  042C  1091               	bcf	17,1	;volatile
  2569  042D                     l1700:
  2570                           
  2571                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  2572  042D  0021               	movlb	1	; select bank1
  2573  042E  1491               	bsf	17,1	;volatile
  2574  042F                     l1702:
  2575                           
  2576                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  2577  042F  30DA               	movlw	low _TMR2_DefaultInterruptHandler
  2578  0430  0020               	movlb	0	; select bank0
  2579  0431  00AB               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2580  0432  3004               	movlw	high _TMR2_DefaultInterruptHandler
  2581  0433  00AC               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2582  0434  3184  24A8  3184   	fcall	_TMR2_SetInterruptHandler
  2583  0437                     l1704:
  2584                           
  2585                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x4E;
  2586  0437  304E               	movlw	78
  2587  0438  0020               	movlb	0	; select bank0
  2588  0439  009C               	movwf	28	;volatile
  2589  043A                     l139:
  2590  043A  0008               	return
  2591  043B                     __end_of_TMR2_Initialize:
  2592                           
  2593                           	psect	text9
  2594  04A8                     __ptext9:	
  2595 ;; *************** function _TMR2_SetInterruptHandler *****************
  2596 ;; Defined at:
  2597 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2600 ;;		 -> sec_tick_work(1), TMR2_DefaultInterruptHandler(1), 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;		None
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      void 
  2605 ;; Registers used:
  2606 ;;		wreg
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMMON   BANK0   BANK1
  2612 ;;      Params:         0       2       0
  2613 ;;      Locals:         0       0       0
  2614 ;;      Temps:          0       0       0
  2615 ;;      Totals:         0       2       0
  2616 ;;Total ram usage:        2 bytes
  2617 ;; Hardware stack levels used: 1
  2618 ;; Hardware stack levels required when called: 7
  2619 ;; This function calls:
  2620 ;;		Nothing
  2621 ;; This function is called by:
  2622 ;;		_TMR2_Initialize
  2623 ;;		_start_setup
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627  04A8                     _TMR2_SetInterruptHandler:	
  2628                           ;psect for function _TMR2_SetInterruptHandler
  2629                           
  2630  04A8                     l1624:	
  2631                           ;incstack = 0
  2632                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2633                           
  2634                           
  2635                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  2636  04A8  0020               	movlb	0	; select bank0
  2637  04A9  082C               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2638  04AA  00B9               	movwf	_TMR2_InterruptHandler+1
  2639  04AB  082B               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2640  04AC  00B8               	movwf	_TMR2_InterruptHandler
  2641  04AD                     l167:
  2642  04AD  0008               	return
  2643  04AE                     __end_of_TMR2_SetInterruptHandler:
  2644                           
  2645                           	psect	text10
  2646  03E8                     __ptext10:	
  2647 ;; *************** function _TMR0_Initialize *****************
  2648 ;; Defined at:
  2649 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;		None
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;		None
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg, status,2, status,0, pclath, cstack
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMMON   BANK0   BANK1
  2663 ;;      Params:         0       0       0
  2664 ;;      Locals:         0       0       0
  2665 ;;      Temps:          0       1       0
  2666 ;;      Totals:         0       1       0
  2667 ;;Total ram usage:        1 bytes
  2668 ;; Hardware stack levels used: 1
  2669 ;; Hardware stack levels required when called: 8
  2670 ;; This function calls:
  2671 ;;		_TMR0_SetInterruptHandler
  2672 ;; This function is called by:
  2673 ;;		_SYSTEM_Initialize
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677  03E8                     _TMR0_Initialize:	
  2678                           ;psect for function _TMR0_Initialize
  2679                           
  2680  03E8                     l1706:	
  2681                           ;incstack = 0
  2682                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2683                           
  2684                           
  2685                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD2 
      +                          & 0x3F));
  2686  03E8  0021               	movlb	1	; select bank1
  2687  03E9  0815               	movf	21,w	;volatile
  2688  03EA  39C0               	andlw	192
  2689  03EB  3812               	iorlw	18
  2690  03EC  0095               	movwf	21	;volatile
  2691  03ED                     l1708:
  2692                           
  2693                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x9C;
  2694  03ED  309C               	movlw	156
  2695  03EE  0020               	movlb	0	; select bank0
  2696  03EF  0095               	movwf	21	;volatile
  2697  03F0                     l1710:
  2698                           
  2699                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 156;
  2700  03F0  309C               	movlw	156
  2701  03F1  00AD               	movwf	??_TMR0_Initialize
  2702  03F2  082D               	movf	??_TMR0_Initialize,w
  2703  03F3  00BA               	movwf	_timer0ReloadVal	;volatile
  2704  03F4                     l1712:
  2705                           
  2706                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  2707  03F4  110B               	bcf	11,2	;volatile
  2708  03F5                     l1714:
  2709                           
  2710                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  2711  03F5  168B               	bsf	11,5	;volatile
  2712  03F6                     l1716:
  2713                           
  2714                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2715  03F6  30DB               	movlw	low _TMR0_DefaultInterruptHandler
  2716  03F7  00AB               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2717  03F8  3004               	movlw	high _TMR0_DefaultInterruptHandler
  2718  03F9  00AC               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2719  03FA  3184  24AE  3183   	fcall	_TMR0_SetInterruptHandler
  2720  03FD                     l187:
  2721  03FD  0008               	return
  2722  03FE                     __end_of_TMR0_Initialize:
  2723                           
  2724                           	psect	text11
  2725  04AE                     __ptext11:	
  2726 ;; *************** function _TMR0_SetInterruptHandler *****************
  2727 ;; Defined at:
  2728 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2731 ;;		 -> switch_zum(1), TMR0_DefaultInterruptHandler(1), 
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMMON   BANK0   BANK1
  2743 ;;      Params:         0       2       0
  2744 ;;      Locals:         0       0       0
  2745 ;;      Temps:          0       0       0
  2746 ;;      Totals:         0       2       0
  2747 ;;Total ram usage:        2 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; Hardware stack levels required when called: 7
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_TMR0_Initialize
  2754 ;;		_start_setup
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758  04AE                     _TMR0_SetInterruptHandler:	
  2759                           ;psect for function _TMR0_SetInterruptHandler
  2760                           
  2761  04AE                     l1626:	
  2762                           ;incstack = 0
  2763                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2764                           
  2765                           
  2766                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  2767  04AE  0020               	movlb	0	; select bank0
  2768  04AF  082C               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2769  04B0  00B7               	movwf	_TMR0_InterruptHandler+1
  2770  04B1  082B               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2771  04B2  00B6               	movwf	_TMR0_InterruptHandler
  2772  04B3                     l203:
  2773  04B3  0008               	return
  2774  04B4                     __end_of_TMR0_SetInterruptHandler:
  2775                           
  2776                           	psect	text12
  2777  03FE                     __ptext12:	
  2778 ;; *************** function _PIN_MANAGER_Initialize *****************
  2779 ;; Defined at:
  2780 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;		None
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;		None
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      void 
  2787 ;; Registers used:
  2788 ;;		wreg, status,2
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMMON   BANK0   BANK1
  2794 ;;      Params:         0       0       0
  2795 ;;      Locals:         0       0       0
  2796 ;;      Temps:          0       0       0
  2797 ;;      Totals:         0       0       0
  2798 ;;Total ram usage:        0 bytes
  2799 ;; Hardware stack levels used: 1
  2800 ;; Hardware stack levels required when called: 7
  2801 ;; This function calls:
  2802 ;;		Nothing
  2803 ;; This function is called by:
  2804 ;;		_SYSTEM_Initialize
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808  03FE                     _PIN_MANAGER_Initialize:	
  2809                           ;psect for function _PIN_MANAGER_Initialize
  2810                           
  2811  03FE                     l1666:	
  2812                           ;incstack = 0
  2813                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2814                           
  2815                           
  2816                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2817  03FE  0022               	movlb	2	; select bank2
  2818  03FF  018C               	clrf	12	;volatile
  2819                           
  2820                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  2821  0400  018E               	clrf	14	;volatile
  2822  0401                     l1668:
  2823                           
  2824                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x0F;
  2825  0401  300F               	movlw	15
  2826  0402  0021               	movlb	1	; select bank1
  2827  0403  008C               	movwf	12	;volatile
  2828  0404                     l1670:
  2829                           
  2830                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x0C;
  2831  0404  300C               	movlw	12
  2832  0405  008E               	movwf	14	;volatile
  2833  0406                     l1672:
  2834                           
  2835                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x0C;
  2836  0406  300C               	movlw	12
  2837  0407  0023               	movlb	3	; select bank3
  2838  0408  008E               	movwf	14	;volatile
  2839  0409                     l1674:
  2840                           
  2841                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x07;
  2842  0409  3007               	movlw	7
  2843  040A  008C               	movwf	12	;volatile
  2844                           
  2845                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  2846  040B  0024               	movlb	4	; select bank4
  2847  040C  018C               	clrf	12	;volatile
  2848                           
  2849                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  2850  040D  018E               	clrf	14	;volatile
  2851  040E                     l1676:
  2852                           
  2853                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2854  040E  0021               	movlb	1	; select bank1
  2855  040F  1795               	bsf	21,7	;volatile
  2856                           
  2857                           ;mcc_generated_files/pin_manager.c: 86:     APFCON = 0x00;
  2858  0410  0022               	movlb	2	; select bank2
  2859  0411  019D               	clrf	29	;volatile
  2860  0412                     l92:
  2861  0412  0008               	return
  2862  0413                     __end_of_PIN_MANAGER_Initialize:
  2863                           
  2864                           	psect	text13
  2865  04A1                     __ptext13:	
  2866 ;; *************** function _OSCILLATOR_Initialize *****************
  2867 ;; Defined at:
  2868 ;;		line 62 in file "mcc_generated_files/mcc.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;		None
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;		None
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		wreg, status,2
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMMON   BANK0   BANK1
  2882 ;;      Params:         0       0       0
  2883 ;;      Locals:         0       0       0
  2884 ;;      Temps:          0       0       0
  2885 ;;      Totals:         0       0       0
  2886 ;;Total ram usage:        0 bytes
  2887 ;; Hardware stack levels used: 1
  2888 ;; Hardware stack levels required when called: 7
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_SYSTEM_Initialize
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896  04A1                     _OSCILLATOR_Initialize:	
  2897                           ;psect for function _OSCILLATOR_Initialize
  2898                           
  2899  04A1                     l1678:	
  2900                           ;incstack = 0
  2901                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2902                           
  2903                           
  2904                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x78;
  2905  04A1  3078               	movlw	120
  2906  04A2  0021               	movlb	1	; select bank1
  2907  04A3  0099               	movwf	25	;volatile
  2908  04A4                     l1680:
  2909                           
  2910                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  2911  04A4  0198               	clrf	24	;volatile
  2912  04A5                     l1682:
  2913                           
  2914                           ;mcc_generated_files/mcc.c: 69:     BORCON = 0x00;
  2915  04A5  0022               	movlb	2	; select bank2
  2916  04A6  0196               	clrf	22	;volatile
  2917  04A7                     l28:
  2918  04A7  0008               	return
  2919  04A8                     __end_of_OSCILLATOR_Initialize:
  2920                           
  2921                           	psect	text14
  2922  04D3                     __ptext14:	
  2923 ;; *************** function _FVR_Initialize *****************
  2924 ;; Defined at:
  2925 ;;		line 58 in file "mcc_generated_files/fvr.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;		None
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;		None
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      void 
  2932 ;; Registers used:
  2933 ;;		wreg
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMMON   BANK0   BANK1
  2939 ;;      Params:         0       0       0
  2940 ;;      Locals:         0       0       0
  2941 ;;      Temps:          0       0       0
  2942 ;;      Totals:         0       0       0
  2943 ;;Total ram usage:        0 bytes
  2944 ;; Hardware stack levels used: 1
  2945 ;; Hardware stack levels required when called: 7
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_SYSTEM_Initialize
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953  04D3                     _FVR_Initialize:	
  2954                           ;psect for function _FVR_Initialize
  2955                           
  2956  04D3                     l1686:	
  2957                           ;incstack = 0
  2958                           ; Regs used in _FVR_Initialize: [wreg]
  2959                           
  2960                           
  2961                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  2962  04D3  3082               	movlw	130
  2963  04D4  0022               	movlb	2	; select bank2
  2964  04D5  0097               	movwf	23	;volatile
  2965  04D6                     l479:
  2966  04D6  0008               	return
  2967  04D7                     __end_of_FVR_Initialize:
  2968                           
  2969                           	psect	text15
  2970  0499                     __ptext15:	
  2971 ;; *************** function _ADC_Initialize *****************
  2972 ;; Defined at:
  2973 ;;		line 67 in file "mcc_generated_files/adc.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;		None
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;		None
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      void 
  2980 ;; Registers used:
  2981 ;;		wreg, status,2
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMMON   BANK0   BANK1
  2987 ;;      Params:         0       0       0
  2988 ;;      Locals:         0       0       0
  2989 ;;      Temps:          0       0       0
  2990 ;;      Totals:         0       0       0
  2991 ;;Total ram usage:        0 bytes
  2992 ;; Hardware stack levels used: 1
  2993 ;; Hardware stack levels required when called: 7
  2994 ;; This function calls:
  2995 ;;		Nothing
  2996 ;; This function is called by:
  2997 ;;		_SYSTEM_Initialize
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001  0499                     _ADC_Initialize:	
  3002                           ;psect for function _ADC_Initialize
  3003                           
  3004  0499                     l1688:	
  3005                           ;incstack = 0
  3006                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3007                           
  3008                           
  3009                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x40;
  3010  0499  3040               	movlw	64
  3011  049A  0021               	movlb	1	; select bank1
  3012  049B  009E               	movwf	30	;volatile
  3013  049C                     l1690:
  3014                           
  3015                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  3016  049C  019B               	clrf	27	;volatile
  3017  049D                     l1692:
  3018                           
  3019                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  3020  049D  019C               	clrf	28	;volatile
  3021                           
  3022                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x7D;
  3023  049E  307D               	movlw	125
  3024  049F  009D               	movwf	29	;volatile
  3025  04A0                     l48:
  3026  04A0  0008               	return
  3027  04A1                     __end_of_ADC_Initialize:
  3028                           
  3029                           	psect	text16
  3030  0094                     __ptext16:	
  3031 ;; *************** function _povorot *****************
  3032 ;; Defined at:
  3033 ;;		line 265 in file "main.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;		None
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;		None
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  1    wreg      void 
  3040 ;; Registers used:
  3041 ;;		wreg, status,2, status,0, pclath, cstack
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMMON   BANK0   BANK1
  3047 ;;      Params:         0       0       0
  3048 ;;      Locals:         0       0       0
  3049 ;;      Temps:          0       0       0
  3050 ;;      Totals:         0       0       0
  3051 ;;Total ram usage:        0 bytes
  3052 ;; Hardware stack levels used: 1
  3053 ;; Hardware stack levels required when called: 8
  3054 ;; This function calls:
  3055 ;;		_go_close
  3056 ;;		_go_open
  3057 ;; This function is called by:
  3058 ;;		_main
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062  0094                     _povorot:	
  3063                           ;psect for function _povorot
  3064                           
  3065  0094                     l1924:	
  3066                           ;incstack = 0
  3067                           ; Regs used in _povorot: [wreg+status,2+status,0+pclath+cstack]
  3068                           
  3069                           
  3070                           ;main.c: 266:     if ((time_s > ROTATION_TIME) &&
  3071  0094  0020               	movlb	0	; select bank0
  3072  0095  0823               	movf	_time_s+3,w
  3073  0096  1D03               	btfss	3,2
  3074  0097  28A4               	goto	u1100
  3075  0098  0822               	movf	_time_s+2,w
  3076  0099  1D03               	btfss	3,2
  3077  009A  28A4               	goto	u1100
  3078  009B  0821               	movf	_time_s+1,w
  3079  009C  1D03               	btfss	3,2
  3080  009D  28A4               	goto	u1100
  3081  009E  303D               	movlw	61
  3082  009F  0220               	subwf	_time_s,w
  3083  00A0  1C03               	btfss	3,0
  3084  00A1  28A3               	goto	u1101
  3085  00A2  28A4               	goto	u1100
  3086  00A3                     u1101:
  3087  00A3  28B3               	goto	l1934
  3088  00A4                     u1100:
  3089  00A4                     l1926:
  3090  00A4  197C               	btfsc	_FLAGS,2
  3091  00A5  28A7               	goto	u1111
  3092  00A6  28A8               	goto	u1110
  3093  00A7                     u1111:
  3094  00A7  28B3               	goto	l1934
  3095  00A8                     u1110:
  3096  00A8                     l1928:
  3097  00A8  187C               	btfsc	_FLAGS,0
  3098  00A9  28AB               	goto	u1121
  3099  00AA  28AC               	goto	u1120
  3100  00AB                     u1121:
  3101  00AB  28B3               	goto	l1934
  3102  00AC                     u1120:
  3103  00AC                     l1930:
  3104  00AC  1CFC               	btfss	_FLAGS,1
  3105  00AD  28AF               	goto	u1131
  3106  00AE  28B0               	goto	u1130
  3107  00AF                     u1131:
  3108  00AF  28B3               	goto	l1934
  3109  00B0                     u1130:
  3110  00B0                     l1932:
  3111                           
  3112                           ;main.c: 270:             ) {;main.c: 271:         go_close();
  3113  00B0  3183  231B  3180   	fcall	_go_close
  3114  00B3                     l1934:
  3115                           
  3116                           ;main.c: 273:     if ((time_s > (ROTATION_TIME + 10 + 1 * 2)) &&
  3117  00B3  0020               	movlb	0	; select bank0
  3118  00B4  0823               	movf	_time_s+3,w
  3119  00B5  1D03               	btfss	3,2
  3120  00B6  28C3               	goto	u1140
  3121  00B7  0822               	movf	_time_s+2,w
  3122  00B8  1D03               	btfss	3,2
  3123  00B9  28C3               	goto	u1140
  3124  00BA  0821               	movf	_time_s+1,w
  3125  00BB  1D03               	btfss	3,2
  3126  00BC  28C3               	goto	u1140
  3127  00BD  3049               	movlw	73
  3128  00BE  0220               	subwf	_time_s,w
  3129  00BF  1C03               	btfss	3,0
  3130  00C0  28C2               	goto	u1141
  3131  00C1  28C3               	goto	u1140
  3132  00C2                     u1141:
  3133  00C2  28DB               	goto	l416
  3134  00C3                     u1140:
  3135  00C3                     l1936:
  3136  00C3  1D7C               	btfss	_FLAGS,2
  3137  00C4  28C6               	goto	u1151
  3138  00C5  28C7               	goto	u1150
  3139  00C6                     u1151:
  3140  00C6  28DB               	goto	l416
  3141  00C7                     u1150:
  3142  00C7                     l1938:
  3143  00C7  187C               	btfsc	_FLAGS,0
  3144  00C8  28CA               	goto	u1161
  3145  00C9  28CB               	goto	u1160
  3146  00CA                     u1161:
  3147  00CA  28DB               	goto	l416
  3148  00CB                     u1160:
  3149  00CB                     l1940:
  3150  00CB  1CFC               	btfss	_FLAGS,1
  3151  00CC  28CE               	goto	u1171
  3152  00CD  28CF               	goto	u1170
  3153  00CE                     u1171:
  3154  00CE  28DB               	goto	l416
  3155  00CF                     u1170:
  3156  00CF                     l1942:
  3157                           
  3158                           ;main.c: 277:             ) {;main.c: 278:         go_open();
  3159  00CF  3184  2485  3180   	fcall	_go_open
  3160  00D2                     l1944:
  3161                           
  3162                           ;main.c: 279:         time_s = 0;
  3163  00D2  3000               	movlw	0
  3164  00D3  0020               	movlb	0	; select bank0
  3165  00D4  00A3               	movwf	_time_s+3
  3166  00D5  3000               	movlw	0
  3167  00D6  00A2               	movwf	_time_s+2
  3168  00D7  3000               	movlw	0
  3169  00D8  00A1               	movwf	_time_s+1
  3170  00D9  3000               	movlw	0
  3171  00DA  00A0               	movwf	_time_s
  3172  00DB                     l416:
  3173  00DB  0008               	return
  3174  00DC                     __end_of_povorot:
  3175                           
  3176                           	psect	text17
  3177  039C                     __ptext17:	
  3178 ;; *************** function _get_voltage *****************
  3179 ;; Defined at:
  3180 ;;		line 324 in file "main.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;		None
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;  res             2    4[BANK0 ] unsigned int 
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  1    wreg      void 
  3187 ;; Registers used:
  3188 ;;		wreg, status,2, status,0, pclath, cstack
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMMON   BANK0   BANK1
  3194 ;;      Params:         0       0       0
  3195 ;;      Locals:         0       2       0
  3196 ;;      Temps:          0       0       0
  3197 ;;      Totals:         0       2       0
  3198 ;;Total ram usage:        2 bytes
  3199 ;; Hardware stack levels used: 1
  3200 ;; Hardware stack levels required when called: 8
  3201 ;; This function calls:
  3202 ;;		_ADC_GetConversion
  3203 ;; This function is called by:
  3204 ;;		_main
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208  039C                     _get_voltage:	
  3209                           ;psect for function _get_voltage
  3210                           
  3211  039C                     l1990:	
  3212                           ;incstack = 0
  3213                           ; Regs used in _get_voltage: [wreg+status,2+status,0+pclath+cstack]
  3214                           
  3215                           
  3216                           ;main.c: 328:     unsigned res = ADC_GetConversion(channel_FVR);
  3217  039C  301F               	movlw	31
  3218  039D  3183  233D  3183   	fcall	_ADC_GetConversion
  3219  03A0  0020               	movlb	0	; select bank0
  3220  03A1  082C               	movf	?_ADC_GetConversion+1,w
  3221  03A2  00B0               	movwf	get_voltage@res+1
  3222  03A3  082B               	movf	?_ADC_GetConversion,w
  3223  03A4  00AF               	movwf	get_voltage@res
  3224  03A5                     l1992:
  3225                           
  3226                           ;main.c: 329:     if (res > 900) time_s++;
  3227  03A5  3003               	movlw	3
  3228  03A6  0230               	subwf	get_voltage@res+1,w
  3229  03A7  3085               	movlw	133
  3230  03A8  1903               	skipnz
  3231  03A9  022F               	subwf	get_voltage@res,w
  3232  03AA  1C03               	skipc
  3233  03AB  2BAD               	goto	u1321
  3234  03AC  2BAE               	goto	u1320
  3235  03AD                     u1321:
  3236  03AD  2BB6               	goto	l438
  3237  03AE                     u1320:
  3238  03AE                     l1994:
  3239  03AE  3001               	movlw	1
  3240  03AF  07A0               	addwf	_time_s,f
  3241  03B0  3000               	movlw	0
  3242  03B1  3DA1               	addwfc	_time_s+1,f
  3243  03B2  3000               	movlw	0
  3244  03B3  3DA2               	addwfc	_time_s+2,f
  3245  03B4  3000               	movlw	0
  3246  03B5  3DA3               	addwfc	_time_s+3,f
  3247  03B6                     l438:
  3248  03B6  0008               	return
  3249  03B7                     __end_of_get_voltage:
  3250                           
  3251                           	psect	text18
  3252  0226                     __ptext18:	
  3253 ;; *************** function _get_jump *****************
  3254 ;; Defined at:
  3255 ;;		line 182 in file "main.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;		None
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;  res             2    5[BANK0 ] unsigned int 
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      void 
  3262 ;; Registers used:
  3263 ;;		wreg, status,2, status,0, pclath, cstack
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMMON   BANK0   BANK1
  3269 ;;      Params:         0       0       0
  3270 ;;      Locals:         0       2       0
  3271 ;;      Temps:          0       1       0
  3272 ;;      Totals:         0       3       0
  3273 ;;Total ram usage:        3 bytes
  3274 ;; Hardware stack levels used: 1
  3275 ;; Hardware stack levels required when called: 8
  3276 ;; This function calls:
  3277 ;;		_ADC_GetConversion
  3278 ;; This function is called by:
  3279 ;;		_main
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283  0226                     _get_jump:	
  3284                           ;psect for function _get_jump
  3285                           
  3286  0226                     l360:	
  3287                           ;incstack = 0
  3288                           ; Regs used in _get_jump: [wreg+status,2+status,0+pclath+cstack]
  3289                           ;main.c: 184:     static signed char jump_counter;;main.c: 185:     do { ANSELAbits.ANSA
      +                          1 = 1; } while(0);
  3290                           
  3291  0226  0023               	movlb	3	; select bank3
  3292  0227  148C               	bsf	12,1	;volatile
  3293  0228                     l1900:
  3294                           
  3295                           ;main.c: 186:     unsigned res = ADC_GetConversion(PIN_JUMP_STATE);
  3296  0228  3001               	movlw	1
  3297  0229  3183  233D  3182   	fcall	_ADC_GetConversion
  3298  022C  0020               	movlb	0	; select bank0
  3299  022D  082C               	movf	?_ADC_GetConversion+1,w
  3300  022E  00B1               	movwf	get_jump@res+1
  3301  022F  082B               	movf	?_ADC_GetConversion,w
  3302  0230  00B0               	movwf	get_jump@res
  3303  0231                     l1902:
  3304  0231  0023               	movlb	3	; select bank3
  3305  0232  108C               	bcf	12,1	;volatile
  3306  0233                     l1904:
  3307                           
  3308                           ;main.c: 190:     if (res < 2000) jump_counter--;
  3309  0233  3007               	movlw	7
  3310  0234  0020               	movlb	0	; select bank0
  3311  0235  0231               	subwf	get_jump@res+1,w
  3312  0236  30D0               	movlw	208
  3313  0237  1903               	skipnz
  3314  0238  0230               	subwf	get_jump@res,w
  3315  0239  1803               	skipnc
  3316  023A  2A3C               	goto	u1071
  3317  023B  2A3D               	goto	u1070
  3318  023C                     u1071:
  3319  023C  2A42               	goto	l1908
  3320  023D                     u1070:
  3321  023D                     l1906:
  3322  023D  30FF               	movlw	255
  3323  023E  00AF               	movwf	??_get_jump
  3324  023F  082F               	movf	??_get_jump,w
  3325  0240  07A7               	addwf	get_jump@jump_counter,f
  3326  0241  2A46               	goto	l1910
  3327  0242                     l1908:
  3328  0242  3001               	movlw	1
  3329  0243  00AF               	movwf	??_get_jump
  3330  0244  082F               	movf	??_get_jump,w
  3331  0245  07A7               	addwf	get_jump@jump_counter,f
  3332  0246                     l1910:
  3333                           
  3334                           ;main.c: 193:     if (jump_counter > 10) {
  3335  0246  0827               	movf	get_jump@jump_counter,w
  3336  0247  3A80               	xorlw	128
  3337  0248  3E75               	addlw	-139
  3338  0249  1C03               	skipc
  3339  024A  2A4C               	goto	u1081
  3340  024B  2A4D               	goto	u1080
  3341  024C                     u1081:
  3342  024C  2A53               	goto	l1916
  3343  024D                     u1080:
  3344  024D                     l1912:
  3345                           
  3346                           ;main.c: 194:         jump_counter = 10;
  3347  024D  300A               	movlw	10
  3348  024E  00AF               	movwf	??_get_jump
  3349  024F  082F               	movf	??_get_jump,w
  3350  0250  00A7               	movwf	get_jump@jump_counter
  3351  0251                     l1914:
  3352                           
  3353                           ;main.c: 195:         FLAGS.bits._JUMP_CONNECTED = 0;
  3354  0251  127C               	bcf	_FLAGS,4
  3355                           
  3356                           ;main.c: 196:     } else if (jump_counter<-10) {
  3357  0252  2A5F               	goto	l369
  3358  0253                     l1916:
  3359  0253  0827               	movf	get_jump@jump_counter,w
  3360  0254  3A80               	xorlw	128
  3361  0255  3E8A               	addlw	138
  3362  0256  1803               	skipnc
  3363  0257  2A59               	goto	u1091
  3364  0258  2A5A               	goto	u1090
  3365  0259                     u1091:
  3366  0259  2A5F               	goto	l369
  3367  025A                     u1090:
  3368  025A                     l1918:
  3369                           
  3370                           ;main.c: 197:         jump_counter = -10;
  3371  025A  30F6               	movlw	246
  3372  025B  00AF               	movwf	??_get_jump
  3373  025C  082F               	movf	??_get_jump,w
  3374  025D  00A7               	movwf	get_jump@jump_counter
  3375  025E                     l1920:
  3376                           
  3377                           ;main.c: 198:         FLAGS.bits._JUMP_CONNECTED = 1;
  3378  025E  167C               	bsf	_FLAGS,4
  3379  025F                     l369:
  3380  025F  0008               	return
  3381  0260                     __end_of_get_jump:
  3382                           
  3383                           	psect	text19
  3384  01AC                     __ptext19:	
  3385 ;; *************** function _get_fun *****************
  3386 ;; Defined at:
  3387 ;;		line 135 in file "main.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;		None
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  res             2    5[BANK0 ] unsigned int 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg, status,2, status,0, pclath, cstack
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1
  3401 ;;      Params:         0       0       0
  3402 ;;      Locals:         0       2       0
  3403 ;;      Temps:          0       1       0
  3404 ;;      Totals:         0       3       0
  3405 ;;Total ram usage:        3 bytes
  3406 ;; Hardware stack levels used: 1
  3407 ;; Hardware stack levels required when called: 8
  3408 ;; This function calls:
  3409 ;;		_ADC_GetConversion
  3410 ;; This function is called by:
  3411 ;;		_main
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415  01AC                     _get_fun:	
  3416                           ;psect for function _get_fun
  3417                           
  3418  01AC                     l322:	
  3419                           ;incstack = 0
  3420                           ; Regs used in _get_fun: [wreg+status,2+status,0+pclath+cstack]
  3421                           ;main.c: 137:     static signed char fun_counter;;main.c: 138:     do { LATCbits.LATC1 =
      +                           1; } while(0);
  3422                           
  3423  01AC  0022               	movlb	2	; select bank2
  3424  01AD  148E               	bsf	14,1	;volatile
  3425  01AE                     l324:	
  3426                           ;main.c: 139:     do { ANSELCbits.ANSC2 = 1; } while(0);
  3427                           
  3428  01AE  0023               	movlb	3	; select bank3
  3429  01AF  150E               	bsf	14,2	;volatile
  3430  01B0                     l1874:
  3431                           
  3432                           ;main.c: 140:     unsigned res = ADC_GetConversion(PIN_FUN_STATE);
  3433  01B0  3006               	movlw	6
  3434  01B1  3183  233D  3181   	fcall	_ADC_GetConversion
  3435  01B4  0020               	movlb	0	; select bank0
  3436  01B5  082C               	movf	?_ADC_GetConversion+1,w
  3437  01B6  00B1               	movwf	get_fun@res+1
  3438  01B7  082B               	movf	?_ADC_GetConversion,w
  3439  01B8  00B0               	movwf	get_fun@res
  3440  01B9                     l1876:
  3441  01B9  0023               	movlb	3	; select bank3
  3442  01BA  110E               	bcf	14,2	;volatile
  3443  01BB                     l1878:
  3444  01BB  0022               	movlb	2	; select bank2
  3445  01BC  108E               	bcf	14,1	;volatile
  3446  01BD                     l1880:
  3447                           
  3448                           ;main.c: 143:     if (res < 2000) fun_counter--;
  3449  01BD  3007               	movlw	7
  3450  01BE  0020               	movlb	0	; select bank0
  3451  01BF  0231               	subwf	get_fun@res+1,w
  3452  01C0  30D0               	movlw	208
  3453  01C1  1903               	skipnz
  3454  01C2  0230               	subwf	get_fun@res,w
  3455  01C3  1803               	skipnc
  3456  01C4  29C6               	goto	u1041
  3457  01C5  29C7               	goto	u1040
  3458  01C6                     u1041:
  3459  01C6  29CC               	goto	l1884
  3460  01C7                     u1040:
  3461  01C7                     l1882:
  3462  01C7  30FF               	movlw	255
  3463  01C8  00AF               	movwf	??_get_fun
  3464  01C9  082F               	movf	??_get_fun,w
  3465  01CA  07A9               	addwf	get_fun@fun_counter,f
  3466  01CB  29D0               	goto	l1886
  3467  01CC                     l1884:
  3468  01CC  3001               	movlw	1
  3469  01CD  00AF               	movwf	??_get_fun
  3470  01CE  082F               	movf	??_get_fun,w
  3471  01CF  07A9               	addwf	get_fun@fun_counter,f
  3472  01D0                     l1886:
  3473                           
  3474                           ;main.c: 146:     if (fun_counter > 10) {
  3475  01D0  0829               	movf	get_fun@fun_counter,w
  3476  01D1  3A80               	xorlw	128
  3477  01D2  3E75               	addlw	-139
  3478  01D3  1C03               	skipc
  3479  01D4  29D6               	goto	u1051
  3480  01D5  29D7               	goto	u1050
  3481  01D6                     u1051:
  3482  01D6  29DD               	goto	l1892
  3483  01D7                     u1050:
  3484  01D7                     l1888:
  3485                           
  3486                           ;main.c: 147:         fun_counter = 10;
  3487  01D7  300A               	movlw	10
  3488  01D8  00AF               	movwf	??_get_fun
  3489  01D9  082F               	movf	??_get_fun,w
  3490  01DA  00A9               	movwf	get_fun@fun_counter
  3491  01DB                     l1890:
  3492                           
  3493                           ;main.c: 148:         FLAGS.bits._FUN_CONNECTED = 0;
  3494  01DB  11FC               	bcf	_FLAGS,3
  3495                           
  3496                           ;main.c: 149:     } else if (fun_counter<-10) {
  3497  01DC  29E9               	goto	l335
  3498  01DD                     l1892:
  3499  01DD  0829               	movf	get_fun@fun_counter,w
  3500  01DE  3A80               	xorlw	128
  3501  01DF  3E8A               	addlw	138
  3502  01E0  1803               	skipnc
  3503  01E1  29E3               	goto	u1061
  3504  01E2  29E4               	goto	u1060
  3505  01E3                     u1061:
  3506  01E3  29E9               	goto	l335
  3507  01E4                     u1060:
  3508  01E4                     l1894:
  3509                           
  3510                           ;main.c: 150:         fun_counter = -10;
  3511  01E4  30F6               	movlw	246
  3512  01E5  00AF               	movwf	??_get_fun
  3513  01E6  082F               	movf	??_get_fun,w
  3514  01E7  00A9               	movwf	get_fun@fun_counter
  3515  01E8                     l1896:
  3516                           
  3517                           ;main.c: 151:         FLAGS.bits._FUN_CONNECTED = 1;
  3518  01E8  15FC               	bsf	_FLAGS,3
  3519  01E9                     l335:
  3520  01E9  0008               	return
  3521  01EA                     __end_of_get_fun:
  3522                           
  3523                           	psect	text20
  3524  033D                     __ptext20:	
  3525 ;; *************** function _ADC_GetConversion *****************
  3526 ;; Defined at:
  3527 ;;		line 112 in file "mcc_generated_files/adc.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;  channel         1    wreg     enum E2178
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;  channel         1    3[BANK0 ] enum E2178
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  2    0[BANK0 ] unsigned short 
  3534 ;; Registers used:
  3535 ;;		wreg, status,2, status,0
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMMON   BANK0   BANK1
  3541 ;;      Params:         0       2       0
  3542 ;;      Locals:         0       1       0
  3543 ;;      Temps:          0       1       0
  3544 ;;      Totals:         0       4       0
  3545 ;;Total ram usage:        4 bytes
  3546 ;; Hardware stack levels used: 1
  3547 ;; Hardware stack levels required when called: 7
  3548 ;; This function calls:
  3549 ;;		Nothing
  3550 ;; This function is called by:
  3551 ;;		_get_fun
  3552 ;;		_get_fun_full
  3553 ;;		_get_jump
  3554 ;;		_get_jump_full
  3555 ;;		_get_voltage
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559  033D                     _ADC_GetConversion:	
  3560                           ;psect for function _ADC_GetConversion
  3561                           
  3562                           
  3563                           ;incstack = 0
  3564                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3565                           ;ADC_GetConversion@channel stored from wreg
  3566  033D  0020               	movlb	0	; select bank0
  3567  033E  00AE               	movwf	ADC_GetConversion@channel
  3568  033F                     l1718:
  3569                           
  3570                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  3571  033F  082E               	movf	ADC_GetConversion@channel,w
  3572  0340  00AD               	movwf	??_ADC_GetConversion
  3573  0341  0DAD               	rlf	??_ADC_GetConversion,f
  3574  0342  0DAD               	rlf	??_ADC_GetConversion,f
  3575  0343  0021               	movlb	1	; select bank1
  3576  0344  081D               	movf	29,w	;volatile
  3577  0345  0020               	movlb	0	; select bank0
  3578  0346  062D               	xorwf	??_ADC_GetConversion,w
  3579  0347  3983               	andlw	-125
  3580  0348  062D               	xorwf	??_ADC_GetConversion,w
  3581  0349  0021               	movlb	1	; select bank1
  3582  034A  009D               	movwf	29	;volatile
  3583  034B                     l1720:
  3584                           
  3585                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  3586  034B  141D               	bsf	29,0	;volatile
  3587  034C                     l1722:
  3588                           
  3589                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  3590  034C  3006               	movlw	6
  3591  034D                     u1397:
  3592  034D  0B89               	decfsz	9,f
  3593  034E  2B4D               	goto	u1397
  3594  034F  3200               	nop2
  3595  0350                     l1724:
  3596                           
  3597                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  3598  0350  0021               	movlb	1	; select bank1
  3599  0351  149D               	bsf	29,1	;volatile
  3600  0352                     l63:	
  3601                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  3602                           
  3603                           
  3604                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  3605  0352  189D               	btfsc	29,1	;volatile
  3606  0353  2B55               	goto	u801
  3607  0354  2B56               	goto	u800
  3608  0355                     u801:
  3609  0355  2B52               	goto	l63
  3610  0356                     u800:
  3611  0356                     l1726:
  3612                           
  3613                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3614  0356  081C               	movf	28,w	;volatile
  3615  0357  0020               	movlb	0	; select bank0
  3616  0358  00AC               	movwf	?_ADC_GetConversion+1
  3617  0359  0021               	movlb	1	; select bank1
  3618  035A  081B               	movf	27,w	;volatile
  3619  035B  0020               	movlb	0	; select bank0
  3620  035C  00AB               	movwf	?_ADC_GetConversion
  3621  035D                     l66:
  3622  035D  0008               	return
  3623  035E                     __end_of_ADC_GetConversion:
  3624                           
  3625                           	psect	text21
  3626  003B                     __ptext21:	
  3627 ;; *************** function _fun_work *****************
  3628 ;; Defined at:
  3629 ;;		line 284 in file "main.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;		None
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;		None
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  1    wreg      void 
  3636 ;; Registers used:
  3637 ;;		wreg, status,2, status,0, pclath, cstack
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMMON   BANK0   BANK1
  3643 ;;      Params:         0       0       0
  3644 ;;      Locals:         0       0       0
  3645 ;;      Temps:          0       2       0
  3646 ;;      Totals:         0       2       0
  3647 ;;Total ram usage:        2 bytes
  3648 ;; Hardware stack levels used: 1
  3649 ;; Hardware stack levels required when called: 9
  3650 ;; This function calls:
  3651 ;;		_beep
  3652 ;;		_go_close
  3653 ;;		_go_close_alt
  3654 ;;		_go_open
  3655 ;;		_go_open_alt
  3656 ;; This function is called by:
  3657 ;;		_main
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661  003B                     _fun_work:	
  3662                           ;psect for function _fun_work
  3663                           
  3664  003B                     l1946:	
  3665                           ;incstack = 0
  3666                           ; Regs used in _fun_work: [wreg+status,2+status,0+pclath+cstack]
  3667                           
  3668                           
  3669                           ;main.c: 285:     {;main.c: 286:         if (FLAGS.bits._FUN_CONNECTED &&
  3670  003B  1DFC               	btfss	_FLAGS,3
  3671  003C  283E               	goto	u1181
  3672  003D  283F               	goto	u1180
  3673  003E                     u1181:
  3674  003E  2868               	goto	l1962
  3675  003F                     u1180:
  3676  003F                     l1948:
  3677  003F  187C               	btfsc	_FLAGS,0
  3678  0040  2842               	goto	u1191
  3679  0041  2843               	goto	u1190
  3680  0042                     u1191:
  3681  0042  2868               	goto	l1962
  3682  0043                     u1190:
  3683  0043                     l1950:
  3684  0043  1D7C               	btfss	_FLAGS,2
  3685  0044  2846               	goto	u1201
  3686  0045  2847               	goto	u1200
  3687  0046                     u1201:
  3688  0046  2868               	goto	l1962
  3689  0047                     u1200:
  3690  0047                     l1952:
  3691  0047  1AFC               	btfsc	_FLAGS,5
  3692  0048  284A               	goto	u1211
  3693  0049  284B               	goto	u1210
  3694  004A                     u1211:
  3695  004A  2868               	goto	l1962
  3696  004B                     u1210:
  3697  004B                     l1954:
  3698                           
  3699                           ;main.c: 289:                 !FLAGS.bits.RELE_POW_WAIT) {;main.c: 290:             if (
      +                          FLAGS.bits.NORMAL_WORK_MODE) go_open();
  3700  004B  1CFC               	btfss	_FLAGS,1
  3701  004C  284E               	goto	u1221
  3702  004D  284F               	goto	u1220
  3703  004E                     u1221:
  3704  004E  2853               	goto	l1958
  3705  004F                     u1220:
  3706  004F                     l1956:
  3707  004F  3184  2485  3180   	fcall	_go_open
  3708  0052  2856               	goto	l1960
  3709  0053                     l1958:
  3710  0053  3184  24B4  3180   	fcall	_go_open_alt
  3711  0056                     l1960:
  3712                           
  3713                           ;main.c: 293:             beep(500, 100, 40, 1);
  3714  0056  30F4               	movlw	244
  3715  0057  0020               	movlb	0	; select bank0
  3716  0058  00AB               	movwf	beep@delay
  3717  0059  3001               	movlw	1
  3718  005A  00AC               	movwf	beep@delay+1
  3719  005B  3064               	movlw	100
  3720  005C  00AD               	movwf	beep@pause
  3721  005D  3000               	movlw	0
  3722  005E  00AE               	movwf	beep@pause+1
  3723  005F  3028               	movlw	40
  3724  0060  00B4               	movwf	??_fun_work
  3725  0061  0834               	movf	??_fun_work,w
  3726  0062  00AF               	movwf	beep@time
  3727  0063  01B0               	clrf	beep@count
  3728  0064  0AB0               	incf	beep@count,f
  3729  0065  3182  22C7  3180   	fcall	_beep
  3730  0068                     l1962:
  3731                           
  3732                           ;main.c: 295:         if (!FLAGS.bits._FUN_CONNECTED &&
  3733  0068  19FC               	btfsc	_FLAGS,3
  3734  0069  286B               	goto	u1231
  3735  006A  286C               	goto	u1230
  3736  006B                     u1231:
  3737  006B  2893               	goto	l425
  3738  006C                     u1230:
  3739  006C                     l1964:
  3740  006C  197C               	btfsc	_FLAGS,2
  3741  006D  286F               	goto	u1241
  3742  006E  2870               	goto	u1240
  3743  006F                     u1241:
  3744  006F  2893               	goto	l425
  3745  0070                     u1240:
  3746  0070                     l1966:
  3747  0070  1AFC               	btfsc	_FLAGS,5
  3748  0071  2873               	goto	u1251
  3749  0072  2874               	goto	u1250
  3750  0073                     u1251:
  3751  0073  2893               	goto	l425
  3752  0074                     u1250:
  3753  0074                     l1968:
  3754                           
  3755                           ;main.c: 297:                 !FLAGS.bits.RELE_POW_WAIT) {;main.c: 298:             if (
      +                          FLAGS.bits.NORMAL_WORK_MODE) go_close();
  3756  0074  1CFC               	btfss	_FLAGS,1
  3757  0075  2877               	goto	u1261
  3758  0076  2878               	goto	u1260
  3759  0077                     u1261:
  3760  0077  287C               	goto	l1972
  3761  0078                     u1260:
  3762  0078                     l1970:
  3763  0078  3183  231B  3180   	fcall	_go_close
  3764  007B  287F               	goto	l1974
  3765  007C                     l1972:
  3766  007C  3184  24B9  3180   	fcall	_go_close_alt
  3767  007F                     l1974:
  3768                           
  3769                           ;main.c: 301:             beep(500, 100, 40, 2);
  3770  007F  30F4               	movlw	244
  3771  0080  0020               	movlb	0	; select bank0
  3772  0081  00AB               	movwf	beep@delay
  3773  0082  3001               	movlw	1
  3774  0083  00AC               	movwf	beep@delay+1
  3775  0084  3064               	movlw	100
  3776  0085  00AD               	movwf	beep@pause
  3777  0086  3000               	movlw	0
  3778  0087  00AE               	movwf	beep@pause+1
  3779  0088  3028               	movlw	40
  3780  0089  00B4               	movwf	??_fun_work
  3781  008A  0834               	movf	??_fun_work,w
  3782  008B  00AF               	movwf	beep@time
  3783  008C  3002               	movlw	2
  3784  008D  00B5               	movwf	??_fun_work+1
  3785  008E  0835               	movf	??_fun_work+1,w
  3786  008F  00B0               	movwf	beep@count
  3787  0090  3182  22C7  3180   	fcall	_beep
  3788  0093                     l425:
  3789  0093  0008               	return
  3790  0094                     __end_of_fun_work:
  3791                           
  3792                           	psect	text22
  3793  04B4                     __ptext22:	
  3794 ;; *************** function _go_open_alt *****************
  3795 ;; Defined at:
  3796 ;;		line 104 in file "main.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;		None
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		None
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMMON   BANK0   BANK1
  3810 ;;      Params:         0       0       0
  3811 ;;      Locals:         0       0       0
  3812 ;;      Temps:          0       0       0
  3813 ;;      Totals:         0       0       0
  3814 ;;Total ram usage:        0 bytes
  3815 ;; Hardware stack levels used: 1
  3816 ;; Hardware stack levels required when called: 7
  3817 ;; This function calls:
  3818 ;;		Nothing
  3819 ;; This function is called by:
  3820 ;;		_fun_work
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824  04B4                     _go_open_alt:	
  3825                           ;psect for function _go_open_alt
  3826                           
  3827  04B4                     l1798:	
  3828                           ;incstack = 0
  3829                           ; Regs used in _go_open_alt: []
  3830                           
  3831                           
  3832                           ;main.c: 105:     FLAGS.bits.CLOSED = 0;
  3833  04B4  117C               	bcf	_FLAGS,2
  3834  04B5                     l289:	
  3835                           ;main.c: 106:     do { LATCbits.LATC4 = 0; } while(0);
  3836                           
  3837  04B5  0022               	movlb	2	; select bank2
  3838  04B6  120E               	bcf	14,4	;volatile
  3839  04B7                     l291:	
  3840                           ;main.c: 107:     do { LATCbits.LATC5 = 0; } while(0);
  3841                           
  3842  04B7  128E               	bcf	14,5	;volatile
  3843  04B8                     l293:
  3844  04B8  0008               	return
  3845  04B9                     __end_of_go_open_alt:
  3846                           
  3847                           	psect	text23
  3848  0485                     __ptext23:	
  3849 ;; *************** function _go_open *****************
  3850 ;; Defined at:
  3851 ;;		line 90 in file "main.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;		None
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;		None
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  1    wreg      void 
  3858 ;; Registers used:
  3859 ;;		wreg
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMMON   BANK0   BANK1
  3865 ;;      Params:         0       0       0
  3866 ;;      Locals:         0       0       0
  3867 ;;      Temps:          0       1       0
  3868 ;;      Totals:         0       1       0
  3869 ;;Total ram usage:        1 bytes
  3870 ;; Hardware stack levels used: 1
  3871 ;; Hardware stack levels required when called: 7
  3872 ;; This function calls:
  3873 ;;		Nothing
  3874 ;; This function is called by:
  3875 ;;		_povorot
  3876 ;;		_fun_work
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880  0485                     _go_open:	
  3881                           ;psect for function _go_open
  3882                           
  3883  0485                     l275:	
  3884                           ;incstack = 0
  3885                           ; Regs used in _go_open: [wreg]
  3886                           ;main.c: 91:     do { LATCbits.LATC4 = 0; } while(0);
  3887                           
  3888  0485  0022               	movlb	2	; select bank2
  3889  0486  120E               	bcf	14,4	;volatile
  3890  0487                     l277:	
  3891                           ;main.c: 92:     do { LATCbits.LATC5 = 1; } while(0);
  3892                           
  3893  0487  168E               	bsf	14,5	;volatile
  3894  0488                     l1790:
  3895                           
  3896                           ;main.c: 93:     time_pow_s = 10;
  3897  0488  300A               	movlw	10
  3898  0489  0020               	movlb	0	; select bank0
  3899  048A  00AB               	movwf	??_go_open
  3900  048B  082B               	movf	??_go_open,w
  3901  048C  00AA               	movwf	_time_pow_s
  3902  048D                     l1792:
  3903                           
  3904                           ;main.c: 94:     FLAGS.bits.RELE_POW_WAIT = 1;
  3905  048D  16FC               	bsf	_FLAGS,5
  3906  048E                     l279:
  3907  048E  0008               	return
  3908  048F                     __end_of_go_open:
  3909                           
  3910                           	psect	text24
  3911  04B9                     __ptext24:	
  3912 ;; *************** function _go_close_alt *****************
  3913 ;; Defined at:
  3914 ;;		line 98 in file "main.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;		None
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;		None
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      void 
  3921 ;; Registers used:
  3922 ;;		None
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMMON   BANK0   BANK1
  3928 ;;      Params:         0       0       0
  3929 ;;      Locals:         0       0       0
  3930 ;;      Temps:          0       0       0
  3931 ;;      Totals:         0       0       0
  3932 ;;Total ram usage:        0 bytes
  3933 ;; Hardware stack levels used: 1
  3934 ;; Hardware stack levels required when called: 7
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_fun_work
  3939 ;;		_switch_wm
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943  04B9                     _go_close_alt:	
  3944                           ;psect for function _go_close_alt
  3945                           
  3946  04B9                     l1796:	
  3947                           ;incstack = 0
  3948                           ; Regs used in _go_close_alt: []
  3949                           
  3950                           
  3951                           ;main.c: 99:     FLAGS.bits.CLOSED = 1;
  3952  04B9  157C               	bsf	_FLAGS,2
  3953  04BA                     l282:	
  3954                           ;main.c: 100:     do { LATCbits.LATC4 = 0; } while(0);
  3955                           
  3956  04BA  0022               	movlb	2	; select bank2
  3957  04BB  120E               	bcf	14,4	;volatile
  3958  04BC                     l284:	
  3959                           ;main.c: 101:     do { LATCbits.LATC5 = 1; } while(0);
  3960                           
  3961  04BC  168E               	bsf	14,5	;volatile
  3962  04BD                     l286:
  3963  04BD  0008               	return
  3964  04BE                     __end_of_go_close_alt:
  3965                           
  3966                           	psect	text25
  3967  031B                     __ptext25:	
  3968 ;; *************** function _go_close *****************
  3969 ;; Defined at:
  3970 ;;		line 79 in file "main.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;		None
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;		None
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      void 
  3977 ;; Registers used:
  3978 ;;		wreg
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMMON   BANK0   BANK1
  3984 ;;      Params:         0       0       0
  3985 ;;      Locals:         0       0       0
  3986 ;;      Temps:          0       2       0
  3987 ;;      Totals:         0       2       0
  3988 ;;Total ram usage:        2 bytes
  3989 ;; Hardware stack levels used: 1
  3990 ;; Hardware stack levels required when called: 7
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		_povorot
  3995 ;;		_fun_work
  3996 ;;		_switch_wm
  3997 ;; This function uses a non-reentrant model
  3998 ;;
  3999                           
  4000  031B                     _go_close:	
  4001                           ;psect for function _go_close
  4002                           
  4003  031B                     l1778:	
  4004                           ;incstack = 0
  4005                           ; Regs used in _go_close: [wreg]
  4006                           
  4007                           
  4008                           ;main.c: 80:     time_s = 0;
  4009  031B  3000               	movlw	0
  4010  031C  0020               	movlb	0	; select bank0
  4011  031D  00A3               	movwf	_time_s+3
  4012  031E  3000               	movlw	0
  4013  031F  00A2               	movwf	_time_s+2
  4014  0320  3000               	movlw	0
  4015  0321  00A1               	movwf	_time_s+1
  4016  0322  3000               	movlw	0
  4017  0323  00A0               	movwf	_time_s
  4018  0324                     l1780:
  4019  0324  0022               	movlb	2	; select bank2
  4020  0325  160E               	bsf	14,4	;volatile
  4021  0326                     l269:
  4022                           
  4023                           ;main.c: 82:     _delay((unsigned long)((1 * 1000)*(4000000/4000.0)));
  4024  0326  3006               	movlw	6
  4025  0327  0020               	movlb	0	; select bank0
  4026  0328  00AC               	movwf	??_go_close+1
  4027  0329  3013               	movlw	19
  4028  032A  00AB               	movwf	??_go_close
  4029  032B  30AD               	movlw	173
  4030  032C                     u1407:
  4031  032C  0B89               	decfsz	9,f
  4032  032D  2B2C               	goto	u1407
  4033  032E  0BAB               	decfsz	??_go_close,f
  4034  032F  2B2C               	goto	u1407
  4035  0330  0BAC               	decfsz	??_go_close+1,f
  4036  0331  2B2C               	goto	u1407
  4037  0332  3200               	nop2
  4038  0333                     l1782:
  4039  0333  0022               	movlb	2	; select bank2
  4040  0334  168E               	bsf	14,5	;volatile
  4041  0335                     l271:
  4042                           
  4043                           ;main.c: 84:     time_pow_s = 10;
  4044  0335  300A               	movlw	10
  4045  0336  0020               	movlb	0	; select bank0
  4046  0337  00AB               	movwf	??_go_close
  4047  0338  082B               	movf	??_go_close,w
  4048  0339  00AA               	movwf	_time_pow_s
  4049  033A                     l1784:
  4050                           
  4051                           ;main.c: 85:     FLAGS.bits.RELE_POW_WAIT = 1;
  4052  033A  16FC               	bsf	_FLAGS,5
  4053  033B                     l1786:
  4054                           
  4055                           ;main.c: 86:     FLAGS.bits.RELE_CON_WAIT = 1;
  4056  033B  177C               	bsf	_FLAGS,6
  4057  033C                     l272:
  4058  033C  0008               	return
  4059  033D                     __end_of_go_close:
  4060                           
  4061                           	psect	text26
  4062  02C7                     __ptext26:	
  4063 ;; *************** function _beep *****************
  4064 ;; Defined at:
  4065 ;;		line 69 in file "main.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;  delay           2    0[BANK0 ] unsigned int 
  4068 ;;  pause           2    2[BANK0 ] unsigned int 
  4069 ;;  time            1    4[BANK0 ] unsigned char 
  4070 ;;  count           1    5[BANK0 ] unsigned char 
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;  i               1    8[BANK0 ] unsigned char 
  4073 ;;  j               1    7[BANK0 ] unsigned char 
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  1    wreg      void 
  4076 ;; Registers used:
  4077 ;;		wreg, status,2, status,0, pclath, cstack
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMMON   BANK0   BANK1
  4083 ;;      Params:         0       6       0
  4084 ;;      Locals:         0       2       0
  4085 ;;      Temps:          0       1       0
  4086 ;;      Totals:         0       9       0
  4087 ;;Total ram usage:        9 bytes
  4088 ;; Hardware stack levels used: 1
  4089 ;; Hardware stack levels required when called: 8
  4090 ;; This function calls:
  4091 ;;		_switch_zum
  4092 ;; This function is called by:
  4093 ;;		_fun_work
  4094 ;;		_switch_wm
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098  02C7                     _beep:	
  4099                           ;psect for function _beep
  4100                           
  4101  02C7                     l1760:	
  4102                           ;incstack = 0
  4103                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
  4104                           
  4105                           
  4106                           ;main.c: 70:     for (char j = 0; j < count; j++) {
  4107  02C7  0020               	movlb	0	; select bank0
  4108  02C8  01B2               	clrf	beep@j
  4109  02C9  2AEB               	goto	l1776
  4110  02CA                     l1762:
  4111                           
  4112                           ;main.c: 71:         for (char i = 0; i < time; i++) {
  4113  02CA  01B3               	clrf	beep@i
  4114  02CB  2AD7               	goto	l1770
  4115  02CC                     l1764:
  4116                           
  4117                           ;main.c: 72:             switch_zum();
  4118  02CC  3184  243B  3182   	fcall	_switch_zum
  4119  02CF                     l1766:
  4120                           
  4121                           ;main.c: 73:             _delay((unsigned long)((300)*(4000000/4000000.0)));
  4122  02CF  3064               	movlw	100
  4123  02D0                     u1417:
  4124  02D0  0B89               	decfsz	9,f
  4125  02D1  2AD0               	goto	u1417
  4126  02D2                     l1768:
  4127                           
  4128                           ;main.c: 74:         }
  4129  02D2  3001               	movlw	1
  4130  02D3  0020               	movlb	0	; select bank0
  4131  02D4  00B1               	movwf	??_beep
  4132  02D5  0831               	movf	??_beep,w
  4133  02D6  07B3               	addwf	beep@i,f
  4134  02D7                     l1770:
  4135  02D7  082F               	movf	beep@time,w
  4136  02D8  0233               	subwf	beep@i,w
  4137  02D9  1C03               	skipc
  4138  02DA  2ADC               	goto	u901
  4139  02DB  2ADD               	goto	u900
  4140  02DC                     u901:
  4141  02DC  2ACC               	goto	l1764
  4142  02DD                     u900:
  4143  02DD                     l1772:
  4144                           
  4145                           ;main.c: 75:         _delay((unsigned long)((100)*(4000000/4000.0)));
  4146  02DD  3082               	movlw	130
  4147  02DE  0020               	movlb	0	; select bank0
  4148  02DF  00B1               	movwf	??_beep
  4149  02E0  30DD               	movlw	221
  4150  02E1                     u1427:
  4151  02E1  0B89               	decfsz	9,f
  4152  02E2  2AE1               	goto	u1427
  4153  02E3  0BB1               	decfsz	??_beep,f
  4154  02E4  2AE1               	goto	u1427
  4155  02E5  3200               	nop2
  4156  02E6                     l1774:
  4157                           
  4158                           ;main.c: 76:     }
  4159  02E6  3001               	movlw	1
  4160  02E7  0020               	movlb	0	; select bank0
  4161  02E8  00B1               	movwf	??_beep
  4162  02E9  0831               	movf	??_beep,w
  4163  02EA  07B2               	addwf	beep@j,f
  4164  02EB                     l1776:
  4165  02EB  0830               	movf	beep@count,w
  4166  02EC  0232               	subwf	beep@j,w
  4167  02ED  1C03               	skipc
  4168  02EE  2AF0               	goto	u911
  4169  02EF  2AF1               	goto	u910
  4170  02F0                     u911:
  4171  02F0  2ACA               	goto	l1762
  4172  02F1                     u910:
  4173  02F1                     l265:
  4174  02F1  0008               	return
  4175  02F2                     __end_of_beep:
  4176                           
  4177                           	psect	text27
  4178  043B                     __ptext27:	
  4179 ;; *************** function _switch_zum *****************
  4180 ;; Defined at:
  4181 ;;		line 61 in file "main.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;		None
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;		None
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      void 
  4188 ;; Registers used:
  4189 ;;		status,0
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMMON   BANK0   BANK1
  4195 ;;      Params:         0       0       0
  4196 ;;      Locals:         0       0       0
  4197 ;;      Temps:          0       0       0
  4198 ;;      Totals:         0       0       0
  4199 ;;Total ram usage:        0 bytes
  4200 ;; Hardware stack levels used: 1
  4201 ;; Hardware stack levels required when called: 7
  4202 ;; This function calls:
  4203 ;;		Nothing
  4204 ;; This function is called by:
  4205 ;;		_beep
  4206 ;;		_start_setup
  4207 ;;		_main
  4208 ;;		_TMR0_ISR
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212  043B                     _switch_zum:	
  4213                           ;psect for function _switch_zum
  4214                           
  4215                           
  4216                           ;Skip over the trampoline to the duplicate function for level 1
  4217  043B  1C7E               	btfss	int$flags,0
  4218  043C  2C3E               	goto	_switch_zum$intlevel0
  4219  043D  2C78               	ljmp	i1_switch_zum
  4220  043E                     _switch_zum$intlevel0:
  4221  043E                     l251:	
  4222                           ;incstack = 0
  4223                           ; Regs used in _switch_zum: [status,0]
  4224                           ;main.c: 62:     do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  4225                           
  4226  043E                     l1730:
  4227  043E  1003               	clrc
  4228  043F  0022               	movlb	2	; select bank2
  4229  0440  1E8C               	btfss	12,5	;volatile
  4230  0441  1403               	setc
  4231  0442  1803               	btfsc	3,0
  4232  0443  2C45               	goto	u811
  4233  0444  2C48               	goto	u810
  4234  0445                     u811:
  4235  0445  0022               	movlb	2	; select bank2
  4236  0446  168C               	bsf	12,5	;volatile
  4237  0447  2C4A               	goto	u824
  4238  0448                     u810:
  4239  0448  0022               	movlb	2	; select bank2
  4240  0449  128C               	bcf	12,5	;volatile
  4241  044A                     u824:
  4242  044A                     l253:
  4243  044A  0008               	return
  4244  044B                     __end_of_switch_zum:
  4245                           
  4246                           	psect	intentry
  4247  0004                     __pintentry:	
  4248 ;; *************** function _INTERRUPT_InterruptManager *****************
  4249 ;; Defined at:
  4250 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;		None
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;		None
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  1    wreg      void 
  4257 ;; Registers used:
  4258 ;;		wreg, status,2, status,0, pclath, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMMON   BANK0   BANK1
  4264 ;;      Params:         0       0       0
  4265 ;;      Locals:         0       0       0
  4266 ;;      Temps:          0       0       0
  4267 ;;      Totals:         0       0       0
  4268 ;;Total ram usage:        0 bytes
  4269 ;; Hardware stack levels used: 1
  4270 ;; Hardware stack levels required when called: 6
  4271 ;; This function calls:
  4272 ;;		_TMR0_ISR
  4273 ;;		_TMR2_ISR
  4274 ;; This function is called by:
  4275 ;;		Interrupt level 1
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279  0004                     _INTERRUPT_InterruptManager:
  4280                           
  4281                           ;incstack = 0
  4282  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4283                           
  4284                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  4285  0005  3180               	pagesel	$
  4286  0006                     i1l2036:
  4287                           
  4288                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4289  0006  1E8B               	btfss	11,5	;volatile
  4290  0007  2809               	goto	u133_21
  4291  0008  280A               	goto	u133_20
  4292  0009                     u133_21:
  4293  0009  2812               	goto	i1l110
  4294  000A                     u133_20:
  4295  000A                     i1l2038:
  4296  000A  1D0B               	btfss	11,2	;volatile
  4297  000B  280D               	goto	u134_21
  4298  000C  280E               	goto	u134_20
  4299  000D                     u134_21:
  4300  000D  2812               	goto	i1l110
  4301  000E                     u134_20:
  4302  000E                     i1l2040:
  4303                           
  4304                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  4305  000E  3184  245B  3180   	fcall	_TMR0_ISR
  4306                           
  4307                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  4308  0011  2824               	goto	i1l116
  4309  0012                     i1l110:	
  4310                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  4311                           
  4312  0012  1F0B               	btfss	11,6	;volatile
  4313  0013  2815               	goto	u135_21
  4314  0014  2816               	goto	u135_20
  4315  0015                     u135_21:
  4316  0015  2824               	goto	i1l116
  4317  0016                     u135_20:
  4318  0016                     i1l2042:
  4319                           
  4320                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  4321  0016  0021               	movlb	1	; select bank1
  4322  0017  1C91               	btfss	17,1	;volatile
  4323  0018  281A               	goto	u136_21
  4324  0019  281B               	goto	u136_20
  4325  001A                     u136_21:
  4326  001A  2824               	goto	i1l115
  4327  001B                     u136_20:
  4328  001B                     i1l2044:
  4329  001B  0020               	movlb	0	; select bank0
  4330  001C  1C91               	btfss	17,1	;volatile
  4331  001D  281F               	goto	u137_21
  4332  001E  2820               	goto	u137_20
  4333  001F                     u137_21:
  4334  001F  2824               	goto	i1l115
  4335  0020                     u137_20:
  4336  0020                     i1l2046:
  4337                           
  4338                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
  4339  0020  3184  2413  3180   	fcall	_TMR2_ISR
  4340                           
  4341                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4342  0023  2824               	goto	i1l116
  4343  0024                     i1l115:	
  4344                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  4345                           
  4346  0024                     i1l116:
  4347  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4348  0025  0009               	retfie
  4349  0026                     __end_of_INTERRUPT_InterruptManager:
  4350                           
  4351                           	psect	text29
  4352  0413                     __ptext29:	
  4353 ;; *************** function _TMR2_ISR *****************
  4354 ;; Defined at:
  4355 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;		None
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;		None
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      void 
  4362 ;; Registers used:
  4363 ;;		wreg, status,2, status,0, pclath, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMMON   BANK0   BANK1
  4369 ;;      Params:         0       0       0
  4370 ;;      Locals:         0       0       0
  4371 ;;      Temps:          0       0       0
  4372 ;;      Totals:         0       0       0
  4373 ;;Total ram usage:        0 bytes
  4374 ;; Hardware stack levels used: 1
  4375 ;; Hardware stack levels required when called: 5
  4376 ;; This function calls:
  4377 ;;		_TMR2_CallBack
  4378 ;; This function is called by:
  4379 ;;		_INTERRUPT_InterruptManager
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383  0413                     _TMR2_ISR:	
  4384                           ;psect for function _TMR2_ISR
  4385                           
  4386  0413                     i1l1866:	
  4387                           ;incstack = 0
  4388                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  4389                           
  4390                           
  4391                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
  4392  0413  0020               	movlb	0	; select bank0
  4393  0414  1091               	bcf	17,1	;volatile
  4394  0415                     i1l1868:
  4395                           
  4396                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 100)
  4397  0415  3001               	movlw	1
  4398  0416  07F8               	addwf	TMR2_ISR@CountCallBack,f	;volatile
  4399  0417  3000               	movlw	0
  4400  0418  3DF9               	addwfc	TMR2_ISR@CountCallBack+1,f	;volatile
  4401  0419  3000               	movlw	0
  4402  041A  0279               	subwf	TMR2_ISR@CountCallBack+1,w	;volatile
  4403  041B  3064               	movlw	100
  4404  041C  1903               	skipnz
  4405  041D  0278               	subwf	TMR2_ISR@CountCallBack,w	;volatile
  4406  041E  1C03               	skipc
  4407  041F  2C21               	goto	u103_21
  4408  0420  2C22               	goto	u103_20
  4409  0421                     u103_21:
  4410  0421  2C27               	goto	i1l160
  4411  0422                     u103_20:
  4412  0422                     i1l1870:
  4413                           
  4414                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
  4415  0422  3184  246B  3184   	fcall	_TMR2_CallBack
  4416  0425                     i1l1872:
  4417                           
  4418                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
  4419  0425  01F8               	clrf	TMR2_ISR@CountCallBack	;volatile
  4420  0426  01F9               	clrf	TMR2_ISR@CountCallBack+1	;volatile
  4421  0427                     i1l160:
  4422  0427  0008               	return
  4423  0428                     __end_of_TMR2_ISR:
  4424                           
  4425                           	psect	text30
  4426  046B                     __ptext30:	
  4427 ;; *************** function _TMR2_CallBack *****************
  4428 ;; Defined at:
  4429 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;		None
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;		None
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      void 
  4436 ;; Registers used:
  4437 ;;		wreg, status,2, status,0, pclath, cstack
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMMON   BANK0   BANK1
  4443 ;;      Params:         0       0       0
  4444 ;;      Locals:         0       0       0
  4445 ;;      Temps:          0       0       0
  4446 ;;      Totals:         0       0       0
  4447 ;;Total ram usage:        0 bytes
  4448 ;; Hardware stack levels used: 1
  4449 ;; Hardware stack levels required when called: 4
  4450 ;; This function calls:
  4451 ;;		Absolute function
  4452 ;;		_TMR2_DefaultInterruptHandler
  4453 ;;		_sec_tick_work
  4454 ;; This function is called by:
  4455 ;;		_TMR2_ISR
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459  046B                     _TMR2_CallBack:	
  4460                           ;psect for function _TMR2_CallBack
  4461                           
  4462  046B                     i1l1756:	
  4463                           ;incstack = 0
  4464                           ; Regs used in _TMR2_CallBack: [wreg+status,2+status,0+pclath+cstack]
  4465                           
  4466                           
  4467                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
  4468  046B  0020               	movlb	0	; select bank0
  4469  046C  0838               	movf	_TMR2_InterruptHandler,w
  4470  046D  0439               	iorwf	_TMR2_InterruptHandler+1,w
  4471  046E  1903               	btfsc	3,2
  4472  046F  2C71               	goto	u89_21
  4473  0470  2C72               	goto	u89_20
  4474  0471                     u89_21:
  4475  0471  2C77               	goto	i1l164
  4476  0472                     u89_20:
  4477  0472                     i1l1758:
  4478                           
  4479                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
  4480  0472  0839               	movf	_TMR2_InterruptHandler+1,w
  4481  0473  008A               	movwf	10
  4482  0474  0838               	movf	_TMR2_InterruptHandler,w
  4483  0475  000A               	callw
  4484  0476  3184               	pagesel	$
  4485  0477                     i1l164:
  4486  0477  0008               	return
  4487  0478                     __end_of_TMR2_CallBack:
  4488                           
  4489                           	psect	text31
  4490  04DA                     __ptext31:	
  4491 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4492 ;; Defined at:
  4493 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;		None
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;		None
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  1    wreg      void 
  4500 ;; Registers used:
  4501 ;;		None
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMMON   BANK0   BANK1
  4507 ;;      Params:         0       0       0
  4508 ;;      Locals:         0       0       0
  4509 ;;      Temps:          0       0       0
  4510 ;;      Totals:         0       0       0
  4511 ;;Total ram usage:        0 bytes
  4512 ;; Hardware stack levels used: 1
  4513 ;; This function calls:
  4514 ;;		Nothing
  4515 ;; This function is called by:
  4516 ;;		_TMR2_Initialize
  4517 ;;		_TMR2_CallBack
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521  04DA                     _TMR2_DefaultInterruptHandler:	
  4522                           ;psect for function _TMR2_DefaultInterruptHandler
  4523                           
  4524  04DA                     i1l170:	
  4525                           ;incstack = 0
  4526                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  4527                           
  4528  04DA  0008               	return
  4529  04DB                     __end_of_TMR2_DefaultInterruptHandler:
  4530                           
  4531                           	psect	text32
  4532  01EA                     __ptext32:	
  4533 ;; *************** function _sec_tick_work *****************
  4534 ;; Defined at:
  4535 ;;		line 247 in file "main.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;		None
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;		None
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  1    wreg      void 
  4542 ;; Registers used:
  4543 ;;		wreg, status,2, status,0, pclath, cstack
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMMON   BANK0   BANK1
  4549 ;;      Params:         0       0       0
  4550 ;;      Locals:         0       0       0
  4551 ;;      Temps:          1       0       0
  4552 ;;      Totals:         1       0       0
  4553 ;;Total ram usage:        1 bytes
  4554 ;; Hardware stack levels used: 1
  4555 ;; Hardware stack levels required when called: 3
  4556 ;; This function calls:
  4557 ;;		_get_measure
  4558 ;;		_rele_tick
  4559 ;;		_toggle_tone
  4560 ;; This function is called by:
  4561 ;;		_start_setup
  4562 ;;		_TMR2_CallBack
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566  01EA                     _sec_tick_work:	
  4567                           ;psect for function _sec_tick_work
  4568                           
  4569  01EA                     i1l1732:	
  4570                           ;incstack = 0
  4571                           ; Regs used in _sec_tick_work: [wreg+status,2+status,0+pclath+cstack]
  4572                           
  4573                           
  4574                           ;main.c: 248:     time_s++;
  4575  01EA  3001               	movlw	1
  4576  01EB  0020               	movlb	0	; select bank0
  4577  01EC  07A0               	addwf	_time_s,f
  4578  01ED  3000               	movlw	0
  4579  01EE  3DA1               	addwfc	_time_s+1,f
  4580  01EF  3000               	movlw	0
  4581  01F0  3DA2               	addwfc	_time_s+2,f
  4582  01F1  3000               	movlw	0
  4583  01F2  3DA3               	addwfc	_time_s+3,f
  4584  01F3                     i1l1734:
  4585                           
  4586                           ;main.c: 249:     rele_tick();
  4587  01F3  3182  22F2  3181   	fcall	_rele_tick
  4588  01F6  0064               	clrwdt	;# 
  4589  01F7                     i1l1736:
  4590                           
  4591                           ;main.c: 251:     if (FLAGS.bits.ALARM) {
  4592  01F7  1C7C               	btfss	_FLAGS,0
  4593  01F8  29FA               	goto	u83_21
  4594  01F9  29FB               	goto	u83_20
  4595  01FA                     u83_21:
  4596  01FA  2A0B               	goto	i1l1742
  4597  01FB                     u83_20:
  4598  01FB                     i1l1738:
  4599  01FB  1003               	clrc
  4600  01FC  0022               	movlb	2	; select bank2
  4601  01FD  1E0C               	btfss	12,4	;volatile
  4602  01FE  1403               	setc
  4603  01FF  1803               	btfsc	3,0
  4604  0200  2A02               	goto	u84_21
  4605  0201  2A05               	goto	u84_20
  4606  0202                     u84_21:
  4607  0202  0022               	movlb	2	; select bank2
  4608  0203  160C               	bsf	12,4	;volatile
  4609  0204  2A07               	goto	u85_24
  4610  0205                     u84_20:
  4611  0205  0022               	movlb	2	; select bank2
  4612  0206  120C               	bcf	12,4	;volatile
  4613  0207                     u85_24:
  4614  0207                     i1l1740:
  4615                           
  4616                           ;main.c: 253:         toggle_tone();
  4617  0207  3184  248F  3181   	fcall	_toggle_tone
  4618                           
  4619                           ;main.c: 254:     } else {
  4620  020A  2A25               	goto	i1l411
  4621  020B                     i1l1742:
  4622                           
  4623                           ;main.c: 255:         get_measure();
  4624  020B  3182  2295  3181   	fcall	_get_measure
  4625  020E                     i1l1744:
  4626                           
  4627                           ;main.c: 256:         static char iled;;main.c: 257:         iled++;
  4628  020E  3001               	movlw	1
  4629  020F  00F7               	movwf	??_sec_tick_work
  4630  0210  0877               	movf	??_sec_tick_work,w
  4631  0211  07FA               	addwf	sec_tick_work@iled,f
  4632  0212                     i1l1746:
  4633                           
  4634                           ;main.c: 258:         if (iled > 2) {
  4635  0212  3003               	movlw	3
  4636  0213  027A               	subwf	sec_tick_work@iled,w
  4637  0214  1C03               	skipc
  4638  0215  2A17               	goto	u86_21
  4639  0216  2A18               	goto	u86_20
  4640  0217                     u86_21:
  4641  0217  2A25               	goto	i1l411
  4642  0218                     u86_20:
  4643  0218                     i1l1748:
  4644  0218  1003               	clrc
  4645  0219  0022               	movlb	2	; select bank2
  4646  021A  1E0C               	btfss	12,4	;volatile
  4647  021B  1403               	setc
  4648  021C  1803               	btfsc	3,0
  4649  021D  2A1F               	goto	u87_21
  4650  021E  2A22               	goto	u87_20
  4651  021F                     u87_21:
  4652  021F  0022               	movlb	2	; select bank2
  4653  0220  160C               	bsf	12,4	;volatile
  4654  0221  2A24               	goto	u88_24
  4655  0222                     u87_20:
  4656  0222  0022               	movlb	2	; select bank2
  4657  0223  120C               	bcf	12,4	;volatile
  4658  0224                     u88_24:
  4659  0224                     i1l1750:
  4660                           
  4661                           ;main.c: 260:             iled = 0;
  4662  0224  01FA               	clrf	sec_tick_work@iled
  4663  0225                     i1l411:
  4664  0225  0008               	return
  4665  0226                     __end_of_sec_tick_work:
  4666                           
  4667                           	psect	text33
  4668  048F                     __ptext33:	
  4669 ;; *************** function _toggle_tone *****************
  4670 ;; Defined at:
  4671 ;;		line 65 in file "main.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;		None
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;		None
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    wreg      void 
  4678 ;; Registers used:
  4679 ;;		status,0
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMMON   BANK0   BANK1
  4685 ;;      Params:         0       0       0
  4686 ;;      Locals:         0       0       0
  4687 ;;      Temps:          0       0       0
  4688 ;;      Totals:         0       0       0
  4689 ;;Total ram usage:        0 bytes
  4690 ;; Hardware stack levels used: 1
  4691 ;; This function calls:
  4692 ;;		Nothing
  4693 ;; This function is called by:
  4694 ;;		_sec_tick_work
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698  048F                     _toggle_tone:	
  4699                           ;psect for function _toggle_tone
  4700                           
  4701  048F                     i1l1628:	
  4702                           ;incstack = 0
  4703                           ; Regs used in _toggle_tone: [status,0]
  4704                           
  4705                           
  4706                           ;main.c: 66:     INTCONbits.TMR0IE = ~INTCONbits.TMR0IE;
  4707  048F  1003               	clrc
  4708  0490  1E8B               	btfss	11,5	;volatile
  4709  0491  1403               	setc
  4710  0492  1803               	btfsc	3,0
  4711  0493  2C95               	goto	u72_21
  4712  0494  2C97               	goto	u72_20
  4713  0495                     u72_21:
  4714  0495  168B               	bsf	11,5	;volatile
  4715  0496  2C98               	goto	u73_24
  4716  0497                     u72_20:
  4717  0497  128B               	bcf	11,5	;volatile
  4718  0498                     u73_24:
  4719  0498                     i1l256:
  4720  0498  0008               	return
  4721  0499                     __end_of_toggle_tone:
  4722                           
  4723                           	psect	text34
  4724  02F2                     __ptext34:	
  4725 ;; *************** function _rele_tick *****************
  4726 ;; Defined at:
  4727 ;;		line 226 in file "main.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;		None
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;		None
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      void 
  4734 ;; Registers used:
  4735 ;;		wreg, status,2, status,0
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMMON   BANK0   BANK1
  4741 ;;      Params:         0       0       0
  4742 ;;      Locals:         0       0       0
  4743 ;;      Temps:          2       0       0
  4744 ;;      Totals:         2       0       0
  4745 ;;Total ram usage:        2 bytes
  4746 ;; Hardware stack levels used: 1
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_sec_tick_work
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754  02F2                     _rele_tick:	
  4755                           ;psect for function _rele_tick
  4756                           
  4757  02F2                     i1l1650:	
  4758                           ;incstack = 0
  4759                           ; Regs used in _rele_tick: [wreg+status,2+status,0]
  4760                           
  4761                           
  4762                           ;main.c: 227:     if (FLAGS.bits.RELE_POW_WAIT) {
  4763  02F2  1EFC               	btfss	_FLAGS,5
  4764  02F3  2AF5               	goto	u77_21
  4765  02F4  2AF6               	goto	u77_20
  4766  02F5                     u77_21:
  4767  02F5  2B1A               	goto	i1l399
  4768  02F6                     u77_20:
  4769  02F6                     i1l1652:
  4770                           
  4771                           ;main.c: 228:         if (time_pow_s > 0) {
  4772  02F6  0020               	movlb	0	; select bank0
  4773  02F7  082A               	movf	_time_pow_s,w
  4774  02F8  1903               	btfsc	3,2
  4775  02F9  2AFB               	goto	u78_21
  4776  02FA  2AFC               	goto	u78_20
  4777  02FB                     u78_21:
  4778  02FB  2AFF               	goto	i1l389
  4779  02FC                     u78_20:
  4780  02FC                     i1l1654:
  4781                           
  4782                           ;main.c: 229:             time_pow_s--;
  4783  02FC  3001               	movlw	1
  4784  02FD  02AA               	subwf	_time_pow_s,f
  4785                           
  4786                           ;main.c: 230:         } else {
  4787  02FE  2B1A               	goto	i1l399
  4788  02FF                     i1l389:
  4789                           
  4790                           ;main.c: 231:             if (FLAGS.bits.RELE_CON_WAIT) {
  4791  02FF  1F7C               	btfss	_FLAGS,6
  4792  0300  2B02               	goto	u79_21
  4793  0301  2B03               	goto	u79_20
  4794  0302                     u79_21:
  4795  0302  2B16               	goto	i1l397
  4796  0303                     u79_20:
  4797  0303                     i1l392:	
  4798                           ;main.c: 232:                 do { LATCbits.LATC5 = 0; } while(0);
  4799                           
  4800  0303  0022               	movlb	2	; select bank2
  4801  0304  128E               	bcf	14,5	;volatile
  4802  0305                     i1l1656:
  4803                           
  4804                           ;main.c: 233:                 _delay((unsigned long)((1 * 1000)*(4000000/4000.0)));
  4805  0305  3006               	movlw	6
  4806  0306  00F1               	movwf	??_rele_tick+1
  4807  0307  3013               	movlw	19
  4808  0308  00F0               	movwf	??_rele_tick
  4809  0309  30AE               	movlw	174
  4810  030A                     u143_27:
  4811  030A  0B89               	decfsz	9,f
  4812  030B  2B0A               	goto	u143_27
  4813  030C  0BF0               	decfsz	??_rele_tick,f
  4814  030D  2B0A               	goto	u143_27
  4815  030E  0BF1               	decfsz	??_rele_tick+1,f
  4816  030F  2B0A               	goto	u143_27
  4817  0310                     i1l1658:
  4818  0310  0022               	movlb	2	; select bank2
  4819  0311  120E               	bcf	14,4	;volatile
  4820  0312                     i1l1660:
  4821                           
  4822                           ;main.c: 235:                 FLAGS.bits.CLOSED = 1;
  4823  0312  157C               	bsf	_FLAGS,2
  4824  0313                     i1l1662:
  4825                           
  4826                           ;main.c: 236:                 FLAGS.bits.RELE_CON_WAIT = 0;
  4827  0313  137C               	bcf	_FLAGS,6
  4828  0314                     i1l1664:
  4829                           
  4830                           ;main.c: 237:                 FLAGS.bits.RELE_POW_WAIT = 0;
  4831  0314  12FC               	bcf	_FLAGS,5
  4832                           
  4833                           ;main.c: 238:             } else {
  4834  0315  2B1A               	goto	i1l399
  4835  0316                     i1l397:	
  4836                           ;main.c: 239:                 do { LATCbits.LATC5 = 0; } while(0);
  4837                           
  4838  0316  0022               	movlb	2	; select bank2
  4839  0317  128E               	bcf	14,5	;volatile
  4840  0318                     i1l398:
  4841                           
  4842                           ;main.c: 240:                 FLAGS.bits.CLOSED = 0;
  4843  0318  117C               	bcf	_FLAGS,2
  4844                           
  4845                           ;main.c: 241:                 FLAGS.bits.RELE_POW_WAIT = 0;
  4846  0319  12FC               	bcf	_FLAGS,5
  4847  031A                     i1l399:
  4848  031A  0008               	return
  4849  031B                     __end_of_rele_tick:
  4850                           
  4851                           	psect	text35
  4852  0295                     __ptext35:	
  4853 ;; *************** function _get_measure *****************
  4854 ;; Defined at:
  4855 ;;		line 122 in file "main.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;		None
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;  res             2    5[COMMON] unsigned int 
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  1    wreg      void 
  4862 ;; Registers used:
  4863 ;;		wreg, status,2, status,0, pclath, cstack
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMMON   BANK0   BANK1
  4869 ;;      Params:         0       0       0
  4870 ;;      Locals:         2       0       0
  4871 ;;      Temps:          1       0       0
  4872 ;;      Totals:         3       0       0
  4873 ;;Total ram usage:        3 bytes
  4874 ;; Hardware stack levels used: 1
  4875 ;; Hardware stack levels required when called: 2
  4876 ;; This function calls:
  4877 ;;		_start_alarm
  4878 ;;		i1_ADC_GetConversion
  4879 ;; This function is called by:
  4880 ;;		_sec_tick_work
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884  0295                     _get_measure:	
  4885                           ;psect for function _get_measure
  4886                           
  4887  0295                     i1l305:	
  4888                           ;incstack = 0
  4889                           ; Regs used in _get_measure: [wreg+status,2+status,0+pclath+cstack]
  4890                           ;main.c: 123:     static unsigned char measures;;main.c: 124:     do { LATCbits.LATC1 = 
      +                          1; } while(0);
  4891                           
  4892  0295  0022               	movlb	2	; select bank2
  4893  0296  148E               	bsf	14,1	;volatile
  4894  0297                     i1l307:	
  4895                           ;main.c: 125:     do { ANSELCbits.ANSC3 = 1; } while(0);
  4896                           
  4897  0297  0023               	movlb	3	; select bank3
  4898  0298  158E               	bsf	14,3	;volatile
  4899  0299                     i1l1630:
  4900                           
  4901                           ;main.c: 126:     unsigned res = ADC_GetConversion(PIN_WSP_STATE);
  4902  0299  3007               	movlw	7
  4903  029A  3183  23B7  3182   	fcall	i1_ADC_GetConversion
  4904  029D  0871               	movf	?i1_ADC_GetConversion+1,w
  4905  029E  00F6               	movwf	get_measure@res+1
  4906  029F  0870               	movf	?i1_ADC_GetConversion,w
  4907  02A0  00F5               	movwf	get_measure@res
  4908  02A1                     i1l1632:
  4909  02A1  0023               	movlb	3	; select bank3
  4910  02A2  118E               	bcf	14,3	;volatile
  4911  02A3                     i1l1634:
  4912  02A3  0022               	movlb	2	; select bank2
  4913  02A4  108E               	bcf	14,1	;volatile
  4914  02A5                     i1l1636:
  4915                           
  4916                           ;main.c: 129:     if (res < BAD_WSP_VOLTAGE) measures++;
  4917  02A5  304E               	movlw	78
  4918  02A6  0276               	subwf	get_measure@res+1,w
  4919  02A7  3020               	movlw	32
  4920  02A8  1903               	skipnz
  4921  02A9  0275               	subwf	get_measure@res,w
  4922  02AA  1803               	skipnc
  4923  02AB  2AAD               	goto	u74_21
  4924  02AC  2AAE               	goto	u74_20
  4925  02AD                     u74_21:
  4926  02AD  2AB3               	goto	i1l1640
  4927  02AE                     u74_20:
  4928  02AE                     i1l1638:
  4929  02AE  3001               	movlw	1
  4930  02AF  00F4               	movwf	??_get_measure
  4931  02B0  0874               	movf	??_get_measure,w
  4932  02B1  07FB               	addwf	get_measure@measures,f
  4933  02B2  2ABD               	goto	i1l1644
  4934  02B3                     i1l1640:
  4935  02B3  309C               	movlw	156
  4936  02B4  0276               	subwf	get_measure@res+1,w
  4937  02B5  3041               	movlw	65
  4938  02B6  1903               	skipnz
  4939  02B7  0275               	subwf	get_measure@res,w
  4940  02B8  1C03               	skipc
  4941  02B9  2ABB               	goto	u75_21
  4942  02BA  2ABC               	goto	u75_20
  4943  02BB                     u75_21:
  4944  02BB  2ABD               	goto	i1l1644
  4945  02BC                     u75_20:
  4946  02BC                     i1l1642:
  4947  02BC  01FB               	clrf	get_measure@measures
  4948  02BD                     i1l1644:
  4949                           
  4950                           ;main.c: 131:     if (measures > 2) start_alarm();
  4951  02BD  3003               	movlw	3
  4952  02BE  027B               	subwf	get_measure@measures,w
  4953  02BF  1C03               	skipc
  4954  02C0  2AC2               	goto	u76_21
  4955  02C1  2AC3               	goto	u76_20
  4956  02C2                     u76_21:
  4957  02C2  2AC6               	goto	i1l317
  4958  02C3                     u76_20:
  4959  02C3                     i1l1646:
  4960  02C3  3184  244B  3182   	fcall	_start_alarm
  4961  02C6                     i1l317:
  4962  02C6  0008               	return
  4963  02C7                     __end_of_get_measure:
  4964                           
  4965                           	psect	text36
  4966  03B7                     __ptext36:	
  4967 ;; *************** function i1_ADC_GetConversion *****************
  4968 ;; Defined at:
  4969 ;;		line 112 in file "mcc_generated_files/adc.c"
  4970 ;; Parameters:    Size  Location     Type
  4971 ;;  channel         1    wreg     enum E2178
  4972 ;; Auto vars:     Size  Location     Type
  4973 ;;  channel         1    3[COMMON] enum E2178
  4974 ;; Return value:  Size  Location     Type
  4975 ;;                  2    0[COMMON] unsigned short 
  4976 ;; Registers used:
  4977 ;;		wreg, status,2, status,0
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMMON   BANK0   BANK1
  4983 ;;      Params:         2       0       0
  4984 ;;      Locals:         1       0       0
  4985 ;;      Temps:          1       0       0
  4986 ;;      Totals:         4       0       0
  4987 ;;Total ram usage:        4 bytes
  4988 ;; Hardware stack levels used: 1
  4989 ;; This function calls:
  4990 ;;		Nothing
  4991 ;; This function is called by:
  4992 ;;		_get_measure
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996  03B7                     i1_ADC_GetConversion:	
  4997                           ;psect for function i1_ADC_GetConversion
  4998                           
  4999                           
  5000                           ;incstack = 0
  5001                           ; Regs used in i1_ADC_GetConversion: [wreg+status,2+status,0]
  5002                           ;i1ADC_GetConversion@channel stored from wreg
  5003  03B7  00F3               	movwf	i1ADC_GetConversion@channel
  5004  03B8                     i1l1612:
  5005                           
  5006                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  5007  03B8  0873               	movf	i1ADC_GetConversion@channel,w
  5008  03B9  00F2               	movwf	??i1_ADC_GetConversion
  5009  03BA  0DF2               	rlf	??i1_ADC_GetConversion,f
  5010  03BB  0DF2               	rlf	??i1_ADC_GetConversion,f
  5011  03BC  0021               	movlb	1	; select bank1
  5012  03BD  081D               	movf	29,w	;volatile
  5013  03BE  0672               	xorwf	??i1_ADC_GetConversion,w
  5014  03BF  3983               	andlw	-125
  5015  03C0  0672               	xorwf	??i1_ADC_GetConversion,w
  5016  03C1  009D               	movwf	29	;volatile
  5017  03C2                     i1l1614:
  5018                           
  5019                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  5020  03C2  141D               	bsf	29,0	;volatile
  5021  03C3                     i1l1616:
  5022                           
  5023                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  5024  03C3  3006               	movlw	6
  5025  03C4                     u144_27:
  5026  03C4  0B89               	decfsz	9,f
  5027  03C5  2BC4               	goto	u144_27
  5028  03C6  3200               	nop2
  5029  03C7                     i1l1618:
  5030                           
  5031                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  5032  03C7  0021               	movlb	1	; select bank1
  5033  03C8  149D               	bsf	29,1	;volatile
  5034  03C9                     i1l63:	
  5035                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  5036                           
  5037                           
  5038                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  5039  03C9  189D               	btfsc	29,1	;volatile
  5040  03CA  2BCC               	goto	u71_21
  5041  03CB  2BCD               	goto	u71_20
  5042  03CC                     u71_21:
  5043  03CC  2BC9               	goto	i1l63
  5044  03CD                     u71_20:
  5045  03CD                     i1l1620:
  5046                           
  5047                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  5048  03CD  081C               	movf	28,w	;volatile
  5049  03CE  00F1               	movwf	?i1_ADC_GetConversion+1
  5050  03CF  081B               	movf	27,w	;volatile
  5051  03D0  00F0               	movwf	?i1_ADC_GetConversion
  5052  03D1                     i1l66:
  5053  03D1  0008               	return
  5054  03D2                     __end_ofi1_ADC_GetConversion:
  5055                           
  5056                           	psect	text37
  5057  044B                     __ptext37:	
  5058 ;; *************** function _start_alarm *****************
  5059 ;; Defined at:
  5060 ;;		line 111 in file "main.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;		None
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;		None
  5065 ;; Return value:  Size  Location     Type
  5066 ;;                  1    wreg      void 
  5067 ;; Registers used:
  5068 ;;		wreg, status,2, status,0, pclath, cstack
  5069 ;; Tracked objects:
  5070 ;;		On entry : 0/0
  5071 ;;		On exit  : 0/0
  5072 ;;		Unchanged: 0/0
  5073 ;; Data sizes:     COMMON   BANK0   BANK1
  5074 ;;      Params:         0       0       0
  5075 ;;      Locals:         0       0       0
  5076 ;;      Temps:          0       0       0
  5077 ;;      Totals:         0       0       0
  5078 ;;Total ram usage:        0 bytes
  5079 ;; Hardware stack levels used: 1
  5080 ;; Hardware stack levels required when called: 1
  5081 ;; This function calls:
  5082 ;;		i1_go_close
  5083 ;;		i1_go_close_alt
  5084 ;; This function is called by:
  5085 ;;		_get_measure
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089  044B                     _start_alarm:	
  5090                           ;psect for function _start_alarm
  5091                           
  5092  044B                     i1l1606:	
  5093                           ;incstack = 0
  5094                           ; Regs used in _start_alarm: [wreg+status,2+status,0+pclath+cstack]
  5095                           
  5096                           
  5097                           ;main.c: 112:     FLAGS.bits.ALARM = 1;
  5098  044B  147C               	bsf	_FLAGS,0
  5099  044C                     i1l296:	
  5100                           ;main.c: 113:     do { LATCbits.LATC0 = 1; } while(0);
  5101                           
  5102  044C  0022               	movlb	2	; select bank2
  5103  044D  140E               	bsf	14,0	;volatile
  5104  044E                     i1l297:
  5105                           
  5106                           ;main.c: 114:     INTCONbits.TMR0IE = 1;
  5107  044E  168B               	bsf	11,5	;volatile
  5108                           
  5109                           ;main.c: 115:     if (FLAGS.bits.NORMAL_WORK_MODE) {
  5110  044F  1CFC               	btfss	_FLAGS,1
  5111  0450  2C52               	goto	u70_21
  5112  0451  2C53               	goto	u70_20
  5113  0452                     u70_21:
  5114  0452  2C57               	goto	i1l1610
  5115  0453                     u70_20:
  5116  0453                     i1l1608:
  5117                           
  5118                           ;main.c: 116:         go_close();
  5119  0453  3183  235E  3184   	fcall	i1_go_close
  5120                           
  5121                           ;main.c: 117:     } else {
  5122  0456  2C5A               	goto	i1l300
  5123  0457                     i1l1610:
  5124                           
  5125                           ;main.c: 118:         go_close_alt();
  5126  0457  3184  24BE  3184   	fcall	i1_go_close_alt
  5127  045A                     i1l300:
  5128  045A  0008               	return
  5129  045B                     __end_of_start_alarm:
  5130                           
  5131                           	psect	text38
  5132  04BE                     __ptext38:	
  5133 ;; *************** function i1_go_close_alt *****************
  5134 ;; Defined at:
  5135 ;;		line 98 in file "main.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;		None
  5138 ;; Auto vars:     Size  Location     Type
  5139 ;;		None
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  1    wreg      void 
  5142 ;; Registers used:
  5143 ;;		None
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMMON   BANK0   BANK1
  5149 ;;      Params:         0       0       0
  5150 ;;      Locals:         0       0       0
  5151 ;;      Temps:          0       0       0
  5152 ;;      Totals:         0       0       0
  5153 ;;Total ram usage:        0 bytes
  5154 ;; Hardware stack levels used: 1
  5155 ;; This function calls:
  5156 ;;		Nothing
  5157 ;; This function is called by:
  5158 ;;		_start_alarm
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162  04BE                     i1_go_close_alt:	
  5163                           ;psect for function i1_go_close_alt
  5164                           
  5165  04BE                     i1l1604:	
  5166                           ;incstack = 0
  5167                           ; Regs used in i1_go_close_alt: []
  5168                           
  5169                           
  5170                           ;main.c: 99:     FLAGS.bits.CLOSED = 1;
  5171  04BE  157C               	bsf	_FLAGS,2
  5172  04BF                     i1l282:	
  5173                           ;main.c: 100:     do { LATCbits.LATC4 = 0; } while(0);
  5174                           
  5175  04BF  0022               	movlb	2	; select bank2
  5176  04C0  120E               	bcf	14,4	;volatile
  5177  04C1                     i1l284:	
  5178                           ;main.c: 101:     do { LATCbits.LATC5 = 1; } while(0);
  5179                           
  5180  04C1  168E               	bsf	14,5	;volatile
  5181  04C2                     i1l286:
  5182  04C2  0008               	return
  5183  04C3                     __end_ofi1_go_close_alt:
  5184                           
  5185                           	psect	text39
  5186  035E                     __ptext39:	
  5187 ;; *************** function i1_go_close *****************
  5188 ;; Defined at:
  5189 ;;		line 79 in file "main.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;		None
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;		None
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  1    wreg      void 
  5196 ;; Registers used:
  5197 ;;		wreg
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMMON   BANK0   BANK1
  5203 ;;      Params:         0       0       0
  5204 ;;      Locals:         0       0       0
  5205 ;;      Temps:          2       0       0
  5206 ;;      Totals:         2       0       0
  5207 ;;Total ram usage:        2 bytes
  5208 ;; Hardware stack levels used: 1
  5209 ;; This function calls:
  5210 ;;		Nothing
  5211 ;; This function is called by:
  5212 ;;		_start_alarm
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216  035E                     i1_go_close:	
  5217                           ;psect for function i1_go_close
  5218                           
  5219  035E                     i1l1592:	
  5220                           ;incstack = 0
  5221                           ; Regs used in i1_go_close: [wreg]
  5222                           
  5223                           
  5224                           ;main.c: 80:     time_s = 0;
  5225  035E  3000               	movlw	0
  5226  035F  0020               	movlb	0	; select bank0
  5227  0360  00A3               	movwf	_time_s+3
  5228  0361  3000               	movlw	0
  5229  0362  00A2               	movwf	_time_s+2
  5230  0363  3000               	movlw	0
  5231  0364  00A1               	movwf	_time_s+1
  5232  0365  3000               	movlw	0
  5233  0366  00A0               	movwf	_time_s
  5234  0367                     i1l1594:
  5235  0367  0022               	movlb	2	; select bank2
  5236  0368  160E               	bsf	14,4	;volatile
  5237  0369                     i1l269:
  5238                           
  5239                           ;main.c: 82:     _delay((unsigned long)((1 * 1000)*(4000000/4000.0)));
  5240  0369  3006               	movlw	6
  5241  036A  00F1               	movwf	??i1_go_close+1
  5242  036B  3013               	movlw	19
  5243  036C  00F0               	movwf	??i1_go_close
  5244  036D  30AE               	movlw	174
  5245  036E                     u145_27:
  5246  036E  0B89               	decfsz	9,f
  5247  036F  2B6E               	goto	u145_27
  5248  0370  0BF0               	decfsz	??i1_go_close,f
  5249  0371  2B6E               	goto	u145_27
  5250  0372  0BF1               	decfsz	??i1_go_close+1,f
  5251  0373  2B6E               	goto	u145_27
  5252  0374                     i1l1596:
  5253  0374  0022               	movlb	2	; select bank2
  5254  0375  168E               	bsf	14,5	;volatile
  5255  0376                     i1l271:
  5256                           
  5257                           ;main.c: 84:     time_pow_s = 10;
  5258  0376  300A               	movlw	10
  5259  0377  00F0               	movwf	??i1_go_close
  5260  0378  0870               	movf	??i1_go_close,w
  5261  0379  0020               	movlb	0	; select bank0
  5262  037A  00AA               	movwf	_time_pow_s
  5263  037B                     i1l1598:
  5264                           
  5265                           ;main.c: 85:     FLAGS.bits.RELE_POW_WAIT = 1;
  5266  037B  16FC               	bsf	_FLAGS,5
  5267  037C                     i1l1600:
  5268                           
  5269                           ;main.c: 86:     FLAGS.bits.RELE_CON_WAIT = 1;
  5270  037C  177C               	bsf	_FLAGS,6
  5271  037D                     i1l272:
  5272  037D  0008               	return
  5273  037E                     __end_ofi1_go_close:
  5274                           
  5275                           	psect	text40
  5276  045B                     __ptext40:	
  5277 ;; *************** function _TMR0_ISR *****************
  5278 ;; Defined at:
  5279 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  5280 ;; Parameters:    Size  Location     Type
  5281 ;;		None
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;		None
  5284 ;; Return value:  Size  Location     Type
  5285 ;;                  1    wreg      void 
  5286 ;; Registers used:
  5287 ;;		wreg, status,2, status,0, pclath, cstack
  5288 ;; Tracked objects:
  5289 ;;		On entry : 0/0
  5290 ;;		On exit  : 0/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMMON   BANK0   BANK1
  5293 ;;      Params:         0       0       0
  5294 ;;      Locals:         0       0       0
  5295 ;;      Temps:          0       0       0
  5296 ;;      Totals:         0       0       0
  5297 ;;Total ram usage:        0 bytes
  5298 ;; Hardware stack levels used: 1
  5299 ;; Hardware stack levels required when called: 1
  5300 ;; This function calls:
  5301 ;;		Absolute function
  5302 ;;		_TMR0_DefaultInterruptHandler
  5303 ;;		i1_switch_zum
  5304 ;; This function is called by:
  5305 ;;		_INTERRUPT_InterruptManager
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309  045B                     _TMR0_ISR:	
  5310                           ;psect for function _TMR0_ISR
  5311                           
  5312  045B                     i1l1858:	
  5313                           ;incstack = 0
  5314                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  5315                           
  5316                           
  5317                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  5318  045B  110B               	bcf	11,2	;volatile
  5319  045C                     i1l1860:
  5320                           
  5321                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  5322  045C  0020               	movlb	0	; select bank0
  5323  045D  083A               	movf	_timer0ReloadVal,w	;volatile
  5324  045E  0095               	movwf	21	;volatile
  5325  045F                     i1l1862:
  5326                           
  5327                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  5328  045F  0836               	movf	_TMR0_InterruptHandler,w
  5329  0460  0437               	iorwf	_TMR0_InterruptHandler+1,w
  5330  0461  1903               	btfsc	3,2
  5331  0462  2C64               	goto	u102_21
  5332  0463  2C65               	goto	u102_20
  5333  0464                     u102_21:
  5334  0464  2C6A               	goto	i1l200
  5335  0465                     u102_20:
  5336  0465                     i1l1864:
  5337                           
  5338                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  5339  0465  0837               	movf	_TMR0_InterruptHandler+1,w
  5340  0466  008A               	movwf	10
  5341  0467  0836               	movf	_TMR0_InterruptHandler,w
  5342  0468  000A               	callw
  5343  0469  3184               	pagesel	$
  5344  046A                     i1l200:
  5345  046A  0008               	return
  5346  046B                     __end_of_TMR0_ISR:
  5347                           
  5348                           	psect	text41
  5349  04DB                     __ptext41:	
  5350 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5351 ;; Defined at:
  5352 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;		None
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;		None
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  1    wreg      void 
  5359 ;; Registers used:
  5360 ;;		None
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMMON   BANK0   BANK1
  5366 ;;      Params:         0       0       0
  5367 ;;      Locals:         0       0       0
  5368 ;;      Temps:          0       0       0
  5369 ;;      Totals:         0       0       0
  5370 ;;Total ram usage:        0 bytes
  5371 ;; Hardware stack levels used: 1
  5372 ;; This function calls:
  5373 ;;		Nothing
  5374 ;; This function is called by:
  5375 ;;		_TMR0_Initialize
  5376 ;;		_TMR0_ISR
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380  04DB                     _TMR0_DefaultInterruptHandler:	
  5381                           ;psect for function _TMR0_DefaultInterruptHandler
  5382                           
  5383  04DB                     i1l206:	
  5384                           ;incstack = 0
  5385                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  5386                           
  5387  04DB  0008               	return
  5388  04DC                     __end_of_TMR0_DefaultInterruptHandler:
  5389                           
  5390                           	psect	text42
  5391  0478                     __ptext42:	
  5392 ;; *************** function i1_switch_zum *****************
  5393 ;; Defined at:
  5394 ;;		line 61 in file "main.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;		None
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;		None
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  1    wreg      void 
  5401 ;; Registers used:
  5402 ;;		status,0
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMMON   BANK0   BANK1
  5408 ;;      Params:         0       0       0
  5409 ;;      Locals:         0       0       0
  5410 ;;      Temps:          0       0       0
  5411 ;;      Totals:         0       0       0
  5412 ;;Total ram usage:        0 bytes
  5413 ;; Hardware stack levels used: 1
  5414 ;; This function calls:
  5415 ;;		Nothing
  5416 ;; This function is called by:
  5417 ;;		_TMR0_ISR
  5418 ;; This function uses a non-reentrant model
  5419 ;;
  5420                           
  5421  0478                     i1_switch_zum:	
  5422                           ;psect for function i1_switch_zum
  5423                           
  5424  0478                     i1l251:	
  5425                           ;incstack = 0
  5426                           ; Regs used in i1_switch_zum: [status,0]
  5427                           ;main.c: 62:     do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  5428                           
  5429  0478                     i1l1856:
  5430  0478  1003               	clrc
  5431  0479  0022               	movlb	2	; select bank2
  5432  047A  1E8C               	btfss	12,5	;volatile
  5433  047B  1403               	setc
  5434  047C  1803               	btfsc	3,0
  5435  047D  2C7F               	goto	u100_21
  5436  047E  2C82               	goto	u100_20
  5437  047F                     u100_21:
  5438  047F  0022               	movlb	2	; select bank2
  5439  0480  168C               	bsf	12,5	;volatile
  5440  0481  2C84               	goto	u101_24
  5441  0482                     u100_20:
  5442  0482  0022               	movlb	2	; select bank2
  5443  0483  128C               	bcf	12,5	;volatile
  5444  0484                     u101_24:
  5445  0484                     i1l253:
  5446  0484  0008               	return
  5447  0485                     __end_ofi1_switch_zum:
  5448  007E                     btemp	set	126	;btemp
  5449  007E                     int$flags	set	126
  5450  007E                     wtemp0	set	126
  5451                           
  5452                           	psect	idloc
  5453                           
  5454                           ;Config register IDLOC0 @ 0x8000
  5455                           ;	unspecified, using default values
  5456  8000                     	org	32768
  5457  8000  3FFF               	dw	16383
  5458                           
  5459                           ;Config register IDLOC1 @ 0x8001
  5460                           ;	unspecified, using default values
  5461  8001                     	org	32769
  5462  8001  3FFF               	dw	16383
  5463                           
  5464                           ;Config register IDLOC2 @ 0x8002
  5465                           ;	unspecified, using default values
  5466  8002                     	org	32770
  5467  8002  3FFF               	dw	16383
  5468                           
  5469                           ;Config register IDLOC3 @ 0x8003
  5470                           ;	unspecified, using default values
  5471  8003                     	org	32771
  5472  8003  3FFF               	dw	16383
  5473                           
  5474                           	psect	config
  5475                           
  5476                           ;Config register CONFIG1 @ 0x8007
  5477                           ;	Oscillator Selection
  5478                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5479                           ;	Watchdog Timer Enable
  5480                           ;	WDTE = OFF, WDT disabled
  5481                           ;	Power-up Timer Enable
  5482                           ;	PWRTE = OFF, PWRT disabled
  5483                           ;	MCLR Pin Function Select
  5484                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5485                           ;	Flash Program Memory Code Protection
  5486                           ;	CP = OFF, Program memory code protection is disabled
  5487                           ;	Data Memory Code Protection
  5488                           ;	CPD = OFF, Data memory code protection is disabled
  5489                           ;	Brown-out Reset Enable
  5490                           ;	BOREN = ON, Brown-out Reset enabled
  5491                           ;	Clock Out Enable
  5492                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5493                           ;	Internal/External Switchover
  5494                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5495                           ;	Fail-Safe Clock Monitor Enable
  5496                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5497  8007                     	org	32775
  5498  8007  3FE4               	dw	16356
  5499                           
  5500                           ;Config register CONFIG2 @ 0x8008
  5501                           ;	Flash Memory Self-Write Protection
  5502                           ;	WRT = OFF, Write protection off
  5503                           ;	PLL Enable
  5504                           ;	PLLEN = OFF, 4x PLL disabled
  5505                           ;	Stack Overflow/Underflow Reset Enable
  5506                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5507                           ;	Brown-out Reset Voltage Selection
  5508                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5509                           ;	Low-Voltage Programming Enable
  5510                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5511  8008                     	org	32776
  5512  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    12
    Data        0
    BSS         16
    Persistent  37
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80     11      27
    BANK1            16      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> switch_zum(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i1_switch_zum(), switch_zum(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sec_tick_work(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sec_tick_work(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR2_CallBack->_sec_tick_work
    _sec_tick_work->_get_measure
    _get_measure->i1_ADC_GetConversion
    _start_alarm->i1_go_close

Critical Paths under _main in BANK0

    _main->_fun_work
    _main->_switch_wm
    _switch_wm->_beep
    _start_setup->_get_fun_full
    _start_setup->_get_jump_full
    _get_jump_full->_ADC_GetConversion
    _get_fun_full->_ADC_GetConversion
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _povorot->_go_close
    _get_voltage->_ADC_GetConversion
    _get_jump->_ADC_GetConversion
    _get_fun->_ADC_GetConversion
    _fun_work->_beep

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3587
                           _fun_work
                            _get_fun
                           _get_jump
                        _get_voltage
                            _povorot
                        _start_setup
                          _switch_wm
                         _switch_zum
 ---------------------------------------------------------------------------------
 (1) _switch_wm                                            2     2      0    1308
                                              9 BANK0      2     2      0
                               _beep
                           _go_close
                       _go_close_alt
 ---------------------------------------------------------------------------------
 (1) _start_setup                                          0     0      0     836
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                       _get_fun_full
                      _get_jump_full
 ---------------------------------------------------------------------------------
 (2) _get_jump_full                                        4     4      0      70
                                              4 BANK0      4     4      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (2) _get_fun_full                                         4     4      0      70
                                              4 BANK0      4     4      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     348
                     _ADC_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      1     1      0     174
                                              2 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _povorot                                              0     0      0       0
                           _go_close
                            _go_open
 ---------------------------------------------------------------------------------
 (1) _get_voltage                                          2     2      0      45
                                              4 BANK0      2     2      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (1) _get_jump                                             3     3      0      45
                                              4 BANK0      3     3      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (1) _get_fun                                              3     3      0      45
                                              4 BANK0      3     3      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _fun_work                                             2     2      0    1308
                                              9 BANK0      2     2      0
                               _beep
                           _go_close
                       _go_close_alt
                            _go_open
                        _go_open_alt
 ---------------------------------------------------------------------------------
 (2) _go_open_alt                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_open                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _go_close_alt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_close                                             2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _beep                                                 9     3      6    1308
                                              0 BANK0      9     3      6
                         _switch_zum
 ---------------------------------------------------------------------------------
 (1) _switch_zum                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0      67
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0      67
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR2_CallBack                                        0     0      0      67
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                      _sec_tick_work *
 ---------------------------------------------------------------------------------
 (8) _sec_tick_work                                        1     1      0      67
                                              7 COMMON     1     1      0
                        _get_measure
                          _rele_tick
                        _toggle_tone
 ---------------------------------------------------------------------------------
 (9) _toggle_tone                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _rele_tick                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _get_measure                                          3     3      0      67
                                              4 COMMON     3     3      0
                        _start_alarm
                i1_ADC_GetConversion
 ---------------------------------------------------------------------------------
 (10) i1_ADC_GetConversion                                 4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _start_alarm                                         0     0      0       0
                         i1_go_close
                     i1_go_close_alt
 ---------------------------------------------------------------------------------
 (11) i1_go_close_alt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i1_go_close                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                       i1_switch_zum *
 ---------------------------------------------------------------------------------
 (7) i1_switch_zum                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _fun_work
     _beep
       _switch_zum
     _go_close
     _go_close_alt
     _go_open
     _go_open_alt
   _get_fun
     _ADC_GetConversion
   _get_jump
     _ADC_GetConversion
   _get_voltage
     _ADC_GetConversion
   _povorot
     _go_close
     _go_open
   _start_setup
     _SYSTEM_Initialize
       _ADC_Initialize
       _FVR_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR2_Initialize
         _TMR2_SetInterruptHandler
       _WDT_Initialize
     _TMR0_SetInterruptHandler
     _TMR2_SetInterruptHandler
     _TMR2_StartTimer
     _get_fun_full
       _ADC_GetConversion
     _get_jump_full
       _ADC_GetConversion
   _switch_wm
     _beep
     _go_close
     _go_close_alt
   _switch_zum

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     i1_switch_zum *
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _sec_tick_work *
         _get_measure
           _start_alarm
             i1_go_close
             i1_go_close_alt
           i1_ADC_GetConversion
         _rele_tick
         _toggle_tone

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              60      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      28       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      B      1B       6       33.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            10      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      28       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Apr 28 15:25:45 2022

        __end_of_TMR2_SetInterruptHandler 04AE                          get_fun_full@flag 0032  
                      get_fun@fun_counter 0029                     __end_of_sec_tick_work 0226  
                                      l31 04D2                                        l25 03E7  
                                      l28 04A7                                        l63 0352  
                                      l48 04A0                                        l66 035D  
                                      l92 0412                             ?_go_close_alt 0070  
                            ?_get_voltage 0070                            ?_get_jump_full 0070  
                  __end_of_FVR_Initialize 04D7                           _timer0ReloadVal 003A  
                                     l203 04B3                                       l142 04D9  
                                     l322 01AC                                       l251 043E  
                                     l139 043A                                       l324 01AE  
                                     l340 00DC                                       l253 044A  
                                     l342 00DE                                       l271 0335  
                                     l335 01E9                                       l167 04AD  
                                     l351 011E                                       l272 033C  
                                     l360 0226                                       l416 00DB  
                                     l265 02F1                                       l425 0093  
                                     l353 0120                                       l433 0154  
                                     l282 04BA                                       l434 0168  
                                     l275 0485                                       l291 04B7  
                                     l187 03FD                                       l355 0122  
                                     l284 04BC                                       l428 0148  
                                     l269 0326                                       l277 0487  
                                     l293 04B8                                       l286 04BD  
                                     l438 03B6                                       l374 0169  
                                     l279 048E                                       l383 01A9  
                                     l463 0294                                       l289 04B5  
                                     l369 025F                                       l385 01AB  
                                     l468 0381                                       l479 04D6  
                             _start_alarm 044B                                       _PR2 001B  
                                     u800 0356                                       u801 0355  
                                     u810 0448                                       u811 0445  
                                     u900 02DD                                       u901 02DC  
                                     u910 02F1                                       u911 02F0  
                                     u824 044A                                       u920 00F4  
                                     u921 00F3                                       u930 0104  
                                     u931 0103                                       u940 0113  
                                     u941 0112                                       u950 011E  
                                     u951 011D                                       u960 017F  
                                     u961 017E                                       u970 018F  
                                     u971 018E                                       u980 019E  
                                     u981 019D                                       u990 01A9  
                                     u991 01A8                               _start_setup 0260  
                            ?_go_open_alt 0070                           _TMR2_Initialize 0428  
                                     wreg 0009                                i1_go_close 035E  
                             get_jump@res 0030                                      l2000 0264  
                                    l2010 027C                                      l2002 0275  
                                    l2020 0285                                      l2012 027E  
                                    l2004 0278                                      l2030 028C  
                                    l2022 0286                                      l2014 0280  
                                    l2006 027A                                      l2032 028F  
                                    l2024 0288                                      l2016 0282  
                                    l2008 027B                                      l2034 0292  
                                    l2026 0289                                      l2018 0284  
                                    l2050 037E                                      l2028 028A  
                                    l2052 0384                                      l2054 0388  
                                    l2056 0397                                      l1700 042D  
                                    l1710 03F0                                      l1702 042F  
                                    l1720 034B                                      l1712 03F4  
                                    l1624 04A8                                      l1704 0437  
                                    l1800 00E0                                      l1730 043E  
                                    l1722 034C                                      l1626 04AE  
                                    l1714 03F5                                      l1706 03E8  
                                    l1810 00FD                                      l1802 00E2  
                                    l1724 0350                                      l1900 0228  
                                    l1716 03F6                                      l1708 03ED  
                                    l1820 0113                                      l1812 0104  
                                    l1804 00EB                                      l1726 0356  
                                    l1718 033F                                      l1910 0246  
                                    l1902 0231                                      l1670 0404  
                                    l1822 0117                                      l1814 0108  
                                    l1806 00F4                                      l1830 016D  
                                    l1760 02C7                                      l1920 025E  
                                    l1912 024D                                      l1904 0233  
                                    l1680 04A4                                      l1672 0406  
                                    l1752 03D2                                      l1816 0109  
                                    l1808 00F9                                      l1840 018F  
                                    l1832 0176                                      l1770 02D7  
                                    l1762 02CA                                      l1914 0251  
                                    l1906 023D                                      l1930 00AC  
                                    l1690 049C                                      l1682 04A5  
                                    l1674 0409                                      l1666 03FE  
                                    l1754 04D7                                      l1826 0119  
                                    l1818 010C                                      l1850 01A2  
                                    l1842 0193                                      l1834 017F  
                                    l1772 02DD                                      l1764 02CC  
                                    l1780 0324                                      l1916 0253  
                                    l1908 0242                                      l1940 00CB  
                                    l1932 00B0                                      l1924 0094  
                                    l1692 049D                                      l1676 040E  
                                    l1668 0401                                      l1684 04CF  
                                    l1844 0194                                      l1836 0184  
                                    l1828 016B                                      l1774 02E6  
                                    l1766 02CF                                      l1782 0333  
                                    l1790 0488                                      l1950 0043  
                                    l1918 025A                                      l1942 00CF  
                                    l1926 00A4                                      l1934 00B3  
                                    l1686 04D3                                      l1678 04A1  
                                    l1694 0428                                      l1854 01A4  
                                    l1846 0197                                      l1838 0188  
                                    l1768 02D2                                      l1776 02EB  
                                    l1784 033A                                      l1792 048D  
                                    l1960 0056                                      l1952 0047  
                                    l1880 01BD                                      l1944 00D2  
                                    l1936 00C3                                      l1928 00A8  
                                    l1688 0499                                      l1696 042B  
                                    l1848 019E                                      l1786 033B  
                                    l1778 031B                                      l1970 0078  
                                    l1954 004B                                      l1962 0068  
                                    l1946 003B                                      l1890 01DB  
                                    l1882 01C7                                      l1874 01B0  
                                    l1938 00C7                                      l1698 042C  
                                    l1796 04B9                                      l1972 007C  
                                    l1964 006C                                      l1956 004F  
                                    l1948 003F                                      l1892 01DD  
                                    l1884 01CC                                      l1876 01B9  
                                    l1980 012B                                      l1798 04B4  
                                    l1974 007F                                      l1966 0070  
                                    l1958 0053                                      l1894 01E4  
                                    l1886 01D0                                      l1878 01BB  
                                    l1990 039C                                      l1982 0130  
                                    l1968 0074                                      l1896 01E8  
                                    l1888 01D7                                      l1992 03A5  
                                    l1984 0133                                      l1976 0123  
                                    l1994 03AE                                      l1986 014C  
                                    l1978 0127                                      l1996 0260  
                                    l1988 0151                                      l1998 0263  
                                    u1100 00A4                                      u1101 00A3  
                                    u1110 00A8                                      u1111 00A7  
                                    u1200 0047                                      u1040 01C7  
                                    u1120 00AC                                      u1201 0046  
                                    u1041 01C6                                      u1121 00AB  
                                    u1210 004B                                      u1050 01D7  
                                    u1130 00B0                                      u1211 004A  
                                    u1051 01D6                                      u1131 00AF  
                                    u1220 004F                                      u1060 01E4  
                                    u1140 00C3                                      u1300 014C  
                                    u1221 004E                                      u1061 01E3  
                                    u1141 00C2                                      u1301 014B  
                                    u1230 006C                                      u1070 023D  
                                    u1150 00C7                                      u1310 0151  
                                    u1231 006B                                      u1071 023C  
                                    u1151 00C6                                      u1311 0150  
                                    u1240 0070                                      u1080 024D  
                                    u1320 03AE                                      u1160 00CB  
                                    u1241 006F                                      u1081 024C  
                                    u1321 03AD                                      u1161 00CA  
                                    u1250 0074                                      u1090 025A  
                                    u1170 00CF                                      u1251 0073  
                                    u1091 0259                                      u1171 00CE  
                                    u1260 0078                                      u1180 003F  
                                    u1261 0077                                      u1181 003E  
                                    _LATA 010C                                      u1190 0043  
                                    u1270 0127                                      u1407 032C  
                                    u1191 0042                                      u1271 0126  
                                    _LATC 010E                                      u1280 012B  
                                    u1417 02D0                                      u1281 012A  
                                    u1290 0130                                      u1427 02E1  
                                    u1291 012F                                      u1380 0388  
                                    u1381 0387                                      u1397 034D  
                                    i1l63 03C9                                      i1l66 03D1  
                                    _TMR0 0015                                      _TMR2 001A  
                                    _WPUA 020C                                      _WPUC 020E  
                                    _beep 02C7                                      _main 037E  
                                    btemp 007E                            ??_get_fun_full 002F  
                                    start 0026                      __end_ofi1_switch_zum 0485  
                 get_fun_full@fun_counter 0028                            ??_go_close_alt 002B  
                 __end_of_TMR0_Initialize 03FE            ??_TMR0_DefaultInterruptHandler 0070  
                         ?_FVR_Initialize 0070             __end_of_OSCILLATOR_Initialize 04A8  
                                   ?_beep 002B                                     ?_main 0070  
                                   _FLAGS 007C                                     _T2CON 001C  
                                   i1l110 0012                                     i1l200 046A  
                                   i1l115 0024                                     i1l300 045A  
                                   i1l116 0024                                     i1l206 04DB  
                                   i1l160 0427                                     i1l305 0295  
                                   i1l170 04DA                                     i1l251 0478  
                                   i1l307 0297                                     i1l411 0225  
                                   i1l164 0477                                     i1l253 0484  
                                   i1l317 02C6                                     i1l271 0376  
                                   i1l272 037D                                     i1l256 0498  
                                   i1l282 04BF                                     i1l284 04C1  
                                   i1l269 0369                                     i1l286 04C2  
                                   i1l296 044C                                     i1l392 0303  
                                   i1l297 044E                                     i1l397 0316  
                                   i1l389 02FF                                     i1l398 0318  
                                   i1l399 031A                                     u70_20 0453  
                                   u70_21 0452                                     u71_20 03CD  
                                   u71_21 03CC                                     u72_20 0497  
                                   u72_21 0495                                     _TRISA 008C  
                                   u73_24 0498                                     _TRISC 008E  
                                   u74_20 02AE                                     u74_21 02AD  
                                   u75_20 02BC                                     u83_20 01FB  
                                   u75_21 02BB                                     u83_21 01FA  
                                   u76_20 02C3                                     u84_20 0205  
                                   u76_21 02C2                                     u84_21 0202  
                                   u77_20 02F6                                     u77_21 02F5  
                                   u85_24 0207                                     u78_20 02FC  
                                   u86_20 0218                                     u78_21 02FB  
                                   u86_21 0217                                     u79_20 0303  
                                   u87_20 0222                                     u79_21 0302  
                                   u87_21 021F                                     u88_24 0224  
                                   u89_20 0472                                     u89_21 0471  
               ?_TMR0_SetInterruptHandler 002B                          __end_of_TMR0_ISR 046B  
                         __end_of_get_fun 01EA                          __end_of_TMR2_ISR 0428  
                         __end_of_go_open 048F                                     beep@i 0033  
                                   beep@j 0032                            _WDT_Initialize 04CF  
                                   pclath 000A                           __end_of_povorot 00DC  
                                   status 0003                                     wtemp0 007E  
                         _TMR2_StartTimer 04D7                           __initialization 0027  
                            __end_of_beep 02F2                              __end_of_main 039C  
                         ??_get_jump_full 002F                   __end_of_TMR2_Initialize 043B  
             ?_INTERRUPT_InterruptManager 0070                                    ??_beep 0031  
                _TMR2_SetInterruptHandler 04A8                                    ??_main 0036  
                  __end_of_WDT_Initialize 04D3                               ?i1_go_close 0070  
                     i1_ADC_GetConversion 03B7                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _APFCON 011D  
                                  _ANSELA 018C                                    _ANSELC 018E  
                                  _BORCON 0116                                    u100_20 0482  
                                  u100_21 047F                                    u101_24 0484  
                                  u102_20 0465                                    u102_21 0464  
                                  u103_20 0422                                    i1l2040 000E  
                                  u103_21 0421                                    i1l2042 0016  
                                  i1l2044 001B                                    i1l2036 0006  
                                  i1l2046 0020                                    i1l2038 000A  
                                  i1l1600 037C                                    i1l1610 0457  
                                  i1l1604 04BE                                    i1l1620 03CD  
                                  i1l1612 03B8                                    i1l1606 044B  
                                  i1l1614 03C2                                    i1l1630 0299  
                                  i1l1608 0453                                    i1l1616 03C3  
                                  i1l1640 02B3                                    i1l1632 02A1  
                                  i1l1618 03C7                                    i1l1642 02BC  
                                  i1l1634 02A3                                    i1l1650 02F2  
                                  i1l1644 02BD                                    i1l1636 02A5  
                                  i1l1660 0312                                    i1l1652 02F6  
                                  i1l1628 048F                                    i1l1740 0207  
                                  i1l1732 01EA                                    i1l1646 02C3  
                                  i1l1638 02AE                                    i1l1662 0313  
                                  i1l1654 02FC                                    i1l1750 0224  
                                  i1l1742 020B                                    i1l1734 01F3  
                                  i1l1592 035E                                    i1l1664 0314  
                                  i1l1656 0305                                    i1l1744 020E  
                                  i1l1736 01F7                                    i1l1594 0367  
                                  i1l1658 0310                                    i1l1746 0212  
                                  i1l1738 01FB                                    i1l1860 045C  
                                  i1l1596 0374                                    i1l1748 0218  
                                  i1l1756 046B                                    i1l1862 045F  
                                  i1l1598 037B                                    i1l1758 0472  
                                  i1l1870 0422                                    i1l1856 0478  
                                  i1l1864 0465                                    i1l1872 0425  
                                  i1l1858 045B                                    i1l1866 0413  
                                  i1l1868 0415                                    u133_20 000A  
                                  u133_21 0009                                    u134_20 000E  
                                  u134_21 000D                                    u135_20 0016  
                                  u135_21 0015                                    u143_27 030A  
                                  u136_20 001B                                    u136_21 001A  
                                  u144_27 03C4                                    u137_20 0020  
                                  u137_21 001F                                    u145_27 036E  
                                  _FVRCON 0117                          _GOOD_WSP_VOLTAGE 04C7  
                                  _OSCCON 0099                                    _WDTCON 0097  
                    ?i1_ADC_GetConversion 0070                          __end_of_get_jump 0260  
                        __end_of_go_close 033D                      _switch_zum$intlevel0 043E  
                        ?_TMR0_Initialize 0070                          __end_of_fun_work 0094  
                                  _time_s 0020                                 ??_get_fun 002F  
                               ??_go_open 002B                      __end_of_get_fun_full 0123  
                         ?_WDT_Initialize 0070                            get_measure@res 0075  
                ADC_GetConversion@channel 002E                                 ??_povorot 002D  
                 __end_of_TMR2_StartTimer 04DA  TMR0_SetInterruptHandler@InterruptHandler 002B  
TMR2_SetInterruptHandler@InterruptHandler 002B                      __end_of_go_close_alt 04BE  
                       _SYSTEM_Initialize 03D2                   __end_of__initialization 0038  
                   __end_of_TMR2_CallBack 0478                        ?_SYSTEM_Initialize 0070  
                            ?_toggle_tone 0070                     ??i1_ADC_GetConversion 0072  
                          __pcstackCOMMON 0070                 get_jump_full@jump_counter 0026  
                     ??_SYSTEM_Initialize 002E                                 ?_TMR0_ISR 0070  
                               ?_TMR2_ISR 0070                     __end_of_ROTATION_TIME 04C7  
                        ?_TMR2_Initialize 0070                i1ADC_GetConversion@channel 0073  
                            ?_start_alarm 0070                            _OPTION_REGbits 0095  
                            ?_start_setup 0070                              i1_switch_zum 0478  
               __end_of_SYSTEM_Initialize 03E8                                __pbssBANK0 0020  
                        ??_FVR_Initialize 002B                                __pmaintext 037E  
        __end_of_TMR0_SetInterruptHandler 04B4                                ??_TMR0_ISR 0070  
                              ??_TMR2_ISR 0078                                __pintentry 0004  
                        get_jump_full@res 0030                                   _OSCTUNE 0098  
                        ?_TMR2_StartTimer 0070                                 ?_get_jump 0070  
                               ?_go_close 0070                                 ?_fun_work 0070  
                    _ADC_InterruptHandler 0024                ??_TMR2_SetInterruptHandler 002D  
                __end_of_GOOD_WSP_VOLTAGE 04CB                                   __ptext1 0123  
                                 __ptext2 0260                       get_measure@measures 007B  
                                 __ptext3 0169                                   __ptext4 00DC  
                                 __ptext5 04D7                                   __ptext6 03D2  
                                 __ptext7 04CF                                   __ptext8 0428  
                                 __ptext9 04A8                                   _get_fun 01AC  
                                 _go_open 0485                     _OSCILLATOR_Initialize 04A1  
                               _T2CONbits 001C                  ??_PIN_MANAGER_Initialize 002B  
                            ??i1_go_close 0070                                   _povorot 0094  
                              ??_get_jump 002F                                ??_go_close 002B  
                       __end_of_rele_tick 031B                      end_of_initialization 0038  
                              ??_fun_work 0034                              _get_fun_full 00DC  
                      __end_ofi1_go_close 037E                     __end_of_get_jump_full 01AC  
                           _sec_tick_work 01EA                                _time_pow_s 002A  
                            _go_close_alt 04B9                          ??_WDT_Initialize 002B  
                _TMR0_SetInterruptHandler 04AE                         __end_of_switch_wm 0169  
                          get_voltage@res 002F                                 _TRISAbits 008C  
                               _TRISCbits 008E                           get_fun_full@res 0030  
                              get_fun@res 0030                             ??_get_measure 0074  
                              _switch_zum 043B      __end_of_TMR2_DefaultInterruptHandler 04DB  
            _TMR2_DefaultInterruptHandler 04DA                            ?_sec_tick_work 0070  
                           ??_get_voltage 002F                            _ADC_Initialize 0499  
                  ?_OSCILLATOR_Initialize 0070                            i1_go_close_alt 04BE  
                           ??_go_open_alt 002B                       start_initialization 0027  
             __end_ofi1_ADC_GetConversion 03D2                    __end_of_ADC_Initialize 04A1  
                     __end_of_get_measure 02C7                    __end_ofi1_go_close_alt 04C3  
           ?_TMR2_DefaultInterruptHandler 0070                               __pbssCOMMON 0078  
                     __end_of_get_voltage 03B7                                 ___latbits 0000  
                           __pcstackBANK0 002B                       __end_of_go_open_alt 04B9  
                   _TMR0_InterruptHandler 0036                                 __pnvBANK0 0036  
                  _PIN_MANAGER_Initialize 03FE                           ??_sec_tick_work 0077  
                             ?_switch_zum 0070                                 beep@delay 002B  
                         ?_ADC_Initialize 0070                                 beep@count 0030  
                               beep@pause 002D                           ?i1_go_close_alt 0070  
            ??_INTERRUPT_InterruptManager 0078                                  ?_get_fun 0070  
                                ?_go_open 0070                         sec_tick_work@iled 007A  
                                ?_povorot 0070                         ??_TMR0_Initialize 002D  
                       get_jump_full@flag 0032                                  _LATAbits 010C  
                                _LATCbits 010E                                 _rele_tick 02F2  
                           _TMR2_CallBack 046B                                  _PIE1bits 0091  
                             _get_measure 0295                ??_TMR0_SetInterruptHandler 002D  
                                _PIR1bits 0011                                  _TMR0_ISR 045B  
                                _TMR2_ISR 0413                             _ROTATION_TIME 04C3  
                             _get_voltage 039C                                _ADCON0bits 009D  
                                _WPUAbits 020C                                  _WPUCbits 020E  
          ??_TMR2_DefaultInterruptHandler 0070                               _go_open_alt 04B4  
               ?_TMR2_SetInterruptHandler 002B                                 _switch_wm 0123  
                       ??_TMR2_Initialize 002D                            ?_TMR2_CallBack 0070  
                              ?_rele_tick 0070                             ??_toggle_tone 0070  
                       _ADC_GetConversion 033D                   ??_OSCILLATOR_Initialize 002B  
                      ?_ADC_GetConversion 002B                             ??_start_alarm 0072  
                              _ANSELAbits 018C                                _ANSELCbits 018E  
                     ??_ADC_GetConversion 002D                             ??_start_setup 0033  
                              ?_switch_wm 0070                                  __ptext10 03E8  
                                __ptext11 04AE                                  __ptext20 033D  
                                __ptext12 03FE                                  __ptext21 003B  
                                __ptext13 04A1                                  __ptext30 046B  
                                __ptext22 04B4                                  __ptext14 04D3  
                                __ptext31 04DA                                  __ptext23 0485  
                                __ptext15 0499                                  __ptext40 045B  
                                __ptext32 01EA                                  __ptext24 04B9  
                                __ptext16 0094                                  __ptext41 04DB  
                                __ptext33 048F                                  __ptext25 031B  
                                __ptext17 039C                                  __ptext42 0478  
                                __ptext34 02F2                                  __ptext26 02C7  
                                __ptext18 0226                                  __ptext35 0295  
                                __ptext27 043B                                  __ptext19 01AC  
                                __ptext36 03B7                                  __ptext37 044B  
                                __ptext29 0413                                  __ptext38 04BE  
                                __ptext39 035E                             ?i1_switch_zum 0070  
                                beep@time 002F                                  _get_jump 0226  
                                _go_close 031B                           _BAD_WSP_VOLTAGE 04CB  
                                _fun_work 003B      __end_of_TMR0_DefaultInterruptHandler 04DC  
            _TMR0_DefaultInterruptHandler 04DB                 __end_of_ADC_GetConversion 035E  
                                int$flags 007E                         ??_TMR2_StartTimer 002B  
                     __end_of_toggle_tone 0499        __end_of_INTERRUPT_InterruptManager 0026  
              _INTERRUPT_InterruptManager 0004                      get_jump@jump_counter 0027  
                              _INTCONbits 000B                                _FVRCONbits 0117  
                          ??i1_switch_zum 0070                       __end_of_start_alarm 045B  
                     __end_of_start_setup 0295                                  intlevel1 0000  
                         ??_TMR2_CallBack 0078                   ?_PIN_MANAGER_Initialize 0070  
                             ??_rele_tick 0070                          ??_ADC_Initialize 002B  
           ?_TMR0_DefaultInterruptHandler 0070                          ??i1_go_close_alt 0070  
                            ??_switch_zum 002B                             _get_jump_full 0169  
                           __pstringtext1 04C3                             __pstringtext2 04C7  
                           __pstringtext3 04CB                            _FVR_Initialize 04D3  
                              _OPTION_REG 0095                     TMR2_ISR@CountCallBack 0078  
                         _TMR0_Initialize 03E8                   __end_of_BAD_WSP_VOLTAGE 04CF  
                             ??_switch_wm 0034                        __end_of_switch_zum 044B  
          __end_of_PIN_MANAGER_Initialize 0413                     _TMR2_InterruptHandler 0038  
                             _toggle_tone 048F                             ?_get_fun_full 0070  
                            ?_get_measure 0070  
