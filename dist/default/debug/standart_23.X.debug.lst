

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Apr 26 18:19:49 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1823
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.40
    53                           ; Generated 17/11/2021 GMT
    54                           ; 
    55                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F1823 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000E                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  008C                     	;# 
   115  008E                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  010C                     	;# 
   130  010E                     	;# 
   131  0111                     	;# 
   132  0112                     	;# 
   133  0113                     	;# 
   134  0114                     	;# 
   135  0115                     	;# 
   136  0116                     	;# 
   137  0117                     	;# 
   138  0118                     	;# 
   139  0119                     	;# 
   140  011A                     	;# 
   141  011B                     	;# 
   142  011D                     	;# 
   143  011D                     	;# 
   144  018C                     	;# 
   145  018E                     	;# 
   146  0191                     	;# 
   147  0191                     	;# 
   148  0192                     	;# 
   149  0193                     	;# 
   150  0193                     	;# 
   151  0193                     	;# 
   152  0194                     	;# 
   153  0195                     	;# 
   154  0196                     	;# 
   155  0199                     	;# 
   156  019A                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019C                     	;# 
   162  019C                     	;# 
   163  019D                     	;# 
   164  019E                     	;# 
   165  019F                     	;# 
   166  020C                     	;# 
   167  020E                     	;# 
   168  0211                     	;# 
   169  0211                     	;# 
   170  0212                     	;# 
   171  0212                     	;# 
   172  0213                     	;# 
   173  0213                     	;# 
   174  0214                     	;# 
   175  0214                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  0291                     	;# 
   184  0291                     	;# 
   185  0292                     	;# 
   186  0293                     	;# 
   187  0294                     	;# 
   188  0295                     	;# 
   189  0295                     	;# 
   190  0296                     	;# 
   191  0391                     	;# 
   192  0392                     	;# 
   193  0393                     	;# 
   194  039A                     	;# 
   195  039C                     	;# 
   196  039D                     	;# 
   197  039E                     	;# 
   198  039F                     	;# 
   199  0FE4                     	;# 
   200  0FE5                     	;# 
   201  0FE6                     	;# 
   202  0FE7                     	;# 
   203  0FE8                     	;# 
   204  0FE9                     	;# 
   205  0FEA                     	;# 
   206  0FEB                     	;# 
   207  0FED                     	;# 
   208  0FEE                     	;# 
   209  0FEF                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000E                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  008C                     	;# 
   238  008E                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0097                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009A                     	;# 
   247  009B                     	;# 
   248  009B                     	;# 
   249  009C                     	;# 
   250  009D                     	;# 
   251  009E                     	;# 
   252  010C                     	;# 
   253  010E                     	;# 
   254  0111                     	;# 
   255  0112                     	;# 
   256  0113                     	;# 
   257  0114                     	;# 
   258  0115                     	;# 
   259  0116                     	;# 
   260  0117                     	;# 
   261  0118                     	;# 
   262  0119                     	;# 
   263  011A                     	;# 
   264  011B                     	;# 
   265  011D                     	;# 
   266  011D                     	;# 
   267  018C                     	;# 
   268  018E                     	;# 
   269  0191                     	;# 
   270  0191                     	;# 
   271  0192                     	;# 
   272  0193                     	;# 
   273  0193                     	;# 
   274  0193                     	;# 
   275  0194                     	;# 
   276  0195                     	;# 
   277  0196                     	;# 
   278  0199                     	;# 
   279  019A                     	;# 
   280  019B                     	;# 
   281  019B                     	;# 
   282  019B                     	;# 
   283  019B                     	;# 
   284  019C                     	;# 
   285  019C                     	;# 
   286  019D                     	;# 
   287  019E                     	;# 
   288  019F                     	;# 
   289  020C                     	;# 
   290  020E                     	;# 
   291  0211                     	;# 
   292  0211                     	;# 
   293  0212                     	;# 
   294  0212                     	;# 
   295  0213                     	;# 
   296  0213                     	;# 
   297  0214                     	;# 
   298  0214                     	;# 
   299  0215                     	;# 
   300  0215                     	;# 
   301  0215                     	;# 
   302  0216                     	;# 
   303  0216                     	;# 
   304  0217                     	;# 
   305  0217                     	;# 
   306  0291                     	;# 
   307  0291                     	;# 
   308  0292                     	;# 
   309  0293                     	;# 
   310  0294                     	;# 
   311  0295                     	;# 
   312  0295                     	;# 
   313  0296                     	;# 
   314  0391                     	;# 
   315  0392                     	;# 
   316  0393                     	;# 
   317  039A                     	;# 
   318  039C                     	;# 
   319  039D                     	;# 
   320  039E                     	;# 
   321  039F                     	;# 
   322  0FE4                     	;# 
   323  0FE5                     	;# 
   324  0FE6                     	;# 
   325  0FE7                     	;# 
   326  0FE8                     	;# 
   327  0FE9                     	;# 
   328  0FEA                     	;# 
   329  0FEB                     	;# 
   330  0FED                     	;# 
   331  0FEE                     	;# 
   332  0FEF                     	;# 
   333  0000                     	;# 
   334  0001                     	;# 
   335  0002                     	;# 
   336  0003                     	;# 
   337  0004                     	;# 
   338  0005                     	;# 
   339  0006                     	;# 
   340  0007                     	;# 
   341  0008                     	;# 
   342  0009                     	;# 
   343  000A                     	;# 
   344  000B                     	;# 
   345  000C                     	;# 
   346  000E                     	;# 
   347  0011                     	;# 
   348  0012                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0016                     	;# 
   352  0017                     	;# 
   353  0018                     	;# 
   354  0019                     	;# 
   355  001A                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001E                     	;# 
   359  001F                     	;# 
   360  008C                     	;# 
   361  008E                     	;# 
   362  0091                     	;# 
   363  0092                     	;# 
   364  0095                     	;# 
   365  0096                     	;# 
   366  0097                     	;# 
   367  0098                     	;# 
   368  0099                     	;# 
   369  009A                     	;# 
   370  009B                     	;# 
   371  009B                     	;# 
   372  009C                     	;# 
   373  009D                     	;# 
   374  009E                     	;# 
   375  010C                     	;# 
   376  010E                     	;# 
   377  0111                     	;# 
   378  0112                     	;# 
   379  0113                     	;# 
   380  0114                     	;# 
   381  0115                     	;# 
   382  0116                     	;# 
   383  0117                     	;# 
   384  0118                     	;# 
   385  0119                     	;# 
   386  011A                     	;# 
   387  011B                     	;# 
   388  011D                     	;# 
   389  011D                     	;# 
   390  018C                     	;# 
   391  018E                     	;# 
   392  0191                     	;# 
   393  0191                     	;# 
   394  0192                     	;# 
   395  0193                     	;# 
   396  0193                     	;# 
   397  0193                     	;# 
   398  0194                     	;# 
   399  0195                     	;# 
   400  0196                     	;# 
   401  0199                     	;# 
   402  019A                     	;# 
   403  019B                     	;# 
   404  019B                     	;# 
   405  019B                     	;# 
   406  019B                     	;# 
   407  019C                     	;# 
   408  019C                     	;# 
   409  019D                     	;# 
   410  019E                     	;# 
   411  019F                     	;# 
   412  020C                     	;# 
   413  020E                     	;# 
   414  0211                     	;# 
   415  0211                     	;# 
   416  0212                     	;# 
   417  0212                     	;# 
   418  0213                     	;# 
   419  0213                     	;# 
   420  0214                     	;# 
   421  0214                     	;# 
   422  0215                     	;# 
   423  0215                     	;# 
   424  0215                     	;# 
   425  0216                     	;# 
   426  0216                     	;# 
   427  0217                     	;# 
   428  0217                     	;# 
   429  0291                     	;# 
   430  0291                     	;# 
   431  0292                     	;# 
   432  0293                     	;# 
   433  0294                     	;# 
   434  0295                     	;# 
   435  0295                     	;# 
   436  0296                     	;# 
   437  0391                     	;# 
   438  0392                     	;# 
   439  0393                     	;# 
   440  039A                     	;# 
   441  039C                     	;# 
   442  039D                     	;# 
   443  039E                     	;# 
   444  039F                     	;# 
   445  0FE4                     	;# 
   446  0FE5                     	;# 
   447  0FE6                     	;# 
   448  0FE7                     	;# 
   449  0FE8                     	;# 
   450  0FE9                     	;# 
   451  0FEA                     	;# 
   452  0FEB                     	;# 
   453  0FED                     	;# 
   454  0FEE                     	;# 
   455  0FEF                     	;# 
   456  0000                     	;# 
   457  0001                     	;# 
   458  0002                     	;# 
   459  0003                     	;# 
   460  0004                     	;# 
   461  0005                     	;# 
   462  0006                     	;# 
   463  0007                     	;# 
   464  0008                     	;# 
   465  0009                     	;# 
   466  000A                     	;# 
   467  000B                     	;# 
   468  000C                     	;# 
   469  000E                     	;# 
   470  0011                     	;# 
   471  0012                     	;# 
   472  0015                     	;# 
   473  0016                     	;# 
   474  0016                     	;# 
   475  0017                     	;# 
   476  0018                     	;# 
   477  0019                     	;# 
   478  001A                     	;# 
   479  001B                     	;# 
   480  001C                     	;# 
   481  001E                     	;# 
   482  001F                     	;# 
   483  008C                     	;# 
   484  008E                     	;# 
   485  0091                     	;# 
   486  0092                     	;# 
   487  0095                     	;# 
   488  0096                     	;# 
   489  0097                     	;# 
   490  0098                     	;# 
   491  0099                     	;# 
   492  009A                     	;# 
   493  009B                     	;# 
   494  009B                     	;# 
   495  009C                     	;# 
   496  009D                     	;# 
   497  009E                     	;# 
   498  010C                     	;# 
   499  010E                     	;# 
   500  0111                     	;# 
   501  0112                     	;# 
   502  0113                     	;# 
   503  0114                     	;# 
   504  0115                     	;# 
   505  0116                     	;# 
   506  0117                     	;# 
   507  0118                     	;# 
   508  0119                     	;# 
   509  011A                     	;# 
   510  011B                     	;# 
   511  011D                     	;# 
   512  011D                     	;# 
   513  018C                     	;# 
   514  018E                     	;# 
   515  0191                     	;# 
   516  0191                     	;# 
   517  0192                     	;# 
   518  0193                     	;# 
   519  0193                     	;# 
   520  0193                     	;# 
   521  0194                     	;# 
   522  0195                     	;# 
   523  0196                     	;# 
   524  0199                     	;# 
   525  019A                     	;# 
   526  019B                     	;# 
   527  019B                     	;# 
   528  019B                     	;# 
   529  019B                     	;# 
   530  019C                     	;# 
   531  019C                     	;# 
   532  019D                     	;# 
   533  019E                     	;# 
   534  019F                     	;# 
   535  020C                     	;# 
   536  020E                     	;# 
   537  0211                     	;# 
   538  0211                     	;# 
   539  0212                     	;# 
   540  0212                     	;# 
   541  0213                     	;# 
   542  0213                     	;# 
   543  0214                     	;# 
   544  0214                     	;# 
   545  0215                     	;# 
   546  0215                     	;# 
   547  0215                     	;# 
   548  0216                     	;# 
   549  0216                     	;# 
   550  0217                     	;# 
   551  0217                     	;# 
   552  0291                     	;# 
   553  0291                     	;# 
   554  0292                     	;# 
   555  0293                     	;# 
   556  0294                     	;# 
   557  0295                     	;# 
   558  0295                     	;# 
   559  0296                     	;# 
   560  0391                     	;# 
   561  0392                     	;# 
   562  0393                     	;# 
   563  039A                     	;# 
   564  039C                     	;# 
   565  039D                     	;# 
   566  039E                     	;# 
   567  039F                     	;# 
   568  0FE4                     	;# 
   569  0FE5                     	;# 
   570  0FE6                     	;# 
   571  0FE7                     	;# 
   572  0FE8                     	;# 
   573  0FE9                     	;# 
   574  0FEA                     	;# 
   575  0FEB                     	;# 
   576  0FED                     	;# 
   577  0FEE                     	;# 
   578  0FEF                     	;# 
   579  0000                     	;# 
   580  0001                     	;# 
   581  0002                     	;# 
   582  0003                     	;# 
   583  0004                     	;# 
   584  0005                     	;# 
   585  0006                     	;# 
   586  0007                     	;# 
   587  0008                     	;# 
   588  0009                     	;# 
   589  000A                     	;# 
   590  000B                     	;# 
   591  000C                     	;# 
   592  000E                     	;# 
   593  0011                     	;# 
   594  0012                     	;# 
   595  0015                     	;# 
   596  0016                     	;# 
   597  0016                     	;# 
   598  0017                     	;# 
   599  0018                     	;# 
   600  0019                     	;# 
   601  001A                     	;# 
   602  001B                     	;# 
   603  001C                     	;# 
   604  001E                     	;# 
   605  001F                     	;# 
   606  008C                     	;# 
   607  008E                     	;# 
   608  0091                     	;# 
   609  0092                     	;# 
   610  0095                     	;# 
   611  0096                     	;# 
   612  0097                     	;# 
   613  0098                     	;# 
   614  0099                     	;# 
   615  009A                     	;# 
   616  009B                     	;# 
   617  009B                     	;# 
   618  009C                     	;# 
   619  009D                     	;# 
   620  009E                     	;# 
   621  010C                     	;# 
   622  010E                     	;# 
   623  0111                     	;# 
   624  0112                     	;# 
   625  0113                     	;# 
   626  0114                     	;# 
   627  0115                     	;# 
   628  0116                     	;# 
   629  0117                     	;# 
   630  0118                     	;# 
   631  0119                     	;# 
   632  011A                     	;# 
   633  011B                     	;# 
   634  011D                     	;# 
   635  011D                     	;# 
   636  018C                     	;# 
   637  018E                     	;# 
   638  0191                     	;# 
   639  0191                     	;# 
   640  0192                     	;# 
   641  0193                     	;# 
   642  0193                     	;# 
   643  0193                     	;# 
   644  0194                     	;# 
   645  0195                     	;# 
   646  0196                     	;# 
   647  0199                     	;# 
   648  019A                     	;# 
   649  019B                     	;# 
   650  019B                     	;# 
   651  019B                     	;# 
   652  019B                     	;# 
   653  019C                     	;# 
   654  019C                     	;# 
   655  019D                     	;# 
   656  019E                     	;# 
   657  019F                     	;# 
   658  020C                     	;# 
   659  020E                     	;# 
   660  0211                     	;# 
   661  0211                     	;# 
   662  0212                     	;# 
   663  0212                     	;# 
   664  0213                     	;# 
   665  0213                     	;# 
   666  0214                     	;# 
   667  0214                     	;# 
   668  0215                     	;# 
   669  0215                     	;# 
   670  0215                     	;# 
   671  0216                     	;# 
   672  0216                     	;# 
   673  0217                     	;# 
   674  0217                     	;# 
   675  0291                     	;# 
   676  0291                     	;# 
   677  0292                     	;# 
   678  0293                     	;# 
   679  0294                     	;# 
   680  0295                     	;# 
   681  0295                     	;# 
   682  0296                     	;# 
   683  0391                     	;# 
   684  0392                     	;# 
   685  0393                     	;# 
   686  039A                     	;# 
   687  039C                     	;# 
   688  039D                     	;# 
   689  039E                     	;# 
   690  039F                     	;# 
   691  0FE4                     	;# 
   692  0FE5                     	;# 
   693  0FE6                     	;# 
   694  0FE7                     	;# 
   695  0FE8                     	;# 
   696  0FE9                     	;# 
   697  0FEA                     	;# 
   698  0FEB                     	;# 
   699  0FED                     	;# 
   700  0FEE                     	;# 
   701  0FEF                     	;# 
   702  0000                     	;# 
   703  0001                     	;# 
   704  0002                     	;# 
   705  0003                     	;# 
   706  0004                     	;# 
   707  0005                     	;# 
   708  0006                     	;# 
   709  0007                     	;# 
   710  0008                     	;# 
   711  0009                     	;# 
   712  000A                     	;# 
   713  000B                     	;# 
   714  000C                     	;# 
   715  000E                     	;# 
   716  0011                     	;# 
   717  0012                     	;# 
   718  0015                     	;# 
   719  0016                     	;# 
   720  0016                     	;# 
   721  0017                     	;# 
   722  0018                     	;# 
   723  0019                     	;# 
   724  001A                     	;# 
   725  001B                     	;# 
   726  001C                     	;# 
   727  001E                     	;# 
   728  001F                     	;# 
   729  008C                     	;# 
   730  008E                     	;# 
   731  0091                     	;# 
   732  0092                     	;# 
   733  0095                     	;# 
   734  0096                     	;# 
   735  0097                     	;# 
   736  0098                     	;# 
   737  0099                     	;# 
   738  009A                     	;# 
   739  009B                     	;# 
   740  009B                     	;# 
   741  009C                     	;# 
   742  009D                     	;# 
   743  009E                     	;# 
   744  010C                     	;# 
   745  010E                     	;# 
   746  0111                     	;# 
   747  0112                     	;# 
   748  0113                     	;# 
   749  0114                     	;# 
   750  0115                     	;# 
   751  0116                     	;# 
   752  0117                     	;# 
   753  0118                     	;# 
   754  0119                     	;# 
   755  011A                     	;# 
   756  011B                     	;# 
   757  011D                     	;# 
   758  011D                     	;# 
   759  018C                     	;# 
   760  018E                     	;# 
   761  0191                     	;# 
   762  0191                     	;# 
   763  0192                     	;# 
   764  0193                     	;# 
   765  0193                     	;# 
   766  0193                     	;# 
   767  0194                     	;# 
   768  0195                     	;# 
   769  0196                     	;# 
   770  0199                     	;# 
   771  019A                     	;# 
   772  019B                     	;# 
   773  019B                     	;# 
   774  019B                     	;# 
   775  019B                     	;# 
   776  019C                     	;# 
   777  019C                     	;# 
   778  019D                     	;# 
   779  019E                     	;# 
   780  019F                     	;# 
   781  020C                     	;# 
   782  020E                     	;# 
   783  0211                     	;# 
   784  0211                     	;# 
   785  0212                     	;# 
   786  0212                     	;# 
   787  0213                     	;# 
   788  0213                     	;# 
   789  0214                     	;# 
   790  0214                     	;# 
   791  0215                     	;# 
   792  0215                     	;# 
   793  0215                     	;# 
   794  0216                     	;# 
   795  0216                     	;# 
   796  0217                     	;# 
   797  0217                     	;# 
   798  0291                     	;# 
   799  0291                     	;# 
   800  0292                     	;# 
   801  0293                     	;# 
   802  0294                     	;# 
   803  0295                     	;# 
   804  0295                     	;# 
   805  0296                     	;# 
   806  0391                     	;# 
   807  0392                     	;# 
   808  0393                     	;# 
   809  039A                     	;# 
   810  039C                     	;# 
   811  039D                     	;# 
   812  039E                     	;# 
   813  039F                     	;# 
   814  0FE4                     	;# 
   815  0FE5                     	;# 
   816  0FE6                     	;# 
   817  0FE7                     	;# 
   818  0FE8                     	;# 
   819  0FE9                     	;# 
   820  0FEA                     	;# 
   821  0FEB                     	;# 
   822  0FED                     	;# 
   823  0FEE                     	;# 
   824  0FEF                     	;# 
   825  0000                     	;# 
   826  0001                     	;# 
   827  0002                     	;# 
   828  0003                     	;# 
   829  0004                     	;# 
   830  0005                     	;# 
   831  0006                     	;# 
   832  0007                     	;# 
   833  0008                     	;# 
   834  0009                     	;# 
   835  000A                     	;# 
   836  000B                     	;# 
   837  000C                     	;# 
   838  000E                     	;# 
   839  0011                     	;# 
   840  0012                     	;# 
   841  0015                     	;# 
   842  0016                     	;# 
   843  0016                     	;# 
   844  0017                     	;# 
   845  0018                     	;# 
   846  0019                     	;# 
   847  001A                     	;# 
   848  001B                     	;# 
   849  001C                     	;# 
   850  001E                     	;# 
   851  001F                     	;# 
   852  008C                     	;# 
   853  008E                     	;# 
   854  0091                     	;# 
   855  0092                     	;# 
   856  0095                     	;# 
   857  0096                     	;# 
   858  0097                     	;# 
   859  0098                     	;# 
   860  0099                     	;# 
   861  009A                     	;# 
   862  009B                     	;# 
   863  009B                     	;# 
   864  009C                     	;# 
   865  009D                     	;# 
   866  009E                     	;# 
   867  010C                     	;# 
   868  010E                     	;# 
   869  0111                     	;# 
   870  0112                     	;# 
   871  0113                     	;# 
   872  0114                     	;# 
   873  0115                     	;# 
   874  0116                     	;# 
   875  0117                     	;# 
   876  0118                     	;# 
   877  0119                     	;# 
   878  011A                     	;# 
   879  011B                     	;# 
   880  011D                     	;# 
   881  011D                     	;# 
   882  018C                     	;# 
   883  018E                     	;# 
   884  0191                     	;# 
   885  0191                     	;# 
   886  0192                     	;# 
   887  0193                     	;# 
   888  0193                     	;# 
   889  0193                     	;# 
   890  0194                     	;# 
   891  0195                     	;# 
   892  0196                     	;# 
   893  0199                     	;# 
   894  019A                     	;# 
   895  019B                     	;# 
   896  019B                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019C                     	;# 
   900  019C                     	;# 
   901  019D                     	;# 
   902  019E                     	;# 
   903  019F                     	;# 
   904  020C                     	;# 
   905  020E                     	;# 
   906  0211                     	;# 
   907  0211                     	;# 
   908  0212                     	;# 
   909  0212                     	;# 
   910  0213                     	;# 
   911  0213                     	;# 
   912  0214                     	;# 
   913  0214                     	;# 
   914  0215                     	;# 
   915  0215                     	;# 
   916  0215                     	;# 
   917  0216                     	;# 
   918  0216                     	;# 
   919  0217                     	;# 
   920  0217                     	;# 
   921  0291                     	;# 
   922  0291                     	;# 
   923  0292                     	;# 
   924  0293                     	;# 
   925  0294                     	;# 
   926  0295                     	;# 
   927  0295                     	;# 
   928  0296                     	;# 
   929  0391                     	;# 
   930  0392                     	;# 
   931  0393                     	;# 
   932  039A                     	;# 
   933  039C                     	;# 
   934  039D                     	;# 
   935  039E                     	;# 
   936  039F                     	;# 
   937  0FE4                     	;# 
   938  0FE5                     	;# 
   939  0FE6                     	;# 
   940  0FE7                     	;# 
   941  0FE8                     	;# 
   942  0FE9                     	;# 
   943  0FEA                     	;# 
   944  0FEB                     	;# 
   945  0FED                     	;# 
   946  0FEE                     	;# 
   947  0FEF                     	;# 
   948  0000                     	;# 
   949  0001                     	;# 
   950  0002                     	;# 
   951  0003                     	;# 
   952  0004                     	;# 
   953  0005                     	;# 
   954  0006                     	;# 
   955  0007                     	;# 
   956  0008                     	;# 
   957  0009                     	;# 
   958  000A                     	;# 
   959  000B                     	;# 
   960  000C                     	;# 
   961  000E                     	;# 
   962  0011                     	;# 
   963  0012                     	;# 
   964  0015                     	;# 
   965  0016                     	;# 
   966  0016                     	;# 
   967  0017                     	;# 
   968  0018                     	;# 
   969  0019                     	;# 
   970  001A                     	;# 
   971  001B                     	;# 
   972  001C                     	;# 
   973  001E                     	;# 
   974  001F                     	;# 
   975  008C                     	;# 
   976  008E                     	;# 
   977  0091                     	;# 
   978  0092                     	;# 
   979  0095                     	;# 
   980  0096                     	;# 
   981  0097                     	;# 
   982  0098                     	;# 
   983  0099                     	;# 
   984  009A                     	;# 
   985  009B                     	;# 
   986  009B                     	;# 
   987  009C                     	;# 
   988  009D                     	;# 
   989  009E                     	;# 
   990  010C                     	;# 
   991  010E                     	;# 
   992  0111                     	;# 
   993  0112                     	;# 
   994  0113                     	;# 
   995  0114                     	;# 
   996  0115                     	;# 
   997  0116                     	;# 
   998  0117                     	;# 
   999  0118                     	;# 
  1000  0119                     	;# 
  1001  011A                     	;# 
  1002  011B                     	;# 
  1003  011D                     	;# 
  1004  011D                     	;# 
  1005  018C                     	;# 
  1006  018E                     	;# 
  1007  0191                     	;# 
  1008  0191                     	;# 
  1009  0192                     	;# 
  1010  0193                     	;# 
  1011  0193                     	;# 
  1012  0193                     	;# 
  1013  0194                     	;# 
  1014  0195                     	;# 
  1015  0196                     	;# 
  1016  0199                     	;# 
  1017  019A                     	;# 
  1018  019B                     	;# 
  1019  019B                     	;# 
  1020  019B                     	;# 
  1021  019B                     	;# 
  1022  019C                     	;# 
  1023  019C                     	;# 
  1024  019D                     	;# 
  1025  019E                     	;# 
  1026  019F                     	;# 
  1027  020C                     	;# 
  1028  020E                     	;# 
  1029  0211                     	;# 
  1030  0211                     	;# 
  1031  0212                     	;# 
  1032  0212                     	;# 
  1033  0213                     	;# 
  1034  0213                     	;# 
  1035  0214                     	;# 
  1036  0214                     	;# 
  1037  0215                     	;# 
  1038  0215                     	;# 
  1039  0215                     	;# 
  1040  0216                     	;# 
  1041  0216                     	;# 
  1042  0217                     	;# 
  1043  0217                     	;# 
  1044  0291                     	;# 
  1045  0291                     	;# 
  1046  0292                     	;# 
  1047  0293                     	;# 
  1048  0294                     	;# 
  1049  0295                     	;# 
  1050  0295                     	;# 
  1051  0296                     	;# 
  1052  0391                     	;# 
  1053  0392                     	;# 
  1054  0393                     	;# 
  1055  039A                     	;# 
  1056  039C                     	;# 
  1057  039D                     	;# 
  1058  039E                     	;# 
  1059  039F                     	;# 
  1060  0FE4                     	;# 
  1061  0FE5                     	;# 
  1062  0FE6                     	;# 
  1063  0FE7                     	;# 
  1064  0FE8                     	;# 
  1065  0FE9                     	;# 
  1066  0FEA                     	;# 
  1067  0FEB                     	;# 
  1068  0FED                     	;# 
  1069  0FEE                     	;# 
  1070  0FEF                     	;# 
  1071                           
  1072                           	psect	stringtext1
  1073  0321                     __pstringtext1:
  1074  0321                     _GOOD_WSP_VOLTAGE:
  1075  0321  3440               	retlw	64
  1076  0322  349C               	retlw	156
  1077  0323  3400               	retlw	0
  1078  0324  3400               	retlw	0
  1079  0325                     __end_of_GOOD_WSP_VOLTAGE:
  1080                           
  1081                           	psect	stringtext2
  1082  0325                     __pstringtext2:
  1083  0325                     _BAD_WSP_VOLTAGE:
  1084  0325  3420               	retlw	32
  1085  0326  344E               	retlw	78
  1086  0327  3400               	retlw	0
  1087  0328  3400               	retlw	0
  1088  0329                     __end_of_BAD_WSP_VOLTAGE:
  1089                           
  1090                           	psect	stringtext3
  1091  0329                     __pstringtext3:
  1092  0329                     _ROTATION_TIME:
  1093  0329  3400               	retlw	0
  1094  032A  3475               	retlw	117
  1095  032B  3400               	retlw	0
  1096  032C  3400               	retlw	0
  1097  032D                     __end_of_ROTATION_TIME:
  1098                           
  1099                           	psect	nvBANK0
  1100  002E                     __pnvBANK0:
  1101  002E                     _TMR0_InterruptHandler:
  1102  002E                     	ds	2
  1103  0030                     _TMR2_InterruptHandler:
  1104  0030                     	ds	2
  1105  0032                     _time_pow:
  1106  0032                     	ds	1
  1107  0033                     _timer0ReloadVal:
  1108  0033                     	ds	1
  1109  0015                     _TMR0	set	21
  1110  001C                     _T2CONbits	set	28
  1111  001C                     _T2CON	set	28
  1112  001A                     _TMR2	set	26
  1113  001B                     _PR2	set	27
  1114  0011                     _PIR1bits	set	17
  1115  000B                     _INTCONbits	set	11
  1116  008E                     _TRISCbits	set	142
  1117  008C                     _TRISAbits	set	140
  1118  0095                     _OPTION_REG	set	149
  1119  0091                     _PIE1bits	set	145
  1120  0095                     _OPTION_REGbits	set	149
  1121  008E                     _TRISC	set	142
  1122  008C                     _TRISA	set	140
  1123  009D                     _ADCON0bits	set	157
  1124  009D                     _ADCON0	set	157
  1125  009C                     _ADRESH	set	156
  1126  009B                     _ADRESL	set	155
  1127  009E                     _ADCON1	set	158
  1128  0097                     _WDTCON	set	151
  1129  0098                     _OSCTUNE	set	152
  1130  0099                     _OSCCON	set	153
  1131  010E                     _LATCbits	set	270
  1132  010C                     _LATAbits	set	268
  1133  011D                     _APFCON	set	285
  1134  010E                     _LATC	set	270
  1135  010C                     _LATA	set	268
  1136  0116                     _BORCON	set	278
  1137  018C                     _ANSELAbits	set	396
  1138  018E                     _ANSELCbits	set	398
  1139  018C                     _ANSELA	set	396
  1140  018E                     _ANSELC	set	398
  1141  020E                     _WPUCbits	set	526
  1142  020C                     _WPUAbits	set	524
  1143  020E                     _WPUC	set	526
  1144  020C                     _WPUA	set	524
  1145                           
  1146                           	psect	cinit
  1147  0027                     start_initialization:	
  1148                           ; #config settings
  1149                           
  1150  0027                     __initialization:
  1151                           
  1152                           ; Clear objects allocated to COMMON
  1153  0027  01F8               	clrf	__pbssCOMMON& (0+127)
  1154  0028  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1155  0029  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1156  002A  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1157  002B  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1158  002C  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  1159                           
  1160                           ; Clear objects allocated to BANK0
  1161  002D  3020               	movlw	low __pbssBANK0
  1162  002E  0084               	movwf	4
  1163  002F  3000               	movlw	high __pbssBANK0
  1164  0030  0085               	movwf	5
  1165  0031  300E               	movlw	14
  1166  0032  3183  230A  3180   	fcall	clear_ram0
  1167  0035                     end_of_initialization:	
  1168                           ;End of C runtime variable initialization code
  1169                           
  1170  0035                     __end_of__initialization:
  1171  0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1172  0036  0020               	movlb	0
  1173  0037  2996               	ljmp	_main	;jump to C main() function
  1174                           
  1175                           	psect	bssCOMMON
  1176  0078                     __pbssCOMMON:
  1177  0078                     Sec_tick_work@iled:
  1178  0078                     	ds	1
  1179  0079                     _jump_counter:
  1180  0079                     	ds	1
  1181  007A                     _measures:
  1182  007A                     	ds	1
  1183  007B                     _fun_counter:
  1184  007B                     	ds	1
  1185  007C                     _time_con:
  1186  007C                     	ds	1
  1187  007D                     _FLAGS:
  1188  007D                     	ds	1
  1189                           
  1190                           	psect	bssBANK0
  1191  0020                     __pbssBANK0:
  1192  0020                     _time_s:
  1193  0020                     	ds	4
  1194  0024                     _fresult:
  1195  0024                     	ds	2
  1196  0026                     _jresult:
  1197  0026                     	ds	2
  1198  0028                     _result:
  1199  0028                     	ds	2
  1200  002A                     TMR2_ISR@CountCallBack:
  1201  002A                     	ds	2
  1202  002C                     _ADC_InterruptHandler:
  1203  002C                     	ds	2
  1204                           
  1205                           	psect	clrtext
  1206  030A                     clear_ram0:	
  1207                           ;	Called with FSR0 containing the base address, and
  1208                           ;	WREG with the size to clear
  1209                           
  1210  030A  0064               	clrwdt	;clear the watchdog before getting into this loop
  1211  030B                     clrloop0:
  1212  030B  0180               	clrf	0	;clear RAM location pointed to by FSR
  1213  030C  3101               	addfsr 0,1
  1214  030D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1215  030E  2B0B               	goto	clrloop0	;have we reached the end yet?
  1216  030F  3400               	retlw	0	;all done for this memory range, return
  1217                           
  1218                           	psect	cstackCOMMON
  1219  0070                     __pcstackCOMMON:
  1220  0070                     ?_PIN_MANAGER_Initialize:
  1221  0070                     ?_OSCILLATOR_Initialize:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     ?_WDT_Initialize:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     ?_TMR2_Initialize:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0070                     ?_TMR0_Initialize:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     ?_ADC_Initialize:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     ?_TMR0_ISR:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ??_TMR0_ISR:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242  0070                     ?_TMR2_ISR:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245  0070                     ?_TMR2_DefaultInterruptHandler:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248  0070                     ??_TMR2_DefaultInterruptHandler:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251  0070                     ?_TMR2_CallBack:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254  0070                     ?_TMR0_DefaultInterruptHandler:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257  0070                     ??_TMR0_DefaultInterruptHandler:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260  0070                     ?_SYSTEM_Initialize:	
  1261                           ; 1 bytes @ 0x0
  1262                           
  1263  0070                     ?_INTERRUPT_InterruptManager:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266  0070                     ?_TMR2_StartTimer:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269  0070                     ?_switch_zum:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272  0070                     ??_switch_zum:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275  0070                     ?_toggle_tone:	
  1276                           ; 1 bytes @ 0x0
  1277                           
  1278  0070                     ??_toggle_tone:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281  0070                     ?_go_close:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284  0070                     ?_go_open:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287  0070                     ?_go_close_alt:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290  0070                     ??_go_close_alt:	
  1291                           ; 1 bytes @ 0x0
  1292                           
  1293  0070                     ?_get_measure:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296  0070                     ?_get_fun:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0070                     ?_get_jump:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0070                     ?_rele_tick:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0070                     ??_rele_tick:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0070                     ?_Sec_tick_work:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0070                     ?_povorot:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0070                     ?_fun_work:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0070                     ?_switch_wm:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320  0070                     ?_start_setup:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323  0070                     ?_main:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0070                     ?i1_go_close:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329  0070                     ??i1_go_close:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332  0070                     ?_ADC_GetConversion:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335  0070                     ?_start_alarm:	
  1336                           ; 2 bytes @ 0x0
  1337                           
  1338                           
  1339                           ; 2 bytes @ 0x0
  1340  0070                     	ds	1
  1341  0071                     ??_start_alarm:
  1342                           
  1343                           ; 1 bytes @ 0x1
  1344  0071                     	ds	1
  1345  0072                     ??_ADC_GetConversion:
  1346                           
  1347                           ; 1 bytes @ 0x2
  1348  0072                     	ds	1
  1349  0073                     ADC_GetConversion@channel:
  1350                           
  1351                           ; 1 bytes @ 0x3
  1352  0073                     	ds	1
  1353  0074                     ??_get_measure:
  1354  0074                     ??_get_fun:	
  1355                           ; 1 bytes @ 0x4
  1356                           
  1357  0074                     ??_get_jump:	
  1358                           ; 1 bytes @ 0x4
  1359                           
  1360                           
  1361                           ; 1 bytes @ 0x4
  1362  0074                     	ds	1
  1363  0075                     get_measure@res:
  1364  0075                     get_fun@res:	
  1365                           ; 2 bytes @ 0x5
  1366                           
  1367  0075                     get_jump@res:	
  1368                           ; 2 bytes @ 0x5
  1369                           
  1370                           
  1371                           ; 2 bytes @ 0x5
  1372  0075                     	ds	2
  1373  0077                     ??_Sec_tick_work:
  1374                           
  1375                           ; 1 bytes @ 0x7
  1376  0077                     	ds	1
  1377  0078                     ??_TMR2_ISR:
  1378  0078                     ??_TMR2_CallBack:	
  1379                           ; 1 bytes @ 0x8
  1380                           
  1381  0078                     ??_INTERRUPT_InterruptManager:	
  1382                           ; 1 bytes @ 0x8
  1383                           
  1384                           
  1385                           	psect	cstackBANK0
  1386  0034                     __pcstackBANK0:	
  1387                           ; 1 bytes @ 0x8
  1388                           
  1389  0034                     ??_PIN_MANAGER_Initialize:
  1390  0034                     ??_OSCILLATOR_Initialize:	
  1391                           ; 1 bytes @ 0x0
  1392                           
  1393  0034                     ??_WDT_Initialize:	
  1394                           ; 1 bytes @ 0x0
  1395                           
  1396  0034                     ??_ADC_Initialize:	
  1397                           ; 1 bytes @ 0x0
  1398                           
  1399  0034                     ?_TMR2_SetInterruptHandler:	
  1400                           ; 1 bytes @ 0x0
  1401                           
  1402  0034                     ?_TMR0_SetInterruptHandler:	
  1403                           ; 1 bytes @ 0x0
  1404                           
  1405  0034                     ??_TMR2_StartTimer:	
  1406                           ; 1 bytes @ 0x0
  1407                           
  1408  0034                     ??_go_close:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411  0034                     ??_go_open:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414  0034                     ??_switch_wm:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417  0034                     TMR2_SetInterruptHandler@InterruptHandler:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420  0034                     TMR0_SetInterruptHandler@InterruptHandler:	
  1421                           ; 2 bytes @ 0x0
  1422                           
  1423                           
  1424                           ; 2 bytes @ 0x0
  1425  0034                     	ds	1
  1426  0035                     ??_povorot:
  1427  0035                     ??_fun_work:	
  1428                           ; 1 bytes @ 0x1
  1429                           
  1430                           
  1431                           ; 1 bytes @ 0x1
  1432  0035                     	ds	1
  1433  0036                     ??_TMR2_Initialize:
  1434  0036                     ??_TMR0_Initialize:	
  1435                           ; 1 bytes @ 0x2
  1436                           
  1437  0036                     ??_TMR2_SetInterruptHandler:	
  1438                           ; 1 bytes @ 0x2
  1439                           
  1440  0036                     ??_TMR0_SetInterruptHandler:	
  1441                           ; 1 bytes @ 0x2
  1442                           
  1443                           
  1444                           ; 1 bytes @ 0x2
  1445  0036                     	ds	1
  1446  0037                     ??_SYSTEM_Initialize:
  1447  0037                     ??_start_setup:	
  1448                           ; 1 bytes @ 0x3
  1449                           
  1450  0037                     ??_main:	
  1451                           ; 1 bytes @ 0x3
  1452                           
  1453                           
  1454                           ; 1 bytes @ 0x3
  1455  0037                     	ds	2
  1456                           
  1457                           	psect	maintext
  1458  0196                     __pmaintext:	
  1459 ;;
  1460 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1461 ;;
  1462 ;; *************** function _main *****************
  1463 ;; Defined at:
  1464 ;;		line 288 in file "main.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;		None
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;		None
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  1    wreg      void 
  1471 ;; Registers used:
  1472 ;;		wreg, status,2, status,0, pclath, cstack
  1473 ;; Tracked objects:
  1474 ;;		On entry : B1F/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMMON   BANK0   BANK1
  1478 ;;      Params:         0       0       0
  1479 ;;      Locals:         0       0       0
  1480 ;;      Temps:          0       2       0
  1481 ;;      Totals:         0       2       0
  1482 ;;Total ram usage:        2 bytes
  1483 ;; Hardware stack levels required when called: 11
  1484 ;; This function calls:
  1485 ;;		_fun_work
  1486 ;;		_povorot
  1487 ;;		_start_setup
  1488 ;;		_switch_wm
  1489 ;; This function is called by:
  1490 ;;		Startup code after reset
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494  0196                     _main:	
  1495                           ;psect for function _main
  1496                           
  1497  0196                     l1729:	
  1498                           ;incstack = 0
  1499                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1500                           
  1501                           
  1502                           ;main.c: 290:     start_setup();
  1503  0196  3181  212F  3181   	fcall	_start_setup
  1504  0199                     l1731:
  1505                           
  1506                           ;main.c: 293:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1507  0199  3003               	movlw	3
  1508  019A  0020               	movlb	0	; select bank0
  1509  019B  00B8               	movwf	??_main+1
  1510  019C  308A               	movlw	138
  1511  019D  00B7               	movwf	??_main
  1512  019E  3055               	movlw	85
  1513  019F                     u877:
  1514  019F  0B89               	decfsz	9,f
  1515  01A0  299F               	goto	u877
  1516  01A1  0BB7               	decfsz	??_main,f
  1517  01A2  299F               	goto	u877
  1518  01A3  0BB8               	decfsz	??_main+1,f
  1519  01A4  299F               	goto	u877
  1520  01A5  3200               	nop2
  1521  01A6                     l1733:
  1522                           
  1523                           ;main.c: 294:         if (FLAGS.bits.ALARM ==0) {
  1524  01A6  187D               	btfsc	_FLAGS,0
  1525  01A7  29A9               	goto	u861
  1526  01A8  29AA               	goto	u860
  1527  01A9                     u861:
  1528  01A9  2999               	goto	l1731
  1529  01AA                     u860:
  1530  01AA                     l1735:
  1531                           
  1532                           ;main.c: 295:            fun_work();
  1533  01AA  3181  21B5  3181   	fcall	_fun_work
  1534                           
  1535                           ;main.c: 296:            povorot();
  1536  01AD  3181  2165  3181   	fcall	_povorot
  1537  01B0                     l1737:
  1538                           
  1539                           ;main.c: 297:            switch_wm();
  1540  01B0  3182  22F3  3181   	fcall	_switch_wm
  1541  01B3  2999               	goto	l1731
  1542  01B4  2826               	ljmp	start
  1543  01B5                     __end_of_main:
  1544                           
  1545                           	psect	text1
  1546  02F3                     __ptext1:	
  1547 ;; *************** function _switch_wm *****************
  1548 ;; Defined at:
  1549 ;;		line 242 in file "main.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;		None
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;		None
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  1    wreg      void 
  1556 ;; Registers used:
  1557 ;;		None
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMMON   BANK0   BANK1
  1563 ;;      Params:         0       0       0
  1564 ;;      Locals:         0       0       0
  1565 ;;      Temps:          0       0       0
  1566 ;;      Totals:         0       0       0
  1567 ;;Total ram usage:        0 bytes
  1568 ;; Hardware stack levels used: 1
  1569 ;; Hardware stack levels required when called: 7
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_main
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577  02F3                     _switch_wm:	
  1578                           ;psect for function _switch_wm
  1579                           
  1580  02F3                     l1671:	
  1581                           ;incstack = 0
  1582                           ; Regs used in _switch_wm: []
  1583                           
  1584                           
  1585                           ;main.c: 243:     if (FLAGS.bits.JUMP) {
  1586  02F3  1E7D               	btfss	_FLAGS,4
  1587  02F4  2AF6               	goto	u801
  1588  02F5  2AF7               	goto	u800
  1589  02F6                     u801:
  1590  02F6  2AF9               	goto	l383
  1591  02F7                     u800:
  1592  02F7                     l1673:
  1593                           
  1594                           ;main.c: 244:         FLAGS.bits.WORK_MODE = 1;
  1595  02F7  14FD               	bsf	_FLAGS,1
  1596                           
  1597                           ;main.c: 245:     } else {
  1598  02F8  2AFA               	goto	l385
  1599  02F9                     l383:
  1600                           
  1601                           ;main.c: 246:         FLAGS.bits.WORK_MODE = 0;
  1602  02F9  10FD               	bcf	_FLAGS,1
  1603  02FA                     l385:
  1604  02FA  0008               	return
  1605  02FB                     __end_of_switch_wm:
  1606                           
  1607                           	psect	text2
  1608  012F                     __ptext2:	
  1609 ;; *************** function _start_setup *****************
  1610 ;; Defined at:
  1611 ;;		line 250 in file "main.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;		None
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;		None
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		wreg, status,2, status,0, pclath, cstack
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMMON   BANK0   BANK1
  1625 ;;      Params:         0       0       0
  1626 ;;      Locals:         0       0       0
  1627 ;;      Temps:          0       0       0
  1628 ;;      Totals:         0       0       0
  1629 ;;Total ram usage:        0 bytes
  1630 ;; Hardware stack levels used: 1
  1631 ;; Hardware stack levels required when called: 10
  1632 ;; This function calls:
  1633 ;;		_SYSTEM_Initialize
  1634 ;;		_TMR0_SetInterruptHandler
  1635 ;;		_TMR2_SetInterruptHandler
  1636 ;;		_TMR2_StartTimer
  1637 ;; This function is called by:
  1638 ;;		_main
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642  012F                     _start_setup:	
  1643                           ;psect for function _start_setup
  1644                           
  1645  012F                     l1675:	
  1646                           ;incstack = 0
  1647                           ; Regs used in _start_setup: [wreg+status,2+status,0+pclath+cstack]
  1648                           
  1649                           
  1650                           ;main.c: 252:     SYSTEM_Initialize();
  1651  012F  3182  2278  3181   	fcall	_SYSTEM_Initialize
  1652  0132                     l1677:
  1653                           
  1654                           ;main.c: 253:     (INTCONbits.GIE = 1);
  1655  0132  178B               	bsf	11,7	;volatile
  1656  0133                     l1679:
  1657                           
  1658                           ;main.c: 254:     (INTCONbits.PEIE = 1);
  1659  0133  170B               	bsf	11,6	;volatile
  1660                           
  1661                           ;main.c: 257:     TMR0_SetInterruptHandler(switch_zum);
  1662  0134  309E               	movlw	low _switch_zum
  1663  0135  0020               	movlb	0	; select bank0
  1664  0136  00B4               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1665  0137  3002               	movlw	high _switch_zum
  1666  0138  00B5               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1667  0139  3183  2316  3181   	fcall	_TMR0_SetInterruptHandler
  1668                           
  1669                           ;main.c: 258:     TMR2_SetInterruptHandler(Sec_tick_work);
  1670  013C  3038               	movlw	low _Sec_tick_work
  1671  013D  0020               	movlb	0	; select bank0
  1672  013E  00B4               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  1673  013F  3000               	movlw	high _Sec_tick_work
  1674  0140  00B5               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  1675  0141  3183  2310  3181   	fcall	_TMR2_SetInterruptHandler
  1676  0144                     l1681:
  1677                           
  1678                           ;main.c: 259:     TMR2_StartTimer();
  1679  0144  3183  2331  3181   	fcall	_TMR2_StartTimer
  1680  0147                     l1683:
  1681  0147  0023               	movlb	3	; select bank3
  1682  0148  118E               	bcf	14,3	;volatile
  1683  0149                     l1685:
  1684  0149  0024               	movlb	4	; select bank4
  1685  014A  108C               	bcf	12,1	;volatile
  1686  014B                     l1687:
  1687  014B  0022               	movlb	2	; select bank2
  1688  014C  108C               	bcf	12,1	;volatile
  1689  014D                     l1689:
  1690  014D  0021               	movlb	1	; select bank1
  1691  014E  148C               	bsf	12,1	;volatile
  1692  014F                     l1691:
  1693  014F  0023               	movlb	3	; select bank3
  1694  0150  108C               	bcf	12,1	;volatile
  1695  0151                     l1693:
  1696  0151  0024               	movlb	4	; select bank4
  1697  0152  110E               	bcf	14,2	;volatile
  1698  0153                     l1695:
  1699  0153  0022               	movlb	2	; select bank2
  1700  0154  110E               	bcf	14,2	;volatile
  1701  0155                     l1697:
  1702  0155  0021               	movlb	1	; select bank1
  1703  0156  150E               	bsf	14,2	;volatile
  1704  0157                     l1699:
  1705  0157  0023               	movlb	3	; select bank3
  1706  0158  110E               	bcf	14,2	;volatile
  1707  0159                     l1701:
  1708  0159  0022               	movlb	2	; select bank2
  1709  015A  128E               	bcf	14,5	;volatile
  1710  015B                     l1703:
  1711  015B  120E               	bcf	14,4	;volatile
  1712  015C                     l1705:
  1713  015C  0021               	movlb	1	; select bank1
  1714  015D  100E               	bcf	14,0	;volatile
  1715  015E                     l1707:
  1716  015E  0022               	movlb	2	; select bank2
  1717  015F  100E               	bcf	14,0	;volatile
  1718  0160                     l1709:
  1719                           
  1720                           ;main.c: 282:     INTCONbits.TMR0IE = 0;
  1721  0160  128B               	bcf	11,5	;volatile
  1722  0161                     l1711:
  1723                           
  1724                           ;main.c: 283:     FLAGS.value = 0;
  1725  0161  01FD               	clrf	_FLAGS
  1726  0162                     l1713:
  1727                           
  1728                           ;main.c: 285:     time_pow = 0;
  1729  0162  0020               	movlb	0	; select bank0
  1730  0163  01B2               	clrf	_time_pow
  1731  0164                     l414:
  1732  0164  0008               	return
  1733  0165                     __end_of_start_setup:
  1734                           
  1735                           	psect	text3
  1736  0331                     __ptext3:	
  1737 ;; *************** function _TMR2_StartTimer *****************
  1738 ;; Defined at:
  1739 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;		None
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;		None
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      void 
  1746 ;; Registers used:
  1747 ;;		None
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMMON   BANK0   BANK1
  1753 ;;      Params:         0       0       0
  1754 ;;      Locals:         0       0       0
  1755 ;;      Temps:          0       0       0
  1756 ;;      Totals:         0       0       0
  1757 ;;Total ram usage:        0 bytes
  1758 ;; Hardware stack levels used: 1
  1759 ;; Hardware stack levels required when called: 7
  1760 ;; This function calls:
  1761 ;;		Nothing
  1762 ;; This function is called by:
  1763 ;;		_start_setup
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767  0331                     _TMR2_StartTimer:	
  1768                           ;psect for function _TMR2_StartTimer
  1769                           
  1770  0331                     l1601:	
  1771                           ;incstack = 0
  1772                           ; Regs used in _TMR2_StartTimer: []
  1773                           
  1774                           
  1775                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  1776  0331  0020               	movlb	0	; select bank0
  1777  0332  151C               	bsf	28,2	;volatile
  1778  0333                     l140:
  1779  0333  0008               	return
  1780  0334                     __end_of_TMR2_StartTimer:
  1781                           
  1782                           	psect	text4
  1783  0278                     __ptext4:	
  1784 ;; *************** function _SYSTEM_Initialize *****************
  1785 ;; Defined at:
  1786 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;		None
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		wreg, status,2, status,0, pclath, cstack
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMMON   BANK0   BANK1
  1800 ;;      Params:         0       0       0
  1801 ;;      Locals:         0       0       0
  1802 ;;      Temps:          0       0       0
  1803 ;;      Totals:         0       0       0
  1804 ;;Total ram usage:        0 bytes
  1805 ;; Hardware stack levels used: 1
  1806 ;; Hardware stack levels required when called: 9
  1807 ;; This function calls:
  1808 ;;		_ADC_Initialize
  1809 ;;		_OSCILLATOR_Initialize
  1810 ;;		_PIN_MANAGER_Initialize
  1811 ;;		_TMR0_Initialize
  1812 ;;		_TMR2_Initialize
  1813 ;;		_WDT_Initialize
  1814 ;; This function is called by:
  1815 ;;		_start_setup
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819  0278                     _SYSTEM_Initialize:	
  1820                           ;psect for function _SYSTEM_Initialize
  1821                           
  1822  0278                     l1599:	
  1823                           ;incstack = 0
  1824                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1825                           
  1826                           
  1827                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1828  0278  3182  2263  3182   	fcall	_PIN_MANAGER_Initialize
  1829                           
  1830                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1831  027B  3183  2303  3182   	fcall	_OSCILLATOR_Initialize
  1832                           
  1833                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1834  027E  3183  232D  3182   	fcall	_WDT_Initialize
  1835                           
  1836                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  1837  0281  3182  228B  3182   	fcall	_TMR2_Initialize
  1838                           
  1839                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  1840  0284  3182  224E  3182   	fcall	_TMR0_Initialize
  1841                           
  1842                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  1843  0287  3182  22FB  3182   	fcall	_ADC_Initialize
  1844  028A                     l23:
  1845  028A  0008               	return
  1846  028B                     __end_of_SYSTEM_Initialize:
  1847                           
  1848                           	psect	text5
  1849  032D                     __ptext5:	
  1850 ;; *************** function _WDT_Initialize *****************
  1851 ;; Defined at:
  1852 ;;		line 71 in file "mcc_generated_files/mcc.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;		None
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;		None
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      void 
  1859 ;; Registers used:
  1860 ;;		wreg
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMMON   BANK0   BANK1
  1866 ;;      Params:         0       0       0
  1867 ;;      Locals:         0       0       0
  1868 ;;      Temps:          0       0       0
  1869 ;;      Totals:         0       0       0
  1870 ;;Total ram usage:        0 bytes
  1871 ;; Hardware stack levels used: 1
  1872 ;; Hardware stack levels required when called: 7
  1873 ;; This function calls:
  1874 ;;		Nothing
  1875 ;; This function is called by:
  1876 ;;		_SYSTEM_Initialize
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880  032D                     _WDT_Initialize:	
  1881                           ;psect for function _WDT_Initialize
  1882                           
  1883  032D                     l1547:	
  1884                           ;incstack = 0
  1885                           ; Regs used in _WDT_Initialize: [wreg]
  1886                           
  1887                           
  1888                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x16;
  1889  032D  3016               	movlw	22
  1890  032E  0021               	movlb	1	; select bank1
  1891  032F  0097               	movwf	23	;volatile
  1892  0330                     l29:
  1893  0330  0008               	return
  1894  0331                     __end_of_WDT_Initialize:
  1895                           
  1896                           	psect	text6
  1897  028B                     __ptext6:	
  1898 ;; *************** function _TMR2_Initialize *****************
  1899 ;; Defined at:
  1900 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;		None
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;		None
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0, pclath, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1
  1914 ;;      Params:         0       0       0
  1915 ;;      Locals:         0       0       0
  1916 ;;      Temps:          0       0       0
  1917 ;;      Totals:         0       0       0
  1918 ;;Total ram usage:        0 bytes
  1919 ;; Hardware stack levels used: 1
  1920 ;; Hardware stack levels required when called: 8
  1921 ;; This function calls:
  1922 ;;		_TMR2_SetInterruptHandler
  1923 ;; This function is called by:
  1924 ;;		_SYSTEM_Initialize
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928  028B                     _TMR2_Initialize:	
  1929                           ;psect for function _TMR2_Initialize
  1930                           
  1931  028B                     l1549:	
  1932                           ;incstack = 0
  1933                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1934                           
  1935                           
  1936                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x8D;
  1937  028B  308D               	movlw	141
  1938  028C  0020               	movlb	0	; select bank0
  1939  028D  009B               	movwf	27	;volatile
  1940  028E                     l1551:
  1941                           
  1942                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  1943  028E  019A               	clrf	26	;volatile
  1944  028F                     l1553:
  1945                           
  1946                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  1947  028F  1091               	bcf	17,1	;volatile
  1948  0290                     l1555:
  1949                           
  1950                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  1951  0290  0021               	movlb	1	; select bank1
  1952  0291  1491               	bsf	17,1	;volatile
  1953  0292                     l1557:
  1954                           
  1955                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  1956  0292  3034               	movlw	low _TMR2_DefaultInterruptHandler
  1957  0293  0020               	movlb	0	; select bank0
  1958  0294  00B4               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  1959  0295  3003               	movlw	high _TMR2_DefaultInterruptHandler
  1960  0296  00B5               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  1961  0297  3183  2310  3182   	fcall	_TMR2_SetInterruptHandler
  1962  029A                     l1559:
  1963                           
  1964                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x57;
  1965  029A  3057               	movlw	87
  1966  029B  0020               	movlb	0	; select bank0
  1967  029C  009C               	movwf	28	;volatile
  1968  029D                     l137:
  1969  029D  0008               	return
  1970  029E                     __end_of_TMR2_Initialize:
  1971                           
  1972                           	psect	text7
  1973  0310                     __ptext7:	
  1974 ;; *************** function _TMR2_SetInterruptHandler *****************
  1975 ;; Defined at:
  1976 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1979 ;;		 -> Sec_tick_work(1), TMR2_DefaultInterruptHandler(1), 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;		None
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  1    wreg      void 
  1984 ;; Registers used:
  1985 ;;		wreg
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMMON   BANK0   BANK1
  1991 ;;      Params:         0       2       0
  1992 ;;      Locals:         0       0       0
  1993 ;;      Temps:          0       0       0
  1994 ;;      Totals:         0       2       0
  1995 ;;Total ram usage:        2 bytes
  1996 ;; Hardware stack levels used: 1
  1997 ;; Hardware stack levels required when called: 7
  1998 ;; This function calls:
  1999 ;;		Nothing
  2000 ;; This function is called by:
  2001 ;;		_TMR2_Initialize
  2002 ;;		_start_setup
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006  0310                     _TMR2_SetInterruptHandler:	
  2007                           ;psect for function _TMR2_SetInterruptHandler
  2008                           
  2009  0310                     l1435:	
  2010                           ;incstack = 0
  2011                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2012                           
  2013                           
  2014                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  2015  0310  0020               	movlb	0	; select bank0
  2016  0311  0835               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2017  0312  00B1               	movwf	_TMR2_InterruptHandler+1
  2018  0313  0834               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2019  0314  00B0               	movwf	_TMR2_InterruptHandler
  2020  0315                     l165:
  2021  0315  0008               	return
  2022  0316                     __end_of_TMR2_SetInterruptHandler:
  2023                           
  2024                           	psect	text8
  2025  024E                     __ptext8:	
  2026 ;; *************** function _TMR0_Initialize *****************
  2027 ;; Defined at:
  2028 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;		None
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2, status,0, pclath, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1
  2042 ;;      Params:         0       0       0
  2043 ;;      Locals:         0       0       0
  2044 ;;      Temps:          0       1       0
  2045 ;;      Totals:         0       1       0
  2046 ;;Total ram usage:        1 bytes
  2047 ;; Hardware stack levels used: 1
  2048 ;; Hardware stack levels required when called: 8
  2049 ;; This function calls:
  2050 ;;		_TMR0_SetInterruptHandler
  2051 ;; This function is called by:
  2052 ;;		_SYSTEM_Initialize
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056  024E                     _TMR0_Initialize:	
  2057                           ;psect for function _TMR0_Initialize
  2058                           
  2059  024E                     l1561:	
  2060                           ;incstack = 0
  2061                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2062                           
  2063                           
  2064                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  2065  024E  0021               	movlb	1	; select bank1
  2066  024F  0815               	movf	21,w	;volatile
  2067  0250  39C0               	andlw	192
  2068  0251  3817               	iorlw	23
  2069  0252  0095               	movwf	21	;volatile
  2070  0253                     l1563:
  2071                           
  2072                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x16;
  2073  0253  3016               	movlw	22
  2074  0254  0020               	movlb	0	; select bank0
  2075  0255  0095               	movwf	21	;volatile
  2076  0256                     l1565:
  2077                           
  2078                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 22;
  2079  0256  3016               	movlw	22
  2080  0257  00B6               	movwf	??_TMR0_Initialize
  2081  0258  0836               	movf	??_TMR0_Initialize,w
  2082  0259  00B3               	movwf	_timer0ReloadVal	;volatile
  2083  025A                     l1567:
  2084                           
  2085                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  2086  025A  110B               	bcf	11,2	;volatile
  2087  025B                     l1569:
  2088                           
  2089                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2090  025B  3035               	movlw	low _TMR0_DefaultInterruptHandler
  2091  025C  00B4               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2092  025D  3003               	movlw	high _TMR0_DefaultInterruptHandler
  2093  025E  00B5               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2094  025F  3183  2316  3182   	fcall	_TMR0_SetInterruptHandler
  2095  0262                     l185:
  2096  0262  0008               	return
  2097  0263                     __end_of_TMR0_Initialize:
  2098                           
  2099                           	psect	text9
  2100  0316                     __ptext9:	
  2101 ;; *************** function _TMR0_SetInterruptHandler *****************
  2102 ;; Defined at:
  2103 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2106 ;;		 -> switch_zum(1), TMR0_DefaultInterruptHandler(1), 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMMON   BANK0   BANK1
  2118 ;;      Params:         0       2       0
  2119 ;;      Locals:         0       0       0
  2120 ;;      Temps:          0       0       0
  2121 ;;      Totals:         0       2       0
  2122 ;;Total ram usage:        2 bytes
  2123 ;; Hardware stack levels used: 1
  2124 ;; Hardware stack levels required when called: 7
  2125 ;; This function calls:
  2126 ;;		Nothing
  2127 ;; This function is called by:
  2128 ;;		_TMR0_Initialize
  2129 ;;		_start_setup
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133  0316                     _TMR0_SetInterruptHandler:	
  2134                           ;psect for function _TMR0_SetInterruptHandler
  2135                           
  2136  0316                     l1437:	
  2137                           ;incstack = 0
  2138                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2139                           
  2140                           
  2141                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  2142  0316  0020               	movlb	0	; select bank0
  2143  0317  0835               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2144  0318  00AF               	movwf	_TMR0_InterruptHandler+1
  2145  0319  0834               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2146  031A  00AE               	movwf	_TMR0_InterruptHandler
  2147  031B                     l201:
  2148  031B  0008               	return
  2149  031C                     __end_of_TMR0_SetInterruptHandler:
  2150                           
  2151                           	psect	text10
  2152  0263                     __ptext10:	
  2153 ;; *************** function _PIN_MANAGER_Initialize *****************
  2154 ;; Defined at:
  2155 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;		None
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;		None
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1    wreg      void 
  2162 ;; Registers used:
  2163 ;;		wreg, status,2
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMMON   BANK0   BANK1
  2169 ;;      Params:         0       0       0
  2170 ;;      Locals:         0       0       0
  2171 ;;      Temps:          0       0       0
  2172 ;;      Totals:         0       0       0
  2173 ;;Total ram usage:        0 bytes
  2174 ;; Hardware stack levels used: 1
  2175 ;; Hardware stack levels required when called: 7
  2176 ;; This function calls:
  2177 ;;		Nothing
  2178 ;; This function is called by:
  2179 ;;		_SYSTEM_Initialize
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183  0263                     _PIN_MANAGER_Initialize:	
  2184                           ;psect for function _PIN_MANAGER_Initialize
  2185                           
  2186  0263                     l1529:	
  2187                           ;incstack = 0
  2188                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2189                           
  2190                           
  2191                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2192  0263  0022               	movlb	2	; select bank2
  2193  0264  018C               	clrf	12	;volatile
  2194                           
  2195                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  2196  0265  018E               	clrf	14	;volatile
  2197  0266                     l1531:
  2198                           
  2199                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x0F;
  2200  0266  300F               	movlw	15
  2201  0267  0021               	movlb	1	; select bank1
  2202  0268  008C               	movwf	12	;volatile
  2203  0269                     l1533:
  2204                           
  2205                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x0C;
  2206  0269  300C               	movlw	12
  2207  026A  008E               	movwf	14	;volatile
  2208  026B                     l1535:
  2209                           
  2210                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x0C;
  2211  026B  300C               	movlw	12
  2212  026C  0023               	movlb	3	; select bank3
  2213  026D  008E               	movwf	14	;volatile
  2214  026E                     l1537:
  2215                           
  2216                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x07;
  2217  026E  3007               	movlw	7
  2218  026F  008C               	movwf	12	;volatile
  2219                           
  2220                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  2221  0270  0024               	movlb	4	; select bank4
  2222  0271  018C               	clrf	12	;volatile
  2223                           
  2224                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  2225  0272  018E               	clrf	14	;volatile
  2226  0273                     l1539:
  2227                           
  2228                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2229  0273  0021               	movlb	1	; select bank1
  2230  0274  1795               	bsf	21,7	;volatile
  2231                           
  2232                           ;mcc_generated_files/pin_manager.c: 86:     APFCON = 0x00;
  2233  0275  0022               	movlb	2	; select bank2
  2234  0276  019D               	clrf	29	;volatile
  2235  0277                     l90:
  2236  0277  0008               	return
  2237  0278                     __end_of_PIN_MANAGER_Initialize:
  2238                           
  2239                           	psect	text11
  2240  0303                     __ptext11:	
  2241 ;; *************** function _OSCILLATOR_Initialize *****************
  2242 ;; Defined at:
  2243 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;		None
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;		None
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      void 
  2250 ;; Registers used:
  2251 ;;		wreg, status,2
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMMON   BANK0   BANK1
  2257 ;;      Params:         0       0       0
  2258 ;;      Locals:         0       0       0
  2259 ;;      Temps:          0       0       0
  2260 ;;      Totals:         0       0       0
  2261 ;;Total ram usage:        0 bytes
  2262 ;; Hardware stack levels used: 1
  2263 ;; Hardware stack levels required when called: 7
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_SYSTEM_Initialize
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271  0303                     _OSCILLATOR_Initialize:	
  2272                           ;psect for function _OSCILLATOR_Initialize
  2273                           
  2274  0303                     l1541:	
  2275                           ;incstack = 0
  2276                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2277                           
  2278                           
  2279                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x68;
  2280  0303  3068               	movlw	104
  2281  0304  0021               	movlb	1	; select bank1
  2282  0305  0099               	movwf	25	;volatile
  2283  0306                     l1543:
  2284                           
  2285                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  2286  0306  0198               	clrf	24	;volatile
  2287  0307                     l1545:
  2288                           
  2289                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  2290  0307  0022               	movlb	2	; select bank2
  2291  0308  0196               	clrf	22	;volatile
  2292  0309                     l26:
  2293  0309  0008               	return
  2294  030A                     __end_of_OSCILLATOR_Initialize:
  2295                           
  2296                           	psect	text12
  2297  02FB                     __ptext12:	
  2298 ;; *************** function _ADC_Initialize *****************
  2299 ;; Defined at:
  2300 ;;		line 67 in file "mcc_generated_files/adc.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;		None
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;		None
  2305 ;; Return value:  Size  Location     Type
  2306 ;;                  1    wreg      void 
  2307 ;; Registers used:
  2308 ;;		wreg, status,2
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMMON   BANK0   BANK1
  2314 ;;      Params:         0       0       0
  2315 ;;      Locals:         0       0       0
  2316 ;;      Temps:          0       0       0
  2317 ;;      Totals:         0       0       0
  2318 ;;Total ram usage:        0 bytes
  2319 ;; Hardware stack levels used: 1
  2320 ;; Hardware stack levels required when called: 7
  2321 ;; This function calls:
  2322 ;;		Nothing
  2323 ;; This function is called by:
  2324 ;;		_SYSTEM_Initialize
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328  02FB                     _ADC_Initialize:	
  2329                           ;psect for function _ADC_Initialize
  2330                           
  2331  02FB                     l1571:	
  2332                           ;incstack = 0
  2333                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  2334                           
  2335                           
  2336                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x40;
  2337  02FB  3040               	movlw	64
  2338  02FC  0021               	movlb	1	; select bank1
  2339  02FD  009E               	movwf	30	;volatile
  2340  02FE                     l1573:
  2341                           
  2342                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  2343  02FE  019B               	clrf	27	;volatile
  2344  02FF                     l1575:
  2345                           
  2346                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  2347  02FF  019C               	clrf	28	;volatile
  2348                           
  2349                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  2350  0300  3001               	movlw	1
  2351  0301  009D               	movwf	29	;volatile
  2352  0302                     l46:
  2353  0302  0008               	return
  2354  0303                     __end_of_ADC_Initialize:
  2355                           
  2356                           	psect	text13
  2357  0165                     __ptext13:	
  2358 ;; *************** function _povorot *****************
  2359 ;; Defined at:
  2360 ;;		line 214 in file "main.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, status,2, status,0, pclath, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMMON   BANK0   BANK1
  2374 ;;      Params:         0       0       0
  2375 ;;      Locals:         0       0       0
  2376 ;;      Temps:          0       1       0
  2377 ;;      Totals:         0       1       0
  2378 ;;Total ram usage:        1 bytes
  2379 ;; Hardware stack levels used: 1
  2380 ;; Hardware stack levels required when called: 8
  2381 ;; This function calls:
  2382 ;;		_go_close
  2383 ;;		_go_open
  2384 ;; This function is called by:
  2385 ;;		_main
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389  0165                     _povorot:	
  2390                           ;psect for function _povorot
  2391                           
  2392  0165                     l1647:	
  2393                           ;incstack = 0
  2394                           ; Regs used in _povorot: [wreg+status,2+status,0+pclath+cstack]
  2395                           
  2396                           
  2397                           ;main.c: 215:     if (time_s > ROTATION_TIME &&
  2398  0165  0020               	movlb	0	; select bank0
  2399  0166  1BA3               	btfsc	_time_s+3,7
  2400  0167  2975               	goto	u721
  2401  0168  0823               	movf	_time_s+3,w
  2402  0169  1D03               	btfss	3,2
  2403  016A  2976               	goto	u720
  2404  016B  0822               	movf	_time_s+2,w
  2405  016C  1D03               	btfss	3,2
  2406  016D  2976               	goto	u720
  2407  016E  3001               	movlw	1
  2408  016F  0220               	subwf	_time_s,w
  2409  0170  3075               	movlw	117
  2410  0171  3B21               	subwfb	_time_s+1,w
  2411  0172  1C03               	btfss	3,0
  2412  0173  2975               	goto	u721
  2413  0174  2976               	goto	u720
  2414  0175                     u721:
  2415  0175  2995               	goto	l373
  2416  0176                     u720:
  2417  0176                     l1649:
  2418  0176  1D7D               	btfss	_FLAGS,2
  2419  0177  2979               	goto	u731
  2420  0178  297A               	goto	u730
  2421  0179                     u731:
  2422  0179  2995               	goto	l373
  2423  017A                     u730:
  2424  017A                     l1651:
  2425  017A  1CFD               	btfss	_FLAGS,1
  2426  017B  297D               	goto	u741
  2427  017C  297E               	goto	u740
  2428  017D                     u741:
  2429  017D  2995               	goto	l373
  2430  017E                     u740:
  2431  017E                     l1653:
  2432                           
  2433                           ;main.c: 219:             ) {;main.c: 220:         go_open();
  2434  017E  3182  22E9  3181   	fcall	_go_open
  2435  0181                     l1655:
  2436                           
  2437                           ;main.c: 221:         _delay((unsigned long)((5)*(4000000/4000.0)));
  2438  0181  3007               	movlw	7
  2439  0182  0020               	movlb	0	; select bank0
  2440  0183  00B5               	movwf	??_povorot
  2441  0184  307D               	movlw	125
  2442  0185                     u887:
  2443  0185  0B89               	decfsz	9,f
  2444  0186  2985               	goto	u887
  2445  0187  0BB5               	decfsz	??_povorot,f
  2446  0188  2985               	goto	u887
  2447  0189                     l1657:
  2448                           
  2449                           ;main.c: 222:         go_close();
  2450  0189  3181  21D0  3181   	fcall	_go_close
  2451                           
  2452                           ;main.c: 223:         time_s = 0;
  2453  018C  3000               	movlw	0
  2454  018D  0020               	movlb	0	; select bank0
  2455  018E  00A3               	movwf	_time_s+3
  2456  018F  3000               	movlw	0
  2457  0190  00A2               	movwf	_time_s+2
  2458  0191  3000               	movlw	0
  2459  0192  00A1               	movwf	_time_s+1
  2460  0193  3000               	movlw	0
  2461  0194  00A0               	movwf	_time_s
  2462  0195                     l373:
  2463  0195  0008               	return
  2464  0196                     __end_of_povorot:
  2465                           
  2466                           	psect	text14
  2467  01B5                     __ptext14:	
  2468 ;; *************** function _fun_work *****************
  2469 ;; Defined at:
  2470 ;;		line 227 in file "main.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;		None
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;		None
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  1    wreg      void 
  2477 ;; Registers used:
  2478 ;;		wreg, status,2, status,0, pclath, cstack
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMMON   BANK0   BANK1
  2484 ;;      Params:         0       0       0
  2485 ;;      Locals:         0       0       0
  2486 ;;      Temps:          0       0       0
  2487 ;;      Totals:         0       0       0
  2488 ;;Total ram usage:        0 bytes
  2489 ;; Hardware stack levels used: 1
  2490 ;; Hardware stack levels required when called: 8
  2491 ;; This function calls:
  2492 ;;		_go_close
  2493 ;;		_go_open
  2494 ;; This function is called by:
  2495 ;;		_main
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499  01B5                     _fun_work:	
  2500                           ;psect for function _fun_work
  2501                           
  2502  01B5                     l1659:	
  2503                           ;incstack = 0
  2504                           ; Regs used in _fun_work: [wreg+status,2+status,0+pclath+cstack]
  2505                           
  2506                           
  2507                           ;main.c: 228:     if (FLAGS.bits.FUN_OLD)
  2508  01B5  1D7D               	btfss	_FLAGS,2
  2509  01B6  29B8               	goto	u751
  2510  01B7  29B9               	goto	u750
  2511  01B8                     u751:
  2512  01B8  29C7               	goto	l376
  2513  01B9                     u750:
  2514  01B9                     l1661:
  2515                           
  2516                           ;main.c: 229:     {;main.c: 230:         if (FLAGS.bits.FUN_NEW==0) {
  2517  01B9  19FD               	btfsc	_FLAGS,3
  2518  01BA  29BC               	goto	u761
  2519  01BB  29BD               	goto	u760
  2520  01BC                     u761:
  2521  01BC  29CF               	goto	l380
  2522  01BD                     u760:
  2523  01BD                     l1663:
  2524                           
  2525                           ;main.c: 231:             go_close();
  2526  01BD  3181  21D0  3181   	fcall	_go_close
  2527  01C0                     l1665:
  2528                           
  2529                           ;main.c: 232:             FLAGS.bits.FUN_OLD = FLAGS.bits.FUN_NEW;
  2530  01C0  19FD               	btfsc	_FLAGS,3
  2531  01C1  29C3               	goto	u771
  2532  01C2  29C5               	goto	u770
  2533  01C3                     u771:
  2534  01C3  157D               	bsf	_FLAGS,2
  2535  01C4  29C6               	goto	u784
  2536  01C5                     u770:
  2537  01C5  117D               	bcf	_FLAGS,2
  2538  01C6                     u784:
  2539  01C6  29CF               	goto	l380
  2540  01C7                     l376:
  2541                           
  2542                           ;main.c: 235:         if (FLAGS.bits.FUN_NEW && ~FLAGS.bits.ALARM) {
  2543  01C7  1DFD               	btfss	_FLAGS,3
  2544  01C8  29CA               	goto	u791
  2545  01C9  29CB               	goto	u790
  2546  01CA                     u791:
  2547  01CA  29CF               	goto	l380
  2548  01CB                     u790:
  2549  01CB                     l1667:
  2550                           
  2551                           ;main.c: 236:             go_open();
  2552  01CB  3182  22E9  3181   	fcall	_go_open
  2553  01CE  29C0               	goto	l1665
  2554  01CF                     l380:
  2555  01CF  0008               	return
  2556  01D0                     __end_of_fun_work:
  2557                           
  2558                           	psect	text15
  2559  02E9                     __ptext15:	
  2560 ;; *************** function _go_open *****************
  2561 ;; Defined at:
  2562 ;;		line 82 in file "main.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		wreg
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMMON   BANK0   BANK1
  2576 ;;      Params:         0       0       0
  2577 ;;      Locals:         0       0       0
  2578 ;;      Temps:          0       1       0
  2579 ;;      Totals:         0       1       0
  2580 ;;Total ram usage:        1 bytes
  2581 ;; Hardware stack levels used: 1
  2582 ;; Hardware stack levels required when called: 7
  2583 ;; This function calls:
  2584 ;;		Nothing
  2585 ;; This function is called by:
  2586 ;;		_povorot
  2587 ;;		_fun_work
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591  02E9                     _go_open:	
  2592                           ;psect for function _go_open
  2593                           
  2594  02E9                     l279:	
  2595                           ;incstack = 0
  2596                           ; Regs used in _go_open: [wreg]
  2597                           ;main.c: 83:     do { LATCbits.LATC4 = 0; } while(0);
  2598                           
  2599  02E9  0022               	movlb	2	; select bank2
  2600  02EA  120E               	bcf	14,4	;volatile
  2601  02EB                     l281:	
  2602                           ;main.c: 84:     do { LATCbits.LATC5 = 1; } while(0);
  2603                           
  2604  02EB  168E               	bsf	14,5	;volatile
  2605  02EC                     l1625:
  2606                           
  2607                           ;main.c: 85:     time_pow = 10;
  2608  02EC  300A               	movlw	10
  2609  02ED  0020               	movlb	0	; select bank0
  2610  02EE  00B4               	movwf	??_go_open
  2611  02EF  0834               	movf	??_go_open,w
  2612  02F0  00B2               	movwf	_time_pow
  2613  02F1                     l1627:
  2614                           
  2615                           ;main.c: 86:     FLAGS.bits.RELE_POW = 1;
  2616  02F1  177D               	bsf	_FLAGS,6
  2617  02F2                     l283:
  2618  02F2  0008               	return
  2619  02F3                     __end_of_go_open:
  2620                           
  2621                           	psect	text16
  2622  01D0                     __ptext16:	
  2623 ;; *************** function _go_close *****************
  2624 ;; Defined at:
  2625 ;;		line 70 in file "main.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;		None
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;		None
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  1    wreg      void 
  2632 ;; Registers used:
  2633 ;;		wreg
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMMON   BANK0   BANK1
  2639 ;;      Params:         0       0       0
  2640 ;;      Locals:         0       0       0
  2641 ;;      Temps:          0       1       0
  2642 ;;      Totals:         0       1       0
  2643 ;;Total ram usage:        1 bytes
  2644 ;; Hardware stack levels used: 1
  2645 ;; Hardware stack levels required when called: 7
  2646 ;; This function calls:
  2647 ;;		Nothing
  2648 ;; This function is called by:
  2649 ;;		_povorot
  2650 ;;		_fun_work
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654  01D0                     _go_close:	
  2655                           ;psect for function _go_close
  2656                           
  2657  01D0                     l1611:	
  2658                           ;incstack = 0
  2659                           ; Regs used in _go_close: [wreg]
  2660                           
  2661                           
  2662                           ;main.c: 71:     time_s = 0;
  2663  01D0  3000               	movlw	0
  2664  01D1  0020               	movlb	0	; select bank0
  2665  01D2  00A3               	movwf	_time_s+3
  2666  01D3  3000               	movlw	0
  2667  01D4  00A2               	movwf	_time_s+2
  2668  01D5  3000               	movlw	0
  2669  01D6  00A1               	movwf	_time_s+1
  2670  01D7  3000               	movlw	0
  2671  01D8  00A0               	movwf	_time_s
  2672  01D9                     l1613:
  2673                           
  2674                           ;main.c: 72:     FLAGS.bits.FUN_OLD = 0;
  2675  01D9  117D               	bcf	_FLAGS,2
  2676  01DA                     l1615:
  2677  01DA  0022               	movlb	2	; select bank2
  2678  01DB  160E               	bsf	14,4	;volatile
  2679  01DC                     l273:
  2680                           
  2681                           ;main.c: 74:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2682  01DC  30C8               	movlw	200
  2683  01DD                     u897:
  2684  01DD  3200               	nop2
  2685  01DE  0B89               	decfsz	9,f
  2686  01DF  29DD               	goto	u897
  2687  01E0                     l1617:
  2688  01E0  0022               	movlb	2	; select bank2
  2689  01E1  168E               	bsf	14,5	;volatile
  2690  01E2                     l275:
  2691                           
  2692                           ;main.c: 76:     time_pow = 10;
  2693  01E2  300A               	movlw	10
  2694  01E3  0020               	movlb	0	; select bank0
  2695  01E4  00B4               	movwf	??_go_close
  2696  01E5  0834               	movf	??_go_close,w
  2697  01E6  00B2               	movwf	_time_pow
  2698  01E7                     l1619:
  2699                           
  2700                           ;main.c: 77:     FLAGS.bits.RELE_POW = 1;
  2701  01E7  177D               	bsf	_FLAGS,6
  2702  01E8                     l1621:
  2703                           
  2704                           ;main.c: 78:     FLAGS.bits.RELE_CON = 1;
  2705  01E8  17FD               	bsf	_FLAGS,7
  2706  01E9                     l276:
  2707  01E9  0008               	return
  2708  01EA                     __end_of_go_close:
  2709                           
  2710                           	psect	intentry
  2711  0004                     __pintentry:	
  2712 ;; *************** function _INTERRUPT_InterruptManager *****************
  2713 ;; Defined at:
  2714 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;		None
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;		None
  2719 ;; Return value:  Size  Location     Type
  2720 ;;                  1    wreg      void 
  2721 ;; Registers used:
  2722 ;;		wreg, status,2, status,0, pclath, cstack
  2723 ;; Tracked objects:
  2724 ;;		On entry : 0/0
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMMON   BANK0   BANK1
  2728 ;;      Params:         0       0       0
  2729 ;;      Locals:         0       0       0
  2730 ;;      Temps:          0       0       0
  2731 ;;      Totals:         0       0       0
  2732 ;;Total ram usage:        0 bytes
  2733 ;; Hardware stack levels used: 1
  2734 ;; Hardware stack levels required when called: 6
  2735 ;; This function calls:
  2736 ;;		_TMR0_ISR
  2737 ;;		_TMR2_ISR
  2738 ;; This function is called by:
  2739 ;;		Interrupt level 1
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743  0004                     _INTERRUPT_InterruptManager:
  2744                           
  2745                           ;incstack = 0
  2746  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2747                           
  2748                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2749  0005  3180               	pagesel	$
  2750  0006                     i1l1715:
  2751                           
  2752                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  2753  0006  1E8B               	btfss	11,5	;volatile
  2754  0007  2809               	goto	u81_21
  2755  0008  280A               	goto	u81_20
  2756  0009                     u81_21:
  2757  0009  2812               	goto	i1l108
  2758  000A                     u81_20:
  2759  000A                     i1l1717:
  2760  000A  1D0B               	btfss	11,2	;volatile
  2761  000B  280D               	goto	u82_21
  2762  000C  280E               	goto	u82_20
  2763  000D                     u82_21:
  2764  000D  2812               	goto	i1l108
  2765  000E                     u82_20:
  2766  000E                     i1l1719:
  2767                           
  2768                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  2769  000E  3182  22BF  3180   	fcall	_TMR0_ISR
  2770                           
  2771                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  2772  0011  2824               	goto	i1l114
  2773  0012                     i1l108:	
  2774                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  2775                           
  2776  0012  1F0B               	btfss	11,6	;volatile
  2777  0013  2815               	goto	u83_21
  2778  0014  2816               	goto	u83_20
  2779  0015                     u83_21:
  2780  0015  2824               	goto	i1l114
  2781  0016                     u83_20:
  2782  0016                     i1l1721:
  2783                           
  2784                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  2785  0016  0021               	movlb	1	; select bank1
  2786  0017  1C91               	btfss	17,1	;volatile
  2787  0018  281A               	goto	u84_21
  2788  0019  281B               	goto	u84_20
  2789  001A                     u84_21:
  2790  001A  2824               	goto	i1l113
  2791  001B                     u84_20:
  2792  001B                     i1l1723:
  2793  001B  0020               	movlb	0	; select bank0
  2794  001C  1C91               	btfss	17,1	;volatile
  2795  001D  281F               	goto	u85_21
  2796  001E  2820               	goto	u85_20
  2797  001F                     u85_21:
  2798  001F  2824               	goto	i1l113
  2799  0020                     u85_20:
  2800  0020                     i1l1725:
  2801                           
  2802                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
  2803  0020  3182  2238  3180   	fcall	_TMR2_ISR
  2804                           
  2805                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  2806  0023  2824               	goto	i1l114
  2807  0024                     i1l113:	
  2808                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  2809                           
  2810  0024                     i1l114:
  2811  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2812  0025  0009               	retfie
  2813  0026                     __end_of_INTERRUPT_InterruptManager:
  2814                           
  2815                           	psect	text18
  2816  0238                     __ptext18:	
  2817 ;; *************** function _TMR2_ISR *****************
  2818 ;; Defined at:
  2819 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;		None
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;		None
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  1    wreg      void 
  2826 ;; Registers used:
  2827 ;;		wreg, status,2, status,0, pclath, cstack
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMMON   BANK0   BANK1
  2833 ;;      Params:         0       0       0
  2834 ;;      Locals:         0       0       0
  2835 ;;      Temps:          0       0       0
  2836 ;;      Totals:         0       0       0
  2837 ;;Total ram usage:        0 bytes
  2838 ;; Hardware stack levels used: 1
  2839 ;; Hardware stack levels required when called: 5
  2840 ;; This function calls:
  2841 ;;		_TMR2_CallBack
  2842 ;; This function is called by:
  2843 ;;		_INTERRUPT_InterruptManager
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847  0238                     _TMR2_ISR:	
  2848                           ;psect for function _TMR2_ISR
  2849                           
  2850  0238                     i1l1639:	
  2851                           ;incstack = 0
  2852                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  2853                           
  2854                           
  2855                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
  2856  0238  0020               	movlb	0	; select bank0
  2857  0239  1091               	bcf	17,1	;volatile
  2858  023A                     i1l1641:
  2859                           
  2860                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 10)
  2861  023A  3001               	movlw	1
  2862  023B  07AA               	addwf	TMR2_ISR@CountCallBack,f	;volatile
  2863  023C  3000               	movlw	0
  2864  023D  3DAB               	addwfc	TMR2_ISR@CountCallBack+1,f	;volatile
  2865  023E  3000               	movlw	0
  2866  023F  022B               	subwf	TMR2_ISR@CountCallBack+1,w	;volatile
  2867  0240  300A               	movlw	10
  2868  0241  1903               	skipnz
  2869  0242  022A               	subwf	TMR2_ISR@CountCallBack,w	;volatile
  2870  0243  1C03               	skipc
  2871  0244  2A46               	goto	u71_21
  2872  0245  2A47               	goto	u71_20
  2873  0246                     u71_21:
  2874  0246  2A4D               	goto	i1l158
  2875  0247                     u71_20:
  2876  0247                     i1l1643:
  2877                           
  2878                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
  2879  0247  3182  22CF  3182   	fcall	_TMR2_CallBack
  2880  024A                     i1l1645:
  2881                           
  2882                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
  2883  024A  0020               	movlb	0	; select bank0
  2884  024B  01AA               	clrf	TMR2_ISR@CountCallBack	;volatile
  2885  024C  01AB               	clrf	TMR2_ISR@CountCallBack+1	;volatile
  2886  024D                     i1l158:
  2887  024D  0008               	return
  2888  024E                     __end_of_TMR2_ISR:
  2889                           
  2890                           	psect	text19
  2891  02CF                     __ptext19:	
  2892 ;; *************** function _TMR2_CallBack *****************
  2893 ;; Defined at:
  2894 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;		None
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;		None
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1    wreg      void 
  2901 ;; Registers used:
  2902 ;;		wreg, status,2, status,0, pclath, cstack
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMMON   BANK0   BANK1
  2908 ;;      Params:         0       0       0
  2909 ;;      Locals:         0       0       0
  2910 ;;      Temps:          0       0       0
  2911 ;;      Totals:         0       0       0
  2912 ;;Total ram usage:        0 bytes
  2913 ;; Hardware stack levels used: 1
  2914 ;; Hardware stack levels required when called: 4
  2915 ;; This function calls:
  2916 ;;		Absolute function
  2917 ;;		_Sec_tick_work
  2918 ;;		_TMR2_DefaultInterruptHandler
  2919 ;; This function is called by:
  2920 ;;		_TMR2_ISR
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924  02CF                     _TMR2_CallBack:	
  2925                           ;psect for function _TMR2_CallBack
  2926                           
  2927  02CF                     i1l1603:	
  2928                           ;incstack = 0
  2929                           ; Regs used in _TMR2_CallBack: [wreg+status,2+status,0+pclath+cstack]
  2930                           
  2931                           
  2932                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
  2933  02CF  0020               	movlb	0	; select bank0
  2934  02D0  0830               	movf	_TMR2_InterruptHandler,w
  2935  02D1  0431               	iorwf	_TMR2_InterruptHandler+1,w
  2936  02D2  1903               	btfsc	3,2
  2937  02D3  2AD5               	goto	u66_21
  2938  02D4  2AD6               	goto	u66_20
  2939  02D5                     u66_21:
  2940  02D5  2ADB               	goto	i1l162
  2941  02D6                     u66_20:
  2942  02D6                     i1l1605:
  2943                           
  2944                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
  2945  02D6  0831               	movf	_TMR2_InterruptHandler+1,w
  2946  02D7  008A               	movwf	10
  2947  02D8  0830               	movf	_TMR2_InterruptHandler,w
  2948  02D9  000A               	callw
  2949  02DA  3182               	pagesel	$
  2950  02DB                     i1l162:
  2951  02DB  0008               	return
  2952  02DC                     __end_of_TMR2_CallBack:
  2953                           
  2954                           	psect	text20
  2955  0038                     __ptext20:	
  2956 ;; *************** function _Sec_tick_work *****************
  2957 ;; Defined at:
  2958 ;;		line 191 in file "main.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;		None
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;		None
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      void 
  2965 ;; Registers used:
  2966 ;;		wreg, status,2, status,0, pclath, cstack
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMMON   BANK0   BANK1
  2972 ;;      Params:         0       0       0
  2973 ;;      Locals:         0       0       0
  2974 ;;      Temps:          1       0       0
  2975 ;;      Totals:         1       0       0
  2976 ;;Total ram usage:        1 bytes
  2977 ;; Hardware stack levels used: 1
  2978 ;; Hardware stack levels required when called: 3
  2979 ;; This function calls:
  2980 ;;		_get_fun
  2981 ;;		_get_jump
  2982 ;;		_get_measure
  2983 ;;		_rele_tick
  2984 ;;		_toggle_tone
  2985 ;; This function is called by:
  2986 ;;		_start_setup
  2987 ;;		_TMR2_CallBack
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991  0038                     _Sec_tick_work:	
  2992                           ;psect for function _Sec_tick_work
  2993                           
  2994  0038                     i1l1577:	
  2995                           ;incstack = 0
  2996                           ; Regs used in _Sec_tick_work: [wreg+status,2+status,0+pclath+cstack]
  2997                           
  2998                           
  2999                           ;main.c: 192:     time_s++;
  3000  0038  3001               	movlw	1
  3001  0039  0020               	movlb	0	; select bank0
  3002  003A  07A0               	addwf	_time_s,f
  3003  003B  3000               	movlw	0
  3004  003C  3DA1               	addwfc	_time_s+1,f
  3005  003D  3000               	movlw	0
  3006  003E  3DA2               	addwfc	_time_s+2,f
  3007  003F  3000               	movlw	0
  3008  0040  3DA3               	addwfc	_time_s+3,f
  3009  0041                     i1l1579:
  3010                           
  3011                           ;main.c: 193:     rele_tick();
  3012  0041  3181  21EA  3180   	fcall	_rele_tick
  3013  0044  0064               	clrwdt	;# 
  3014  0045                     i1l1581:
  3015                           
  3016                           ;main.c: 195:     if (FLAGS.bits.ALARM) {
  3017  0045  1C7D               	btfss	_FLAGS,0
  3018  0046  2848               	goto	u60_21
  3019  0047  2849               	goto	u60_20
  3020  0048                     u60_21:
  3021  0048  2859               	goto	i1l1587
  3022  0049                     u60_20:
  3023  0049                     i1l1583:
  3024  0049  1003               	clrc
  3025  004A  0022               	movlb	2	; select bank2
  3026  004B  1E0C               	btfss	12,4	;volatile
  3027  004C  1403               	setc
  3028  004D  1803               	btfsc	3,0
  3029  004E  2850               	goto	u61_21
  3030  004F  2853               	goto	u61_20
  3031  0050                     u61_21:
  3032  0050  0022               	movlb	2	; select bank2
  3033  0051  160C               	bsf	12,4	;volatile
  3034  0052  2855               	goto	u62_24
  3035  0053                     u61_20:
  3036  0053  0022               	movlb	2	; select bank2
  3037  0054  120C               	bcf	12,4	;volatile
  3038  0055                     u62_24:
  3039  0055                     i1l1585:
  3040                           
  3041                           ;main.c: 197:         toggle_tone();
  3042  0055  3182  22DC  3180   	fcall	_toggle_tone
  3043                           
  3044                           ;main.c: 198:     } else {
  3045  0058  2879               	goto	i1l369
  3046  0059                     i1l1587:
  3047                           
  3048                           ;main.c: 199:         get_measure();
  3049  0059  3180  20F8  3180   	fcall	_get_measure
  3050                           
  3051                           ;main.c: 200:         get_jump();
  3052  005C  3180  20BB  3180   	fcall	_get_jump
  3053                           
  3054                           ;main.c: 201:         get_fun();
  3055  005F  3180  207A  3180   	fcall	_get_fun
  3056  0062                     i1l1589:
  3057                           
  3058                           ;main.c: 202:         static char iled;;main.c: 203:         iled++;
  3059  0062  3001               	movlw	1
  3060  0063  00F7               	movwf	??_Sec_tick_work
  3061  0064  0877               	movf	??_Sec_tick_work,w
  3062  0065  07F8               	addwf	Sec_tick_work@iled,f
  3063  0066                     i1l1591:
  3064                           
  3065                           ;main.c: 204:         if (iled > 2) {
  3066  0066  3003               	movlw	3
  3067  0067  0278               	subwf	Sec_tick_work@iled,w
  3068  0068  1C03               	skipc
  3069  0069  286B               	goto	u63_21
  3070  006A  286C               	goto	u63_20
  3071  006B                     u63_21:
  3072  006B  2879               	goto	i1l369
  3073  006C                     u63_20:
  3074  006C                     i1l1593:
  3075  006C  1003               	clrc
  3076  006D  0022               	movlb	2	; select bank2
  3077  006E  1E0C               	btfss	12,4	;volatile
  3078  006F  1403               	setc
  3079  0070  1803               	btfsc	3,0
  3080  0071  2873               	goto	u64_21
  3081  0072  2876               	goto	u64_20
  3082  0073                     u64_21:
  3083  0073  0022               	movlb	2	; select bank2
  3084  0074  160C               	bsf	12,4	;volatile
  3085  0075  2878               	goto	u65_24
  3086  0076                     u64_20:
  3087  0076  0022               	movlb	2	; select bank2
  3088  0077  120C               	bcf	12,4	;volatile
  3089  0078                     u65_24:
  3090  0078                     i1l1595:
  3091                           
  3092                           ;main.c: 206:             iled = 0;
  3093  0078  01F8               	clrf	Sec_tick_work@iled
  3094  0079                     i1l369:
  3095  0079  0008               	return
  3096  007A                     __end_of_Sec_tick_work:
  3097                           
  3098                           	psect	text21
  3099  0334                     __ptext21:	
  3100 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  3101 ;; Defined at:
  3102 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  3103 ;; Parameters:    Size  Location     Type
  3104 ;;		None
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;		None
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  1    wreg      void 
  3109 ;; Registers used:
  3110 ;;		None
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMMON   BANK0   BANK1
  3116 ;;      Params:         0       0       0
  3117 ;;      Locals:         0       0       0
  3118 ;;      Temps:          0       0       0
  3119 ;;      Totals:         0       0       0
  3120 ;;Total ram usage:        0 bytes
  3121 ;; Hardware stack levels used: 1
  3122 ;; This function calls:
  3123 ;;		Nothing
  3124 ;; This function is called by:
  3125 ;;		_TMR2_Initialize
  3126 ;;		_TMR2_CallBack
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130  0334                     _TMR2_DefaultInterruptHandler:	
  3131                           ;psect for function _TMR2_DefaultInterruptHandler
  3132                           
  3133  0334                     i1l168:	
  3134                           ;incstack = 0
  3135                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  3136                           
  3137  0334  0008               	return
  3138  0335                     __end_of_TMR2_DefaultInterruptHandler:
  3139                           
  3140                           	psect	text22
  3141  02DC                     __ptext22:	
  3142 ;; *************** function _toggle_tone *****************
  3143 ;; Defined at:
  3144 ;;		line 64 in file "main.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;		None
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;		None
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		status,0
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMMON   BANK0   BANK1
  3158 ;;      Params:         0       0       0
  3159 ;;      Locals:         0       0       0
  3160 ;;      Temps:          0       0       0
  3161 ;;      Totals:         0       0       0
  3162 ;;Total ram usage:        0 bytes
  3163 ;; Hardware stack levels used: 1
  3164 ;; This function calls:
  3165 ;;		Nothing
  3166 ;; This function is called by:
  3167 ;;		_Sec_tick_work
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171  02DC                     _toggle_tone:	
  3172                           ;psect for function _toggle_tone
  3173                           
  3174  02DC                     i1l1439:	
  3175                           ;incstack = 0
  3176                           ; Regs used in _toggle_tone: [status,0]
  3177                           
  3178                           
  3179                           ;main.c: 65:     TRISAbits.TRISA5 = ~TRISAbits.TRISA5;
  3180  02DC  1003               	clrc
  3181  02DD  0021               	movlb	1	; select bank1
  3182  02DE  1E8C               	btfss	12,5	;volatile
  3183  02DF  1403               	setc
  3184  02E0  1803               	btfsc	3,0
  3185  02E1  2AE3               	goto	u46_21
  3186  02E2  2AE6               	goto	u46_20
  3187  02E3                     u46_21:
  3188  02E3  0021               	movlb	1	; select bank1
  3189  02E4  168C               	bsf	12,5	;volatile
  3190  02E5  2AE8               	goto	u47_24
  3191  02E6                     u46_20:
  3192  02E6  0021               	movlb	1	; select bank1
  3193  02E7  128C               	bcf	12,5	;volatile
  3194  02E8                     u47_24:
  3195  02E8                     i1l269:
  3196  02E8  0008               	return
  3197  02E9                     __end_of_toggle_tone:
  3198                           
  3199                           	psect	text23
  3200  01EA                     __ptext23:	
  3201 ;; *************** function _rele_tick *****************
  3202 ;; Defined at:
  3203 ;;		line 166 in file "main.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;		None
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  1    wreg      void 
  3210 ;; Registers used:
  3211 ;;		wreg, status,2, status,0
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMMON   BANK0   BANK1
  3217 ;;      Params:         0       0       0
  3218 ;;      Locals:         0       0       0
  3219 ;;      Temps:          0       0       0
  3220 ;;      Totals:         0       0       0
  3221 ;;Total ram usage:        0 bytes
  3222 ;; Hardware stack levels used: 1
  3223 ;; This function calls:
  3224 ;;		Nothing
  3225 ;; This function is called by:
  3226 ;;		_Sec_tick_work
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230  01EA                     _rele_tick:	
  3231                           ;psect for function _rele_tick
  3232                           
  3233  01EA                     i1l1519:	
  3234                           ;incstack = 0
  3235                           ; Regs used in _rele_tick: [wreg+status,2+status,0]
  3236                           
  3237                           
  3238                           ;main.c: 167:     if (FLAGS.bits.RELE_POW) {
  3239  01EA  1F7D               	btfss	_FLAGS,6
  3240  01EB  29ED               	goto	u57_21
  3241  01EC  29EE               	goto	u57_20
  3242  01ED                     u57_21:
  3243  01ED  2A03               	goto	i1l357
  3244  01EE                     u57_20:
  3245  01EE                     i1l1521:
  3246                           
  3247                           ;main.c: 168:         if (time_pow > 0) time_pow--;
  3248  01EE  0020               	movlb	0	; select bank0
  3249  01EF  0832               	movf	_time_pow,w
  3250  01F0  1903               	btfsc	3,2
  3251  01F1  29F3               	goto	u58_21
  3252  01F2  29F4               	goto	u58_20
  3253  01F3                     u58_21:
  3254  01F3  29F6               	goto	i1l351
  3255  01F4                     u58_20:
  3256  01F4                     i1l1523:
  3257  01F4  3001               	movlw	1
  3258  01F5  02B2               	subwf	_time_pow,f
  3259  01F6                     i1l351:
  3260                           
  3261                           ;main.c: 169:         if (time_pow <= 0) {
  3262  01F6  0832               	movf	_time_pow,w
  3263  01F7  1D03               	btfss	3,2
  3264  01F8  29FA               	goto	u59_21
  3265  01F9  29FB               	goto	u59_20
  3266  01FA                     u59_21:
  3267  01FA  2A03               	goto	i1l357
  3268  01FB                     u59_20:
  3269  01FB                     i1l353:	
  3270                           ;main.c: 170:             do { LATCbits.LATC5 = 0; } while(0);
  3271                           
  3272  01FB  0022               	movlb	2	; select bank2
  3273  01FC  128E               	bcf	14,5	;volatile
  3274  01FD                     i1l1525:
  3275                           
  3276                           ;main.c: 171:             _delay((unsigned long)((1)*(4000000/4000.0)));
  3277  01FD  30C8               	movlw	200
  3278  01FE                     u90_27:
  3279  01FE  3200               	nop2
  3280  01FF  0B89               	decfsz	9,f
  3281  0200  29FE               	goto	u90_27
  3282  0201                     i1l1527:
  3283  0201  0022               	movlb	2	; select bank2
  3284  0202  120E               	bcf	14,4	;volatile
  3285  0203                     i1l357:
  3286  0203  0008               	return
  3287  0204                     __end_of_rele_tick:
  3288                           
  3289                           	psect	text24
  3290  00F8                     __ptext24:	
  3291 ;; *************** function _get_measure *****************
  3292 ;; Defined at:
  3293 ;;		line 114 in file "main.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;		None
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;  res             2    5[COMMON] unsigned int 
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      void 
  3300 ;; Registers used:
  3301 ;;		wreg, status,2, status,0, pclath, cstack
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMMON   BANK0   BANK1
  3307 ;;      Params:         0       0       0
  3308 ;;      Locals:         2       0       0
  3309 ;;      Temps:          1       0       0
  3310 ;;      Totals:         3       0       0
  3311 ;;Total ram usage:        3 bytes
  3312 ;; Hardware stack levels used: 1
  3313 ;; Hardware stack levels required when called: 2
  3314 ;; This function calls:
  3315 ;;		_ADC_GetConversion
  3316 ;;		_start_alarm
  3317 ;; This function is called by:
  3318 ;;		_Sec_tick_work
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322  00F8                     _get_measure:	
  3323                           ;psect for function _get_measure
  3324                           
  3325  00F8                     i1l307:	
  3326                           ;incstack = 0
  3327                           ; Regs used in _get_measure: [wreg+status,2+status,0+pclath+cstack]
  3328                           ;main.c: 115:     do { LATCbits.LATC1 = 1; } while(0);
  3329                           
  3330  00F8  0022               	movlb	2	; select bank2
  3331  00F9  148E               	bsf	14,1	;volatile
  3332  00FA                     i1l309:	
  3333                           ;main.c: 116:     do { ANSELCbits.ANSC3 = 1; } while(0);
  3334                           
  3335  00FA  0023               	movlb	3	; select bank3
  3336  00FB  158E               	bsf	14,3	;volatile
  3337  00FC                     i1l1443:
  3338                           
  3339                           ;main.c: 117:     unsigned res = ADC_GetConversion(PIN_WSP_STATE);
  3340  00FC  3007               	movlw	7
  3341  00FD  3182  221E  3180   	fcall	_ADC_GetConversion
  3342  0100  0871               	movf	?_ADC_GetConversion+1,w
  3343  0101  00F6               	movwf	get_measure@res+1
  3344  0102  0870               	movf	?_ADC_GetConversion,w
  3345  0103  00F5               	movwf	get_measure@res
  3346  0104                     i1l1445:
  3347  0104  0023               	movlb	3	; select bank3
  3348  0105  118E               	bcf	14,3	;volatile
  3349  0106                     i1l1447:
  3350                           
  3351                           ;main.c: 119:     result = res;
  3352  0106  0876               	movf	get_measure@res+1,w
  3353  0107  0020               	movlb	0	; select bank0
  3354  0108  00A9               	movwf	_result+1
  3355  0109  0875               	movf	get_measure@res,w
  3356  010A  00A8               	movwf	_result
  3357  010B                     i1l1449:
  3358  010B  0022               	movlb	2	; select bank2
  3359  010C  108E               	bcf	14,1	;volatile
  3360  010D                     i1l1451:
  3361                           
  3362                           ;main.c: 122:     if (res < BAD_WSP_VOLTAGE) measures++;
  3363  010D  304E               	movlw	78
  3364  010E  0276               	subwf	get_measure@res+1,w
  3365  010F  3020               	movlw	32
  3366  0110  1903               	skipnz
  3367  0111  0275               	subwf	get_measure@res,w
  3368  0112  1803               	skipnc
  3369  0113  2915               	goto	u48_21
  3370  0114  2916               	goto	u48_20
  3371  0115                     u48_21:
  3372  0115  291B               	goto	i1l1455
  3373  0116                     u48_20:
  3374  0116                     i1l1453:
  3375  0116  3001               	movlw	1
  3376  0117  00F4               	movwf	??_get_measure
  3377  0118  0874               	movf	??_get_measure,w
  3378  0119  07FA               	addwf	_measures,f
  3379  011A  2925               	goto	i1l1459
  3380  011B                     i1l1455:
  3381  011B  309C               	movlw	156
  3382  011C  0276               	subwf	get_measure@res+1,w
  3383  011D  3041               	movlw	65
  3384  011E  1903               	skipnz
  3385  011F  0275               	subwf	get_measure@res,w
  3386  0120  1C03               	skipc
  3387  0121  2923               	goto	u49_21
  3388  0122  2924               	goto	u49_20
  3389  0123                     u49_21:
  3390  0123  2925               	goto	i1l1459
  3391  0124                     u49_20:
  3392  0124                     i1l1457:
  3393  0124  01FA               	clrf	_measures
  3394  0125                     i1l1459:
  3395                           
  3396                           ;main.c: 124:     if (measures > 2) start_alarm();
  3397  0125  3003               	movlw	3
  3398  0126  027A               	subwf	_measures,w
  3399  0127  1C03               	skipc
  3400  0128  292A               	goto	u50_21
  3401  0129  292B               	goto	u50_20
  3402  012A                     u50_21:
  3403  012A  292E               	goto	i1l319
  3404  012B                     u50_20:
  3405  012B                     i1l1461:
  3406  012B  3182  22AF  3180   	fcall	_start_alarm
  3407  012E                     i1l319:
  3408  012E  0008               	return
  3409  012F                     __end_of_get_measure:
  3410                           
  3411                           	psect	text25
  3412  02AF                     __ptext25:	
  3413 ;; *************** function _start_alarm *****************
  3414 ;; Defined at:
  3415 ;;		line 101 in file "main.c"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;		None
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;		None
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  2  299[None  ] int 
  3422 ;; Registers used:
  3423 ;;		wreg, status,2, status,0, pclath, cstack
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMMON   BANK0   BANK1
  3429 ;;      Params:         0       0       0
  3430 ;;      Locals:         0       0       0
  3431 ;;      Temps:          0       0       0
  3432 ;;      Totals:         0       0       0
  3433 ;;Total ram usage:        0 bytes
  3434 ;; Hardware stack levels used: 1
  3435 ;; Hardware stack levels required when called: 1
  3436 ;; This function calls:
  3437 ;;		_go_close_alt
  3438 ;;		i1_go_close
  3439 ;; This function is called by:
  3440 ;;		_get_measure
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444  02AF                     _start_alarm:	
  3445                           ;psect for function _start_alarm
  3446                           
  3447  02AF                     i1l1429:	
  3448                           ;incstack = 0
  3449                           ; Regs used in _start_alarm: [wreg+status,2+status,0+pclath+cstack]
  3450                           
  3451                           
  3452                           ;main.c: 102:     FLAGS.bits.ALARM = 1;
  3453  02AF  147D               	bsf	_FLAGS,0
  3454  02B0                     i1l300:	
  3455                           ;main.c: 103:     do { LATCbits.LATC0 = 1; } while(0);
  3456                           
  3457  02B0  0022               	movlb	2	; select bank2
  3458  02B1  140E               	bsf	14,0	;volatile
  3459  02B2                     i1l301:
  3460                           
  3461                           ;main.c: 104:     INTCONbits.TMR0IE = 1;
  3462  02B2  168B               	bsf	11,5	;volatile
  3463                           
  3464                           ;main.c: 106:      if (FLAGS.bits.WORK_MODE) {
  3465  02B3  1CFD               	btfss	_FLAGS,1
  3466  02B4  2AB6               	goto	u45_21
  3467  02B5  2AB7               	goto	u45_20
  3468  02B6                     u45_21:
  3469  02B6  2ABB               	goto	i1l1433
  3470  02B7                     u45_20:
  3471  02B7                     i1l1431:
  3472                           
  3473                           ;main.c: 107:                 go_close_alt();
  3474  02B7  3183  231C  3182   	fcall	_go_close_alt
  3475                           
  3476                           ;main.c: 108:             } else {
  3477  02BA  2ABE               	goto	i1l304
  3478  02BB                     i1l1433:
  3479                           
  3480                           ;main.c: 109:                 go_close();
  3481  02BB  3182  2204  3182   	fcall	i1_go_close
  3482  02BE                     i1l304:
  3483  02BE  0008               	return
  3484  02BF                     __end_of_start_alarm:
  3485                           
  3486                           	psect	text26
  3487  0204                     __ptext26:	
  3488 ;; *************** function i1_go_close *****************
  3489 ;; Defined at:
  3490 ;;		line 70 in file "main.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;		None
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;		None
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      void 
  3497 ;; Registers used:
  3498 ;;		wreg
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMMON   BANK0   BANK1
  3504 ;;      Params:         0       0       0
  3505 ;;      Locals:         0       0       0
  3506 ;;      Temps:          1       0       0
  3507 ;;      Totals:         1       0       0
  3508 ;;Total ram usage:        1 bytes
  3509 ;; Hardware stack levels used: 1
  3510 ;; This function calls:
  3511 ;;		Nothing
  3512 ;; This function is called by:
  3513 ;;		_start_alarm
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517  0204                     i1_go_close:	
  3518                           ;psect for function i1_go_close
  3519                           
  3520  0204                     i1l1403:	
  3521                           ;incstack = 0
  3522                           ; Regs used in i1_go_close: [wreg]
  3523                           
  3524                           
  3525                           ;main.c: 71:     time_s = 0;
  3526  0204  3000               	movlw	0
  3527  0205  0020               	movlb	0	; select bank0
  3528  0206  00A3               	movwf	_time_s+3
  3529  0207  3000               	movlw	0
  3530  0208  00A2               	movwf	_time_s+2
  3531  0209  3000               	movlw	0
  3532  020A  00A1               	movwf	_time_s+1
  3533  020B  3000               	movlw	0
  3534  020C  00A0               	movwf	_time_s
  3535  020D                     i1l1405:
  3536                           
  3537                           ;main.c: 72:     FLAGS.bits.FUN_OLD = 0;
  3538  020D  117D               	bcf	_FLAGS,2
  3539  020E                     i1l1407:
  3540  020E  0022               	movlb	2	; select bank2
  3541  020F  160E               	bsf	14,4	;volatile
  3542  0210                     i1l273:
  3543                           
  3544                           ;main.c: 74:     _delay((unsigned long)((1)*(4000000/4000.0)));
  3545  0210  30C8               	movlw	200
  3546  0211                     u91_27:
  3547  0211  3200               	nop2
  3548  0212  0B89               	decfsz	9,f
  3549  0213  2A11               	goto	u91_27
  3550  0214                     i1l1409:
  3551  0214  0022               	movlb	2	; select bank2
  3552  0215  168E               	bsf	14,5	;volatile
  3553  0216                     i1l275:
  3554                           
  3555                           ;main.c: 76:     time_pow = 10;
  3556  0216  300A               	movlw	10
  3557  0217  00F0               	movwf	??i1_go_close
  3558  0218  0870               	movf	??i1_go_close,w
  3559  0219  0020               	movlb	0	; select bank0
  3560  021A  00B2               	movwf	_time_pow
  3561  021B                     i1l1411:
  3562                           
  3563                           ;main.c: 77:     FLAGS.bits.RELE_POW = 1;
  3564  021B  177D               	bsf	_FLAGS,6
  3565  021C                     i1l1413:
  3566                           
  3567                           ;main.c: 78:     FLAGS.bits.RELE_CON = 1;
  3568  021C  17FD               	bsf	_FLAGS,7
  3569  021D                     i1l276:
  3570  021D  0008               	return
  3571  021E                     __end_ofi1_go_close:
  3572                           
  3573                           	psect	text27
  3574  031C                     __ptext27:	
  3575 ;; *************** function _go_close_alt *****************
  3576 ;; Defined at:
  3577 ;;		line 90 in file "main.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;		None
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;		None
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      void 
  3584 ;; Registers used:
  3585 ;;		None
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1
  3591 ;;      Params:         0       0       0
  3592 ;;      Locals:         0       0       0
  3593 ;;      Temps:          0       0       0
  3594 ;;      Totals:         0       0       0
  3595 ;;Total ram usage:        0 bytes
  3596 ;; Hardware stack levels used: 1
  3597 ;; This function calls:
  3598 ;;		Nothing
  3599 ;; This function is called by:
  3600 ;;		_start_alarm
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604  031C                     _go_close_alt:	
  3605                           ;psect for function _go_close_alt
  3606                           
  3607  031C                     i1l1401:	
  3608                           ;incstack = 0
  3609                           ; Regs used in _go_close_alt: []
  3610                           
  3611                           
  3612                           ;main.c: 91:     FLAGS.bits.FUN_OLD = 0;
  3613  031C  117D               	bcf	_FLAGS,2
  3614  031D                     i1l286:	
  3615                           ;main.c: 92:     do { LATCbits.LATC4 = 0; } while(0);
  3616                           
  3617  031D  0022               	movlb	2	; select bank2
  3618  031E  120E               	bcf	14,4	;volatile
  3619  031F                     i1l288:	
  3620                           ;main.c: 93:     do { LATCbits.LATC5 = 1; } while(0);
  3621                           
  3622  031F  168E               	bsf	14,5	;volatile
  3623  0320                     i1l290:
  3624  0320  0008               	return
  3625  0321                     __end_of_go_close_alt:
  3626                           
  3627                           	psect	text28
  3628  00BB                     __ptext28:	
  3629 ;; *************** function _get_jump *****************
  3630 ;; Defined at:
  3631 ;;		line 148 in file "main.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;		None
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  res             2    5[COMMON] unsigned int 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		wreg, status,2, status,0, pclath, cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMMON   BANK0   BANK1
  3645 ;;      Params:         0       0       0
  3646 ;;      Locals:         2       0       0
  3647 ;;      Temps:          1       0       0
  3648 ;;      Totals:         3       0       0
  3649 ;;Total ram usage:        3 bytes
  3650 ;; Hardware stack levels used: 1
  3651 ;; Hardware stack levels required when called: 1
  3652 ;; This function calls:
  3653 ;;		_ADC_GetConversion
  3654 ;; This function is called by:
  3655 ;;		_Sec_tick_work
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659  00BB                     _get_jump:	
  3660                           ;psect for function _get_jump
  3661                           
  3662  00BB                     i1l338:	
  3663                           ;incstack = 0
  3664                           ; Regs used in _get_jump: [wreg+status,2+status,0+pclath+cstack]
  3665                           ;main.c: 149:     do { ANSELAbits.ANSA1 = 1; } while(0);
  3666                           
  3667  00BB  0023               	movlb	3	; select bank3
  3668  00BC  148C               	bsf	12,1	;volatile
  3669  00BD                     i1l1493:
  3670                           
  3671                           ;main.c: 150:     unsigned res = ADC_GetConversion(PIN_JUMP_STATE);
  3672  00BD  3001               	movlw	1
  3673  00BE  3182  221E  3180   	fcall	_ADC_GetConversion
  3674  00C1  0871               	movf	?_ADC_GetConversion+1,w
  3675  00C2  00F6               	movwf	get_jump@res+1
  3676  00C3  0870               	movf	?_ADC_GetConversion,w
  3677  00C4  00F5               	movwf	get_jump@res
  3678  00C5                     i1l1495:
  3679  00C5  0023               	movlb	3	; select bank3
  3680  00C6  108C               	bcf	12,1	;volatile
  3681  00C7                     i1l1497:
  3682                           
  3683                           ;main.c: 152:     jresult = res;
  3684  00C7  0876               	movf	get_jump@res+1,w
  3685  00C8  0020               	movlb	0	; select bank0
  3686  00C9  00A7               	movwf	_jresult+1
  3687  00CA  0875               	movf	get_jump@res,w
  3688  00CB  00A6               	movwf	_jresult
  3689  00CC                     i1l1499:
  3690                           
  3691                           ;main.c: 153:     if (res < 6000) jump_counter--;
  3692  00CC  3017               	movlw	23
  3693  00CD  0276               	subwf	get_jump@res+1,w
  3694  00CE  3070               	movlw	112
  3695  00CF  1903               	skipnz
  3696  00D0  0275               	subwf	get_jump@res,w
  3697  00D1  1803               	skipnc
  3698  00D2  28D4               	goto	u54_21
  3699  00D3  28D5               	goto	u54_20
  3700  00D4                     u54_21:
  3701  00D4  28DA               	goto	i1l1503
  3702  00D5                     u54_20:
  3703  00D5                     i1l1501:
  3704  00D5  30FF               	movlw	255
  3705  00D6  00F4               	movwf	??_get_jump
  3706  00D7  0874               	movf	??_get_jump,w
  3707  00D8  07F9               	addwf	_jump_counter,f
  3708  00D9  28DE               	goto	i1l1505
  3709  00DA                     i1l1503:
  3710  00DA  3001               	movlw	1
  3711  00DB  00F4               	movwf	??_get_jump
  3712  00DC  0874               	movf	??_get_jump,w
  3713  00DD  07F9               	addwf	_jump_counter,f
  3714  00DE                     i1l1505:
  3715                           
  3716                           ;main.c: 156:     if (jump_counter > 10) {
  3717  00DE  0879               	movf	_jump_counter,w
  3718  00DF  3A80               	xorlw	128
  3719  00E0  3E75               	addlw	-139
  3720  00E1  1C03               	skipc
  3721  00E2  28E4               	goto	u55_21
  3722  00E3  28E5               	goto	u55_20
  3723  00E4                     u55_21:
  3724  00E4  28EB               	goto	i1l1511
  3725  00E5                     u55_20:
  3726  00E5                     i1l1507:
  3727                           
  3728                           ;main.c: 157:         jump_counter = 10;
  3729  00E5  300A               	movlw	10
  3730  00E6  00F4               	movwf	??_get_jump
  3731  00E7  0874               	movf	??_get_jump,w
  3732  00E8  00F9               	movwf	_jump_counter
  3733  00E9                     i1l1509:
  3734                           
  3735                           ;main.c: 158:         FLAGS.bits.JUMP = 1;
  3736  00E9  167D               	bsf	_FLAGS,4
  3737                           
  3738                           ;main.c: 159:     } else if (jump_counter<-10) {
  3739  00EA  28F7               	goto	i1l347
  3740  00EB                     i1l1511:
  3741  00EB  0879               	movf	_jump_counter,w
  3742  00EC  3A80               	xorlw	128
  3743  00ED  3E8A               	addlw	138
  3744  00EE  1803               	skipnc
  3745  00EF  28F1               	goto	u56_21
  3746  00F0  28F2               	goto	u56_20
  3747  00F1                     u56_21:
  3748  00F1  28F7               	goto	i1l347
  3749  00F2                     u56_20:
  3750  00F2                     i1l1513:
  3751                           
  3752                           ;main.c: 160:         jump_counter = -10;
  3753  00F2  30F6               	movlw	246
  3754  00F3  00F4               	movwf	??_get_jump
  3755  00F4  0874               	movf	??_get_jump,w
  3756  00F5  00F9               	movwf	_jump_counter
  3757  00F6                     i1l1515:
  3758                           
  3759                           ;main.c: 161:         FLAGS.bits.JUMP = 0;
  3760  00F6  127D               	bcf	_FLAGS,4
  3761  00F7                     i1l347:
  3762  00F7  0008               	return
  3763  00F8                     __end_of_get_jump:
  3764                           
  3765                           	psect	text29
  3766  007A                     __ptext29:	
  3767 ;; *************** function _get_fun *****************
  3768 ;; Defined at:
  3769 ;;		line 128 in file "main.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;		None
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  res             2    5[COMMON] unsigned int 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  1    wreg      void 
  3776 ;; Registers used:
  3777 ;;		wreg, status,2, status,0, pclath, cstack
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMMON   BANK0   BANK1
  3783 ;;      Params:         0       0       0
  3784 ;;      Locals:         2       0       0
  3785 ;;      Temps:          1       0       0
  3786 ;;      Totals:         3       0       0
  3787 ;;Total ram usage:        3 bytes
  3788 ;; Hardware stack levels used: 1
  3789 ;; Hardware stack levels required when called: 1
  3790 ;; This function calls:
  3791 ;;		_ADC_GetConversion
  3792 ;; This function is called by:
  3793 ;;		_Sec_tick_work
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797  007A                     _get_fun:	
  3798                           ;psect for function _get_fun
  3799                           
  3800  007A                     i1l322:	
  3801                           ;incstack = 0
  3802                           ; Regs used in _get_fun: [wreg+status,2+status,0+pclath+cstack]
  3803                           ;main.c: 129:     do { LATCbits.LATC1 = 1; } while(0);
  3804                           
  3805  007A  0022               	movlb	2	; select bank2
  3806  007B  148E               	bsf	14,1	;volatile
  3807  007C                     i1l324:	
  3808                           ;main.c: 130:     do { ANSELCbits.ANSC2 = 1; } while(0);
  3809                           
  3810  007C  0023               	movlb	3	; select bank3
  3811  007D  150E               	bsf	14,2	;volatile
  3812  007E                     i1l1465:
  3813                           
  3814                           ;main.c: 131:     unsigned res = ADC_GetConversion(PIN_FUN_STATE);
  3815  007E  3006               	movlw	6
  3816  007F  3182  221E  3180   	fcall	_ADC_GetConversion
  3817  0082  0871               	movf	?_ADC_GetConversion+1,w
  3818  0083  00F6               	movwf	get_fun@res+1
  3819  0084  0870               	movf	?_ADC_GetConversion,w
  3820  0085  00F5               	movwf	get_fun@res
  3821  0086                     i1l1467:
  3822  0086  0023               	movlb	3	; select bank3
  3823  0087  110E               	bcf	14,2	;volatile
  3824  0088                     i1l1469:
  3825  0088  0022               	movlb	2	; select bank2
  3826  0089  108E               	bcf	14,1	;volatile
  3827  008A                     i1l1471:
  3828                           
  3829                           ;main.c: 134:     fresult = res;
  3830  008A  0876               	movf	get_fun@res+1,w
  3831  008B  0020               	movlb	0	; select bank0
  3832  008C  00A5               	movwf	_fresult+1
  3833  008D  0875               	movf	get_fun@res,w
  3834  008E  00A4               	movwf	_fresult
  3835  008F                     i1l1473:
  3836                           
  3837                           ;main.c: 135:     if (res < 6000) fun_counter--;
  3838  008F  3017               	movlw	23
  3839  0090  0276               	subwf	get_fun@res+1,w
  3840  0091  3070               	movlw	112
  3841  0092  1903               	skipnz
  3842  0093  0275               	subwf	get_fun@res,w
  3843  0094  1803               	skipnc
  3844  0095  2897               	goto	u51_21
  3845  0096  2898               	goto	u51_20
  3846  0097                     u51_21:
  3847  0097  289D               	goto	i1l1477
  3848  0098                     u51_20:
  3849  0098                     i1l1475:
  3850  0098  30FF               	movlw	255
  3851  0099  00F4               	movwf	??_get_fun
  3852  009A  0874               	movf	??_get_fun,w
  3853  009B  07FB               	addwf	_fun_counter,f
  3854  009C  28A1               	goto	i1l1479
  3855  009D                     i1l1477:
  3856  009D  3001               	movlw	1
  3857  009E  00F4               	movwf	??_get_fun
  3858  009F  0874               	movf	??_get_fun,w
  3859  00A0  07FB               	addwf	_fun_counter,f
  3860  00A1                     i1l1479:
  3861                           
  3862                           ;main.c: 138:     if (fun_counter > 10) {
  3863  00A1  087B               	movf	_fun_counter,w
  3864  00A2  3A80               	xorlw	128
  3865  00A3  3E75               	addlw	-139
  3866  00A4  1C03               	skipc
  3867  00A5  28A7               	goto	u52_21
  3868  00A6  28A8               	goto	u52_20
  3869  00A7                     u52_21:
  3870  00A7  28AE               	goto	i1l1485
  3871  00A8                     u52_20:
  3872  00A8                     i1l1481:
  3873                           
  3874                           ;main.c: 139:         fun_counter = 10;
  3875  00A8  300A               	movlw	10
  3876  00A9  00F4               	movwf	??_get_fun
  3877  00AA  0874               	movf	??_get_fun,w
  3878  00AB  00FB               	movwf	_fun_counter
  3879  00AC                     i1l1483:
  3880                           
  3881                           ;main.c: 140:         FLAGS.bits.FUN_NEW = 1;
  3882  00AC  15FD               	bsf	_FLAGS,3
  3883                           
  3884                           ;main.c: 141:     } else if (fun_counter<-10) {
  3885  00AD  28BA               	goto	i1l335
  3886  00AE                     i1l1485:
  3887  00AE  087B               	movf	_fun_counter,w
  3888  00AF  3A80               	xorlw	128
  3889  00B0  3E8A               	addlw	138
  3890  00B1  1803               	skipnc
  3891  00B2  28B4               	goto	u53_21
  3892  00B3  28B5               	goto	u53_20
  3893  00B4                     u53_21:
  3894  00B4  28BA               	goto	i1l335
  3895  00B5                     u53_20:
  3896  00B5                     i1l1487:
  3897                           
  3898                           ;main.c: 142:         fun_counter = -10;
  3899  00B5  30F6               	movlw	246
  3900  00B6  00F4               	movwf	??_get_fun
  3901  00B7  0874               	movf	??_get_fun,w
  3902  00B8  00FB               	movwf	_fun_counter
  3903  00B9                     i1l1489:
  3904                           
  3905                           ;main.c: 143:         FLAGS.bits.FUN_NEW = 0;
  3906  00B9  11FD               	bcf	_FLAGS,3
  3907  00BA                     i1l335:
  3908  00BA  0008               	return
  3909  00BB                     __end_of_get_fun:
  3910                           
  3911                           	psect	text30
  3912  021E                     __ptext30:	
  3913 ;; *************** function _ADC_GetConversion *****************
  3914 ;; Defined at:
  3915 ;;		line 112 in file "mcc_generated_files/adc.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;  channel         1    wreg     enum E2178
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;  channel         1    3[COMMON] enum E2178
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  2    0[COMMON] unsigned short 
  3922 ;; Registers used:
  3923 ;;		wreg, status,2, status,0
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMMON   BANK0   BANK1
  3929 ;;      Params:         2       0       0
  3930 ;;      Locals:         1       0       0
  3931 ;;      Temps:          1       0       0
  3932 ;;      Totals:         4       0       0
  3933 ;;Total ram usage:        4 bytes
  3934 ;; Hardware stack levels used: 1
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_get_measure
  3939 ;;		_get_fun
  3940 ;;		_get_jump
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944  021E                     _ADC_GetConversion:	
  3945                           ;psect for function _ADC_GetConversion
  3946                           
  3947                           
  3948                           ;incstack = 0
  3949                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3950                           ;ADC_GetConversion@channel stored from wreg
  3951  021E  00F3               	movwf	ADC_GetConversion@channel
  3952  021F                     i1l1417:
  3953                           
  3954                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  3955  021F  0873               	movf	ADC_GetConversion@channel,w
  3956  0220  00F2               	movwf	??_ADC_GetConversion
  3957  0221  0DF2               	rlf	??_ADC_GetConversion,f
  3958  0222  0DF2               	rlf	??_ADC_GetConversion,f
  3959  0223  0021               	movlb	1	; select bank1
  3960  0224  081D               	movf	29,w	;volatile
  3961  0225  0672               	xorwf	??_ADC_GetConversion,w
  3962  0226  3983               	andlw	-125
  3963  0227  0672               	xorwf	??_ADC_GetConversion,w
  3964  0228  009D               	movwf	29	;volatile
  3965  0229                     i1l1419:
  3966                           
  3967                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  3968  0229  141D               	bsf	29,0	;volatile
  3969  022A                     i1l1421:
  3970                           
  3971                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  3972  022A  3200               	nop2	;2 cycle nop
  3973  022B  3200               	nop2	;2 cycle nop
  3974  022C  0000               	nop
  3975  022D                     i1l1423:
  3976                           
  3977                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  3978  022D  0021               	movlb	1	; select bank1
  3979  022E  149D               	bsf	29,1	;volatile
  3980  022F                     i1l61:	
  3981                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  3982                           
  3983                           
  3984                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  3985  022F  189D               	btfsc	29,1	;volatile
  3986  0230  2A32               	goto	u44_21
  3987  0231  2A33               	goto	u44_20
  3988  0232                     u44_21:
  3989  0232  2A2F               	goto	i1l61
  3990  0233                     u44_20:
  3991  0233                     i1l1425:
  3992                           
  3993                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3994  0233  081C               	movf	28,w	;volatile
  3995  0234  00F1               	movwf	?_ADC_GetConversion+1
  3996  0235  081B               	movf	27,w	;volatile
  3997  0236  00F0               	movwf	?_ADC_GetConversion
  3998  0237                     i1l64:
  3999  0237  0008               	return
  4000  0238                     __end_of_ADC_GetConversion:
  4001                           
  4002                           	psect	text31
  4003  02BF                     __ptext31:	
  4004 ;; *************** function _TMR0_ISR *****************
  4005 ;; Defined at:
  4006 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;		None
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;		None
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  1    wreg      void 
  4013 ;; Registers used:
  4014 ;;		wreg, status,2, status,0, pclath, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMMON   BANK0   BANK1
  4020 ;;      Params:         0       0       0
  4021 ;;      Locals:         0       0       0
  4022 ;;      Temps:          0       0       0
  4023 ;;      Totals:         0       0       0
  4024 ;;Total ram usage:        0 bytes
  4025 ;; Hardware stack levels used: 1
  4026 ;; Hardware stack levels required when called: 1
  4027 ;; This function calls:
  4028 ;;		Absolute function
  4029 ;;		_TMR0_DefaultInterruptHandler
  4030 ;;		_switch_zum
  4031 ;; This function is called by:
  4032 ;;		_INTERRUPT_InterruptManager
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036  02BF                     _TMR0_ISR:	
  4037                           ;psect for function _TMR0_ISR
  4038                           
  4039  02BF                     i1l1631:	
  4040                           ;incstack = 0
  4041                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  4042                           
  4043                           
  4044                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  4045  02BF  110B               	bcf	11,2	;volatile
  4046  02C0                     i1l1633:
  4047                           
  4048                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  4049  02C0  0020               	movlb	0	; select bank0
  4050  02C1  0833               	movf	_timer0ReloadVal,w	;volatile
  4051  02C2  0095               	movwf	21	;volatile
  4052  02C3                     i1l1635:
  4053                           
  4054                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  4055  02C3  082E               	movf	_TMR0_InterruptHandler,w
  4056  02C4  042F               	iorwf	_TMR0_InterruptHandler+1,w
  4057  02C5  1903               	btfsc	3,2
  4058  02C6  2AC8               	goto	u70_21
  4059  02C7  2AC9               	goto	u70_20
  4060  02C8                     u70_21:
  4061  02C8  2ACE               	goto	i1l198
  4062  02C9                     u70_20:
  4063  02C9                     i1l1637:
  4064                           
  4065                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  4066  02C9  082F               	movf	_TMR0_InterruptHandler+1,w
  4067  02CA  008A               	movwf	10
  4068  02CB  082E               	movf	_TMR0_InterruptHandler,w
  4069  02CC  000A               	callw
  4070  02CD  3182               	pagesel	$
  4071  02CE                     i1l198:
  4072  02CE  0008               	return
  4073  02CF                     __end_of_TMR0_ISR:
  4074                           
  4075                           	psect	text32
  4076  0335                     __ptext32:	
  4077 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4078 ;; Defined at:
  4079 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;		None
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  1    wreg      void 
  4086 ;; Registers used:
  4087 ;;		None
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMMON   BANK0   BANK1
  4093 ;;      Params:         0       0       0
  4094 ;;      Locals:         0       0       0
  4095 ;;      Temps:          0       0       0
  4096 ;;      Totals:         0       0       0
  4097 ;;Total ram usage:        0 bytes
  4098 ;; Hardware stack levels used: 1
  4099 ;; This function calls:
  4100 ;;		Nothing
  4101 ;; This function is called by:
  4102 ;;		_TMR0_Initialize
  4103 ;;		_TMR0_ISR
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107  0335                     _TMR0_DefaultInterruptHandler:	
  4108                           ;psect for function _TMR0_DefaultInterruptHandler
  4109                           
  4110  0335                     i1l204:	
  4111                           ;incstack = 0
  4112                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  4113                           
  4114  0335  0008               	return
  4115  0336                     __end_of_TMR0_DefaultInterruptHandler:
  4116                           
  4117                           	psect	text33
  4118  029E                     __ptext33:	
  4119 ;; *************** function _switch_zum *****************
  4120 ;; Defined at:
  4121 ;;		line 58 in file "main.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;		None
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;		None
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      void 
  4128 ;; Registers used:
  4129 ;;		status,0
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMMON   BANK0   BANK1
  4135 ;;      Params:         0       0       0
  4136 ;;      Locals:         0       0       0
  4137 ;;      Temps:          0       0       0
  4138 ;;      Totals:         0       0       0
  4139 ;;Total ram usage:        0 bytes
  4140 ;; Hardware stack levels used: 1
  4141 ;; This function calls:
  4142 ;;		Nothing
  4143 ;; This function is called by:
  4144 ;;		_start_setup
  4145 ;;		_TMR0_ISR
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149  029E                     _switch_zum:	
  4150                           ;psect for function _switch_zum
  4151                           
  4152  029E                     i1l1607:	
  4153                           ;incstack = 0
  4154                           ; Regs used in _switch_zum: [status,0]
  4155                           
  4156                           
  4157                           ;main.c: 59:     if (FLAGS.bits.ALARM) do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0)
      +                          ;
  4158  029E  1C7D               	btfss	_FLAGS,0
  4159  029F  2AA1               	goto	u67_21
  4160  02A0  2AA2               	goto	u67_20
  4161  02A1                     u67_21:
  4162  02A1  2AAE               	goto	i1l266
  4163  02A2                     u67_20:
  4164  02A2                     i1l1609:
  4165  02A2  1003               	clrc
  4166  02A3  0022               	movlb	2	; select bank2
  4167  02A4  1E8C               	btfss	12,5	;volatile
  4168  02A5  1403               	setc
  4169  02A6  1803               	btfsc	3,0
  4170  02A7  2AA9               	goto	u68_21
  4171  02A8  2AAC               	goto	u68_20
  4172  02A9                     u68_21:
  4173  02A9  0022               	movlb	2	; select bank2
  4174  02AA  168C               	bsf	12,5	;volatile
  4175  02AB  2AAE               	goto	u69_24
  4176  02AC                     u68_20:
  4177  02AC  0022               	movlb	2	; select bank2
  4178  02AD  128C               	bcf	12,5	;volatile
  4179  02AE                     u69_24:
  4180  02AE                     i1l266:
  4181  02AE  0008               	return
  4182  02AF                     __end_of_switch_zum:
  4183  007E                     btemp	set	126	;btemp
  4184  007E                     int$flags	set	126
  4185  007E                     wtemp0	set	126
  4186                           
  4187                           	psect	idloc
  4188                           
  4189                           ;Config register IDLOC0 @ 0x8000
  4190                           ;	unspecified, using default values
  4191  8000                     	org	32768
  4192  8000  3FFF               	dw	16383
  4193                           
  4194                           ;Config register IDLOC1 @ 0x8001
  4195                           ;	unspecified, using default values
  4196  8001                     	org	32769
  4197  8001  3FFF               	dw	16383
  4198                           
  4199                           ;Config register IDLOC2 @ 0x8002
  4200                           ;	unspecified, using default values
  4201  8002                     	org	32770
  4202  8002  3FFF               	dw	16383
  4203                           
  4204                           ;Config register IDLOC3 @ 0x8003
  4205                           ;	unspecified, using default values
  4206  8003                     	org	32771
  4207  8003  3FFF               	dw	16383
  4208                           
  4209                           	psect	config
  4210                           
  4211                           ;Config register CONFIG1 @ 0x8007
  4212                           ;	Oscillator Selection
  4213                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4214                           ;	Watchdog Timer Enable
  4215                           ;	WDTE = OFF, WDT disabled
  4216                           ;	Power-up Timer Enable
  4217                           ;	PWRTE = OFF, PWRT disabled
  4218                           ;	MCLR Pin Function Select
  4219                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4220                           ;	Flash Program Memory Code Protection
  4221                           ;	CP = OFF, Program memory code protection is disabled
  4222                           ;	Data Memory Code Protection
  4223                           ;	CPD = OFF, Data memory code protection is disabled
  4224                           ;	Brown-out Reset Enable
  4225                           ;	BOREN = ON, Brown-out Reset enabled
  4226                           ;	Clock Out Enable
  4227                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4228                           ;	Internal/External Switchover
  4229                           ;	IESO = ON, Internal/External Switchover mode is enabled
  4230                           ;	Fail-Safe Clock Monitor Enable
  4231                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4232  8007                     	org	32775
  4233  8007  3FE4               	dw	16356
  4234                           
  4235                           ;Config register CONFIG2 @ 0x8008
  4236                           ;	Flash Memory Self-Write Protection
  4237                           ;	WRT = OFF, Write protection off
  4238                           ;	PLL Enable
  4239                           ;	PLLEN = OFF, 4x PLL disabled
  4240                           ;	Stack Overflow/Underflow Reset Enable
  4241                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4242                           ;	Brown-out Reset Voltage Selection
  4243                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4244                           ;	Low-Voltage Programming Enable
  4245                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4246  8008                     	org	32776
  4247  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    12
    Data        0
    BSS         20
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      5      25
    BANK1            16      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> switch_zum(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> switch_zum(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Sec_tick_work(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Sec_tick_work(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR2_CallBack->_Sec_tick_work
    _Sec_tick_work->_get_fun
    _Sec_tick_work->_get_jump
    _Sec_tick_work->_get_measure
    _get_measure->_ADC_GetConversion
    _start_alarm->i1_go_close
    _get_jump->_ADC_GetConversion
    _get_fun->_ADC_GetConversion

Critical Paths under _main in BANK0

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _povorot->_go_close
    _povorot->_go_open
    _fun_work->_go_close
    _fun_work->_go_open

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     696
                                              3 BANK0      2     2      0
                           _fun_work
                            _povorot
                        _start_setup
                          _switch_wm
 ---------------------------------------------------------------------------------
 (1) _switch_wm                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_setup                                          0     0      0     696
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     348
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      1     1      0     174
                                              2 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _povorot                                              1     1      0       0
                                              1 BANK0      1     1      0
                           _go_close
                            _go_open
 ---------------------------------------------------------------------------------
 (1) _fun_work                                             0     0      0       0
                           _go_close
                            _go_open
 ---------------------------------------------------------------------------------
 (2) _go_open                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _go_close                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     223
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0     223
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR2_CallBack                                        0     0      0     223
                   Absolute function *
                      _Sec_tick_work *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Sec_tick_work                                        1     1      0     223
                                              7 COMMON     1     1      0
                            _get_fun
                           _get_jump
                        _get_measure
                          _rele_tick
                        _toggle_tone
 ---------------------------------------------------------------------------------
 (9) _toggle_tone                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _rele_tick                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _get_measure                                          3     3      0      89
                                              4 COMMON     3     3      0
                  _ADC_GetConversion
                        _start_alarm
 ---------------------------------------------------------------------------------
 (10) _start_alarm                                         0     0      0       0
                       _go_close_alt
                         i1_go_close
 ---------------------------------------------------------------------------------
 (11) i1_go_close                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _go_close_alt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _get_jump                                             3     3      0      67
                                              4 COMMON     3     3      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (9) _get_fun                                              3     3      0      67
                                              4 COMMON     3     3      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (10) _ADC_GetConversion                                   4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                         _switch_zum *
 ---------------------------------------------------------------------------------
 (7) _switch_zum                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _fun_work
     _go_close
     _go_open
   _povorot
     _go_close
     _go_open
   _start_setup
     _SYSTEM_Initialize
       _ADC_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR2_Initialize
         _TMR2_SetInterruptHandler
       _WDT_Initialize
     _TMR0_SetInterruptHandler
     _TMR2_SetInterruptHandler
     _TMR2_StartTimer
   _switch_wm

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _switch_zum *
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _Sec_tick_work *
         _get_fun
           _ADC_GetConversion
         _get_jump
           _ADC_GetConversion
         _get_measure
           _ADC_GetConversion
           _start_alarm
             _go_close_alt
             i1_go_close
         _rele_tick
         _toggle_tone
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              60      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      27       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      5      19       6       31.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            10      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      27       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Apr 26 18:19:49 2022

        __end_of_TMR2_SetInterruptHandler 0316                                        l23 028A  
                                      l26 0309                                        l29 0330  
                                      l46 0302                                        l90 0277  
                           ?_go_close_alt 0070                           _timer0ReloadVal 0033  
                                     l201 031B                                       l140 0333  
                                     l137 029D                                       l165 0315  
                                     l414 0164                                       l273 01DC  
                                     l281 02EB                                       l185 0262  
                                     l275 01E2                                       l283 02F2  
                                     l276 01E9                                       l380 01CF  
                                     l373 0195                                       l279 02E9  
                                     l383 02F9                                       l376 01C7  
                                     l385 02FA                               _start_alarm 02AF  
                                     _PR2 001B                                       u720 0176  
                                     u800 02F7                                       u721 0175  
                                     u801 02F6                                       u730 017A  
                                     u731 0179                                       u740 017E  
                                     u741 017D                                       u750 01B9  
                                     u751 01B8                                       u760 01BD  
                                     u761 01BC                                       u770 01C5  
                                     u771 01C3                                       u860 01AA  
                                     u861 01A9                                       u790 01CB  
                                     u791 01CA                                       u784 01C6  
                                     u877 019F                                       u887 0185  
                                     u897 01DD                               _start_setup 012F  
                         _TMR2_Initialize 028B                                       wreg 0009  
                              i1_go_close 0204                               get_jump@res 0075  
                                    l1601 0331                                      l1611 01D0  
                                    l1531 0266                                      l1435 0310  
                                    l1621 01E8                                      l1613 01D9  
                                    l1541 0303                                      l1533 0269  
                                    l1437 0316                                      l1701 0159  
                                    l1615 01DA                                      l1543 0306  
                                    l1535 026B                                      l1551 028E  
                                    l1711 0161                                      l1703 015B  
                                    l1617 01E0                                      l1625 02EC  
                                    l1545 0307                                      l1537 026E  
                                    l1529 0263                                      l1561 024E  
                                    l1553 028F                                      l1713 0162  
                                    l1705 015C                                      l1619 01E7  
                                    l1627 02F1                                      l1651 017A  
                                    l1571 02FB                                      l1539 0273  
                                    l1563 0253                                      l1555 0290  
                                    l1547 032D                                      l1707 015E  
                                    l1731 0199                                      l1661 01B9  
                                    l1653 017E                                      l1573 02FE  
                                    l1565 0256                                      l1557 0292  
                                    l1549 028B                                      l1709 0160  
                                    l1733 01A6                                      l1663 01BD  
                                    l1655 0181                                      l1647 0165  
                                    l1575 02FF                                      l1567 025A  
                                    l1559 029A                                      l1671 02F3  
                                    l1735 01AA                                      l1665 01C0  
                                    l1657 0189                                      l1649 0176  
                                    l1569 025B                                      l1681 0144  
                                    l1673 02F7                                      l1737 01B0  
                                    l1729 0196                                      l1667 01CB  
                                    l1659 01B5                                      l1691 014F  
                                    l1683 0147                                      l1675 012F  
                                    l1693 0151                                      l1685 0149  
                                    l1677 0132                                      l1599 0278  
                                    l1695 0153                                      l1687 014B  
                                    l1679 0133                                      l1697 0155  
                                    l1689 014D                                      l1699 0157  
                                    _LATA 010C                                      _LATC 010E  
                                    i1l61 022F                                      i1l64 0237  
                                    _TMR0 0015                                      _TMR2 001A  
                                    _WPUA 020C                                      _WPUC 020E  
                                    _main 0196                                      fsr0h 0005  
                                    indf0 0000                                      fsr0l 0004  
                                    btemp 007E                                      start 0026  
                          ??_go_close_alt 0070                   __end_of_TMR0_Initialize 0263  
          ??_TMR0_DefaultInterruptHandler 0070             __end_of_OSCILLATOR_Initialize 030A  
                                   ?_main 0070                                     _FLAGS 007D  
                                   _T2CON 001C                                     i1l113 0024  
                                   i1l114 0024                                     i1l204 0335  
                                   i1l300 02B0                                     i1l108 0012  
                                   i1l301 02B2                                     i1l304 02BE  
                                   i1l322 007A                                     i1l162 02DB  
                                   i1l307 00F8                                     i1l324 007C  
                                   i1l309 00FA                                     i1l158 024D  
                                   i1l335 00BA                                     i1l319 012E  
                                   i1l351 01F6                                     i1l168 0334  
                                   i1l273 0210                                     i1l353 01FB  
                                   i1l266 02AE                                     i1l338 00BB  
                                   i1l290 0320                                     i1l347 00F7  
                                   i1l275 0216                                     i1l276 021D  
                                   i1l357 0203                                     i1l269 02E8  
                                   i1l198 02CE                                     i1l286 031D  
                                   i1l288 031F                                     i1l369 0079  
                                   u50_20 012B                                     u50_21 012A  
                                   u51_20 0098                                     u51_21 0097  
                                   u44_20 0233                                     u52_20 00A8  
                                   u60_20 0049                                     u44_21 0232  
                                   u52_21 00A7                                     u60_21 0048  
                                   u53_20 00B5                                     u45_20 02B7  
                                   u61_20 0053                                     u53_21 00B4  
                                   u45_21 02B6                                     u61_21 0050  
                                   u70_20 02C9                                     u54_20 00D5  
                                   u46_20 02E6                                     u70_21 02C8  
                                   u54_21 00D4                                     u46_21 02E3  
                                   u62_24 0055                                     u55_20 00E5  
                                   u63_20 006C                                     u71_20 0247  
                                   u55_21 00E4                                     u63_21 006B  
                                   u71_21 0246                                     u47_24 02E8  
                                   u56_20 00F2                                     u48_20 0116  
                                   u64_20 0076                                     u56_21 00F1  
                                   u48_21 0115                                     u64_21 0073  
                                   u49_20 0124                                     u57_20 01EE  
                                   u81_20 000A                                     u49_21 0123  
                                   u57_21 01ED                                     u81_21 0009  
                                   _TRISA 008C                                     u65_24 0078  
                                   _TRISC 008E                                     u58_20 01F4  
                                   u66_20 02D6                                     u82_20 000E  
                                   u58_21 01F3                                     u66_21 02D5  
                                   u82_21 000D                                     u90_27 01FE  
                                   u67_20 02A2                                     u59_20 01FB  
                                   u83_20 0016                                     u67_21 02A1  
                                   u59_21 01FA                                     u83_21 0015  
                                   u91_27 0211                                     u68_20 02AC  
                                   u84_20 001B                                     u68_21 02A9  
                                   u84_21 001A                                     u85_20 0020  
                                   u85_21 001F                                     u69_24 02AE  
               ?_TMR0_SetInterruptHandler 0034                          __end_of_TMR0_ISR 02CF  
                         __end_of_get_fun 00BB                          __end_of_TMR2_ISR 024E  
                         __end_of_go_open 02F3                            _WDT_Initialize 032D  
                                   pclath 000A                           __end_of_povorot 0196  
                                   status 0003                                     wtemp0 007E  
                         _TMR2_StartTimer 0331                           __initialization 0027  
                            __end_of_main 01B5                   __end_of_TMR2_Initialize 029E  
             ?_INTERRUPT_InterruptManager 0070                  _TMR2_SetInterruptHandler 0310  
                                  ??_main 0037                    __end_of_WDT_Initialize 0331  
                             ?i1_go_close 0070                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _APFCON 011D  
                                  _ANSELA 018C                                    _ANSELC 018E  
                                  _BORCON 0116                                    i1l1401 031C  
                                  i1l1411 021B                                    i1l1403 0204  
                                  i1l1421 022A                                    i1l1501 00D5  
                                  i1l1413 021C                                    i1l1405 020D  
                                  i1l1423 022D                                    i1l1511 00EB  
                                  i1l1503 00DA                                    i1l1407 020E  
                                  i1l1431 02B7                                    i1l1425 0233  
                                  i1l1417 021F                                    i1l1513 00F2  
                                  i1l1505 00DE                                    i1l1409 0214  
                                  i1l1433 02BB                                    i1l1521 01EE  
                                  i1l1419 0229                                    i1l1515 00F6  
                                  i1l1507 00E5                                    i1l1451 010D  
                                  i1l1443 00FC                                    i1l1523 01F4  
                                  i1l1603 02CF                                    i1l1509 00E9  
                                  i1l1429 02AF                                    i1l1461 012B  
                                  i1l1453 0116                                    i1l1445 0104  
                                  i1l1525 01FD                                    i1l1605 02D6  
                                  i1l1607 029E                                    i1l1631 02BF  
                                  i1l1471 008A                                    i1l1455 011B  
                                  i1l1447 0106                                    i1l1527 0201  
                                  i1l1519 01EA                                    i1l1439 02DC  
                                  i1l1609 02A2                                    i1l1633 02C0  
                                  i1l1481 00A8                                    i1l1473 008F  
                                  i1l1465 007E                                    i1l1457 0124  
                                  i1l1449 010B                                    i1l1641 023A  
                                  i1l1721 0016                                    i1l1635 02C3  
                                  i1l1483 00AC                                    i1l1475 0098  
                                  i1l1467 0086                                    i1l1459 0125  
                                  i1l1643 0247                                    i1l1723 001B  
                                  i1l1715 0006                                    i1l1637 02C9  
                                  i1l1485 00AE                                    i1l1477 009D  
                                  i1l1469 0088                                    i1l1493 00BD  
                                  i1l1581 0045                                    i1l1645 024A  
                                  i1l1725 0020                                    i1l1717 000A  
                                  i1l1487 00B5                                    i1l1479 00A1  
                                  i1l1495 00C5                                    i1l1591 0066  
                                  i1l1583 0049                                    i1l1639 0238  
                                  i1l1719 000E                                    i1l1489 00B9  
                                  i1l1497 00C7                                    i1l1593 006C  
                                  i1l1585 0055                                    i1l1577 0038  
                                  i1l1499 00CC                                    i1l1595 0078  
                                  i1l1587 0059                                    i1l1579 0041  
                                  i1l1589 0062                          _GOOD_WSP_VOLTAGE 0321  
                                  _OSCCON 0099                                    _WDTCON 0097  
                        __end_of_get_jump 00F8                          __end_of_go_close 01EA  
                        ?_TMR0_Initialize 0070                          __end_of_fun_work 01D0  
                                  _time_s 0020                                    _result 0028  
                               ??_get_fun 0074                                 ??_go_open 0034  
                         ?_WDT_Initialize 0070                            get_measure@res 0075  
                ADC_GetConversion@channel 0073                                 ??_povorot 0035  
                 __end_of_TMR2_StartTimer 0334  TMR0_SetInterruptHandler@InterruptHandler 0034  
TMR2_SetInterruptHandler@InterruptHandler 0034                      __end_of_go_close_alt 0321  
                       _SYSTEM_Initialize 0278                   __end_of__initialization 0035  
                   __end_of_TMR2_CallBack 02DC                        ?_SYSTEM_Initialize 0070  
                            ?_toggle_tone 0070                            __pcstackCOMMON 0070  
                     ??_SYSTEM_Initialize 0037                                 ?_TMR0_ISR 0070  
                               ?_TMR2_ISR 0070                     __end_of_ROTATION_TIME 032D  
                        ?_TMR2_Initialize 0070                              ?_start_alarm 0070  
                          _OPTION_REGbits 0095                              ?_start_setup 0070  
               __end_of_SYSTEM_Initialize 028B                                __pbssBANK0 0020  
                           _Sec_tick_work 0038                                __pmaintext 0196  
        __end_of_TMR0_SetInterruptHandler 031C                                ??_TMR0_ISR 0070  
                              ??_TMR2_ISR 0078                                __pintentry 0004  
                       Sec_tick_work@iled 0078                                   _OSCTUNE 0098  
                        ?_TMR2_StartTimer 0070                                 ?_get_jump 0070  
                               ?_go_close 0070                            ?_Sec_tick_work 0070  
                               ?_fun_work 0070                      _ADC_InterruptHandler 002C  
              ??_TMR2_SetInterruptHandler 0036                  __end_of_GOOD_WSP_VOLTAGE 0325  
                                 __ptext1 02F3                                   __ptext2 012F  
                                 __ptext3 0331                                   __ptext4 0278  
                                 __ptext5 032D                                   __ptext6 028B  
                                 __ptext7 0310                                   __ptext8 024E  
                                 __ptext9 0316                                   _get_fun 007A  
                                 _go_open 02E9                     _OSCILLATOR_Initialize 0303  
                               _T2CONbits 001C                                   _fresult 0024  
                                 _jresult 0026                  ??_PIN_MANAGER_Initialize 0034  
                            ??i1_go_close 0070                                   _povorot 0165  
                                 clrloop0 030B                                ??_get_jump 0074  
                              ??_go_close 0034                         __end_of_rele_tick 0204  
                    end_of_initialization 0035                                ??_fun_work 0035  
                      __end_ofi1_go_close 021E                              _go_close_alt 031C  
                        ??_WDT_Initialize 0034                  _TMR0_SetInterruptHandler 0316  
                       __end_of_switch_wm 02FB                                 _TRISAbits 008C  
                               _TRISCbits 008E                           ??_Sec_tick_work 0077  
                              get_fun@res 0075                             ??_get_measure 0074  
                              _switch_zum 029E      __end_of_TMR2_DefaultInterruptHandler 0335  
            _TMR2_DefaultInterruptHandler 0334                            _ADC_Initialize 02FB  
                  ?_OSCILLATOR_Initialize 0070                       start_initialization 0027  
                  __end_of_ADC_Initialize 0303                       __end_of_get_measure 012F  
           ?_TMR2_DefaultInterruptHandler 0070                               __pbssCOMMON 0078  
                               ___latbits 0000                             __pcstackBANK0 0034  
                   _TMR0_InterruptHandler 002E                                 __pnvBANK0 002E  
                  _PIN_MANAGER_Initialize 0263                               ?_switch_zum 0070  
                         ?_ADC_Initialize 0070              ??_INTERRUPT_InterruptManager 0078  
                                ?_get_fun 0070                                  ?_go_open 0070  
                                ?_povorot 0070                         ??_TMR0_Initialize 0036  
                                _LATAbits 010C                                  _LATCbits 010E  
                               _rele_tick 01EA                                 clear_ram0 030A  
                           _TMR2_CallBack 02CF                                  _PIE1bits 0091  
                             _get_measure 00F8                ??_TMR0_SetInterruptHandler 0036  
                                _PIR1bits 0011                                  _TMR0_ISR 02BF  
                                _TMR2_ISR 0238                             _ROTATION_TIME 0329  
                              _ADCON0bits 009D                                  _WPUAbits 020C  
                                _WPUCbits 020E            ??_TMR2_DefaultInterruptHandler 0070  
               ?_TMR2_SetInterruptHandler 0034                                 _switch_wm 02F3  
                       ??_TMR2_Initialize 0036                            ?_TMR2_CallBack 0070  
                              ?_rele_tick 0070                             ??_toggle_tone 0070  
                       _ADC_GetConversion 021E                   ??_OSCILLATOR_Initialize 0034  
                      ?_ADC_GetConversion 0070                             ??_start_alarm 0071  
                              _ANSELAbits 018C                                _ANSELCbits 018E  
                            _jump_counter 0079                               _fun_counter 007B  
                     ??_ADC_GetConversion 0072                             ??_start_setup 0037  
                              ?_switch_wm 0070                                  __ptext10 0263  
                                __ptext11 0303                                  __ptext20 0038  
                                __ptext12 02FB                                  __ptext21 0334  
                                __ptext13 0165                                  __ptext30 021E  
                                __ptext22 02DC                                  __ptext14 01B5  
                                __ptext31 02BF                                  __ptext23 01EA  
                                __ptext15 02E9                                  __ptext32 0335  
                                __ptext24 00F8                                  __ptext16 01D0  
                                __ptext33 029E                                  __ptext25 02AF  
                                __ptext26 0204                                  __ptext18 0238  
                                __ptext27 031C                                  __ptext19 02CF  
                                __ptext28 00BB                                  __ptext29 007A  
                                _get_jump 00BB                                  _go_close 01D0  
                   __end_of_Sec_tick_work 007A                           _BAD_WSP_VOLTAGE 0325  
                                _measures 007A                                  _fun_work 01B5  
    __end_of_TMR0_DefaultInterruptHandler 0336              _TMR0_DefaultInterruptHandler 0335  
               __end_of_ADC_GetConversion 0238                                  _time_con 007C  
                                _time_pow 0032                                  int$flags 007E  
                       ??_TMR2_StartTimer 0034                       __end_of_toggle_tone 02E9  
      __end_of_INTERRUPT_InterruptManager 0026                _INTERRUPT_InterruptManager 0004  
                              _INTCONbits 000B                       __end_of_start_alarm 02BF  
                     __end_of_start_setup 0165                                  intlevel1 0000  
                         ??_TMR2_CallBack 0078                   ?_PIN_MANAGER_Initialize 0070  
                             ??_rele_tick 0070                          ??_ADC_Initialize 0034  
           ?_TMR0_DefaultInterruptHandler 0070                              ??_switch_zum 0070  
                           __pstringtext1 0321                             __pstringtext2 0325  
                           __pstringtext3 0329                                _OPTION_REG 0095  
                   TMR2_ISR@CountCallBack 002A                           _TMR0_Initialize 024E  
                 __end_of_BAD_WSP_VOLTAGE 0329                               ??_switch_wm 0034  
                      __end_of_switch_zum 02AF            __end_of_PIN_MANAGER_Initialize 0278  
                   _TMR2_InterruptHandler 0030                               _toggle_tone 02DC  
                            ?_get_measure 0070  
