

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Apr 26 13:02:07 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1823
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 2.40
    52                           ; Generated 17/11/2021 GMT
    53                           ; 
    54                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F1823 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000E                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  008C                     	;# 
   114  008E                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  010C                     	;# 
   129  010E                     	;# 
   130  0111                     	;# 
   131  0112                     	;# 
   132  0113                     	;# 
   133  0114                     	;# 
   134  0115                     	;# 
   135  0116                     	;# 
   136  0117                     	;# 
   137  0118                     	;# 
   138  0119                     	;# 
   139  011A                     	;# 
   140  011B                     	;# 
   141  011D                     	;# 
   142  011D                     	;# 
   143  018C                     	;# 
   144  018E                     	;# 
   145  0191                     	;# 
   146  0191                     	;# 
   147  0192                     	;# 
   148  0193                     	;# 
   149  0193                     	;# 
   150  0193                     	;# 
   151  0194                     	;# 
   152  0195                     	;# 
   153  0196                     	;# 
   154  0199                     	;# 
   155  019A                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019C                     	;# 
   161  019C                     	;# 
   162  019D                     	;# 
   163  019E                     	;# 
   164  019F                     	;# 
   165  020C                     	;# 
   166  020E                     	;# 
   167  0211                     	;# 
   168  0211                     	;# 
   169  0212                     	;# 
   170  0212                     	;# 
   171  0213                     	;# 
   172  0213                     	;# 
   173  0214                     	;# 
   174  0214                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0216                     	;# 
   179  0216                     	;# 
   180  0217                     	;# 
   181  0217                     	;# 
   182  0291                     	;# 
   183  0291                     	;# 
   184  0292                     	;# 
   185  0293                     	;# 
   186  0294                     	;# 
   187  0295                     	;# 
   188  0295                     	;# 
   189  0296                     	;# 
   190  0391                     	;# 
   191  0392                     	;# 
   192  0393                     	;# 
   193  039A                     	;# 
   194  039C                     	;# 
   195  039D                     	;# 
   196  039E                     	;# 
   197  039F                     	;# 
   198  0FE4                     	;# 
   199  0FE5                     	;# 
   200  0FE6                     	;# 
   201  0FE7                     	;# 
   202  0FE8                     	;# 
   203  0FE9                     	;# 
   204  0FEA                     	;# 
   205  0FEB                     	;# 
   206  0FED                     	;# 
   207  0FEE                     	;# 
   208  0FEF                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000E                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0015                     	;# 
   226  0016                     	;# 
   227  0016                     	;# 
   228  0017                     	;# 
   229  0018                     	;# 
   230  0019                     	;# 
   231  001A                     	;# 
   232  001B                     	;# 
   233  001C                     	;# 
   234  001E                     	;# 
   235  001F                     	;# 
   236  008C                     	;# 
   237  008E                     	;# 
   238  0091                     	;# 
   239  0092                     	;# 
   240  0095                     	;# 
   241  0096                     	;# 
   242  0097                     	;# 
   243  0098                     	;# 
   244  0099                     	;# 
   245  009A                     	;# 
   246  009B                     	;# 
   247  009B                     	;# 
   248  009C                     	;# 
   249  009D                     	;# 
   250  009E                     	;# 
   251  010C                     	;# 
   252  010E                     	;# 
   253  0111                     	;# 
   254  0112                     	;# 
   255  0113                     	;# 
   256  0114                     	;# 
   257  0115                     	;# 
   258  0116                     	;# 
   259  0117                     	;# 
   260  0118                     	;# 
   261  0119                     	;# 
   262  011A                     	;# 
   263  011B                     	;# 
   264  011D                     	;# 
   265  011D                     	;# 
   266  018C                     	;# 
   267  018E                     	;# 
   268  0191                     	;# 
   269  0191                     	;# 
   270  0192                     	;# 
   271  0193                     	;# 
   272  0193                     	;# 
   273  0193                     	;# 
   274  0194                     	;# 
   275  0195                     	;# 
   276  0196                     	;# 
   277  0199                     	;# 
   278  019A                     	;# 
   279  019B                     	;# 
   280  019B                     	;# 
   281  019B                     	;# 
   282  019B                     	;# 
   283  019C                     	;# 
   284  019C                     	;# 
   285  019D                     	;# 
   286  019E                     	;# 
   287  019F                     	;# 
   288  020C                     	;# 
   289  020E                     	;# 
   290  0211                     	;# 
   291  0211                     	;# 
   292  0212                     	;# 
   293  0212                     	;# 
   294  0213                     	;# 
   295  0213                     	;# 
   296  0214                     	;# 
   297  0214                     	;# 
   298  0215                     	;# 
   299  0215                     	;# 
   300  0215                     	;# 
   301  0216                     	;# 
   302  0216                     	;# 
   303  0217                     	;# 
   304  0217                     	;# 
   305  0291                     	;# 
   306  0291                     	;# 
   307  0292                     	;# 
   308  0293                     	;# 
   309  0294                     	;# 
   310  0295                     	;# 
   311  0295                     	;# 
   312  0296                     	;# 
   313  0391                     	;# 
   314  0392                     	;# 
   315  0393                     	;# 
   316  039A                     	;# 
   317  039C                     	;# 
   318  039D                     	;# 
   319  039E                     	;# 
   320  039F                     	;# 
   321  0FE4                     	;# 
   322  0FE5                     	;# 
   323  0FE6                     	;# 
   324  0FE7                     	;# 
   325  0FE8                     	;# 
   326  0FE9                     	;# 
   327  0FEA                     	;# 
   328  0FEB                     	;# 
   329  0FED                     	;# 
   330  0FEE                     	;# 
   331  0FEF                     	;# 
   332  0000                     	;# 
   333  0001                     	;# 
   334  0002                     	;# 
   335  0003                     	;# 
   336  0004                     	;# 
   337  0005                     	;# 
   338  0006                     	;# 
   339  0007                     	;# 
   340  0008                     	;# 
   341  0009                     	;# 
   342  000A                     	;# 
   343  000B                     	;# 
   344  000C                     	;# 
   345  000E                     	;# 
   346  0011                     	;# 
   347  0012                     	;# 
   348  0015                     	;# 
   349  0016                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001C                     	;# 
   357  001E                     	;# 
   358  001F                     	;# 
   359  008C                     	;# 
   360  008E                     	;# 
   361  0091                     	;# 
   362  0092                     	;# 
   363  0095                     	;# 
   364  0096                     	;# 
   365  0097                     	;# 
   366  0098                     	;# 
   367  0099                     	;# 
   368  009A                     	;# 
   369  009B                     	;# 
   370  009B                     	;# 
   371  009C                     	;# 
   372  009D                     	;# 
   373  009E                     	;# 
   374  010C                     	;# 
   375  010E                     	;# 
   376  0111                     	;# 
   377  0112                     	;# 
   378  0113                     	;# 
   379  0114                     	;# 
   380  0115                     	;# 
   381  0116                     	;# 
   382  0117                     	;# 
   383  0118                     	;# 
   384  0119                     	;# 
   385  011A                     	;# 
   386  011B                     	;# 
   387  011D                     	;# 
   388  011D                     	;# 
   389  018C                     	;# 
   390  018E                     	;# 
   391  0191                     	;# 
   392  0191                     	;# 
   393  0192                     	;# 
   394  0193                     	;# 
   395  0193                     	;# 
   396  0193                     	;# 
   397  0194                     	;# 
   398  0195                     	;# 
   399  0196                     	;# 
   400  0199                     	;# 
   401  019A                     	;# 
   402  019B                     	;# 
   403  019B                     	;# 
   404  019B                     	;# 
   405  019B                     	;# 
   406  019C                     	;# 
   407  019C                     	;# 
   408  019D                     	;# 
   409  019E                     	;# 
   410  019F                     	;# 
   411  020C                     	;# 
   412  020E                     	;# 
   413  0211                     	;# 
   414  0211                     	;# 
   415  0212                     	;# 
   416  0212                     	;# 
   417  0213                     	;# 
   418  0213                     	;# 
   419  0214                     	;# 
   420  0214                     	;# 
   421  0215                     	;# 
   422  0215                     	;# 
   423  0215                     	;# 
   424  0216                     	;# 
   425  0216                     	;# 
   426  0217                     	;# 
   427  0217                     	;# 
   428  0291                     	;# 
   429  0291                     	;# 
   430  0292                     	;# 
   431  0293                     	;# 
   432  0294                     	;# 
   433  0295                     	;# 
   434  0295                     	;# 
   435  0296                     	;# 
   436  0391                     	;# 
   437  0392                     	;# 
   438  0393                     	;# 
   439  039A                     	;# 
   440  039C                     	;# 
   441  039D                     	;# 
   442  039E                     	;# 
   443  039F                     	;# 
   444  0FE4                     	;# 
   445  0FE5                     	;# 
   446  0FE6                     	;# 
   447  0FE7                     	;# 
   448  0FE8                     	;# 
   449  0FE9                     	;# 
   450  0FEA                     	;# 
   451  0FEB                     	;# 
   452  0FED                     	;# 
   453  0FEE                     	;# 
   454  0FEF                     	;# 
   455  0000                     	;# 
   456  0001                     	;# 
   457  0002                     	;# 
   458  0003                     	;# 
   459  0004                     	;# 
   460  0005                     	;# 
   461  0006                     	;# 
   462  0007                     	;# 
   463  0008                     	;# 
   464  0009                     	;# 
   465  000A                     	;# 
   466  000B                     	;# 
   467  000C                     	;# 
   468  000E                     	;# 
   469  0011                     	;# 
   470  0012                     	;# 
   471  0015                     	;# 
   472  0016                     	;# 
   473  0016                     	;# 
   474  0017                     	;# 
   475  0018                     	;# 
   476  0019                     	;# 
   477  001A                     	;# 
   478  001B                     	;# 
   479  001C                     	;# 
   480  001E                     	;# 
   481  001F                     	;# 
   482  008C                     	;# 
   483  008E                     	;# 
   484  0091                     	;# 
   485  0092                     	;# 
   486  0095                     	;# 
   487  0096                     	;# 
   488  0097                     	;# 
   489  0098                     	;# 
   490  0099                     	;# 
   491  009A                     	;# 
   492  009B                     	;# 
   493  009B                     	;# 
   494  009C                     	;# 
   495  009D                     	;# 
   496  009E                     	;# 
   497  010C                     	;# 
   498  010E                     	;# 
   499  0111                     	;# 
   500  0112                     	;# 
   501  0113                     	;# 
   502  0114                     	;# 
   503  0115                     	;# 
   504  0116                     	;# 
   505  0117                     	;# 
   506  0118                     	;# 
   507  0119                     	;# 
   508  011A                     	;# 
   509  011B                     	;# 
   510  011D                     	;# 
   511  011D                     	;# 
   512  018C                     	;# 
   513  018E                     	;# 
   514  0191                     	;# 
   515  0191                     	;# 
   516  0192                     	;# 
   517  0193                     	;# 
   518  0193                     	;# 
   519  0193                     	;# 
   520  0194                     	;# 
   521  0195                     	;# 
   522  0196                     	;# 
   523  0199                     	;# 
   524  019A                     	;# 
   525  019B                     	;# 
   526  019B                     	;# 
   527  019B                     	;# 
   528  019B                     	;# 
   529  019C                     	;# 
   530  019C                     	;# 
   531  019D                     	;# 
   532  019E                     	;# 
   533  019F                     	;# 
   534  020C                     	;# 
   535  020E                     	;# 
   536  0211                     	;# 
   537  0211                     	;# 
   538  0212                     	;# 
   539  0212                     	;# 
   540  0213                     	;# 
   541  0213                     	;# 
   542  0214                     	;# 
   543  0214                     	;# 
   544  0215                     	;# 
   545  0215                     	;# 
   546  0215                     	;# 
   547  0216                     	;# 
   548  0216                     	;# 
   549  0217                     	;# 
   550  0217                     	;# 
   551  0291                     	;# 
   552  0291                     	;# 
   553  0292                     	;# 
   554  0293                     	;# 
   555  0294                     	;# 
   556  0295                     	;# 
   557  0295                     	;# 
   558  0296                     	;# 
   559  0391                     	;# 
   560  0392                     	;# 
   561  0393                     	;# 
   562  039A                     	;# 
   563  039C                     	;# 
   564  039D                     	;# 
   565  039E                     	;# 
   566  039F                     	;# 
   567  0FE4                     	;# 
   568  0FE5                     	;# 
   569  0FE6                     	;# 
   570  0FE7                     	;# 
   571  0FE8                     	;# 
   572  0FE9                     	;# 
   573  0FEA                     	;# 
   574  0FEB                     	;# 
   575  0FED                     	;# 
   576  0FEE                     	;# 
   577  0FEF                     	;# 
   578  0000                     	;# 
   579  0001                     	;# 
   580  0002                     	;# 
   581  0003                     	;# 
   582  0004                     	;# 
   583  0005                     	;# 
   584  0006                     	;# 
   585  0007                     	;# 
   586  0008                     	;# 
   587  0009                     	;# 
   588  000A                     	;# 
   589  000B                     	;# 
   590  000C                     	;# 
   591  000E                     	;# 
   592  0011                     	;# 
   593  0012                     	;# 
   594  0015                     	;# 
   595  0016                     	;# 
   596  0016                     	;# 
   597  0017                     	;# 
   598  0018                     	;# 
   599  0019                     	;# 
   600  001A                     	;# 
   601  001B                     	;# 
   602  001C                     	;# 
   603  001E                     	;# 
   604  001F                     	;# 
   605  008C                     	;# 
   606  008E                     	;# 
   607  0091                     	;# 
   608  0092                     	;# 
   609  0095                     	;# 
   610  0096                     	;# 
   611  0097                     	;# 
   612  0098                     	;# 
   613  0099                     	;# 
   614  009A                     	;# 
   615  009B                     	;# 
   616  009B                     	;# 
   617  009C                     	;# 
   618  009D                     	;# 
   619  009E                     	;# 
   620  010C                     	;# 
   621  010E                     	;# 
   622  0111                     	;# 
   623  0112                     	;# 
   624  0113                     	;# 
   625  0114                     	;# 
   626  0115                     	;# 
   627  0116                     	;# 
   628  0117                     	;# 
   629  0118                     	;# 
   630  0119                     	;# 
   631  011A                     	;# 
   632  011B                     	;# 
   633  011D                     	;# 
   634  011D                     	;# 
   635  018C                     	;# 
   636  018E                     	;# 
   637  0191                     	;# 
   638  0191                     	;# 
   639  0192                     	;# 
   640  0193                     	;# 
   641  0193                     	;# 
   642  0193                     	;# 
   643  0194                     	;# 
   644  0195                     	;# 
   645  0196                     	;# 
   646  0199                     	;# 
   647  019A                     	;# 
   648  019B                     	;# 
   649  019B                     	;# 
   650  019B                     	;# 
   651  019B                     	;# 
   652  019C                     	;# 
   653  019C                     	;# 
   654  019D                     	;# 
   655  019E                     	;# 
   656  019F                     	;# 
   657  020C                     	;# 
   658  020E                     	;# 
   659  0211                     	;# 
   660  0211                     	;# 
   661  0212                     	;# 
   662  0212                     	;# 
   663  0213                     	;# 
   664  0213                     	;# 
   665  0214                     	;# 
   666  0214                     	;# 
   667  0215                     	;# 
   668  0215                     	;# 
   669  0215                     	;# 
   670  0216                     	;# 
   671  0216                     	;# 
   672  0217                     	;# 
   673  0217                     	;# 
   674  0291                     	;# 
   675  0291                     	;# 
   676  0292                     	;# 
   677  0293                     	;# 
   678  0294                     	;# 
   679  0295                     	;# 
   680  0295                     	;# 
   681  0296                     	;# 
   682  0391                     	;# 
   683  0392                     	;# 
   684  0393                     	;# 
   685  039A                     	;# 
   686  039C                     	;# 
   687  039D                     	;# 
   688  039E                     	;# 
   689  039F                     	;# 
   690  0FE4                     	;# 
   691  0FE5                     	;# 
   692  0FE6                     	;# 
   693  0FE7                     	;# 
   694  0FE8                     	;# 
   695  0FE9                     	;# 
   696  0FEA                     	;# 
   697  0FEB                     	;# 
   698  0FED                     	;# 
   699  0FEE                     	;# 
   700  0FEF                     	;# 
   701  0000                     	;# 
   702  0001                     	;# 
   703  0002                     	;# 
   704  0003                     	;# 
   705  0004                     	;# 
   706  0005                     	;# 
   707  0006                     	;# 
   708  0007                     	;# 
   709  0008                     	;# 
   710  0009                     	;# 
   711  000A                     	;# 
   712  000B                     	;# 
   713  000C                     	;# 
   714  000E                     	;# 
   715  0011                     	;# 
   716  0012                     	;# 
   717  0015                     	;# 
   718  0016                     	;# 
   719  0016                     	;# 
   720  0017                     	;# 
   721  0018                     	;# 
   722  0019                     	;# 
   723  001A                     	;# 
   724  001B                     	;# 
   725  001C                     	;# 
   726  001E                     	;# 
   727  001F                     	;# 
   728  008C                     	;# 
   729  008E                     	;# 
   730  0091                     	;# 
   731  0092                     	;# 
   732  0095                     	;# 
   733  0096                     	;# 
   734  0097                     	;# 
   735  0098                     	;# 
   736  0099                     	;# 
   737  009A                     	;# 
   738  009B                     	;# 
   739  009B                     	;# 
   740  009C                     	;# 
   741  009D                     	;# 
   742  009E                     	;# 
   743  010C                     	;# 
   744  010E                     	;# 
   745  0111                     	;# 
   746  0112                     	;# 
   747  0113                     	;# 
   748  0114                     	;# 
   749  0115                     	;# 
   750  0116                     	;# 
   751  0117                     	;# 
   752  0118                     	;# 
   753  0119                     	;# 
   754  011A                     	;# 
   755  011B                     	;# 
   756  011D                     	;# 
   757  011D                     	;# 
   758  018C                     	;# 
   759  018E                     	;# 
   760  0191                     	;# 
   761  0191                     	;# 
   762  0192                     	;# 
   763  0193                     	;# 
   764  0193                     	;# 
   765  0193                     	;# 
   766  0194                     	;# 
   767  0195                     	;# 
   768  0196                     	;# 
   769  0199                     	;# 
   770  019A                     	;# 
   771  019B                     	;# 
   772  019B                     	;# 
   773  019B                     	;# 
   774  019B                     	;# 
   775  019C                     	;# 
   776  019C                     	;# 
   777  019D                     	;# 
   778  019E                     	;# 
   779  019F                     	;# 
   780  020C                     	;# 
   781  020E                     	;# 
   782  0211                     	;# 
   783  0211                     	;# 
   784  0212                     	;# 
   785  0212                     	;# 
   786  0213                     	;# 
   787  0213                     	;# 
   788  0214                     	;# 
   789  0214                     	;# 
   790  0215                     	;# 
   791  0215                     	;# 
   792  0215                     	;# 
   793  0216                     	;# 
   794  0216                     	;# 
   795  0217                     	;# 
   796  0217                     	;# 
   797  0291                     	;# 
   798  0291                     	;# 
   799  0292                     	;# 
   800  0293                     	;# 
   801  0294                     	;# 
   802  0295                     	;# 
   803  0295                     	;# 
   804  0296                     	;# 
   805  0391                     	;# 
   806  0392                     	;# 
   807  0393                     	;# 
   808  039A                     	;# 
   809  039C                     	;# 
   810  039D                     	;# 
   811  039E                     	;# 
   812  039F                     	;# 
   813  0FE4                     	;# 
   814  0FE5                     	;# 
   815  0FE6                     	;# 
   816  0FE7                     	;# 
   817  0FE8                     	;# 
   818  0FE9                     	;# 
   819  0FEA                     	;# 
   820  0FEB                     	;# 
   821  0FED                     	;# 
   822  0FEE                     	;# 
   823  0FEF                     	;# 
   824  0000                     	;# 
   825  0001                     	;# 
   826  0002                     	;# 
   827  0003                     	;# 
   828  0004                     	;# 
   829  0005                     	;# 
   830  0006                     	;# 
   831  0007                     	;# 
   832  0008                     	;# 
   833  0009                     	;# 
   834  000A                     	;# 
   835  000B                     	;# 
   836  000C                     	;# 
   837  000E                     	;# 
   838  0011                     	;# 
   839  0012                     	;# 
   840  0015                     	;# 
   841  0016                     	;# 
   842  0016                     	;# 
   843  0017                     	;# 
   844  0018                     	;# 
   845  0019                     	;# 
   846  001A                     	;# 
   847  001B                     	;# 
   848  001C                     	;# 
   849  001E                     	;# 
   850  001F                     	;# 
   851  008C                     	;# 
   852  008E                     	;# 
   853  0091                     	;# 
   854  0092                     	;# 
   855  0095                     	;# 
   856  0096                     	;# 
   857  0097                     	;# 
   858  0098                     	;# 
   859  0099                     	;# 
   860  009A                     	;# 
   861  009B                     	;# 
   862  009B                     	;# 
   863  009C                     	;# 
   864  009D                     	;# 
   865  009E                     	;# 
   866  010C                     	;# 
   867  010E                     	;# 
   868  0111                     	;# 
   869  0112                     	;# 
   870  0113                     	;# 
   871  0114                     	;# 
   872  0115                     	;# 
   873  0116                     	;# 
   874  0117                     	;# 
   875  0118                     	;# 
   876  0119                     	;# 
   877  011A                     	;# 
   878  011B                     	;# 
   879  011D                     	;# 
   880  011D                     	;# 
   881  018C                     	;# 
   882  018E                     	;# 
   883  0191                     	;# 
   884  0191                     	;# 
   885  0192                     	;# 
   886  0193                     	;# 
   887  0193                     	;# 
   888  0193                     	;# 
   889  0194                     	;# 
   890  0195                     	;# 
   891  0196                     	;# 
   892  0199                     	;# 
   893  019A                     	;# 
   894  019B                     	;# 
   895  019B                     	;# 
   896  019B                     	;# 
   897  019B                     	;# 
   898  019C                     	;# 
   899  019C                     	;# 
   900  019D                     	;# 
   901  019E                     	;# 
   902  019F                     	;# 
   903  020C                     	;# 
   904  020E                     	;# 
   905  0211                     	;# 
   906  0211                     	;# 
   907  0212                     	;# 
   908  0212                     	;# 
   909  0213                     	;# 
   910  0213                     	;# 
   911  0214                     	;# 
   912  0214                     	;# 
   913  0215                     	;# 
   914  0215                     	;# 
   915  0215                     	;# 
   916  0216                     	;# 
   917  0216                     	;# 
   918  0217                     	;# 
   919  0217                     	;# 
   920  0291                     	;# 
   921  0291                     	;# 
   922  0292                     	;# 
   923  0293                     	;# 
   924  0294                     	;# 
   925  0295                     	;# 
   926  0295                     	;# 
   927  0296                     	;# 
   928  0391                     	;# 
   929  0392                     	;# 
   930  0393                     	;# 
   931  039A                     	;# 
   932  039C                     	;# 
   933  039D                     	;# 
   934  039E                     	;# 
   935  039F                     	;# 
   936  0FE4                     	;# 
   937  0FE5                     	;# 
   938  0FE6                     	;# 
   939  0FE7                     	;# 
   940  0FE8                     	;# 
   941  0FE9                     	;# 
   942  0FEA                     	;# 
   943  0FEB                     	;# 
   944  0FED                     	;# 
   945  0FEE                     	;# 
   946  0FEF                     	;# 
   947  0000                     	;# 
   948  0001                     	;# 
   949  0002                     	;# 
   950  0003                     	;# 
   951  0004                     	;# 
   952  0005                     	;# 
   953  0006                     	;# 
   954  0007                     	;# 
   955  0008                     	;# 
   956  0009                     	;# 
   957  000A                     	;# 
   958  000B                     	;# 
   959  000C                     	;# 
   960  000E                     	;# 
   961  0011                     	;# 
   962  0012                     	;# 
   963  0015                     	;# 
   964  0016                     	;# 
   965  0016                     	;# 
   966  0017                     	;# 
   967  0018                     	;# 
   968  0019                     	;# 
   969  001A                     	;# 
   970  001B                     	;# 
   971  001C                     	;# 
   972  001E                     	;# 
   973  001F                     	;# 
   974  008C                     	;# 
   975  008E                     	;# 
   976  0091                     	;# 
   977  0092                     	;# 
   978  0095                     	;# 
   979  0096                     	;# 
   980  0097                     	;# 
   981  0098                     	;# 
   982  0099                     	;# 
   983  009A                     	;# 
   984  009B                     	;# 
   985  009B                     	;# 
   986  009C                     	;# 
   987  009D                     	;# 
   988  009E                     	;# 
   989  010C                     	;# 
   990  010E                     	;# 
   991  0111                     	;# 
   992  0112                     	;# 
   993  0113                     	;# 
   994  0114                     	;# 
   995  0115                     	;# 
   996  0116                     	;# 
   997  0117                     	;# 
   998  0118                     	;# 
   999  0119                     	;# 
  1000  011A                     	;# 
  1001  011B                     	;# 
  1002  011D                     	;# 
  1003  011D                     	;# 
  1004  018C                     	;# 
  1005  018E                     	;# 
  1006  0191                     	;# 
  1007  0191                     	;# 
  1008  0192                     	;# 
  1009  0193                     	;# 
  1010  0193                     	;# 
  1011  0193                     	;# 
  1012  0194                     	;# 
  1013  0195                     	;# 
  1014  0196                     	;# 
  1015  0199                     	;# 
  1016  019A                     	;# 
  1017  019B                     	;# 
  1018  019B                     	;# 
  1019  019B                     	;# 
  1020  019B                     	;# 
  1021  019C                     	;# 
  1022  019C                     	;# 
  1023  019D                     	;# 
  1024  019E                     	;# 
  1025  019F                     	;# 
  1026  020C                     	;# 
  1027  020E                     	;# 
  1028  0211                     	;# 
  1029  0211                     	;# 
  1030  0212                     	;# 
  1031  0212                     	;# 
  1032  0213                     	;# 
  1033  0213                     	;# 
  1034  0214                     	;# 
  1035  0214                     	;# 
  1036  0215                     	;# 
  1037  0215                     	;# 
  1038  0215                     	;# 
  1039  0216                     	;# 
  1040  0216                     	;# 
  1041  0217                     	;# 
  1042  0217                     	;# 
  1043  0291                     	;# 
  1044  0291                     	;# 
  1045  0292                     	;# 
  1046  0293                     	;# 
  1047  0294                     	;# 
  1048  0295                     	;# 
  1049  0295                     	;# 
  1050  0296                     	;# 
  1051  0391                     	;# 
  1052  0392                     	;# 
  1053  0393                     	;# 
  1054  039A                     	;# 
  1055  039C                     	;# 
  1056  039D                     	;# 
  1057  039E                     	;# 
  1058  039F                     	;# 
  1059  0FE4                     	;# 
  1060  0FE5                     	;# 
  1061  0FE6                     	;# 
  1062  0FE7                     	;# 
  1063  0FE8                     	;# 
  1064  0FE9                     	;# 
  1065  0FEA                     	;# 
  1066  0FEB                     	;# 
  1067  0FED                     	;# 
  1068  0FEE                     	;# 
  1069  0FEF                     	;# 
  1070                           
  1071                           	psect	stringtext1
  1072  0307                     __pstringtext1:
  1073  0307                     _GOOD_WSP_VOLTAGE:
  1074  0307  3440               	retlw	64
  1075  0308  349C               	retlw	156
  1076  0309  3400               	retlw	0
  1077  030A  3400               	retlw	0
  1078  030B                     __end_of_GOOD_WSP_VOLTAGE:
  1079                           
  1080                           	psect	stringtext2
  1081  030B                     __pstringtext2:
  1082  030B                     _BAD_WSP_VOLTAGE:
  1083  030B  3420               	retlw	32
  1084  030C  344E               	retlw	78
  1085  030D  3400               	retlw	0
  1086  030E  3400               	retlw	0
  1087  030F                     __end_of_BAD_WSP_VOLTAGE:
  1088                           
  1089                           	psect	stringtext3
  1090  030F                     __pstringtext3:
  1091  030F                     _ROTATION_TIME:
  1092  030F  3400               	retlw	0
  1093  0310  3475               	retlw	117
  1094  0311  3400               	retlw	0
  1095  0312  3400               	retlw	0
  1096  0313                     __end_of_ROTATION_TIME:
  1097                           
  1098                           	psect	nvBANK0
  1099  002D                     __pnvBANK0:
  1100  002D                     _TMR0_InterruptHandler:
  1101  002D                     	ds	2
  1102  002F                     _TMR2_InterruptHandler:
  1103  002F                     	ds	2
  1104  0031                     _timer0ReloadVal:
  1105  0031                     	ds	1
  1106  0015                     _TMR0	set	21
  1107  001C                     _T2CONbits	set	28
  1108  001C                     _T2CON	set	28
  1109  001A                     _TMR2	set	26
  1110  001B                     _PR2	set	27
  1111  0011                     _PIR1bits	set	17
  1112  000B                     _INTCONbits	set	11
  1113  008E                     _TRISCbits	set	142
  1114  008C                     _TRISAbits	set	140
  1115  0095                     _OPTION_REG	set	149
  1116  0091                     _PIE1bits	set	145
  1117  0095                     _OPTION_REGbits	set	149
  1118  008E                     _TRISC	set	142
  1119  008C                     _TRISA	set	140
  1120  009D                     _ADCON0bits	set	157
  1121  009D                     _ADCON0	set	157
  1122  009C                     _ADRESH	set	156
  1123  009B                     _ADRESL	set	155
  1124  009E                     _ADCON1	set	158
  1125  0097                     _WDTCON	set	151
  1126  0098                     _OSCTUNE	set	152
  1127  0099                     _OSCCON	set	153
  1128  010C                     _LATAbits	set	268
  1129  010E                     _LATCbits	set	270
  1130  011D                     _APFCON	set	285
  1131  010E                     _LATC	set	270
  1132  010C                     _LATA	set	268
  1133  0116                     _BORCON	set	278
  1134  018C                     _ANSELA	set	396
  1135  018E                     _ANSELC	set	398
  1136  020E                     _WPUCbits	set	526
  1137  020C                     _WPUAbits	set	524
  1138  020E                     _WPUC	set	526
  1139  020C                     _WPUA	set	524
  1140                           
  1141                           	psect	cinit
  1142  0027                     start_initialization:	
  1143                           ; #config settings
  1144                           
  1145  0027                     __initialization:
  1146                           
  1147                           ; Clear objects allocated to COMMON
  1148  0027  01F8               	clrf	__pbssCOMMON& (0+127)
  1149  0028  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1150  0029  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1151  002A  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1152  002B  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1153  002C  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  1154                           
  1155                           ; Clear objects allocated to BANK0
  1156  002D  3020               	movlw	low __pbssBANK0
  1157  002E  0084               	movwf	4
  1158  002F  3000               	movlw	high __pbssBANK0
  1159  0030  0085               	movwf	5
  1160  0031  300D               	movlw	13
  1161  0032  3182  22E5  3180   	fcall	clear_ram0
  1162  0035                     end_of_initialization:	
  1163                           ;End of C runtime variable initialization code
  1164                           
  1165  0035                     __end_of__initialization:
  1166  0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1167  0036  0020               	movlb	0
  1168  0037  2928               	ljmp	_main	;jump to C main() function
  1169                           
  1170                           	psect	bssCOMMON
  1171  0078                     __pbssCOMMON:
  1172  0078                     Sec_tick_work@iled:
  1173  0078                     	ds	1
  1174  0079                     get_jump@jump_counter:
  1175  0079                     	ds	1
  1176  007A                     get_fun@fun_counter:
  1177  007A                     	ds	1
  1178  007B                     get_measure@measures:
  1179  007B                     	ds	1
  1180  007C                     _zumm:
  1181  007C                     	ds	1
  1182  007D                     _FLAGS:
  1183  007D                     	ds	1
  1184                           
  1185                           	psect	bssBANK0
  1186  0020                     __pbssBANK0:
  1187  0020                     _time_s:
  1188  0020                     	ds	4
  1189  0024                     _result:
  1190  0024                     	ds	2
  1191  0026                     TMR2_ISR@CountCallBack:
  1192  0026                     	ds	2
  1193  0028                     _ADC_InterruptHandler:
  1194  0028                     	ds	2
  1195  002A                     _rcon:
  1196  002A                     	ds	1
  1197  002B                     _watt:
  1198  002B                     	ds	1
  1199  002C                     _ledd:
  1200  002C                     	ds	1
  1201                           
  1202                           	psect	clrtext
  1203  02E5                     clear_ram0:	
  1204                           ;	Called with FSR0 containing the base address, and
  1205                           ;	WREG with the size to clear
  1206                           
  1207  02E5  0064               	clrwdt	;clear the watchdog before getting into this loop
  1208  02E6                     clrloop0:
  1209  02E6  0180               	clrf	0	;clear RAM location pointed to by FSR
  1210  02E7  3101               	addfsr 0,1
  1211  02E8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1212  02E9  2AE6               	goto	clrloop0	;have we reached the end yet?
  1213  02EA  3400               	retlw	0	;all done for this memory range, return
  1214                           
  1215                           	psect	cstackCOMMON
  1216  0070                     __pcstackCOMMON:
  1217  0070                     ?_PIN_MANAGER_Initialize:
  1218  0070                     ?_OSCILLATOR_Initialize:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     ?_WDT_Initialize:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     ?_TMR2_Initialize:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     ?_TMR0_Initialize:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0070                     ?_ADC_Initialize:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     ?_TMR0_ISR:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     ??_TMR0_ISR:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ?_TMR2_ISR:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242  0070                     ?_TMR2_DefaultInterruptHandler:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245  0070                     ??_TMR2_DefaultInterruptHandler:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248  0070                     ?_TMR2_CallBack:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251  0070                     ?_TMR0_DefaultInterruptHandler:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254  0070                     ??_TMR0_DefaultInterruptHandler:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257  0070                     ?_SYSTEM_Initialize:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260  0070                     ?_INTERRUPT_InterruptManager:	
  1261                           ; 1 bytes @ 0x0
  1262                           
  1263  0070                     ?_TMR2_StartTimer:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266  0070                     ?_toggle_tone:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269  0070                     ??_toggle_tone:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272  0070                     ?_go_close:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275  0070                     ?_go_close_alt:	
  1276                           ; 1 bytes @ 0x0
  1277                           
  1278  0070                     ?_go_open:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281  0070                     ?_get_measure:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284  0070                     ?_get_fun:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287  0070                     ?_get_jump:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290  0070                     ?_Sec_tick_work:	
  1291                           ; 1 bytes @ 0x0
  1292                           
  1293  0070                     ?_povorot:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296  0070                     ?_fun_work:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0070                     ?_switch_wm:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0070                     ?_switch_zum:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0070                     ??_switch_zum:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0070                     ?_start_setup:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0070                     ?_main:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0070                     ??i1_start_alarm:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0070                     ?_ADC_GetConversion:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320  0070                     ?_start_alarm:	
  1321                           ; 2 bytes @ 0x0
  1322                           
  1323  0070                     ?i1_start_alarm:	
  1324                           ; 2 bytes @ 0x0
  1325                           
  1326                           
  1327                           ; 2 bytes @ 0x0
  1328  0070                     	ds	2
  1329  0072                     ??_ADC_GetConversion:
  1330                           
  1331                           ; 1 bytes @ 0x2
  1332  0072                     	ds	1
  1333  0073                     ADC_GetConversion@channel:
  1334                           
  1335                           ; 1 bytes @ 0x3
  1336  0073                     	ds	1
  1337  0074                     ??_get_measure:
  1338  0074                     ??_get_fun:	
  1339                           ; 1 bytes @ 0x4
  1340                           
  1341  0074                     ??_get_jump:	
  1342                           ; 1 bytes @ 0x4
  1343                           
  1344                           
  1345                           ; 1 bytes @ 0x4
  1346  0074                     	ds	1
  1347  0075                     get_measure@res:
  1348  0075                     get_fun@res:	
  1349                           ; 2 bytes @ 0x5
  1350                           
  1351  0075                     get_jump@res:	
  1352                           ; 2 bytes @ 0x5
  1353                           
  1354                           
  1355                           ; 2 bytes @ 0x5
  1356  0075                     	ds	2
  1357  0077                     ??_Sec_tick_work:
  1358                           
  1359                           ; 1 bytes @ 0x7
  1360  0077                     	ds	1
  1361  0078                     ??_TMR2_ISR:
  1362  0078                     ??_TMR2_CallBack:	
  1363                           ; 1 bytes @ 0x8
  1364                           
  1365  0078                     ??_INTERRUPT_InterruptManager:	
  1366                           ; 1 bytes @ 0x8
  1367                           
  1368                           
  1369                           	psect	cstackBANK0
  1370  0032                     __pcstackBANK0:	
  1371                           ; 1 bytes @ 0x8
  1372                           
  1373  0032                     ??_PIN_MANAGER_Initialize:
  1374  0032                     ??_OSCILLATOR_Initialize:	
  1375                           ; 1 bytes @ 0x0
  1376                           
  1377  0032                     ??_WDT_Initialize:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380  0032                     ??_ADC_Initialize:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383  0032                     ?_TMR2_SetInterruptHandler:	
  1384                           ; 1 bytes @ 0x0
  1385                           
  1386  0032                     ?_TMR0_SetInterruptHandler:	
  1387                           ; 1 bytes @ 0x0
  1388                           
  1389  0032                     ??_TMR2_StartTimer:	
  1390                           ; 1 bytes @ 0x0
  1391                           
  1392  0032                     ??_start_alarm:	
  1393                           ; 1 bytes @ 0x0
  1394                           
  1395  0032                     ??_go_close:	
  1396                           ; 1 bytes @ 0x0
  1397                           
  1398  0032                     ??_go_close_alt:	
  1399                           ; 1 bytes @ 0x0
  1400                           
  1401  0032                     ??_go_open:	
  1402                           ; 1 bytes @ 0x0
  1403                           
  1404  0032                     ??_switch_wm:	
  1405                           ; 1 bytes @ 0x0
  1406                           
  1407  0032                     TMR2_SetInterruptHandler@InterruptHandler:	
  1408                           ; 1 bytes @ 0x0
  1409                           
  1410  0032                     TMR0_SetInterruptHandler@InterruptHandler:	
  1411                           ; 2 bytes @ 0x0
  1412                           
  1413                           
  1414                           ; 2 bytes @ 0x0
  1415  0032                     	ds	1
  1416  0033                     go_close@i:
  1417                           
  1418                           ; 1 bytes @ 0x1
  1419  0033                     	ds	1
  1420  0034                     ??_TMR2_Initialize:
  1421  0034                     ??_TMR0_Initialize:	
  1422                           ; 1 bytes @ 0x2
  1423                           
  1424  0034                     ??_TMR2_SetInterruptHandler:	
  1425                           ; 1 bytes @ 0x2
  1426                           
  1427  0034                     ??_TMR0_SetInterruptHandler:	
  1428                           ; 1 bytes @ 0x2
  1429                           
  1430  0034                     ??_povorot:	
  1431                           ; 1 bytes @ 0x2
  1432                           
  1433  0034                     ??_fun_work:	
  1434                           ; 1 bytes @ 0x2
  1435                           
  1436                           
  1437                           ; 1 bytes @ 0x2
  1438  0034                     	ds	1
  1439  0035                     ??_SYSTEM_Initialize:
  1440  0035                     ??_start_setup:	
  1441                           ; 1 bytes @ 0x3
  1442                           
  1443  0035                     ??_main:	
  1444                           ; 1 bytes @ 0x3
  1445                           
  1446                           
  1447                           ; 1 bytes @ 0x3
  1448  0035                     	ds	1
  1449                           
  1450                           	psect	maintext
  1451  0128                     __pmaintext:	
  1452 ;;
  1453 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1454 ;;
  1455 ;; *************** function _main *****************
  1456 ;; Defined at:
  1457 ;;		line 247 in file "main.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      void 
  1464 ;; Registers used:
  1465 ;;		wreg, status,2, status,0, pclath, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : B1F/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMMON   BANK0   BANK1
  1471 ;;      Params:         0       0       0
  1472 ;;      Locals:         0       0       0
  1473 ;;      Temps:          0       1       0
  1474 ;;      Totals:         0       1       0
  1475 ;;Total ram usage:        1 bytes
  1476 ;; Hardware stack levels required when called: 10
  1477 ;; This function calls:
  1478 ;;		_fun_work
  1479 ;;		_go_close
  1480 ;;		_go_close_alt
  1481 ;;		_povorot
  1482 ;;		_start_alarm
  1483 ;;		_start_setup
  1484 ;;		_switch_wm
  1485 ;; This function is called by:
  1486 ;;		Startup code after reset
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490  0128                     _main:	
  1491                           ;psect for function _main
  1492                           
  1493  0128                     l1652:	
  1494                           ;incstack = 0
  1495                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1496                           
  1497                           
  1498                           ;main.c: 249:     start_setup();
  1499  0128  3181  21BC  3181   	fcall	_start_setup
  1500  012B                     l1654:
  1501                           
  1502                           ;main.c: 253:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1503  012B  300D               	movlw	13
  1504  012C  0020               	movlb	0	; select bank0
  1505  012D  00B5               	movwf	??_main
  1506  012E  30FB               	movlw	251
  1507  012F                     u897:
  1508  012F  0B89               	decfsz	9,f
  1509  0130  292F               	goto	u897
  1510  0131  0BB5               	decfsz	??_main,f
  1511  0132  292F               	goto	u897
  1512  0133  3200               	nop2
  1513  0134                     l1656:
  1514                           
  1515                           ;main.c: 256:         if (FLAGS.bits.ALARM) {
  1516  0134  1C7D               	btfss	_FLAGS,0
  1517  0135  2937               	goto	u861
  1518  0136  2938               	goto	u860
  1519  0137                     u861:
  1520  0137  294A               	goto	l1666
  1521  0138                     u860:
  1522  0138                     l1658:
  1523                           
  1524                           ;main.c: 257:             if (FLAGS.bits.WORK_MODE) {
  1525  0138  1CFD               	btfss	_FLAGS,1
  1526  0139  293B               	goto	u871
  1527  013A  293C               	goto	u870
  1528  013B                     u871:
  1529  013B  2943               	goto	l1662
  1530  013C                     u870:
  1531  013C                     l1660:
  1532                           
  1533                           ;main.c: 258:                 go_close_alt();
  1534  013C  3182  22F7  3181   	fcall	_go_close_alt
  1535                           
  1536                           ;main.c: 259:                 start_alarm();
  1537  013F  3182  22FD  3181   	fcall	_start_alarm
  1538                           
  1539                           ;main.c: 260:             } else {
  1540  0142  2953               	goto	l1670
  1541  0143                     l1662:
  1542                           
  1543                           ;main.c: 261:                 go_close();
  1544  0143  3180  2076  3181   	fcall	_go_close
  1545  0146                     l1664:
  1546                           
  1547                           ;main.c: 262:                 start_alarm();
  1548  0146  3182  22FD  3181   	fcall	_start_alarm
  1549  0149  2953               	goto	l1670
  1550  014A                     l1666:
  1551                           
  1552                           ;main.c: 265:             fun_work();
  1553  014A  3181  21FD  3181   	fcall	_fun_work
  1554                           
  1555                           ;main.c: 266:             povorot();
  1556  014D  3181  215D  3181   	fcall	_povorot
  1557  0150                     l1668:
  1558                           
  1559                           ;main.c: 267:             switch_wm();
  1560  0150  3182  22CE  3181   	fcall	_switch_wm
  1561  0153                     l1670:
  1562                           
  1563                           ;main.c: 270:         if (result > 0)
  1564  0153  0020               	movlb	0	; select bank0
  1565  0154  0824               	movf	_result,w
  1566  0155  0425               	iorwf	_result+1,w
  1567  0156  1903               	btfsc	3,2
  1568  0157  2959               	goto	u881
  1569  0158  295A               	goto	u880
  1570  0159                     u881:
  1571  0159  292B               	goto	l1654
  1572  015A                     u880:
  1573  015A                     l1672:
  1574  015A  0064               	clrwdt	;# 
  1575  015B  292B               	goto	l1654
  1576  015C  2826               	ljmp	start
  1577  015D                     __end_of_main:
  1578                           
  1579                           	psect	text1
  1580  02CE                     __ptext1:	
  1581 ;; *************** function _switch_wm *****************
  1582 ;; Defined at:
  1583 ;;		line 208 in file "main.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;		None
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;		None
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		None
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMMON   BANK0   BANK1
  1597 ;;      Params:         0       0       0
  1598 ;;      Locals:         0       0       0
  1599 ;;      Temps:          0       0       0
  1600 ;;      Totals:         0       0       0
  1601 ;;Total ram usage:        0 bytes
  1602 ;; Hardware stack levels used: 1
  1603 ;; Hardware stack levels required when called: 6
  1604 ;; This function calls:
  1605 ;;		Nothing
  1606 ;; This function is called by:
  1607 ;;		_main
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611  02CE                     _switch_wm:	
  1612                           ;psect for function _switch_wm
  1613                           
  1614  02CE                     l1608:	
  1615                           ;incstack = 0
  1616                           ; Regs used in _switch_wm: []
  1617                           
  1618                           
  1619                           ;main.c: 209:     if (FLAGS.bits.JUMP) {
  1620  02CE  1E7D               	btfss	_FLAGS,4
  1621  02CF  2AD1               	goto	u801
  1622  02D0  2AD2               	goto	u800
  1623  02D1                     u801:
  1624  02D1  2AD4               	goto	l358
  1625  02D2                     u800:
  1626  02D2                     l1610:
  1627                           
  1628                           ;main.c: 210:         FLAGS.bits.WORK_MODE = 1;
  1629  02D2  14FD               	bsf	_FLAGS,1
  1630                           
  1631                           ;main.c: 211:     } else {
  1632  02D3  2AD5               	goto	l360
  1633  02D4                     l358:
  1634                           
  1635                           ;main.c: 212:         FLAGS.bits.WORK_MODE = 0;
  1636  02D4  10FD               	bcf	_FLAGS,1
  1637  02D5                     l360:
  1638  02D5  0008               	return
  1639  02D6                     __end_of_switch_wm:
  1640                           
  1641                           	psect	text2
  1642  01BC                     __ptext2:	
  1643 ;; *************** function _start_setup *****************
  1644 ;; Defined at:
  1645 ;;		line 220 in file "main.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;		None
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;		None
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  1    wreg      void 
  1652 ;; Registers used:
  1653 ;;		wreg, status,2, status,0, pclath, cstack
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMMON   BANK0   BANK1
  1659 ;;      Params:         0       0       0
  1660 ;;      Locals:         0       0       0
  1661 ;;      Temps:          0       0       0
  1662 ;;      Totals:         0       0       0
  1663 ;;Total ram usage:        0 bytes
  1664 ;; Hardware stack levels used: 1
  1665 ;; Hardware stack levels required when called: 9
  1666 ;; This function calls:
  1667 ;;		_SYSTEM_Initialize
  1668 ;;		_TMR0_SetInterruptHandler
  1669 ;;		_TMR2_SetInterruptHandler
  1670 ;;		_TMR2_StartTimer
  1671 ;; This function is called by:
  1672 ;;		_main
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676  01BC                     _start_setup:	
  1677                           ;psect for function _start_setup
  1678                           
  1679  01BC                     l1612:	
  1680                           ;incstack = 0
  1681                           ; Regs used in _start_setup: [wreg+status,2+status,0+pclath+cstack]
  1682                           
  1683                           
  1684                           ;main.c: 222:     SYSTEM_Initialize();
  1685  01BC  3182  2269  3181   	fcall	_SYSTEM_Initialize
  1686  01BF                     l1614:
  1687                           
  1688                           ;main.c: 223:     (INTCONbits.GIE = 1);
  1689  01BF  178B               	bsf	11,7	;volatile
  1690  01C0                     l1616:
  1691                           
  1692                           ;main.c: 224:     (INTCONbits.PEIE = 1);
  1693  01C0  170B               	bsf	11,6	;volatile
  1694                           
  1695                           ;main.c: 227:     TMR0_SetInterruptHandler(switch_zum);
  1696  01C1  30A0               	movlw	low _switch_zum
  1697  01C2  0020               	movlb	0	; select bank0
  1698  01C3  00B2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1699  01C4  3002               	movlw	high _switch_zum
  1700  01C5  00B3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1701  01C6  3182  22F1  3181   	fcall	_TMR0_SetInterruptHandler
  1702                           
  1703                           ;main.c: 228:     TMR2_SetInterruptHandler(Sec_tick_work);
  1704  01C9  3038               	movlw	low _Sec_tick_work
  1705  01CA  0020               	movlb	0	; select bank0
  1706  01CB  00B2               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  1707  01CC  3000               	movlw	high _Sec_tick_work
  1708  01CD  00B3               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  1709  01CE  3182  22EB  3181   	fcall	_TMR2_SetInterruptHandler
  1710  01D1                     l1618:
  1711                           
  1712                           ;main.c: 229:     TMR2_StartTimer();
  1713  01D1  3183  2317  3181   	fcall	_TMR2_StartTimer
  1714  01D4                     l1620:
  1715  01D4  0022               	movlb	2	; select bank2
  1716  01D5  108C               	bcf	12,1	;volatile
  1717  01D6                     l1622:
  1718  01D6  0024               	movlb	4	; select bank4
  1719  01D7  108C               	bcf	12,1	;volatile
  1720  01D8                     l1624:
  1721  01D8  0022               	movlb	2	; select bank2
  1722  01D9  110E               	bcf	14,2	;volatile
  1723  01DA                     l1626:
  1724  01DA  0024               	movlb	4	; select bank4
  1725  01DB  110E               	bcf	14,2	;volatile
  1726  01DC                     l1628:
  1727  01DC  0021               	movlb	1	; select bank1
  1728  01DD  100E               	bcf	14,0	;volatile
  1729  01DE                     l1630:
  1730  01DE  0022               	movlb	2	; select bank2
  1731  01DF  100E               	bcf	14,0	;volatile
  1732  01E0                     l1632:
  1733                           
  1734                           ;main.c: 241:     INTCONbits.TMR0IE = 0;
  1735  01E0  128B               	bcf	11,5	;volatile
  1736  01E1                     l1634:
  1737                           
  1738                           ;main.c: 242:     FLAGS.value = 0;
  1739  01E1  01FD               	clrf	_FLAGS
  1740  01E2                     l381:
  1741  01E2  0008               	return
  1742  01E3                     __end_of_start_setup:
  1743                           
  1744                           	psect	text3
  1745  0317                     __ptext3:	
  1746 ;; *************** function _TMR2_StartTimer *****************
  1747 ;; Defined at:
  1748 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;		None
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;		None
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      void 
  1755 ;; Registers used:
  1756 ;;		None
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMMON   BANK0   BANK1
  1762 ;;      Params:         0       0       0
  1763 ;;      Locals:         0       0       0
  1764 ;;      Temps:          0       0       0
  1765 ;;      Totals:         0       0       0
  1766 ;;Total ram usage:        0 bytes
  1767 ;; Hardware stack levels used: 1
  1768 ;; Hardware stack levels required when called: 6
  1769 ;; This function calls:
  1770 ;;		Nothing
  1771 ;; This function is called by:
  1772 ;;		_start_setup
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776  0317                     _TMR2_StartTimer:	
  1777                           ;psect for function _TMR2_StartTimer
  1778                           
  1779  0317                     l1516:	
  1780                           ;incstack = 0
  1781                           ; Regs used in _TMR2_StartTimer: []
  1782                           
  1783                           
  1784                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  1785  0317  0020               	movlb	0	; select bank0
  1786  0318  151C               	bsf	28,2	;volatile
  1787  0319                     l140:
  1788  0319  0008               	return
  1789  031A                     __end_of_TMR2_StartTimer:
  1790                           
  1791                           	psect	text4
  1792  0269                     __ptext4:	
  1793 ;; *************** function _SYSTEM_Initialize *****************
  1794 ;; Defined at:
  1795 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;		None
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;		None
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1    wreg      void 
  1802 ;; Registers used:
  1803 ;;		wreg, status,2, status,0, pclath, cstack
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1
  1809 ;;      Params:         0       0       0
  1810 ;;      Locals:         0       0       0
  1811 ;;      Temps:          0       0       0
  1812 ;;      Totals:         0       0       0
  1813 ;;Total ram usage:        0 bytes
  1814 ;; Hardware stack levels used: 1
  1815 ;; Hardware stack levels required when called: 8
  1816 ;; This function calls:
  1817 ;;		_ADC_Initialize
  1818 ;;		_OSCILLATOR_Initialize
  1819 ;;		_PIN_MANAGER_Initialize
  1820 ;;		_TMR0_Initialize
  1821 ;;		_TMR2_Initialize
  1822 ;;		_WDT_Initialize
  1823 ;; This function is called by:
  1824 ;;		_start_setup
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828  0269                     _SYSTEM_Initialize:	
  1829                           ;psect for function _SYSTEM_Initialize
  1830                           
  1831  0269                     l1514:	
  1832                           ;incstack = 0
  1833                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1834                           
  1835                           
  1836                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1837  0269  3182  223F  3182   	fcall	_PIN_MANAGER_Initialize
  1838                           
  1839                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1840  026C  3182  22DE  3182   	fcall	_OSCILLATOR_Initialize
  1841                           
  1842                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1843  026F  3183  2313  3182   	fcall	_WDT_Initialize
  1844                           
  1845                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  1846  0272  3182  227C  3182   	fcall	_TMR2_Initialize
  1847                           
  1848                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  1849  0275  3182  222A  3182   	fcall	_TMR0_Initialize
  1850                           
  1851                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  1852  0278  3182  22D6  3182   	fcall	_ADC_Initialize
  1853  027B                     l23:
  1854  027B  0008               	return
  1855  027C                     __end_of_SYSTEM_Initialize:
  1856                           
  1857                           	psect	text5
  1858  0313                     __ptext5:	
  1859 ;; *************** function _WDT_Initialize *****************
  1860 ;; Defined at:
  1861 ;;		line 71 in file "mcc_generated_files/mcc.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;		None
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;		None
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      void 
  1868 ;; Registers used:
  1869 ;;		wreg
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMMON   BANK0   BANK1
  1875 ;;      Params:         0       0       0
  1876 ;;      Locals:         0       0       0
  1877 ;;      Temps:          0       0       0
  1878 ;;      Totals:         0       0       0
  1879 ;;Total ram usage:        0 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; Hardware stack levels required when called: 6
  1882 ;; This function calls:
  1883 ;;		Nothing
  1884 ;; This function is called by:
  1885 ;;		_SYSTEM_Initialize
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889  0313                     _WDT_Initialize:	
  1890                           ;psect for function _WDT_Initialize
  1891                           
  1892  0313                     l1464:	
  1893                           ;incstack = 0
  1894                           ; Regs used in _WDT_Initialize: [wreg]
  1895                           
  1896                           
  1897                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x16;
  1898  0313  3016               	movlw	22
  1899  0314  0021               	movlb	1	; select bank1
  1900  0315  0097               	movwf	23	;volatile
  1901  0316                     l29:
  1902  0316  0008               	return
  1903  0317                     __end_of_WDT_Initialize:
  1904                           
  1905                           	psect	text6
  1906  027C                     __ptext6:	
  1907 ;; *************** function _TMR2_Initialize *****************
  1908 ;; Defined at:
  1909 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;		None
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;		None
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      void 
  1916 ;; Registers used:
  1917 ;;		wreg, status,2, status,0, pclath, cstack
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMMON   BANK0   BANK1
  1923 ;;      Params:         0       0       0
  1924 ;;      Locals:         0       0       0
  1925 ;;      Temps:          0       0       0
  1926 ;;      Totals:         0       0       0
  1927 ;;Total ram usage:        0 bytes
  1928 ;; Hardware stack levels used: 1
  1929 ;; Hardware stack levels required when called: 7
  1930 ;; This function calls:
  1931 ;;		_TMR2_SetInterruptHandler
  1932 ;; This function is called by:
  1933 ;;		_SYSTEM_Initialize
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937  027C                     _TMR2_Initialize:	
  1938                           ;psect for function _TMR2_Initialize
  1939                           
  1940  027C                     l1466:	
  1941                           ;incstack = 0
  1942                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1943                           
  1944                           
  1945                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x8D;
  1946  027C  308D               	movlw	141
  1947  027D  0020               	movlb	0	; select bank0
  1948  027E  009B               	movwf	27	;volatile
  1949  027F                     l1468:
  1950                           
  1951                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  1952  027F  019A               	clrf	26	;volatile
  1953  0280                     l1470:
  1954                           
  1955                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  1956  0280  1091               	bcf	17,1	;volatile
  1957  0281                     l1472:
  1958                           
  1959                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  1960  0281  0021               	movlb	1	; select bank1
  1961  0282  1491               	bsf	17,1	;volatile
  1962  0283                     l1474:
  1963                           
  1964                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  1965  0283  301A               	movlw	low _TMR2_DefaultInterruptHandler
  1966  0284  0020               	movlb	0	; select bank0
  1967  0285  00B2               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  1968  0286  3003               	movlw	high _TMR2_DefaultInterruptHandler
  1969  0287  00B3               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  1970  0288  3182  22EB  3182   	fcall	_TMR2_SetInterruptHandler
  1971  028B                     l1476:
  1972                           
  1973                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x57;
  1974  028B  3057               	movlw	87
  1975  028C  0020               	movlb	0	; select bank0
  1976  028D  009C               	movwf	28	;volatile
  1977  028E                     l137:
  1978  028E  0008               	return
  1979  028F                     __end_of_TMR2_Initialize:
  1980                           
  1981                           	psect	text7
  1982  02EB                     __ptext7:	
  1983 ;; *************** function _TMR2_SetInterruptHandler *****************
  1984 ;; Defined at:
  1985 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1988 ;;		 -> Sec_tick_work(1), TMR2_DefaultInterruptHandler(1), 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;		None
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		wreg
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMMON   BANK0   BANK1
  2000 ;;      Params:         0       2       0
  2001 ;;      Locals:         0       0       0
  2002 ;;      Temps:          0       0       0
  2003 ;;      Totals:         0       2       0
  2004 ;;Total ram usage:        2 bytes
  2005 ;; Hardware stack levels used: 1
  2006 ;; Hardware stack levels required when called: 6
  2007 ;; This function calls:
  2008 ;;		Nothing
  2009 ;; This function is called by:
  2010 ;;		_TMR2_Initialize
  2011 ;;		_start_setup
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015  02EB                     _TMR2_SetInterruptHandler:	
  2016                           ;psect for function _TMR2_SetInterruptHandler
  2017                           
  2018  02EB                     l1368:	
  2019                           ;incstack = 0
  2020                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2021                           
  2022                           
  2023                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  2024  02EB  0020               	movlb	0	; select bank0
  2025  02EC  0833               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2026  02ED  00B0               	movwf	_TMR2_InterruptHandler+1
  2027  02EE  0832               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2028  02EF  00AF               	movwf	_TMR2_InterruptHandler
  2029  02F0                     l165:
  2030  02F0  0008               	return
  2031  02F1                     __end_of_TMR2_SetInterruptHandler:
  2032                           
  2033                           	psect	text8
  2034  022A                     __ptext8:	
  2035 ;; *************** function _TMR0_Initialize *****************
  2036 ;; Defined at:
  2037 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;		None
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;		None
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, status,2, status,0, pclath, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMMON   BANK0   BANK1
  2051 ;;      Params:         0       0       0
  2052 ;;      Locals:         0       0       0
  2053 ;;      Temps:          0       1       0
  2054 ;;      Totals:         0       1       0
  2055 ;;Total ram usage:        1 bytes
  2056 ;; Hardware stack levels used: 1
  2057 ;; Hardware stack levels required when called: 7
  2058 ;; This function calls:
  2059 ;;		_TMR0_SetInterruptHandler
  2060 ;; This function is called by:
  2061 ;;		_SYSTEM_Initialize
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065  022A                     _TMR0_Initialize:	
  2066                           ;psect for function _TMR0_Initialize
  2067                           
  2068  022A                     l1478:	
  2069                           ;incstack = 0
  2070                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2071                           
  2072                           
  2073                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  2074  022A  0021               	movlb	1	; select bank1
  2075  022B  0815               	movf	21,w	;volatile
  2076  022C  39C0               	andlw	192
  2077  022D  3817               	iorlw	23
  2078  022E  0095               	movwf	21	;volatile
  2079  022F                     l1480:
  2080                           
  2081                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x16;
  2082  022F  3016               	movlw	22
  2083  0230  0020               	movlb	0	; select bank0
  2084  0231  0095               	movwf	21	;volatile
  2085  0232                     l1482:
  2086                           
  2087                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 22;
  2088  0232  3016               	movlw	22
  2089  0233  00B4               	movwf	??_TMR0_Initialize
  2090  0234  0834               	movf	??_TMR0_Initialize,w
  2091  0235  00B1               	movwf	_timer0ReloadVal	;volatile
  2092  0236                     l1484:
  2093                           
  2094                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  2095  0236  110B               	bcf	11,2	;volatile
  2096  0237                     l1486:
  2097                           
  2098                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2099  0237  301B               	movlw	low _TMR0_DefaultInterruptHandler
  2100  0238  00B2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2101  0239  3003               	movlw	high _TMR0_DefaultInterruptHandler
  2102  023A  00B3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2103  023B  3182  22F1  3182   	fcall	_TMR0_SetInterruptHandler
  2104  023E                     l185:
  2105  023E  0008               	return
  2106  023F                     __end_of_TMR0_Initialize:
  2107                           
  2108                           	psect	text9
  2109  02F1                     __ptext9:	
  2110 ;; *************** function _TMR0_SetInterruptHandler *****************
  2111 ;; Defined at:
  2112 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2115 ;;		 -> switch_zum(1), TMR0_DefaultInterruptHandler(1), 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;		None
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      void 
  2120 ;; Registers used:
  2121 ;;		wreg
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMMON   BANK0   BANK1
  2127 ;;      Params:         0       2       0
  2128 ;;      Locals:         0       0       0
  2129 ;;      Temps:          0       0       0
  2130 ;;      Totals:         0       2       0
  2131 ;;Total ram usage:        2 bytes
  2132 ;; Hardware stack levels used: 1
  2133 ;; Hardware stack levels required when called: 6
  2134 ;; This function calls:
  2135 ;;		Nothing
  2136 ;; This function is called by:
  2137 ;;		_TMR0_Initialize
  2138 ;;		_start_setup
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142  02F1                     _TMR0_SetInterruptHandler:	
  2143                           ;psect for function _TMR0_SetInterruptHandler
  2144                           
  2145  02F1                     l1370:	
  2146                           ;incstack = 0
  2147                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2148                           
  2149                           
  2150                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  2151  02F1  0020               	movlb	0	; select bank0
  2152  02F2  0833               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2153  02F3  00AE               	movwf	_TMR0_InterruptHandler+1
  2154  02F4  0832               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2155  02F5  00AD               	movwf	_TMR0_InterruptHandler
  2156  02F6                     l201:
  2157  02F6  0008               	return
  2158  02F7                     __end_of_TMR0_SetInterruptHandler:
  2159                           
  2160                           	psect	text10
  2161  023F                     __ptext10:	
  2162 ;; *************** function _PIN_MANAGER_Initialize *****************
  2163 ;; Defined at:
  2164 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;		None
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;		None
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  1    wreg      void 
  2171 ;; Registers used:
  2172 ;;		wreg, status,2
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMMON   BANK0   BANK1
  2178 ;;      Params:         0       0       0
  2179 ;;      Locals:         0       0       0
  2180 ;;      Temps:          0       0       0
  2181 ;;      Totals:         0       0       0
  2182 ;;Total ram usage:        0 bytes
  2183 ;; Hardware stack levels used: 1
  2184 ;; Hardware stack levels required when called: 6
  2185 ;; This function calls:
  2186 ;;		Nothing
  2187 ;; This function is called by:
  2188 ;;		_SYSTEM_Initialize
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192  023F                     _PIN_MANAGER_Initialize:	
  2193                           ;psect for function _PIN_MANAGER_Initialize
  2194                           
  2195  023F                     l1446:	
  2196                           ;incstack = 0
  2197                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2198                           
  2199                           
  2200                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2201  023F  0022               	movlb	2	; select bank2
  2202  0240  018C               	clrf	12	;volatile
  2203                           
  2204                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  2205  0241  018E               	clrf	14	;volatile
  2206  0242                     l1448:
  2207                           
  2208                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x0F;
  2209  0242  300F               	movlw	15
  2210  0243  0021               	movlb	1	; select bank1
  2211  0244  008C               	movwf	12	;volatile
  2212  0245                     l1450:
  2213                           
  2214                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x0C;
  2215  0245  300C               	movlw	12
  2216  0246  008E               	movwf	14	;volatile
  2217  0247                     l1452:
  2218                           
  2219                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x0C;
  2220  0247  300C               	movlw	12
  2221  0248  0023               	movlb	3	; select bank3
  2222  0249  008E               	movwf	14	;volatile
  2223  024A                     l1454:
  2224                           
  2225                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x07;
  2226  024A  3007               	movlw	7
  2227  024B  008C               	movwf	12	;volatile
  2228                           
  2229                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  2230  024C  0024               	movlb	4	; select bank4
  2231  024D  018C               	clrf	12	;volatile
  2232                           
  2233                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  2234  024E  018E               	clrf	14	;volatile
  2235  024F                     l1456:
  2236                           
  2237                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2238  024F  0021               	movlb	1	; select bank1
  2239  0250  1795               	bsf	21,7	;volatile
  2240                           
  2241                           ;mcc_generated_files/pin_manager.c: 86:     APFCON = 0x00;
  2242  0251  0022               	movlb	2	; select bank2
  2243  0252  019D               	clrf	29	;volatile
  2244  0253                     l90:
  2245  0253  0008               	return
  2246  0254                     __end_of_PIN_MANAGER_Initialize:
  2247                           
  2248                           	psect	text11
  2249  02DE                     __ptext11:	
  2250 ;; *************** function _OSCILLATOR_Initialize *****************
  2251 ;; Defined at:
  2252 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;		None
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, status,2
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1
  2266 ;;      Params:         0       0       0
  2267 ;;      Locals:         0       0       0
  2268 ;;      Temps:          0       0       0
  2269 ;;      Totals:         0       0       0
  2270 ;;Total ram usage:        0 bytes
  2271 ;; Hardware stack levels used: 1
  2272 ;; Hardware stack levels required when called: 6
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_SYSTEM_Initialize
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280  02DE                     _OSCILLATOR_Initialize:	
  2281                           ;psect for function _OSCILLATOR_Initialize
  2282                           
  2283  02DE                     l1458:	
  2284                           ;incstack = 0
  2285                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2286                           
  2287                           
  2288                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x68;
  2289  02DE  3068               	movlw	104
  2290  02DF  0021               	movlb	1	; select bank1
  2291  02E0  0099               	movwf	25	;volatile
  2292  02E1                     l1460:
  2293                           
  2294                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  2295  02E1  0198               	clrf	24	;volatile
  2296  02E2                     l1462:
  2297                           
  2298                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  2299  02E2  0022               	movlb	2	; select bank2
  2300  02E3  0196               	clrf	22	;volatile
  2301  02E4                     l26:
  2302  02E4  0008               	return
  2303  02E5                     __end_of_OSCILLATOR_Initialize:
  2304                           
  2305                           	psect	text12
  2306  02D6                     __ptext12:	
  2307 ;; *************** function _ADC_Initialize *****************
  2308 ;; Defined at:
  2309 ;;		line 67 in file "mcc_generated_files/adc.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;		None
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;		None
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  1    wreg      void 
  2316 ;; Registers used:
  2317 ;;		wreg, status,2
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMMON   BANK0   BANK1
  2323 ;;      Params:         0       0       0
  2324 ;;      Locals:         0       0       0
  2325 ;;      Temps:          0       0       0
  2326 ;;      Totals:         0       0       0
  2327 ;;Total ram usage:        0 bytes
  2328 ;; Hardware stack levels used: 1
  2329 ;; Hardware stack levels required when called: 6
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_SYSTEM_Initialize
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337  02D6                     _ADC_Initialize:	
  2338                           ;psect for function _ADC_Initialize
  2339                           
  2340  02D6                     l1488:	
  2341                           ;incstack = 0
  2342                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  2343                           
  2344                           
  2345                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x40;
  2346  02D6  3040               	movlw	64
  2347  02D7  0021               	movlb	1	; select bank1
  2348  02D8  009E               	movwf	30	;volatile
  2349  02D9                     l1490:
  2350                           
  2351                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  2352  02D9  019B               	clrf	27	;volatile
  2353  02DA                     l1492:
  2354                           
  2355                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  2356  02DA  019C               	clrf	28	;volatile
  2357                           
  2358                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  2359  02DB  3001               	movlw	1
  2360  02DC  009D               	movwf	29	;volatile
  2361  02DD                     l46:
  2362  02DD  0008               	return
  2363  02DE                     __end_of_ADC_Initialize:
  2364                           
  2365                           	psect	text13
  2366  02FD                     __ptext13:	
  2367 ;; *************** function _start_alarm *****************
  2368 ;; Defined at:
  2369 ;;		line 50 in file "main.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;		None
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;		None
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  2  252[None  ] int 
  2376 ;; Registers used:
  2377 ;;		None
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMMON   BANK0   BANK1
  2383 ;;      Params:         0       0       0
  2384 ;;      Locals:         0       0       0
  2385 ;;      Temps:          0       0       0
  2386 ;;      Totals:         0       0       0
  2387 ;;Total ram usage:        0 bytes
  2388 ;; Hardware stack levels used: 1
  2389 ;; Hardware stack levels required when called: 6
  2390 ;; This function calls:
  2391 ;;		Nothing
  2392 ;; This function is called by:
  2393 ;;		_main
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397  02FD                     _start_alarm:	
  2398                           ;psect for function _start_alarm
  2399                           
  2400  02FD                     l1578:	
  2401                           ;incstack = 0
  2402                           ; Regs used in _start_alarm: []
  2403                           
  2404                           
  2405                           ;main.c: 51:     FLAGS.bits.ALARM = 1;
  2406  02FD  147D               	bsf	_FLAGS,0
  2407  02FE                     l253:	
  2408                           ;main.c: 52:     do { LATCbits.LATC0 = 1; } while(0);
  2409                           
  2410  02FE  0022               	movlb	2	; select bank2
  2411  02FF  140E               	bsf	14,0	;volatile
  2412  0300                     l254:
  2413                           
  2414                           ;main.c: 53:     INTCONbits.TMR0IE = 1;
  2415  0300  168B               	bsf	11,5	;volatile
  2416  0301                     l255:
  2417  0301  0008               	return
  2418  0302                     __end_of_start_alarm:
  2419                           
  2420                           	psect	text14
  2421  015D                     __ptext14:	
  2422 ;; *************** function _povorot *****************
  2423 ;; Defined at:
  2424 ;;		line 180 in file "main.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;		None
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;		None
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg, status,2, status,0, pclath, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMMON   BANK0   BANK1
  2438 ;;      Params:         0       0       0
  2439 ;;      Locals:         0       0       0
  2440 ;;      Temps:          0       1       0
  2441 ;;      Totals:         0       1       0
  2442 ;;Total ram usage:        1 bytes
  2443 ;; Hardware stack levels used: 1
  2444 ;; Hardware stack levels required when called: 7
  2445 ;; This function calls:
  2446 ;;		_go_close
  2447 ;;		_go_open
  2448 ;; This function is called by:
  2449 ;;		_main
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453  015D                     _povorot:	
  2454                           ;psect for function _povorot
  2455                           
  2456  015D                     l1586:	
  2457                           ;incstack = 0
  2458                           ; Regs used in _povorot: [wreg+status,2+status,0+pclath+cstack]
  2459                           
  2460                           
  2461                           ;main.c: 181:     if (time_s > ROTATION_TIME &&
  2462  015D  0020               	movlb	0	; select bank0
  2463  015E  1BA3               	btfsc	_time_s+3,7
  2464  015F  296D               	goto	u731
  2465  0160  0823               	movf	_time_s+3,w
  2466  0161  1D03               	btfss	3,2
  2467  0162  296E               	goto	u730
  2468  0163  0822               	movf	_time_s+2,w
  2469  0164  1D03               	btfss	3,2
  2470  0165  296E               	goto	u730
  2471  0166  3001               	movlw	1
  2472  0167  0220               	subwf	_time_s,w
  2473  0168  3075               	movlw	117
  2474  0169  3B21               	subwfb	_time_s+1,w
  2475  016A  1C03               	btfss	3,0
  2476  016B  296D               	goto	u731
  2477  016C  296E               	goto	u730
  2478  016D                     u731:
  2479  016D  298D               	goto	l348
  2480  016E                     u730:
  2481  016E                     l1588:
  2482  016E  1D7D               	btfss	_FLAGS,2
  2483  016F  2971               	goto	u741
  2484  0170  2972               	goto	u740
  2485  0171                     u741:
  2486  0171  298D               	goto	l348
  2487  0172                     u740:
  2488  0172                     l1590:
  2489  0172  1CFD               	btfss	_FLAGS,1
  2490  0173  2975               	goto	u751
  2491  0174  2976               	goto	u750
  2492  0175                     u751:
  2493  0175  298D               	goto	l348
  2494  0176                     u750:
  2495  0176                     l1592:
  2496                           
  2497                           ;main.c: 185:             ) {;main.c: 186:         go_open();
  2498  0176  3182  2254  3181   	fcall	_go_open
  2499  0179                     l1594:
  2500                           
  2501                           ;main.c: 187:         _delay((unsigned long)((5)*(4000000/4000.0)));
  2502  0179  3007               	movlw	7
  2503  017A  0020               	movlb	0	; select bank0
  2504  017B  00B4               	movwf	??_povorot
  2505  017C  307D               	movlw	125
  2506  017D                     u907:
  2507  017D  0B89               	decfsz	9,f
  2508  017E  297D               	goto	u907
  2509  017F  0BB4               	decfsz	??_povorot,f
  2510  0180  297D               	goto	u907
  2511  0181                     l1596:
  2512                           
  2513                           ;main.c: 188:         go_close();
  2514  0181  3180  2076  3181   	fcall	_go_close
  2515                           
  2516                           ;main.c: 189:         time_s = 0;
  2517  0184  3000               	movlw	0
  2518  0185  0020               	movlb	0	; select bank0
  2519  0186  00A3               	movwf	_time_s+3
  2520  0187  3000               	movlw	0
  2521  0188  00A2               	movwf	_time_s+2
  2522  0189  3000               	movlw	0
  2523  018A  00A1               	movwf	_time_s+1
  2524  018B  3000               	movlw	0
  2525  018C  00A0               	movwf	_time_s
  2526  018D                     l348:
  2527  018D  0008               	return
  2528  018E                     __end_of_povorot:
  2529                           
  2530                           	psect	text15
  2531  02F7                     __ptext15:	
  2532 ;; *************** function _go_close_alt *****************
  2533 ;; Defined at:
  2534 ;;		line 78 in file "main.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;		None
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;		None
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		status,2
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMMON   BANK0   BANK1
  2548 ;;      Params:         0       0       0
  2549 ;;      Locals:         0       0       0
  2550 ;;      Temps:          0       0       0
  2551 ;;      Totals:         0       0       0
  2552 ;;Total ram usage:        0 bytes
  2553 ;; Hardware stack levels used: 1
  2554 ;; Hardware stack levels required when called: 6
  2555 ;; This function calls:
  2556 ;;		Nothing
  2557 ;; This function is called by:
  2558 ;;		_main
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562  02F7                     _go_close_alt:	
  2563                           ;psect for function _go_close_alt
  2564                           
  2565  02F7                     l1580:	
  2566                           ;incstack = 0
  2567                           ; Regs used in _go_close_alt: [status,2]
  2568                           
  2569                           
  2570                           ;main.c: 79:     watt = 0;
  2571  02F7  0020               	movlb	0	; select bank0
  2572  02F8  01AB               	clrf	_watt
  2573  02F9                     l1582:
  2574                           
  2575                           ;main.c: 80:     FLAGS.bits.FUN_OLD = 0;
  2576  02F9  117D               	bcf	_FLAGS,2
  2577  02FA                     l1584:
  2578  02FA  0022               	movlb	2	; select bank2
  2579  02FB  168E               	bsf	14,5	;volatile
  2580  02FC                     l279:
  2581  02FC  0008               	return
  2582  02FD                     __end_of_go_close_alt:
  2583                           
  2584                           	psect	text16
  2585  01FD                     __ptext16:	
  2586 ;; *************** function _fun_work *****************
  2587 ;; Defined at:
  2588 ;;		line 193 in file "main.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;		None
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;		None
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      void 
  2595 ;; Registers used:
  2596 ;;		wreg, status,2, status,0, pclath, cstack
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMMON   BANK0   BANK1
  2602 ;;      Params:         0       0       0
  2603 ;;      Locals:         0       0       0
  2604 ;;      Temps:          0       0       0
  2605 ;;      Totals:         0       0       0
  2606 ;;Total ram usage:        0 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; Hardware stack levels required when called: 7
  2609 ;; This function calls:
  2610 ;;		_go_close
  2611 ;;		_go_open
  2612 ;; This function is called by:
  2613 ;;		_main
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617  01FD                     _fun_work:	
  2618                           ;psect for function _fun_work
  2619                           
  2620  01FD                     l1598:	
  2621                           ;incstack = 0
  2622                           ; Regs used in _fun_work: [wreg+status,2+status,0+pclath+cstack]
  2623                           
  2624                           
  2625                           ;main.c: 195:     {;main.c: 196:         if (~FLAGS.bits.FUN_NEW) {
  2626  01FD  1D7D               	btfss	_FLAGS,2
  2627  01FE  2A00               	goto	u761
  2628  01FF  2A01               	goto	u760
  2629  0200                     u761:
  2630  0200  2A0B               	goto	l351
  2631  0201                     u760:
  2632  0201                     l1600:
  2633                           
  2634                           ;main.c: 197:             go_close();
  2635  0201  3180  2076  3181   	fcall	_go_close
  2636  0204                     l1602:
  2637                           
  2638                           ;main.c: 198:             FLAGS.bits.FUN_OLD = FLAGS.bits.FUN_NEW;
  2639  0204  19FD               	btfsc	_FLAGS,3
  2640  0205  2A07               	goto	u771
  2641  0206  2A09               	goto	u770
  2642  0207                     u771:
  2643  0207  157D               	bsf	_FLAGS,2
  2644  0208  2A0A               	goto	u784
  2645  0209                     u770:
  2646  0209  117D               	bcf	_FLAGS,2
  2647  020A                     u784:
  2648  020A  2A13               	goto	l355
  2649  020B                     l351:
  2650                           
  2651                           ;main.c: 201:         if (FLAGS.bits.FUN_NEW) {
  2652  020B  1DFD               	btfss	_FLAGS,3
  2653  020C  2A0E               	goto	u791
  2654  020D  2A0F               	goto	u790
  2655  020E                     u791:
  2656  020E  2A13               	goto	l355
  2657  020F                     u790:
  2658  020F                     l1604:
  2659                           
  2660                           ;main.c: 202:             go_open();
  2661  020F  3182  2254  3181   	fcall	_go_open
  2662  0212  2A04               	goto	l1602
  2663  0213                     l355:
  2664  0213  0008               	return
  2665  0214                     __end_of_fun_work:
  2666                           
  2667                           	psect	text17
  2668  0254                     __ptext17:	
  2669 ;; *************** function _go_open *****************
  2670 ;; Defined at:
  2671 ;;		line 84 in file "main.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;		None
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;		None
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      void 
  2678 ;; Registers used:
  2679 ;;		wreg
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMMON   BANK0   BANK1
  2685 ;;      Params:         0       0       0
  2686 ;;      Locals:         0       0       0
  2687 ;;      Temps:          0       0       0
  2688 ;;      Totals:         0       0       0
  2689 ;;Total ram usage:        0 bytes
  2690 ;; Hardware stack levels used: 1
  2691 ;; Hardware stack levels required when called: 6
  2692 ;; This function calls:
  2693 ;;		Nothing
  2694 ;; This function is called by:
  2695 ;;		_povorot
  2696 ;;		_fun_work
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700  0254                     _go_open:	
  2701                           ;psect for function _go_open
  2702                           
  2703  0254                     l1548:	
  2704                           ;incstack = 0
  2705                           ; Regs used in _go_open: [wreg]
  2706                           
  2707                           
  2708                           ;main.c: 86:     watt = 1;
  2709  0254  0020               	movlb	0	; select bank0
  2710  0255  01AB               	clrf	_watt
  2711  0256  0AAB               	incf	_watt,f
  2712                           
  2713                           ;main.c: 87:     FLAGS.bits.FUN_OLD = 1;
  2714  0257  157D               	bsf	_FLAGS,2
  2715  0258                     l1550:
  2716                           
  2717                           ;main.c: 89:     time_s = 0;
  2718  0258  3000               	movlw	0
  2719  0259  00A3               	movwf	_time_s+3
  2720  025A  3000               	movlw	0
  2721  025B  00A2               	movwf	_time_s+2
  2722  025C  3000               	movlw	0
  2723  025D  00A1               	movwf	_time_s+1
  2724  025E  3000               	movlw	0
  2725  025F  00A0               	movwf	_time_s
  2726  0260                     l1552:
  2727  0260  0022               	movlb	2	; select bank2
  2728  0261  168E               	bsf	14,5	;volatile
  2729  0262                     l283:
  2730                           
  2731                           ;main.c: 91:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2732  0262  30C8               	movlw	200
  2733  0263                     u917:
  2734  0263  3200               	nop2
  2735  0264  0B89               	decfsz	9,f
  2736  0265  2A63               	goto	u917
  2737  0266                     l1554:
  2738  0266  0022               	movlb	2	; select bank2
  2739  0267  128E               	bcf	14,5	;volatile
  2740  0268                     l286:
  2741  0268  0008               	return
  2742  0269                     __end_of_go_open:
  2743                           
  2744                           	psect	text18
  2745  0076                     __ptext18:	
  2746 ;; *************** function _go_close *****************
  2747 ;; Defined at:
  2748 ;;		line 61 in file "main.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;		None
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;  i               1    1[BANK0 ] unsigned char 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		wreg, status,2, status,0
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMMON   BANK0   BANK1
  2762 ;;      Params:         0       0       0
  2763 ;;      Locals:         0       1       0
  2764 ;;      Temps:          0       1       0
  2765 ;;      Totals:         0       2       0
  2766 ;;Total ram usage:        2 bytes
  2767 ;; Hardware stack levels used: 1
  2768 ;; Hardware stack levels required when called: 6
  2769 ;; This function calls:
  2770 ;;		Nothing
  2771 ;; This function is called by:
  2772 ;;		_povorot
  2773 ;;		_fun_work
  2774 ;;		_main
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778  0076                     _go_close:	
  2779                           ;psect for function _go_close
  2780                           
  2781  0076                     l1522:	
  2782                           ;incstack = 0
  2783                           ; Regs used in _go_close: [wreg+status,2+status,0]
  2784                           
  2785                           
  2786                           ;main.c: 63:     watt = 0;
  2787  0076  0020               	movlb	0	; select bank0
  2788  0077  01AB               	clrf	_watt
  2789  0078                     l1524:
  2790  0078  0022               	movlb	2	; select bank2
  2791  0079  160E               	bsf	14,4	;volatile
  2792  007A                     l1526:
  2793                           
  2794                           ;main.c: 66:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2795  007A  3007               	movlw	7
  2796  007B  0020               	movlb	0	; select bank0
  2797  007C  00B2               	movwf	??_go_close
  2798  007D  307D               	movlw	125
  2799  007E                     u927:
  2800  007E  0B89               	decfsz	9,f
  2801  007F  287E               	goto	u927
  2802  0080  0BB2               	decfsz	??_go_close,f
  2803  0081  287E               	goto	u927
  2804  0082                     l1528:
  2805  0082  0022               	movlb	2	; select bank2
  2806  0083  168E               	bsf	14,5	;volatile
  2807  0084                     l1530:
  2808                           
  2809                           ;main.c: 68:     for (char i = 0; i < 120; i++) {
  2810  0084  0020               	movlb	0	; select bank0
  2811  0085  01B3               	clrf	go_close@i
  2812  0086                     l1534:
  2813  0086  1003               	clrc
  2814  0087  0022               	movlb	2	; select bank2
  2815  0088  1E0C               	btfss	12,4	;volatile
  2816  0089  1403               	setc
  2817  008A  1803               	btfsc	3,0
  2818  008B  288D               	goto	u651
  2819  008C  2890               	goto	u650
  2820  008D                     u651:
  2821  008D  0022               	movlb	2	; select bank2
  2822  008E  160C               	bsf	12,4	;volatile
  2823  008F  2892               	goto	u664
  2824  0090                     u650:
  2825  0090  0022               	movlb	2	; select bank2
  2826  0091  120C               	bcf	12,4	;volatile
  2827  0092                     u664:
  2828  0092                     l1536:
  2829                           
  2830                           ;main.c: 70:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2831  0092  300D               	movlw	13
  2832  0093  0020               	movlb	0	; select bank0
  2833  0094  00B2               	movwf	??_go_close
  2834  0095  30FB               	movlw	251
  2835  0096                     u937:
  2836  0096  0B89               	decfsz	9,f
  2837  0097  2896               	goto	u937
  2838  0098  0BB2               	decfsz	??_go_close,f
  2839  0099  2896               	goto	u937
  2840  009A  3200               	nop2
  2841  009B                     l1538:
  2842                           
  2843                           ;main.c: 71:     }
  2844  009B  3001               	movlw	1
  2845  009C  0020               	movlb	0	; select bank0
  2846  009D  00B2               	movwf	??_go_close
  2847  009E  0832               	movf	??_go_close,w
  2848  009F  07B3               	addwf	go_close@i,f
  2849  00A0                     l1540:
  2850  00A0  3078               	movlw	120
  2851  00A1  0233               	subwf	go_close@i,w
  2852  00A2  1C03               	skipc
  2853  00A3  28A5               	goto	u671
  2854  00A4  28A6               	goto	u670
  2855  00A5                     u671:
  2856  00A5  2886               	goto	l1534
  2857  00A6                     u670:
  2858  00A6                     l270:	
  2859                           ;main.c: 72:     do { LATCbits.LATC5 = 0; } while(0);
  2860                           
  2861  00A6  0022               	movlb	2	; select bank2
  2862  00A7  128E               	bcf	14,5	;volatile
  2863  00A8                     l1542:
  2864                           
  2865                           ;main.c: 73:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2866  00A8  3007               	movlw	7
  2867  00A9  0020               	movlb	0	; select bank0
  2868  00AA  00B2               	movwf	??_go_close
  2869  00AB  307D               	movlw	125
  2870  00AC                     u947:
  2871  00AC  0B89               	decfsz	9,f
  2872  00AD  28AC               	goto	u947
  2873  00AE  0BB2               	decfsz	??_go_close,f
  2874  00AF  28AC               	goto	u947
  2875  00B0                     l1544:
  2876  00B0  0022               	movlb	2	; select bank2
  2877  00B1  120E               	bcf	14,4	;volatile
  2878  00B2                     l274:
  2879  00B2  0008               	return
  2880  00B3                     __end_of_go_close:
  2881                           
  2882                           	psect	intentry
  2883  0004                     __pintentry:	
  2884 ;; *************** function _INTERRUPT_InterruptManager *****************
  2885 ;; Defined at:
  2886 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;		None
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0, pclath, cstack
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1
  2900 ;;      Params:         0       0       0
  2901 ;;      Locals:         0       0       0
  2902 ;;      Temps:          0       0       0
  2903 ;;      Totals:         0       0       0
  2904 ;;Total ram usage:        0 bytes
  2905 ;; Hardware stack levels used: 1
  2906 ;; Hardware stack levels required when called: 5
  2907 ;; This function calls:
  2908 ;;		_TMR0_ISR
  2909 ;;		_TMR2_ISR
  2910 ;; This function is called by:
  2911 ;;		Interrupt level 1
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915  0004                     _INTERRUPT_InterruptManager:
  2916                           
  2917                           ;incstack = 0
  2918  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2919                           
  2920                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2921  0005  3180               	pagesel	$
  2922  0006                     i1l1636:
  2923                           
  2924                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  2925  0006  1E8B               	btfss	11,5	;volatile
  2926  0007  2809               	goto	u81_21
  2927  0008  280A               	goto	u81_20
  2928  0009                     u81_21:
  2929  0009  2812               	goto	i1l108
  2930  000A                     u81_20:
  2931  000A                     i1l1638:
  2932  000A  1D0B               	btfss	11,2	;volatile
  2933  000B  280D               	goto	u82_21
  2934  000C  280E               	goto	u82_20
  2935  000D                     u82_21:
  2936  000D  2812               	goto	i1l108
  2937  000E                     u82_20:
  2938  000E                     i1l1640:
  2939                           
  2940                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  2941  000E  3182  22B1  3180   	fcall	_TMR0_ISR
  2942                           
  2943                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  2944  0011  2824               	goto	i1l114
  2945  0012                     i1l108:	
  2946                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  2947                           
  2948  0012  1F0B               	btfss	11,6	;volatile
  2949  0013  2815               	goto	u83_21
  2950  0014  2816               	goto	u83_20
  2951  0015                     u83_21:
  2952  0015  2824               	goto	i1l114
  2953  0016                     u83_20:
  2954  0016                     i1l1642:
  2955                           
  2956                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  2957  0016  0021               	movlb	1	; select bank1
  2958  0017  1C91               	btfss	17,1	;volatile
  2959  0018  281A               	goto	u84_21
  2960  0019  281B               	goto	u84_20
  2961  001A                     u84_21:
  2962  001A  2824               	goto	i1l113
  2963  001B                     u84_20:
  2964  001B                     i1l1644:
  2965  001B  0020               	movlb	0	; select bank0
  2966  001C  1C91               	btfss	17,1	;volatile
  2967  001D  281F               	goto	u85_21
  2968  001E  2820               	goto	u85_20
  2969  001F                     u85_21:
  2970  001F  2824               	goto	i1l113
  2971  0020                     u85_20:
  2972  0020                     i1l1646:
  2973                           
  2974                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
  2975  0020  3182  2214  3180   	fcall	_TMR2_ISR
  2976                           
  2977                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  2978  0023  2824               	goto	i1l114
  2979  0024                     i1l113:	
  2980                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  2981                           
  2982  0024                     i1l114:
  2983  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2984  0025  0009               	retfie
  2985  0026                     __end_of_INTERRUPT_InterruptManager:
  2986                           
  2987                           	psect	text20
  2988  0214                     __ptext20:	
  2989 ;; *************** function _TMR2_ISR *****************
  2990 ;; Defined at:
  2991 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      void 
  2998 ;; Registers used:
  2999 ;;		wreg, status,2, status,0, pclath, cstack
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1
  3005 ;;      Params:         0       0       0
  3006 ;;      Locals:         0       0       0
  3007 ;;      Temps:          0       0       0
  3008 ;;      Totals:         0       0       0
  3009 ;;Total ram usage:        0 bytes
  3010 ;; Hardware stack levels used: 1
  3011 ;; Hardware stack levels required when called: 4
  3012 ;; This function calls:
  3013 ;;		_TMR2_CallBack
  3014 ;; This function is called by:
  3015 ;;		_INTERRUPT_InterruptManager
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019  0214                     _TMR2_ISR:	
  3020                           ;psect for function _TMR2_ISR
  3021                           
  3022  0214                     i1l1570:	
  3023                           ;incstack = 0
  3024                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  3025                           
  3026                           
  3027                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
  3028  0214  0020               	movlb	0	; select bank0
  3029  0215  1091               	bcf	17,1	;volatile
  3030  0216                     i1l1572:
  3031                           
  3032                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 10)
  3033  0216  3001               	movlw	1
  3034  0217  07A6               	addwf	TMR2_ISR@CountCallBack,f	;volatile
  3035  0218  3000               	movlw	0
  3036  0219  3DA7               	addwfc	TMR2_ISR@CountCallBack+1,f	;volatile
  3037  021A  3000               	movlw	0
  3038  021B  0227               	subwf	TMR2_ISR@CountCallBack+1,w	;volatile
  3039  021C  300A               	movlw	10
  3040  021D  1903               	skipnz
  3041  021E  0226               	subwf	TMR2_ISR@CountCallBack,w	;volatile
  3042  021F  1C03               	skipc
  3043  0220  2A22               	goto	u72_21
  3044  0221  2A23               	goto	u72_20
  3045  0222                     u72_21:
  3046  0222  2A29               	goto	i1l158
  3047  0223                     u72_20:
  3048  0223                     i1l1574:
  3049                           
  3050                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
  3051  0223  3182  22C1  3182   	fcall	_TMR2_CallBack
  3052  0226                     i1l1576:
  3053                           
  3054                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
  3055  0226  0020               	movlb	0	; select bank0
  3056  0227  01A6               	clrf	TMR2_ISR@CountCallBack	;volatile
  3057  0228  01A7               	clrf	TMR2_ISR@CountCallBack+1	;volatile
  3058  0229                     i1l158:
  3059  0229  0008               	return
  3060  022A                     __end_of_TMR2_ISR:
  3061                           
  3062                           	psect	text21
  3063  02C1                     __ptext21:	
  3064 ;; *************** function _TMR2_CallBack *****************
  3065 ;; Defined at:
  3066 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;		None
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;		None
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  1    wreg      void 
  3073 ;; Registers used:
  3074 ;;		wreg, status,2, status,0, pclath, cstack
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMMON   BANK0   BANK1
  3080 ;;      Params:         0       0       0
  3081 ;;      Locals:         0       0       0
  3082 ;;      Temps:          0       0       0
  3083 ;;      Totals:         0       0       0
  3084 ;;Total ram usage:        0 bytes
  3085 ;; Hardware stack levels used: 1
  3086 ;; Hardware stack levels required when called: 3
  3087 ;; This function calls:
  3088 ;;		Absolute function
  3089 ;;		_Sec_tick_work
  3090 ;;		_TMR2_DefaultInterruptHandler
  3091 ;; This function is called by:
  3092 ;;		_TMR2_ISR
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096  02C1                     _TMR2_CallBack:	
  3097                           ;psect for function _TMR2_CallBack
  3098                           
  3099  02C1                     i1l1518:	
  3100                           ;incstack = 0
  3101                           ; Regs used in _TMR2_CallBack: [wreg+status,2+status,0+pclath+cstack]
  3102                           
  3103                           
  3104                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
  3105  02C1  0020               	movlb	0	; select bank0
  3106  02C2  082F               	movf	_TMR2_InterruptHandler,w
  3107  02C3  0430               	iorwf	_TMR2_InterruptHandler+1,w
  3108  02C4  1903               	btfsc	3,2
  3109  02C5  2AC7               	goto	u64_21
  3110  02C6  2AC8               	goto	u64_20
  3111  02C7                     u64_21:
  3112  02C7  2ACD               	goto	i1l162
  3113  02C8                     u64_20:
  3114  02C8                     i1l1520:
  3115                           
  3116                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
  3117  02C8  0830               	movf	_TMR2_InterruptHandler+1,w
  3118  02C9  008A               	movwf	10
  3119  02CA  082F               	movf	_TMR2_InterruptHandler,w
  3120  02CB  000A               	callw
  3121  02CC  3182               	pagesel	$
  3122  02CD                     i1l162:
  3123  02CD  0008               	return
  3124  02CE                     __end_of_TMR2_CallBack:
  3125                           
  3126                           	psect	text22
  3127  0038                     __ptext22:	
  3128 ;; *************** function _Sec_tick_work *****************
  3129 ;; Defined at:
  3130 ;;		line 153 in file "main.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;		None
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;		None
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      void 
  3137 ;; Registers used:
  3138 ;;		wreg, status,2, status,0, pclath, cstack
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMMON   BANK0   BANK1
  3144 ;;      Params:         0       0       0
  3145 ;;      Locals:         0       0       0
  3146 ;;      Temps:          1       0       0
  3147 ;;      Totals:         1       0       0
  3148 ;;Total ram usage:        1 bytes
  3149 ;; Hardware stack levels used: 1
  3150 ;; Hardware stack levels required when called: 2
  3151 ;; This function calls:
  3152 ;;		_get_fun
  3153 ;;		_get_jump
  3154 ;;		_get_measure
  3155 ;;		_toggle_tone
  3156 ;; This function is called by:
  3157 ;;		_start_setup
  3158 ;;		_TMR2_CallBack
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162  0038                     _Sec_tick_work:	
  3163                           ;psect for function _Sec_tick_work
  3164                           
  3165  0038                     i1l1494:	
  3166                           ;incstack = 0
  3167                           ; Regs used in _Sec_tick_work: [wreg+status,2+status,0+pclath+cstack]
  3168                           
  3169                           
  3170                           ;main.c: 159:         time_s++;
  3171  0038  3001               	movlw	1
  3172  0039  0020               	movlb	0	; select bank0
  3173  003A  07A0               	addwf	_time_s,f
  3174  003B  3000               	movlw	0
  3175  003C  3DA1               	addwfc	_time_s+1,f
  3176  003D  3000               	movlw	0
  3177  003E  3DA2               	addwfc	_time_s+2,f
  3178  003F  3000               	movlw	0
  3179  0040  3DA3               	addwfc	_time_s+3,f
  3180  0041                     i1l1496:
  3181                           
  3182                           ;main.c: 161:         if (FLAGS.bits.ALARM) {
  3183  0041  1C7D               	btfss	_FLAGS,0
  3184  0042  2844               	goto	u58_21
  3185  0043  2845               	goto	u58_20
  3186  0044                     u58_21:
  3187  0044  2855               	goto	i1l1502
  3188  0045                     u58_20:
  3189  0045                     i1l1498:
  3190  0045  1003               	clrc
  3191  0046  0022               	movlb	2	; select bank2
  3192  0047  1E0C               	btfss	12,4	;volatile
  3193  0048  1403               	setc
  3194  0049  1803               	btfsc	3,0
  3195  004A  284C               	goto	u59_21
  3196  004B  284F               	goto	u59_20
  3197  004C                     u59_21:
  3198  004C  0022               	movlb	2	; select bank2
  3199  004D  160C               	bsf	12,4	;volatile
  3200  004E  2851               	goto	u60_24
  3201  004F                     u59_20:
  3202  004F  0022               	movlb	2	; select bank2
  3203  0050  120C               	bcf	12,4	;volatile
  3204  0051                     u60_24:
  3205  0051                     i1l1500:
  3206                           
  3207                           ;main.c: 163:             toggle_tone();
  3208  0051  3182  228F  3180   	fcall	_toggle_tone
  3209                           
  3210                           ;main.c: 164:         } else {
  3211  0054  2875               	goto	i1l344
  3212  0055                     i1l1502:
  3213                           
  3214                           ;main.c: 165:             get_measure();
  3215  0055  3181  218E  3180   	fcall	_get_measure
  3216                           
  3217                           ;main.c: 166:             get_jump();
  3218  0058  3180  20B3  3180   	fcall	_get_jump
  3219                           
  3220                           ;main.c: 167:             get_fun();
  3221  005B  3180  20F0  3180   	fcall	_get_fun
  3222  005E                     i1l1504:
  3223                           
  3224                           ;main.c: 168:             static char iled;;main.c: 169:             iled++;
  3225  005E  3001               	movlw	1
  3226  005F  00F7               	movwf	??_Sec_tick_work
  3227  0060  0877               	movf	??_Sec_tick_work,w
  3228  0061  07F8               	addwf	Sec_tick_work@iled,f
  3229  0062                     i1l1506:
  3230                           
  3231                           ;main.c: 170:             if (iled > 2) {
  3232  0062  3003               	movlw	3
  3233  0063  0278               	subwf	Sec_tick_work@iled,w
  3234  0064  1C03               	skipc
  3235  0065  2867               	goto	u61_21
  3236  0066  2868               	goto	u61_20
  3237  0067                     u61_21:
  3238  0067  2875               	goto	i1l344
  3239  0068                     u61_20:
  3240  0068                     i1l1508:
  3241  0068  1003               	clrc
  3242  0069  0022               	movlb	2	; select bank2
  3243  006A  1E0C               	btfss	12,4	;volatile
  3244  006B  1403               	setc
  3245  006C  1803               	btfsc	3,0
  3246  006D  286F               	goto	u62_21
  3247  006E  2872               	goto	u62_20
  3248  006F                     u62_21:
  3249  006F  0022               	movlb	2	; select bank2
  3250  0070  160C               	bsf	12,4	;volatile
  3251  0071  2874               	goto	u63_24
  3252  0072                     u62_20:
  3253  0072  0022               	movlb	2	; select bank2
  3254  0073  120C               	bcf	12,4	;volatile
  3255  0074                     u63_24:
  3256  0074                     i1l1510:
  3257                           
  3258                           ;main.c: 172:                 iled = 0;
  3259  0074  01F8               	clrf	Sec_tick_work@iled
  3260  0075                     i1l344:
  3261  0075  0008               	return
  3262  0076                     __end_of_Sec_tick_work:
  3263                           
  3264                           	psect	text23
  3265  031A                     __ptext23:	
  3266 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  3267 ;; Defined at:
  3268 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;		None
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;		None
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		None
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMMON   BANK0   BANK1
  3282 ;;      Params:         0       0       0
  3283 ;;      Locals:         0       0       0
  3284 ;;      Temps:          0       0       0
  3285 ;;      Totals:         0       0       0
  3286 ;;Total ram usage:        0 bytes
  3287 ;; Hardware stack levels used: 1
  3288 ;; This function calls:
  3289 ;;		Nothing
  3290 ;; This function is called by:
  3291 ;;		_TMR2_Initialize
  3292 ;;		_TMR2_CallBack
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296  031A                     _TMR2_DefaultInterruptHandler:	
  3297                           ;psect for function _TMR2_DefaultInterruptHandler
  3298                           
  3299  031A                     i1l168:	
  3300                           ;incstack = 0
  3301                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  3302                           
  3303  031A  0008               	return
  3304  031B                     __end_of_TMR2_DefaultInterruptHandler:
  3305                           
  3306                           	psect	text24
  3307  028F                     __ptext24:	
  3308 ;; *************** function _toggle_tone *****************
  3309 ;; Defined at:
  3310 ;;		line 56 in file "main.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;		None
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		status,0
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMMON   BANK0   BANK1
  3324 ;;      Params:         0       0       0
  3325 ;;      Locals:         0       0       0
  3326 ;;      Temps:          0       0       0
  3327 ;;      Totals:         0       0       0
  3328 ;;Total ram usage:        0 bytes
  3329 ;; Hardware stack levels used: 1
  3330 ;; This function calls:
  3331 ;;		Nothing
  3332 ;; This function is called by:
  3333 ;;		_Sec_tick_work
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337  028F                     _toggle_tone:	
  3338                           ;psect for function _toggle_tone
  3339                           
  3340  028F                     i1l1372:	
  3341                           ;incstack = 0
  3342                           ; Regs used in _toggle_tone: [status,0]
  3343                           
  3344                           
  3345                           ;main.c: 57:     if (FLAGS.bits.ALARM) TRISAbits.TRISA5 = ~TRISAbits.TRISA5;
  3346  028F  1C7D               	btfss	_FLAGS,0
  3347  0290  2A92               	goto	u46_21
  3348  0291  2A93               	goto	u46_20
  3349  0292                     u46_21:
  3350  0292  2A9F               	goto	i1l259
  3351  0293                     u46_20:
  3352  0293                     i1l1374:
  3353  0293  1003               	clrc
  3354  0294  0021               	movlb	1	; select bank1
  3355  0295  1E8C               	btfss	12,5	;volatile
  3356  0296  1403               	setc
  3357  0297  1803               	btfsc	3,0
  3358  0298  2A9A               	goto	u47_21
  3359  0299  2A9D               	goto	u47_20
  3360  029A                     u47_21:
  3361  029A  0021               	movlb	1	; select bank1
  3362  029B  168C               	bsf	12,5	;volatile
  3363  029C  2A9F               	goto	u48_24
  3364  029D                     u47_20:
  3365  029D  0021               	movlb	1	; select bank1
  3366  029E  128C               	bcf	12,5	;volatile
  3367  029F                     u48_24:
  3368  029F                     i1l259:
  3369  029F  0008               	return
  3370  02A0                     __end_of_toggle_tone:
  3371                           
  3372                           	psect	text25
  3373  018E                     __ptext25:	
  3374 ;; *************** function _get_measure *****************
  3375 ;; Defined at:
  3376 ;;		line 102 in file "main.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;  res             2    5[COMMON] unsigned int 
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1    wreg      void 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0, pclath, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMMON   BANK0   BANK1
  3390 ;;      Params:         0       0       0
  3391 ;;      Locals:         2       0       0
  3392 ;;      Temps:          1       0       0
  3393 ;;      Totals:         3       0       0
  3394 ;;Total ram usage:        3 bytes
  3395 ;; Hardware stack levels used: 1
  3396 ;; Hardware stack levels required when called: 1
  3397 ;; This function calls:
  3398 ;;		_ADC_GetConversion
  3399 ;;		i1_start_alarm
  3400 ;; This function is called by:
  3401 ;;		_Sec_tick_work
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405  018E                     _get_measure:	
  3406                           ;psect for function _get_measure
  3407                           
  3408  018E                     i1l296:	
  3409                           ;incstack = 0
  3410                           ; Regs used in _get_measure: [wreg+status,2+status,0+pclath+cstack]
  3411                           ;main.c: 103:     static unsigned char measures;;main.c: 104:     do { LATCbits.LATC1 = 
      +                          1; } while(0);
  3412                           
  3413  018E  0022               	movlb	2	; select bank2
  3414  018F  148E               	bsf	14,1	;volatile
  3415  0190                     i1l1378:
  3416                           
  3417                           ;main.c: 105:     unsigned res = ADC_GetConversion(PIN_WSP_STATE);
  3418  0190  3007               	movlw	7
  3419  0191  3181  21E3  3181   	fcall	_ADC_GetConversion
  3420  0194  0871               	movf	?_ADC_GetConversion+1,w
  3421  0195  00F6               	movwf	get_measure@res+1
  3422  0196  0870               	movf	?_ADC_GetConversion,w
  3423  0197  00F5               	movwf	get_measure@res
  3424  0198                     i1l1380:
  3425  0198  0022               	movlb	2	; select bank2
  3426  0199  108E               	bcf	14,1	;volatile
  3427  019A                     i1l1382:
  3428                           
  3429                           ;main.c: 109:     if (res < BAD_WSP_VOLTAGE) measures++;
  3430  019A  304E               	movlw	78
  3431  019B  0276               	subwf	get_measure@res+1,w
  3432  019C  3020               	movlw	32
  3433  019D  1903               	skipnz
  3434  019E  0275               	subwf	get_measure@res,w
  3435  019F  1803               	skipnc
  3436  01A0  29A2               	goto	u49_21
  3437  01A1  29A3               	goto	u49_20
  3438  01A2                     u49_21:
  3439  01A2  29A8               	goto	i1l1386
  3440  01A3                     u49_20:
  3441  01A3                     i1l1384:
  3442  01A3  3001               	movlw	1
  3443  01A4  00F4               	movwf	??_get_measure
  3444  01A5  0874               	movf	??_get_measure,w
  3445  01A6  07FB               	addwf	get_measure@measures,f
  3446  01A7  29B2               	goto	i1l1390
  3447  01A8                     i1l1386:
  3448  01A8  309C               	movlw	156
  3449  01A9  0276               	subwf	get_measure@res+1,w
  3450  01AA  3041               	movlw	65
  3451  01AB  1903               	skipnz
  3452  01AC  0275               	subwf	get_measure@res,w
  3453  01AD  1C03               	skipc
  3454  01AE  29B0               	goto	u50_21
  3455  01AF  29B1               	goto	u50_20
  3456  01B0                     u50_21:
  3457  01B0  29B2               	goto	i1l1390
  3458  01B1                     u50_20:
  3459  01B1                     i1l1388:
  3460  01B1  01FB               	clrf	get_measure@measures
  3461  01B2                     i1l1390:
  3462                           
  3463                           ;main.c: 111:     if (measures > 2) start_alarm();
  3464  01B2  3003               	movlw	3
  3465  01B3  027B               	subwf	get_measure@measures,w
  3466  01B4  1C03               	skipc
  3467  01B5  29B7               	goto	u51_21
  3468  01B6  29B8               	goto	u51_20
  3469  01B7                     u51_21:
  3470  01B7  29BB               	goto	i1l304
  3471  01B8                     u51_20:
  3472  01B8                     i1l1392:
  3473  01B8  3183  2302  3181   	fcall	i1_start_alarm
  3474  01BB                     i1l304:
  3475  01BB  0008               	return
  3476  01BC                     __end_of_get_measure:
  3477                           
  3478                           	psect	text26
  3479  0302                     __ptext26:	
  3480 ;; *************** function i1_start_alarm *****************
  3481 ;; Defined at:
  3482 ;;		line 50 in file "main.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;		None
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  2    0[None  ] int 
  3489 ;; Registers used:
  3490 ;;		None
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMMON   BANK0   BANK1
  3496 ;;      Params:         0       0       0
  3497 ;;      Locals:         0       0       0
  3498 ;;      Temps:          0       0       0
  3499 ;;      Totals:         0       0       0
  3500 ;;Total ram usage:        0 bytes
  3501 ;; Hardware stack levels used: 1
  3502 ;; This function calls:
  3503 ;;		Nothing
  3504 ;; This function is called by:
  3505 ;;		_get_measure
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509  0302                     i1_start_alarm:	
  3510                           ;psect for function i1_start_alarm
  3511                           
  3512  0302                     i1l1366:	
  3513                           ;incstack = 0
  3514                           ; Regs used in i1_start_alarm: []
  3515                           
  3516                           
  3517                           ;main.c: 51:     FLAGS.bits.ALARM = 1;
  3518  0302  147D               	bsf	_FLAGS,0
  3519  0303                     i1l253:	
  3520                           ;main.c: 52:     do { LATCbits.LATC0 = 1; } while(0);
  3521                           
  3522  0303  0022               	movlb	2	; select bank2
  3523  0304  140E               	bsf	14,0	;volatile
  3524  0305                     i1l254:
  3525                           
  3526                           ;main.c: 53:     INTCONbits.TMR0IE = 1;
  3527  0305  168B               	bsf	11,5	;volatile
  3528  0306                     i1l255:
  3529  0306  0008               	return
  3530  0307                     __end_ofi1_start_alarm:
  3531                           
  3532                           	psect	text27
  3533  00B3                     __ptext27:	
  3534 ;; *************** function _get_jump *****************
  3535 ;; Defined at:
  3536 ;;		line 134 in file "main.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;		None
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;  res             2    5[COMMON] unsigned int 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  1    wreg      void 
  3543 ;; Registers used:
  3544 ;;		wreg, status,2, status,0, pclath, cstack
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMMON   BANK0   BANK1
  3550 ;;      Params:         0       0       0
  3551 ;;      Locals:         2       0       0
  3552 ;;      Temps:          1       0       0
  3553 ;;      Totals:         3       0       0
  3554 ;;Total ram usage:        3 bytes
  3555 ;; Hardware stack levels used: 1
  3556 ;; Hardware stack levels required when called: 1
  3557 ;; This function calls:
  3558 ;;		_ADC_GetConversion
  3559 ;; This function is called by:
  3560 ;;		_Sec_tick_work
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564  00B3                     _get_jump:	
  3565                           ;psect for function _get_jump
  3566                           
  3567  00B3                     i1l323:	
  3568                           ;incstack = 0
  3569                           ; Regs used in _get_jump: [wreg+status,2+status,0+pclath+cstack]
  3570                           ;main.c: 135:     static signed char jump_counter;;main.c: 136:     do { LATCbits.LATC1 
      +                          = 1; } while(0);
  3571                           
  3572  00B3  0022               	movlb	2	; select bank2
  3573  00B4  148E               	bsf	14,1	;volatile
  3574  00B5                     i1l1420:
  3575                           
  3576                           ;main.c: 137:     unsigned res = ADC_GetConversion(PIN_JUMP_STATE);
  3577  00B5  3001               	movlw	1
  3578  00B6  3181  21E3  3180   	fcall	_ADC_GetConversion
  3579  00B9  0871               	movf	?_ADC_GetConversion+1,w
  3580  00BA  00F6               	movwf	get_jump@res+1
  3581  00BB  0870               	movf	?_ADC_GetConversion,w
  3582  00BC  00F5               	movwf	get_jump@res
  3583  00BD                     i1l1422:
  3584  00BD  0022               	movlb	2	; select bank2
  3585  00BE  108E               	bcf	14,1	;volatile
  3586  00BF                     i1l1424:
  3587                           
  3588                           ;main.c: 139:     result = res;
  3589  00BF  0876               	movf	get_jump@res+1,w
  3590  00C0  0020               	movlb	0	; select bank0
  3591  00C1  00A5               	movwf	_result+1
  3592  00C2  0875               	movf	get_jump@res,w
  3593  00C3  00A4               	movwf	_result
  3594  00C4                     i1l1426:
  3595                           
  3596                           ;main.c: 140:     if (res < 6000) jump_counter--;
  3597  00C4  3017               	movlw	23
  3598  00C5  0276               	subwf	get_jump@res+1,w
  3599  00C6  3070               	movlw	112
  3600  00C7  1903               	skipnz
  3601  00C8  0275               	subwf	get_jump@res,w
  3602  00C9  1803               	skipnc
  3603  00CA  28CC               	goto	u55_21
  3604  00CB  28CD               	goto	u55_20
  3605  00CC                     u55_21:
  3606  00CC  28D2               	goto	i1l1430
  3607  00CD                     u55_20:
  3608  00CD                     i1l1428:
  3609  00CD  30FF               	movlw	255
  3610  00CE  00F4               	movwf	??_get_jump
  3611  00CF  0874               	movf	??_get_jump,w
  3612  00D0  07F9               	addwf	get_jump@jump_counter,f
  3613  00D1  28D6               	goto	i1l1432
  3614  00D2                     i1l1430:
  3615  00D2  3001               	movlw	1
  3616  00D3  00F4               	movwf	??_get_jump
  3617  00D4  0874               	movf	??_get_jump,w
  3618  00D5  07F9               	addwf	get_jump@jump_counter,f
  3619  00D6                     i1l1432:
  3620                           
  3621                           ;main.c: 143:     if (jump_counter > 10) {
  3622  00D6  0879               	movf	get_jump@jump_counter,w
  3623  00D7  3A80               	xorlw	128
  3624  00D8  3E75               	addlw	-139
  3625  00D9  1C03               	skipc
  3626  00DA  28DC               	goto	u56_21
  3627  00DB  28DD               	goto	u56_20
  3628  00DC                     u56_21:
  3629  00DC  28E3               	goto	i1l1438
  3630  00DD                     u56_20:
  3631  00DD                     i1l1434:
  3632                           
  3633                           ;main.c: 144:         jump_counter = 10;
  3634  00DD  300A               	movlw	10
  3635  00DE  00F4               	movwf	??_get_jump
  3636  00DF  0874               	movf	??_get_jump,w
  3637  00E0  00F9               	movwf	get_jump@jump_counter
  3638  00E1                     i1l1436:
  3639                           
  3640                           ;main.c: 145:         FLAGS.bits.JUMP = 1;
  3641  00E1  167D               	bsf	_FLAGS,4
  3642                           
  3643                           ;main.c: 146:     } else if (jump_counter<-10) {
  3644  00E2  28EF               	goto	i1l332
  3645  00E3                     i1l1438:
  3646  00E3  0879               	movf	get_jump@jump_counter,w
  3647  00E4  3A80               	xorlw	128
  3648  00E5  3E8A               	addlw	138
  3649  00E6  1803               	skipnc
  3650  00E7  28E9               	goto	u57_21
  3651  00E8  28EA               	goto	u57_20
  3652  00E9                     u57_21:
  3653  00E9  28EF               	goto	i1l332
  3654  00EA                     u57_20:
  3655  00EA                     i1l1440:
  3656                           
  3657                           ;main.c: 147:         jump_counter = -10;
  3658  00EA  30F6               	movlw	246
  3659  00EB  00F4               	movwf	??_get_jump
  3660  00EC  0874               	movf	??_get_jump,w
  3661  00ED  00F9               	movwf	get_jump@jump_counter
  3662  00EE                     i1l1442:
  3663                           
  3664                           ;main.c: 148:         FLAGS.bits.JUMP = 0;
  3665  00EE  127D               	bcf	_FLAGS,4
  3666  00EF                     i1l332:
  3667  00EF  0008               	return
  3668  00F0                     __end_of_get_jump:
  3669                           
  3670                           	psect	text28
  3671  00F0                     __ptext28:	
  3672 ;; *************** function _get_fun *****************
  3673 ;; Defined at:
  3674 ;;		line 115 in file "main.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;		None
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;  res             2    5[COMMON] unsigned int 
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      void 
  3681 ;; Registers used:
  3682 ;;		wreg, status,2, status,0, pclath, cstack
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMMON   BANK0   BANK1
  3688 ;;      Params:         0       0       0
  3689 ;;      Locals:         2       0       0
  3690 ;;      Temps:          1       0       0
  3691 ;;      Totals:         3       0       0
  3692 ;;Total ram usage:        3 bytes
  3693 ;; Hardware stack levels used: 1
  3694 ;; Hardware stack levels required when called: 1
  3695 ;; This function calls:
  3696 ;;		_ADC_GetConversion
  3697 ;; This function is called by:
  3698 ;;		_Sec_tick_work
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702  00F0                     _get_fun:	
  3703                           ;psect for function _get_fun
  3704                           
  3705  00F0                     i1l309:	
  3706                           ;incstack = 0
  3707                           ; Regs used in _get_fun: [wreg+status,2+status,0+pclath+cstack]
  3708                           ;main.c: 116:     static signed char fun_counter;;main.c: 117:     do { LATCbits.LATC1 =
      +                           1; } while(0);
  3709                           
  3710  00F0  0022               	movlb	2	; select bank2
  3711  00F1  148E               	bsf	14,1	;volatile
  3712  00F2                     i1l1396:
  3713                           
  3714                           ;main.c: 118:     unsigned res = ADC_GetConversion(PIN_FUN_STATE);
  3715  00F2  3006               	movlw	6
  3716  00F3  3181  21E3  3180   	fcall	_ADC_GetConversion
  3717  00F6  0871               	movf	?_ADC_GetConversion+1,w
  3718  00F7  00F6               	movwf	get_fun@res+1
  3719  00F8  0870               	movf	?_ADC_GetConversion,w
  3720  00F9  00F5               	movwf	get_fun@res
  3721  00FA                     i1l1398:
  3722  00FA  0022               	movlb	2	; select bank2
  3723  00FB  108E               	bcf	14,1	;volatile
  3724  00FC                     i1l1400:
  3725                           
  3726                           ;main.c: 121:     if (res < 6000) fun_counter--;
  3727  00FC  3017               	movlw	23
  3728  00FD  0276               	subwf	get_fun@res+1,w
  3729  00FE  3070               	movlw	112
  3730  00FF  1903               	skipnz
  3731  0100  0275               	subwf	get_fun@res,w
  3732  0101  1803               	skipnc
  3733  0102  2904               	goto	u52_21
  3734  0103  2905               	goto	u52_20
  3735  0104                     u52_21:
  3736  0104  290A               	goto	i1l1404
  3737  0105                     u52_20:
  3738  0105                     i1l1402:
  3739  0105  30FF               	movlw	255
  3740  0106  00F4               	movwf	??_get_fun
  3741  0107  0874               	movf	??_get_fun,w
  3742  0108  07FA               	addwf	get_fun@fun_counter,f
  3743  0109  290E               	goto	i1l1406
  3744  010A                     i1l1404:
  3745  010A  3001               	movlw	1
  3746  010B  00F4               	movwf	??_get_fun
  3747  010C  0874               	movf	??_get_fun,w
  3748  010D  07FA               	addwf	get_fun@fun_counter,f
  3749  010E                     i1l1406:
  3750                           
  3751                           ;main.c: 124:     if (fun_counter > 10) {
  3752  010E  087A               	movf	get_fun@fun_counter,w
  3753  010F  3A80               	xorlw	128
  3754  0110  3E75               	addlw	-139
  3755  0111  1C03               	skipc
  3756  0112  2914               	goto	u53_21
  3757  0113  2915               	goto	u53_20
  3758  0114                     u53_21:
  3759  0114  291B               	goto	i1l1412
  3760  0115                     u53_20:
  3761  0115                     i1l1408:
  3762                           
  3763                           ;main.c: 125:         fun_counter = 10;
  3764  0115  300A               	movlw	10
  3765  0116  00F4               	movwf	??_get_fun
  3766  0117  0874               	movf	??_get_fun,w
  3767  0118  00FA               	movwf	get_fun@fun_counter
  3768  0119                     i1l1410:
  3769                           
  3770                           ;main.c: 126:         FLAGS.bits.FUN_NEW = 1;
  3771  0119  15FD               	bsf	_FLAGS,3
  3772                           
  3773                           ;main.c: 127:     } else if (fun_counter<-10) {
  3774  011A  2927               	goto	i1l318
  3775  011B                     i1l1412:
  3776  011B  087A               	movf	get_fun@fun_counter,w
  3777  011C  3A80               	xorlw	128
  3778  011D  3E8A               	addlw	138
  3779  011E  1803               	skipnc
  3780  011F  2921               	goto	u54_21
  3781  0120  2922               	goto	u54_20
  3782  0121                     u54_21:
  3783  0121  2927               	goto	i1l318
  3784  0122                     u54_20:
  3785  0122                     i1l1414:
  3786                           
  3787                           ;main.c: 128:         fun_counter = -10;
  3788  0122  30F6               	movlw	246
  3789  0123  00F4               	movwf	??_get_fun
  3790  0124  0874               	movf	??_get_fun,w
  3791  0125  00FA               	movwf	get_fun@fun_counter
  3792  0126                     i1l1416:
  3793                           
  3794                           ;main.c: 129:         FLAGS.bits.FUN_NEW = 0;
  3795  0126  11FD               	bcf	_FLAGS,3
  3796  0127                     i1l318:
  3797  0127  0008               	return
  3798  0128                     __end_of_get_fun:
  3799                           
  3800                           	psect	text29
  3801  01E3                     __ptext29:	
  3802 ;; *************** function _ADC_GetConversion *****************
  3803 ;; Defined at:
  3804 ;;		line 112 in file "mcc_generated_files/adc.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;  channel         1    wreg     enum E2178
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;  channel         1    3[COMMON] enum E2178
  3809 ;; Return value:  Size  Location     Type
  3810 ;;                  2    0[COMMON] unsigned short 
  3811 ;; Registers used:
  3812 ;;		wreg, status,2, status,0
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 0/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMMON   BANK0   BANK1
  3818 ;;      Params:         2       0       0
  3819 ;;      Locals:         1       0       0
  3820 ;;      Temps:          1       0       0
  3821 ;;      Totals:         4       0       0
  3822 ;;Total ram usage:        4 bytes
  3823 ;; Hardware stack levels used: 1
  3824 ;; This function calls:
  3825 ;;		Nothing
  3826 ;; This function is called by:
  3827 ;;		_get_measure
  3828 ;;		_get_fun
  3829 ;;		_get_jump
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833  01E3                     _ADC_GetConversion:	
  3834                           ;psect for function _ADC_GetConversion
  3835                           
  3836                           
  3837                           ;incstack = 0
  3838                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3839                           ;ADC_GetConversion@channel stored from wreg
  3840  01E3  00F3               	movwf	ADC_GetConversion@channel
  3841  01E4                     i1l1354:
  3842                           
  3843                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  3844  01E4  0873               	movf	ADC_GetConversion@channel,w
  3845  01E5  00F2               	movwf	??_ADC_GetConversion
  3846  01E6  0DF2               	rlf	??_ADC_GetConversion,f
  3847  01E7  0DF2               	rlf	??_ADC_GetConversion,f
  3848  01E8  0021               	movlb	1	; select bank1
  3849  01E9  081D               	movf	29,w	;volatile
  3850  01EA  0672               	xorwf	??_ADC_GetConversion,w
  3851  01EB  3983               	andlw	-125
  3852  01EC  0672               	xorwf	??_ADC_GetConversion,w
  3853  01ED  009D               	movwf	29	;volatile
  3854  01EE                     i1l1356:
  3855                           
  3856                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  3857  01EE  141D               	bsf	29,0	;volatile
  3858  01EF                     i1l1358:
  3859                           
  3860                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  3861  01EF  3200               	nop2	;2 cycle nop
  3862  01F0  3200               	nop2	;2 cycle nop
  3863  01F1  0000               	nop
  3864  01F2                     i1l1360:
  3865                           
  3866                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  3867  01F2  0021               	movlb	1	; select bank1
  3868  01F3  149D               	bsf	29,1	;volatile
  3869  01F4                     i1l61:	
  3870                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  3871                           
  3872                           
  3873                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  3874  01F4  189D               	btfsc	29,1	;volatile
  3875  01F5  29F7               	goto	u45_21
  3876  01F6  29F8               	goto	u45_20
  3877  01F7                     u45_21:
  3878  01F7  29F4               	goto	i1l61
  3879  01F8                     u45_20:
  3880  01F8                     i1l1362:
  3881                           
  3882                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3883  01F8  081C               	movf	28,w	;volatile
  3884  01F9  00F1               	movwf	?_ADC_GetConversion+1
  3885  01FA  081B               	movf	27,w	;volatile
  3886  01FB  00F0               	movwf	?_ADC_GetConversion
  3887  01FC                     i1l64:
  3888  01FC  0008               	return
  3889  01FD                     __end_of_ADC_GetConversion:
  3890                           
  3891                           	psect	text30
  3892  02B1                     __ptext30:	
  3893 ;; *************** function _TMR0_ISR *****************
  3894 ;; Defined at:
  3895 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;		None
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;		None
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  1    wreg      void 
  3902 ;; Registers used:
  3903 ;;		wreg, status,2, status,0, pclath, cstack
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMMON   BANK0   BANK1
  3909 ;;      Params:         0       0       0
  3910 ;;      Locals:         0       0       0
  3911 ;;      Temps:          0       0       0
  3912 ;;      Totals:         0       0       0
  3913 ;;Total ram usage:        0 bytes
  3914 ;; Hardware stack levels used: 1
  3915 ;; Hardware stack levels required when called: 1
  3916 ;; This function calls:
  3917 ;;		Absolute function
  3918 ;;		_TMR0_DefaultInterruptHandler
  3919 ;;		_switch_zum
  3920 ;; This function is called by:
  3921 ;;		_INTERRUPT_InterruptManager
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925  02B1                     _TMR0_ISR:	
  3926                           ;psect for function _TMR0_ISR
  3927                           
  3928  02B1                     i1l1562:	
  3929                           ;incstack = 0
  3930                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  3931                           
  3932                           
  3933                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  3934  02B1  110B               	bcf	11,2	;volatile
  3935  02B2                     i1l1564:
  3936                           
  3937                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  3938  02B2  0020               	movlb	0	; select bank0
  3939  02B3  0831               	movf	_timer0ReloadVal,w	;volatile
  3940  02B4  0095               	movwf	21	;volatile
  3941  02B5                     i1l1566:
  3942                           
  3943                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  3944  02B5  082D               	movf	_TMR0_InterruptHandler,w
  3945  02B6  042E               	iorwf	_TMR0_InterruptHandler+1,w
  3946  02B7  1903               	btfsc	3,2
  3947  02B8  2ABA               	goto	u71_21
  3948  02B9  2ABB               	goto	u71_20
  3949  02BA                     u71_21:
  3950  02BA  2AC0               	goto	i1l198
  3951  02BB                     u71_20:
  3952  02BB                     i1l1568:
  3953                           
  3954                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  3955  02BB  082E               	movf	_TMR0_InterruptHandler+1,w
  3956  02BC  008A               	movwf	10
  3957  02BD  082D               	movf	_TMR0_InterruptHandler,w
  3958  02BE  000A               	callw
  3959  02BF  3182               	pagesel	$
  3960  02C0                     i1l198:
  3961  02C0  0008               	return
  3962  02C1                     __end_of_TMR0_ISR:
  3963                           
  3964                           	psect	text31
  3965  031B                     __ptext31:	
  3966 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  3967 ;; Defined at:
  3968 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;		None
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;		None
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      void 
  3975 ;; Registers used:
  3976 ;;		None
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMMON   BANK0   BANK1
  3982 ;;      Params:         0       0       0
  3983 ;;      Locals:         0       0       0
  3984 ;;      Temps:          0       0       0
  3985 ;;      Totals:         0       0       0
  3986 ;;Total ram usage:        0 bytes
  3987 ;; Hardware stack levels used: 1
  3988 ;; This function calls:
  3989 ;;		Nothing
  3990 ;; This function is called by:
  3991 ;;		_TMR0_Initialize
  3992 ;;		_TMR0_ISR
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996  031B                     _TMR0_DefaultInterruptHandler:	
  3997                           ;psect for function _TMR0_DefaultInterruptHandler
  3998                           
  3999  031B                     i1l204:	
  4000                           ;incstack = 0
  4001                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  4002                           
  4003  031B  0008               	return
  4004  031C                     __end_of_TMR0_DefaultInterruptHandler:
  4005                           
  4006                           	psect	text32
  4007  02A0                     __ptext32:	
  4008 ;; *************** function _switch_zum *****************
  4009 ;; Defined at:
  4010 ;;		line 216 in file "main.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;		None
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;		None
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		status,0
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMMON   BANK0   BANK1
  4024 ;;      Params:         0       0       0
  4025 ;;      Locals:         0       0       0
  4026 ;;      Temps:          0       0       0
  4027 ;;      Totals:         0       0       0
  4028 ;;Total ram usage:        0 bytes
  4029 ;; Hardware stack levels used: 1
  4030 ;; This function calls:
  4031 ;;		Nothing
  4032 ;; This function is called by:
  4033 ;;		_start_setup
  4034 ;;		_TMR0_ISR
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038  02A0                     _switch_zum:	
  4039                           ;psect for function _switch_zum
  4040                           
  4041  02A0                     i1l1558:	
  4042                           ;incstack = 0
  4043                           ; Regs used in _switch_zum: [status,0]
  4044                           
  4045                           
  4046                           ;main.c: 217:     if (FLAGS.bits.ALARM) do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0
      +                          );
  4047  02A0  1C7D               	btfss	_FLAGS,0
  4048  02A1  2AA3               	goto	u68_21
  4049  02A2  2AA4               	goto	u68_20
  4050  02A3                     u68_21:
  4051  02A3  2AB0               	goto	i1l366
  4052  02A4                     u68_20:
  4053  02A4                     i1l1560:
  4054  02A4  1003               	clrc
  4055  02A5  0022               	movlb	2	; select bank2
  4056  02A6  1E8C               	btfss	12,5	;volatile
  4057  02A7  1403               	setc
  4058  02A8  1803               	btfsc	3,0
  4059  02A9  2AAB               	goto	u69_21
  4060  02AA  2AAE               	goto	u69_20
  4061  02AB                     u69_21:
  4062  02AB  0022               	movlb	2	; select bank2
  4063  02AC  168C               	bsf	12,5	;volatile
  4064  02AD  2AB0               	goto	u70_24
  4065  02AE                     u69_20:
  4066  02AE  0022               	movlb	2	; select bank2
  4067  02AF  128C               	bcf	12,5	;volatile
  4068  02B0                     u70_24:
  4069  02B0                     i1l366:
  4070  02B0  0008               	return
  4071  02B1                     __end_of_switch_zum:
  4072  007E                     btemp	set	126	;btemp
  4073  007E                     int$flags	set	126
  4074  007E                     wtemp0	set	126
  4075                           
  4076                           	psect	idloc
  4077                           
  4078                           ;Config register IDLOC0 @ 0x8000
  4079                           ;	unspecified, using default values
  4080  8000                     	org	32768
  4081  8000  3FFF               	dw	16383
  4082                           
  4083                           ;Config register IDLOC1 @ 0x8001
  4084                           ;	unspecified, using default values
  4085  8001                     	org	32769
  4086  8001  3FFF               	dw	16383
  4087                           
  4088                           ;Config register IDLOC2 @ 0x8002
  4089                           ;	unspecified, using default values
  4090  8002                     	org	32770
  4091  8002  3FFF               	dw	16383
  4092                           
  4093                           ;Config register IDLOC3 @ 0x8003
  4094                           ;	unspecified, using default values
  4095  8003                     	org	32771
  4096  8003  3FFF               	dw	16383
  4097                           
  4098                           	psect	config
  4099                           
  4100                           ;Config register CONFIG1 @ 0x8007
  4101                           ;	Oscillator Selection
  4102                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4103                           ;	Watchdog Timer Enable
  4104                           ;	WDTE = OFF, WDT disabled
  4105                           ;	Power-up Timer Enable
  4106                           ;	PWRTE = OFF, PWRT disabled
  4107                           ;	MCLR Pin Function Select
  4108                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4109                           ;	Flash Program Memory Code Protection
  4110                           ;	CP = OFF, Program memory code protection is disabled
  4111                           ;	Data Memory Code Protection
  4112                           ;	CPD = OFF, Data memory code protection is disabled
  4113                           ;	Brown-out Reset Enable
  4114                           ;	BOREN = ON, Brown-out Reset enabled
  4115                           ;	Clock Out Enable
  4116                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4117                           ;	Internal/External Switchover
  4118                           ;	IESO = ON, Internal/External Switchover mode is enabled
  4119                           ;	Fail-Safe Clock Monitor Enable
  4120                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4121  8007                     	org	32775
  4122  8007  3FE4               	dw	16356
  4123                           
  4124                           ;Config register CONFIG2 @ 0x8008
  4125                           ;	Flash Memory Self-Write Protection
  4126                           ;	WRT = OFF, Write protection off
  4127                           ;	PLL Enable
  4128                           ;	PLLEN = OFF, 4x PLL disabled
  4129                           ;	Stack Overflow/Underflow Reset Enable
  4130                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4131                           ;	Brown-out Reset Voltage Selection
  4132                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4133                           ;	Low-Voltage Programming Enable
  4134                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4135  8008                     	org	32776
  4136  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    12
    Data        0
    BSS         19
    Persistent  37
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      4      22
    BANK1            16      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> switch_zum(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> switch_zum(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Sec_tick_work(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Sec_tick_work(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR2_CallBack->_Sec_tick_work
    _Sec_tick_work->_get_fun
    _Sec_tick_work->_get_jump
    _Sec_tick_work->_get_measure
    _get_measure->_ADC_GetConversion
    _get_jump->_ADC_GetConversion
    _get_fun->_ADC_GetConversion

Critical Paths under _main in BANK0

    _main->_povorot
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _povorot->_go_close
    _fun_work->_go_close

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     834
                                              3 BANK0      1     1      0
                           _fun_work
                           _go_close
                       _go_close_alt
                            _povorot
                        _start_alarm
                        _start_setup
                          _switch_wm
 ---------------------------------------------------------------------------------
 (1) _switch_wm                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_setup                                          0     0      0     696
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     348
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      1     1      0     174
                                              2 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_alarm                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _povorot                                              1     1      0      46
                                              2 BANK0      1     1      0
                           _go_close
                            _go_open
 ---------------------------------------------------------------------------------
 (1) _go_close_alt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fun_work                                             0     0      0      46
                           _go_close
                            _go_open
 ---------------------------------------------------------------------------------
 (2) _go_open                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_close                                             2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     179
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0     179
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR2_CallBack                                        0     0      0     179
                   Absolute function *
                      _Sec_tick_work *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Sec_tick_work                                        1     1      0     179
                                              7 COMMON     1     1      0
                            _get_fun
                           _get_jump
                        _get_measure
                        _toggle_tone
 ---------------------------------------------------------------------------------
 (9) _toggle_tone                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _get_measure                                          3     3      0      67
                                              4 COMMON     3     3      0
                  _ADC_GetConversion
                      i1_start_alarm
 ---------------------------------------------------------------------------------
 (10) i1_start_alarm                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _get_jump                                             3     3      0      67
                                              4 COMMON     3     3      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (9) _get_fun                                              3     3      0      45
                                              4 COMMON     3     3      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (10) _ADC_GetConversion                                   4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                         _switch_zum *
 ---------------------------------------------------------------------------------
 (7) _switch_zum                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _fun_work
     _go_close
     _go_open
   _go_close
   _go_close_alt
   _povorot
     _go_close
     _go_open
   _start_alarm
   _start_setup
     _SYSTEM_Initialize
       _ADC_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR2_Initialize
         _TMR2_SetInterruptHandler
       _WDT_Initialize
     _TMR0_SetInterruptHandler
     _TMR2_SetInterruptHandler
     _TMR2_StartTimer
   _switch_wm

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _switch_zum *
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _Sec_tick_work *
         _get_fun
           _ADC_GetConversion
         _get_jump
           _ADC_GetConversion
         _get_measure
           _ADC_GetConversion
           i1_start_alarm
         _toggle_tone
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              60      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      24       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      4      16       6       27.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            10      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      24       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Apr 26 13:02:07 2022

        __end_of_TMR2_SetInterruptHandler 02F1                        get_fun@fun_counter 007A  
                                      l23 027B                                        l26 02E4  
                                      l29 0316                                        l46 02DD  
                                      l90 0253                             ?_go_close_alt 0070  
                         _timer0ReloadVal 0031                                       l201 02F6  
                                     l140 0319                                       l137 028E  
                                     l253 02FE                                       l165 02F0  
                                     l270 00A6                                       l254 0300  
                                     l351 020B                                       l255 0301  
                                     l360 02D5                                       l185 023E  
                                     l274 00B2                                       l283 0262  
                                     l355 0213                                       l348 018D  
                                     l381 01E2                                       l286 0268  
                                     l358 02D4                                       l279 02FC  
                             _start_alarm 02FD                                       _PR2 001B  
                                     u800 02D2                                       u801 02D1  
                                     u650 0090                                       u730 016E  
                                     u651 008D                                       u731 016D  
                                     u740 0172                                       u741 0171  
                                     u670 00A6                                       u750 0176  
                                     u671 00A5                                       u751 0175  
                                     u664 0092                                       u760 0201  
                                     u761 0200                                       u770 0209  
                                     u771 0207                                       u907 017D  
                                     u860 0138                                       u917 0263  
                                     u861 0137                                       u790 020F  
                                     u870 013C                                       u927 007E  
                                     u791 020E                                       u871 013B  
                                     u784 020A                                       u880 015A  
                                     u937 0096                                       u881 0159  
                                     u947 00AC                                       u897 012F  
                             _start_setup 01BC                           _TMR2_Initialize 027C  
                                     wreg 0009                               get_jump@res 0075  
                                    l1600 0201                                      l1530 0084  
                                    l1522 0076                                      l1602 0204  
                                    l1450 0245                                      l1370 02F1  
                                    l1514 0269                                      l1610 02D2  
                                    l1540 00A0                                      l1524 0078  
                                    l1604 020F                                      l1460 02E1  
                                    l1452 0247                                      l1516 0317  
                                    l1620 01D4                                      l1612 01BC  
                                    l1542 00A8                                      l1534 0086  
                                    l1526 007A                                      l1550 0258  
                                    l1462 02E2                                      l1454 024A  
                                    l1446 023F                                      l1470 0280  
                                    l1630 01DE                                      l1622 01D6  
                                    l1614 01BF                                      l1544 00B0  
                                    l1536 0092                                      l1528 0082  
                                    l1552 0260                                      l1456 024F  
                                    l1448 0242                                      l1480 022F  
                                    l1368 02EB                                      l1472 0281  
                                    l1464 0313                                      l1632 01E0  
                                    l1624 01D8                                      l1616 01C0  
                                    l1608 02CE                                      l1538 009B  
                                    l1554 0266                                      l1490 02D9  
                                    l1458 02DE                                      l1482 0232  
                                    l1474 0283                                      l1466 027C  
                                    l1634 01E1                                      l1626 01DA  
                                    l1618 01D1                                      l1548 0254  
                                    l1580 02F7                                      l1492 02DA  
                                    l1484 0236                                      l1476 028B  
                                    l1468 027F                                      l1628 01DC  
                                    l1660 013C                                      l1652 0128  
                                    l1582 02F9                                      l1590 0172  
                                    l1486 0237                                      l1478 022A  
                                    l1670 0153                                      l1662 0143  
                                    l1654 012B                                      l1584 02FA  
                                    l1592 0176                                      l1488 02D6  
                                    l1672 015A                                      l1664 0146  
                                    l1656 0134                                      l1594 0179  
                                    l1586 015D                                      l1578 02FD  
                                    l1658 0138                                      l1666 014A  
                                    l1596 0181                                      l1588 016E  
                                    l1668 0150                                      l1598 01FD  
                                    _LATA 010C                                      _LATC 010E  
                                    i1l61 01F4                                      i1l64 01FC  
                                    _TMR0 0015                                      _TMR2 001A  
                                    _WPUA 020C                                      _WPUC 020E  
                                    _ledd 002C                                      _main 0128  
                                    _rcon 002A                                      _watt 002B  
                                    fsr0h 0005                                      indf0 0000  
                                    fsr0l 0004                                      btemp 007E  
                                    _zumm 007C                                      start 0026  
                          ??_go_close_alt 0032                   __end_of_TMR0_Initialize 023F  
          ??_TMR0_DefaultInterruptHandler 0070             __end_of_OSCILLATOR_Initialize 02E5  
                                   ?_main 0070                                     _FLAGS 007D  
                                   _T2CON 001C                     __end_ofi1_start_alarm 0307  
                                   i1l113 0024                                     i1l114 0024  
                                   i1l204 031B                                     i1l108 0012  
                                   i1l304 01BB                                     i1l162 02CD  
                                   i1l323 00B3                                     i1l332 00EF  
                                   i1l309 00F0                                     i1l253 0303  
                                   i1l318 0127                                     i1l254 0305  
                                   i1l158 0229                                     i1l255 0306  
                                   i1l168 031A                                     i1l344 0075  
                                   i1l259 029F                                     i1l366 02B0  
                                   i1l198 02C0                                     i1l296 018E  
                                   u50_20 01B1                                     u50_21 01B0  
                                   u51_20 01B8                                     u51_21 01B7  
                                   u52_20 0105                                     u52_21 0104  
                                   u60_24 0051                                     u45_20 01F8  
                                   u53_20 0115                                     u61_20 0068  
                                   u45_21 01F7                                     u53_21 0114  
                                   u61_21 0067                                     u54_20 0122  
                                   u46_20 0293                                     u62_20 0072  
                                   u54_21 0121                                     u46_21 0292  
                                   u62_21 006F                                     u70_24 02B0  
                                   u71_20 02BB                                     u55_20 00CD  
                                   u47_20 029D                                     u71_21 02BA  
                                   u55_21 00CC                                     u47_21 029A  
                                   u63_24 0074                                     u56_20 00DD  
                                   u64_20 02C8                                     u72_20 0223  
                                   u56_21 00DC                                     u64_21 02C7  
                                   u72_21 0222                                     u48_24 029F  
                                   u57_20 00EA                                     u49_20 01A3  
                                   u81_20 000A                                     u57_21 00E9  
                                   u49_21 01A2                                     u81_21 0009  
                                   _TRISA 008C                                     _TRISC 008E  
                                   u58_20 0045                                     u82_20 000E  
                                   u58_21 0044                                     u82_21 000D  
                                   u59_20 004F                                     u83_20 0016  
                                   u59_21 004C                                     u83_21 0015  
                                   u68_20 02A4                                     u84_20 001B  
                                   u68_21 02A3                                     u84_21 001A  
                                   u69_20 02AE                                     u85_20 0020  
                                   u69_21 02AB                                     u85_21 001F  
               ?_TMR0_SetInterruptHandler 0032                          __end_of_TMR0_ISR 02C1  
                         __end_of_get_fun 0128                          __end_of_TMR2_ISR 022A  
                         __end_of_go_open 0269                            _WDT_Initialize 0313  
                                   pclath 000A                           __end_of_povorot 018E  
                                   status 0003                                     wtemp0 007E  
                         _TMR2_StartTimer 0317                           __initialization 0027  
                            __end_of_main 015D                   __end_of_TMR2_Initialize 028F  
             ?_INTERRUPT_InterruptManager 0070                  _TMR2_SetInterruptHandler 02EB  
                                  ??_main 0035                    __end_of_WDT_Initialize 0317  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _ADRESH 009C                                    _ADRESL 009B  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  _ANSELC 018E                                    _BORCON 0116  
                                  i1l1400 00FC                                    i1l1410 0119  
                                  i1l1402 0105                                    i1l1412 011B  
                                  i1l1404 010A                                    i1l1420 00B5  
                                  i1l1500 0051                                    i1l1414 0122  
                                  i1l1406 010E                                    i1l1430 00D2  
                                  i1l1422 00BD                                    i1l1510 0074  
                                  i1l1502 0055                                    i1l1360 01F2  
                                  i1l1416 0126                                    i1l1408 0115  
                                  i1l1440 00EA                                    i1l1432 00D6  
                                  i1l1424 00BF                                    i1l1504 005E  
                                  i1l1520 02C8                                    i1l1362 01F8  
                                  i1l1354 01E4                                    i1l1442 00EE  
                                  i1l1434 00DD                                    i1l1426 00C4  
                                  i1l1506 0062                                    i1l1356 01EE  
                                  i1l1436 00E1                                    i1l1428 00CD  
                                  i1l1380 0198                                    i1l1372 028F  
                                  i1l1508 0068                                    i1l1358 01EF  
                                  i1l1438 00E3                                    i1l1366 0302  
                                  i1l1390 01B2                                    i1l1382 019A  
                                  i1l1374 0293                                    i1l1518 02C1  
                                  i1l1560 02A4                                    i1l1392 01B8  
                                  i1l1384 01A3                                    i1l1640 000E  
                                  i1l1562 02B1                                    i1l1386 01A8  
                                  i1l1378 0190                                    i1l1570 0214  
                                  i1l1642 0016                                    i1l1564 02B2  
                                  i1l1396 00F2                                    i1l1388 01B1  
                                  i1l1572 0216                                    i1l1644 001B  
                                  i1l1636 0006                                    i1l1558 02A0  
                                  i1l1566 02B5                                    i1l1398 00FA  
                                  i1l1494 0038                                    i1l1574 0223  
                                  i1l1646 0020                                    i1l1638 000A  
                                  i1l1568 02BB                                    i1l1496 0041  
                                  i1l1576 0226                                    i1l1498 0045  
                        _GOOD_WSP_VOLTAGE 0307                                    _OSCCON 0099  
                                  _WDTCON 0097                          __end_of_get_jump 00F0  
                        __end_of_go_close 00B3                          ?_TMR0_Initialize 0070  
                        __end_of_fun_work 0214                                    _time_s 0020  
                                  _result 0024                                 ??_get_fun 0074  
                               ??_go_open 0032                           ?_WDT_Initialize 0070  
                          get_measure@res 0075                  ADC_GetConversion@channel 0073  
                               ??_povorot 0034                   __end_of_TMR2_StartTimer 031A  
TMR0_SetInterruptHandler@InterruptHandler 0032  TMR2_SetInterruptHandler@InterruptHandler 0032  
                    __end_of_go_close_alt 02FD                         _SYSTEM_Initialize 0269  
                 __end_of__initialization 0035                     __end_of_TMR2_CallBack 02CE  
                      ?_SYSTEM_Initialize 0070                              ?_toggle_tone 0070  
                          __pcstackCOMMON 0070                       ??_SYSTEM_Initialize 0035  
                               ?_TMR0_ISR 0070                                 ?_TMR2_ISR 0070  
                   __end_of_ROTATION_TIME 0313                          ?_TMR2_Initialize 0070  
                            ?_start_alarm 0070                            _OPTION_REGbits 0095  
                            ?_start_setup 0070                 __end_of_SYSTEM_Initialize 027C  
                              __pbssBANK0 0020                             _Sec_tick_work 0038  
                              __pmaintext 0128          __end_of_TMR0_SetInterruptHandler 02F7  
                              ??_TMR0_ISR 0070                                ??_TMR2_ISR 0078  
                              __pintentry 0004                         Sec_tick_work@iled 0078  
                                 _OSCTUNE 0098                          ?_TMR2_StartTimer 0070  
                               ?_get_jump 0070                                 ?_go_close 0070  
                          ?_Sec_tick_work 0070                                 ?_fun_work 0070  
                    _ADC_InterruptHandler 0028                ??_TMR2_SetInterruptHandler 0034  
                __end_of_GOOD_WSP_VOLTAGE 030B                                   __ptext1 02CE  
                                 __ptext2 01BC                       get_measure@measures 007B  
                                 __ptext3 0317                                   __ptext4 0269  
                                 __ptext5 0313                                   __ptext6 027C  
                                 __ptext7 02EB                                   __ptext8 022A  
                                 __ptext9 02F1                                   _get_fun 00F0  
                                 _go_open 0254                     _OSCILLATOR_Initialize 02DE  
                               _T2CONbits 001C                  ??_PIN_MANAGER_Initialize 0032  
                                 _povorot 015D                                   clrloop0 02E6  
                              ??_get_jump 0074                                ??_go_close 0032  
                    end_of_initialization 0035                                ??_fun_work 0034  
                            _go_close_alt 02F7                          ??_WDT_Initialize 0032  
                _TMR0_SetInterruptHandler 02F1                         __end_of_switch_wm 02D6  
                               _TRISAbits 008C                                 _TRISCbits 008E  
                         ??_Sec_tick_work 0077                                get_fun@res 0075  
                           ??_get_measure 0074                                _switch_zum 02A0  
    __end_of_TMR2_DefaultInterruptHandler 031B              _TMR2_DefaultInterruptHandler 031A  
                          _ADC_Initialize 02D6                    ?_OSCILLATOR_Initialize 0070  
                           i1_start_alarm 0302                       start_initialization 0027  
                  __end_of_ADC_Initialize 02DE                       __end_of_get_measure 01BC  
           ?_TMR2_DefaultInterruptHandler 0070                            ?i1_start_alarm 0070  
                             __pbssCOMMON 0078                                 ___latbits 0000  
                           __pcstackBANK0 0032                     _TMR0_InterruptHandler 002D  
                               __pnvBANK0 002D                    _PIN_MANAGER_Initialize 023F  
                             ?_switch_zum 0070                           ?_ADC_Initialize 0070  
            ??_INTERRUPT_InterruptManager 0078                                  ?_get_fun 0070  
                                ?_go_open 0070                                  ?_povorot 0070  
                       ??_TMR0_Initialize 0034                                  _LATAbits 010C  
                                _LATCbits 010E                                 clear_ram0 02E5  
                           _TMR2_CallBack 02C1                                  _PIE1bits 0091  
                             _get_measure 018E                ??_TMR0_SetInterruptHandler 0034  
                                _PIR1bits 0011                                  _TMR0_ISR 02B1  
                                _TMR2_ISR 0214                             _ROTATION_TIME 030F  
                         ??i1_start_alarm 0070                                _ADCON0bits 009D  
                                _WPUAbits 020C                                  _WPUCbits 020E  
                               go_close@i 0033            ??_TMR2_DefaultInterruptHandler 0070  
               ?_TMR2_SetInterruptHandler 0032                                 _switch_wm 02CE  
                       ??_TMR2_Initialize 0034                            ?_TMR2_CallBack 0070  
                           ??_toggle_tone 0070                         _ADC_GetConversion 01E3  
                 ??_OSCILLATOR_Initialize 0032                        ?_ADC_GetConversion 0070  
                           ??_start_alarm 0032                       ??_ADC_GetConversion 0072  
                           ??_start_setup 0035                                ?_switch_wm 0070  
                                __ptext10 023F                                  __ptext11 02DE  
                                __ptext20 0214                                  __ptext12 02D6  
                                __ptext21 02C1                                  __ptext13 02FD  
                                __ptext30 02B1                                  __ptext22 0038  
                                __ptext14 015D                                  __ptext31 031B  
                                __ptext23 031A                                  __ptext15 02F7  
                                __ptext32 02A0                                  __ptext24 028F  
                                __ptext16 01FD                                  __ptext25 018E  
                                __ptext17 0254                                  __ptext26 0302  
                                __ptext18 0076                                  __ptext27 00B3  
                                __ptext28 00F0                                  __ptext29 01E3  
                                _get_jump 00B3                                  _go_close 0076  
                   __end_of_Sec_tick_work 0076                           _BAD_WSP_VOLTAGE 030B  
                                _fun_work 01FD      __end_of_TMR0_DefaultInterruptHandler 031C  
            _TMR0_DefaultInterruptHandler 031B                 __end_of_ADC_GetConversion 01FD  
                                int$flags 007E                         ??_TMR2_StartTimer 0032  
                     __end_of_toggle_tone 02A0        __end_of_INTERRUPT_InterruptManager 0026  
              _INTERRUPT_InterruptManager 0004                      get_jump@jump_counter 0079  
                              _INTCONbits 000B                       __end_of_start_alarm 0302  
                     __end_of_start_setup 01E3                                  intlevel1 0000  
                         ??_TMR2_CallBack 0078                   ?_PIN_MANAGER_Initialize 0070  
                        ??_ADC_Initialize 0032             ?_TMR0_DefaultInterruptHandler 0070  
                            ??_switch_zum 0070                             __pstringtext1 0307  
                           __pstringtext2 030B                             __pstringtext3 030F  
                              _OPTION_REG 0095                     TMR2_ISR@CountCallBack 0026  
                         _TMR0_Initialize 022A                   __end_of_BAD_WSP_VOLTAGE 030F  
                             ??_switch_wm 0032                        __end_of_switch_zum 02B1  
          __end_of_PIN_MANAGER_Initialize 0254                     _TMR2_InterruptHandler 002F  
                             _toggle_tone 028F                              ?_get_measure 0070  
