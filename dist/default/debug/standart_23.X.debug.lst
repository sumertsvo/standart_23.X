

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue May 17 17:57:28 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1823
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    22                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cinit,global,class=CODE,merge=1,delta=2
    24                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    25                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	clrtext,global,class=CODE,delta=2
    27                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    28                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    29                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    30                           	psect	text1,local,class=CODE,merge=1,delta=2
    31                           	psect	text2,local,class=CODE,merge=1,delta=2
    32                           	psect	text3,local,class=CODE,merge=1,delta=2
    33                           	psect	text4,local,class=CODE,merge=1,delta=2
    34                           	psect	text5,local,class=CODE,merge=1,delta=2
    35                           	psect	text6,local,class=CODE,merge=1,delta=2
    36                           	psect	text7,local,class=CODE,merge=1,delta=2
    37                           	psect	text8,local,class=CODE,merge=1,delta=2
    38                           	psect	text9,local,class=CODE,merge=1,delta=2
    39                           	psect	text10,local,class=CODE,merge=1,delta=2
    40                           	psect	text11,local,class=CODE,merge=1,delta=2
    41                           	psect	text12,local,class=CODE,merge=1,delta=2
    42                           	psect	text13,local,class=CODE,merge=1,delta=2
    43                           	psect	text14,local,class=CODE,merge=1,delta=2
    44                           	psect	text15,local,class=CODE,merge=1,delta=2
    45                           	psect	text16,local,class=CODE,merge=1,delta=2
    46                           	psect	text17,local,class=CODE,merge=1,delta=2
    47                           	psect	text18,local,class=CODE,merge=1,delta=2
    48                           	psect	text19,local,class=CODE,merge=1,delta=2
    49                           	psect	text20,local,class=CODE,merge=1,delta=2
    50                           	psect	text21,local,class=CODE,merge=1,delta=2
    51                           	psect	text22,local,class=CODE,merge=1,delta=2
    52                           	psect	text23,local,class=CODE,merge=1,delta=2
    53                           	psect	text24,local,class=CODE,merge=1,delta=2
    54                           	psect	text25,local,class=CODE,merge=1,delta=2
    55                           	psect	text26,local,class=CODE,merge=1,delta=2
    56                           	psect	text27,local,class=CODE,merge=1,delta=2
    57                           	psect	text28,local,class=CODE,merge=1,delta=2
    58                           	psect	text29,local,class=CODE,merge=1,delta=2
    59                           	psect	text30,local,class=CODE,merge=1,delta=2
    60                           	psect	intentry,global,class=CODE,delta=2
    61                           	psect	text32,local,class=CODE,merge=1,delta=2
    62                           	psect	text33,local,class=CODE,merge=1,delta=2
    63                           	psect	text34,local,class=CODE,merge=1,delta=2
    64                           	psect	text35,local,class=CODE,merge=1,delta=2
    65                           	psect	text36,local,class=CODE,merge=1,delta=2
    66                           	psect	text37,local,class=CODE,merge=1,delta=2
    67                           	psect	text38,local,class=CODE,merge=1,delta=2
    68                           	psect	text39,local,class=CODE,merge=1,delta=2
    69                           	psect	text40,local,class=CODE,merge=1,delta=2
    70                           	psect	text41,local,class=CODE,merge=1,delta=2
    71                           	psect	text42,local,class=CODE,merge=1,delta=2
    72                           	psect	text43,local,class=CODE,merge=1,delta=2
    73                           	psect	text44,local,class=CODE,merge=1,delta=2
    74                           	psect	text45,local,class=CODE,merge=1,delta=2
    75                           	psect	text46,local,class=CODE,merge=1,delta=2
    76                           	psect	text47,local,class=CODE,merge=1,delta=2
    77                           	psect	text48,local,class=CODE,merge=1,delta=2
    78                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    79                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    80                           	dabs	1,0x7E,2
    81  0000                     
    82                           ; Version 2.40
    83                           ; Generated 17/11/2021 GMT
    84                           ; 
    85                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution. Publication is not required when
    99                           ;        this file is used in an embedded application.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC16F1823 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000E                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  008C                     	;# 
   145  008E                     	;# 
   146  0091                     	;# 
   147  0092                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0097                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009B                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  010C                     	;# 
   160  010E                     	;# 
   161  0111                     	;# 
   162  0112                     	;# 
   163  0113                     	;# 
   164  0114                     	;# 
   165  0115                     	;# 
   166  0116                     	;# 
   167  0117                     	;# 
   168  0118                     	;# 
   169  0119                     	;# 
   170  011A                     	;# 
   171  011B                     	;# 
   172  011D                     	;# 
   173  011D                     	;# 
   174  018C                     	;# 
   175  018E                     	;# 
   176  0191                     	;# 
   177  0191                     	;# 
   178  0192                     	;# 
   179  0193                     	;# 
   180  0193                     	;# 
   181  0193                     	;# 
   182  0194                     	;# 
   183  0195                     	;# 
   184  0196                     	;# 
   185  0199                     	;# 
   186  019A                     	;# 
   187  019B                     	;# 
   188  019B                     	;# 
   189  019B                     	;# 
   190  019B                     	;# 
   191  019C                     	;# 
   192  019C                     	;# 
   193  019D                     	;# 
   194  019E                     	;# 
   195  019F                     	;# 
   196  020C                     	;# 
   197  020E                     	;# 
   198  0211                     	;# 
   199  0211                     	;# 
   200  0212                     	;# 
   201  0212                     	;# 
   202  0213                     	;# 
   203  0213                     	;# 
   204  0214                     	;# 
   205  0214                     	;# 
   206  0215                     	;# 
   207  0215                     	;# 
   208  0215                     	;# 
   209  0216                     	;# 
   210  0216                     	;# 
   211  0217                     	;# 
   212  0217                     	;# 
   213  0291                     	;# 
   214  0291                     	;# 
   215  0292                     	;# 
   216  0293                     	;# 
   217  0294                     	;# 
   218  0295                     	;# 
   219  0295                     	;# 
   220  0296                     	;# 
   221  0391                     	;# 
   222  0392                     	;# 
   223  0393                     	;# 
   224  039A                     	;# 
   225  039C                     	;# 
   226  039D                     	;# 
   227  039E                     	;# 
   228  039F                     	;# 
   229  0FE4                     	;# 
   230  0FE5                     	;# 
   231  0FE6                     	;# 
   232  0FE7                     	;# 
   233  0FE8                     	;# 
   234  0FE9                     	;# 
   235  0FEA                     	;# 
   236  0FEB                     	;# 
   237  0FED                     	;# 
   238  0FEE                     	;# 
   239  0FEF                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0008                     	;# 
   249  0009                     	;# 
   250  000A                     	;# 
   251  000B                     	;# 
   252  000C                     	;# 
   253  000E                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  008C                     	;# 
   268  008E                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  010C                     	;# 
   283  010E                     	;# 
   284  0111                     	;# 
   285  0112                     	;# 
   286  0113                     	;# 
   287  0114                     	;# 
   288  0115                     	;# 
   289  0116                     	;# 
   290  0117                     	;# 
   291  0118                     	;# 
   292  0119                     	;# 
   293  011A                     	;# 
   294  011B                     	;# 
   295  011D                     	;# 
   296  011D                     	;# 
   297  018C                     	;# 
   298  018E                     	;# 
   299  0191                     	;# 
   300  0191                     	;# 
   301  0192                     	;# 
   302  0193                     	;# 
   303  0193                     	;# 
   304  0193                     	;# 
   305  0194                     	;# 
   306  0195                     	;# 
   307  0196                     	;# 
   308  0199                     	;# 
   309  019A                     	;# 
   310  019B                     	;# 
   311  019B                     	;# 
   312  019B                     	;# 
   313  019B                     	;# 
   314  019C                     	;# 
   315  019C                     	;# 
   316  019D                     	;# 
   317  019E                     	;# 
   318  019F                     	;# 
   319  020C                     	;# 
   320  020E                     	;# 
   321  0211                     	;# 
   322  0211                     	;# 
   323  0212                     	;# 
   324  0212                     	;# 
   325  0213                     	;# 
   326  0213                     	;# 
   327  0214                     	;# 
   328  0214                     	;# 
   329  0215                     	;# 
   330  0215                     	;# 
   331  0215                     	;# 
   332  0216                     	;# 
   333  0216                     	;# 
   334  0217                     	;# 
   335  0217                     	;# 
   336  0291                     	;# 
   337  0291                     	;# 
   338  0292                     	;# 
   339  0293                     	;# 
   340  0294                     	;# 
   341  0295                     	;# 
   342  0295                     	;# 
   343  0296                     	;# 
   344  0391                     	;# 
   345  0392                     	;# 
   346  0393                     	;# 
   347  039A                     	;# 
   348  039C                     	;# 
   349  039D                     	;# 
   350  039E                     	;# 
   351  039F                     	;# 
   352  0FE4                     	;# 
   353  0FE5                     	;# 
   354  0FE6                     	;# 
   355  0FE7                     	;# 
   356  0FE8                     	;# 
   357  0FE9                     	;# 
   358  0FEA                     	;# 
   359  0FEB                     	;# 
   360  0FED                     	;# 
   361  0FEE                     	;# 
   362  0FEF                     	;# 
   363  0000                     	;# 
   364  0001                     	;# 
   365  0002                     	;# 
   366  0003                     	;# 
   367  0004                     	;# 
   368  0005                     	;# 
   369  0006                     	;# 
   370  0007                     	;# 
   371  0008                     	;# 
   372  0009                     	;# 
   373  000A                     	;# 
   374  000B                     	;# 
   375  000C                     	;# 
   376  000E                     	;# 
   377  0011                     	;# 
   378  0012                     	;# 
   379  0015                     	;# 
   380  0016                     	;# 
   381  0016                     	;# 
   382  0017                     	;# 
   383  0018                     	;# 
   384  0019                     	;# 
   385  001A                     	;# 
   386  001B                     	;# 
   387  001C                     	;# 
   388  001E                     	;# 
   389  001F                     	;# 
   390  008C                     	;# 
   391  008E                     	;# 
   392  0091                     	;# 
   393  0092                     	;# 
   394  0095                     	;# 
   395  0096                     	;# 
   396  0097                     	;# 
   397  0098                     	;# 
   398  0099                     	;# 
   399  009A                     	;# 
   400  009B                     	;# 
   401  009B                     	;# 
   402  009C                     	;# 
   403  009D                     	;# 
   404  009E                     	;# 
   405  010C                     	;# 
   406  010E                     	;# 
   407  0111                     	;# 
   408  0112                     	;# 
   409  0113                     	;# 
   410  0114                     	;# 
   411  0115                     	;# 
   412  0116                     	;# 
   413  0117                     	;# 
   414  0118                     	;# 
   415  0119                     	;# 
   416  011A                     	;# 
   417  011B                     	;# 
   418  011D                     	;# 
   419  011D                     	;# 
   420  018C                     	;# 
   421  018E                     	;# 
   422  0191                     	;# 
   423  0191                     	;# 
   424  0192                     	;# 
   425  0193                     	;# 
   426  0193                     	;# 
   427  0193                     	;# 
   428  0194                     	;# 
   429  0195                     	;# 
   430  0196                     	;# 
   431  0199                     	;# 
   432  019A                     	;# 
   433  019B                     	;# 
   434  019B                     	;# 
   435  019B                     	;# 
   436  019B                     	;# 
   437  019C                     	;# 
   438  019C                     	;# 
   439  019D                     	;# 
   440  019E                     	;# 
   441  019F                     	;# 
   442  020C                     	;# 
   443  020E                     	;# 
   444  0211                     	;# 
   445  0211                     	;# 
   446  0212                     	;# 
   447  0212                     	;# 
   448  0213                     	;# 
   449  0213                     	;# 
   450  0214                     	;# 
   451  0214                     	;# 
   452  0215                     	;# 
   453  0215                     	;# 
   454  0215                     	;# 
   455  0216                     	;# 
   456  0216                     	;# 
   457  0217                     	;# 
   458  0217                     	;# 
   459  0291                     	;# 
   460  0291                     	;# 
   461  0292                     	;# 
   462  0293                     	;# 
   463  0294                     	;# 
   464  0295                     	;# 
   465  0295                     	;# 
   466  0296                     	;# 
   467  0391                     	;# 
   468  0392                     	;# 
   469  0393                     	;# 
   470  039A                     	;# 
   471  039C                     	;# 
   472  039D                     	;# 
   473  039E                     	;# 
   474  039F                     	;# 
   475  0FE4                     	;# 
   476  0FE5                     	;# 
   477  0FE6                     	;# 
   478  0FE7                     	;# 
   479  0FE8                     	;# 
   480  0FE9                     	;# 
   481  0FEA                     	;# 
   482  0FEB                     	;# 
   483  0FED                     	;# 
   484  0FEE                     	;# 
   485  0FEF                     	;# 
   486  0000                     	;# 
   487  0001                     	;# 
   488  0002                     	;# 
   489  0003                     	;# 
   490  0004                     	;# 
   491  0005                     	;# 
   492  0006                     	;# 
   493  0007                     	;# 
   494  0008                     	;# 
   495  0009                     	;# 
   496  000A                     	;# 
   497  000B                     	;# 
   498  000C                     	;# 
   499  000E                     	;# 
   500  0011                     	;# 
   501  0012                     	;# 
   502  0015                     	;# 
   503  0016                     	;# 
   504  0016                     	;# 
   505  0017                     	;# 
   506  0018                     	;# 
   507  0019                     	;# 
   508  001A                     	;# 
   509  001B                     	;# 
   510  001C                     	;# 
   511  001E                     	;# 
   512  001F                     	;# 
   513  008C                     	;# 
   514  008E                     	;# 
   515  0091                     	;# 
   516  0092                     	;# 
   517  0095                     	;# 
   518  0096                     	;# 
   519  0097                     	;# 
   520  0098                     	;# 
   521  0099                     	;# 
   522  009A                     	;# 
   523  009B                     	;# 
   524  009B                     	;# 
   525  009C                     	;# 
   526  009D                     	;# 
   527  009E                     	;# 
   528  010C                     	;# 
   529  010E                     	;# 
   530  0111                     	;# 
   531  0112                     	;# 
   532  0113                     	;# 
   533  0114                     	;# 
   534  0115                     	;# 
   535  0116                     	;# 
   536  0117                     	;# 
   537  0118                     	;# 
   538  0119                     	;# 
   539  011A                     	;# 
   540  011B                     	;# 
   541  011D                     	;# 
   542  011D                     	;# 
   543  018C                     	;# 
   544  018E                     	;# 
   545  0191                     	;# 
   546  0191                     	;# 
   547  0192                     	;# 
   548  0193                     	;# 
   549  0193                     	;# 
   550  0193                     	;# 
   551  0194                     	;# 
   552  0195                     	;# 
   553  0196                     	;# 
   554  0199                     	;# 
   555  019A                     	;# 
   556  019B                     	;# 
   557  019B                     	;# 
   558  019B                     	;# 
   559  019B                     	;# 
   560  019C                     	;# 
   561  019C                     	;# 
   562  019D                     	;# 
   563  019E                     	;# 
   564  019F                     	;# 
   565  020C                     	;# 
   566  020E                     	;# 
   567  0211                     	;# 
   568  0211                     	;# 
   569  0212                     	;# 
   570  0212                     	;# 
   571  0213                     	;# 
   572  0213                     	;# 
   573  0214                     	;# 
   574  0214                     	;# 
   575  0215                     	;# 
   576  0215                     	;# 
   577  0215                     	;# 
   578  0216                     	;# 
   579  0216                     	;# 
   580  0217                     	;# 
   581  0217                     	;# 
   582  0291                     	;# 
   583  0291                     	;# 
   584  0292                     	;# 
   585  0293                     	;# 
   586  0294                     	;# 
   587  0295                     	;# 
   588  0295                     	;# 
   589  0296                     	;# 
   590  0391                     	;# 
   591  0392                     	;# 
   592  0393                     	;# 
   593  039A                     	;# 
   594  039C                     	;# 
   595  039D                     	;# 
   596  039E                     	;# 
   597  039F                     	;# 
   598  0FE4                     	;# 
   599  0FE5                     	;# 
   600  0FE6                     	;# 
   601  0FE7                     	;# 
   602  0FE8                     	;# 
   603  0FE9                     	;# 
   604  0FEA                     	;# 
   605  0FEB                     	;# 
   606  0FED                     	;# 
   607  0FEE                     	;# 
   608  0FEF                     	;# 
   609  0000                     	;# 
   610  0001                     	;# 
   611  0002                     	;# 
   612  0003                     	;# 
   613  0004                     	;# 
   614  0005                     	;# 
   615  0006                     	;# 
   616  0007                     	;# 
   617  0008                     	;# 
   618  0009                     	;# 
   619  000A                     	;# 
   620  000B                     	;# 
   621  000C                     	;# 
   622  000E                     	;# 
   623  0011                     	;# 
   624  0012                     	;# 
   625  0015                     	;# 
   626  0016                     	;# 
   627  0016                     	;# 
   628  0017                     	;# 
   629  0018                     	;# 
   630  0019                     	;# 
   631  001A                     	;# 
   632  001B                     	;# 
   633  001C                     	;# 
   634  001E                     	;# 
   635  001F                     	;# 
   636  008C                     	;# 
   637  008E                     	;# 
   638  0091                     	;# 
   639  0092                     	;# 
   640  0095                     	;# 
   641  0096                     	;# 
   642  0097                     	;# 
   643  0098                     	;# 
   644  0099                     	;# 
   645  009A                     	;# 
   646  009B                     	;# 
   647  009B                     	;# 
   648  009C                     	;# 
   649  009D                     	;# 
   650  009E                     	;# 
   651  010C                     	;# 
   652  010E                     	;# 
   653  0111                     	;# 
   654  0112                     	;# 
   655  0113                     	;# 
   656  0114                     	;# 
   657  0115                     	;# 
   658  0116                     	;# 
   659  0117                     	;# 
   660  0118                     	;# 
   661  0119                     	;# 
   662  011A                     	;# 
   663  011B                     	;# 
   664  011D                     	;# 
   665  011D                     	;# 
   666  018C                     	;# 
   667  018E                     	;# 
   668  0191                     	;# 
   669  0191                     	;# 
   670  0192                     	;# 
   671  0193                     	;# 
   672  0193                     	;# 
   673  0193                     	;# 
   674  0194                     	;# 
   675  0195                     	;# 
   676  0196                     	;# 
   677  0199                     	;# 
   678  019A                     	;# 
   679  019B                     	;# 
   680  019B                     	;# 
   681  019B                     	;# 
   682  019B                     	;# 
   683  019C                     	;# 
   684  019C                     	;# 
   685  019D                     	;# 
   686  019E                     	;# 
   687  019F                     	;# 
   688  020C                     	;# 
   689  020E                     	;# 
   690  0211                     	;# 
   691  0211                     	;# 
   692  0212                     	;# 
   693  0212                     	;# 
   694  0213                     	;# 
   695  0213                     	;# 
   696  0214                     	;# 
   697  0214                     	;# 
   698  0215                     	;# 
   699  0215                     	;# 
   700  0215                     	;# 
   701  0216                     	;# 
   702  0216                     	;# 
   703  0217                     	;# 
   704  0217                     	;# 
   705  0291                     	;# 
   706  0291                     	;# 
   707  0292                     	;# 
   708  0293                     	;# 
   709  0294                     	;# 
   710  0295                     	;# 
   711  0295                     	;# 
   712  0296                     	;# 
   713  0391                     	;# 
   714  0392                     	;# 
   715  0393                     	;# 
   716  039A                     	;# 
   717  039C                     	;# 
   718  039D                     	;# 
   719  039E                     	;# 
   720  039F                     	;# 
   721  0FE4                     	;# 
   722  0FE5                     	;# 
   723  0FE6                     	;# 
   724  0FE7                     	;# 
   725  0FE8                     	;# 
   726  0FE9                     	;# 
   727  0FEA                     	;# 
   728  0FEB                     	;# 
   729  0FED                     	;# 
   730  0FEE                     	;# 
   731  0FEF                     	;# 
   732  0000                     	;# 
   733  0001                     	;# 
   734  0002                     	;# 
   735  0003                     	;# 
   736  0004                     	;# 
   737  0005                     	;# 
   738  0006                     	;# 
   739  0007                     	;# 
   740  0008                     	;# 
   741  0009                     	;# 
   742  000A                     	;# 
   743  000B                     	;# 
   744  000C                     	;# 
   745  000E                     	;# 
   746  0011                     	;# 
   747  0012                     	;# 
   748  0015                     	;# 
   749  0016                     	;# 
   750  0016                     	;# 
   751  0017                     	;# 
   752  0018                     	;# 
   753  0019                     	;# 
   754  001A                     	;# 
   755  001B                     	;# 
   756  001C                     	;# 
   757  001E                     	;# 
   758  001F                     	;# 
   759  008C                     	;# 
   760  008E                     	;# 
   761  0091                     	;# 
   762  0092                     	;# 
   763  0095                     	;# 
   764  0096                     	;# 
   765  0097                     	;# 
   766  0098                     	;# 
   767  0099                     	;# 
   768  009A                     	;# 
   769  009B                     	;# 
   770  009B                     	;# 
   771  009C                     	;# 
   772  009D                     	;# 
   773  009E                     	;# 
   774  010C                     	;# 
   775  010E                     	;# 
   776  0111                     	;# 
   777  0112                     	;# 
   778  0113                     	;# 
   779  0114                     	;# 
   780  0115                     	;# 
   781  0116                     	;# 
   782  0117                     	;# 
   783  0118                     	;# 
   784  0119                     	;# 
   785  011A                     	;# 
   786  011B                     	;# 
   787  011D                     	;# 
   788  011D                     	;# 
   789  018C                     	;# 
   790  018E                     	;# 
   791  0191                     	;# 
   792  0191                     	;# 
   793  0192                     	;# 
   794  0193                     	;# 
   795  0193                     	;# 
   796  0193                     	;# 
   797  0194                     	;# 
   798  0195                     	;# 
   799  0196                     	;# 
   800  0199                     	;# 
   801  019A                     	;# 
   802  019B                     	;# 
   803  019B                     	;# 
   804  019B                     	;# 
   805  019B                     	;# 
   806  019C                     	;# 
   807  019C                     	;# 
   808  019D                     	;# 
   809  019E                     	;# 
   810  019F                     	;# 
   811  020C                     	;# 
   812  020E                     	;# 
   813  0211                     	;# 
   814  0211                     	;# 
   815  0212                     	;# 
   816  0212                     	;# 
   817  0213                     	;# 
   818  0213                     	;# 
   819  0214                     	;# 
   820  0214                     	;# 
   821  0215                     	;# 
   822  0215                     	;# 
   823  0215                     	;# 
   824  0216                     	;# 
   825  0216                     	;# 
   826  0217                     	;# 
   827  0217                     	;# 
   828  0291                     	;# 
   829  0291                     	;# 
   830  0292                     	;# 
   831  0293                     	;# 
   832  0294                     	;# 
   833  0295                     	;# 
   834  0295                     	;# 
   835  0296                     	;# 
   836  0391                     	;# 
   837  0392                     	;# 
   838  0393                     	;# 
   839  039A                     	;# 
   840  039C                     	;# 
   841  039D                     	;# 
   842  039E                     	;# 
   843  039F                     	;# 
   844  0FE4                     	;# 
   845  0FE5                     	;# 
   846  0FE6                     	;# 
   847  0FE7                     	;# 
   848  0FE8                     	;# 
   849  0FE9                     	;# 
   850  0FEA                     	;# 
   851  0FEB                     	;# 
   852  0FED                     	;# 
   853  0FEE                     	;# 
   854  0FEF                     	;# 
   855  0000                     	;# 
   856  0001                     	;# 
   857  0002                     	;# 
   858  0003                     	;# 
   859  0004                     	;# 
   860  0005                     	;# 
   861  0006                     	;# 
   862  0007                     	;# 
   863  0008                     	;# 
   864  0009                     	;# 
   865  000A                     	;# 
   866  000B                     	;# 
   867  000C                     	;# 
   868  000E                     	;# 
   869  0011                     	;# 
   870  0012                     	;# 
   871  0015                     	;# 
   872  0016                     	;# 
   873  0016                     	;# 
   874  0017                     	;# 
   875  0018                     	;# 
   876  0019                     	;# 
   877  001A                     	;# 
   878  001B                     	;# 
   879  001C                     	;# 
   880  001E                     	;# 
   881  001F                     	;# 
   882  008C                     	;# 
   883  008E                     	;# 
   884  0091                     	;# 
   885  0092                     	;# 
   886  0095                     	;# 
   887  0096                     	;# 
   888  0097                     	;# 
   889  0098                     	;# 
   890  0099                     	;# 
   891  009A                     	;# 
   892  009B                     	;# 
   893  009B                     	;# 
   894  009C                     	;# 
   895  009D                     	;# 
   896  009E                     	;# 
   897  010C                     	;# 
   898  010E                     	;# 
   899  0111                     	;# 
   900  0112                     	;# 
   901  0113                     	;# 
   902  0114                     	;# 
   903  0115                     	;# 
   904  0116                     	;# 
   905  0117                     	;# 
   906  0118                     	;# 
   907  0119                     	;# 
   908  011A                     	;# 
   909  011B                     	;# 
   910  011D                     	;# 
   911  011D                     	;# 
   912  018C                     	;# 
   913  018E                     	;# 
   914  0191                     	;# 
   915  0191                     	;# 
   916  0192                     	;# 
   917  0193                     	;# 
   918  0193                     	;# 
   919  0193                     	;# 
   920  0194                     	;# 
   921  0195                     	;# 
   922  0196                     	;# 
   923  0199                     	;# 
   924  019A                     	;# 
   925  019B                     	;# 
   926  019B                     	;# 
   927  019B                     	;# 
   928  019B                     	;# 
   929  019C                     	;# 
   930  019C                     	;# 
   931  019D                     	;# 
   932  019E                     	;# 
   933  019F                     	;# 
   934  020C                     	;# 
   935  020E                     	;# 
   936  0211                     	;# 
   937  0211                     	;# 
   938  0212                     	;# 
   939  0212                     	;# 
   940  0213                     	;# 
   941  0213                     	;# 
   942  0214                     	;# 
   943  0214                     	;# 
   944  0215                     	;# 
   945  0215                     	;# 
   946  0215                     	;# 
   947  0216                     	;# 
   948  0216                     	;# 
   949  0217                     	;# 
   950  0217                     	;# 
   951  0291                     	;# 
   952  0291                     	;# 
   953  0292                     	;# 
   954  0293                     	;# 
   955  0294                     	;# 
   956  0295                     	;# 
   957  0295                     	;# 
   958  0296                     	;# 
   959  0391                     	;# 
   960  0392                     	;# 
   961  0393                     	;# 
   962  039A                     	;# 
   963  039C                     	;# 
   964  039D                     	;# 
   965  039E                     	;# 
   966  039F                     	;# 
   967  0FE4                     	;# 
   968  0FE5                     	;# 
   969  0FE6                     	;# 
   970  0FE7                     	;# 
   971  0FE8                     	;# 
   972  0FE9                     	;# 
   973  0FEA                     	;# 
   974  0FEB                     	;# 
   975  0FED                     	;# 
   976  0FEE                     	;# 
   977  0FEF                     	;# 
   978  0000                     	;# 
   979  0001                     	;# 
   980  0002                     	;# 
   981  0003                     	;# 
   982  0004                     	;# 
   983  0005                     	;# 
   984  0006                     	;# 
   985  0007                     	;# 
   986  0008                     	;# 
   987  0009                     	;# 
   988  000A                     	;# 
   989  000B                     	;# 
   990  000C                     	;# 
   991  000E                     	;# 
   992  0011                     	;# 
   993  0012                     	;# 
   994  0015                     	;# 
   995  0016                     	;# 
   996  0016                     	;# 
   997  0017                     	;# 
   998  0018                     	;# 
   999  0019                     	;# 
  1000  001A                     	;# 
  1001  001B                     	;# 
  1002  001C                     	;# 
  1003  001E                     	;# 
  1004  001F                     	;# 
  1005  008C                     	;# 
  1006  008E                     	;# 
  1007  0091                     	;# 
  1008  0092                     	;# 
  1009  0095                     	;# 
  1010  0096                     	;# 
  1011  0097                     	;# 
  1012  0098                     	;# 
  1013  0099                     	;# 
  1014  009A                     	;# 
  1015  009B                     	;# 
  1016  009B                     	;# 
  1017  009C                     	;# 
  1018  009D                     	;# 
  1019  009E                     	;# 
  1020  010C                     	;# 
  1021  010E                     	;# 
  1022  0111                     	;# 
  1023  0112                     	;# 
  1024  0113                     	;# 
  1025  0114                     	;# 
  1026  0115                     	;# 
  1027  0116                     	;# 
  1028  0117                     	;# 
  1029  0118                     	;# 
  1030  0119                     	;# 
  1031  011A                     	;# 
  1032  011B                     	;# 
  1033  011D                     	;# 
  1034  011D                     	;# 
  1035  018C                     	;# 
  1036  018E                     	;# 
  1037  0191                     	;# 
  1038  0191                     	;# 
  1039  0192                     	;# 
  1040  0193                     	;# 
  1041  0193                     	;# 
  1042  0193                     	;# 
  1043  0194                     	;# 
  1044  0195                     	;# 
  1045  0196                     	;# 
  1046  0199                     	;# 
  1047  019A                     	;# 
  1048  019B                     	;# 
  1049  019B                     	;# 
  1050  019B                     	;# 
  1051  019B                     	;# 
  1052  019C                     	;# 
  1053  019C                     	;# 
  1054  019D                     	;# 
  1055  019E                     	;# 
  1056  019F                     	;# 
  1057  020C                     	;# 
  1058  020E                     	;# 
  1059  0211                     	;# 
  1060  0211                     	;# 
  1061  0212                     	;# 
  1062  0212                     	;# 
  1063  0213                     	;# 
  1064  0213                     	;# 
  1065  0214                     	;# 
  1066  0214                     	;# 
  1067  0215                     	;# 
  1068  0215                     	;# 
  1069  0215                     	;# 
  1070  0216                     	;# 
  1071  0216                     	;# 
  1072  0217                     	;# 
  1073  0217                     	;# 
  1074  0291                     	;# 
  1075  0291                     	;# 
  1076  0292                     	;# 
  1077  0293                     	;# 
  1078  0294                     	;# 
  1079  0295                     	;# 
  1080  0295                     	;# 
  1081  0296                     	;# 
  1082  0391                     	;# 
  1083  0392                     	;# 
  1084  0393                     	;# 
  1085  039A                     	;# 
  1086  039C                     	;# 
  1087  039D                     	;# 
  1088  039E                     	;# 
  1089  039F                     	;# 
  1090  0FE4                     	;# 
  1091  0FE5                     	;# 
  1092  0FE6                     	;# 
  1093  0FE7                     	;# 
  1094  0FE8                     	;# 
  1095  0FE9                     	;# 
  1096  0FEA                     	;# 
  1097  0FEB                     	;# 
  1098  0FED                     	;# 
  1099  0FEE                     	;# 
  1100  0FEF                     	;# 
  1101  0000                     	;# 
  1102  0001                     	;# 
  1103  0002                     	;# 
  1104  0003                     	;# 
  1105  0004                     	;# 
  1106  0005                     	;# 
  1107  0006                     	;# 
  1108  0007                     	;# 
  1109  0008                     	;# 
  1110  0009                     	;# 
  1111  000A                     	;# 
  1112  000B                     	;# 
  1113  000C                     	;# 
  1114  000E                     	;# 
  1115  0011                     	;# 
  1116  0012                     	;# 
  1117  0015                     	;# 
  1118  0016                     	;# 
  1119  0016                     	;# 
  1120  0017                     	;# 
  1121  0018                     	;# 
  1122  0019                     	;# 
  1123  001A                     	;# 
  1124  001B                     	;# 
  1125  001C                     	;# 
  1126  001E                     	;# 
  1127  001F                     	;# 
  1128  008C                     	;# 
  1129  008E                     	;# 
  1130  0091                     	;# 
  1131  0092                     	;# 
  1132  0095                     	;# 
  1133  0096                     	;# 
  1134  0097                     	;# 
  1135  0098                     	;# 
  1136  0099                     	;# 
  1137  009A                     	;# 
  1138  009B                     	;# 
  1139  009B                     	;# 
  1140  009C                     	;# 
  1141  009D                     	;# 
  1142  009E                     	;# 
  1143  010C                     	;# 
  1144  010E                     	;# 
  1145  0111                     	;# 
  1146  0112                     	;# 
  1147  0113                     	;# 
  1148  0114                     	;# 
  1149  0115                     	;# 
  1150  0116                     	;# 
  1151  0117                     	;# 
  1152  0118                     	;# 
  1153  0119                     	;# 
  1154  011A                     	;# 
  1155  011B                     	;# 
  1156  011D                     	;# 
  1157  011D                     	;# 
  1158  018C                     	;# 
  1159  018E                     	;# 
  1160  0191                     	;# 
  1161  0191                     	;# 
  1162  0192                     	;# 
  1163  0193                     	;# 
  1164  0193                     	;# 
  1165  0193                     	;# 
  1166  0194                     	;# 
  1167  0195                     	;# 
  1168  0196                     	;# 
  1169  0199                     	;# 
  1170  019A                     	;# 
  1171  019B                     	;# 
  1172  019B                     	;# 
  1173  019B                     	;# 
  1174  019B                     	;# 
  1175  019C                     	;# 
  1176  019C                     	;# 
  1177  019D                     	;# 
  1178  019E                     	;# 
  1179  019F                     	;# 
  1180  020C                     	;# 
  1181  020E                     	;# 
  1182  0211                     	;# 
  1183  0211                     	;# 
  1184  0212                     	;# 
  1185  0212                     	;# 
  1186  0213                     	;# 
  1187  0213                     	;# 
  1188  0214                     	;# 
  1189  0214                     	;# 
  1190  0215                     	;# 
  1191  0215                     	;# 
  1192  0215                     	;# 
  1193  0216                     	;# 
  1194  0216                     	;# 
  1195  0217                     	;# 
  1196  0217                     	;# 
  1197  0291                     	;# 
  1198  0291                     	;# 
  1199  0292                     	;# 
  1200  0293                     	;# 
  1201  0294                     	;# 
  1202  0295                     	;# 
  1203  0295                     	;# 
  1204  0296                     	;# 
  1205  0391                     	;# 
  1206  0392                     	;# 
  1207  0393                     	;# 
  1208  039A                     	;# 
  1209  039C                     	;# 
  1210  039D                     	;# 
  1211  039E                     	;# 
  1212  039F                     	;# 
  1213  0FE4                     	;# 
  1214  0FE5                     	;# 
  1215  0FE6                     	;# 
  1216  0FE7                     	;# 
  1217  0FE8                     	;# 
  1218  0FE9                     	;# 
  1219  0FEA                     	;# 
  1220  0FEB                     	;# 
  1221  0FED                     	;# 
  1222  0FEE                     	;# 
  1223  0FEF                     	;# 
  1224                           
  1225                           	psect	stringtext1
  1226  053A                     __pstringtext1:
  1227  053A                     _GOOD_WSP_VOLTAGE:
  1228  053A  348E               	retlw	142
  1229  053B  3400               	retlw	0
  1230  053C                     __end_of_GOOD_WSP_VOLTAGE:
  1231                           
  1232                           	psect	stringtext2
  1233  053C                     __pstringtext2:
  1234  053C                     _BAD_WSP_VOLTAGE:
  1235  053C  3480               	retlw	128
  1236  053D  3400               	retlw	0
  1237  053E                     __end_of_BAD_WSP_VOLTAGE:
  1238                           
  1239                           	psect	stringtext3
  1240  053E                     __pstringtext3:
  1241  053E                     _AUTOROTATION_DELAY:
  1242  053E  3400               	retlw	0
  1243  053F  3475               	retlw	117
  1244  0540                     __end_of_AUTOROTATION_DELAY:
  1245                           
  1246                           	psect	stringtext4
  1247  0540                     __pstringtext4:
  1248  0540                     _UP_RESISTANSE:
  1249  0540  3420               	retlw	32
  1250  0541  344E               	retlw	78
  1251  0542                     __end_of_UP_RESISTANSE:
  1252                           
  1253                           	psect	stringtext5
  1254  0546                     __pstringtext5:
  1255  0546                     _MELODY_REPEAT_DELAY:
  1256  0546  3403               	retlw	3
  1257  0547                     __end_of_MELODY_REPEAT_DELAY:
  1258                           
  1259                           	psect	stringtext6
  1260  0547                     __pstringtext6:
  1261  0547                     _RELE_POWER_AUTOROTATION_DELAY:
  1262  0547  3405               	retlw	5
  1263  0548                     __end_of_RELE_POWER_AUTOROTATION_DELAY:
  1264                           
  1265                           	psect	stringtext7
  1266  0548                     __pstringtext7:
  1267  0548                     _MOVING_WAIT_DELAY:
  1268  0548  3402               	retlw	2
  1269  0549                     __end_of_MOVING_WAIT_DELAY:
  1270                           
  1271                           	psect	stringtext8
  1272  0549                     __pstringtext8:
  1273  0549                     _FRIMWARE_VERSION_EEPROM_ADR:
  1274  0549  3401               	retlw	1
  1275  054A                     __end_of_FRIMWARE_VERSION_EEPROM_ADR:
  1276                           
  1277                           	psect	stringtext9
  1278  0542                     __pstringtext9:
  1279  0542                     _HIGH_WATER_RESISTANSE:
  1280  0542  34A8               	retlw	168
  1281  0543  3461               	retlw	97
  1282  0544                     __end_of_HIGH_WATER_RESISTANSE:
  1283                           
  1284                           	psect	stringtext10
  1285  0544                     __pstringtext10:
  1286  0544                     _LOW_WATER_RESISTANSE:
  1287  0544  3420               	retlw	32
  1288  0545  344E               	retlw	78
  1289  0546                     __end_of_LOW_WATER_RESISTANSE:
  1290                           
  1291                           	psect	stringtext11
  1292  054A                     __pstringtext11:
  1293  054A                     _RELE_GAP:
  1294  054A  3402               	retlw	2
  1295  054B                     __end_of_RELE_GAP:
  1296                           
  1297                           	psect	stringtext12
  1298  054B                     __pstringtext12:
  1299  054B                     _RELE_POWER_WORK_DELAY:
  1300  054B  340F               	retlw	15
  1301  054C                     __end_of_RELE_POWER_WORK_DELAY:
  1302                           
  1303                           	psect	stringtext13
  1304  054C                     __pstringtext13:
  1305  054C                     _JUMP_MEAS_COUNT:
  1306  054C  340A               	retlw	10
  1307  054D                     __end_of_JUMP_MEAS_COUNT:
  1308                           
  1309                           	psect	stringtext14
  1310  054D                     __pstringtext14:
  1311  054D                     _FUN_MEAS_COUNT:
  1312  054D  340A               	retlw	10
  1313  054E                     __end_of_FUN_MEAS_COUNT:
  1314                           
  1315                           	psect	stringtext15
  1316  054E                     __pstringtext15:
  1317  054E                     _WSP_MEAS_COUNT:
  1318  054E  3404               	retlw	4
  1319  054F                     __end_of_WSP_MEAS_COUNT:
  1320                           
  1321                           	psect	stringtext16
  1322  054F                     __pstringtext16:
  1323  054F                     _AUTOROTATION_DAYS:
  1324  054F  340E               	retlw	14
  1325  0550                     __end_of_AUTOROTATION_DAYS:
  1326                           
  1327                           	psect	stringtext17
  1328  0550                     __pstringtext17:
  1329  0550                     _LONG_ZUMMER_DELAY:
  1330  0550  3482               	retlw	130
  1331  0551                     __end_of_LONG_ZUMMER_DELAY:
  1332                           
  1333                           	psect	stringtext18
  1334  0551                     __pstringtext18:
  1335  0551                     _SHORT_ZUMMER_DELAY:
  1336  0551  341E               	retlw	30
  1337  0552                     __end_of_SHORT_ZUMMER_DELAY:
  1338                           
  1339                           	psect	nvBANK0
  1340  003D                     __pnvBANK0:
  1341  003D                     _TMR0_InterruptHandler:
  1342  003D                     	ds	2
  1343  003F                     _TMR2_InterruptHandler:
  1344  003F                     	ds	2
  1345  0041                     _timer0ReloadVal:
  1346  0041                     	ds	1
  1347  000C                     _PORTAbits	set	12
  1348  000E                     _PORTCbits	set	14
  1349  0015                     _TMR0	set	21
  1350  001C                     _T2CONbits	set	28
  1351  001C                     _T2CON	set	28
  1352  001A                     _TMR2	set	26
  1353  001B                     _PR2	set	27
  1354  0011                     _PIR1bits	set	17
  1355  000B                     _INTCONbits	set	11
  1356  005F                     _GIE	set	95
  1357  008C                     _TRISAbits	set	140
  1358  008E                     _TRISCbits	set	142
  1359  0095                     _OPTION_REG	set	149
  1360  0091                     _PIE1bits	set	145
  1361  0095                     _OPTION_REGbits	set	149
  1362  008E                     _TRISC	set	142
  1363  008C                     _TRISA	set	140
  1364  009D                     _ADCON0bits	set	157
  1365  009D                     _ADCON0	set	157
  1366  009C                     _ADRESH	set	156
  1367  009B                     _ADRESL	set	155
  1368  009E                     _ADCON1	set	158
  1369  0097                     _WDTCON	set	151
  1370  0098                     _OSCTUNE	set	152
  1371  0099                     _OSCCON	set	153
  1372  010C                     _LATAbits	set	268
  1373  010E                     _LATCbits	set	270
  1374  011D                     _APFCON	set	285
  1375  010E                     _LATC	set	270
  1376  010C                     _LATA	set	268
  1377  0116                     _BORCON	set	278
  1378  0191                     _EEADR	set	401
  1379  0196                     _EECON2	set	406
  1380  0193                     _EEDATA	set	403
  1381  018C                     _ANSELAbits	set	396
  1382  018E                     _ANSELCbits	set	398
  1383  018C                     _ANSELA	set	396
  1384  018E                     _ANSELC	set	398
  1385  0CA8                     _RD	set	3240
  1386  0CAA                     _WREN	set	3242
  1387  0CA9                     _WR	set	3241
  1388  020E                     _WPUC	set	526
  1389  020C                     _WPUA	set	524
  1390                           
  1391                           	psect	cinit
  1392  0027                     start_initialization:	
  1393                           ; #config settings
  1394                           
  1395  0027                     __initialization:
  1396                           
  1397                           ; Clear objects allocated to COMMON
  1398  0027  01F7               	clrf	__pbssCOMMON& (0+127)
  1399  0028  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1400  0029  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1401  002A  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  1402  002B  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
  1403                           
  1404                           ; Clear objects allocated to BANK0
  1405  002C  3020               	movlw	low __pbssBANK0
  1406  002D  0084               	movwf	4
  1407  002E  3000               	movlw	high __pbssBANK0
  1408  002F  0085               	movwf	5
  1409  0030  301D               	movlw	29
  1410  0031  3185  2511  3180   	fcall	clear_ram0
  1411  0034                     end_of_initialization:	
  1412                           ;End of C runtime variable initialization code
  1413                           
  1414  0034                     __end_of__initialization:
  1415  0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1416  0035  0020               	movlb	0
  1417  0036  2B50               	ljmp	_main	;jump to C main() function
  1418                           
  1419                           	psect	bssCOMMON
  1420  0077                     __pbssCOMMON:
  1421  0077                     _ff:
  1422  0077                     	ds	4
  1423  007B                     _beep_short_count:
  1424  007B                     	ds	1
  1425                           
  1426                           	psect	bssBANK0
  1427  0020                     __pbssBANK0:
  1428  0020                     _time_rotation:
  1429  0020                     	ds	3
  1430  0023                     ms_tick@ms_count:
  1431  0023                     	ds	2
  1432  0025                     _time_zummer_long:
  1433  0025                     	ds	2
  1434  0027                     _time_zummer_short:
  1435  0027                     	ds	2
  1436  0029                     _time_tone:
  1437  0029                     	ds	2
  1438  002B                     _time_rele_gap:
  1439  002B                     	ds	2
  1440  002D                     _time_rele_control:
  1441  002D                     	ds	2
  1442  002F                     _time_rele_power:
  1443  002F                     	ds	2
  1444  0031                     _ADC_InterruptHandler:
  1445  0031                     	ds	2
  1446  0033                     get_jump@jump_counter:
  1447  0033                     	ds	1
  1448  0034                     get_fun@fun_counter:
  1449  0034                     	ds	1
  1450  0035                     get_wsp@bad_measures_counter:
  1451  0035                     	ds	1
  1452  0036                     sec_work@iled:
  1453  0036                     	ds	1
  1454  0037                     sec_work@sec_count:
  1455  0037                     	ds	1
  1456  0038                     _beep_double_count:
  1457  0038                     	ds	1
  1458  0039                     _beep_long_count:
  1459  0039                     	ds	1
  1460  003A                     _time_meas:
  1461  003A                     	ds	1
  1462  003B                     _time_moving_wait:
  1463  003B                     	ds	1
  1464  003C                     _time_melody:
  1465  003C                     	ds	1
  1466                           
  1467                           	psect	clrtext
  1468  0511                     clear_ram0:	
  1469                           ;	Called with FSR0 containing the base address, and
  1470                           ;	WREG with the size to clear
  1471                           
  1472  0511  0064               	clrwdt	;clear the watchdog before getting into this loop
  1473  0512                     clrloop0:
  1474  0512  0180               	clrf	0	;clear RAM location pointed to by FSR
  1475  0513  3101               	addfsr 0,1
  1476  0514  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1477  0515  2D12               	goto	clrloop0	;have we reached the end yet?
  1478  0516  3400               	retlw	0	;all done for this memory range, return
  1479                           
  1480                           	psect	cstackCOMMON
  1481  0070                     __pcstackCOMMON:
  1482  0070                     ?_PIN_MANAGER_Initialize:
  1483  0070                     ?_OSCILLATOR_Initialize:	
  1484                           ; 1 bytes @ 0x0
  1485                           
  1486  0070                     ?_WDT_Initialize:	
  1487                           ; 1 bytes @ 0x0
  1488                           
  1489  0070                     ?_TMR2_Initialize:	
  1490                           ; 1 bytes @ 0x0
  1491                           
  1492  0070                     ?_ADC_Initialize:	
  1493                           ; 1 bytes @ 0x0
  1494                           
  1495  0070                     ?_TMR0_Initialize:	
  1496                           ; 1 bytes @ 0x0
  1497                           
  1498  0070                     ?_TMR0_ISR:	
  1499                           ; 1 bytes @ 0x0
  1500                           
  1501  0070                     ??_TMR0_ISR:	
  1502                           ; 1 bytes @ 0x0
  1503                           
  1504  0070                     ?_TMR2_ISR:	
  1505                           ; 1 bytes @ 0x0
  1506                           
  1507  0070                     ?_TMR2_DefaultInterruptHandler:	
  1508                           ; 1 bytes @ 0x0
  1509                           
  1510  0070                     ??_TMR2_DefaultInterruptHandler:	
  1511                           ; 1 bytes @ 0x0
  1512                           
  1513  0070                     ?_TMR0_DefaultInterruptHandler:	
  1514                           ; 1 bytes @ 0x0
  1515                           
  1516  0070                     ??_TMR0_DefaultInterruptHandler:	
  1517                           ; 1 bytes @ 0x0
  1518                           
  1519  0070                     ?_EEPROM_ReadByte:	
  1520                           ; 1 bytes @ 0x0
  1521                           
  1522  0070                     ?_SYSTEM_Initialize:	
  1523                           ; 1 bytes @ 0x0
  1524                           
  1525  0070                     ?_ADC_GetConversion:	
  1526                           ; 1 bytes @ 0x0
  1527                           
  1528  0070                     ?_INTERRUPT_InterruptManager:	
  1529                           ; 1 bytes @ 0x0
  1530                           
  1531  0070                     ?_TMR2_StartTimer:	
  1532                           ; 1 bytes @ 0x0
  1533                           
  1534  0070                     ?_start_tone:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537  0070                     ??_start_tone:	
  1538                           ; 1 bytes @ 0x0
  1539                           
  1540  0070                     ?_stop_tone:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543  0070                     ??_stop_tone:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546  0070                     ?_beep_short:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549  0070                     ??_beep_short:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552  0070                     ?_beep_long:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555  0070                     ??_beep_long:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558  0070                     ?_beep_double:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561  0070                     ??_beep_double:	
  1562                           ; 1 bytes @ 0x0
  1563                           
  1564  0070                     ?_go_close:	
  1565                           ; 1 bytes @ 0x0
  1566                           
  1567  0070                     ?_go_open:	
  1568                           ; 1 bytes @ 0x0
  1569                           
  1570  0070                     ?_go_close_alt:	
  1571                           ; 1 bytes @ 0x0
  1572                           
  1573  0070                     ?_go_open_alt:	
  1574                           ; 1 bytes @ 0x0
  1575                           
  1576  0070                     ?_rele_off:	
  1577                           ; 1 bytes @ 0x0
  1578                           
  1579  0070                     ?_close:	
  1580                           ; 1 bytes @ 0x0
  1581                           
  1582  0070                     ?_open:	
  1583                           ; 1 bytes @ 0x0
  1584                           
  1585  0070                     ?_rele_tick:	
  1586                           ; 1 bytes @ 0x0
  1587                           
  1588  0070                     ??_rele_tick:	
  1589                           ; 1 bytes @ 0x0
  1590                           
  1591  0070                     ?_start_alarm:	
  1592                           ; 1 bytes @ 0x0
  1593                           
  1594  0070                     ?_clear_alarm:	
  1595                           ; 1 bytes @ 0x0
  1596                           
  1597  0070                     ?_fun_work:	
  1598                           ; 1 bytes @ 0x0
  1599                           
  1600  0070                     ?_switch_wm:	
  1601                           ; 1 bytes @ 0x0
  1602                           
  1603  0070                     ?_minute_tick:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606  0070                     ??_minute_tick:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609  0070                     ?_sec_30_work:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612  0070                     ??_sec_30_work:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615  0070                     ?_sec_work:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618  0070                     ?_ms_200_work:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621  0070                     ??_ms_200_work:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624  0070                     ?_ms_100_work:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627  0070                     ??_ms_100_work:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630  0070                     ?_ms_tick:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633  0070                     ?_eeprom_set:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636  0070                     ?_hardware_work:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639  0070                     ?_zummer_switch:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642  0070                     ??_zummer_switch:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645  0070                     ?_get_wsp:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648  0070                     ?_get_fun:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651  0070                     ?_get_jump:	
  1652                           ; 1 bytes @ 0x0
  1653                           
  1654  0070                     ?_start_setup:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657  0070                     ?_main:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660                           
  1661                           ; 1 bytes @ 0x0
  1662  0070                     	ds	1
  1663  0071                     ??_sec_work:
  1664                           
  1665                           ; 1 bytes @ 0x1
  1666  0071                     	ds	1
  1667  0072                     ??_PIN_MANAGER_Initialize:
  1668  0072                     ??_OSCILLATOR_Initialize:	
  1669                           ; 1 bytes @ 0x2
  1670                           
  1671  0072                     ??_WDT_Initialize:	
  1672                           ; 1 bytes @ 0x2
  1673                           
  1674  0072                     ??_ADC_Initialize:	
  1675                           ; 1 bytes @ 0x2
  1676                           
  1677  0072                     ??_TMR2_ISR:	
  1678                           ; 1 bytes @ 0x2
  1679                           
  1680  0072                     ?_TMR2_SetInterruptHandler:	
  1681                           ; 1 bytes @ 0x2
  1682                           
  1683  0072                     ?_TMR0_SetInterruptHandler:	
  1684                           ; 1 bytes @ 0x2
  1685                           
  1686  0072                     ??_EEPROM_ReadByte:	
  1687                           ; 1 bytes @ 0x2
  1688                           
  1689  0072                     ?_EEPROM_WriteByte:	
  1690                           ; 1 bytes @ 0x2
  1691                           
  1692  0072                     ??_ADC_GetConversion:	
  1693                           ; 1 bytes @ 0x2
  1694                           
  1695  0072                     ??_INTERRUPT_InterruptManager:	
  1696                           ; 1 bytes @ 0x2
  1697                           
  1698  0072                     ??_TMR2_StartTimer:	
  1699                           ; 1 bytes @ 0x2
  1700                           
  1701  0072                     ??_go_close:	
  1702                           ; 1 bytes @ 0x2
  1703                           
  1704  0072                     ??_go_open:	
  1705                           ; 1 bytes @ 0x2
  1706                           
  1707  0072                     ??_go_close_alt:	
  1708                           ; 1 bytes @ 0x2
  1709                           
  1710  0072                     ??_go_open_alt:	
  1711                           ; 1 bytes @ 0x2
  1712                           
  1713  0072                     ??_rele_off:	
  1714                           ; 1 bytes @ 0x2
  1715                           
  1716  0072                     ??_start_alarm:	
  1717                           ; 1 bytes @ 0x2
  1718                           
  1719  0072                     ??_clear_alarm:	
  1720                           ; 1 bytes @ 0x2
  1721                           
  1722  0072                     ??_ms_tick:	
  1723                           ; 1 bytes @ 0x2
  1724                           
  1725  0072                     ??_hardware_work:	
  1726                           ; 1 bytes @ 0x2
  1727                           
  1728  0072                     ??_get_fun:	
  1729                           ; 1 bytes @ 0x2
  1730                           
  1731  0072                     ??_get_jump:	
  1732                           ; 1 bytes @ 0x2
  1733                           
  1734  0072                     EEPROM_WriteByte@dt:	
  1735                           ; 1 bytes @ 0x2
  1736                           
  1737  0072                     TMR2_SetInterruptHandler@InterruptHandler:	
  1738                           ; 1 bytes @ 0x2
  1739                           
  1740  0072                     TMR0_SetInterruptHandler@InterruptHandler:	
  1741                           ; 2 bytes @ 0x2
  1742                           
  1743                           
  1744                           ; 2 bytes @ 0x2
  1745  0072                     	ds	1
  1746  0073                     ??_EEPROM_WriteByte:
  1747  0073                     ??_close:	
  1748                           ; 1 bytes @ 0x3
  1749                           
  1750  0073                     ??_open:	
  1751                           ; 1 bytes @ 0x3
  1752                           
  1753  0073                     ??_fun_work:	
  1754                           ; 1 bytes @ 0x3
  1755                           
  1756  0073                     ??_switch_wm:	
  1757                           ; 1 bytes @ 0x3
  1758                           
  1759  0073                     ADC_GetConversion@channel:	
  1760                           ; 1 bytes @ 0x3
  1761                           
  1762                           
  1763                           ; 1 bytes @ 0x3
  1764  0073                     	ds	1
  1765  0074                     ??_TMR2_Initialize:
  1766  0074                     ??_TMR0_Initialize:	
  1767                           ; 1 bytes @ 0x4
  1768                           
  1769  0074                     ??_TMR2_SetInterruptHandler:	
  1770                           ; 1 bytes @ 0x4
  1771                           
  1772  0074                     ??_TMR0_SetInterruptHandler:	
  1773                           ; 1 bytes @ 0x4
  1774                           
  1775  0074                     ??_get_wsp:	
  1776                           ; 1 bytes @ 0x4
  1777                           
  1778  0074                     EEPROM_ReadByte@addr:	
  1779                           ; 1 bytes @ 0x4
  1780                           
  1781                           
  1782                           ; 1 bytes @ 0x4
  1783  0074                     	ds	1
  1784  0075                     ??_SYSTEM_Initialize:
  1785  0075                     EEPROM_WriteByte@addr:	
  1786                           ; 1 bytes @ 0x5
  1787                           
  1788                           
  1789                           ; 1 bytes @ 0x5
  1790  0075                     	ds	1
  1791  0076                     EEPROM_WriteByte@status:
  1792                           
  1793                           ; 1 bytes @ 0x6
  1794  0076                     	ds	1
  1795  0077                     ??_start_setup:
  1796  0077                     ??_main:	
  1797                           ; 1 bytes @ 0x7
  1798                           
  1799                           
  1800                           	psect	cstackBANK0
  1801  0042                     __pcstackBANK0:	
  1802                           ; 1 bytes @ 0x7
  1803                           
  1804  0042                     ??_eeprom_set:
  1805  0042                     get_wsp@res:	
  1806                           ; 1 bytes @ 0x0
  1807                           
  1808                           
  1809                           ; 2 bytes @ 0x0
  1810  0042                     	ds	1
  1811  0043                     eeprom_set@vers:
  1812                           
  1813                           ; 1 bytes @ 0x1
  1814  0043                     	ds	1
  1815                           
  1816                           	psect	maintext
  1817  0350                     __pmaintext:	
  1818 ;;
  1819 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1820 ;;
  1821 ;; *************** function _main *****************
  1822 ;; Defined at:
  1823 ;;		line 799 in file "main.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;		None
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;		None
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0, pclath, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : B1F/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1
  1837 ;;      Params:         0       0       0
  1838 ;;      Locals:         0       0       0
  1839 ;;      Temps:          0       0       0
  1840 ;;      Totals:         0       0       0
  1841 ;;Total ram usage:        0 bytes
  1842 ;; Hardware stack levels required when called: 11
  1843 ;; This function calls:
  1844 ;;		_close
  1845 ;;		_fun_work
  1846 ;;		_get_fun
  1847 ;;		_get_jump
  1848 ;;		_get_wsp
  1849 ;;		_hardware_work
  1850 ;;		_start_setup
  1851 ;;		_switch_wm
  1852 ;; This function is called by:
  1853 ;;		Startup code after reset
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857  0350                     _main:	
  1858                           ;psect for function _main
  1859                           
  1860  0350                     l2641:	
  1861                           ;incstack = 0
  1862                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1863                           
  1864                           
  1865                           ;main.c: 801:     start_setup();
  1866  0350  3181  21D6  3183   	fcall	_start_setup
  1867  0353                     l542:	
  1868                           ;main.c: 804:     while (1) {
  1869                           
  1870  0353  0064               	clrwdt	;# 
  1871  0354                     l2643:
  1872                           
  1873                           ;main.c: 808:         hardware_work();
  1874  0354  3182  224C  3183   	fcall	_hardware_work
  1875  0357                     l2645:
  1876                           
  1877                           ;main.c: 812:         if (!ff.bits.ALARM_ON) {
  1878  0357  1877               	btfsc	_ff,0
  1879  0358  2B5A               	goto	u2501
  1880  0359  2B5B               	goto	u2500
  1881  035A                     u2501:
  1882  035A  2B6B               	goto	l2649
  1883  035B                     u2500:
  1884  035B                     l2647:
  1885                           
  1886                           ;main.c: 814:             get_jump();
  1887  035B  3182  2280  3183   	fcall	_get_jump
  1888                           
  1889                           ;main.c: 815:             switch_wm();
  1890  035E  3183  2309  3183   	fcall	_switch_wm
  1891                           
  1892                           ;main.c: 817:             get_fun();
  1893  0361  3181  2196  3183   	fcall	_get_fun
  1894                           
  1895                           ;main.c: 818:             fun_work();
  1896  0364  3182  22B3  3183   	fcall	_fun_work
  1897                           
  1898                           ;main.c: 820:             get_wsp();
  1899  0367  3180  20A4  3183   	fcall	_get_wsp
  1900                           
  1901                           ;main.c: 824:         } else {
  1902  036A  2B53               	goto	l542
  1903  036B                     l2649:
  1904                           
  1905                           ;main.c: 825:             close();
  1906  036B  3183  23B8  3183   	fcall	_close
  1907  036E  2B53               	goto	l542
  1908  036F  2826               	ljmp	start
  1909  0370                     __end_of_main:
  1910                           
  1911                           	psect	text1
  1912  0309                     __ptext1:	
  1913 ;; *************** function _switch_wm *****************
  1914 ;; Defined at:
  1915 ;;		line 335 in file "main.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;		None
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;		None
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg, status,2, status,0, pclath, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMMON   BANK0   BANK1
  1929 ;;      Params:         0       0       0
  1930 ;;      Locals:         0       0       0
  1931 ;;      Temps:          1       0       0
  1932 ;;      Totals:         1       0       0
  1933 ;;Total ram usage:        1 bytes
  1934 ;; Hardware stack levels used: 1
  1935 ;; Hardware stack levels required when called: 8
  1936 ;; This function calls:
  1937 ;;		_rele_off
  1938 ;; This function is called by:
  1939 ;;		_main
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943  0309                     _switch_wm:	
  1944                           ;psect for function _switch_wm
  1945                           
  1946  0309                     l2255:	
  1947                           ;incstack = 0
  1948                           ; Regs used in _switch_wm: [wreg+status,2+status,0+pclath+cstack]
  1949                           
  1950                           
  1951                           ;main.c: 336:     if (ff.bits.JUMP_LOW) {
  1952  0309  1FF7               	btfss	_ff,7
  1953  030A  2B0C               	goto	u2041
  1954  030B  2B0D               	goto	u2040
  1955  030C                     u2041:
  1956  030C  2B1C               	goto	l384
  1957  030D                     u2040:
  1958  030D                     l2257:
  1959                           
  1960                           ;main.c: 337:         if (!ff.bits.UNIVERSAL_VORK_MODE_ON) {
  1961  030D  18FA               	btfsc	_ff+3,1
  1962  030E  2B10               	goto	u2051
  1963  030F  2B11               	goto	u2050
  1964  0310                     u2051:
  1965  0310  2B2C               	goto	l389
  1966  0311                     u2050:
  1967  0311                     l2259:
  1968                           
  1969                           ;main.c: 338:             ff.bits.NORMAL_WORK_MODE_ON = 0;
  1970  0311  107A               	bcf	_ff+3,0
  1971                           
  1972                           ;main.c: 339:             ff.bits.UNIVERSAL_VORK_MODE_ON = 1;
  1973  0312  14FA               	bsf	_ff+3,1
  1974  0313                     l2261:
  1975                           
  1976                           ;main.c: 340:             rele_off();
  1977  0313  3184  2460  3183   	fcall	_rele_off
  1978  0316                     l2263:
  1979                           
  1980                           ;main.c: 342:             beep_long_count = 2;
  1981  0316  3002               	movlw	2
  1982  0317  00F3               	movwf	??_switch_wm
  1983  0318  0873               	movf	??_switch_wm,w
  1984  0319  0020               	movlb	0	; select bank0
  1985  031A  00B9               	movwf	_beep_long_count
  1986  031B  2B2C               	goto	l389
  1987  031C                     l384:
  1988  031C  1C78               	btfss	_ff+1,0
  1989  031D  2B1F               	goto	u2061
  1990  031E  2B20               	goto	u2060
  1991  031F                     u2061:
  1992  031F  2B2C               	goto	l389
  1993  0320                     u2060:
  1994  0320                     l2265:
  1995                           
  1996                           ;main.c: 345:         if (!ff.bits.NORMAL_WORK_MODE_ON) {
  1997  0320  187A               	btfsc	_ff+3,0
  1998  0321  2B23               	goto	u2071
  1999  0322  2B24               	goto	u2070
  2000  0323                     u2071:
  2001  0323  2B2C               	goto	l389
  2002  0324                     u2070:
  2003  0324                     l2267:
  2004                           
  2005                           ;main.c: 346:             ff.bits.NORMAL_WORK_MODE_ON = 1;
  2006  0324  147A               	bsf	_ff+3,0
  2007                           
  2008                           ;main.c: 347:             ff.bits.UNIVERSAL_VORK_MODE_ON = 0;
  2009  0325  10FA               	bcf	_ff+3,1
  2010  0326                     l2269:
  2011                           
  2012                           ;main.c: 348:             rele_off();
  2013  0326  3184  2460  3183   	fcall	_rele_off
  2014  0329                     l2271:
  2015                           
  2016                           ;main.c: 350:             beep_long_count = 1;
  2017  0329  0020               	movlb	0	; select bank0
  2018  032A  01B9               	clrf	_beep_long_count
  2019  032B  0AB9               	incf	_beep_long_count,f
  2020  032C                     l389:
  2021  032C  0008               	return
  2022  032D                     __end_of_switch_wm:
  2023                           
  2024                           	psect	text2
  2025  01D6                     __ptext2:	
  2026 ;; *************** function _start_setup *****************
  2027 ;; Defined at:
  2028 ;;		line 719 in file "main.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;		None
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2, status,0, pclath, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1
  2042 ;;      Params:         0       0       0
  2043 ;;      Locals:         0       0       0
  2044 ;;      Temps:          0       0       0
  2045 ;;      Totals:         0       0       0
  2046 ;;Total ram usage:        0 bytes
  2047 ;; Hardware stack levels used: 1
  2048 ;; Hardware stack levels required when called: 10
  2049 ;; This function calls:
  2050 ;;		_SYSTEM_Initialize
  2051 ;;		_TMR0_SetInterruptHandler
  2052 ;;		_TMR2_SetInterruptHandler
  2053 ;;		_TMR2_StartTimer
  2054 ;;		_eeprom_set
  2055 ;; This function is called by:
  2056 ;;		_main
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060  01D6                     _start_setup:	
  2061                           ;psect for function _start_setup
  2062                           
  2063  01D6                     l2589:	
  2064                           ;incstack = 0
  2065                           ; Regs used in _start_setup: [wreg+status,2+status,0+pclath+cstack]
  2066                           
  2067                           
  2068                           ;main.c: 721:     SYSTEM_Initialize();
  2069  01D6  3184  244D  3181   	fcall	_SYSTEM_Initialize
  2070  01D9                     l2591:
  2071                           
  2072                           ;main.c: 722:     (INTCONbits.GIE = 1);
  2073  01D9  178B               	bsf	11,7	;volatile
  2074  01DA                     l2593:
  2075                           
  2076                           ;main.c: 723:     (INTCONbits.PEIE = 1);
  2077  01DA  170B               	bsf	11,6	;volatile
  2078                           
  2079                           ;main.c: 726:     eeprom_set();
  2080  01DB  3184  2425  3181   	fcall	_eeprom_set
  2081                           
  2082                           ;main.c: 728:     TMR0_SetInterruptHandler(zummer_switch);
  2083  01DE  30D4               	movlw	low _zummer_switch
  2084  01DF  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2085  01E0  3004               	movlw	high _zummer_switch
  2086  01E1  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2087  01E2  3185  251D  3181   	fcall	_TMR0_SetInterruptHandler
  2088                           
  2089                           ;main.c: 729:     TMR2_SetInterruptHandler(ms_tick);
  2090  01E5  3051               	movlw	low _ms_tick
  2091  01E6  00F2               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2092  01E7  3001               	movlw	high _ms_tick
  2093  01E8  00F3               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2094  01E9  3185  2517  3181   	fcall	_TMR2_SetInterruptHandler
  2095  01EC                     l2595:
  2096                           
  2097                           ;main.c: 730:     TMR2_StartTimer();
  2098  01EC  3185  2534  3181   	fcall	_TMR2_StartTimer
  2099  01EF                     l2597:
  2100                           
  2101                           ;main.c: 747:     INTCONbits.TMR0IE = 0;
  2102  01EF  128B               	bcf	11,5	;volatile
  2103                           
  2104                           ;main.c: 748:     ff.value = 0;
  2105  01F0  3000               	movlw	0
  2106  01F1  00FA               	movwf	_ff+3
  2107  01F2  3000               	movlw	0
  2108  01F3  00F9               	movwf	_ff+2
  2109  01F4  3000               	movlw	0
  2110  01F5  00F8               	movwf	_ff+1
  2111  01F6  3000               	movlw	0
  2112  01F7  00F7               	movwf	_ff
  2113  01F8                     l2599:
  2114  01F8  0022               	movlb	2	; select bank2
  2115  01F9  128E               	bcf	14,5	;volatile
  2116  01FA                     l2601:
  2117  01FA  120E               	bcf	14,4	;volatile
  2118  01FB                     l2603:
  2119  01FB  100E               	bcf	14,0	;volatile
  2120  01FC                     l2605:
  2121  01FC  108E               	bcf	14,1	;volatile
  2122  01FD                     l2607:
  2123  01FD  128C               	bcf	12,5	;volatile
  2124  01FE                     l2609:
  2125  01FE  120C               	bcf	12,4	;volatile
  2126  01FF                     l536:
  2127                           
  2128                           ;main.c: 757:     time_rotation = 0;
  2129  01FF  3000               	movlw	0
  2130  0200  0020               	movlb	0	; select bank0
  2131  0201  00A0               	movwf	_time_rotation
  2132  0202  3000               	movlw	0
  2133  0203  00A1               	movwf	_time_rotation+1
  2134  0204  3000               	movlw	0
  2135  0205  00A2               	movwf	_time_rotation+2
  2136  0206                     l2611:
  2137                           
  2138                           ;main.c: 758:     time_rele_power = 0;
  2139  0206  01AF               	clrf	_time_rele_power
  2140  0207  01B0               	clrf	_time_rele_power+1
  2141  0208                     l2613:
  2142                           
  2143                           ;main.c: 759:     time_rele_control = 0;
  2144  0208  01AD               	clrf	_time_rele_control
  2145  0209  01AE               	clrf	_time_rele_control+1
  2146  020A                     l2615:
  2147                           
  2148                           ;main.c: 760:     time_rele_gap = 0;
  2149  020A  01AB               	clrf	_time_rele_gap
  2150  020B  01AC               	clrf	_time_rele_gap+1
  2151  020C                     l2617:
  2152                           
  2153                           ;main.c: 761:     time_tone = 0;
  2154  020C  01A9               	clrf	_time_tone
  2155  020D  01AA               	clrf	_time_tone+1
  2156  020E                     l2619:
  2157                           
  2158                           ;main.c: 766:     time_melody = 0;
  2159  020E  01BC               	clrf	_time_melody
  2160  020F                     l2621:
  2161                           
  2162                           ;main.c: 767:     time_zummer_short = 0;
  2163  020F  01A7               	clrf	_time_zummer_short
  2164  0210  01A8               	clrf	_time_zummer_short+1
  2165  0211                     l2623:
  2166                           
  2167                           ;main.c: 768:     time_zummer_long = 0;
  2168  0211  01A5               	clrf	_time_zummer_long
  2169  0212  01A6               	clrf	_time_zummer_long+1
  2170  0213                     l2625:
  2171                           
  2172                           ;main.c: 771:     time_meas = 0;
  2173  0213  01BA               	clrf	_time_meas
  2174  0214                     l537:
  2175  0214  0008               	return
  2176  0215                     __end_of_start_setup:
  2177                           
  2178                           	psect	text3
  2179  0425                     __ptext3:	
  2180 ;; *************** function _eeprom_set *****************
  2181 ;; Defined at:
  2182 ;;		line 526 in file "main.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;		None
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  vers            1    1[BANK0 ] unsigned char 
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      void 
  2189 ;; Registers used:
  2190 ;;		wreg, status,2, status,0, pclath, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMMON   BANK0   BANK1
  2196 ;;      Params:         0       0       0
  2197 ;;      Locals:         0       1       0
  2198 ;;      Temps:          0       1       0
  2199 ;;      Totals:         0       2       0
  2200 ;;Total ram usage:        2 bytes
  2201 ;; Hardware stack levels used: 1
  2202 ;; Hardware stack levels required when called: 8
  2203 ;; This function calls:
  2204 ;;		_EEPROM_ReadByte
  2205 ;;		_EEPROM_WriteByte
  2206 ;; This function is called by:
  2207 ;;		_start_setup
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211  0425                     _eeprom_set:	
  2212                           ;psect for function _eeprom_set
  2213                           
  2214  0425                     l2551:	
  2215                           ;incstack = 0
  2216                           ; Regs used in _eeprom_set: [wreg+status,2+status,0+pclath+cstack]
  2217                           
  2218                           
  2219                           ;main.c: 527:     char vers = EEPROM_ReadByte(FRIMWARE_VERSION_EEPROM_ADR);
  2220  0425  3001               	movlw	1
  2221  0426  3184  2439  3184   	fcall	_EEPROM_ReadByte
  2222  0429  0020               	movlb	0	; select bank0
  2223  042A  00C2               	movwf	??_eeprom_set
  2224  042B  0842               	movf	??_eeprom_set,w
  2225  042C  00C3               	movwf	eeprom_set@vers
  2226  042D                     l2553:
  2227                           
  2228                           ;main.c: 528:     if (vers == 0xFF) {
  2229  042D  0A43               	incf	eeprom_set@vers,w
  2230  042E  1D03               	btfss	3,2
  2231  042F  2C31               	goto	u2441
  2232  0430  2C32               	goto	u2440
  2233  0431                     u2441:
  2234  0431  2C38               	goto	l457
  2235  0432                     u2440:
  2236  0432                     l2555:
  2237                           
  2238                           ;main.c: 529:         EEPROM_WriteByte(FRIMWARE_VERSION_EEPROM_ADR, 1);
  2239  0432  01F2               	clrf	EEPROM_WriteByte@dt
  2240  0433  0AF2               	incf	EEPROM_WriteByte@dt,f
  2241  0434  3001               	movlw	1
  2242  0435  3183  232D  3184   	fcall	_EEPROM_WriteByte
  2243  0438                     l457:
  2244  0438  0008               	return
  2245  0439                     __end_of_eeprom_set:
  2246                           
  2247                           	psect	text4
  2248  032D                     __ptext4:	
  2249 ;; *************** function _EEPROM_WriteByte *****************
  2250 ;; Defined at:
  2251 ;;		line 6 in file "eeprom.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  addr            1    wreg     unsigned char 
  2254 ;;  dt              1    2[COMMON] unsigned char 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  addr            1    5[COMMON] unsigned char 
  2257 ;;  status          1    6[COMMON] unsigned char 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, status,2
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1
  2267 ;;      Params:         1       0       0
  2268 ;;      Locals:         2       0       0
  2269 ;;      Temps:          2       0       0
  2270 ;;      Totals:         5       0       0
  2271 ;;Total ram usage:        5 bytes
  2272 ;; Hardware stack levels used: 1
  2273 ;; Hardware stack levels required when called: 7
  2274 ;; This function calls:
  2275 ;;		Nothing
  2276 ;; This function is called by:
  2277 ;;		_eeprom_set
  2278 ;;		_EEPROM_WriteWord
  2279 ;;		_EEPROM_Writeint24
  2280 ;;		_EEPROM_WriteString
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284  032D                     _EEPROM_WriteByte:	
  2285                           ;psect for function _EEPROM_WriteByte
  2286                           
  2287                           
  2288                           ;incstack = 0
  2289                           ; Regs used in _EEPROM_WriteByte: [wreg+status,2]
  2290                           ;EEPROM_WriteByte@addr stored from wreg
  2291  032D  00F5               	movwf	EEPROM_WriteByte@addr
  2292  032E                     l2513:
  2293  032E                     l564:	
  2294                           ;eeprom.c: 7:     unsigned char status;;eeprom.c: 8:     while (WR);
  2295                           
  2296  032E  0023               	movlb	3	; select bank3
  2297  032F  1895               	btfsc	21,1	;volsfr
  2298  0330  2B32               	goto	u2401
  2299  0331  2B33               	goto	u2400
  2300  0332                     u2401:
  2301  0332  2B2E               	goto	l564
  2302  0333                     u2400:
  2303  0333                     l2515:
  2304                           
  2305                           ;eeprom.c: 9:     status = GIE;
  2306  0333  3000               	movlw	0
  2307  0334  1B8B               	btfsc	11,7	;volatile
  2308  0335  3001               	movlw	1
  2309  0336  00F6               	movwf	EEPROM_WriteByte@status
  2310  0337                     l2517:
  2311                           
  2312                           ;eeprom.c: 10:     GIE = 0;
  2313  0337  138B               	bcf	11,7	;volatile
  2314  0338                     l2519:
  2315                           
  2316                           ;eeprom.c: 11:     EEADR = addr;
  2317  0338  0875               	movf	EEPROM_WriteByte@addr,w
  2318  0339  00F3               	movwf	??_EEPROM_WriteByte
  2319  033A  01F4               	clrf	??_EEPROM_WriteByte+1
  2320  033B  0873               	movf	??_EEPROM_WriteByte,w
  2321  033C  0091               	movwf	17	;volatile
  2322  033D  0874               	movf	??_EEPROM_WriteByte+1,w
  2323  033E  0092               	movwf	18	;volatile
  2324  033F                     l2521:
  2325                           
  2326                           ;eeprom.c: 12:     EEDATA = dt;
  2327  033F  0872               	movf	EEPROM_WriteByte@dt,w
  2328  0340  0093               	movwf	19	;volatile
  2329  0341                     l2523:
  2330                           
  2331                           ;eeprom.c: 13:     WREN = 1;
  2332  0341  1515               	bsf	21,2	;volsfr
  2333  0342                     l2525:
  2334                           
  2335                           ;eeprom.c: 14:     EECON2 = 0x55;
  2336  0342  3055               	movlw	85
  2337  0343  0096               	movwf	22	;volsfr
  2338  0344                     l2527:
  2339                           
  2340                           ;eeprom.c: 15:     EECON2 = 0xAA;
  2341  0344  30AA               	movlw	170
  2342  0345  0096               	movwf	22	;volsfr
  2343  0346                     l2529:
  2344                           
  2345                           ;eeprom.c: 16:     WR = 1;
  2346  0346  1495               	bsf	21,1	;volsfr
  2347  0347                     l2531:
  2348                           
  2349                           ;eeprom.c: 17:     GIE = status;
  2350  0347  1876               	btfsc	EEPROM_WriteByte@status,0
  2351  0348  2B4A               	goto	u2411
  2352  0349  2B4C               	goto	u2410
  2353  034A                     u2411:
  2354  034A  178B               	bsf	11,7	;volatile
  2355  034B  2B4D               	goto	u2424
  2356  034C                     u2410:
  2357  034C  138B               	bcf	11,7	;volatile
  2358  034D                     u2424:
  2359  034D                     l2533:
  2360                           
  2361                           ;eeprom.c: 18:     WREN = 0;
  2362  034D  0023               	movlb	3	; select bank3
  2363  034E  1115               	bcf	21,2	;volsfr
  2364  034F                     l567:
  2365  034F  0008               	return
  2366  0350                     __end_of_EEPROM_WriteByte:
  2367                           
  2368                           	psect	text5
  2369  0439                     __ptext5:	
  2370 ;; *************** function _EEPROM_ReadByte *****************
  2371 ;; Defined at:
  2372 ;;		line 21 in file "eeprom.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  addr            1    wreg     unsigned char 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  addr            1    4[COMMON] unsigned char 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      unsigned char 
  2379 ;; Registers used:
  2380 ;;		wreg
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1
  2386 ;;      Params:         0       0       0
  2387 ;;      Locals:         1       0       0
  2388 ;;      Temps:          2       0       0
  2389 ;;      Totals:         3       0       0
  2390 ;;Total ram usage:        3 bytes
  2391 ;; Hardware stack levels used: 1
  2392 ;; Hardware stack levels required when called: 7
  2393 ;; This function calls:
  2394 ;;		Nothing
  2395 ;; This function is called by:
  2396 ;;		_eeprom_set
  2397 ;;		_EEPROM_ReadWord
  2398 ;;		_EEPROM_Readint24
  2399 ;;		_EEPROM_ReadString
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403  0439                     _EEPROM_ReadByte:	
  2404                           ;psect for function _EEPROM_ReadByte
  2405                           
  2406                           
  2407                           ;incstack = 0
  2408                           ; Regs used in _EEPROM_ReadByte: [wreg]
  2409                           ;EEPROM_ReadByte@addr stored from wreg
  2410  0439  00F4               	movwf	EEPROM_ReadByte@addr
  2411  043A                     l2503:
  2412  043A                     l570:	
  2413                           ;eeprom.c: 22:     while (RD || WR);
  2414                           
  2415  043A  0023               	movlb	3	; select bank3
  2416  043B  1815               	btfsc	21,0	;volsfr
  2417  043C  2C3E               	goto	u2381
  2418  043D  2C3F               	goto	u2380
  2419  043E                     u2381:
  2420  043E  2C3A               	goto	l570
  2421  043F                     u2380:
  2422  043F                     l2505:
  2423  043F  1895               	btfsc	21,1	;volsfr
  2424  0440  2C42               	goto	u2391
  2425  0441  2C43               	goto	u2390
  2426  0442                     u2391:
  2427  0442  2C3A               	goto	l570
  2428  0443                     u2390:
  2429  0443                     l2507:
  2430                           
  2431                           ;eeprom.c: 23:     EEADR = addr;
  2432  0443  0874               	movf	EEPROM_ReadByte@addr,w
  2433  0444  00F2               	movwf	??_EEPROM_ReadByte
  2434  0445  01F3               	clrf	??_EEPROM_ReadByte+1
  2435  0446  0872               	movf	??_EEPROM_ReadByte,w
  2436  0447  0091               	movwf	17	;volatile
  2437  0448  0873               	movf	??_EEPROM_ReadByte+1,w
  2438  0449  0092               	movwf	18	;volatile
  2439  044A                     l2509:
  2440                           
  2441                           ;eeprom.c: 24:     RD = 1;
  2442  044A  1415               	bsf	21,0	;volsfr
  2443                           
  2444                           ;eeprom.c: 25:     return EEDATA;
  2445  044B  0813               	movf	19,w	;volatile
  2446  044C                     l573:
  2447  044C  0008               	return
  2448  044D                     __end_of_EEPROM_ReadByte:
  2449                           
  2450                           	psect	text6
  2451  0534                     __ptext6:	
  2452 ;; *************** function _TMR2_StartTimer *****************
  2453 ;; Defined at:
  2454 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;		None
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;		None
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      void 
  2461 ;; Registers used:
  2462 ;;		None
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1
  2468 ;;      Params:         0       0       0
  2469 ;;      Locals:         0       0       0
  2470 ;;      Temps:          0       0       0
  2471 ;;      Totals:         0       0       0
  2472 ;;Total ram usage:        0 bytes
  2473 ;; Hardware stack levels used: 1
  2474 ;; Hardware stack levels required when called: 7
  2475 ;; This function calls:
  2476 ;;		Nothing
  2477 ;; This function is called by:
  2478 ;;		_start_setup
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482  0534                     _TMR2_StartTimer:	
  2483                           ;psect for function _TMR2_StartTimer
  2484                           
  2485  0534                     l2155:	
  2486                           ;incstack = 0
  2487                           ; Regs used in _TMR2_StartTimer: []
  2488                           
  2489                           
  2490                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  2491  0534  0020               	movlb	0	; select bank0
  2492  0535  151C               	bsf	28,2	;volatile
  2493  0536                     l138:
  2494  0536  0008               	return
  2495  0537                     __end_of_TMR2_StartTimer:
  2496                           
  2497                           	psect	text7
  2498  044D                     __ptext7:	
  2499 ;; *************** function _SYSTEM_Initialize *****************
  2500 ;; Defined at:
  2501 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;		None
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;		None
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      void 
  2508 ;; Registers used:
  2509 ;;		wreg, status,2, status,0, pclath, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMMON   BANK0   BANK1
  2515 ;;      Params:         0       0       0
  2516 ;;      Locals:         0       0       0
  2517 ;;      Temps:          0       0       0
  2518 ;;      Totals:         0       0       0
  2519 ;;Total ram usage:        0 bytes
  2520 ;; Hardware stack levels used: 1
  2521 ;; Hardware stack levels required when called: 9
  2522 ;; This function calls:
  2523 ;;		_ADC_Initialize
  2524 ;;		_OSCILLATOR_Initialize
  2525 ;;		_PIN_MANAGER_Initialize
  2526 ;;		_TMR0_Initialize
  2527 ;;		_TMR2_Initialize
  2528 ;;		_WDT_Initialize
  2529 ;; This function is called by:
  2530 ;;		_start_setup
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534  044D                     _SYSTEM_Initialize:	
  2535                           ;psect for function _SYSTEM_Initialize
  2536                           
  2537  044D                     l2141:	
  2538                           ;incstack = 0
  2539                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2540                           
  2541                           
  2542                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2543  044D  3183  23E6  3184   	fcall	_PIN_MANAGER_Initialize
  2544                           
  2545                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2546  0450  3185  250A  3184   	fcall	_OSCILLATOR_Initialize
  2547                           
  2548                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2549  0453  3185  2528  3184   	fcall	_WDT_Initialize
  2550                           
  2551                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  2552  0456  3184  2486  3184   	fcall	_TMR2_Initialize
  2553                           
  2554                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2555  0459  3185  2502  3184   	fcall	_ADC_Initialize
  2556                           
  2557                           ;mcc_generated_files/mcc.c: 58:     TMR0_Initialize();
  2558  045C  3183  23D0  3184   	fcall	_TMR0_Initialize
  2559  045F                     l23:
  2560  045F  0008               	return
  2561  0460                     __end_of_SYSTEM_Initialize:
  2562                           
  2563                           	psect	text8
  2564  0528                     __ptext8:	
  2565 ;; *************** function _WDT_Initialize *****************
  2566 ;; Defined at:
  2567 ;;		line 71 in file "mcc_generated_files/mcc.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;		None
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;		None
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  1    wreg      void 
  2574 ;; Registers used:
  2575 ;;		wreg
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMMON   BANK0   BANK1
  2581 ;;      Params:         0       0       0
  2582 ;;      Locals:         0       0       0
  2583 ;;      Temps:          0       0       0
  2584 ;;      Totals:         0       0       0
  2585 ;;Total ram usage:        0 bytes
  2586 ;; Hardware stack levels used: 1
  2587 ;; Hardware stack levels required when called: 7
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_SYSTEM_Initialize
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595  0528                     _WDT_Initialize:	
  2596                           ;psect for function _WDT_Initialize
  2597                           
  2598  0528                     l1981:	
  2599                           ;incstack = 0
  2600                           ; Regs used in _WDT_Initialize: [wreg]
  2601                           
  2602                           
  2603                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x0A;
  2604  0528  300A               	movlw	10
  2605  0529  0021               	movlb	1	; select bank1
  2606  052A  0097               	movwf	23	;volatile
  2607  052B                     l29:
  2608  052B  0008               	return
  2609  052C                     __end_of_WDT_Initialize:
  2610                           
  2611                           	psect	text9
  2612  0486                     __ptext9:	
  2613 ;; *************** function _TMR2_Initialize *****************
  2614 ;; Defined at:
  2615 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;		None
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;		None
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0, pclath, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMMON   BANK0   BANK1
  2629 ;;      Params:         0       0       0
  2630 ;;      Locals:         0       0       0
  2631 ;;      Temps:          0       0       0
  2632 ;;      Totals:         0       0       0
  2633 ;;Total ram usage:        0 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; Hardware stack levels required when called: 8
  2636 ;; This function calls:
  2637 ;;		_TMR2_SetInterruptHandler
  2638 ;; This function is called by:
  2639 ;;		_SYSTEM_Initialize
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643  0486                     _TMR2_Initialize:	
  2644                           ;psect for function _TMR2_Initialize
  2645                           
  2646  0486                     l1983:	
  2647                           ;incstack = 0
  2648                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2649                           
  2650                           
  2651                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x63;
  2652  0486  3063               	movlw	99
  2653  0487  0020               	movlb	0	; select bank0
  2654  0488  009B               	movwf	27	;volatile
  2655  0489                     l1985:
  2656                           
  2657                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  2658  0489  019A               	clrf	26	;volatile
  2659  048A                     l1987:
  2660                           
  2661                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  2662  048A  1091               	bcf	17,1	;volatile
  2663  048B                     l1989:
  2664                           
  2665                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  2666  048B  0021               	movlb	1	; select bank1
  2667  048C  1491               	bsf	17,1	;volatile
  2668  048D                     l1991:
  2669                           
  2670                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  2671  048D  3052               	movlw	low _TMR2_DefaultInterruptHandler
  2672  048E  00F2               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2673  048F  3005               	movlw	high _TMR2_DefaultInterruptHandler
  2674  0490  00F3               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2675  0491  3185  2517  3184   	fcall	_TMR2_SetInterruptHandler
  2676  0494                     l1993:
  2677                           
  2678                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x4D;
  2679  0494  304D               	movlw	77
  2680  0495  0020               	movlb	0	; select bank0
  2681  0496  009C               	movwf	28	;volatile
  2682  0497                     l135:
  2683  0497  0008               	return
  2684  0498                     __end_of_TMR2_Initialize:
  2685                           
  2686                           	psect	text10
  2687  0517                     __ptext10:	
  2688 ;; *************** function _TMR2_SetInterruptHandler *****************
  2689 ;; Defined at:
  2690 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  2693 ;;		 -> ms_tick(1), TMR2_DefaultInterruptHandler(1), 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1    wreg      void 
  2698 ;; Registers used:
  2699 ;;		wreg
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMMON   BANK0   BANK1
  2705 ;;      Params:         2       0       0
  2706 ;;      Locals:         0       0       0
  2707 ;;      Temps:          0       0       0
  2708 ;;      Totals:         2       0       0
  2709 ;;Total ram usage:        2 bytes
  2710 ;; Hardware stack levels used: 1
  2711 ;; Hardware stack levels required when called: 7
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		_TMR2_Initialize
  2716 ;;		_start_setup
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720  0517                     _TMR2_SetInterruptHandler:	
  2721                           ;psect for function _TMR2_SetInterruptHandler
  2722                           
  2723  0517                     l1907:	
  2724                           ;incstack = 0
  2725                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2726                           
  2727                           
  2728                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
  2729  0517  0873               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2730  0518  0020               	movlb	0	; select bank0
  2731  0519  00C0               	movwf	_TMR2_InterruptHandler+1
  2732  051A  0872               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2733  051B  00BF               	movwf	_TMR2_InterruptHandler
  2734  051C                     l157:
  2735  051C  0008               	return
  2736  051D                     __end_of_TMR2_SetInterruptHandler:
  2737                           
  2738                           	psect	text11
  2739  03D0                     __ptext11:	
  2740 ;; *************** function _TMR0_Initialize *****************
  2741 ;; Defined at:
  2742 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;		None
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;		None
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      void 
  2749 ;; Registers used:
  2750 ;;		wreg, status,2, status,0, pclath, cstack
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMMON   BANK0   BANK1
  2756 ;;      Params:         0       0       0
  2757 ;;      Locals:         0       0       0
  2758 ;;      Temps:          1       0       0
  2759 ;;      Totals:         1       0       0
  2760 ;;Total ram usage:        1 bytes
  2761 ;; Hardware stack levels used: 1
  2762 ;; Hardware stack levels required when called: 8
  2763 ;; This function calls:
  2764 ;;		_TMR0_SetInterruptHandler
  2765 ;; This function is called by:
  2766 ;;		_SYSTEM_Initialize
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770  03D0                     _TMR0_Initialize:	
  2771                           ;psect for function _TMR0_Initialize
  2772                           
  2773  03D0                     l2001:	
  2774                           ;incstack = 0
  2775                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2776                           
  2777                           
  2778                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD1 
      +                          & 0x3F));
  2779  03D0  0021               	movlb	1	; select bank1
  2780  03D1  0815               	movf	21,w	;volatile
  2781  03D2  39C0               	andlw	192
  2782  03D3  3811               	iorlw	17
  2783  03D4  0095               	movwf	21	;volatile
  2784  03D5                     l2003:
  2785                           
  2786                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x83;
  2787  03D5  3083               	movlw	131
  2788  03D6  0020               	movlb	0	; select bank0
  2789  03D7  0095               	movwf	21	;volatile
  2790  03D8                     l2005:
  2791                           
  2792                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 131;
  2793  03D8  3083               	movlw	131
  2794  03D9  00F4               	movwf	??_TMR0_Initialize
  2795  03DA  0874               	movf	??_TMR0_Initialize,w
  2796  03DB  00C1               	movwf	_timer0ReloadVal	;volatile
  2797  03DC                     l2007:
  2798                           
  2799                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  2800  03DC  110B               	bcf	11,2	;volatile
  2801  03DD                     l2009:
  2802                           
  2803                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  2804  03DD  168B               	bsf	11,5	;volatile
  2805  03DE                     l2011:
  2806                           
  2807                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2808  03DE  3053               	movlw	low _TMR0_DefaultInterruptHandler
  2809  03DF  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2810  03E0  3005               	movlw	high _TMR0_DefaultInterruptHandler
  2811  03E1  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2812  03E2  3185  251D  3183   	fcall	_TMR0_SetInterruptHandler
  2813  03E5                     l177:
  2814  03E5  0008               	return
  2815  03E6                     __end_of_TMR0_Initialize:
  2816                           
  2817                           	psect	text12
  2818  051D                     __ptext12:	
  2819 ;; *************** function _TMR0_SetInterruptHandler *****************
  2820 ;; Defined at:
  2821 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  2824 ;;		 -> zummer_switch(1), TMR0_DefaultInterruptHandler(1), 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;		None
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1
  2836 ;;      Params:         2       0       0
  2837 ;;      Locals:         0       0       0
  2838 ;;      Temps:          0       0       0
  2839 ;;      Totals:         2       0       0
  2840 ;;Total ram usage:        2 bytes
  2841 ;; Hardware stack levels used: 1
  2842 ;; Hardware stack levels required when called: 7
  2843 ;; This function calls:
  2844 ;;		Nothing
  2845 ;; This function is called by:
  2846 ;;		_TMR0_Initialize
  2847 ;;		_start_setup
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851  051D                     _TMR0_SetInterruptHandler:	
  2852                           ;psect for function _TMR0_SetInterruptHandler
  2853                           
  2854  051D                     l1909:	
  2855                           ;incstack = 0
  2856                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2857                           
  2858                           
  2859                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  2860  051D  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2861  051E  0020               	movlb	0	; select bank0
  2862  051F  00BE               	movwf	_TMR0_InterruptHandler+1
  2863  0520  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2864  0521  00BD               	movwf	_TMR0_InterruptHandler
  2865  0522                     l193:
  2866  0522  0008               	return
  2867  0523                     __end_of_TMR0_SetInterruptHandler:
  2868                           
  2869                           	psect	text13
  2870  03E6                     __ptext13:	
  2871 ;; *************** function _PIN_MANAGER_Initialize *****************
  2872 ;; Defined at:
  2873 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;		None
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;		None
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		wreg, status,2
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMMON   BANK0   BANK1
  2887 ;;      Params:         0       0       0
  2888 ;;      Locals:         0       0       0
  2889 ;;      Temps:          0       0       0
  2890 ;;      Totals:         0       0       0
  2891 ;;Total ram usage:        0 bytes
  2892 ;; Hardware stack levels used: 1
  2893 ;; Hardware stack levels required when called: 7
  2894 ;; This function calls:
  2895 ;;		Nothing
  2896 ;; This function is called by:
  2897 ;;		_SYSTEM_Initialize
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901  03E6                     _PIN_MANAGER_Initialize:	
  2902                           ;psect for function _PIN_MANAGER_Initialize
  2903                           
  2904  03E6                     l1963:	
  2905                           ;incstack = 0
  2906                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2907                           
  2908                           
  2909                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2910  03E6  0022               	movlb	2	; select bank2
  2911  03E7  018C               	clrf	12	;volatile
  2912                           
  2913                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  2914  03E8  018E               	clrf	14	;volatile
  2915  03E9                     l1965:
  2916                           
  2917                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x0F;
  2918  03E9  300F               	movlw	15
  2919  03EA  0021               	movlb	1	; select bank1
  2920  03EB  008C               	movwf	12	;volatile
  2921  03EC                     l1967:
  2922                           
  2923                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x0C;
  2924  03EC  300C               	movlw	12
  2925  03ED  008E               	movwf	14	;volatile
  2926  03EE                     l1969:
  2927                           
  2928                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x08;
  2929  03EE  3008               	movlw	8
  2930  03EF  0023               	movlb	3	; select bank3
  2931  03F0  008E               	movwf	14	;volatile
  2932  03F1                     l1971:
  2933                           
  2934                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x05;
  2935  03F1  3005               	movlw	5
  2936  03F2  008C               	movwf	12	;volatile
  2937                           
  2938                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  2939  03F3  0024               	movlb	4	; select bank4
  2940  03F4  018C               	clrf	12	;volatile
  2941                           
  2942                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  2943  03F5  018E               	clrf	14	;volatile
  2944  03F6                     l1973:
  2945                           
  2946                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2947  03F6  0021               	movlb	1	; select bank1
  2948  03F7  1795               	bsf	21,7	;volatile
  2949                           
  2950                           ;mcc_generated_files/pin_manager.c: 86:     APFCON = 0x00;
  2951  03F8  0022               	movlb	2	; select bank2
  2952  03F9  019D               	clrf	29	;volatile
  2953  03FA                     l90:
  2954  03FA  0008               	return
  2955  03FB                     __end_of_PIN_MANAGER_Initialize:
  2956                           
  2957                           	psect	text14
  2958  050A                     __ptext14:	
  2959 ;; *************** function _OSCILLATOR_Initialize *****************
  2960 ;; Defined at:
  2961 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg, status,2
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMMON   BANK0   BANK1
  2975 ;;      Params:         0       0       0
  2976 ;;      Locals:         0       0       0
  2977 ;;      Temps:          0       0       0
  2978 ;;      Totals:         0       0       0
  2979 ;;Total ram usage:        0 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; Hardware stack levels required when called: 7
  2982 ;; This function calls:
  2983 ;;		Nothing
  2984 ;; This function is called by:
  2985 ;;		_SYSTEM_Initialize
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989  050A                     _OSCILLATOR_Initialize:	
  2990                           ;psect for function _OSCILLATOR_Initialize
  2991                           
  2992  050A                     l1975:	
  2993                           ;incstack = 0
  2994                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2995                           
  2996                           
  2997                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x78;
  2998  050A  3078               	movlw	120
  2999  050B  0021               	movlb	1	; select bank1
  3000  050C  0099               	movwf	25	;volatile
  3001  050D                     l1977:
  3002                           
  3003                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  3004  050D  0198               	clrf	24	;volatile
  3005  050E                     l1979:
  3006                           
  3007                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  3008  050E  0022               	movlb	2	; select bank2
  3009  050F  0196               	clrf	22	;volatile
  3010  0510                     l26:
  3011  0510  0008               	return
  3012  0511                     __end_of_OSCILLATOR_Initialize:
  3013                           
  3014                           	psect	text15
  3015  0502                     __ptext15:	
  3016 ;; *************** function _ADC_Initialize *****************
  3017 ;; Defined at:
  3018 ;;		line 67 in file "mcc_generated_files/adc.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;		None
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;		None
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg, status,2
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMMON   BANK0   BANK1
  3032 ;;      Params:         0       0       0
  3033 ;;      Locals:         0       0       0
  3034 ;;      Temps:          0       0       0
  3035 ;;      Totals:         0       0       0
  3036 ;;Total ram usage:        0 bytes
  3037 ;; Hardware stack levels used: 1
  3038 ;; Hardware stack levels required when called: 7
  3039 ;; This function calls:
  3040 ;;		Nothing
  3041 ;; This function is called by:
  3042 ;;		_SYSTEM_Initialize
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046  0502                     _ADC_Initialize:	
  3047                           ;psect for function _ADC_Initialize
  3048                           
  3049  0502                     l1995:	
  3050                           ;incstack = 0
  3051                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3052                           
  3053                           
  3054                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x50;
  3055  0502  3050               	movlw	80
  3056  0503  0021               	movlb	1	; select bank1
  3057  0504  009E               	movwf	30	;volatile
  3058  0505                     l1997:
  3059                           
  3060                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  3061  0505  019B               	clrf	27	;volatile
  3062  0506                     l1999:
  3063                           
  3064                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  3065  0506  019C               	clrf	28	;volatile
  3066                           
  3067                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x1D;
  3068  0507  301D               	movlw	29
  3069  0508  009D               	movwf	29	;volatile
  3070  0509                     l46:
  3071  0509  0008               	return
  3072  050A                     __end_of_ADC_Initialize:
  3073                           
  3074                           	psect	text16
  3075  024C                     __ptext16:	
  3076 ;; *************** function _hardware_work *****************
  3077 ;; Defined at:
  3078 ;;		line 534 in file "main.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;		None
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;		None
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      void 
  3085 ;; Registers used:
  3086 ;;		None
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMMON   BANK0   BANK1
  3092 ;;      Params:         0       0       0
  3093 ;;      Locals:         0       0       0
  3094 ;;      Temps:          0       0       0
  3095 ;;      Totals:         0       0       0
  3096 ;;Total ram usage:        0 bytes
  3097 ;; Hardware stack levels used: 1
  3098 ;; Hardware stack levels required when called: 7
  3099 ;; This function calls:
  3100 ;;		Nothing
  3101 ;; This function is called by:
  3102 ;;		_main
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106  024C                     _hardware_work:	
  3107                           ;psect for function _hardware_work
  3108                           
  3109  024C                     l1613:	
  3110                           ;incstack = 0
  3111                           ; Regs used in _hardware_work: []
  3112                           
  3113                           
  3114                           ;main.c: 535:     LATCbits.LATC0 = ff.bits.ALARM_ON;
  3115  024C  1877               	btfsc	_ff,0
  3116  024D  2A4F               	goto	u861
  3117  024E  2A52               	goto	u860
  3118  024F                     u861:
  3119  024F  0022               	movlb	2	; select bank2
  3120  0250  140E               	bsf	14,0	;volatile
  3121  0251  2A54               	goto	u874
  3122  0252                     u860:
  3123  0252  0022               	movlb	2	; select bank2
  3124  0253  100E               	bcf	14,0	;volatile
  3125  0254                     u874:
  3126                           
  3127                           ;main.c: 536:     LATCbits.LATC1 = ff.bits.MEAS_ON;
  3128  0254  1A7A               	btfsc	_ff+3,4
  3129  0255  2A57               	goto	u881
  3130  0256  2A5A               	goto	u880
  3131  0257                     u881:
  3132  0257  0022               	movlb	2	; select bank2
  3133  0258  148E               	bsf	14,1	;volatile
  3134  0259  2A5C               	goto	u894
  3135  025A                     u880:
  3136  025A  0022               	movlb	2	; select bank2
  3137  025B  108E               	bcf	14,1	;volatile
  3138  025C                     u894:
  3139                           
  3140                           ;main.c: 537:     LATCbits.LATC4 = ff.bits.RELE_CONTROL_ON;
  3141  025C  1B78               	btfsc	_ff+1,6
  3142  025D  2A5F               	goto	u901
  3143  025E  2A62               	goto	u900
  3144  025F                     u901:
  3145  025F  0022               	movlb	2	; select bank2
  3146  0260  160E               	bsf	14,4	;volatile
  3147  0261  2A64               	goto	u914
  3148  0262                     u900:
  3149  0262  0022               	movlb	2	; select bank2
  3150  0263  120E               	bcf	14,4	;volatile
  3151  0264                     u914:
  3152                           
  3153                           ;main.c: 538:     LATCbits.LATC5 = ff.bits.RELE_POWER_ON;
  3154  0264  1AF8               	btfsc	_ff+1,5
  3155  0265  2A67               	goto	u921
  3156  0266  2A6A               	goto	u920
  3157  0267                     u921:
  3158  0267  0022               	movlb	2	; select bank2
  3159  0268  168E               	bsf	14,5	;volatile
  3160  0269  2A6C               	goto	u934
  3161  026A                     u920:
  3162  026A  0022               	movlb	2	; select bank2
  3163  026B  128E               	bcf	14,5	;volatile
  3164  026C                     u934:
  3165                           
  3166                           ;main.c: 539:     LATAbits.LATA4 = ff.bits.LED_ON;
  3167  026C  197A               	btfsc	_ff+3,2
  3168  026D  2A6F               	goto	u941
  3169  026E  2A72               	goto	u940
  3170  026F                     u941:
  3171  026F  0022               	movlb	2	; select bank2
  3172  0270  160C               	bsf	12,4	;volatile
  3173  0271  2A74               	goto	u954
  3174  0272                     u940:
  3175  0272  0022               	movlb	2	; select bank2
  3176  0273  120C               	bcf	12,4	;volatile
  3177  0274                     u954:
  3178                           
  3179                           ;main.c: 541:     if (ff.bits.TONE_ON) {
  3180  0274  1CF9               	btfss	_ff+2,1
  3181  0275  2A77               	goto	u961
  3182  0276  2A78               	goto	u960
  3183  0277                     u961:
  3184  0277  2A79               	goto	l460
  3185  0278                     u960:
  3186  0278                     l1615:
  3187                           
  3188                           ;main.c: 542:         INTCONbits.TMR0IE = 1;
  3189  0278  168B               	bsf	11,5	;volatile
  3190  0279                     l460:	
  3191                           ;main.c: 543:     };
  3192                           
  3193                           
  3194                           ;main.c: 544:     if (ff.bits.TONE_OFF) {
  3195  0279  1D79               	btfss	_ff+2,2
  3196  027A  2A7C               	goto	u971
  3197  027B  2A7D               	goto	u970
  3198  027C                     u971:
  3199  027C  2A7F               	goto	l464
  3200  027D                     u970:
  3201  027D                     l1617:
  3202                           
  3203                           ;main.c: 545:         INTCONbits.TMR0IE = 0;
  3204  027D  128B               	bcf	11,5	;volatile
  3205  027E                     l462:	
  3206                           ;main.c: 546:         do { LATAbits.LATA5 = 0; } while(0);
  3207                           
  3208  027E  128C               	bcf	12,5	;volatile
  3209  027F                     l464:
  3210  027F  0008               	return
  3211  0280                     __end_of_hardware_work:
  3212                           
  3213                           	psect	text17
  3214  00A4                     __ptext17:	
  3215 ;; *************** function _get_wsp *****************
  3216 ;; Defined at:
  3217 ;;		line 559 in file "main.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;		None
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;  res             2    0[BANK0 ] unsigned int 
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  1    wreg      void 
  3224 ;; Registers used:
  3225 ;;		wreg, status,2, status,0, pclath, cstack
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMMON   BANK0   BANK1
  3231 ;;      Params:         0       0       0
  3232 ;;      Locals:         0       2       0
  3233 ;;      Temps:          2       0       0
  3234 ;;      Totals:         2       2       0
  3235 ;;Total ram usage:        4 bytes
  3236 ;; Hardware stack levels used: 1
  3237 ;; Hardware stack levels required when called: 8
  3238 ;; This function calls:
  3239 ;;		_ADC_GetConversion
  3240 ;;		_clear_alarm
  3241 ;;		_start_alarm
  3242 ;; This function is called by:
  3243 ;;		_main
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247  00A4                     _get_wsp:	
  3248                           ;psect for function _get_wsp
  3249                           
  3250  00A4                     l2557:	
  3251                           ;incstack = 0
  3252                           ; Regs used in _get_wsp: [wreg+status,2+status,0+pclath+cstack]
  3253                           
  3254                           
  3255                           ;main.c: 561:     if (ff.bits.ALLOW_MEASURE) {
  3256  00A4  1E77               	btfss	_ff,4
  3257  00A5  28A7               	goto	u2451
  3258  00A6  28A8               	goto	u2450
  3259  00A7                     u2451:
  3260  00A7  28FE               	goto	l488
  3261  00A8                     u2450:
  3262  00A8                     l475:	
  3263                           ;main.c: 563:         static signed char bad_measures_counter = 0;;main.c: 564:         
      +                          do { LATCbits.LATC1 = 1; } while(0);
  3264                           
  3265  00A8  0022               	movlb	2	; select bank2
  3266  00A9  148E               	bsf	14,1	;volatile
  3267  00AA                     l477:	
  3268                           ;main.c: 565:         do { ANSELCbits.ANSC3 = 1; } while(0);
  3269                           
  3270  00AA  0023               	movlb	3	; select bank3
  3271  00AB  158E               	bsf	14,3	;volatile
  3272  00AC                     l2559:
  3273                           
  3274                           ;main.c: 566:         _delay((unsigned long)((1)*(16000000/4000.0)));
  3275  00AC  3006               	movlw	6
  3276  00AD  00F4               	movwf	??_get_wsp
  3277  00AE  3030               	movlw	48
  3278  00AF                     u2577:
  3279  00AF  0B89               	decfsz	9,f
  3280  00B0  28AF               	goto	u2577
  3281  00B1  0BF4               	decfsz	??_get_wsp,f
  3282  00B2  28AF               	goto	u2577
  3283  00B3  3200               	nop2
  3284  00B4                     l2561:
  3285                           
  3286                           ;main.c: 567:         unsigned res = ADC_GetConversion(PIN_WSP_STATE);
  3287  00B4  3007               	movlw	7
  3288  00B5  3183  2370  3180   	fcall	_ADC_GetConversion
  3289  00B8  00F4               	movwf	??_get_wsp
  3290  00B9  01F5               	clrf	??_get_wsp+1
  3291  00BA  0874               	movf	??_get_wsp,w
  3292  00BB  0020               	movlb	0	; select bank0
  3293  00BC  00C2               	movwf	get_wsp@res
  3294  00BD  0875               	movf	??_get_wsp+1,w
  3295  00BE  00C3               	movwf	get_wsp@res+1
  3296  00BF                     l2563:
  3297  00BF  0023               	movlb	3	; select bank3
  3298  00C0  118E               	bcf	14,3	;volatile
  3299  00C1                     l2565:
  3300  00C1  0022               	movlb	2	; select bank2
  3301  00C2  108E               	bcf	14,1	;volatile
  3302  00C3                     l2567:
  3303                           
  3304                           ;main.c: 570:         if (res < BAD_WSP_VOLTAGE) {
  3305  00C3  3000               	movlw	0
  3306  00C4  0020               	movlb	0	; select bank0
  3307  00C5  0243               	subwf	get_wsp@res+1,w
  3308  00C6  3080               	movlw	128
  3309  00C7  1903               	skipnz
  3310  00C8  0242               	subwf	get_wsp@res,w
  3311  00C9  1803               	skipnc
  3312  00CA  28CC               	goto	u2461
  3313  00CB  28CD               	goto	u2460
  3314  00CC                     u2461:
  3315  00CC  28D2               	goto	l2571
  3316  00CD                     u2460:
  3317  00CD                     l2569:
  3318                           
  3319                           ;main.c: 571:             bad_measures_counter++;
  3320  00CD  3001               	movlw	1
  3321  00CE  00F4               	movwf	??_get_wsp
  3322  00CF  0874               	movf	??_get_wsp,w
  3323  00D0  07B5               	addwf	get_wsp@bad_measures_counter,f
  3324                           
  3325                           ;main.c: 572:         } else {
  3326  00D1  28DF               	goto	l2575
  3327  00D2                     l2571:
  3328                           
  3329                           ;main.c: 573:             if (res > GOOD_WSP_VOLTAGE) {
  3330  00D2  3000               	movlw	0
  3331  00D3  0243               	subwf	get_wsp@res+1,w
  3332  00D4  308F               	movlw	143
  3333  00D5  1903               	skipnz
  3334  00D6  0242               	subwf	get_wsp@res,w
  3335  00D7  1C03               	skipc
  3336  00D8  28DA               	goto	u2471
  3337  00D9  28DB               	goto	u2470
  3338  00DA                     u2471:
  3339  00DA  28DF               	goto	l2575
  3340  00DB                     u2470:
  3341  00DB                     l2573:
  3342                           
  3343                           ;main.c: 574:                 bad_measures_counter--;
  3344  00DB  30FF               	movlw	255
  3345  00DC  00F4               	movwf	??_get_wsp
  3346  00DD  0874               	movf	??_get_wsp,w
  3347  00DE  07B5               	addwf	get_wsp@bad_measures_counter,f
  3348  00DF                     l2575:
  3349                           
  3350                           ;main.c: 577:         if (bad_measures_counter > WSP_MEAS_COUNT) {
  3351  00DF  0835               	movf	get_wsp@bad_measures_counter,w
  3352  00E0  3A80               	xorlw	128
  3353  00E1  3E7B               	addlw	-133
  3354  00E2  1C03               	skipc
  3355  00E3  28E5               	goto	u2481
  3356  00E4  28E6               	goto	u2480
  3357  00E5                     u2481:
  3358  00E5  28EE               	goto	l2581
  3359  00E6                     u2480:
  3360  00E6                     l2577:
  3361                           
  3362                           ;main.c: 578:             start_alarm();
  3363  00E6  3185  2523  3180   	fcall	_start_alarm
  3364  00E9                     l2579:
  3365                           
  3366                           ;main.c: 579:             bad_measures_counter = WSP_MEAS_COUNT;
  3367  00E9  3004               	movlw	4
  3368  00EA  00F4               	movwf	??_get_wsp
  3369  00EB  0874               	movf	??_get_wsp,w
  3370  00EC  0020               	movlb	0	; select bank0
  3371  00ED  00B5               	movwf	get_wsp@bad_measures_counter
  3372  00EE                     l2581:
  3373                           
  3374                           ;main.c: 581:         if (bad_measures_counter < -WSP_MEAS_COUNT) {
  3375  00EE  0835               	movf	get_wsp@bad_measures_counter,w
  3376  00EF  3A80               	xorlw	128
  3377  00F0  3E84               	addlw	132
  3378  00F1  1803               	skipnc
  3379  00F2  28F4               	goto	u2491
  3380  00F3  28F5               	goto	u2490
  3381  00F4                     u2491:
  3382  00F4  28FD               	goto	l2587
  3383  00F5                     u2490:
  3384  00F5                     l2583:
  3385                           
  3386                           ;main.c: 582:             clear_alarm();
  3387  00F5  3185  2537  3180   	fcall	_clear_alarm
  3388  00F8                     l2585:
  3389                           
  3390                           ;main.c: 583:             bad_measures_counter = -WSP_MEAS_COUNT;
  3391  00F8  30FC               	movlw	252
  3392  00F9  00F4               	movwf	??_get_wsp
  3393  00FA  0874               	movf	??_get_wsp,w
  3394  00FB  0020               	movlb	0	; select bank0
  3395  00FC  00B5               	movwf	get_wsp@bad_measures_counter
  3396  00FD                     l2587:
  3397                           
  3398                           ;main.c: 585:         ff.bits.ALLOW_MEASURE = 0;
  3399  00FD  1277               	bcf	_ff,4
  3400  00FE                     l488:
  3401  00FE  0008               	return
  3402  00FF                     __end_of_get_wsp:
  3403                           
  3404                           	psect	text18
  3405  0523                     __ptext18:	
  3406 ;; *************** function _start_alarm *****************
  3407 ;; Defined at:
  3408 ;;		line 301 in file "main.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;		None
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      void 
  3415 ;; Registers used:
  3416 ;;		None
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMMON   BANK0   BANK1
  3422 ;;      Params:         0       0       0
  3423 ;;      Locals:         0       0       0
  3424 ;;      Temps:          0       0       0
  3425 ;;      Totals:         0       0       0
  3426 ;;Total ram usage:        0 bytes
  3427 ;; Hardware stack levels used: 1
  3428 ;; Hardware stack levels required when called: 7
  3429 ;; This function calls:
  3430 ;;		Nothing
  3431 ;; This function is called by:
  3432 ;;		_get_wsp
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436  0523                     _start_alarm:	
  3437                           ;psect for function _start_alarm
  3438                           
  3439  0523                     l2547:	
  3440                           ;incstack = 0
  3441                           ; Regs used in _start_alarm: []
  3442                           
  3443                           
  3444                           ;main.c: 302:     ff.bits.ALARM_ON = 1;
  3445  0523  1477               	bsf	_ff,0
  3446                           
  3447                           ;main.c: 303:     ff.bits.ALARM_OFF = 0;
  3448  0524  10F7               	bcf	_ff,1
  3449                           
  3450                           ;main.c: 304:     ff.bits.MELODY_ON = 1;
  3451  0525  177A               	bsf	_ff+3,6
  3452                           
  3453                           ;main.c: 305:     ff.bits.SIREN = 1;
  3454  0526  15F9               	bsf	_ff+2,3
  3455  0527                     l373:
  3456  0527  0008               	return
  3457  0528                     __end_of_start_alarm:
  3458                           
  3459                           	psect	text19
  3460  0537                     __ptext19:	
  3461 ;; *************** function _clear_alarm *****************
  3462 ;; Defined at:
  3463 ;;		line 308 in file "main.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;		None
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;		None
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      void 
  3470 ;; Registers used:
  3471 ;;		None
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMMON   BANK0   BANK1
  3477 ;;      Params:         0       0       0
  3478 ;;      Locals:         0       0       0
  3479 ;;      Temps:          0       0       0
  3480 ;;      Totals:         0       0       0
  3481 ;;Total ram usage:        0 bytes
  3482 ;; Hardware stack levels used: 1
  3483 ;; Hardware stack levels required when called: 7
  3484 ;; This function calls:
  3485 ;;		Nothing
  3486 ;; This function is called by:
  3487 ;;		_get_wsp
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491  0537                     _clear_alarm:	
  3492                           ;psect for function _clear_alarm
  3493                           
  3494  0537                     l2549:	
  3495                           ;incstack = 0
  3496                           ; Regs used in _clear_alarm: []
  3497                           
  3498                           
  3499                           ;main.c: 309:     ff.bits.ALARM_ON = 0;
  3500  0537  1077               	bcf	_ff,0
  3501                           
  3502                           ;main.c: 310:     ff.bits.ALARM_OFF = 1;
  3503  0538  14F7               	bsf	_ff,1
  3504  0539                     l376:
  3505  0539  0008               	return
  3506  053A                     __end_of_clear_alarm:
  3507                           
  3508                           	psect	text20
  3509  0370                     __ptext20:	
  3510 ;; *************** function _ADC_GetConversion *****************
  3511 ;; Defined at:
  3512 ;;		line 112 in file "mcc_generated_files/adc.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;  channel         1    wreg     enum E2178
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;  channel         1    3[COMMON] enum E2178
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  1    wreg      unsigned char 
  3519 ;; Registers used:
  3520 ;;		wreg, status,2, status,0
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMMON   BANK0   BANK1
  3526 ;;      Params:         0       0       0
  3527 ;;      Locals:         1       0       0
  3528 ;;      Temps:          1       0       0
  3529 ;;      Totals:         2       0       0
  3530 ;;Total ram usage:        2 bytes
  3531 ;; Hardware stack levels used: 1
  3532 ;; Hardware stack levels required when called: 7
  3533 ;; This function calls:
  3534 ;;		Nothing
  3535 ;; This function is called by:
  3536 ;;		_get_wsp
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540  0370                     _ADC_GetConversion:	
  3541                           ;psect for function _ADC_GetConversion
  3542                           
  3543                           
  3544                           ;incstack = 0
  3545                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3546                           ;ADC_GetConversion@channel stored from wreg
  3547  0370  00F3               	movwf	ADC_GetConversion@channel
  3548  0371                     l2535:
  3549                           
  3550                           ;mcc_generated_files/adc.c: 112: char ADC_GetConversion(adc_channel_t channel);mcc_gener
      +                          ated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = channel;
  3551  0371  0873               	movf	ADC_GetConversion@channel,w
  3552  0372  00F2               	movwf	??_ADC_GetConversion
  3553  0373  0DF2               	rlf	??_ADC_GetConversion,f
  3554  0374  0DF2               	rlf	??_ADC_GetConversion,f
  3555  0375  0021               	movlb	1	; select bank1
  3556  0376  081D               	movf	29,w	;volatile
  3557  0377  0672               	xorwf	??_ADC_GetConversion,w
  3558  0378  3983               	andlw	-125
  3559  0379  0672               	xorwf	??_ADC_GetConversion,w
  3560  037A  009D               	movwf	29	;volatile
  3561  037B                     l2537:
  3562                           
  3563                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  3564  037B  141D               	bsf	29,0	;volatile
  3565  037C                     l2539:
  3566                           
  3567                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  3568  037C  3006               	movlw	6
  3569  037D                     u2587:
  3570  037D  0B89               	decfsz	9,f
  3571  037E  2B7D               	goto	u2587
  3572  037F  3200               	nop2
  3573  0380                     l2541:
  3574                           
  3575                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  3576  0380  0021               	movlb	1	; select bank1
  3577  0381  149D               	bsf	29,1	;volatile
  3578  0382                     l61:	
  3579                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  3580                           
  3581                           
  3582                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  3583  0382  189D               	btfsc	29,1	;volatile
  3584  0383  2B85               	goto	u2431
  3585  0384  2B86               	goto	u2430
  3586  0385                     u2431:
  3587  0385  2B82               	goto	l61
  3588  0386                     u2430:
  3589  0386                     l2543:
  3590                           
  3591                           ;mcc_generated_files/adc.c: 132:     return (ADRESH);
  3592  0386  081C               	movf	28,w	;volatile
  3593  0387                     l64:
  3594  0387  0008               	return
  3595  0388                     __end_of_ADC_GetConversion:
  3596                           
  3597                           	psect	text21
  3598  0280                     __ptext21:	
  3599 ;; *************** function _get_jump *****************
  3600 ;; Defined at:
  3601 ;;		line 655 in file "main.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;		None
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;		None
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  1    wreg      void 
  3608 ;; Registers used:
  3609 ;;		wreg, status,2, status,0
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMMON   BANK0   BANK1
  3615 ;;      Params:         0       0       0
  3616 ;;      Locals:         0       0       0
  3617 ;;      Temps:          1       0       0
  3618 ;;      Totals:         1       0       0
  3619 ;;Total ram usage:        1 bytes
  3620 ;; Hardware stack levels used: 1
  3621 ;; Hardware stack levels required when called: 7
  3622 ;; This function calls:
  3623 ;;		Nothing
  3624 ;; This function is called by:
  3625 ;;		_main
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629  0280                     _get_jump:	
  3630                           ;psect for function _get_jump
  3631                           
  3632  0280                     l2339:	
  3633                           ;incstack = 0
  3634                           ; Regs used in _get_jump: [wreg+status,2+status,0]
  3635                           
  3636                           
  3637                           ;main.c: 657:     static signed char jump_counter;;main.c: 659:     if (ff.bits.ALLOW_JU
      +                          MP) {
  3638  0280  1F77               	btfss	_ff,6
  3639  0281  2A83               	goto	u2171
  3640  0282  2A84               	goto	u2170
  3641  0283                     u2171:
  3642  0283  2AB2               	goto	l522
  3643  0284                     u2170:
  3644  0284                     l513:	
  3645                           ;main.c: 661:         do { ANSELAbits.ANSA1 = 0; } while(0);
  3646                           
  3647  0284  0023               	movlb	3	; select bank3
  3648  0285  108C               	bcf	12,1	;volatile
  3649  0286                     l515:	
  3650                           ;main.c: 662:         do { TRISAbits.TRISA1 = 1; } while(0);
  3651                           
  3652  0286  0021               	movlb	1	; select bank1
  3653  0287  148C               	bsf	12,1	;volatile
  3654  0288                     l516:
  3655                           
  3656                           ;main.c: 663:         if (PORTAbits.RA1) jump_counter++;
  3657  0288  0020               	movlb	0	; select bank0
  3658  0289  1C8C               	btfss	12,1	;volatile
  3659  028A  2A8C               	goto	u2181
  3660  028B  2A8D               	goto	u2180
  3661  028C                     u2181:
  3662  028C  2A92               	goto	l2343
  3663  028D                     u2180:
  3664  028D                     l2341:
  3665  028D  3001               	movlw	1
  3666  028E  00F2               	movwf	??_get_jump
  3667  028F  0872               	movf	??_get_jump,w
  3668  0290  07B3               	addwf	get_jump@jump_counter,f
  3669  0291  2A96               	goto	l2345
  3670  0292                     l2343:
  3671  0292  30FF               	movlw	255
  3672  0293  00F2               	movwf	??_get_jump
  3673  0294  0872               	movf	??_get_jump,w
  3674  0295  07B3               	addwf	get_jump@jump_counter,f
  3675  0296                     l2345:
  3676                           
  3677                           ;main.c: 672:         if (jump_counter > JUMP_MEAS_COUNT) {
  3678  0296  0833               	movf	get_jump@jump_counter,w
  3679  0297  3A80               	xorlw	128
  3680  0298  3E75               	addlw	-139
  3681  0299  1C03               	skipc
  3682  029A  2A9C               	goto	u2191
  3683  029B  2A9D               	goto	u2190
  3684  029C                     u2191:
  3685  029C  2AA4               	goto	l2353
  3686  029D                     u2190:
  3687  029D                     l2347:
  3688                           
  3689                           ;main.c: 673:             jump_counter = JUMP_MEAS_COUNT;
  3690  029D  300A               	movlw	10
  3691  029E  00F2               	movwf	??_get_jump
  3692  029F  0872               	movf	??_get_jump,w
  3693  02A0  00B3               	movwf	get_jump@jump_counter
  3694  02A1                     l2349:
  3695                           
  3696                           ;main.c: 674:             ff.bits.JUMP_LOW = 0;
  3697  02A1  13F7               	bcf	_ff,7
  3698  02A2                     l2351:
  3699                           
  3700                           ;main.c: 675:             ff.bits.JUMP_HIGH = 1;
  3701  02A2  1478               	bsf	_ff+1,0
  3702                           
  3703                           ;main.c: 676:         } else if (jump_counter<-JUMP_MEAS_COUNT) {
  3704  02A3  2AB1               	goto	l2361
  3705  02A4                     l2353:
  3706  02A4  0833               	movf	get_jump@jump_counter,w
  3707  02A5  3A80               	xorlw	128
  3708  02A6  3E8A               	addlw	138
  3709  02A7  1803               	skipnc
  3710  02A8  2AAA               	goto	u2201
  3711  02A9  2AAB               	goto	u2200
  3712  02AA                     u2201:
  3713  02AA  2AB1               	goto	l2361
  3714  02AB                     u2200:
  3715  02AB                     l2355:
  3716                           
  3717                           ;main.c: 677:             jump_counter = -JUMP_MEAS_COUNT;
  3718  02AB  30F6               	movlw	246
  3719  02AC  00F2               	movwf	??_get_jump
  3720  02AD  0872               	movf	??_get_jump,w
  3721  02AE  00B3               	movwf	get_jump@jump_counter
  3722  02AF                     l2357:
  3723                           
  3724                           ;main.c: 678:             ff.bits.JUMP_LOW = 1;
  3725  02AF  17F7               	bsf	_ff,7
  3726  02B0                     l2359:
  3727                           
  3728                           ;main.c: 679:             ff.bits.JUMP_HIGH = 0;
  3729  02B0  1078               	bcf	_ff+1,0
  3730  02B1                     l2361:
  3731                           
  3732                           ;main.c: 681:         ff.bits.ALLOW_JUMP = 0;
  3733  02B1  1377               	bcf	_ff,6
  3734  02B2                     l522:
  3735  02B2  0008               	return
  3736  02B3                     __end_of_get_jump:
  3737                           
  3738                           	psect	text22
  3739  0196                     __ptext22:	
  3740 ;; *************** function _get_fun *****************
  3741 ;; Defined at:
  3742 ;;		line 589 in file "main.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;		None
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;		None
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  1    wreg      void 
  3749 ;; Registers used:
  3750 ;;		wreg, status,2, status,0
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMMON   BANK0   BANK1
  3756 ;;      Params:         0       0       0
  3757 ;;      Locals:         0       0       0
  3758 ;;      Temps:          1       0       0
  3759 ;;      Totals:         1       0       0
  3760 ;;Total ram usage:        1 bytes
  3761 ;; Hardware stack levels used: 1
  3762 ;; Hardware stack levels required when called: 7
  3763 ;; This function calls:
  3764 ;;		Nothing
  3765 ;; This function is called by:
  3766 ;;		_main
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770  0196                     _get_fun:	
  3771                           ;psect for function _get_fun
  3772                           
  3773  0196                     l2305:	
  3774                           ;incstack = 0
  3775                           ; Regs used in _get_fun: [wreg+status,2+status,0]
  3776                           
  3777                           
  3778                           ;main.c: 591:     if (ff.bits.ALLOW_FUN) {
  3779  0196  1EF7               	btfss	_ff,5
  3780  0197  2999               	goto	u2131
  3781  0198  299A               	goto	u2130
  3782  0199                     u2131:
  3783  0199  29D5               	goto	l507
  3784  019A                     u2130:
  3785  019A                     l494:	
  3786                           ;main.c: 593:         static signed char fun_counter;;main.c: 594:         do { LATCbits
      +                          .LATC1 = 1; } while(0);
  3787                           
  3788  019A  0022               	movlb	2	; select bank2
  3789  019B  148E               	bsf	14,1	;volatile
  3790  019C                     l2307:
  3791                           
  3792                           ;main.c: 595:         _delay((unsigned long)((1)*(16000000/4000.0)));
  3793  019C  3006               	movlw	6
  3794  019D  00F2               	movwf	??_get_fun
  3795  019E  3030               	movlw	48
  3796  019F                     u2597:
  3797  019F  0B89               	decfsz	9,f
  3798  01A0  299F               	goto	u2597
  3799  01A1  0BF2               	decfsz	??_get_fun,f
  3800  01A2  299F               	goto	u2597
  3801  01A3  3200               	nop2
  3802  01A4                     l2309:
  3803  01A4  0023               	movlb	3	; select bank3
  3804  01A5  110E               	bcf	14,2	;volatile
  3805  01A6                     l2311:
  3806  01A6  0021               	movlb	1	; select bank1
  3807  01A7  150E               	bsf	14,2	;volatile
  3808  01A8                     l2313:
  3809                           
  3810                           ;main.c: 599:         if (PORTCbits.RC2) fun_counter--;
  3811  01A8  0020               	movlb	0	; select bank0
  3812  01A9  1D0E               	btfss	14,2	;volatile
  3813  01AA  29AC               	goto	u2141
  3814  01AB  29AD               	goto	u2140
  3815  01AC                     u2141:
  3816  01AC  29B2               	goto	l2317
  3817  01AD                     u2140:
  3818  01AD                     l2315:
  3819  01AD  30FF               	movlw	255
  3820  01AE  00F2               	movwf	??_get_fun
  3821  01AF  0872               	movf	??_get_fun,w
  3822  01B0  07B4               	addwf	get_fun@fun_counter,f
  3823  01B1  29B6               	goto	l2319
  3824  01B2                     l2317:
  3825  01B2  3001               	movlw	1
  3826  01B3  00F2               	movwf	??_get_fun
  3827  01B4  0872               	movf	??_get_fun,w
  3828  01B5  07B4               	addwf	get_fun@fun_counter,f
  3829  01B6                     l2319:
  3830  01B6  0022               	movlb	2	; select bank2
  3831  01B7  108E               	bcf	14,1	;volatile
  3832  01B8                     l2321:
  3833                           
  3834                           ;main.c: 607:         if (fun_counter > FUN_MEAS_COUNT) {
  3835  01B8  0020               	movlb	0	; select bank0
  3836  01B9  0834               	movf	get_fun@fun_counter,w
  3837  01BA  3A80               	xorlw	128
  3838  01BB  3E75               	addlw	-139
  3839  01BC  1C03               	skipc
  3840  01BD  29BF               	goto	u2151
  3841  01BE  29C0               	goto	u2150
  3842  01BF                     u2151:
  3843  01BF  29C7               	goto	l2329
  3844  01C0                     u2150:
  3845  01C0                     l2323:
  3846                           
  3847                           ;main.c: 608:             fun_counter = FUN_MEAS_COUNT;
  3848  01C0  300A               	movlw	10
  3849  01C1  00F2               	movwf	??_get_fun
  3850  01C2  0872               	movf	??_get_fun,w
  3851  01C3  00B4               	movwf	get_fun@fun_counter
  3852  01C4                     l2325:
  3853                           
  3854                           ;main.c: 609:             ff.bits.FUN_LOW = 0;
  3855  01C4  11F7               	bcf	_ff,3
  3856  01C5                     l2327:
  3857                           
  3858                           ;main.c: 610:             ff.bits.FUN_HIGH = 1;
  3859  01C5  1577               	bsf	_ff,2
  3860                           
  3861                           ;main.c: 611:         } else if (fun_counter<-FUN_MEAS_COUNT) {
  3862  01C6  29D4               	goto	l2337
  3863  01C7                     l2329:
  3864  01C7  0834               	movf	get_fun@fun_counter,w
  3865  01C8  3A80               	xorlw	128
  3866  01C9  3E8A               	addlw	138
  3867  01CA  1803               	skipnc
  3868  01CB  29CD               	goto	u2161
  3869  01CC  29CE               	goto	u2160
  3870  01CD                     u2161:
  3871  01CD  29D4               	goto	l2337
  3872  01CE                     u2160:
  3873  01CE                     l2331:
  3874                           
  3875                           ;main.c: 612:             fun_counter = -FUN_MEAS_COUNT;
  3876  01CE  30F6               	movlw	246
  3877  01CF  00F2               	movwf	??_get_fun
  3878  01D0  0872               	movf	??_get_fun,w
  3879  01D1  00B4               	movwf	get_fun@fun_counter
  3880  01D2                     l2333:
  3881                           
  3882                           ;main.c: 613:             ff.bits.FUN_LOW = 1;
  3883  01D2  15F7               	bsf	_ff,3
  3884  01D3                     l2335:
  3885                           
  3886                           ;main.c: 614:             ff.bits.FUN_HIGH = 0;
  3887  01D3  1177               	bcf	_ff,2
  3888  01D4                     l2337:
  3889                           
  3890                           ;main.c: 616:         ff.bits.ALLOW_FUN = 0;
  3891  01D4  12F7               	bcf	_ff,5
  3892  01D5                     l507:
  3893  01D5  0008               	return
  3894  01D6                     __end_of_get_fun:
  3895                           
  3896                           	psect	text23
  3897  02B3                     __ptext23:	
  3898 ;; *************** function _fun_work *****************
  3899 ;; Defined at:
  3900 ;;		line 313 in file "main.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;		None
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;		None
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  1    wreg      void 
  3907 ;; Registers used:
  3908 ;;		wreg, status,2, status,0, pclath, cstack
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMMON   BANK0   BANK1
  3914 ;;      Params:         0       0       0
  3915 ;;      Locals:         0       0       0
  3916 ;;      Temps:          1       0       0
  3917 ;;      Totals:         1       0       0
  3918 ;;Total ram usage:        1 bytes
  3919 ;; Hardware stack levels used: 1
  3920 ;; Hardware stack levels required when called: 9
  3921 ;; This function calls:
  3922 ;;		_close
  3923 ;;		_open
  3924 ;; This function is called by:
  3925 ;;		_main
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929  02B3                     _fun_work:	
  3930                           ;psect for function _fun_work
  3931                           
  3932  02B3                     l2229:	
  3933                           ;incstack = 0
  3934                           ; Regs used in _fun_work: [wreg+status,2+status,0+pclath+cstack]
  3935                           
  3936                           
  3937                           ;main.c: 314:     {;main.c: 315:         if (
  3938  02B3  1DF7               	btfss	_ff,3
  3939  02B4  2AB6               	goto	u1951
  3940  02B5  2AB7               	goto	u1950
  3941  02B6                     u1951:
  3942  02B6  2ACC               	goto	l2243
  3943  02B7                     u1950:
  3944  02B7                     l2231:
  3945  02B7  1977               	btfsc	_ff,2
  3946  02B8  2ABA               	goto	u1961
  3947  02B9  2ABB               	goto	u1960
  3948  02BA                     u1961:
  3949  02BA  2ACC               	goto	l2243
  3950  02BB                     u1960:
  3951  02BB                     l2233:
  3952  02BB  1CF7               	btfss	_ff,1
  3953  02BC  2ABE               	goto	u1971
  3954  02BD  2ABF               	goto	u1970
  3955  02BE                     u1971:
  3956  02BE  2ACC               	goto	l2243
  3957  02BF                     u1970:
  3958  02BF                     l2235:
  3959  02BF  1978               	btfsc	_ff+1,2
  3960  02C0  2AC2               	goto	u1981
  3961  02C1  2AC3               	goto	u1980
  3962  02C2                     u1981:
  3963  02C2  2ACC               	goto	l2243
  3964  02C3                     u1980:
  3965  02C3                     l2237:
  3966  02C3  18F8               	btfsc	_ff+1,1
  3967  02C4  2AC6               	goto	u1991
  3968  02C5  2AC7               	goto	u1990
  3969  02C6                     u1991:
  3970  02C6  2ACC               	goto	l2243
  3971  02C7                     u1990:
  3972  02C7                     l2239:
  3973                           
  3974                           ;main.c: 320:                 !ff.bits.OPENING) {;main.c: 321:             beep_short_co
      +                          unt = 1;
  3975  02C7  01FB               	clrf	_beep_short_count
  3976  02C8  0AFB               	incf	_beep_short_count,f
  3977  02C9                     l2241:
  3978                           
  3979                           ;main.c: 322:             open();
  3980  02C9  3183  2388  3182   	fcall	_open
  3981  02CC                     l2243:
  3982                           
  3983                           ;main.c: 324:         if (
  3984  02CC  1D77               	btfss	_ff,2
  3985  02CD  2ACF               	goto	u2001
  3986  02CE  2AD0               	goto	u2000
  3987  02CF                     u2001:
  3988  02CF  2AE3               	goto	l381
  3989  02D0                     u2000:
  3990  02D0                     l2245:
  3991  02D0  19F7               	btfsc	_ff,3
  3992  02D1  2AD3               	goto	u2011
  3993  02D2  2AD4               	goto	u2010
  3994  02D3                     u2011:
  3995  02D3  2AE3               	goto	l381
  3996  02D4                     u2010:
  3997  02D4                     l2247:
  3998  02D4  1A78               	btfsc	_ff+1,4
  3999  02D5  2AD7               	goto	u2021
  4000  02D6  2AD8               	goto	u2020
  4001  02D7                     u2021:
  4002  02D7  2AE3               	goto	l381
  4003  02D8                     u2020:
  4004  02D8                     l2249:
  4005  02D8  19F8               	btfsc	_ff+1,3
  4006  02D9  2ADB               	goto	u2031
  4007  02DA  2ADC               	goto	u2030
  4008  02DB                     u2031:
  4009  02DB  2AE3               	goto	l381
  4010  02DC                     u2030:
  4011  02DC                     l2251:
  4012                           
  4013                           ;main.c: 328:                 !ff.bits.CLOSING) {;main.c: 329:             beep_short_co
      +                          unt = 2;
  4014  02DC  3002               	movlw	2
  4015  02DD  00F3               	movwf	??_fun_work
  4016  02DE  0873               	movf	??_fun_work,w
  4017  02DF  00FB               	movwf	_beep_short_count
  4018  02E0                     l2253:
  4019                           
  4020                           ;main.c: 330:             close();
  4021  02E0  3183  23B8  3182   	fcall	_close
  4022  02E3                     l381:
  4023  02E3  0008               	return
  4024  02E4                     __end_of_fun_work:
  4025                           
  4026                           	psect	text24
  4027  0388                     __ptext24:	
  4028 ;; *************** function _open *****************
  4029 ;; Defined at:
  4030 ;;		line 245 in file "main.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;		None
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;		None
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  1    wreg      void 
  4037 ;; Registers used:
  4038 ;;		wreg, status,2, status,0, pclath, cstack
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMMON   BANK0   BANK1
  4044 ;;      Params:         0       0       0
  4045 ;;      Locals:         0       0       0
  4046 ;;      Temps:          0       0       0
  4047 ;;      Totals:         0       0       0
  4048 ;;Total ram usage:        0 bytes
  4049 ;; Hardware stack levels used: 1
  4050 ;; Hardware stack levels required when called: 8
  4051 ;; This function calls:
  4052 ;;		_go_open
  4053 ;;		_go_open_alt
  4054 ;;		_rele_off
  4055 ;; This function is called by:
  4056 ;;		_fun_work
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060  0388                     _open:	
  4061                           ;psect for function _open
  4062                           
  4063  0388                     l2165:	
  4064                           ;incstack = 0
  4065                           ; Regs used in _open: [wreg+status,2+status,0+pclath+cstack]
  4066                           
  4067                           
  4068                           ;main.c: 246:     if (ff.bits.CLOSING) {
  4069  0388  1DF8               	btfss	_ff+1,3
  4070  0389  2B8B               	goto	u1811
  4071  038A  2B8C               	goto	u1810
  4072  038B                     u1811:
  4073  038B  2B90               	goto	l351
  4074  038C                     u1810:
  4075  038C                     l2167:
  4076                           
  4077                           ;main.c: 247:         rele_off();
  4078  038C  3184  2460  3183   	fcall	_rele_off
  4079                           
  4080                           ;main.c: 248:     } else {
  4081  038F  2B9F               	goto	l356
  4082  0390                     l351:
  4083                           
  4084                           ;main.c: 249:         if (ff.bits.NORMAL_WORK_MODE_ON) {
  4085  0390  1C7A               	btfss	_ff+3,0
  4086  0391  2B93               	goto	u1821
  4087  0392  2B94               	goto	u1820
  4088  0393                     u1821:
  4089  0393  2B98               	goto	l353
  4090  0394                     u1820:
  4091  0394                     l2169:
  4092                           
  4093                           ;main.c: 250:             go_open();
  4094  0394  3183  23A0  3183   	fcall	_go_open
  4095                           
  4096                           ;main.c: 251:         } else if (ff.bits.UNIVERSAL_VORK_MODE_ON) {
  4097  0397  2B9F               	goto	l356
  4098  0398                     l353:
  4099  0398  1CFA               	btfss	_ff+3,1
  4100  0399  2B9B               	goto	u1831
  4101  039A  2B9C               	goto	u1830
  4102  039B                     u1831:
  4103  039B  2B9F               	goto	l356
  4104  039C                     u1830:
  4105  039C                     l2171:
  4106                           
  4107                           ;main.c: 252:             go_open_alt();
  4108  039C  3184  24C7  3183   	fcall	_go_open_alt
  4109  039F                     l356:
  4110  039F  0008               	return
  4111  03A0                     __end_of_open:
  4112                           
  4113                           	psect	text25
  4114  04C7                     __ptext25:	
  4115 ;; *************** function _go_open_alt *****************
  4116 ;; Defined at:
  4117 ;;		line 208 in file "main.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;		None
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;		None
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  1    wreg      void 
  4124 ;; Registers used:
  4125 ;;		None
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMMON   BANK0   BANK1
  4131 ;;      Params:         0       0       0
  4132 ;;      Locals:         0       0       0
  4133 ;;      Temps:          0       0       0
  4134 ;;      Totals:         0       0       0
  4135 ;;Total ram usage:        0 bytes
  4136 ;; Hardware stack levels used: 1
  4137 ;; Hardware stack levels required when called: 7
  4138 ;; This function calls:
  4139 ;;		Nothing
  4140 ;; This function is called by:
  4141 ;;		_open
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145  04C7                     _go_open_alt:	
  4146                           ;psect for function _go_open_alt
  4147                           
  4148  04C7                     l1373:	
  4149                           ;incstack = 0
  4150                           ; Regs used in _go_open_alt: []
  4151                           
  4152                           
  4153                           ;main.c: 209:     if (!ff.bits.OPENED && ff.bits.MOVING_ALLOWED) {
  4154  04C7  1978               	btfsc	_ff+1,2
  4155  04C8  2CCA               	goto	u281
  4156  04C9  2CCB               	goto	u280
  4157  04CA                     u281:
  4158  04CA  2CD3               	goto	l335
  4159  04CB                     u280:
  4160  04CB                     l1375:
  4161  04CB  1FF9               	btfss	_ff+2,7
  4162  04CC  2CCE               	goto	u291
  4163  04CD  2CCF               	goto	u290
  4164  04CE                     u291:
  4165  04CE  2CD3               	goto	l335
  4166  04CF                     u290:
  4167  04CF                     l1377:
  4168                           
  4169                           ;main.c: 210:         ff.bits.CLOSED = 0;
  4170  04CF  1278               	bcf	_ff+1,4
  4171                           
  4172                           ;main.c: 211:         ff.bits.OPENED = 1;
  4173  04D0  1578               	bsf	_ff+1,2
  4174                           
  4175                           ;main.c: 213:         ff.bits.RELE_CONTROL_ON = 0;
  4176  04D1  1378               	bcf	_ff+1,6
  4177                           
  4178                           ;main.c: 214:         ff.bits.RELE_POWER_ON = 0;
  4179  04D2  12F8               	bcf	_ff+1,5
  4180  04D3                     l335:
  4181  04D3  0008               	return
  4182  04D4                     __end_of_go_open_alt:
  4183                           
  4184                           	psect	text26
  4185  03A0                     __ptext26:	
  4186 ;; *************** function _go_open *****************
  4187 ;; Defined at:
  4188 ;;		line 179 in file "main.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;		None
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;		None
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      void 
  4195 ;; Registers used:
  4196 ;;		wreg
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMMON   BANK0   BANK1
  4202 ;;      Params:         0       0       0
  4203 ;;      Locals:         0       0       0
  4204 ;;      Temps:          0       0       0
  4205 ;;      Totals:         0       0       0
  4206 ;;Total ram usage:        0 bytes
  4207 ;; Hardware stack levels used: 1
  4208 ;; Hardware stack levels required when called: 7
  4209 ;; This function calls:
  4210 ;;		Nothing
  4211 ;; This function is called by:
  4212 ;;		_open
  4213 ;;		_autorotation_work
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217  03A0                     _go_open:	
  4218                           ;psect for function _go_open
  4219                           
  4220  03A0                     l2025:	
  4221                           ;incstack = 0
  4222                           ; Regs used in _go_open: [wreg]
  4223                           
  4224                           
  4225                           ;main.c: 181:     if (!ff.bits.OPENED && !ff.bits.OPENING && ff.bits.MOVING_ALLOWED) {
  4226  03A0  1978               	btfsc	_ff+1,2
  4227  03A1  2BA3               	goto	u1491
  4228  03A2  2BA4               	goto	u1490
  4229  03A3                     u1491:
  4230  03A3  2BB7               	goto	l323
  4231  03A4                     u1490:
  4232  03A4                     l2027:
  4233  03A4  18F8               	btfsc	_ff+1,1
  4234  03A5  2BA7               	goto	u1501
  4235  03A6  2BA8               	goto	u1500
  4236  03A7                     u1501:
  4237  03A7  2BB7               	goto	l323
  4238  03A8                     u1500:
  4239  03A8                     l2029:
  4240  03A8  1FF9               	btfss	_ff+2,7
  4241  03A9  2BAB               	goto	u1511
  4242  03AA  2BAC               	goto	u1510
  4243  03AB                     u1511:
  4244  03AB  2BB7               	goto	l323
  4245  03AC                     u1510:
  4246  03AC                     l2031:
  4247                           
  4248                           ;main.c: 182:         ff.bits.OPENING = 1;
  4249  03AC  14F8               	bsf	_ff+1,1
  4250                           
  4251                           ;main.c: 183:         ff.bits.CLOSED = 0;
  4252  03AD  1278               	bcf	_ff+1,4
  4253                           
  4254                           ;main.c: 184:         ff.bits.CLOSING = 0;
  4255  03AE  11F8               	bcf	_ff+1,3
  4256                           
  4257                           ;main.c: 187:         ff.bits.RELE_CONTROL_ON = 0;
  4258  03AF  1378               	bcf	_ff+1,6
  4259                           
  4260                           ;main.c: 188:         ff.bits.RELE_POWER_ON = 1;
  4261  03B0  16F8               	bsf	_ff+1,5
  4262  03B1                     l2033:
  4263                           
  4264                           ;main.c: 190:         time_rele_power = RELE_POWER_WORK_DELAY;
  4265  03B1  300F               	movlw	15
  4266  03B2  0020               	movlb	0	; select bank0
  4267  03B3  00AF               	movwf	_time_rele_power
  4268  03B4  3000               	movlw	0
  4269  03B5  00B0               	movwf	_time_rele_power+1
  4270  03B6                     l2035:
  4271                           
  4272                           ;main.c: 192:         ff.bits.AUTOROTATION_WORK = 0;
  4273  03B6  12FA               	bcf	_ff+3,5
  4274  03B7                     l323:
  4275  03B7  0008               	return
  4276  03B8                     __end_of_go_open:
  4277                           
  4278                           	psect	text27
  4279  03B8                     __ptext27:	
  4280 ;; *************** function _close *****************
  4281 ;; Defined at:
  4282 ;;		line 233 in file "main.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;		None
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;		None
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  1    wreg      void 
  4289 ;; Registers used:
  4290 ;;		wreg, status,2, status,0, pclath, cstack
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMMON   BANK0   BANK1
  4296 ;;      Params:         0       0       0
  4297 ;;      Locals:         0       0       0
  4298 ;;      Temps:          0       0       0
  4299 ;;      Totals:         0       0       0
  4300 ;;Total ram usage:        0 bytes
  4301 ;; Hardware stack levels used: 1
  4302 ;; Hardware stack levels required when called: 8
  4303 ;; This function calls:
  4304 ;;		_go_close
  4305 ;;		_go_close_alt
  4306 ;;		_rele_off
  4307 ;; This function is called by:
  4308 ;;		_fun_work
  4309 ;;		_main
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313  03B8                     _close:	
  4314                           ;psect for function _close
  4315                           
  4316  03B8                     l2157:	
  4317                           ;incstack = 0
  4318                           ; Regs used in _close: [wreg+status,2+status,0+pclath+cstack]
  4319                           
  4320                           
  4321                           ;main.c: 234:     if (ff.bits.OPENING) {
  4322  03B8  1CF8               	btfss	_ff+1,1
  4323  03B9  2BBB               	goto	u1781
  4324  03BA  2BBC               	goto	u1780
  4325  03BB                     u1781:
  4326  03BB  2BC0               	goto	l343
  4327  03BC                     u1780:
  4328  03BC                     l2159:
  4329                           
  4330                           ;main.c: 235:         rele_off();
  4331  03BC  3184  2460  3183   	fcall	_rele_off
  4332                           
  4333                           ;main.c: 236:     } else {
  4334  03BF  2BCF               	goto	l348
  4335  03C0                     l343:
  4336                           
  4337                           ;main.c: 237:         if (ff.bits.NORMAL_WORK_MODE_ON) {
  4338  03C0  1C7A               	btfss	_ff+3,0
  4339  03C1  2BC3               	goto	u1791
  4340  03C2  2BC4               	goto	u1790
  4341  03C3                     u1791:
  4342  03C3  2BC8               	goto	l345
  4343  03C4                     u1790:
  4344  03C4                     l2161:
  4345                           
  4346                           ;main.c: 238:             go_close();
  4347  03C4  3182  22E4  3183   	fcall	_go_close
  4348                           
  4349                           ;main.c: 239:         } else if (ff.bits.UNIVERSAL_VORK_MODE_ON) {
  4350  03C7  2BCF               	goto	l348
  4351  03C8                     l345:
  4352  03C8  1CFA               	btfss	_ff+3,1
  4353  03C9  2BCB               	goto	u1801
  4354  03CA  2BCC               	goto	u1800
  4355  03CB                     u1801:
  4356  03CB  2BCF               	goto	l348
  4357  03CC                     u1800:
  4358  03CC                     l2163:
  4359                           
  4360                           ;main.c: 240:             go_close_alt();
  4361  03CC  3184  2498  3183   	fcall	_go_close_alt
  4362  03CF                     l348:
  4363  03CF  0008               	return
  4364  03D0                     __end_of_close:
  4365                           
  4366                           	psect	text28
  4367  0460                     __ptext28:	
  4368 ;; *************** function _rele_off *****************
  4369 ;; Defined at:
  4370 ;;		line 218 in file "main.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;		None
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;		None
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  1    wreg      void 
  4377 ;; Registers used:
  4378 ;;		wreg
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMMON   BANK0   BANK1
  4384 ;;      Params:         0       0       0
  4385 ;;      Locals:         0       0       0
  4386 ;;      Temps:          1       0       0
  4387 ;;      Totals:         1       0       0
  4388 ;;Total ram usage:        1 bytes
  4389 ;; Hardware stack levels used: 1
  4390 ;; Hardware stack levels required when called: 7
  4391 ;; This function calls:
  4392 ;;		Nothing
  4393 ;; This function is called by:
  4394 ;;		_close
  4395 ;;		_open
  4396 ;;		_switch_wm
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400  0460                     _rele_off:	
  4401                           ;psect for function _rele_off
  4402                           
  4403  0460                     l2039:	
  4404                           ;incstack = 0
  4405                           ; Regs used in _rele_off: [wreg]
  4406                           
  4407                           
  4408                           ;main.c: 219:     ff.bits.RELE_CONTROL_ON = 0;
  4409  0460  1378               	bcf	_ff+1,6
  4410                           
  4411                           ;main.c: 220:     ff.bits.RELE_POWER_ON = 0;
  4412  0461  12F8               	bcf	_ff+1,5
  4413                           
  4414                           ;main.c: 221:     ff.bits.CLOSING = 0;
  4415  0462  11F8               	bcf	_ff+1,3
  4416                           
  4417                           ;main.c: 222:     ff.bits.OPENING = 0;
  4418  0463  10F8               	bcf	_ff+1,1
  4419                           
  4420                           ;main.c: 223:     ff.bits.CLOSED = 0;
  4421  0464  1278               	bcf	_ff+1,4
  4422                           
  4423                           ;main.c: 224:     if (ff.bits.UNIVERSAL_VORK_MODE_ON) {
  4424  0465  1CFA               	btfss	_ff+3,1
  4425  0466  2C68               	goto	u1521
  4426  0467  2C69               	goto	u1520
  4427  0468                     u1521:
  4428  0468  2C6B               	goto	l338
  4429  0469                     u1520:
  4430  0469                     l2041:
  4431                           
  4432                           ;main.c: 225:         ff.bits.OPENED = 1;
  4433  0469  1578               	bsf	_ff+1,2
  4434                           
  4435                           ;main.c: 226:     } else {
  4436  046A  2C6C               	goto	l339
  4437  046B                     l338:
  4438                           
  4439                           ;main.c: 227:         ff.bits.OPENED = 0;
  4440  046B  1178               	bcf	_ff+1,2
  4441  046C                     l339:	
  4442                           ;main.c: 228:     }
  4443                           
  4444                           
  4445                           ;main.c: 229:     ff.bits.MOVING_ALLOWED = 0;
  4446  046C  13F9               	bcf	_ff+2,7
  4447  046D                     l2043:
  4448                           
  4449                           ;main.c: 230:     time_moving_wait = MOVING_WAIT_DELAY;
  4450  046D  3002               	movlw	2
  4451  046E  00F2               	movwf	??_rele_off
  4452  046F  0872               	movf	??_rele_off,w
  4453  0470  0020               	movlb	0	; select bank0
  4454  0471  00BB               	movwf	_time_moving_wait
  4455  0472                     l340:
  4456  0472  0008               	return
  4457  0473                     __end_of_rele_off:
  4458                           
  4459                           	psect	text29
  4460  0498                     __ptext29:	
  4461 ;; *************** function _go_close_alt *****************
  4462 ;; Defined at:
  4463 ;;		line 197 in file "main.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;		None
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;		None
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  1    wreg      void 
  4470 ;; Registers used:
  4471 ;;		None
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMMON   BANK0   BANK1
  4477 ;;      Params:         0       0       0
  4478 ;;      Locals:         0       0       0
  4479 ;;      Temps:          0       0       0
  4480 ;;      Totals:         0       0       0
  4481 ;;Total ram usage:        0 bytes
  4482 ;; Hardware stack levels used: 1
  4483 ;; Hardware stack levels required when called: 7
  4484 ;; This function calls:
  4485 ;;		Nothing
  4486 ;; This function is called by:
  4487 ;;		_close
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491  0498                     _go_close_alt:	
  4492                           ;psect for function _go_close_alt
  4493                           
  4494  0498                     l1369:	
  4495                           ;incstack = 0
  4496                           ; Regs used in _go_close_alt: []
  4497                           
  4498                           
  4499                           ;main.c: 199:     if ((!ff.bits.CLOSED && ff.bits.MOVING_ALLOWED) || ff.bits.ALARM_ON) {
  4500  0498  1A78               	btfsc	_ff+1,4
  4501  0499  2C9B               	goto	u251
  4502  049A  2C9C               	goto	u250
  4503  049B                     u251:
  4504  049B  2CA0               	goto	l330
  4505  049C                     u250:
  4506  049C                     l1371:
  4507  049C  1BF9               	btfsc	_ff+2,7
  4508  049D  2C9F               	goto	u261
  4509  049E  2CA0               	goto	u260
  4510  049F                     u261:
  4511  049F  2CA4               	goto	l328
  4512  04A0                     u260:
  4513  04A0                     l330:
  4514  04A0  1C77               	btfss	_ff,0
  4515  04A1  2CA3               	goto	u271
  4516  04A2  2CA4               	goto	u270
  4517  04A3                     u271:
  4518  04A3  2CA8               	goto	l331
  4519  04A4                     u270:
  4520  04A4                     l328:
  4521                           
  4522                           ;main.c: 200:         ff.bits.OPENED = 0;
  4523  04A4  1178               	bcf	_ff+1,2
  4524                           
  4525                           ;main.c: 201:         ff.bits.CLOSED = 1;
  4526  04A5  1678               	bsf	_ff+1,4
  4527                           
  4528                           ;main.c: 203:         ff.bits.RELE_CONTROL_ON = 0;
  4529  04A6  1378               	bcf	_ff+1,6
  4530                           
  4531                           ;main.c: 204:         ff.bits.RELE_POWER_ON = 1;
  4532  04A7  16F8               	bsf	_ff+1,5
  4533  04A8                     l331:
  4534  04A8  0008               	return
  4535  04A9                     __end_of_go_close_alt:
  4536                           
  4537                           	psect	text30
  4538  02E4                     __ptext30:	
  4539 ;; *************** function _go_close *****************
  4540 ;; Defined at:
  4541 ;;		line 160 in file "main.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;		None
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;		None
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  1    wreg      void 
  4548 ;; Registers used:
  4549 ;;		wreg
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMMON   BANK0   BANK1
  4555 ;;      Params:         0       0       0
  4556 ;;      Locals:         0       0       0
  4557 ;;      Temps:          0       0       0
  4558 ;;      Totals:         0       0       0
  4559 ;;Total ram usage:        0 bytes
  4560 ;; Hardware stack levels used: 1
  4561 ;; Hardware stack levels required when called: 7
  4562 ;; This function calls:
  4563 ;;		Nothing
  4564 ;; This function is called by:
  4565 ;;		_close
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569  02E4                     _go_close:	
  4570                           ;psect for function _go_close
  4571                           
  4572  02E4                     l2015:	
  4573                           ;incstack = 0
  4574                           ; Regs used in _go_close: [wreg]
  4575                           
  4576                           
  4577                           ;main.c: 162:     if (!ff.bits.CLOSING && !ff.bits.CLOSED && ff.bits.MOVING_ALLOWED) {
  4578  02E4  19F8               	btfsc	_ff+1,3
  4579  02E5  2AE7               	goto	u1461
  4580  02E6  2AE8               	goto	u1460
  4581  02E7                     u1461:
  4582  02E7  2B08               	goto	l319
  4583  02E8                     u1460:
  4584  02E8                     l2017:
  4585  02E8  1A78               	btfsc	_ff+1,4
  4586  02E9  2AEB               	goto	u1471
  4587  02EA  2AEC               	goto	u1470
  4588  02EB                     u1471:
  4589  02EB  2B08               	goto	l319
  4590  02EC                     u1470:
  4591  02EC                     l2019:
  4592  02EC  1FF9               	btfss	_ff+2,7
  4593  02ED  2AEF               	goto	u1481
  4594  02EE  2AF0               	goto	u1480
  4595  02EF                     u1481:
  4596  02EF  2B08               	goto	l319
  4597  02F0                     u1480:
  4598  02F0                     l2021:
  4599                           
  4600                           ;main.c: 163:         ff.bits.CLOSING = 1;
  4601  02F0  15F8               	bsf	_ff+1,3
  4602                           
  4603                           ;main.c: 164:         ff.bits.OPENED = 0;
  4604  02F1  1178               	bcf	_ff+1,2
  4605                           
  4606                           ;main.c: 165:         ff.bits.OPENING = 0;
  4607  02F2  10F8               	bcf	_ff+1,1
  4608                           
  4609                           ;main.c: 167:         ff.bits.RELE_POWER_ON = 0;
  4610  02F3  12F8               	bcf	_ff+1,5
  4611                           
  4612                           ;main.c: 168:         ff.bits.RELE_CONTROL_ON = 1;
  4613  02F4  1778               	bsf	_ff+1,6
  4614  02F5                     l2023:
  4615                           
  4616                           ;main.c: 170:         time_rele_control = RELE_GAP + RELE_POWER_WORK_DELAY + RELE_GAP;
  4617  02F5  3013               	movlw	19
  4618  02F6  0020               	movlb	0	; select bank0
  4619  02F7  00AD               	movwf	_time_rele_control
  4620  02F8  3000               	movlw	0
  4621  02F9  00AE               	movwf	_time_rele_control+1
  4622                           
  4623                           ;main.c: 171:         time_rele_power = RELE_POWER_WORK_DELAY;
  4624  02FA  300F               	movlw	15
  4625  02FB  00AF               	movwf	_time_rele_power
  4626  02FC  3000               	movlw	0
  4627  02FD  00B0               	movwf	_time_rele_power+1
  4628                           
  4629                           ;main.c: 172:         time_rele_gap = RELE_GAP;
  4630  02FE  3002               	movlw	2
  4631  02FF  00AB               	movwf	_time_rele_gap
  4632  0300  3000               	movlw	0
  4633  0301  00AC               	movwf	_time_rele_gap+1
  4634                           
  4635                           ;main.c: 174:         time_rotation = 0;
  4636  0302  3000               	movlw	0
  4637  0303  00A0               	movwf	_time_rotation
  4638  0304  3000               	movlw	0
  4639  0305  00A1               	movwf	_time_rotation+1
  4640  0306  3000               	movlw	0
  4641  0307  00A2               	movwf	_time_rotation+2
  4642  0308                     l319:
  4643  0308  0008               	return
  4644  0309                     __end_of_go_close:
  4645                           
  4646                           	psect	intentry
  4647  0004                     __pintentry:	
  4648 ;; *************** function _INTERRUPT_InterruptManager *****************
  4649 ;; Defined at:
  4650 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;		None
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;		None
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      void 
  4657 ;; Registers used:
  4658 ;;		wreg, status,2, status,0, pclath, cstack
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMMON   BANK0   BANK1
  4664 ;;      Params:         0       0       0
  4665 ;;      Locals:         0       0       0
  4666 ;;      Temps:          0       0       0
  4667 ;;      Totals:         0       0       0
  4668 ;;Total ram usage:        0 bytes
  4669 ;; Hardware stack levels used: 1
  4670 ;; Hardware stack levels required when called: 6
  4671 ;; This function calls:
  4672 ;;		_TMR0_ISR
  4673 ;;		_TMR2_ISR
  4674 ;; This function is called by:
  4675 ;;		Interrupt level 1
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679  0004                     _INTERRUPT_InterruptManager:
  4680                           
  4681                           ;incstack = 0
  4682  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4683                           
  4684                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  4685  0005  3180               	pagesel	$
  4686  0006                     i1l2415:
  4687                           
  4688                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4689  0006  1E8B               	btfss	11,5	;volatile
  4690  0007  2809               	goto	u221_21
  4691  0008  280A               	goto	u221_20
  4692  0009                     u221_21:
  4693  0009  2812               	goto	i1l108
  4694  000A                     u221_20:
  4695  000A                     i1l2417:
  4696  000A  1D0B               	btfss	11,2	;volatile
  4697  000B  280D               	goto	u222_21
  4698  000C  280E               	goto	u222_20
  4699  000D                     u222_21:
  4700  000D  2812               	goto	i1l108
  4701  000E                     u222_20:
  4702  000E                     i1l2419:
  4703                           
  4704                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  4705  000E  3184  24A9  3180   	fcall	_TMR0_ISR
  4706                           
  4707                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  4708  0011  2824               	goto	i1l114
  4709  0012                     i1l108:	
  4710                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  4711                           
  4712  0012  1F0B               	btfss	11,6	;volatile
  4713  0013  2815               	goto	u223_21
  4714  0014  2816               	goto	u223_20
  4715  0015                     u223_21:
  4716  0015  2824               	goto	i1l114
  4717  0016                     u223_20:
  4718  0016                     i1l2421:
  4719                           
  4720                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  4721  0016  0021               	movlb	1	; select bank1
  4722  0017  1C91               	btfss	17,1	;volatile
  4723  0018  281A               	goto	u224_21
  4724  0019  281B               	goto	u224_20
  4725  001A                     u224_21:
  4726  001A  2824               	goto	i1l113
  4727  001B                     u224_20:
  4728  001B                     i1l2423:
  4729  001B  0020               	movlb	0	; select bank0
  4730  001C  1C91               	btfss	17,1	;volatile
  4731  001D  281F               	goto	u225_21
  4732  001E  2820               	goto	u225_20
  4733  001F                     u225_21:
  4734  001F  2824               	goto	i1l113
  4735  0020                     u225_20:
  4736  0020                     i1l2425:
  4737                           
  4738                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
  4739  0020  3184  24B9  3180   	fcall	_TMR2_ISR
  4740                           
  4741                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4742  0023  2824               	goto	i1l114
  4743  0024                     i1l113:	
  4744                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  4745                           
  4746  0024                     i1l114:
  4747  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4748  0025  0009               	retfie
  4749  0026                     __end_of_INTERRUPT_InterruptManager:
  4750                           
  4751                           	psect	text32
  4752  04B9                     __ptext32:	
  4753 ;; *************** function _TMR2_ISR *****************
  4754 ;; Defined at:
  4755 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;		None
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;		None
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  1    wreg      void 
  4762 ;; Registers used:
  4763 ;;		wreg, status,2, status,0, pclath, cstack
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMMON   BANK0   BANK1
  4769 ;;      Params:         0       0       0
  4770 ;;      Locals:         0       0       0
  4771 ;;      Temps:          0       0       0
  4772 ;;      Totals:         0       0       0
  4773 ;;Total ram usage:        0 bytes
  4774 ;; Hardware stack levels used: 1
  4775 ;; Hardware stack levels required when called: 5
  4776 ;; This function calls:
  4777 ;;		Absolute function
  4778 ;;		_TMR2_DefaultInterruptHandler
  4779 ;;		_ms_tick
  4780 ;; This function is called by:
  4781 ;;		_INTERRUPT_InterruptManager
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785  04B9                     _TMR2_ISR:	
  4786                           ;psect for function _TMR2_ISR
  4787                           
  4788  04B9                     i1l2223:	
  4789                           ;incstack = 0
  4790                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  4791                           
  4792                           
  4793                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
  4794  04B9  0020               	movlb	0	; select bank0
  4795  04BA  1091               	bcf	17,1	;volatile
  4796  04BB                     i1l2225:
  4797                           
  4798                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
  4799  04BB  083F               	movf	_TMR2_InterruptHandler,w
  4800  04BC  0440               	iorwf	_TMR2_InterruptHandler+1,w
  4801  04BD  1903               	btfsc	3,2
  4802  04BE  2CC0               	goto	u194_21
  4803  04BF  2CC1               	goto	u194_20
  4804  04C0                     u194_21:
  4805  04C0  2CC6               	goto	i1l154
  4806  04C1                     u194_20:
  4807  04C1                     i1l2227:
  4808                           
  4809                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
  4810  04C1  0840               	movf	_TMR2_InterruptHandler+1,w
  4811  04C2  008A               	movwf	10
  4812  04C3  083F               	movf	_TMR2_InterruptHandler,w
  4813  04C4  000A               	callw
  4814  04C5  3184               	pagesel	$
  4815  04C6                     i1l154:
  4816  04C6  0008               	return
  4817  04C7                     __end_of_TMR2_ISR:
  4818                           
  4819                           	psect	text33
  4820  0552                     __ptext33:	
  4821 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4822 ;; Defined at:
  4823 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;		None
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;		None
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      void 
  4830 ;; Registers used:
  4831 ;;		None
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMMON   BANK0   BANK1
  4837 ;;      Params:         0       0       0
  4838 ;;      Locals:         0       0       0
  4839 ;;      Temps:          0       0       0
  4840 ;;      Totals:         0       0       0
  4841 ;;Total ram usage:        0 bytes
  4842 ;; Hardware stack levels used: 1
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		_TMR2_Initialize
  4847 ;;		_TMR2_ISR
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851  0552                     _TMR2_DefaultInterruptHandler:	
  4852                           ;psect for function _TMR2_DefaultInterruptHandler
  4853                           
  4854  0552                     i1l160:	
  4855                           ;incstack = 0
  4856                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  4857                           
  4858  0552  0008               	return
  4859  0553                     __end_of_TMR2_DefaultInterruptHandler:
  4860                           
  4861                           	psect	text34
  4862  0151                     __ptext34:	
  4863 ;; *************** function _ms_tick *****************
  4864 ;; Defined at:
  4865 ;;		line 492 in file "main.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;		None
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      void 
  4872 ;; Registers used:
  4873 ;;		wreg, status,2, status,0, pclath, cstack
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMMON   BANK0   BANK1
  4879 ;;      Params:         0       0       0
  4880 ;;      Locals:         0       0       0
  4881 ;;      Temps:          0       0       0
  4882 ;;      Totals:         0       0       0
  4883 ;;Total ram usage:        0 bytes
  4884 ;; Hardware stack levels used: 1
  4885 ;; Hardware stack levels required when called: 4
  4886 ;; This function calls:
  4887 ;;		_ms_100_work
  4888 ;;		_ms_200_work
  4889 ;;		_sec_work
  4890 ;;		_stop_tone
  4891 ;; This function is called by:
  4892 ;;		_start_setup
  4893 ;;		_TMR2_ISR
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897  0151                     _ms_tick:	
  4898                           ;psect for function _ms_tick
  4899                           
  4900  0151                     i1l446:	
  4901                           ;incstack = 0
  4902                           ; Regs used in _ms_tick: [wreg+status,2+status,0+pclath+cstack]
  4903                           ;main.c: 493:     static unsigned ms_count = 0;;main.c: 494:     do { LATCbits.LATC0 = ~
      +                          LATCbits.LATC0; } while(0);
  4904                           
  4905  0151                     i1l2177:
  4906  0151  1003               	clrc
  4907  0152  0022               	movlb	2	; select bank2
  4908  0153  1C0E               	btfss	14,0	;volatile
  4909  0154  1403               	setc
  4910  0155  1803               	btfsc	3,0
  4911  0156  2958               	goto	u184_21
  4912  0157  295B               	goto	u184_20
  4913  0158                     u184_21:
  4914  0158  0022               	movlb	2	; select bank2
  4915  0159  140E               	bsf	14,0	;volatile
  4916  015A  295D               	goto	u185_24
  4917  015B                     u184_20:
  4918  015B  0022               	movlb	2	; select bank2
  4919  015C  100E               	bcf	14,0	;volatile
  4920  015D                     u185_24:
  4921  015D                     i1l2179:
  4922                           
  4923                           ;main.c: 495:     if (time_tone > 0) {
  4924  015D  0020               	movlb	0	; select bank0
  4925  015E  0829               	movf	_time_tone,w
  4926  015F  042A               	iorwf	_time_tone+1,w
  4927  0160  1903               	btfsc	3,2
  4928  0161  2963               	goto	u186_21
  4929  0162  2964               	goto	u186_20
  4930  0163                     u186_21:
  4931  0163  2971               	goto	i1l2187
  4932  0164                     u186_20:
  4933  0164                     i1l2181:
  4934                           
  4935                           ;main.c: 496:         time_tone--;
  4936  0164  3001               	movlw	1
  4937  0165  02A9               	subwf	_time_tone,f
  4938  0166  3000               	movlw	0
  4939  0167  3BAA               	subwfb	_time_tone+1,f
  4940  0168                     i1l2183:
  4941                           
  4942                           ;main.c: 497:         if (time_tone == 0) {
  4943  0168  0829               	movf	_time_tone,w
  4944  0169  042A               	iorwf	_time_tone+1,w
  4945  016A  1D03               	btfss	3,2
  4946  016B  296D               	goto	u187_21
  4947  016C  296E               	goto	u187_20
  4948  016D                     u187_21:
  4949  016D  2971               	goto	i1l2187
  4950  016E                     u187_20:
  4951  016E                     i1l2185:
  4952                           
  4953                           ;main.c: 498:             stop_tone();
  4954  016E  3185  252C  3181   	fcall	_stop_tone
  4955  0171                     i1l2187:
  4956                           
  4957                           ;main.c: 502:     ff.bits.ALLOW_FUN = 1;
  4958  0171  16F7               	bsf	_ff,5
  4959  0172                     i1l2189:
  4960                           
  4961                           ;main.c: 503:     ff.bits.ALLOW_JUMP = 1;
  4962  0172  1777               	bsf	_ff,6
  4963  0173                     i1l2191:
  4964                           
  4965                           ;main.c: 505:     if (ms_count == 100) {
  4966  0173  3064               	movlw	100
  4967  0174  0020               	movlb	0	; select bank0
  4968  0175  0623               	xorwf	ms_tick@ms_count,w
  4969  0176  0424               	iorwf	ms_tick@ms_count+1,w
  4970  0177  1D03               	btfss	3,2
  4971  0178  297A               	goto	u188_21
  4972  0179  297B               	goto	u188_20
  4973  017A                     u188_21:
  4974  017A  2981               	goto	i1l2199
  4975  017B                     u188_20:
  4976  017B                     i1l2193:
  4977                           
  4978                           ;main.c: 506:         ms_100_work();
  4979  017B  3184  24F8  3181   	fcall	_ms_100_work
  4980  017E                     i1l2195:
  4981                           
  4982                           ;main.c: 507:         ms_200_work();
  4983  017E  3182  2215  3181   	fcall	_ms_200_work
  4984  0181                     i1l2199:
  4985                           
  4986                           ;main.c: 515:     if (ms_count == 1000) {
  4987  0181  30E8               	movlw	232
  4988  0182  0020               	movlb	0	; select bank0
  4989  0183  0623               	xorwf	ms_tick@ms_count,w
  4990  0184  3003               	movlw	3
  4991  0185  1903               	skipnz
  4992  0186  0624               	xorwf	ms_tick@ms_count+1,w
  4993  0187  1D03               	btfss	3,2
  4994  0188  298A               	goto	u189_21
  4995  0189  298B               	goto	u189_20
  4996  018A                     u189_21:
  4997  018A  2991               	goto	i1l2205
  4998  018B                     u189_20:
  4999  018B                     i1l2201:
  5000                           
  5001                           ;main.c: 516:         sec_work();
  5002  018B  3180  2037  3181   	fcall	_sec_work
  5003  018E                     i1l2203:
  5004                           
  5005                           ;main.c: 517:         ms_count = 0;
  5006  018E  0020               	movlb	0	; select bank0
  5007  018F  01A3               	clrf	ms_tick@ms_count
  5008  0190  01A4               	clrf	ms_tick@ms_count+1
  5009  0191                     i1l2205:
  5010                           
  5011                           ;main.c: 519:     ms_count++;
  5012  0191  3001               	movlw	1
  5013  0192  07A3               	addwf	ms_tick@ms_count,f
  5014  0193  3000               	movlw	0
  5015  0194  3DA4               	addwfc	ms_tick@ms_count+1,f
  5016  0195                     i1l453:
  5017  0195  0008               	return
  5018  0196                     __end_of_ms_tick:
  5019                           
  5020                           	psect	text35
  5021  052C                     __ptext35:	
  5022 ;; *************** function _stop_tone *****************
  5023 ;; Defined at:
  5024 ;;		line 128 in file "main.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;		None
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;		None
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  1    wreg      void 
  5031 ;; Registers used:
  5032 ;;		None
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMMON   BANK0   BANK1
  5038 ;;      Params:         0       0       0
  5039 ;;      Locals:         0       0       0
  5040 ;;      Temps:          0       0       0
  5041 ;;      Totals:         0       0       0
  5042 ;;Total ram usage:        0 bytes
  5043 ;; Hardware stack levels used: 1
  5044 ;; This function calls:
  5045 ;;		Nothing
  5046 ;; This function is called by:
  5047 ;;		_ms_tick
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051  052C                     _stop_tone:	
  5052                           ;psect for function _stop_tone
  5053                           
  5054  052C                     i1l2013:	
  5055                           ;incstack = 0
  5056                           ; Regs used in _stop_tone: []
  5057                           
  5058                           
  5059                           ;main.c: 129:     ff.bits.ZUM_BUSY = 0;
  5060  052C  1279               	bcf	_ff+2,4
  5061                           
  5062                           ;main.c: 130:     ff.bits.TONE_ON = 0;
  5063  052D  10F9               	bcf	_ff+2,1
  5064                           
  5065                           ;main.c: 131:     ff.bits.TONE_OFF = 1;
  5066  052E  1579               	bsf	_ff+2,2
  5067  052F                     i1l300:
  5068  052F  0008               	return
  5069  0530                     __end_of_stop_tone:
  5070                           
  5071                           	psect	text36
  5072  0037                     __ptext36:	
  5073 ;; *************** function _sec_work *****************
  5074 ;; Defined at:
  5075 ;;		line 411 in file "main.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;		None
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;		None
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      void 
  5082 ;; Registers used:
  5083 ;;		wreg, status,2, status,0, pclath, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMMON   BANK0   BANK1
  5089 ;;      Params:         0       0       0
  5090 ;;      Locals:         0       0       0
  5091 ;;      Temps:          1       0       0
  5092 ;;      Totals:         1       0       0
  5093 ;;Total ram usage:        1 bytes
  5094 ;; Hardware stack levels used: 1
  5095 ;; Hardware stack levels required when called: 1
  5096 ;; This function calls:
  5097 ;;		_minute_tick
  5098 ;;		_rele_tick
  5099 ;;		_sec_30_work
  5100 ;; This function is called by:
  5101 ;;		_ms_tick
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105  0037                     _sec_work:	
  5106                           ;psect for function _sec_work
  5107                           
  5108  0037                     i1l2045:	
  5109                           ;incstack = 0
  5110                           ; Regs used in _sec_work: [wreg+status,2+status,0+pclath+cstack]
  5111                           
  5112                           
  5113                           ;main.c: 417:     static char sec_count = 0;;main.c: 419:     sec_count++;
  5114  0037  3001               	movlw	1
  5115  0038  00F1               	movwf	??_sec_work
  5116  0039  0871               	movf	??_sec_work,w
  5117  003A  0020               	movlb	0	; select bank0
  5118  003B  07B7               	addwf	sec_work@sec_count,f
  5119  003C                     i1l2047:
  5120                           
  5121                           ;main.c: 420:     if (!ff.bits.MOVING_ALLOWED) {
  5122  003C  1BF9               	btfsc	_ff+2,7
  5123  003D  283F               	goto	u153_21
  5124  003E  2840               	goto	u153_20
  5125  003F                     u153_21:
  5126  003F  2849               	goto	i1l409
  5127  0040                     u153_20:
  5128  0040                     i1l2049:
  5129                           
  5130                           ;main.c: 421:         if (time_moving_wait > 0) {
  5131  0040  083B               	movf	_time_moving_wait,w
  5132  0041  1903               	btfsc	3,2
  5133  0042  2844               	goto	u154_21
  5134  0043  2845               	goto	u154_20
  5135  0044                     u154_21:
  5136  0044  2848               	goto	i1l410
  5137  0045                     u154_20:
  5138  0045                     i1l2051:
  5139                           
  5140                           ;main.c: 422:             time_moving_wait--;
  5141  0045  3001               	movlw	1
  5142  0046  02BB               	subwf	_time_moving_wait,f
  5143                           
  5144                           ;main.c: 423:         } else {
  5145  0047  2849               	goto	i1l409
  5146  0048                     i1l410:
  5147                           
  5148                           ;main.c: 424:             ff.bits.MOVING_ALLOWED = 1;
  5149  0048  17F9               	bsf	_ff+2,7
  5150  0049                     i1l409:	
  5151                           ;main.c: 426:     }
  5152                           
  5153                           
  5154                           ;main.c: 427:     if (ff.bits.NORMAL_WORK_MODE_ON) {
  5155  0049  1C7A               	btfss	_ff+3,0
  5156  004A  284C               	goto	u155_21
  5157  004B  284D               	goto	u155_20
  5158  004C                     u155_21:
  5159  004C  285E               	goto	i1l2059
  5160  004D                     u155_20:
  5161  004D                     i1l2053:
  5162                           
  5163                           ;main.c: 428:         if (ff.bits.OPENED) time_rotation++;
  5164  004D  1D78               	btfss	_ff+1,2
  5165  004E  2850               	goto	u156_21
  5166  004F  2851               	goto	u156_20
  5167  0050                     u156_21:
  5168  0050  285B               	goto	i1l2057
  5169  0051                     u156_20:
  5170  0051                     i1l2055:
  5171  0051  3001               	movlw	1
  5172  0052  07A0               	addwf	_time_rotation,f
  5173  0053  3000               	movlw	0
  5174  0054  1803               	skipnc
  5175  0055  3001               	movlw	1
  5176  0056  07A1               	addwf	_time_rotation+1,f
  5177  0057  3000               	movlw	0
  5178  0058  1803               	skipnc
  5179  0059  3001               	movlw	1
  5180  005A  07A2               	addwf	_time_rotation+2,f
  5181  005B                     i1l2057:
  5182                           
  5183                           ;main.c: 429:         rele_tick();
  5184  005B  3180  20FF  3180   	fcall	_rele_tick
  5185  005E                     i1l2059:
  5186                           
  5187                           ;main.c: 432:     if (ff.bits.ALARM_ON) {
  5188  005E  1C77               	btfss	_ff,0
  5189  005F  2861               	goto	u157_21
  5190  0060  2862               	goto	u157_20
  5191  0061                     u157_21:
  5192  0061  287A               	goto	i1l414
  5193  0062                     u157_20:
  5194  0062                     i1l2061:
  5195                           
  5196                           ;main.c: 434:         if (sec_count == 30) {
  5197  0062  301E               	movlw	30
  5198  0063  0020               	movlb	0	; select bank0
  5199  0064  0637               	xorwf	sec_work@sec_count,w
  5200  0065  1D03               	btfss	3,2
  5201  0066  2868               	goto	u158_21
  5202  0067  2869               	goto	u158_20
  5203  0068                     u158_21:
  5204  0068  286C               	goto	i1l2065
  5205  0069                     u158_20:
  5206  0069                     i1l2063:
  5207                           
  5208                           ;main.c: 435:             sec_30_work();
  5209  0069  3184  24ED  3180   	fcall	_sec_30_work
  5210  006C                     i1l2065:
  5211                           
  5212                           ;main.c: 438:         ff.bits.LED_ON = !ff.bits.LED_ON;
  5213  006C  1003               	clrc
  5214  006D  1D7A               	btfss	_ff+3,2
  5215  006E  1403               	setc
  5216  006F  3000               	movlw	0
  5217  0070  3D09               	addwfc	9,w
  5218  0071  00F1               	movwf	??_sec_work
  5219  0072  0DF1               	rlf	??_sec_work,f
  5220  0073  0DF1               	rlf	??_sec_work,f
  5221  0074  087A               	movf	_ff+3,w
  5222  0075  0671               	xorwf	??_sec_work,w
  5223  0076  39FB               	andlw	-5
  5224  0077  0671               	xorwf	??_sec_work,w
  5225  0078  00FA               	movwf	_ff+3
  5226                           
  5227                           ;main.c: 440:     } else if (ff.bits.ALARM_OFF) {
  5228  0079  2897               	goto	i1l2075
  5229  007A                     i1l414:
  5230  007A  1CF7               	btfss	_ff,1
  5231  007B  287D               	goto	u159_21
  5232  007C  287E               	goto	u159_20
  5233  007D                     u159_21:
  5234  007D  2897               	goto	i1l2075
  5235  007E                     u159_20:
  5236  007E                     i1l2067:
  5237                           
  5238                           ;main.c: 442:         static char iled;;main.c: 443:         iled++;
  5239  007E  3001               	movlw	1
  5240  007F  00F1               	movwf	??_sec_work
  5241  0080  0871               	movf	??_sec_work,w
  5242  0081  0020               	movlb	0	; select bank0
  5243  0082  07B6               	addwf	sec_work@iled,f
  5244  0083                     i1l2069:
  5245                           
  5246                           ;main.c: 444:         if (iled > 2) {
  5247  0083  3003               	movlw	3
  5248  0084  0236               	subwf	sec_work@iled,w
  5249  0085  1C03               	skipc
  5250  0086  2888               	goto	u160_21
  5251  0087  2889               	goto	u160_20
  5252  0088                     u160_21:
  5253  0088  2897               	goto	i1l2075
  5254  0089                     u160_20:
  5255  0089                     i1l2071:
  5256                           
  5257                           ;main.c: 445:             ff.bits.LED_ON = !ff.bits.LED_ON;
  5258  0089  1003               	clrc
  5259  008A  1D7A               	btfss	_ff+3,2
  5260  008B  1403               	setc
  5261  008C  3000               	movlw	0
  5262  008D  3D09               	addwfc	9,w
  5263  008E  00F1               	movwf	??_sec_work
  5264  008F  0DF1               	rlf	??_sec_work,f
  5265  0090  0DF1               	rlf	??_sec_work,f
  5266  0091  087A               	movf	_ff+3,w
  5267  0092  0671               	xorwf	??_sec_work,w
  5268  0093  39FB               	andlw	-5
  5269  0094  0671               	xorwf	??_sec_work,w
  5270  0095  00FA               	movwf	_ff+3
  5271  0096                     i1l2073:
  5272                           
  5273                           ;main.c: 446:             iled = 0;
  5274  0096  01B6               	clrf	sec_work@iled
  5275  0097                     i1l2075:
  5276                           
  5277                           ;main.c: 452:     if (sec_count == 60) {
  5278  0097  303C               	movlw	60
  5279  0098  0020               	movlb	0	; select bank0
  5280  0099  0637               	xorwf	sec_work@sec_count,w
  5281  009A  1D03               	btfss	3,2
  5282  009B  289D               	goto	u161_21
  5283  009C  289E               	goto	u161_20
  5284  009D                     u161_21:
  5285  009D  28A3               	goto	i1l422
  5286  009E                     u161_20:
  5287  009E                     i1l2077:
  5288                           
  5289                           ;main.c: 453:         minute_tick();
  5290  009E  3184  2473  3180   	fcall	_minute_tick
  5291  00A1                     i1l2079:
  5292                           
  5293                           ;main.c: 454:         sec_count = 0;
  5294  00A1  0020               	movlb	0	; select bank0
  5295  00A2  01B7               	clrf	sec_work@sec_count
  5296  00A3                     i1l422:
  5297  00A3  0008               	return
  5298  00A4                     __end_of_sec_work:
  5299                           
  5300                           	psect	text37
  5301  04ED                     __ptext37:	
  5302 ;; *************** function _sec_30_work *****************
  5303 ;; Defined at:
  5304 ;;		line 403 in file "main.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;		None
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;		None
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  1    wreg      void 
  5311 ;; Registers used:
  5312 ;;		wreg
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMMON   BANK0   BANK1
  5318 ;;      Params:         0       0       0
  5319 ;;      Locals:         0       0       0
  5320 ;;      Temps:          1       0       0
  5321 ;;      Totals:         1       0       0
  5322 ;;Total ram usage:        1 bytes
  5323 ;; Hardware stack levels used: 1
  5324 ;; This function calls:
  5325 ;;		Nothing
  5326 ;; This function is called by:
  5327 ;;		_sec_work
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331  04ED                     _sec_30_work:	
  5332                           ;psect for function _sec_30_work
  5333                           
  5334  04ED                     i1l1957:	
  5335                           ;incstack = 0
  5336                           ; Regs used in _sec_30_work: [wreg]
  5337                           
  5338                           
  5339                           ;main.c: 404:     if (ff.bits.SIREN) {
  5340  04ED  1DF9               	btfss	_ff+2,3
  5341  04EE  2CF0               	goto	u145_21
  5342  04EF  2CF1               	goto	u145_20
  5343  04F0                     u145_21:
  5344  04F0  2CF3               	goto	i1l1961
  5345  04F1                     u145_20:
  5346  04F1                     i1l1959:
  5347                           
  5348                           ;main.c: 405:         ff.bits.SIREN = 0;
  5349  04F1  11F9               	bcf	_ff+2,3
  5350                           
  5351                           ;main.c: 406:     } else {
  5352  04F2  2CF7               	goto	i1l404
  5353  04F3                     i1l1961:
  5354                           
  5355                           ;main.c: 407:         beep_short_count = 3;
  5356  04F3  3003               	movlw	3
  5357  04F4  00F0               	movwf	??_sec_30_work
  5358  04F5  0870               	movf	??_sec_30_work,w
  5359  04F6  00FB               	movwf	_beep_short_count
  5360  04F7                     i1l404:
  5361  04F7  0008               	return
  5362  04F8                     __end_of_sec_30_work:
  5363                           
  5364                           	psect	text38
  5365  00FF                     __ptext38:	
  5366 ;; *************** function _rele_tick *****************
  5367 ;; Defined at:
  5368 ;;		line 257 in file "main.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;		None
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;		None
  5373 ;; Return value:  Size  Location     Type
  5374 ;;                  1    wreg      void 
  5375 ;; Registers used:
  5376 ;;		wreg, status,2, status,0
  5377 ;; Tracked objects:
  5378 ;;		On entry : 0/0
  5379 ;;		On exit  : 0/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMMON   BANK0   BANK1
  5382 ;;      Params:         0       0       0
  5383 ;;      Locals:         0       0       0
  5384 ;;      Temps:          0       0       0
  5385 ;;      Totals:         0       0       0
  5386 ;;Total ram usage:        0 bytes
  5387 ;; Hardware stack levels used: 1
  5388 ;; This function calls:
  5389 ;;		Nothing
  5390 ;; This function is called by:
  5391 ;;		_sec_work
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395  00FF                     _rele_tick:	
  5396                           ;psect for function _rele_tick
  5397                           
  5398  00FF                     i1l1917:	
  5399                           ;incstack = 0
  5400                           ; Regs used in _rele_tick: [wreg+status,2+status,0]
  5401                           
  5402                           
  5403                           ;main.c: 259:     if (ff.bits.OPENING && ff.bits.CLOSING) {
  5404  00FF  1CF8               	btfss	_ff+1,1
  5405  0100  2902               	goto	u133_21
  5406  0101  2903               	goto	u133_20
  5407  0102                     u133_21:
  5408  0102  2908               	goto	i1l359
  5409  0103                     u133_20:
  5410  0103                     i1l1919:
  5411  0103  1DF8               	btfss	_ff+1,3
  5412  0104  2906               	goto	u134_21
  5413  0105  2907               	goto	u134_20
  5414  0106                     u134_21:
  5415  0106  2908               	goto	i1l359
  5416  0107                     u134_20:
  5417  0107  2950               	goto	i1l360
  5418  0108                     i1l359:	
  5419                           ;main.c: 261:     }
  5420                           
  5421                           
  5422                           ;main.c: 264:     if (ff.bits.OPENING) {
  5423  0108  1CF8               	btfss	_ff+1,1
  5424  0109  290B               	goto	u135_21
  5425  010A  290C               	goto	u135_20
  5426  010B                     u135_21:
  5427  010B  2920               	goto	i1l361
  5428  010C                     u135_20:
  5429  010C                     i1l1923:
  5430                           
  5431                           ;main.c: 265:         if (time_rele_power > 0) {
  5432  010C  0020               	movlb	0	; select bank0
  5433  010D  082F               	movf	_time_rele_power,w
  5434  010E  0430               	iorwf	_time_rele_power+1,w
  5435  010F  1903               	btfsc	3,2
  5436  0110  2912               	goto	u136_21
  5437  0111  2913               	goto	u136_20
  5438  0112                     u136_21:
  5439  0112  2920               	goto	i1l361
  5440  0113                     u136_20:
  5441  0113                     i1l1925:
  5442                           
  5443                           ;main.c: 266:             time_rele_power--;
  5444  0113  3001               	movlw	1
  5445  0114  02AF               	subwf	_time_rele_power,f
  5446  0115  3000               	movlw	0
  5447  0116  3BB0               	subwfb	_time_rele_power+1,f
  5448  0117                     i1l1927:
  5449                           
  5450                           ;main.c: 267:             if (time_rele_power == 0) {
  5451  0117  082F               	movf	_time_rele_power,w
  5452  0118  0430               	iorwf	_time_rele_power+1,w
  5453  0119  1D03               	btfss	3,2
  5454  011A  291C               	goto	u137_21
  5455  011B  291D               	goto	u137_20
  5456  011C                     u137_21:
  5457  011C  2920               	goto	i1l361
  5458  011D                     u137_20:
  5459  011D                     i1l1929:
  5460                           
  5461                           ;main.c: 268:                 ff.bits.RELE_POWER_ON = 0;
  5462  011D  12F8               	bcf	_ff+1,5
  5463                           
  5464                           ;main.c: 269:                 ff.bits.OPENED = 1;
  5465  011E  1578               	bsf	_ff+1,2
  5466                           
  5467                           ;main.c: 270:                 ff.bits.OPENING = 0;
  5468  011F  10F8               	bcf	_ff+1,1
  5469  0120                     i1l361:	
  5470                           ;main.c: 273:     }
  5471                           
  5472                           
  5473                           ;main.c: 276:     if (ff.bits.CLOSING) {
  5474  0120  1DF8               	btfss	_ff+1,3
  5475  0121  2923               	goto	u138_21
  5476  0122  2924               	goto	u138_20
  5477  0123                     u138_21:
  5478  0123  2950               	goto	i1l360
  5479  0124                     u138_20:
  5480  0124                     i1l1931:
  5481                           
  5482                           ;main.c: 278:         if (time_rele_gap == 0) {
  5483  0124  0020               	movlb	0	; select bank0
  5484  0125  082B               	movf	_time_rele_gap,w
  5485  0126  042C               	iorwf	_time_rele_gap+1,w
  5486  0127  1D03               	btfss	3,2
  5487  0128  292A               	goto	u139_21
  5488  0129  292B               	goto	u139_20
  5489  012A                     u139_21:
  5490  012A  2939               	goto	i1l1939
  5491  012B                     u139_20:
  5492  012B                     i1l1933:
  5493                           
  5494                           ;main.c: 279:             if (time_rele_power > 0) {
  5495  012B  082F               	movf	_time_rele_power,w
  5496  012C  0430               	iorwf	_time_rele_power+1,w
  5497  012D  1903               	btfsc	3,2
  5498  012E  2930               	goto	u140_21
  5499  012F  2931               	goto	u140_20
  5500  0130                     u140_21:
  5501  0130  2937               	goto	i1l366
  5502  0131                     u140_20:
  5503  0131                     i1l1935:
  5504                           
  5505                           ;main.c: 280:                 ff.bits.RELE_POWER_ON = 1;
  5506  0131  16F8               	bsf	_ff+1,5
  5507  0132                     i1l1937:
  5508                           
  5509                           ;main.c: 281:                 time_rele_power--;
  5510  0132  3001               	movlw	1
  5511  0133  02AF               	subwf	_time_rele_power,f
  5512  0134  3000               	movlw	0
  5513  0135  3BB0               	subwfb	_time_rele_power+1,f
  5514                           
  5515                           ;main.c: 282:             } else {
  5516  0136  293D               	goto	i1l1941
  5517  0137                     i1l366:
  5518                           
  5519                           ;main.c: 283:                 ff.bits.RELE_POWER_ON = 0;
  5520  0137  12F8               	bcf	_ff+1,5
  5521  0138  293D               	goto	i1l1941
  5522  0139                     i1l1939:
  5523                           
  5524                           ;main.c: 286:             time_rele_gap--;
  5525  0139  3001               	movlw	1
  5526  013A  02AB               	subwf	_time_rele_gap,f
  5527  013B  3000               	movlw	0
  5528  013C  3BAC               	subwfb	_time_rele_gap+1,f
  5529  013D                     i1l1941:
  5530                           
  5531                           ;main.c: 289:         if (time_rele_control > 0) {
  5532  013D  082D               	movf	_time_rele_control,w
  5533  013E  042E               	iorwf	_time_rele_control+1,w
  5534  013F  1903               	btfsc	3,2
  5535  0140  2942               	goto	u141_21
  5536  0141  2943               	goto	u141_20
  5537  0142                     u141_21:
  5538  0142  2950               	goto	i1l360
  5539  0143                     u141_20:
  5540  0143                     i1l1943:
  5541                           
  5542                           ;main.c: 290:             time_rele_control--;
  5543  0143  3001               	movlw	1
  5544  0144  02AD               	subwf	_time_rele_control,f
  5545  0145  3000               	movlw	0
  5546  0146  3BAE               	subwfb	_time_rele_control+1,f
  5547  0147                     i1l1945:
  5548                           
  5549                           ;main.c: 291:             if (time_rele_control == 0) {
  5550  0147  082D               	movf	_time_rele_control,w
  5551  0148  042E               	iorwf	_time_rele_control+1,w
  5552  0149  1D03               	btfss	3,2
  5553  014A  294C               	goto	u142_21
  5554  014B  294D               	goto	u142_20
  5555  014C                     u142_21:
  5556  014C  2950               	goto	i1l360
  5557  014D                     u142_20:
  5558  014D                     i1l1947:
  5559                           
  5560                           ;main.c: 292:                 ff.bits.RELE_CONTROL_ON = 0;
  5561  014D  1378               	bcf	_ff+1,6
  5562                           
  5563                           ;main.c: 293:                 ff.bits.CLOSED = 1;
  5564  014E  1678               	bsf	_ff+1,4
  5565                           
  5566                           ;main.c: 294:                 ff.bits.CLOSING = 0;
  5567  014F  11F8               	bcf	_ff+1,3
  5568  0150                     i1l360:
  5569  0150  0008               	return
  5570  0151                     __end_of_rele_tick:
  5571                           
  5572                           	psect	text39
  5573  0473                     __ptext39:	
  5574 ;; *************** function _minute_tick *****************
  5575 ;; Defined at:
  5576 ;;		line 383 in file "main.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;		None
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;		None
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  1    wreg      void 
  5583 ;; Registers used:
  5584 ;;		wreg, status,2, status,0
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMMON   BANK0   BANK1
  5590 ;;      Params:         0       0       0
  5591 ;;      Locals:         0       0       0
  5592 ;;      Temps:          1       0       0
  5593 ;;      Totals:         1       0       0
  5594 ;;Total ram usage:        1 bytes
  5595 ;; Hardware stack levels used: 1
  5596 ;; This function calls:
  5597 ;;		Nothing
  5598 ;; This function is called by:
  5599 ;;		_sec_work
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603  0473                     _minute_tick:	
  5604                           ;psect for function _minute_tick
  5605                           
  5606  0473                     i1l1949:	
  5607                           ;incstack = 0
  5608                           ; Regs used in _minute_tick: [wreg+status,2+status,0]
  5609                           
  5610                           
  5611                           ;main.c: 387:     if (time_melody > 0) {
  5612  0473  0020               	movlb	0	; select bank0
  5613  0474  083C               	movf	_time_melody,w
  5614  0475  1903               	btfsc	3,2
  5615  0476  2C78               	goto	u143_21
  5616  0477  2C79               	goto	u143_20
  5617  0478                     u143_21:
  5618  0478  2C85               	goto	i1l399
  5619  0479                     u143_20:
  5620  0479                     i1l1951:
  5621                           
  5622                           ;main.c: 388:         time_melody--;
  5623  0479  3001               	movlw	1
  5624  047A  02BC               	subwf	_time_melody,f
  5625                           
  5626                           ;main.c: 389:         if (time_melody == 0) {
  5627  047B  083C               	movf	_time_melody,w
  5628  047C  1D03               	btfss	3,2
  5629  047D  2C7F               	goto	u144_21
  5630  047E  2C80               	goto	u144_20
  5631  047F                     u144_21:
  5632  047F  2C85               	goto	i1l399
  5633  0480                     u144_20:
  5634  0480                     i1l1953:
  5635                           
  5636                           ;main.c: 390:             ff.bits.SIREN = 1;
  5637  0480  15F9               	bsf	_ff+2,3
  5638  0481                     i1l1955:
  5639                           
  5640                           ;main.c: 391:             time_melody = MELODY_REPEAT_DELAY;
  5641  0481  3003               	movlw	3
  5642  0482  00F0               	movwf	??_minute_tick
  5643  0483  0870               	movf	??_minute_tick,w
  5644  0484  00BC               	movwf	_time_melody
  5645  0485                     i1l399:
  5646  0485  0008               	return
  5647  0486                     __end_of_minute_tick:
  5648                           
  5649                           	psect	text40
  5650  0215                     __ptext40:	
  5651 ;; *************** function _ms_200_work *****************
  5652 ;; Defined at:
  5653 ;;		line 459 in file "main.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;		None
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;		None
  5658 ;; Return value:  Size  Location     Type
  5659 ;;                  1    wreg      void 
  5660 ;; Registers used:
  5661 ;;		wreg, status,2, status,0, pclath, cstack
  5662 ;; Tracked objects:
  5663 ;;		On entry : 0/0
  5664 ;;		On exit  : 0/0
  5665 ;;		Unchanged: 0/0
  5666 ;; Data sizes:     COMMON   BANK0   BANK1
  5667 ;;      Params:         0       0       0
  5668 ;;      Locals:         0       0       0
  5669 ;;      Temps:          0       0       0
  5670 ;;      Totals:         0       0       0
  5671 ;;Total ram usage:        0 bytes
  5672 ;; Hardware stack levels used: 1
  5673 ;; Hardware stack levels required when called: 3
  5674 ;; This function calls:
  5675 ;;		_beep_double
  5676 ;;		_beep_long
  5677 ;;		_beep_short
  5678 ;; This function is called by:
  5679 ;;		_ms_tick
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683  0215                     _ms_200_work:	
  5684                           ;psect for function _ms_200_work
  5685                           
  5686  0215                     i1l2081:	
  5687                           ;incstack = 0
  5688                           ; Regs used in _ms_200_work: [wreg+status,2+status,0+pclath+cstack]
  5689                           
  5690                           
  5691                           ;main.c: 461:     if (ff.bits.ALARM_ON) {
  5692  0215  1C77               	btfss	_ff,0
  5693  0216  2A18               	goto	u162_21
  5694  0217  2A19               	goto	u162_20
  5695  0218                     u162_21:
  5696  0218  2A2A               	goto	i1l425
  5697  0219                     u162_20:
  5698  0219                     i1l2083:
  5699                           
  5700                           ;main.c: 462:         if (ff.bits.SIREN) {
  5701  0219  1DF9               	btfss	_ff+2,3
  5702  021A  2A1C               	goto	u163_21
  5703  021B  2A1D               	goto	u163_20
  5704  021C                     u163_21:
  5705  021C  2A21               	goto	i1l2087
  5706  021D                     u163_20:
  5707  021D                     i1l2085:
  5708                           
  5709                           ;main.c: 463:             beep_double();
  5710  021D  3184  24E1  3182   	fcall	_beep_double
  5711                           
  5712                           ;main.c: 464:         } else {
  5713  0220  2A4B               	goto	i1l435
  5714  0221                     i1l2087:
  5715                           
  5716                           ;main.c: 465:             if (beep_short_count > 0) {
  5717  0221  087B               	movf	_beep_short_count,w
  5718  0222  1903               	btfsc	3,2
  5719  0223  2A25               	goto	u164_21
  5720  0224  2A26               	goto	u164_20
  5721  0225                     u164_21:
  5722  0225  2A4B               	goto	i1l435
  5723  0226                     u164_20:
  5724  0226                     i1l2089:
  5725                           
  5726                           ;main.c: 466:                 beep_short();
  5727  0226  3183  23FB  3182   	fcall	_beep_short
  5728  0229  2A4B               	goto	i1l435
  5729  022A                     i1l425:
  5730  022A  1CF7               	btfss	_ff,1
  5731  022B  2A2D               	goto	u165_21
  5732  022C  2A2E               	goto	u165_20
  5733  022D                     u165_21:
  5734  022D  2A4B               	goto	i1l435
  5735  022E                     u165_20:
  5736  022E                     i1l2091:
  5737                           
  5738                           ;main.c: 472:         if ((beep_short_count > 0) && (beep_long_count > 0)) {
  5739  022E  087B               	movf	_beep_short_count,w
  5740  022F  1903               	btfsc	3,2
  5741  0230  2A32               	goto	u166_21
  5742  0231  2A33               	goto	u166_20
  5743  0232                     u166_21:
  5744  0232  2A3A               	goto	i1l2097
  5745  0233                     u166_20:
  5746  0233                     i1l2093:
  5747  0233  0020               	movlb	0	; select bank0
  5748  0234  0839               	movf	_beep_long_count,w
  5749  0235  1903               	btfsc	3,2
  5750  0236  2A38               	goto	u167_21
  5751  0237  2A39               	goto	u167_20
  5752  0238                     u167_21:
  5753  0238  2A3A               	goto	i1l2097
  5754  0239                     u167_20:
  5755  0239  2A1D               	goto	i1l2085
  5756  023A                     i1l2097:
  5757                           
  5758                           ;main.c: 475:             if (beep_short_count > 0) {
  5759  023A  087B               	movf	_beep_short_count,w
  5760  023B  1903               	btfsc	3,2
  5761  023C  2A3E               	goto	u168_21
  5762  023D  2A3F               	goto	u168_20
  5763  023E                     u168_21:
  5764  023E  2A42               	goto	i1l2101
  5765  023F                     u168_20:
  5766  023F                     i1l2099:
  5767                           
  5768                           ;main.c: 476:                 beep_short();
  5769  023F  3183  23FB  3182   	fcall	_beep_short
  5770  0242                     i1l2101:
  5771                           
  5772                           ;main.c: 478:             if (beep_long_count > 0) {
  5773  0242  0020               	movlb	0	; select bank0
  5774  0243  0839               	movf	_beep_long_count,w
  5775  0244  1903               	btfsc	3,2
  5776  0245  2A47               	goto	u169_21
  5777  0246  2A48               	goto	u169_20
  5778  0247                     u169_21:
  5779  0247  2A4B               	goto	i1l435
  5780  0248                     u169_20:
  5781  0248                     i1l2103:
  5782                           
  5783                           ;main.c: 479:                 beep_long();
  5784  0248  3184  2410  3182   	fcall	_beep_long
  5785  024B                     i1l435:
  5786  024B  0008               	return
  5787  024C                     __end_of_ms_200_work:
  5788                           
  5789                           	psect	text41
  5790  04E1                     __ptext41:	
  5791 ;; *************** function _beep_double *****************
  5792 ;; Defined at:
  5793 ;;		line 152 in file "main.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;		None
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;		None
  5798 ;; Return value:  Size  Location     Type
  5799 ;;                  1    wreg      void 
  5800 ;; Registers used:
  5801 ;;		wreg, status,2, status,0, pclath, cstack
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMMON   BANK0   BANK1
  5807 ;;      Params:         0       0       0
  5808 ;;      Locals:         0       0       0
  5809 ;;      Temps:          0       0       0
  5810 ;;      Totals:         0       0       0
  5811 ;;Total ram usage:        0 bytes
  5812 ;; Hardware stack levels used: 1
  5813 ;; Hardware stack levels required when called: 2
  5814 ;; This function calls:
  5815 ;;		_beep_long
  5816 ;;		_beep_short
  5817 ;; This function is called by:
  5818 ;;		_ms_200_work
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822  04E1                     _beep_double:	
  5823                           ;psect for function _beep_double
  5824                           
  5825  04E1                     i1l1911:	
  5826                           ;incstack = 0
  5827                           ; Regs used in _beep_double: [wreg+status,2+status,0+pclath+cstack]
  5828                           
  5829                           
  5830                           ;main.c: 153:     if (ff.bits.LAST_BEEP_LONG) {
  5831  04E1  1FFA               	btfss	_ff+3,7
  5832  04E2  2CE4               	goto	u132_21
  5833  04E3  2CE5               	goto	u132_20
  5834  04E4                     u132_21:
  5835  04E4  2CE9               	goto	i1l1915
  5836  04E5                     u132_20:
  5837  04E5                     i1l1913:
  5838                           
  5839                           ;main.c: 154:         beep_short();
  5840  04E5  3183  23FB  3184   	fcall	_beep_short
  5841                           
  5842                           ;main.c: 155:     } else {
  5843  04E8  2CEC               	goto	i1l315
  5844  04E9                     i1l1915:
  5845                           
  5846                           ;main.c: 156:         beep_long();
  5847  04E9  3184  2410  3184   	fcall	_beep_long
  5848  04EC                     i1l315:
  5849  04EC  0008               	return
  5850  04ED                     __end_of_beep_double:
  5851                           
  5852                           	psect	text42
  5853  03FB                     __ptext42:	
  5854 ;; *************** function _beep_short *****************
  5855 ;; Defined at:
  5856 ;;		line 134 in file "main.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;		None
  5859 ;; Auto vars:     Size  Location     Type
  5860 ;;		None
  5861 ;; Return value:  Size  Location     Type
  5862 ;;                  1    wreg      void 
  5863 ;; Registers used:
  5864 ;;		wreg, status,2, status,0, pclath, cstack
  5865 ;; Tracked objects:
  5866 ;;		On entry : 0/0
  5867 ;;		On exit  : 0/0
  5868 ;;		Unchanged: 0/0
  5869 ;; Data sizes:     COMMON   BANK0   BANK1
  5870 ;;      Params:         0       0       0
  5871 ;;      Locals:         0       0       0
  5872 ;;      Temps:          0       0       0
  5873 ;;      Totals:         0       0       0
  5874 ;;Total ram usage:        0 bytes
  5875 ;; Hardware stack levels used: 1
  5876 ;; Hardware stack levels required when called: 1
  5877 ;; This function calls:
  5878 ;;		_start_tone
  5879 ;; This function is called by:
  5880 ;;		_beep_double
  5881 ;;		_ms_200_work
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885  03FB                     _beep_short:	
  5886                           ;psect for function _beep_short
  5887                           
  5888  03FB                     i1l1883:	
  5889                           ;incstack = 0
  5890                           ; Regs used in _beep_short: [wreg+status,2+status,0+pclath+cstack]
  5891                           
  5892                           
  5893                           ;main.c: 135:     if (!ff.bits.ZUM_BUSY) {
  5894  03FB  1A79               	btfsc	_ff+2,4
  5895  03FC  2BFE               	goto	u128_21
  5896  03FD  2BFF               	goto	u128_20
  5897  03FE                     u128_21:
  5898  03FE  2C0F               	goto	i1l305
  5899  03FF                     u128_20:
  5900  03FF                     i1l1885:
  5901                           
  5902                           ;main.c: 136:         if (beep_short_count > 0) beep_short_count--;
  5903  03FF  087B               	movf	_beep_short_count,w
  5904  0400  1903               	btfsc	3,2
  5905  0401  2C03               	goto	u129_21
  5906  0402  2C04               	goto	u129_20
  5907  0403                     u129_21:
  5908  0403  2C06               	goto	i1l1889
  5909  0404                     u129_20:
  5910  0404                     i1l1887:
  5911  0404  3001               	movlw	1
  5912  0405  02FB               	subwf	_beep_short_count,f
  5913  0406                     i1l1889:
  5914                           
  5915                           ;main.c: 137:         time_tone = SHORT_ZUMMER_DELAY;
  5916  0406  301E               	movlw	30
  5917  0407  0020               	movlb	0	; select bank0
  5918  0408  00A9               	movwf	_time_tone
  5919  0409  3000               	movlw	0
  5920  040A  00AA               	movwf	_time_tone+1
  5921  040B                     i1l1891:
  5922                           
  5923                           ;main.c: 138:         ff.bits.LAST_BEEP_LONG = 0;
  5924  040B  13FA               	bcf	_ff+3,7
  5925  040C                     i1l1893:
  5926                           
  5927                           ;main.c: 139:         start_tone();
  5928  040C  3185  2530  3183   	fcall	_start_tone
  5929  040F                     i1l305:
  5930  040F  0008               	return
  5931  0410                     __end_of_beep_short:
  5932                           
  5933                           	psect	text43
  5934  0410                     __ptext43:	
  5935 ;; *************** function _beep_long *****************
  5936 ;; Defined at:
  5937 ;;		line 143 in file "main.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;		None
  5940 ;; Auto vars:     Size  Location     Type
  5941 ;;		None
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  1    wreg      void 
  5944 ;; Registers used:
  5945 ;;		wreg, status,2, status,0, pclath, cstack
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMMON   BANK0   BANK1
  5951 ;;      Params:         0       0       0
  5952 ;;      Locals:         0       0       0
  5953 ;;      Temps:          0       0       0
  5954 ;;      Totals:         0       0       0
  5955 ;;Total ram usage:        0 bytes
  5956 ;; Hardware stack levels used: 1
  5957 ;; Hardware stack levels required when called: 1
  5958 ;; This function calls:
  5959 ;;		_start_tone
  5960 ;; This function is called by:
  5961 ;;		_beep_double
  5962 ;;		_ms_200_work
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966  0410                     _beep_long:	
  5967                           ;psect for function _beep_long
  5968                           
  5969  0410                     i1l1895:	
  5970                           ;incstack = 0
  5971                           ; Regs used in _beep_long: [wreg+status,2+status,0+pclath+cstack]
  5972                           
  5973                           
  5974                           ;main.c: 144:     if (!ff.bits.ZUM_BUSY) {
  5975  0410  1A79               	btfsc	_ff+2,4
  5976  0411  2C13               	goto	u130_21
  5977  0412  2C14               	goto	u130_20
  5978  0413                     u130_21:
  5979  0413  2C24               	goto	i1l310
  5980  0414                     u130_20:
  5981  0414                     i1l1897:
  5982                           
  5983                           ;main.c: 145:         if (beep_long_count > 0) beep_long_count--;
  5984  0414  0020               	movlb	0	; select bank0
  5985  0415  0839               	movf	_beep_long_count,w
  5986  0416  1903               	btfsc	3,2
  5987  0417  2C19               	goto	u131_21
  5988  0418  2C1A               	goto	u131_20
  5989  0419                     u131_21:
  5990  0419  2C1C               	goto	i1l1901
  5991  041A                     u131_20:
  5992  041A                     i1l1899:
  5993  041A  3001               	movlw	1
  5994  041B  02B9               	subwf	_beep_long_count,f
  5995  041C                     i1l1901:
  5996                           
  5997                           ;main.c: 146:         time_tone = LONG_ZUMMER_DELAY;
  5998  041C  3082               	movlw	130
  5999  041D  00A9               	movwf	_time_tone
  6000  041E  3000               	movlw	0
  6001  041F  00AA               	movwf	_time_tone+1
  6002  0420                     i1l1903:
  6003                           
  6004                           ;main.c: 147:         ff.bits.LAST_BEEP_LONG = 1;
  6005  0420  17FA               	bsf	_ff+3,7
  6006  0421                     i1l1905:
  6007                           
  6008                           ;main.c: 148:         start_tone();
  6009  0421  3185  2530  3184   	fcall	_start_tone
  6010  0424                     i1l310:
  6011  0424  0008               	return
  6012  0425                     __end_of_beep_long:
  6013                           
  6014                           	psect	text44
  6015  0530                     __ptext44:	
  6016 ;; *************** function _start_tone *****************
  6017 ;; Defined at:
  6018 ;;		line 122 in file "main.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;		None
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;		None
  6023 ;; Return value:  Size  Location     Type
  6024 ;;                  1    wreg      void 
  6025 ;; Registers used:
  6026 ;;		None
  6027 ;; Tracked objects:
  6028 ;;		On entry : 0/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMMON   BANK0   BANK1
  6032 ;;      Params:         0       0       0
  6033 ;;      Locals:         0       0       0
  6034 ;;      Temps:          0       0       0
  6035 ;;      Totals:         0       0       0
  6036 ;;Total ram usage:        0 bytes
  6037 ;; Hardware stack levels used: 1
  6038 ;; This function calls:
  6039 ;;		Nothing
  6040 ;; This function is called by:
  6041 ;;		_beep_short
  6042 ;;		_beep_long
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046  0530                     _start_tone:	
  6047                           ;psect for function _start_tone
  6048                           
  6049  0530                     i1l1881:	
  6050                           ;incstack = 0
  6051                           ; Regs used in _start_tone: []
  6052                           
  6053                           
  6054                           ;main.c: 123:     ff.bits.ZUM_BUSY = 1;
  6055  0530  1679               	bsf	_ff+2,4
  6056                           
  6057                           ;main.c: 124:     ff.bits.TONE_ON = 1;
  6058  0531  14F9               	bsf	_ff+2,1
  6059                           
  6060                           ;main.c: 125:     ff.bits.TONE_OFF = 0;
  6061  0532  1179               	bcf	_ff+2,2
  6062  0533                     i1l297:
  6063  0533  0008               	return
  6064  0534                     __end_of_start_tone:
  6065                           
  6066                           	psect	text45
  6067  04F8                     __ptext45:	
  6068 ;; *************** function _ms_100_work *****************
  6069 ;; Defined at:
  6070 ;;		line 486 in file "main.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;		None
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;		None
  6075 ;; Return value:  Size  Location     Type
  6076 ;;                  1    wreg      void 
  6077 ;; Registers used:
  6078 ;;		None
  6079 ;; Tracked objects:
  6080 ;;		On entry : 0/0
  6081 ;;		On exit  : 0/0
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMMON   BANK0   BANK1
  6084 ;;      Params:         0       0       0
  6085 ;;      Locals:         0       0       0
  6086 ;;      Temps:          0       0       0
  6087 ;;      Totals:         0       0       0
  6088 ;;Total ram usage:        0 bytes
  6089 ;; Hardware stack levels used: 1
  6090 ;; This function calls:
  6091 ;;		Nothing
  6092 ;; This function is called by:
  6093 ;;		_ms_tick
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097  04F8                     _ms_100_work:	
  6098                           ;psect for function _ms_100_work
  6099                           
  6100  04F8                     i1l2105:	
  6101                           ;incstack = 0
  6102                           ; Regs used in _ms_100_work: []
  6103                           
  6104                           
  6105                           ;main.c: 487:     if (ff.bits.NORMAL_WORK_MODE_ON || ff.bits.UNIVERSAL_VORK_MODE_ON) {
  6106  04F8  187A               	btfsc	_ff+3,0
  6107  04F9  2CFB               	goto	u170_21
  6108  04FA  2CFC               	goto	u170_20
  6109  04FB                     u170_21:
  6110  04FB  2D00               	goto	i1l440
  6111  04FC                     u170_20:
  6112  04FC                     i1l2107:
  6113  04FC  1CFA               	btfss	_ff+3,1
  6114  04FD  2CFF               	goto	u171_21
  6115  04FE  2D00               	goto	u171_20
  6116  04FF                     u171_21:
  6117  04FF  2D01               	goto	i1l441
  6118  0500                     u171_20:
  6119  0500                     i1l440:
  6120                           
  6121                           ;main.c: 488:         ff.bits.ALLOW_MEASURE = 1;
  6122  0500  1677               	bsf	_ff,4
  6123  0501                     i1l441:
  6124  0501  0008               	return
  6125  0502                     __end_of_ms_100_work:
  6126                           
  6127                           	psect	text46
  6128  04A9                     __ptext46:	
  6129 ;; *************** function _TMR0_ISR *****************
  6130 ;; Defined at:
  6131 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  6132 ;; Parameters:    Size  Location     Type
  6133 ;;		None
  6134 ;; Auto vars:     Size  Location     Type
  6135 ;;		None
  6136 ;; Return value:  Size  Location     Type
  6137 ;;                  1    wreg      void 
  6138 ;; Registers used:
  6139 ;;		wreg, status,2, status,0, pclath, cstack
  6140 ;; Tracked objects:
  6141 ;;		On entry : 0/0
  6142 ;;		On exit  : 0/0
  6143 ;;		Unchanged: 0/0
  6144 ;; Data sizes:     COMMON   BANK0   BANK1
  6145 ;;      Params:         0       0       0
  6146 ;;      Locals:         0       0       0
  6147 ;;      Temps:          0       0       0
  6148 ;;      Totals:         0       0       0
  6149 ;;Total ram usage:        0 bytes
  6150 ;; Hardware stack levels used: 1
  6151 ;; Hardware stack levels required when called: 1
  6152 ;; This function calls:
  6153 ;;		Absolute function
  6154 ;;		_TMR0_DefaultInterruptHandler
  6155 ;;		_zummer_switch
  6156 ;; This function is called by:
  6157 ;;		_INTERRUPT_InterruptManager
  6158 ;; This function uses a non-reentrant model
  6159 ;;
  6160                           
  6161  04A9                     _TMR0_ISR:	
  6162                           ;psect for function _TMR0_ISR
  6163                           
  6164  04A9                     i1l2215:	
  6165                           ;incstack = 0
  6166                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  6167                           
  6168                           
  6169                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  6170  04A9  110B               	bcf	11,2	;volatile
  6171  04AA                     i1l2217:
  6172                           
  6173                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  6174  04AA  0020               	movlb	0	; select bank0
  6175  04AB  0841               	movf	_timer0ReloadVal,w	;volatile
  6176  04AC  0095               	movwf	21	;volatile
  6177  04AD                     i1l2219:
  6178                           
  6179                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  6180  04AD  083D               	movf	_TMR0_InterruptHandler,w
  6181  04AE  043E               	iorwf	_TMR0_InterruptHandler+1,w
  6182  04AF  1903               	btfsc	3,2
  6183  04B0  2CB2               	goto	u193_21
  6184  04B1  2CB3               	goto	u193_20
  6185  04B2                     u193_21:
  6186  04B2  2CB8               	goto	i1l190
  6187  04B3                     u193_20:
  6188  04B3                     i1l2221:
  6189                           
  6190                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  6191  04B3  083E               	movf	_TMR0_InterruptHandler+1,w
  6192  04B4  008A               	movwf	10
  6193  04B5  083D               	movf	_TMR0_InterruptHandler,w
  6194  04B6  000A               	callw
  6195  04B7  3184               	pagesel	$
  6196  04B8                     i1l190:
  6197  04B8  0008               	return
  6198  04B9                     __end_of_TMR0_ISR:
  6199                           
  6200                           	psect	text47
  6201  0553                     __ptext47:	
  6202 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6203 ;; Defined at:
  6204 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;		None
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;		None
  6209 ;; Return value:  Size  Location     Type
  6210 ;;                  1    wreg      void 
  6211 ;; Registers used:
  6212 ;;		None
  6213 ;; Tracked objects:
  6214 ;;		On entry : 0/0
  6215 ;;		On exit  : 0/0
  6216 ;;		Unchanged: 0/0
  6217 ;; Data sizes:     COMMON   BANK0   BANK1
  6218 ;;      Params:         0       0       0
  6219 ;;      Locals:         0       0       0
  6220 ;;      Temps:          0       0       0
  6221 ;;      Totals:         0       0       0
  6222 ;;Total ram usage:        0 bytes
  6223 ;; Hardware stack levels used: 1
  6224 ;; This function calls:
  6225 ;;		Nothing
  6226 ;; This function is called by:
  6227 ;;		_TMR0_Initialize
  6228 ;;		_TMR0_ISR
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           
  6232  0553                     _TMR0_DefaultInterruptHandler:	
  6233                           ;psect for function _TMR0_DefaultInterruptHandler
  6234                           
  6235  0553                     i1l196:	
  6236                           ;incstack = 0
  6237                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  6238                           
  6239  0553  0008               	return
  6240  0554                     __end_of_TMR0_DefaultInterruptHandler:
  6241                           
  6242                           	psect	text48
  6243  04D4                     __ptext48:	
  6244 ;; *************** function _zummer_switch *****************
  6245 ;; Defined at:
  6246 ;;		line 550 in file "main.c"
  6247 ;; Parameters:    Size  Location     Type
  6248 ;;		None
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;		None
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  1    wreg      void 
  6253 ;; Registers used:
  6254 ;;		status,0
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMMON   BANK0   BANK1
  6260 ;;      Params:         0       0       0
  6261 ;;      Locals:         0       0       0
  6262 ;;      Temps:          0       0       0
  6263 ;;      Totals:         0       0       0
  6264 ;;Total ram usage:        0 bytes
  6265 ;; Hardware stack levels used: 1
  6266 ;; This function calls:
  6267 ;;		Nothing
  6268 ;; This function is called by:
  6269 ;;		_start_setup
  6270 ;;		_TMR0_ISR
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274  04D4                     _zummer_switch:	
  6275                           ;psect for function _zummer_switch
  6276                           
  6277  04D4                     i1l467:	
  6278                           ;incstack = 0
  6279                           ; Regs used in _zummer_switch: [status,0]
  6280                           ;main.c: 555:     do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  6281                           
  6282  04D4                     i1l2213:
  6283  04D4  1003               	clrc
  6284  04D5  0022               	movlb	2	; select bank2
  6285  04D6  1E8C               	btfss	12,5	;volatile
  6286  04D7  1403               	setc
  6287  04D8  1803               	btfsc	3,0
  6288  04D9  2CDB               	goto	u191_21
  6289  04DA  2CDE               	goto	u191_20
  6290  04DB                     u191_21:
  6291  04DB  0022               	movlb	2	; select bank2
  6292  04DC  168C               	bsf	12,5	;volatile
  6293  04DD  2CE0               	goto	u192_24
  6294  04DE                     u191_20:
  6295  04DE  0022               	movlb	2	; select bank2
  6296  04DF  128C               	bcf	12,5	;volatile
  6297  04E0                     u192_24:
  6298  04E0                     i1l469:
  6299  04E0  0008               	return
  6300  04E1                     __end_of_zummer_switch:
  6301  007E                     btemp	set	126	;btemp
  6302  007E                     int$flags	set	126
  6303  007E                     wtemp0	set	126
  6304                           
  6305                           	psect	idloc
  6306                           
  6307                           ;Config register IDLOC0 @ 0x8000
  6308                           ;	unspecified, using default values
  6309  8000                     	org	32768
  6310  8000  3FFF               	dw	16383
  6311                           
  6312                           ;Config register IDLOC1 @ 0x8001
  6313                           ;	unspecified, using default values
  6314  8001                     	org	32769
  6315  8001  3FFF               	dw	16383
  6316                           
  6317                           ;Config register IDLOC2 @ 0x8002
  6318                           ;	unspecified, using default values
  6319  8002                     	org	32770
  6320  8002  3FFF               	dw	16383
  6321                           
  6322                           ;Config register IDLOC3 @ 0x8003
  6323                           ;	unspecified, using default values
  6324  8003                     	org	32771
  6325  8003  3FFF               	dw	16383
  6326                           
  6327                           	psect	config
  6328                           
  6329                           ;Config register CONFIG1 @ 0x8007
  6330                           ;	Oscillator Selection
  6331                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6332                           ;	Watchdog Timer Enable
  6333                           ;	WDTE = ON, WDT enabled
  6334                           ;	Power-up Timer Enable
  6335                           ;	PWRTE = ON, PWRT enabled
  6336                           ;	MCLR Pin Function Select
  6337                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6338                           ;	Flash Program Memory Code Protection
  6339                           ;	CP = OFF, Program memory code protection is disabled
  6340                           ;	Data Memory Code Protection
  6341                           ;	CPD = OFF, Data memory code protection is disabled
  6342                           ;	Brown-out Reset Enable
  6343                           ;	BOREN = ON, Brown-out Reset enabled
  6344                           ;	Clock Out Enable
  6345                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6346                           ;	Internal/External Switchover
  6347                           ;	IESO = ON, Internal/External Switchover mode is enabled
  6348                           ;	Fail-Safe Clock Monitor Enable
  6349                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6350  8007                     	org	32775
  6351  8007  3FDC               	dw	16348
  6352                           
  6353                           ;Config register CONFIG2 @ 0x8008
  6354                           ;	Flash Memory Self-Write Protection
  6355                           ;	WRT = OFF, Write protection off
  6356                           ;	PLL Enable
  6357                           ;	PLLEN = OFF, 4x PLL disabled
  6358                           ;	Stack Overflow/Underflow Reset Enable
  6359                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6360                           ;	Brown-out Reset Voltage Selection
  6361                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6362                           ;	Low-Voltage Programming Enable
  6363                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  6364  8008                     	org	32776
  6365  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    24
    Data        0
    BSS         34
    Persistent  37
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80      2      36
    BANK1            16      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> zummer_switch(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> zummer_switch(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ms_tick(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ms_tick(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _switch_wm->_rele_off
    _eeprom_set->_EEPROM_WriteByte
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _get_wsp->_ADC_GetConversion
    _open->_rele_off
    _close->_rele_off

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _ms_tick->_sec_work
    _sec_work->_minute_tick
    _sec_work->_sec_30_work

Critical Paths under _main in BANK0

    _main->_get_wsp
    _start_setup->_eeprom_set

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1583
                              _close
                           _fun_work
                            _get_fun
                           _get_jump
                            _get_wsp
                      _hardware_work
                        _start_setup
                          _switch_wm
 ---------------------------------------------------------------------------------
 (1) _switch_wm                                            1     1      0       0
                                              3 COMMON     1     1      0
                           _rele_off
 ---------------------------------------------------------------------------------
 (1) _start_setup                                          0     0      0    1487
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                         _eeprom_set
 ---------------------------------------------------------------------------------
 (2) _eeprom_set                                           2     2      0     791
                                              0 BANK0      2     2      0
                    _EEPROM_ReadByte
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_WriteByte                                     5     4      1     726
                                              2 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (3) _EEPROM_ReadByte                                      3     3      0      31
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     348
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      1     1      0     174
                                              4 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hardware_work                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_wsp                                              4     4      0      96
                                              4 COMMON     2     2      0
                                              0 BANK0      2     2      0
                  _ADC_GetConversion
                        _clear_alarm
                        _start_alarm
 ---------------------------------------------------------------------------------
 (2) _start_alarm                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clear_alarm                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    2     2      0      31
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_jump                                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_fun                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _fun_work                                             1     1      0       0
                                              3 COMMON     1     1      0
                              _close
                               _open
 ---------------------------------------------------------------------------------
 (2) _open                                                 0     0      0       0
                            _go_open
                        _go_open_alt
                           _rele_off
 ---------------------------------------------------------------------------------
 (3) _go_open_alt                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _go_open                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _close                                                0     0      0       0
                           _go_close
                       _go_close_alt
                           _rele_off
 ---------------------------------------------------------------------------------
 (2) _rele_off                                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _go_close_alt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _go_close                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                            _ms_tick *
 ---------------------------------------------------------------------------------
 (7) _ms_tick                                              0     0      0       0
                        _ms_100_work
                        _ms_200_work
                           _sec_work
                          _stop_tone
 ---------------------------------------------------------------------------------
 (8) _stop_tone                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _sec_work                                             1     1      0       0
                                              1 COMMON     1     1      0
                        _minute_tick
                          _rele_tick
                        _sec_30_work
 ---------------------------------------------------------------------------------
 (9) _sec_30_work                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _rele_tick                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _minute_tick                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _ms_200_work                                          0     0      0       0
                        _beep_double
                          _beep_long
                         _beep_short
 ---------------------------------------------------------------------------------
 (9) _beep_double                                          0     0      0       0
                          _beep_long
                         _beep_short
 ---------------------------------------------------------------------------------
 (9) _beep_short                                           0     0      0       0
                         _start_tone
 ---------------------------------------------------------------------------------
 (9) _beep_long                                            0     0      0       0
                         _start_tone
 ---------------------------------------------------------------------------------
 (10) _start_tone                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ms_100_work                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _zummer_switch *
 ---------------------------------------------------------------------------------
 (7) _zummer_switch                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _close
     _go_close
     _go_close_alt
     _rele_off
   _fun_work
     _close
     _open
       _go_open
       _go_open_alt
       _rele_off
   _get_fun
   _get_jump
   _get_wsp
     _ADC_GetConversion
     _clear_alarm
     _start_alarm
   _hardware_work
   _start_setup
     _SYSTEM_Initialize
       _ADC_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR2_Initialize
         _TMR2_SetInterruptHandler
       _WDT_Initialize
     _TMR0_SetInterruptHandler
     _TMR2_SetInterruptHandler
     _TMR2_StartTimer
     _eeprom_set
       _EEPROM_ReadByte
       _EEPROM_WriteByte
   _switch_wm
     _rele_off

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _zummer_switch *
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _ms_tick *
       _ms_100_work
       _ms_200_work
         _beep_double
           _beep_long
             _start_tone
           _beep_short
             _start_tone
         _beep_long
         _beep_short
       _sec_work
         _minute_tick
         _rele_tick
         _sec_30_work
       _stop_tone

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              60      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      30       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      24       6       45.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            10      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      30       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue May 17 17:57:28 2022

        __end_of_TMR2_SetInterruptHandler 051D                        get_fun@fun_counter 0034  
                                      l23 045F                                        l26 0510  
                                      l61 0382                                        l29 052B  
                                      l46 0509                                        l64 0387  
                                      l90 03FA                                        _RD 0CA8  
                                      _WR 0CA9                             ?_go_close_alt 0070  
                                      _ff 0077                           _timer0ReloadVal 0041  
                                     l135 0497                                       l330 04A0  
                                     l138 0536                                       l331 04A8  
                                     l323 03B7                                       l340 0472  
                                     l157 051C                                       l319 0308  
                                     l343 03C0                                       l335 04D3  
                                     l351 0390                                       l328 04A4  
                                     l345 03C8                                       l353 0398  
                                     l513 0284                                       l193 0522  
                                     l177 03E5                                       l338 046B  
                                     l522 02B2                                       l339 046C  
                                     l507 01D5                                       l515 0286  
                                     l348 03CF                                       l356 039F  
                                     l516 0288                                       l460 0279  
                                     l381 02E3                                       l373 0527  
                                     l462 027E                                       l542 0353  
                                     l376 0539                                       l464 027F  
                                     l536 01FF                                       l384 031C  
                                     l457 0438                                       l537 0214  
                                     l570 043A                                       l475 00A8  
                                     l564 032E                                       l477 00AA  
                                     l573 044C                                       l389 032C  
                                     l494 019A                                       l567 034F  
                                     l488 00FE                                       _GIE 005F  
                                     u250 049C                               _start_alarm 0523  
                                     u251 049B                                       u260 04A0  
                                     u261 049F                                       u270 04A4  
                                     _PR2 001B                                       u271 04A3  
                                     u280 04CB                                       u281 04CA  
                                     u290 04CF                                       u291 04CE  
                                     u900 0262                                       u901 025F  
                                     u920 026A                                       u921 0267  
                                     u914 0264                                       u940 0272  
                                     u860 0252                                       u941 026F  
                                     u861 024F                                       u934 026C  
                                     u960 0278                                       u880 025A  
                                     u961 0277                                       u881 0257  
                                     u970 027D                                       u954 0274  
                                     u874 0254                                       u971 027C  
                                     u894 025C                               _start_setup 01D6  
                            ?_go_open_alt 0070                           _TMR2_Initialize 0486  
                                     wreg 0009                              ?_sec_30_work 0070  
                                    l2001 03D0                                      l2011 03DE  
                                    l2003 03D5                                      l2021 02F0  
                                    l2005 03D8                                      l2023 02F5  
                                    l2015 02E4                                      l2031 03AC  
                                    l2007 03DC                                      l2017 02E8  
                                    l2041 0469                                      l2033 03B1  
                                    l2025 03A0                                      l2009 03DD  
                                    l2019 02EC                                      l2043 046D  
                                    l2035 03B6                                      l2027 03A4  
                                    l2029 03A8                                      l2141 044D  
                                    l2039 0460                                      l2231 02B7  
                                    l2311 01A6                                      l2161 03C4  
                                    l2241 02C9                                      l2233 02BB  
                                    l2321 01B8                                      l2313 01A8  
                                    l2305 0196                                      l1371 049C  
                                    l2163 03CC                                      l2171 039C  
                                    l2251 02DC                                      l2235 02BF  
                                    l2243 02CC                                      l2331 01CE  
                                    l2323 01C0                                      l2315 01AD  
                                    l2307 019C                                      l2155 0534  
                                    l2157 03B8                                      l1373 04C7  
                                    l2165 0388                                      l2253 02E0  
                                    l2245 02D0                                      l2237 02C3  
                                    l2229 02B3                                      l2333 01D2  
                                    l2325 01C4                                      l2317 01B2  
                                    l2309 01A4                                      l2341 028D  
                                    l1613 024C                                      l2261 0313  
                                    l2159 03BC                                      l1375 04CB  
                                    l2167 038C                                      l2247 02D4  
                                    l2239 02C7                                      l2335 01D3  
                                    l2327 01C5                                      l2319 01B6  
                                    l2351 02A2                                      l2343 0292  
                                    l1615 0278                                      l2503 043A  
                                    l2271 0329                                      l2263 0316  
                                    l2255 0309                                      l1369 0498  
                                    l1377 04CF                                      l2169 0394  
                                    l2249 02D8                                      l2337 01D4  
                                    l2329 01C7                                      l2361 02B1  
                                    l2353 02A4                                      l2345 0296  
                                    l1617 027D                                      l2505 043F  
                                    l2521 033F                                      l2513 032E  
                                    l2601 01FA                                      l2265 0320  
                                    l2257 030D                                      l2355 02AB  
                                    l2347 029D                                      l2339 0280  
                                    l2507 0443                                      l2531 0347  
                                    l2523 0341                                      l2515 0333  
                                    l2611 0206                                      l2603 01FB  
                                    l2267 0324                                      l2259 0311  
                                    l2357 02AF                                      l2349 02A1  
                                    l2541 0380                                      l2509 044A  
                                    l2533 034D                                      l2525 0342  
                                    l2517 0337                                      l2621 020F  
                                    l2613 0208                                      l2605 01FC  
                                    l2269 0326                                      l2359 02B0  
                                    l2543 0386                                      l2535 0371  
                                    l2527 0344                                      l2519 0338  
                                    l2551 0425                                      l2623 0211  
                                    l2615 020A                                      l2607 01FD  
                                    l2537 037B                                      l2561 00B4  
                                    l2529 0346                                      l2553 042D  
                                    l2625 0213                                      l2617 020C  
                                    l2609 01FE                                      l2641 0350  
                                    l2539 037C                                      l2547 0523  
                                    l2571 00D2                                      l2563 00BF  
                                    l1907 0517                                      l2555 0432  
                                    l2619 020E                                      l2643 0354  
                                    l2549 0537                                      l2581 00EE  
                                    l2573 00DB                                      l2565 00C1  
                                    l2557 00A4                                      l1909 051D  
                                    l2645 0357                                      l2583 00F5  
                                    l2575 00DF                                      l2567 00C3  
                                    l2559 00AC                                      l2591 01D9  
                                    l2647 035B                                      l2585 00F8  
                                    l2577 00E6                                      l2569 00CD  
                                    l2593 01DA                                      l2649 036B  
                                    l2587 00FD                                      l2579 00E9  
                                    l1971 03F1                                      l1963 03E6  
                                    l2595 01EC                                      l1973 03F6  
                                    l1965 03E9                                      l1981 0528  
                                    l2597 01EF                                      l2589 01D6  
                                    l1975 050A                                      l1967 03EC  
                                    l1991 048D                                      l1983 0486  
                                    l2599 01F8                                      l1977 050D  
                                    l1969 03EE                                      l1993 0494  
                                    l1985 0489                                      l1995 0502  
                                    l1979 050E                                      l1987 048A  
                                    l1997 0505                                      l1989 048B  
                                    l1999 0506                                      u2000 02D0  
                                    u2001 02CF                                      u2010 02D4  
                                    u2011 02D3                                      u2020 02D8  
                                    u2021 02D7                                      u2030 02DC  
                                    u2031 02DB                                      u2200 02AB  
                                    u2040 030D                                      u2201 02AA  
                                    u2041 030C                                      u2130 019A  
                                    u2050 0311                                      u2131 0199  
                                    u2051 0310                                      u1500 03A8  
                                    u2140 01AD                                      u2060 0320  
                                    u1501 03A7                                      u2141 01AC  
                                    u2061 031F                                      _LATA 010C  
                                    u1510 03AC                                      u2150 01C0  
                                    u2070 0324                                      u1511 03AB  
                                    u2151 01BF                                      u2071 0323  
                                    _LATC 010E                                      u1520 0469  
                                    u2160 01CE                                      u2400 0333  
                                    u1521 0468                                      u2161 01CD  
                                    u2401 0332                                      u2170 0284  
                                    u2410 034C                                      u2171 0283  
                                    u2411 034A                                      u1460 02E8  
                                    u2180 028D                                      u2500 035B  
                                    u1461 02E7                                      u2181 028C  
                                    u2501 035A                                      u1470 02EC  
                                    u2190 029D                                      u2430 0386  
                                    u1471 02EB                                      u2191 029C  
                                    u2431 0385                                      u1480 02F0  
                                    u1800 03CC                                      u2424 034D  
                                    u2440 0432                                      u1481 02EF  
                                    u1801 03CB                                      u2441 0431  
                                    u1490 03A4                                      u1810 038C  
                                    u2450 00A8                                      u1491 03A3  
                                    u1811 038B                                      u2451 00A7  
                                    u1820 0394                                      u2460 00CD  
                                    u2380 043F                                      u1821 0393  
                                    u2461 00CC                                      u2381 043E  
                                    u1830 039C                                      u2470 00DB  
                                    u2390 0443                                      u1831 039B  
                                    u2471 00DA                                      u2391 0442  
                                    u2480 00E6                                      u2481 00E5  
                                    u2490 00F5                                      u2491 00F4  
                                    u1780 03BC                                      u1781 03BB  
                                    u1790 03C4                                      u1950 02B7  
                                    u1791 03C3                                      u1951 02B6  
                                    u1960 02BB                                      u1961 02BA  
                                    u2577 00AF                                      u1970 02BF  
                                    u1971 02BE                                      u2587 037D  
                                    u1980 02C3                                      u1981 02C2  
                                    u2597 019F                                      u1990 02C7  
                                    u1991 02C6                                      _TMR0 0015  
                                    _TMR2 001A                                      _WREN 0CAA  
                                    _WPUA 020C                                      _WPUC 020E  
                                    _main 0350                                      _open 0388  
                                    fsr0h 0005                                      indf0 0000  
                                    fsr0l 0004                      EEPROM_WriteByte@addr 0075  
                                    btemp 007E                                      start 0026  
                          ??_go_close_alt 0072                   __end_of_TMR0_Initialize 03E6  
          ??_TMR0_DefaultInterruptHandler 0070             __end_of_OSCILLATOR_Initialize 0511  
                                   ?_main 0070                                     _EEADR 0191  
                                   ?_open 0070                                     _T2CON 001C  
                        __end_of_RELE_GAP 054B                                     i1l113 0024  
                                   i1l114 0024                                     i1l300 052F  
                                   i1l108 0012                                     i1l310 0424  
                                   i1l160 0552                                     i1l305 040F  
                                   i1l410 0048                                     i1l154 04C6  
                                   i1l315 04EC                                     i1l404 04F7  
                                   i1l190 04B8                                     i1l422 00A3  
                                   i1l414 007A                                     i1l440 0500  
                                   i1l360 0150                                     i1l441 0501  
                                   i1l425 022A                                     i1l361 0120  
                                   i1l409 0049                                     i1l435 024B  
                                   i1l196 0553                                     i1l453 0195  
                                   i1l366 0137                                     i1l446 0151  
                                   i1l359 0108                                     i1l297 0533  
                                   i1l467 04D4                                     i1l469 04E0  
                                   i1l399 0485                                     _TRISA 008C  
                                   _TRISC 008E                           ??_hardware_work 0072  
               ?_TMR0_SetInterruptHandler 0072                          __end_of_TMR0_ISR 04B9  
                         __end_of_get_fun 01D6                          __end_of_TMR2_ISR 04C7  
                         __end_of_get_wsp 00FF                           __end_of_go_open 03B8  
                                   _close 03B8                            _WDT_Initialize 0528  
                         __end_of_ms_tick 0196                        _SHORT_ZUMMER_DELAY 0551  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           _TMR2_StartTimer 0534  
                         __initialization 0027                            eeprom_set@vers 0043  
                            __end_of_main 0370                              __end_of_open 03A0  
                 __end_of_TMR2_Initialize 0498               ?_INTERRUPT_InterruptManager 0070  
                _TMR2_SetInterruptHandler 0517                                    ??_main 0077  
                                  ??_open 0073                              ?_minute_tick 0070  
                  __end_of_WDT_Initialize 052C                                    ?_close 0070  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _ADRESH 009C                                    _ADRESL 009B  
                                  _EEDATA 0193                                    _EECON2 0196  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  _ANSELC 018E                                    _BORCON 0116  
                                  i1l2101 0242                                    i1l2013 052C  
                                  i1l2103 0248                                    i1l2105 04F8  
                                  i1l2201 018B                                    i1l2107 04FC  
                                  i1l2051 0045                                    i1l2203 018E  
                                  i1l2213 04D4                                    i1l2221 04B3  
                                  i1l2061 0062                                    i1l2053 004D  
                                  i1l2045 0037                                    i1l2205 0191  
                                  i1l2215 04A9                                    i1l2071 0089  
                                  i1l2063 0069                                    i1l2055 0051  
                                  i1l2047 003C                                    i1l2223 04B9  
                                  i1l2217 04AA                                    i1l2081 0215  
                                  i1l2073 0096                                    i1l2065 006C  
                                  i1l2057 005B                                    i1l2049 0040  
                                  i1l2225 04BB                                    i1l2219 04AD  
                                  i1l2091 022E                                    i1l2083 0219  
                                  i1l2067 007E                                    i1l2075 0097  
                                  i1l2059 005E                                    i1l2227 04C1  
                                  i1l2093 0233                                    i1l2085 021D  
                                  i1l2077 009E                                    i1l2069 0083  
                                  i1l2181 0164                                    i1l2421 0016  
                                  i1l2087 0221                                    i1l2079 00A1  
                                  i1l2191 0173                                    i1l2183 0168  
                                  i1l2423 001B                                    i1l2415 0006  
                                  i1l2097 023A                                    i1l2089 0226  
                                  i1l2193 017B                                    i1l2185 016E  
                                  i1l2177 0151                                    i1l2425 0020  
                                  i1l2417 000A                                    i1l2099 023F  
                                  i1l2195 017E                                    i1l2187 0171  
                                  i1l2179 015D                                    i1l2419 000E  
                                  i1l1901 041C                                    i1l2189 0172  
                                  i1l1903 0420                                    i1l1911 04E1  
                                  i1l2199 0181                                    u130_20 0414  
                                  i1l1905 0421                                    u130_21 0413  
                                  i1l1913 04E5                                    i1l1915 04E9  
                                  i1l1931 0124                                    i1l1923 010C  
                                  i1l1941 013D                                    i1l1933 012B  
                                  i1l1925 0113                                    i1l1917 00FF  
                                  i1l1951 0479                                    i1l1943 0143  
                                  i1l1935 0131                                    i1l1927 0117  
                                  i1l1919 0103                                    u131_20 041A  
                                  i1l1881 0530                                    u131_21 0419  
                                  i1l1953 0480                                    i1l1945 0147  
                                  i1l1937 0132                                    i1l1929 011D  
                                  i1l1961 04F3                                    i1l1891 040B  
                                  i1l1883 03FB                                    i1l1955 0481  
                                  i1l1947 014D                                    i1l1939 0139  
                                  i1l1893 040C                                    i1l1885 03FF  
                                  i1l1949 0473                                    i1l1957 04ED  
                                  i1l1895 0410                                    i1l1887 0404  
                                  i1l1959 04F1                                    u132_20 04E5  
                                  u140_20 0131                                    i1l1897 0414  
                                  i1l1889 0406                                    u132_21 04E4  
                                  u140_21 0130                                    i1l1899 041A  
                                  u141_20 0143                                    u133_20 0103  
                                  u221_20 000A                                    u141_21 0142  
                                  u133_21 0102                                    u221_21 0009  
                                  u142_20 014D                                    u134_20 0107  
                                  u222_20 000E                                    u142_21 014C  
                                  u134_21 0106                                    u222_21 000D  
                                  u143_20 0479                                    u135_20 010C  
                                  u223_20 0016                                    u143_21 0478  
                                  u135_21 010B                                    u223_21 0015  
                                  u128_20 03FF                                    u144_20 0480  
                                  u136_20 0113                                    u160_20 0089  
                                  u224_20 001B                                    u128_21 03FE  
                                  u144_21 047F                                    u136_21 0112  
                                  u160_21 0088                                    u224_21 001A  
                                  u129_20 0404                                    u137_20 011D  
                                  u145_20 04F1                                    u161_20 009E  
                                  u153_20 0040                                    u225_20 0020  
                                  u129_21 0403                                    u137_21 011C  
                                  u145_21 04F0                                    u161_21 009D  
                                  u153_21 003F                                    u225_21 001F  
                                  u170_20 04FC                                    u162_20 0219  
                                  u138_20 0124                                    u154_20 0045  
                                  u170_21 04FB                                    u162_21 0218  
                                  u138_21 0123                                    u154_21 0044  
                                  u171_20 0500                                    u163_20 021D  
                                  u139_20 012B                                    u155_20 004D  
                                  u171_21 04FF                                    u163_21 021C  
                                  u139_21 012A                                    u155_21 004C  
                                  u164_20 0226                                    u156_20 0051  
                                  u164_21 0225                                    u156_21 0050  
                                  u165_20 022E                                    u157_20 0062  
                                  u165_21 022D                                    u157_21 0061  
                                  u166_20 0233                                    u158_20 0069  
                                  u166_21 0232                                    u158_21 0068  
                                  u191_20 04DE                                    u167_20 0239  
                                  u159_20 007E                                    u191_21 04DB  
                                  u167_21 0238                                    u159_21 007D  
                                  u168_20 023F                                    u184_20 015B  
                                  u168_21 023E                                    u184_21 0158  
                                  u192_24 04E0                                    u193_20 04B3  
                                  u169_20 0248                                    u193_21 04B2  
                                  u169_21 0247                                    u185_24 015D  
                                  u186_20 0164                                    u194_20 04C1  
                                  u186_21 0163                                    u194_21 04C0  
                                  u187_20 016E                                    u187_21 016D  
                                  u188_20 017B                                    u188_21 017A  
                                  u189_20 018B                                    u189_21 018A  
                        _GOOD_WSP_VOLTAGE 053A                                    _OSCCON 0099  
                                  _WDTCON 0097                          __end_of_get_jump 02B3  
                        __end_of_go_close 0309               __end_of_MELODY_REPEAT_DELAY 0547  
                        ?_TMR0_Initialize 0070                         ??_EEPROM_ReadByte 0072  
                        __end_of_fun_work 02E4                  __end_of_EEPROM_WriteByte 0350  
                        __end_of_sec_work 00A4                                 ??_get_fun 0072  
                        __end_of_rele_off 0473                                 ??_get_wsp 0074  
                               ??_go_open 0072             __end_of_RELE_POWER_WORK_DELAY 054C  
                               ??_ms_tick 0072                           ?_WDT_Initialize 0070  
                  EEPROM_WriteByte@status 0076                  ADC_GetConversion@channel 0073  
                   _HIGH_WATER_RESISTANSE 0542                   __end_of_TMR2_StartTimer 0537  
TMR0_SetInterruptHandler@InterruptHandler 0072  TMR2_SetInterruptHandler@InterruptHandler 0072  
                    __end_of_go_close_alt 04A9                         _SYSTEM_Initialize 044D  
                 __end_of__initialization 0034                        _AUTOROTATION_DELAY 053E  
                      ?_SYSTEM_Initialize 0070                             _UP_RESISTANSE 0540  
                          __pcstackCOMMON 0070                       ??_SYSTEM_Initialize 0075  
                   __end_of_zummer_switch 04E1                                 ?_TMR0_ISR 0070  
                               ?_TMR2_ISR 0070                             __end_of_close 03D0  
                        ?_TMR2_Initialize 0070                              ?_start_alarm 0070  
             get_wsp@bad_measures_counter 0035                            _OPTION_REGbits 0095  
                            ?_start_setup 0070                                   ??_close 0073  
                              _beep_short 03FB                 __end_of_SYSTEM_Initialize 0460  
                              __pbssBANK0 0020                                __pmaintext 0350  
        __end_of_TMR0_SetInterruptHandler 0523                                ??_TMR0_ISR 0070  
                              ??_TMR2_ISR 0072                           _time_rele_power 002F  
                              __pintentry 0004                         _time_rele_control 002D  
                              _eeprom_set 0425                                   _OSCTUNE 0098  
                       __end_of_beep_long 0425                          ?_TMR2_StartTimer 0070  
                               ?_get_jump 0070                                 ?_go_close 0070  
                               ?_fun_work 0070                                 ?_sec_work 0070  
                               ?_rele_off 0070                      _ADC_InterruptHandler 0031  
              ??_TMR2_SetInterruptHandler 0074                             ??_beep_double 0070  
   __end_of_RELE_POWER_AUTOROTATION_DELAY 0548             _RELE_POWER_AUTOROTATION_DELAY 0547  
                __end_of_GOOD_WSP_VOLTAGE 053C                                   __ptext1 0309  
                                 __ptext2 01D6                                   __ptext3 0425  
                                 __ptext4 032D                                   __ptext5 0439  
                                 __ptext6 0534                                   __ptext7 044D  
                                 __ptext8 0528                                   __ptext9 0486  
                                 _get_fun 0196                                   _get_wsp 00A4  
                                 _go_open 03A0                     _OSCILLATOR_Initialize 050A  
                               _T2CONbits 001C                  ??_PIN_MANAGER_Initialize 0072  
                                 _ms_tick 0151                     __end_of_hardware_work 0280  
                             ?_beep_short 0070                                   clrloop0 0512  
                              ??_get_jump 0072                                ??_go_close 0072  
                       __end_of_rele_tick 0151                      end_of_initialization 0034  
                              ??_fun_work 0073                           _EEPROM_ReadByte 0439  
                              ??_sec_work 0071                                ??_rele_off 0072  
                           ??_clear_alarm 0072                             ??_ms_100_work 0070  
                           ??_ms_200_work 0070                            _FUN_MEAS_COUNT 054D  
                            _go_close_alt 0498                          ??_WDT_Initialize 0072  
            __end_of_LOW_WATER_RESISTANSE 0546                  _TMR0_SetInterruptHandler 051D  
                               _PORTAbits 000C                                 _PORTCbits 000E  
                       ?_EEPROM_WriteByte 0072                         __end_of_stop_tone 0530  
                     __end_of_beep_double 04ED                         __end_of_switch_wm 032D  
                             ?_eeprom_set 0070                        ??_EEPROM_WriteByte 0073  
                               _TRISAbits 008C                                 _TRISCbits 008E  
                      EEPROM_WriteByte@dt 0072                                _start_tone 0530  
                              get_wsp@res 0042                    __end_of_FUN_MEAS_COUNT 054E  
    __end_of_TMR2_DefaultInterruptHandler 0553              _TMR2_DefaultInterruptHandler 0552  
                     __end_of_clear_alarm 053A                            _ADC_Initialize 0502  
                  ?_OSCILLATOR_Initialize 0070                       __end_of_ms_100_work 0502  
                     __end_of_ms_200_work 024C                             ??_go_open_alt 0072  
                     start_initialization 0027                     _RELE_POWER_WORK_DELAY 054B  
                           ??_sec_30_work 0070                   __end_of_EEPROM_ReadByte 044D  
                        _beep_short_count 007B                               _beep_double 04E1  
                  __end_of_ADC_Initialize 050A             ?_TMR2_DefaultInterruptHandler 0070  
                       _AUTOROTATION_DAYS 054F                               __pbssCOMMON 0077  
                               ___latbits 0000                             __pcstackBANK0 0042  
                     __end_of_go_open_alt 04D4                              sec_work@iled 0036  
                             ?_start_tone 0070                                 _beep_long 0410  
                     __end_of_sec_30_work 04F8                      _LOW_WATER_RESISTANSE 0544  
                   _TMR0_InterruptHandler 003D                                 __pnvBANK0 003D  
                             _clear_alarm 0537                    _PIN_MANAGER_Initialize 03E6  
                             _ms_100_work 04F8                               _ms_200_work 0215  
                         ?_ADC_Initialize 0070              ??_INTERRUPT_InterruptManager 0072  
               __end_of_AUTOROTATION_DAYS 0550                                  ?_get_fun 0070  
                                ?_get_wsp 0070                                  ?_go_open 0070  
                           ??_minute_tick 0070                                  ?_ms_tick 0070  
                       sec_work@sec_count 0037                              ??_beep_short 0070  
                          _WSP_MEAS_COUNT 054E                          ?_EEPROM_ReadByte 0070  
                       ??_TMR0_Initialize 0074                                ?_beep_long 0070  
                                _LATAbits 010C                                  _LATCbits 010E  
                               _rele_tick 00FF                                 clear_ram0 0511  
                                _PIE1bits 0091                                  _RELE_GAP 054A  
              ??_TMR0_SetInterruptHandler 0074                                  _PIR1bits 0011  
                               _time_meas 003A                          _time_moving_wait 003B  
                                _TMR0_ISR 04A9                                 _time_tone 0029  
                                _TMR2_ISR 04B9                             _zummer_switch 04D4  
                      __end_of_beep_short 0410                           _beep_long_count 0039  
                              _ADCON0bits 009D                              ??_eeprom_set 0042  
          ??_TMR2_DefaultInterruptHandler 0070                               _go_open_alt 04C7  
               ?_TMR2_SetInterruptHandler 0072                    __end_of_WSP_MEAS_COUNT 054F  
                               _stop_tone 052C                                 _switch_wm 0309  
                             _sec_30_work 04ED                           ms_tick@ms_count 0023  
                     __end_of_minute_tick 0486                         _beep_double_count 0038  
                       ??_TMR2_Initialize 0074                                ?_rele_tick 0070  
                   __end_of_UP_RESISTANSE 0542                       _MELODY_REPEAT_DELAY 0546  
                       _ADC_GetConversion 0370                           _JUMP_MEAS_COUNT 054C  
                      __end_of_eeprom_set 0439                            ?_zummer_switch 0070  
                 ??_OSCILLATOR_Initialize 0072                        ?_ADC_GetConversion 0070  
                           ??_start_alarm 0072                __end_of_SHORT_ZUMMER_DELAY 0552  
                              _ANSELAbits 018C                                _ANSELCbits 018E  
                     ??_ADC_GetConversion 0072                             ??_start_setup 0077  
                              ?_stop_tone 0070                             _time_rele_gap 002B  
                              ?_switch_wm 0070                                  __ptext10 0517  
                                __ptext11 03D0                                  __ptext20 0370  
                                __ptext12 051D                                  __ptext21 0280  
                                __ptext13 03E6                                  __ptext30 02E4  
                                __ptext22 0196                                  __ptext14 050A  
                                __ptext23 02B3                                  __ptext15 0502  
                                __ptext40 0215                                  __ptext32 04B9  
                                __ptext24 0388                                  __ptext16 024C  
                                __ptext41 04E1                                  __ptext33 0552  
                                __ptext25 04C7                                  __ptext17 00A4  
                                __ptext42 03FB                                  __ptext34 0151  
                                __ptext26 03A0                                  __ptext18 0523  
                                __ptext43 0410                                  __ptext35 052C  
                                __ptext27 03B8                                  __ptext19 0537  
                                __ptext44 0530                                  __ptext36 0037  
                                __ptext28 0460                                  __ptext45 04F8  
                                __ptext37 04ED                                  __ptext29 0498  
                                __ptext46 04A9                                  __ptext38 00FF  
                                __ptext47 0553                                  __ptext39 0473  
                                __ptext48 04D4                                  _get_jump 0280  
                                _go_close 02E4                           _BAD_WSP_VOLTAGE 053C  
                           _time_rotation 0020                               ??_beep_long 0070  
                                _fun_work 02B3      __end_of_TMR0_DefaultInterruptHandler 0554  
            _TMR0_DefaultInterruptHandler 0553                                  _sec_work 0037  
               __end_of_ADC_GetConversion 0388                                  _rele_off 0460  
                       _MOVING_WAIT_DELAY 0548                              ?_beep_double 0070  
                                int$flags 007E                         ??_TMR2_StartTimer 0072  
      __end_of_INTERRUPT_InterruptManager 0026                _INTERRUPT_InterruptManager 0004  
                    get_jump@jump_counter 0033                               _minute_tick 0473  
                              _INTCONbits 000B             __end_of_HIGH_WATER_RESISTANSE 0544  
                          __pstringtext10 0544                            __pstringtext11 054A  
                          __pstringtext12 054B                            __pstringtext13 054C  
                          __pstringtext14 054D                            __pstringtext15 054E  
                          __pstringtext16 054F                            __pstringtext17 0550  
                          __pstringtext18 0551                             _hardware_work 024C  
                     __end_of_start_alarm 0528                       __end_of_start_setup 0215  
                                intlevel1 0000                              ??_start_tone 0070  
                 __end_of_JUMP_MEAS_COUNT 054D                   ?_PIN_MANAGER_Initialize 0070  
                             ??_rele_tick 0070                 __end_of_MOVING_WAIT_DELAY 0549  
                       _LONG_ZUMMER_DELAY 0550                       EEPROM_ReadByte@addr 0074  
                        ??_ADC_Initialize 0072                              ?_clear_alarm 0070  
           ?_TMR0_DefaultInterruptHandler 0070                           ??_zummer_switch 0070  
                            ?_ms_100_work 0070                              ?_ms_200_work 0070  
                           __pstringtext1 053A                             __pstringtext2 053C  
                           __pstringtext3 053E                             __pstringtext4 0540  
                           __pstringtext5 0546                             __pstringtext6 0547  
                           __pstringtext7 0548                             __pstringtext8 0549  
                           __pstringtext9 0542                        __end_of_start_tone 0534  
                              _OPTION_REG 0095                         _time_zummer_short 0027  
     __end_of_FRIMWARE_VERSION_EEPROM_ADR 054A               _FRIMWARE_VERSION_EEPROM_ADR 0549  
                             _time_melody 003C                           _TMR0_Initialize 03D0  
              __end_of_AUTOROTATION_DELAY 0540                   __end_of_BAD_WSP_VOLTAGE 053E  
                             ??_stop_tone 0070                               ??_switch_wm 0073  
                          ?_hardware_work 0070                          _time_zummer_long 0025  
          __end_of_PIN_MANAGER_Initialize 03FB                 __end_of_LONG_ZUMMER_DELAY 0551  
                        _EEPROM_WriteByte 032D                     _TMR2_InterruptHandler 003F  
