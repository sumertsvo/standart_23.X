

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu May 12 16:59:24 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1823
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    61                           	dabs	1,0x7E,2
    62  0000                     
    63                           ; Version 2.40
    64                           ; Generated 17/11/2021 GMT
    65                           ; 
    66                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F1823 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  0007                     	;# 
   106  0008                     	;# 
   107  0009                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000E                     	;# 
   112  0011                     	;# 
   113  0012                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001C                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  008C                     	;# 
   126  008E                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0095                     	;# 
   130  0096                     	;# 
   131  0097                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  010C                     	;# 
   141  010E                     	;# 
   142  0111                     	;# 
   143  0112                     	;# 
   144  0113                     	;# 
   145  0114                     	;# 
   146  0115                     	;# 
   147  0116                     	;# 
   148  0117                     	;# 
   149  0118                     	;# 
   150  0119                     	;# 
   151  011A                     	;# 
   152  011B                     	;# 
   153  011D                     	;# 
   154  011D                     	;# 
   155  018C                     	;# 
   156  018E                     	;# 
   157  0191                     	;# 
   158  0191                     	;# 
   159  0192                     	;# 
   160  0193                     	;# 
   161  0193                     	;# 
   162  0193                     	;# 
   163  0194                     	;# 
   164  0195                     	;# 
   165  0196                     	;# 
   166  0199                     	;# 
   167  019A                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019D                     	;# 
   175  019E                     	;# 
   176  019F                     	;# 
   177  020C                     	;# 
   178  020E                     	;# 
   179  0211                     	;# 
   180  0211                     	;# 
   181  0212                     	;# 
   182  0212                     	;# 
   183  0213                     	;# 
   184  0213                     	;# 
   185  0214                     	;# 
   186  0214                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0215                     	;# 
   190  0216                     	;# 
   191  0216                     	;# 
   192  0217                     	;# 
   193  0217                     	;# 
   194  0291                     	;# 
   195  0291                     	;# 
   196  0292                     	;# 
   197  0293                     	;# 
   198  0294                     	;# 
   199  0295                     	;# 
   200  0295                     	;# 
   201  0296                     	;# 
   202  0391                     	;# 
   203  0392                     	;# 
   204  0393                     	;# 
   205  039A                     	;# 
   206  039C                     	;# 
   207  039D                     	;# 
   208  039E                     	;# 
   209  039F                     	;# 
   210  0FE4                     	;# 
   211  0FE5                     	;# 
   212  0FE6                     	;# 
   213  0FE7                     	;# 
   214  0FE8                     	;# 
   215  0FE9                     	;# 
   216  0FEA                     	;# 
   217  0FEB                     	;# 
   218  0FED                     	;# 
   219  0FEE                     	;# 
   220  0FEF                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000E                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  008C                     	;# 
   249  008E                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0095                     	;# 
   253  0096                     	;# 
   254  0097                     	;# 
   255  0098                     	;# 
   256  0099                     	;# 
   257  009A                     	;# 
   258  009B                     	;# 
   259  009B                     	;# 
   260  009C                     	;# 
   261  009D                     	;# 
   262  009E                     	;# 
   263  010C                     	;# 
   264  010E                     	;# 
   265  0111                     	;# 
   266  0112                     	;# 
   267  0113                     	;# 
   268  0114                     	;# 
   269  0115                     	;# 
   270  0116                     	;# 
   271  0117                     	;# 
   272  0118                     	;# 
   273  0119                     	;# 
   274  011A                     	;# 
   275  011B                     	;# 
   276  011D                     	;# 
   277  011D                     	;# 
   278  018C                     	;# 
   279  018E                     	;# 
   280  0191                     	;# 
   281  0191                     	;# 
   282  0192                     	;# 
   283  0193                     	;# 
   284  0193                     	;# 
   285  0193                     	;# 
   286  0194                     	;# 
   287  0195                     	;# 
   288  0196                     	;# 
   289  0199                     	;# 
   290  019A                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019B                     	;# 
   294  019B                     	;# 
   295  019C                     	;# 
   296  019C                     	;# 
   297  019D                     	;# 
   298  019E                     	;# 
   299  019F                     	;# 
   300  020C                     	;# 
   301  020E                     	;# 
   302  0211                     	;# 
   303  0211                     	;# 
   304  0212                     	;# 
   305  0212                     	;# 
   306  0213                     	;# 
   307  0213                     	;# 
   308  0214                     	;# 
   309  0214                     	;# 
   310  0215                     	;# 
   311  0215                     	;# 
   312  0215                     	;# 
   313  0216                     	;# 
   314  0216                     	;# 
   315  0217                     	;# 
   316  0217                     	;# 
   317  0291                     	;# 
   318  0291                     	;# 
   319  0292                     	;# 
   320  0293                     	;# 
   321  0294                     	;# 
   322  0295                     	;# 
   323  0295                     	;# 
   324  0296                     	;# 
   325  0391                     	;# 
   326  0392                     	;# 
   327  0393                     	;# 
   328  039A                     	;# 
   329  039C                     	;# 
   330  039D                     	;# 
   331  039E                     	;# 
   332  039F                     	;# 
   333  0FE4                     	;# 
   334  0FE5                     	;# 
   335  0FE6                     	;# 
   336  0FE7                     	;# 
   337  0FE8                     	;# 
   338  0FE9                     	;# 
   339  0FEA                     	;# 
   340  0FEB                     	;# 
   341  0FED                     	;# 
   342  0FEE                     	;# 
   343  0FEF                     	;# 
   344  0000                     	;# 
   345  0001                     	;# 
   346  0002                     	;# 
   347  0003                     	;# 
   348  0004                     	;# 
   349  0005                     	;# 
   350  0006                     	;# 
   351  0007                     	;# 
   352  0008                     	;# 
   353  0009                     	;# 
   354  000A                     	;# 
   355  000B                     	;# 
   356  000C                     	;# 
   357  000E                     	;# 
   358  0011                     	;# 
   359  0012                     	;# 
   360  0015                     	;# 
   361  0016                     	;# 
   362  0016                     	;# 
   363  0017                     	;# 
   364  0018                     	;# 
   365  0019                     	;# 
   366  001A                     	;# 
   367  001B                     	;# 
   368  001C                     	;# 
   369  001E                     	;# 
   370  001F                     	;# 
   371  008C                     	;# 
   372  008E                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0095                     	;# 
   376  0096                     	;# 
   377  0097                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009A                     	;# 
   381  009B                     	;# 
   382  009B                     	;# 
   383  009C                     	;# 
   384  009D                     	;# 
   385  009E                     	;# 
   386  010C                     	;# 
   387  010E                     	;# 
   388  0111                     	;# 
   389  0112                     	;# 
   390  0113                     	;# 
   391  0114                     	;# 
   392  0115                     	;# 
   393  0116                     	;# 
   394  0117                     	;# 
   395  0118                     	;# 
   396  0119                     	;# 
   397  011A                     	;# 
   398  011B                     	;# 
   399  011D                     	;# 
   400  011D                     	;# 
   401  018C                     	;# 
   402  018E                     	;# 
   403  0191                     	;# 
   404  0191                     	;# 
   405  0192                     	;# 
   406  0193                     	;# 
   407  0193                     	;# 
   408  0193                     	;# 
   409  0194                     	;# 
   410  0195                     	;# 
   411  0196                     	;# 
   412  0199                     	;# 
   413  019A                     	;# 
   414  019B                     	;# 
   415  019B                     	;# 
   416  019B                     	;# 
   417  019B                     	;# 
   418  019C                     	;# 
   419  019C                     	;# 
   420  019D                     	;# 
   421  019E                     	;# 
   422  019F                     	;# 
   423  020C                     	;# 
   424  020E                     	;# 
   425  0211                     	;# 
   426  0211                     	;# 
   427  0212                     	;# 
   428  0212                     	;# 
   429  0213                     	;# 
   430  0213                     	;# 
   431  0214                     	;# 
   432  0214                     	;# 
   433  0215                     	;# 
   434  0215                     	;# 
   435  0215                     	;# 
   436  0216                     	;# 
   437  0216                     	;# 
   438  0217                     	;# 
   439  0217                     	;# 
   440  0291                     	;# 
   441  0291                     	;# 
   442  0292                     	;# 
   443  0293                     	;# 
   444  0294                     	;# 
   445  0295                     	;# 
   446  0295                     	;# 
   447  0296                     	;# 
   448  0391                     	;# 
   449  0392                     	;# 
   450  0393                     	;# 
   451  039A                     	;# 
   452  039C                     	;# 
   453  039D                     	;# 
   454  039E                     	;# 
   455  039F                     	;# 
   456  0FE4                     	;# 
   457  0FE5                     	;# 
   458  0FE6                     	;# 
   459  0FE7                     	;# 
   460  0FE8                     	;# 
   461  0FE9                     	;# 
   462  0FEA                     	;# 
   463  0FEB                     	;# 
   464  0FED                     	;# 
   465  0FEE                     	;# 
   466  0FEF                     	;# 
   467  0000                     	;# 
   468  0001                     	;# 
   469  0002                     	;# 
   470  0003                     	;# 
   471  0004                     	;# 
   472  0005                     	;# 
   473  0006                     	;# 
   474  0007                     	;# 
   475  0008                     	;# 
   476  0009                     	;# 
   477  000A                     	;# 
   478  000B                     	;# 
   479  000C                     	;# 
   480  000E                     	;# 
   481  0011                     	;# 
   482  0012                     	;# 
   483  0015                     	;# 
   484  0016                     	;# 
   485  0016                     	;# 
   486  0017                     	;# 
   487  0018                     	;# 
   488  0019                     	;# 
   489  001A                     	;# 
   490  001B                     	;# 
   491  001C                     	;# 
   492  001E                     	;# 
   493  001F                     	;# 
   494  008C                     	;# 
   495  008E                     	;# 
   496  0091                     	;# 
   497  0092                     	;# 
   498  0095                     	;# 
   499  0096                     	;# 
   500  0097                     	;# 
   501  0098                     	;# 
   502  0099                     	;# 
   503  009A                     	;# 
   504  009B                     	;# 
   505  009B                     	;# 
   506  009C                     	;# 
   507  009D                     	;# 
   508  009E                     	;# 
   509  010C                     	;# 
   510  010E                     	;# 
   511  0111                     	;# 
   512  0112                     	;# 
   513  0113                     	;# 
   514  0114                     	;# 
   515  0115                     	;# 
   516  0116                     	;# 
   517  0117                     	;# 
   518  0118                     	;# 
   519  0119                     	;# 
   520  011A                     	;# 
   521  011B                     	;# 
   522  011D                     	;# 
   523  011D                     	;# 
   524  018C                     	;# 
   525  018E                     	;# 
   526  0191                     	;# 
   527  0191                     	;# 
   528  0192                     	;# 
   529  0193                     	;# 
   530  0193                     	;# 
   531  0193                     	;# 
   532  0194                     	;# 
   533  0195                     	;# 
   534  0196                     	;# 
   535  0199                     	;# 
   536  019A                     	;# 
   537  019B                     	;# 
   538  019B                     	;# 
   539  019B                     	;# 
   540  019B                     	;# 
   541  019C                     	;# 
   542  019C                     	;# 
   543  019D                     	;# 
   544  019E                     	;# 
   545  019F                     	;# 
   546  020C                     	;# 
   547  020E                     	;# 
   548  0211                     	;# 
   549  0211                     	;# 
   550  0212                     	;# 
   551  0212                     	;# 
   552  0213                     	;# 
   553  0213                     	;# 
   554  0214                     	;# 
   555  0214                     	;# 
   556  0215                     	;# 
   557  0215                     	;# 
   558  0215                     	;# 
   559  0216                     	;# 
   560  0216                     	;# 
   561  0217                     	;# 
   562  0217                     	;# 
   563  0291                     	;# 
   564  0291                     	;# 
   565  0292                     	;# 
   566  0293                     	;# 
   567  0294                     	;# 
   568  0295                     	;# 
   569  0295                     	;# 
   570  0296                     	;# 
   571  0391                     	;# 
   572  0392                     	;# 
   573  0393                     	;# 
   574  039A                     	;# 
   575  039C                     	;# 
   576  039D                     	;# 
   577  039E                     	;# 
   578  039F                     	;# 
   579  0FE4                     	;# 
   580  0FE5                     	;# 
   581  0FE6                     	;# 
   582  0FE7                     	;# 
   583  0FE8                     	;# 
   584  0FE9                     	;# 
   585  0FEA                     	;# 
   586  0FEB                     	;# 
   587  0FED                     	;# 
   588  0FEE                     	;# 
   589  0FEF                     	;# 
   590  0000                     	;# 
   591  0001                     	;# 
   592  0002                     	;# 
   593  0003                     	;# 
   594  0004                     	;# 
   595  0005                     	;# 
   596  0006                     	;# 
   597  0007                     	;# 
   598  0008                     	;# 
   599  0009                     	;# 
   600  000A                     	;# 
   601  000B                     	;# 
   602  000C                     	;# 
   603  000E                     	;# 
   604  0011                     	;# 
   605  0012                     	;# 
   606  0015                     	;# 
   607  0016                     	;# 
   608  0016                     	;# 
   609  0017                     	;# 
   610  0018                     	;# 
   611  0019                     	;# 
   612  001A                     	;# 
   613  001B                     	;# 
   614  001C                     	;# 
   615  001E                     	;# 
   616  001F                     	;# 
   617  008C                     	;# 
   618  008E                     	;# 
   619  0091                     	;# 
   620  0092                     	;# 
   621  0095                     	;# 
   622  0096                     	;# 
   623  0097                     	;# 
   624  0098                     	;# 
   625  0099                     	;# 
   626  009A                     	;# 
   627  009B                     	;# 
   628  009B                     	;# 
   629  009C                     	;# 
   630  009D                     	;# 
   631  009E                     	;# 
   632  010C                     	;# 
   633  010E                     	;# 
   634  0111                     	;# 
   635  0112                     	;# 
   636  0113                     	;# 
   637  0114                     	;# 
   638  0115                     	;# 
   639  0116                     	;# 
   640  0117                     	;# 
   641  0118                     	;# 
   642  0119                     	;# 
   643  011A                     	;# 
   644  011B                     	;# 
   645  011D                     	;# 
   646  011D                     	;# 
   647  018C                     	;# 
   648  018E                     	;# 
   649  0191                     	;# 
   650  0191                     	;# 
   651  0192                     	;# 
   652  0193                     	;# 
   653  0193                     	;# 
   654  0193                     	;# 
   655  0194                     	;# 
   656  0195                     	;# 
   657  0196                     	;# 
   658  0199                     	;# 
   659  019A                     	;# 
   660  019B                     	;# 
   661  019B                     	;# 
   662  019B                     	;# 
   663  019B                     	;# 
   664  019C                     	;# 
   665  019C                     	;# 
   666  019D                     	;# 
   667  019E                     	;# 
   668  019F                     	;# 
   669  020C                     	;# 
   670  020E                     	;# 
   671  0211                     	;# 
   672  0211                     	;# 
   673  0212                     	;# 
   674  0212                     	;# 
   675  0213                     	;# 
   676  0213                     	;# 
   677  0214                     	;# 
   678  0214                     	;# 
   679  0215                     	;# 
   680  0215                     	;# 
   681  0215                     	;# 
   682  0216                     	;# 
   683  0216                     	;# 
   684  0217                     	;# 
   685  0217                     	;# 
   686  0291                     	;# 
   687  0291                     	;# 
   688  0292                     	;# 
   689  0293                     	;# 
   690  0294                     	;# 
   691  0295                     	;# 
   692  0295                     	;# 
   693  0296                     	;# 
   694  0391                     	;# 
   695  0392                     	;# 
   696  0393                     	;# 
   697  039A                     	;# 
   698  039C                     	;# 
   699  039D                     	;# 
   700  039E                     	;# 
   701  039F                     	;# 
   702  0FE4                     	;# 
   703  0FE5                     	;# 
   704  0FE6                     	;# 
   705  0FE7                     	;# 
   706  0FE8                     	;# 
   707  0FE9                     	;# 
   708  0FEA                     	;# 
   709  0FEB                     	;# 
   710  0FED                     	;# 
   711  0FEE                     	;# 
   712  0FEF                     	;# 
   713  0000                     	;# 
   714  0001                     	;# 
   715  0002                     	;# 
   716  0003                     	;# 
   717  0004                     	;# 
   718  0005                     	;# 
   719  0006                     	;# 
   720  0007                     	;# 
   721  0008                     	;# 
   722  0009                     	;# 
   723  000A                     	;# 
   724  000B                     	;# 
   725  000C                     	;# 
   726  000E                     	;# 
   727  0011                     	;# 
   728  0012                     	;# 
   729  0015                     	;# 
   730  0016                     	;# 
   731  0016                     	;# 
   732  0017                     	;# 
   733  0018                     	;# 
   734  0019                     	;# 
   735  001A                     	;# 
   736  001B                     	;# 
   737  001C                     	;# 
   738  001E                     	;# 
   739  001F                     	;# 
   740  008C                     	;# 
   741  008E                     	;# 
   742  0091                     	;# 
   743  0092                     	;# 
   744  0095                     	;# 
   745  0096                     	;# 
   746  0097                     	;# 
   747  0098                     	;# 
   748  0099                     	;# 
   749  009A                     	;# 
   750  009B                     	;# 
   751  009B                     	;# 
   752  009C                     	;# 
   753  009D                     	;# 
   754  009E                     	;# 
   755  010C                     	;# 
   756  010E                     	;# 
   757  0111                     	;# 
   758  0112                     	;# 
   759  0113                     	;# 
   760  0114                     	;# 
   761  0115                     	;# 
   762  0116                     	;# 
   763  0117                     	;# 
   764  0118                     	;# 
   765  0119                     	;# 
   766  011A                     	;# 
   767  011B                     	;# 
   768  011D                     	;# 
   769  011D                     	;# 
   770  018C                     	;# 
   771  018E                     	;# 
   772  0191                     	;# 
   773  0191                     	;# 
   774  0192                     	;# 
   775  0193                     	;# 
   776  0193                     	;# 
   777  0193                     	;# 
   778  0194                     	;# 
   779  0195                     	;# 
   780  0196                     	;# 
   781  0199                     	;# 
   782  019A                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019B                     	;# 
   787  019C                     	;# 
   788  019C                     	;# 
   789  019D                     	;# 
   790  019E                     	;# 
   791  019F                     	;# 
   792  020C                     	;# 
   793  020E                     	;# 
   794  0211                     	;# 
   795  0211                     	;# 
   796  0212                     	;# 
   797  0212                     	;# 
   798  0213                     	;# 
   799  0213                     	;# 
   800  0214                     	;# 
   801  0214                     	;# 
   802  0215                     	;# 
   803  0215                     	;# 
   804  0215                     	;# 
   805  0216                     	;# 
   806  0216                     	;# 
   807  0217                     	;# 
   808  0217                     	;# 
   809  0291                     	;# 
   810  0291                     	;# 
   811  0292                     	;# 
   812  0293                     	;# 
   813  0294                     	;# 
   814  0295                     	;# 
   815  0295                     	;# 
   816  0296                     	;# 
   817  0391                     	;# 
   818  0392                     	;# 
   819  0393                     	;# 
   820  039A                     	;# 
   821  039C                     	;# 
   822  039D                     	;# 
   823  039E                     	;# 
   824  039F                     	;# 
   825  0FE4                     	;# 
   826  0FE5                     	;# 
   827  0FE6                     	;# 
   828  0FE7                     	;# 
   829  0FE8                     	;# 
   830  0FE9                     	;# 
   831  0FEA                     	;# 
   832  0FEB                     	;# 
   833  0FED                     	;# 
   834  0FEE                     	;# 
   835  0FEF                     	;# 
   836  0000                     	;# 
   837  0001                     	;# 
   838  0002                     	;# 
   839  0003                     	;# 
   840  0004                     	;# 
   841  0005                     	;# 
   842  0006                     	;# 
   843  0007                     	;# 
   844  0008                     	;# 
   845  0009                     	;# 
   846  000A                     	;# 
   847  000B                     	;# 
   848  000C                     	;# 
   849  000E                     	;# 
   850  0011                     	;# 
   851  0012                     	;# 
   852  0015                     	;# 
   853  0016                     	;# 
   854  0016                     	;# 
   855  0017                     	;# 
   856  0018                     	;# 
   857  0019                     	;# 
   858  001A                     	;# 
   859  001B                     	;# 
   860  001C                     	;# 
   861  001E                     	;# 
   862  001F                     	;# 
   863  008C                     	;# 
   864  008E                     	;# 
   865  0091                     	;# 
   866  0092                     	;# 
   867  0095                     	;# 
   868  0096                     	;# 
   869  0097                     	;# 
   870  0098                     	;# 
   871  0099                     	;# 
   872  009A                     	;# 
   873  009B                     	;# 
   874  009B                     	;# 
   875  009C                     	;# 
   876  009D                     	;# 
   877  009E                     	;# 
   878  010C                     	;# 
   879  010E                     	;# 
   880  0111                     	;# 
   881  0112                     	;# 
   882  0113                     	;# 
   883  0114                     	;# 
   884  0115                     	;# 
   885  0116                     	;# 
   886  0117                     	;# 
   887  0118                     	;# 
   888  0119                     	;# 
   889  011A                     	;# 
   890  011B                     	;# 
   891  011D                     	;# 
   892  011D                     	;# 
   893  018C                     	;# 
   894  018E                     	;# 
   895  0191                     	;# 
   896  0191                     	;# 
   897  0192                     	;# 
   898  0193                     	;# 
   899  0193                     	;# 
   900  0193                     	;# 
   901  0194                     	;# 
   902  0195                     	;# 
   903  0196                     	;# 
   904  0199                     	;# 
   905  019A                     	;# 
   906  019B                     	;# 
   907  019B                     	;# 
   908  019B                     	;# 
   909  019B                     	;# 
   910  019C                     	;# 
   911  019C                     	;# 
   912  019D                     	;# 
   913  019E                     	;# 
   914  019F                     	;# 
   915  020C                     	;# 
   916  020E                     	;# 
   917  0211                     	;# 
   918  0211                     	;# 
   919  0212                     	;# 
   920  0212                     	;# 
   921  0213                     	;# 
   922  0213                     	;# 
   923  0214                     	;# 
   924  0214                     	;# 
   925  0215                     	;# 
   926  0215                     	;# 
   927  0215                     	;# 
   928  0216                     	;# 
   929  0216                     	;# 
   930  0217                     	;# 
   931  0217                     	;# 
   932  0291                     	;# 
   933  0291                     	;# 
   934  0292                     	;# 
   935  0293                     	;# 
   936  0294                     	;# 
   937  0295                     	;# 
   938  0295                     	;# 
   939  0296                     	;# 
   940  0391                     	;# 
   941  0392                     	;# 
   942  0393                     	;# 
   943  039A                     	;# 
   944  039C                     	;# 
   945  039D                     	;# 
   946  039E                     	;# 
   947  039F                     	;# 
   948  0FE4                     	;# 
   949  0FE5                     	;# 
   950  0FE6                     	;# 
   951  0FE7                     	;# 
   952  0FE8                     	;# 
   953  0FE9                     	;# 
   954  0FEA                     	;# 
   955  0FEB                     	;# 
   956  0FED                     	;# 
   957  0FEE                     	;# 
   958  0FEF                     	;# 
   959  0000                     	;# 
   960  0001                     	;# 
   961  0002                     	;# 
   962  0003                     	;# 
   963  0004                     	;# 
   964  0005                     	;# 
   965  0006                     	;# 
   966  0007                     	;# 
   967  0008                     	;# 
   968  0009                     	;# 
   969  000A                     	;# 
   970  000B                     	;# 
   971  000C                     	;# 
   972  000E                     	;# 
   973  0011                     	;# 
   974  0012                     	;# 
   975  0015                     	;# 
   976  0016                     	;# 
   977  0016                     	;# 
   978  0017                     	;# 
   979  0018                     	;# 
   980  0019                     	;# 
   981  001A                     	;# 
   982  001B                     	;# 
   983  001C                     	;# 
   984  001E                     	;# 
   985  001F                     	;# 
   986  008C                     	;# 
   987  008E                     	;# 
   988  0091                     	;# 
   989  0092                     	;# 
   990  0095                     	;# 
   991  0096                     	;# 
   992  0097                     	;# 
   993  0098                     	;# 
   994  0099                     	;# 
   995  009A                     	;# 
   996  009B                     	;# 
   997  009B                     	;# 
   998  009C                     	;# 
   999  009D                     	;# 
  1000  009E                     	;# 
  1001  010C                     	;# 
  1002  010E                     	;# 
  1003  0111                     	;# 
  1004  0112                     	;# 
  1005  0113                     	;# 
  1006  0114                     	;# 
  1007  0115                     	;# 
  1008  0116                     	;# 
  1009  0117                     	;# 
  1010  0118                     	;# 
  1011  0119                     	;# 
  1012  011A                     	;# 
  1013  011B                     	;# 
  1014  011D                     	;# 
  1015  011D                     	;# 
  1016  018C                     	;# 
  1017  018E                     	;# 
  1018  0191                     	;# 
  1019  0191                     	;# 
  1020  0192                     	;# 
  1021  0193                     	;# 
  1022  0193                     	;# 
  1023  0193                     	;# 
  1024  0194                     	;# 
  1025  0195                     	;# 
  1026  0196                     	;# 
  1027  0199                     	;# 
  1028  019A                     	;# 
  1029  019B                     	;# 
  1030  019B                     	;# 
  1031  019B                     	;# 
  1032  019B                     	;# 
  1033  019C                     	;# 
  1034  019C                     	;# 
  1035  019D                     	;# 
  1036  019E                     	;# 
  1037  019F                     	;# 
  1038  020C                     	;# 
  1039  020E                     	;# 
  1040  0211                     	;# 
  1041  0211                     	;# 
  1042  0212                     	;# 
  1043  0212                     	;# 
  1044  0213                     	;# 
  1045  0213                     	;# 
  1046  0214                     	;# 
  1047  0214                     	;# 
  1048  0215                     	;# 
  1049  0215                     	;# 
  1050  0215                     	;# 
  1051  0216                     	;# 
  1052  0216                     	;# 
  1053  0217                     	;# 
  1054  0217                     	;# 
  1055  0291                     	;# 
  1056  0291                     	;# 
  1057  0292                     	;# 
  1058  0293                     	;# 
  1059  0294                     	;# 
  1060  0295                     	;# 
  1061  0295                     	;# 
  1062  0296                     	;# 
  1063  0391                     	;# 
  1064  0392                     	;# 
  1065  0393                     	;# 
  1066  039A                     	;# 
  1067  039C                     	;# 
  1068  039D                     	;# 
  1069  039E                     	;# 
  1070  039F                     	;# 
  1071  0FE4                     	;# 
  1072  0FE5                     	;# 
  1073  0FE6                     	;# 
  1074  0FE7                     	;# 
  1075  0FE8                     	;# 
  1076  0FE9                     	;# 
  1077  0FEA                     	;# 
  1078  0FEB                     	;# 
  1079  0FED                     	;# 
  1080  0FEE                     	;# 
  1081  0FEF                     	;# 
  1082  0000                     	;# 
  1083  0001                     	;# 
  1084  0002                     	;# 
  1085  0003                     	;# 
  1086  0004                     	;# 
  1087  0005                     	;# 
  1088  0006                     	;# 
  1089  0007                     	;# 
  1090  0008                     	;# 
  1091  0009                     	;# 
  1092  000A                     	;# 
  1093  000B                     	;# 
  1094  000C                     	;# 
  1095  000E                     	;# 
  1096  0011                     	;# 
  1097  0012                     	;# 
  1098  0015                     	;# 
  1099  0016                     	;# 
  1100  0016                     	;# 
  1101  0017                     	;# 
  1102  0018                     	;# 
  1103  0019                     	;# 
  1104  001A                     	;# 
  1105  001B                     	;# 
  1106  001C                     	;# 
  1107  001E                     	;# 
  1108  001F                     	;# 
  1109  008C                     	;# 
  1110  008E                     	;# 
  1111  0091                     	;# 
  1112  0092                     	;# 
  1113  0095                     	;# 
  1114  0096                     	;# 
  1115  0097                     	;# 
  1116  0098                     	;# 
  1117  0099                     	;# 
  1118  009A                     	;# 
  1119  009B                     	;# 
  1120  009B                     	;# 
  1121  009C                     	;# 
  1122  009D                     	;# 
  1123  009E                     	;# 
  1124  010C                     	;# 
  1125  010E                     	;# 
  1126  0111                     	;# 
  1127  0112                     	;# 
  1128  0113                     	;# 
  1129  0114                     	;# 
  1130  0115                     	;# 
  1131  0116                     	;# 
  1132  0117                     	;# 
  1133  0118                     	;# 
  1134  0119                     	;# 
  1135  011A                     	;# 
  1136  011B                     	;# 
  1137  011D                     	;# 
  1138  011D                     	;# 
  1139  018C                     	;# 
  1140  018E                     	;# 
  1141  0191                     	;# 
  1142  0191                     	;# 
  1143  0192                     	;# 
  1144  0193                     	;# 
  1145  0193                     	;# 
  1146  0193                     	;# 
  1147  0194                     	;# 
  1148  0195                     	;# 
  1149  0196                     	;# 
  1150  0199                     	;# 
  1151  019A                     	;# 
  1152  019B                     	;# 
  1153  019B                     	;# 
  1154  019B                     	;# 
  1155  019B                     	;# 
  1156  019C                     	;# 
  1157  019C                     	;# 
  1158  019D                     	;# 
  1159  019E                     	;# 
  1160  019F                     	;# 
  1161  020C                     	;# 
  1162  020E                     	;# 
  1163  0211                     	;# 
  1164  0211                     	;# 
  1165  0212                     	;# 
  1166  0212                     	;# 
  1167  0213                     	;# 
  1168  0213                     	;# 
  1169  0214                     	;# 
  1170  0214                     	;# 
  1171  0215                     	;# 
  1172  0215                     	;# 
  1173  0215                     	;# 
  1174  0216                     	;# 
  1175  0216                     	;# 
  1176  0217                     	;# 
  1177  0217                     	;# 
  1178  0291                     	;# 
  1179  0291                     	;# 
  1180  0292                     	;# 
  1181  0293                     	;# 
  1182  0294                     	;# 
  1183  0295                     	;# 
  1184  0295                     	;# 
  1185  0296                     	;# 
  1186  0391                     	;# 
  1187  0392                     	;# 
  1188  0393                     	;# 
  1189  039A                     	;# 
  1190  039C                     	;# 
  1191  039D                     	;# 
  1192  039E                     	;# 
  1193  039F                     	;# 
  1194  0FE4                     	;# 
  1195  0FE5                     	;# 
  1196  0FE6                     	;# 
  1197  0FE7                     	;# 
  1198  0FE8                     	;# 
  1199  0FE9                     	;# 
  1200  0FEA                     	;# 
  1201  0FEB                     	;# 
  1202  0FED                     	;# 
  1203  0FEE                     	;# 
  1204  0FEF                     	;# 
  1205  0000                     	;# 
  1206  0001                     	;# 
  1207  0002                     	;# 
  1208  0003                     	;# 
  1209  0004                     	;# 
  1210  0005                     	;# 
  1211  0006                     	;# 
  1212  0007                     	;# 
  1213  0008                     	;# 
  1214  0009                     	;# 
  1215  000A                     	;# 
  1216  000B                     	;# 
  1217  000C                     	;# 
  1218  000E                     	;# 
  1219  0011                     	;# 
  1220  0012                     	;# 
  1221  0015                     	;# 
  1222  0016                     	;# 
  1223  0016                     	;# 
  1224  0017                     	;# 
  1225  0018                     	;# 
  1226  0019                     	;# 
  1227  001A                     	;# 
  1228  001B                     	;# 
  1229  001C                     	;# 
  1230  001E                     	;# 
  1231  001F                     	;# 
  1232  008C                     	;# 
  1233  008E                     	;# 
  1234  0091                     	;# 
  1235  0092                     	;# 
  1236  0095                     	;# 
  1237  0096                     	;# 
  1238  0097                     	;# 
  1239  0098                     	;# 
  1240  0099                     	;# 
  1241  009A                     	;# 
  1242  009B                     	;# 
  1243  009B                     	;# 
  1244  009C                     	;# 
  1245  009D                     	;# 
  1246  009E                     	;# 
  1247  010C                     	;# 
  1248  010E                     	;# 
  1249  0111                     	;# 
  1250  0112                     	;# 
  1251  0113                     	;# 
  1252  0114                     	;# 
  1253  0115                     	;# 
  1254  0116                     	;# 
  1255  0117                     	;# 
  1256  0118                     	;# 
  1257  0119                     	;# 
  1258  011A                     	;# 
  1259  011B                     	;# 
  1260  011D                     	;# 
  1261  011D                     	;# 
  1262  018C                     	;# 
  1263  018E                     	;# 
  1264  0191                     	;# 
  1265  0191                     	;# 
  1266  0192                     	;# 
  1267  0193                     	;# 
  1268  0193                     	;# 
  1269  0193                     	;# 
  1270  0194                     	;# 
  1271  0195                     	;# 
  1272  0196                     	;# 
  1273  0199                     	;# 
  1274  019A                     	;# 
  1275  019B                     	;# 
  1276  019B                     	;# 
  1277  019B                     	;# 
  1278  019B                     	;# 
  1279  019C                     	;# 
  1280  019C                     	;# 
  1281  019D                     	;# 
  1282  019E                     	;# 
  1283  019F                     	;# 
  1284  020C                     	;# 
  1285  020E                     	;# 
  1286  0211                     	;# 
  1287  0211                     	;# 
  1288  0212                     	;# 
  1289  0212                     	;# 
  1290  0213                     	;# 
  1291  0213                     	;# 
  1292  0214                     	;# 
  1293  0214                     	;# 
  1294  0215                     	;# 
  1295  0215                     	;# 
  1296  0215                     	;# 
  1297  0216                     	;# 
  1298  0216                     	;# 
  1299  0217                     	;# 
  1300  0217                     	;# 
  1301  0291                     	;# 
  1302  0291                     	;# 
  1303  0292                     	;# 
  1304  0293                     	;# 
  1305  0294                     	;# 
  1306  0295                     	;# 
  1307  0295                     	;# 
  1308  0296                     	;# 
  1309  0391                     	;# 
  1310  0392                     	;# 
  1311  0393                     	;# 
  1312  039A                     	;# 
  1313  039C                     	;# 
  1314  039D                     	;# 
  1315  039E                     	;# 
  1316  039F                     	;# 
  1317  0FE4                     	;# 
  1318  0FE5                     	;# 
  1319  0FE6                     	;# 
  1320  0FE7                     	;# 
  1321  0FE8                     	;# 
  1322  0FE9                     	;# 
  1323  0FEA                     	;# 
  1324  0FEB                     	;# 
  1325  0FED                     	;# 
  1326  0FEE                     	;# 
  1327  0FEF                     	;# 
  1328                           
  1329                           	psect	stringtext1
  1330  04AE                     __pstringtext1:
  1331  04AE                     _GOOD_WSP_VOLTAGE:
  1332  04AE  348E               	retlw	142
  1333  04AF  3400               	retlw	0
  1334  04B0                     __end_of_GOOD_WSP_VOLTAGE:
  1335                           
  1336                           	psect	stringtext2
  1337  04B0                     __pstringtext2:
  1338  04B0                     _BAD_WSP_VOLTAGE:
  1339  04B0  3480               	retlw	128
  1340  04B1  3400               	retlw	0
  1341  04B2                     __end_of_BAD_WSP_VOLTAGE:
  1342                           
  1343                           	psect	stringtext3
  1344  04B2                     __pstringtext3:
  1345  04B2                     _UP_RESISTANSE:
  1346  04B2  3420               	retlw	32
  1347  04B3  344E               	retlw	78
  1348  04B4                     __end_of_UP_RESISTANSE:
  1349                           
  1350                           	psect	stringtext4
  1351  04B4                     __pstringtext4:
  1352  04B4                     _HIGH_WATER_RESISTANSE:
  1353  04B4  34A8               	retlw	168
  1354  04B5  3461               	retlw	97
  1355  04B6                     __end_of_HIGH_WATER_RESISTANSE:
  1356                           
  1357                           	psect	stringtext5
  1358  04B6                     __pstringtext5:
  1359  04B6                     _LOW_WATER_RESISTANSE:
  1360  04B6  3420               	retlw	32
  1361  04B7  344E               	retlw	78
  1362  04B8                     __end_of_LOW_WATER_RESISTANSE:
  1363                           
  1364                           	psect	nvBANK0
  1365  003C                     __pnvBANK0:
  1366  003C                     _TMR0_InterruptHandler:
  1367  003C                     	ds	2
  1368  003E                     _TMR2_InterruptHandler:
  1369  003E                     	ds	2
  1370  0040                     _timer0ReloadVal:
  1371  0040                     	ds	1
  1372  0015                     _TMR0	set	21
  1373  001C                     _T2CONbits	set	28
  1374  001C                     _T2CON	set	28
  1375  001A                     _TMR2	set	26
  1376  001B                     _PR2	set	27
  1377  0011                     _PIR1bits	set	17
  1378  000B                     _INTCONbits	set	11
  1379  005F                     _GIE	set	95
  1380  008E                     _TRISCbits	set	142
  1381  008C                     _TRISAbits	set	140
  1382  0095                     _OPTION_REG	set	149
  1383  0091                     _PIE1bits	set	145
  1384  0095                     _OPTION_REGbits	set	149
  1385  008E                     _TRISC	set	142
  1386  008C                     _TRISA	set	140
  1387  009D                     _ADCON0bits	set	157
  1388  009D                     _ADCON0	set	157
  1389  009C                     _ADRESH	set	156
  1390  009B                     _ADRESL	set	155
  1391  009E                     _ADCON1	set	158
  1392  0097                     _WDTCON	set	151
  1393  0098                     _OSCTUNE	set	152
  1394  0099                     _OSCCON	set	153
  1395  010E                     _LATCbits	set	270
  1396  010C                     _LATAbits	set	268
  1397  0117                     _FVRCONbits	set	279
  1398  0117                     _FVRCON	set	279
  1399  011D                     _APFCON	set	285
  1400  010E                     _LATC	set	270
  1401  010C                     _LATA	set	268
  1402  0116                     _BORCON	set	278
  1403  0191                     _EEADR	set	401
  1404  0196                     _EECON2	set	406
  1405  0193                     _EEDATA	set	403
  1406  018C                     _ANSELAbits	set	396
  1407  018E                     _ANSELCbits	set	398
  1408  018C                     _ANSELA	set	396
  1409  018E                     _ANSELC	set	398
  1410  0CA8                     _RD	set	3240
  1411  0CAA                     _WREN	set	3242
  1412  0CA9                     _WR	set	3241
  1413  020E                     _WPUCbits	set	526
  1414  020C                     _WPUAbits	set	524
  1415  020E                     _WPUC	set	526
  1416  020C                     _WPUA	set	524
  1417                           
  1418                           	psect	cinit
  1419  0027                     start_initialization:	
  1420                           ; #config settings
  1421                           
  1422  0027                     __initialization:
  1423                           
  1424                           ; Clear objects allocated to COMMON
  1425  0027  01F7               	clrf	__pbssCOMMON& (0+127)
  1426  0028  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1427  0029  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1428  002A  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  1429  002B  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
  1430  002C  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
  1431                           
  1432                           ; Clear objects allocated to BANK0
  1433  002D  3020               	movlw	low __pbssBANK0
  1434  002E  0084               	movwf	4
  1435  002F  3000               	movlw	high __pbssBANK0
  1436  0030  0085               	movwf	5
  1437  0031  3015               	movlw	21
  1438  0032  3184  2482  3180   	fcall	clear_ram0
  1439  0035                     end_of_initialization:	
  1440                           ;End of C runtime variable initialization code
  1441                           
  1442  0035                     __end_of__initialization:
  1443  0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1444  0036  0020               	movlb	0
  1445  0037  2B82               	ljmp	_main	;jump to C main() function
  1446                           
  1447                           	psect	bssCOMMON
  1448  0077                     __pbssCOMMON:
  1449  0077                     _FLAGS:
  1450  0077                     	ds	2
  1451  0079                     sec_tick_work@iled:
  1452  0079                     	ds	1
  1453  007A                     get_measure@measures:
  1454  007A                     	ds	1
  1455  007B                     _time_meas:
  1456  007B                     	ds	1
  1457  007C                     _FRIMWARE_VERSION_EEPROM_ADR:
  1458  007C                     	ds	1
  1459                           
  1460                           	psect	bssBANK0
  1461  0020                     __pbssBANK0:
  1462  0020                     _time_rotation:
  1463  0020                     	ds	3
  1464  0023                     ms_tick@tick_count:
  1465  0023                     	ds	2
  1466  0025                     _time_zummer:
  1467  0025                     	ds	2
  1468  0027                     _time_led:
  1469  0027                     	ds	2
  1470  0029                     _time_rele_gap:
  1471  0029                     	ds	2
  1472  002B                     _time_rele_control:
  1473  002B                     	ds	2
  1474  002D                     _time_rele_power:
  1475  002D                     	ds	2
  1476  002F                     _ADC_InterruptHandler:
  1477  002F                     	ds	2
  1478  0031                     get_jump_full@jump_counter:
  1479  0031                     	ds	1
  1480  0032                     get_jump@jump_counter:
  1481  0032                     	ds	1
  1482  0033                     get_fun_full@fun_counter:
  1483  0033                     	ds	1
  1484  0034                     get_fun@fun_counter:
  1485  0034                     	ds	1
  1486                           
  1487                           	psect	clrtext
  1488  0482                     clear_ram0:	
  1489                           ;	Called with FSR0 containing the base address, and
  1490                           ;	WREG with the size to clear
  1491                           
  1492  0482  0064               	clrwdt	;clear the watchdog before getting into this loop
  1493  0483                     clrloop0:
  1494  0483  0180               	clrf	0	;clear RAM location pointed to by FSR
  1495  0484  3101               	addfsr 0,1
  1496  0485  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1497  0486  2C83               	goto	clrloop0	;have we reached the end yet?
  1498  0487  3400               	retlw	0	;all done for this memory range, return
  1499                           
  1500                           	psect	cstackCOMMON
  1501  0070                     __pcstackCOMMON:
  1502  0070                     ?_PIN_MANAGER_Initialize:
  1503  0070                     ?_OSCILLATOR_Initialize:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506  0070                     ?_WDT_Initialize:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509  0070                     ?_FVR_Initialize:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512  0070                     ?_ADC_Initialize:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515  0070                     ?_TMR2_Initialize:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0070                     ?_TMR0_Initialize:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0070                     ?_TMR0_ISR:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0070                     ??_TMR0_ISR:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0070                     ?_TMR2_ISR:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0070                     ?_TMR2_DefaultInterruptHandler:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0070                     ??_TMR2_DefaultInterruptHandler:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0070                     ?_TMR0_DefaultInterruptHandler:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0070                     ??_TMR0_DefaultInterruptHandler:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ?_SYSTEM_Initialize:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ?_ADC_GetConversion:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ?_INTERRUPT_InterruptManager:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ?_TMR2_StartTimer:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ?_switch_zum:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ?_toggle_tone:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0070                     ??_toggle_tone:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0070                     ?_go_close:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566  0070                     ?_go_open:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ?_go_close_alt:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0070                     ?_go_open_alt:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0070                     ?_start_alarm:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578  0070                     ?_get_measure:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0070                     ?_get_fun:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0070                     ?_get_fun_full:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0070                     ?_get_jump:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0070                     ?_get_jump_full:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0070                     ?_rele_tick:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596  0070                     ??_rele_tick:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599  0070                     ?_sec_tick_work:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602  0070                     ?_povorot:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605  0070                     ?_fun_work:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608  0070                     ?_switch_wm:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611  0070                     ?_ms_tick:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614  0070                     ?_start_setup:	
  1615                           ; 1 bytes @ 0x0
  1616                           
  1617  0070                     ?_main:	
  1618                           ; 1 bytes @ 0x0
  1619                           
  1620  0070                     ?i1_ADC_GetConversion:	
  1621                           ; 1 bytes @ 0x0
  1622                           
  1623  0070                     ??i1_ADC_GetConversion:	
  1624                           ; 1 bytes @ 0x0
  1625                           
  1626  0070                     ?i1_switch_zum:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629  0070                     ??i1_switch_zum:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632  0070                     ?i1_go_close:	
  1633                           ; 1 bytes @ 0x0
  1634                           
  1635  0070                     ??i1_go_close:	
  1636                           ; 1 bytes @ 0x0
  1637                           
  1638  0070                     ?i1_go_close_alt:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641  0070                     ??i1_go_close_alt:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644                           
  1645                           ; 1 bytes @ 0x0
  1646  0070                     	ds	1
  1647  0071                     i1ADC_GetConversion@channel:
  1648                           
  1649                           ; 1 bytes @ 0x1
  1650  0071                     	ds	1
  1651  0072                     ??_start_alarm:
  1652  0072                     ??_get_measure:	
  1653                           ; 1 bytes @ 0x2
  1654                           
  1655                           
  1656                           ; 1 bytes @ 0x2
  1657  0072                     	ds	2
  1658  0074                     get_measure@res:
  1659                           
  1660                           ; 2 bytes @ 0x4
  1661  0074                     	ds	2
  1662  0076                     ??_sec_tick_work:
  1663                           
  1664                           ; 1 bytes @ 0x6
  1665  0076                     	ds	1
  1666  0077                     ??_TMR2_ISR:
  1667  0077                     ??_INTERRUPT_InterruptManager:	
  1668                           ; 1 bytes @ 0x7
  1669                           
  1670  0077                     ??_ms_tick:	
  1671                           ; 1 bytes @ 0x7
  1672                           
  1673                           
  1674                           	psect	cstackBANK0
  1675  0035                     __pcstackBANK0:	
  1676                           ; 1 bytes @ 0x7
  1677                           
  1678  0035                     ??_PIN_MANAGER_Initialize:
  1679  0035                     ??_OSCILLATOR_Initialize:	
  1680                           ; 1 bytes @ 0x0
  1681                           
  1682  0035                     ??_WDT_Initialize:	
  1683                           ; 1 bytes @ 0x0
  1684                           
  1685  0035                     ??_FVR_Initialize:	
  1686                           ; 1 bytes @ 0x0
  1687                           
  1688  0035                     ??_ADC_Initialize:	
  1689                           ; 1 bytes @ 0x0
  1690                           
  1691  0035                     ?_TMR2_SetInterruptHandler:	
  1692                           ; 1 bytes @ 0x0
  1693                           
  1694  0035                     ?_TMR0_SetInterruptHandler:	
  1695                           ; 1 bytes @ 0x0
  1696                           
  1697  0035                     ??_ADC_GetConversion:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700  0035                     ??_TMR2_StartTimer:	
  1701                           ; 1 bytes @ 0x0
  1702                           
  1703  0035                     ??_switch_zum:	
  1704                           ; 1 bytes @ 0x0
  1705                           
  1706  0035                     ?_beep:	
  1707                           ; 1 bytes @ 0x0
  1708                           
  1709  0035                     ?_boop:	
  1710                           ; 1 bytes @ 0x0
  1711                           
  1712  0035                     ??_go_close:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715  0035                     ??_go_open:	
  1716                           ; 1 bytes @ 0x0
  1717                           
  1718  0035                     ??_go_close_alt:	
  1719                           ; 1 bytes @ 0x0
  1720                           
  1721  0035                     ??_go_open_alt:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724  0035                     beep@count:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727  0035                     boop@count:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730  0035                     TMR2_SetInterruptHandler@InterruptHandler:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733  0035                     TMR0_SetInterruptHandler@InterruptHandler:	
  1734                           ; 2 bytes @ 0x0
  1735                           
  1736                           
  1737                           ; 2 bytes @ 0x0
  1738  0035                     	ds	1
  1739  0036                     ??_beep:
  1740  0036                     ??_boop:	
  1741                           ; 1 bytes @ 0x1
  1742                           
  1743  0036                     ADC_GetConversion@channel:	
  1744                           ; 1 bytes @ 0x1
  1745                           
  1746                           
  1747                           ; 1 bytes @ 0x1
  1748  0036                     	ds	1
  1749  0037                     ??_TMR2_Initialize:
  1750  0037                     ??_TMR0_Initialize:	
  1751                           ; 1 bytes @ 0x2
  1752                           
  1753  0037                     ??_TMR2_SetInterruptHandler:	
  1754                           ; 1 bytes @ 0x2
  1755                           
  1756  0037                     ??_TMR0_SetInterruptHandler:	
  1757                           ; 1 bytes @ 0x2
  1758                           
  1759  0037                     ??_get_fun:	
  1760                           ; 1 bytes @ 0x2
  1761                           
  1762  0037                     ??_get_fun_full:	
  1763                           ; 1 bytes @ 0x2
  1764                           
  1765  0037                     ??_get_jump:	
  1766                           ; 1 bytes @ 0x2
  1767                           
  1768  0037                     ??_get_jump_full:	
  1769                           ; 1 bytes @ 0x2
  1770                           
  1771  0037                     ??_povorot:	
  1772                           ; 1 bytes @ 0x2
  1773                           
  1774                           
  1775                           ; 1 bytes @ 0x2
  1776  0037                     	ds	1
  1777  0038                     ??_SYSTEM_Initialize:
  1778  0038                     beep@time:	
  1779                           ; 1 bytes @ 0x3
  1780                           
  1781  0038                     boop@time:	
  1782                           ; 1 bytes @ 0x3
  1783                           
  1784                           
  1785                           ; 1 bytes @ 0x3
  1786  0038                     	ds	1
  1787  0039                     beep@j:
  1788  0039                     boop@j:	
  1789                           ; 1 bytes @ 0x4
  1790                           
  1791  0039                     get_fun@res:	
  1792                           ; 1 bytes @ 0x4
  1793                           
  1794  0039                     get_fun_full@res:	
  1795                           ; 2 bytes @ 0x4
  1796                           
  1797  0039                     get_jump@res:	
  1798                           ; 2 bytes @ 0x4
  1799                           
  1800  0039                     get_jump_full@res:	
  1801                           ; 2 bytes @ 0x4
  1802                           
  1803                           
  1804                           ; 2 bytes @ 0x4
  1805  0039                     	ds	1
  1806  003A                     beep@i:
  1807  003A                     boop@i:	
  1808                           ; 1 bytes @ 0x5
  1809                           
  1810                           
  1811                           ; 1 bytes @ 0x5
  1812  003A                     	ds	1
  1813  003B                     ??_fun_work:
  1814  003B                     ??_switch_wm:	
  1815                           ; 1 bytes @ 0x6
  1816                           
  1817  003B                     get_fun_full@flag:	
  1818                           ; 1 bytes @ 0x6
  1819                           
  1820  003B                     get_jump_full@flag:	
  1821                           ; 1 bytes @ 0x6
  1822                           
  1823                           
  1824                           ; 1 bytes @ 0x6
  1825  003B                     	ds	1
  1826  003C                     ??_start_setup:
  1827  003C                     ??_main:	
  1828                           ; 1 bytes @ 0x7
  1829                           
  1830                           
  1831                           	psect	maintext
  1832  0382                     __pmaintext:	
  1833                           ; 1 bytes @ 0x7
  1834 ;;
  1835 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1836 ;;
  1837 ;; *************** function _main *****************
  1838 ;; Defined at:
  1839 ;;		line 578 in file "main.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;		None
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;		None
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		wreg, status,2, status,0, pclath, cstack
  1848 ;; Tracked objects:
  1849 ;;		On entry : B1F/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMMON   BANK0   BANK1
  1853 ;;      Params:         0       0       0
  1854 ;;      Locals:         0       0       0
  1855 ;;      Temps:          0       0       0
  1856 ;;      Totals:         0       0       0
  1857 ;;Total ram usage:        0 bytes
  1858 ;; Hardware stack levels required when called: 11
  1859 ;; This function calls:
  1860 ;;		_fun_work
  1861 ;;		_get_fun
  1862 ;;		_get_jump
  1863 ;;		_povorot
  1864 ;;		_start_setup
  1865 ;;		_switch_wm
  1866 ;; This function is called by:
  1867 ;;		Startup code after reset
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871  0382                     _main:	
  1872                           ;psect for function _main
  1873                           
  1874  0382                     l2485:	
  1875                           ;incstack = 0
  1876                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1877                           
  1878                           
  1879                           ;main.c: 580:     start_setup();
  1880  0382  3182  2214  3183   	fcall	_start_setup
  1881  0385                     l497:	
  1882                           ;main.c: 582:     while (1) {
  1883                           
  1884  0385  0064               	clrwdt	;# 
  1885  0386                     l2487:
  1886                           
  1887                           ;main.c: 585:         if (!FLAGS.bits.ALARM) {
  1888  0386  1877               	btfsc	_FLAGS,0
  1889  0387  2B89               	goto	u1631
  1890  0388  2B8A               	goto	u1630
  1891  0389                     u1631:
  1892  0389  2B85               	goto	l497
  1893  038A                     u1630:
  1894  038A                     l2489:
  1895                           
  1896                           ;main.c: 587:             get_jump();
  1897  038A  3181  219C  3183   	fcall	_get_jump
  1898                           
  1899                           ;main.c: 588:             switch_wm();
  1900  038D  3183  2307  3183   	fcall	_switch_wm
  1901                           
  1902                           ;main.c: 590:             get_fun();
  1903  0390  3180  208A  3183   	fcall	_get_fun
  1904                           
  1905                           ;main.c: 591:             fun_work();
  1906  0393  3181  2118  3183   	fcall	_fun_work
  1907                           
  1908                           ;main.c: 593:             povorot();
  1909  0396  3182  22E4  3183   	fcall	_povorot
  1910  0399  2B85               	goto	l497
  1911  039A  2826               	ljmp	start
  1912  039B                     __end_of_main:
  1913                           
  1914                           	psect	text1
  1915  0307                     __ptext1:	
  1916 ;; *************** function _switch_wm *****************
  1917 ;; Defined at:
  1918 ;;		line 425 in file "main.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;		None
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    wreg      void 
  1925 ;; Registers used:
  1926 ;;		wreg, status,2, status,0, pclath, cstack
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMMON   BANK0   BANK1
  1932 ;;      Params:         0       0       0
  1933 ;;      Locals:         0       0       0
  1934 ;;      Temps:          0       1       0
  1935 ;;      Totals:         0       1       0
  1936 ;;Total ram usage:        1 bytes
  1937 ;; Hardware stack levels used: 1
  1938 ;; Hardware stack levels required when called: 9
  1939 ;; This function calls:
  1940 ;;		_boop
  1941 ;; This function is called by:
  1942 ;;		_main
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946  0307                     _switch_wm:	
  1947                           ;psect for function _switch_wm
  1948                           
  1949  0307                     l2419:	
  1950                           ;incstack = 0
  1951                           ; Regs used in _switch_wm: [wreg+status,2+status,0+pclath+cstack]
  1952                           
  1953                           
  1954                           ;main.c: 426:     if (FLAGS.bits._JUMP_CONNECTED) {
  1955  0307  1DF7               	btfss	_FLAGS,3
  1956  0308  2B0A               	goto	u1551
  1957  0309  2B0B               	goto	u1550
  1958  030A                     u1551:
  1959  030A  2B1A               	goto	l457
  1960  030B                     u1550:
  1961  030B                     l2421:
  1962                           
  1963                           ;main.c: 427:         if (FLAGS.bits.NORMAL_WORK_MODE) {
  1964  030B  1CF7               	btfss	_FLAGS,1
  1965  030C  2B0E               	goto	u1561
  1966  030D  2B0F               	goto	u1560
  1967  030E                     u1561:
  1968  030E  2B26               	goto	l461
  1969  030F                     u1560:
  1970  030F                     l2423:
  1971                           
  1972                           ;main.c: 428:             FLAGS.bits.NORMAL_WORK_MODE = 0;
  1973  030F  10F7               	bcf	_FLAGS,1
  1974  0310                     l2425:
  1975                           
  1976                           ;main.c: 431:             boop(40, 2);
  1977  0310  3002               	movlw	2
  1978  0311  0020               	movlb	0	; select bank0
  1979  0312  00BB               	movwf	??_switch_wm
  1980  0313  083B               	movf	??_switch_wm,w
  1981  0314  00B5               	movwf	boop@count
  1982  0315  3028               	movlw	40
  1983  0316  3182  224C  3183   	fcall	_boop
  1984  0319  2B26               	goto	l461
  1985  031A                     l457:
  1986                           
  1987                           ;main.c: 434:         if (!FLAGS.bits.NORMAL_WORK_MODE) {
  1988  031A  18F7               	btfsc	_FLAGS,1
  1989  031B  2B1D               	goto	u1571
  1990  031C  2B1E               	goto	u1570
  1991  031D                     u1571:
  1992  031D  2B26               	goto	l461
  1993  031E                     u1570:
  1994  031E                     l2427:
  1995                           
  1996                           ;main.c: 435:             FLAGS.bits.NORMAL_WORK_MODE = 1;
  1997  031E  14F7               	bsf	_FLAGS,1
  1998  031F                     l2429:
  1999                           
  2000                           ;main.c: 438:             boop(40, 1);
  2001  031F  0020               	movlb	0	; select bank0
  2002  0320  01B5               	clrf	boop@count
  2003  0321  0AB5               	incf	boop@count,f
  2004  0322  3028               	movlw	40
  2005  0323  3182  224C  3183   	fcall	_boop
  2006  0326                     l461:
  2007  0326  0008               	return
  2008  0327                     __end_of_switch_wm:
  2009                           
  2010                           	psect	text2
  2011  024C                     __ptext2:	
  2012 ;; *************** function _boop *****************
  2013 ;; Defined at:
  2014 ;;		line 114 in file "main.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  time            1    wreg     unsigned char 
  2017 ;;  count           1    0[BANK0 ] unsigned char 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  time            1    3[BANK0 ] unsigned char 
  2020 ;;  i               1    5[BANK0 ] unsigned char 
  2021 ;;  j               1    4[BANK0 ] unsigned char 
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, status,2, status,0, pclath, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMMON   BANK0   BANK1
  2031 ;;      Params:         0       1       0
  2032 ;;      Locals:         0       3       0
  2033 ;;      Temps:          0       2       0
  2034 ;;      Totals:         0       6       0
  2035 ;;Total ram usage:        6 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; Hardware stack levels required when called: 8
  2038 ;; This function calls:
  2039 ;;		_switch_zum
  2040 ;; This function is called by:
  2041 ;;		_switch_wm
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045  024C                     _boop:	
  2046                           ;psect for function _boop
  2047                           
  2048                           
  2049                           ;incstack = 0
  2050                           ; Regs used in _boop: [wreg+status,2+status,0+pclath+cstack]
  2051                           ;boop@time stored from wreg
  2052  024C  0020               	movlb	0	; select bank0
  2053  024D  00B8               	movwf	boop@time
  2054  024E                     l2341:
  2055                           
  2056                           ;main.c: 115:     for (char j = 0; j < count; j++) {
  2057  024E  01B9               	clrf	boop@j
  2058  024F  2A7B               	goto	l2357
  2059  0250                     l2343:
  2060                           
  2061                           ;main.c: 116:         for (char i = 0; i < time; i++) {
  2062  0250  01BA               	clrf	boop@i
  2063  0251  2A63               	goto	l2351
  2064  0252                     l2345:
  2065                           
  2066                           ;main.c: 117:             switch_zum();
  2067  0252  3184  244A  3182   	fcall	_switch_zum
  2068  0255                     l2347:
  2069                           
  2070                           ;main.c: 118:             _delay((unsigned long)((1)*(16000000/4000.0)));
  2071  0255  3006               	movlw	6
  2072  0256  0020               	movlb	0	; select bank0
  2073  0257  00B6               	movwf	??_boop
  2074  0258  3030               	movlw	48
  2075  0259                     u1647:
  2076  0259  0B89               	decfsz	9,f
  2077  025A  2A59               	goto	u1647
  2078  025B  0BB6               	decfsz	??_boop,f
  2079  025C  2A59               	goto	u1647
  2080  025D  0000               	nop
  2081  025E                     l2349:
  2082                           
  2083                           ;main.c: 119:         }
  2084  025E  3001               	movlw	1
  2085  025F  0020               	movlb	0	; select bank0
  2086  0260  00B6               	movwf	??_boop
  2087  0261  0836               	movf	??_boop,w
  2088  0262  07BA               	addwf	boop@i,f
  2089  0263                     l2351:
  2090  0263  0838               	movf	boop@time,w
  2091  0264  023A               	subwf	boop@i,w
  2092  0265  1C03               	skipc
  2093  0266  2A68               	goto	u1381
  2094  0267  2A69               	goto	u1380
  2095  0268                     u1381:
  2096  0268  2A52               	goto	l2345
  2097  0269                     u1380:
  2098  0269                     l2353:
  2099                           
  2100                           ;main.c: 120:         _delay((unsigned long)((150)*(16000000/4000.0)));
  2101  0269  3004               	movlw	4
  2102  026A  0020               	movlb	0	; select bank0
  2103  026B  00B7               	movwf	??_boop+1
  2104  026C  300C               	movlw	12
  2105  026D  00B6               	movwf	??_boop
  2106  026E  3033               	movlw	51
  2107  026F                     u1657:
  2108  026F  0B89               	decfsz	9,f
  2109  0270  2A6F               	goto	u1657
  2110  0271  0BB6               	decfsz	??_boop,f
  2111  0272  2A6F               	goto	u1657
  2112  0273  0BB7               	decfsz	??_boop+1,f
  2113  0274  2A6F               	goto	u1657
  2114  0275  3200               	nop2
  2115  0276                     l2355:
  2116                           
  2117                           ;main.c: 121:     }
  2118  0276  3001               	movlw	1
  2119  0277  0020               	movlb	0	; select bank0
  2120  0278  00B6               	movwf	??_boop
  2121  0279  0836               	movf	??_boop,w
  2122  027A  07B9               	addwf	boop@j,f
  2123  027B                     l2357:
  2124  027B  0835               	movf	boop@count,w
  2125  027C  0239               	subwf	boop@j,w
  2126  027D  1C03               	skipc
  2127  027E  2A80               	goto	u1391
  2128  027F  2A81               	goto	u1390
  2129  0280                     u1391:
  2130  0280  2A50               	goto	l2343
  2131  0281                     u1390:
  2132  0281                     l294:
  2133  0281  0008               	return
  2134  0282                     __end_of_boop:
  2135                           
  2136                           	psect	text3
  2137  0214                     __ptext3:	
  2138 ;; *************** function _start_setup *****************
  2139 ;; Defined at:
  2140 ;;		line 543 in file "main.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;		None
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;		None
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  1    wreg      void 
  2147 ;; Registers used:
  2148 ;;		wreg, status,2, status,0, pclath, cstack
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMMON   BANK0   BANK1
  2154 ;;      Params:         0       0       0
  2155 ;;      Locals:         0       0       0
  2156 ;;      Temps:          0       0       0
  2157 ;;      Totals:         0       0       0
  2158 ;;Total ram usage:        0 bytes
  2159 ;; Hardware stack levels used: 1
  2160 ;; Hardware stack levels required when called: 10
  2161 ;; This function calls:
  2162 ;;		_SYSTEM_Initialize
  2163 ;;		_TMR0_SetInterruptHandler
  2164 ;;		_TMR2_SetInterruptHandler
  2165 ;;		_TMR2_StartTimer
  2166 ;;		_get_fun_full
  2167 ;;		_get_jump_full
  2168 ;; This function is called by:
  2169 ;;		_main
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173  0214                     _start_setup:	
  2174                           ;psect for function _start_setup
  2175                           
  2176  0214                     l2431:	
  2177                           ;incstack = 0
  2178                           ; Regs used in _start_setup: [wreg+status,2+status,0+pclath+cstack]
  2179                           
  2180                           
  2181                           ;main.c: 545:     SYSTEM_Initialize();
  2182  0214  3183  23B3  3182   	fcall	_SYSTEM_Initialize
  2183  0217                     l2433:
  2184                           
  2185                           ;main.c: 546:     (INTCONbits.GIE = 1);
  2186  0217  178B               	bsf	11,7	;volatile
  2187  0218                     l2435:
  2188                           
  2189                           ;main.c: 547:     (INTCONbits.PEIE = 1);
  2190  0218  170B               	bsf	11,6	;volatile
  2191                           
  2192                           ;main.c: 550:     TMR0_SetInterruptHandler(switch_zum);
  2193  0219  304A               	movlw	low _switch_zum
  2194  021A  0020               	movlb	0	; select bank0
  2195  021B  00B5               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2196  021C  3004               	movlw	high _switch_zum
  2197  021D  00B6               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2198  021E  3184  248E  3182   	fcall	_TMR0_SetInterruptHandler
  2199                           
  2200                           ;main.c: 551:     TMR2_SetInterruptHandler(ms_tick);
  2201  0221  30F4               	movlw	low _ms_tick
  2202  0222  0020               	movlb	0	; select bank0
  2203  0223  00B5               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2204  0224  3003               	movlw	high _ms_tick
  2205  0225  00B6               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2206  0226  3184  2488  3182   	fcall	_TMR2_SetInterruptHandler
  2207  0229                     l2437:
  2208                           
  2209                           ;main.c: 552:     TMR2_StartTimer();
  2210  0229  3184  24AB  3182   	fcall	_TMR2_StartTimer
  2211  022C                     l2439:
  2212  022C  0023               	movlb	3	; select bank3
  2213  022D  118E               	bcf	14,3	;volatile
  2214  022E                     l2441:
  2215  022E  108C               	bcf	12,1	;volatile
  2216  022F                     l2443:
  2217  022F  110E               	bcf	14,2	;volatile
  2218  0230                     l2445:
  2219  0230  0024               	movlb	4	; select bank4
  2220  0231  108C               	bcf	12,1	;volatile
  2221  0232                     l2447:
  2222  0232  0021               	movlb	1	; select bank1
  2223  0233  148C               	bsf	12,1	;volatile
  2224  0234                     l2449:
  2225  0234  0024               	movlb	4	; select bank4
  2226  0235  110E               	bcf	14,2	;volatile
  2227  0236                     l2451:
  2228  0236  0021               	movlb	1	; select bank1
  2229  0237  150E               	bsf	14,2	;volatile
  2230  0238                     l2453:
  2231                           
  2232                           ;main.c: 564:     INTCONbits.TMR0IE = 0;
  2233  0238  128B               	bcf	11,5	;volatile
  2234  0239                     l2455:
  2235                           
  2236                           ;main.c: 565:     FLAGS.value = 0;
  2237  0239  01F7               	clrf	_FLAGS
  2238  023A  01F8               	clrf	_FLAGS+1
  2239  023B                     l2457:
  2240                           
  2241                           ;main.c: 566:     FLAGS.bits.ALARM =0;
  2242  023B  1077               	bcf	_FLAGS,0
  2243  023C                     l2459:
  2244  023C  0022               	movlb	2	; select bank2
  2245  023D  128E               	bcf	14,5	;volatile
  2246  023E                     l2461:
  2247  023E  120E               	bcf	14,4	;volatile
  2248  023F                     l2463:
  2249  023F  100E               	bcf	14,0	;volatile
  2250  0240                     l2465:
  2251  0240  0021               	movlb	1	; select bank1
  2252  0241  100E               	bcf	14,0	;volatile
  2253  0242                     l2467:
  2254                           
  2255                           ;main.c: 573:  get_jump_full();
  2256  0242  3180  20D3  3182   	fcall	_get_jump_full
  2257  0245                     l2469:
  2258                           
  2259                           ;main.c: 574:    get_fun_full();
  2260  0245  3180  2038  3182   	fcall	_get_fun_full
  2261  0248                     l2471:
  2262                           
  2263                           ;main.c: 575:     time_rele_power = 0;
  2264  0248  0020               	movlb	0	; select bank0
  2265  0249  01AD               	clrf	_time_rele_power
  2266  024A  01AE               	clrf	_time_rele_power+1
  2267  024B                     l492:
  2268  024B  0008               	return
  2269  024C                     __end_of_start_setup:
  2270                           
  2271                           	psect	text4
  2272  00D3                     __ptext4:	
  2273 ;; *************** function _get_jump_full *****************
  2274 ;; Defined at:
  2275 ;;		line 289 in file "main.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;		None
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  res             2    4[BANK0 ] unsigned int 
  2280 ;;  flag            1    6[BANK0 ] unsigned char 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2, status,0, pclath, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMMON   BANK0   BANK1
  2290 ;;      Params:         0       0       0
  2291 ;;      Locals:         0       3       0
  2292 ;;      Temps:          0       2       0
  2293 ;;      Totals:         0       5       0
  2294 ;;Total ram usage:        5 bytes
  2295 ;; Hardware stack levels used: 1
  2296 ;; Hardware stack levels required when called: 8
  2297 ;; This function calls:
  2298 ;;		_ADC_GetConversion
  2299 ;; This function is called by:
  2300 ;;		_start_setup
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304  00D3                     _get_jump_full:	
  2305                           ;psect for function _get_jump_full
  2306                           
  2307  00D3                     l403:	
  2308                           ;incstack = 0
  2309                           ; Regs used in _get_jump_full: [wreg+status,2+status,0+pclath+cstack]
  2310                           ;main.c: 291:     static signed char jump_counter;;main.c: 292:     do { ANSELAbits.ANSA
      +                          1 = 1; } while(0);
  2311                           
  2312  00D3  0023               	movlb	3	; select bank3
  2313  00D4  148C               	bsf	12,1	;volatile
  2314  00D5                     l2041:
  2315                           
  2316                           ;main.c: 293:     char flag = 0;
  2317  00D5  0020               	movlb	0	; select bank0
  2318  00D6  01BB               	clrf	get_jump_full@flag
  2319  00D7                     l2043:
  2320                           
  2321                           ;main.c: 295:         unsigned res = ADC_GetConversion(PIN_JUMP_STATE);
  2322  00D7  3001               	movlw	1
  2323  00D8  3183  2367  3180   	fcall	_ADC_GetConversion
  2324  00DB  0020               	movlb	0	; select bank0
  2325  00DC  00B7               	movwf	??_get_jump_full
  2326  00DD  01B8               	clrf	??_get_jump_full+1
  2327  00DE  0837               	movf	??_get_jump_full,w
  2328  00DF  00B9               	movwf	get_jump_full@res
  2329  00E0  0838               	movf	??_get_jump_full+1,w
  2330  00E1  00BA               	movwf	get_jump_full@res+1
  2331  00E2                     l2045:
  2332                           
  2333                           ;main.c: 296:         if (res < 25) jump_counter--;
  2334  00E2  3000               	movlw	0
  2335  00E3  023A               	subwf	get_jump_full@res+1,w
  2336  00E4  3019               	movlw	25
  2337  00E5  1903               	skipnz
  2338  00E6  0239               	subwf	get_jump_full@res,w
  2339  00E7  1803               	skipnc
  2340  00E8  28EA               	goto	u1001
  2341  00E9  28EB               	goto	u1000
  2342  00EA                     u1001:
  2343  00EA  28F0               	goto	l2049
  2344  00EB                     u1000:
  2345  00EB                     l2047:
  2346  00EB  30FF               	movlw	255
  2347  00EC  00B7               	movwf	??_get_jump_full
  2348  00ED  0837               	movf	??_get_jump_full,w
  2349  00EE  07B1               	addwf	get_jump_full@jump_counter,f
  2350  00EF  28F4               	goto	l2051
  2351  00F0                     l2049:
  2352  00F0  3001               	movlw	1
  2353  00F1  00B7               	movwf	??_get_jump_full
  2354  00F2  0837               	movf	??_get_jump_full,w
  2355  00F3  07B1               	addwf	get_jump_full@jump_counter,f
  2356  00F4                     l2051:
  2357                           
  2358                           ;main.c: 311:         if (jump_counter > 10) {
  2359  00F4  0831               	movf	get_jump_full@jump_counter,w
  2360  00F5  3A80               	xorlw	128
  2361  00F6  3E75               	addlw	-139
  2362  00F7  1C03               	skipc
  2363  00F8  28FA               	goto	u1011
  2364  00F9  28FB               	goto	u1010
  2365  00FA                     u1011:
  2366  00FA  2903               	goto	l2059
  2367  00FB                     u1010:
  2368  00FB                     l2053:
  2369                           
  2370                           ;main.c: 312:             jump_counter = 10;
  2371  00FB  300A               	movlw	10
  2372  00FC  00B7               	movwf	??_get_jump_full
  2373  00FD  0837               	movf	??_get_jump_full,w
  2374  00FE  00B1               	movwf	get_jump_full@jump_counter
  2375  00FF                     l2055:
  2376                           
  2377                           ;main.c: 313:             FLAGS.bits._JUMP_CONNECTED = 0;
  2378  00FF  11F7               	bcf	_FLAGS,3
  2379  0100                     l2057:
  2380                           
  2381                           ;main.c: 314:             flag = 1;
  2382  0100  01BB               	clrf	get_jump_full@flag
  2383  0101  0ABB               	incf	get_jump_full@flag,f
  2384                           
  2385                           ;main.c: 315:         } else if (jump_counter<-10) {
  2386  0102  2910               	goto	l2067
  2387  0103                     l2059:
  2388  0103  0831               	movf	get_jump_full@jump_counter,w
  2389  0104  3A80               	xorlw	128
  2390  0105  3E8A               	addlw	138
  2391  0106  1803               	skipnc
  2392  0107  2909               	goto	u1021
  2393  0108  290A               	goto	u1020
  2394  0109                     u1021:
  2395  0109  2910               	goto	l2067
  2396  010A                     u1020:
  2397  010A                     l2061:
  2398                           
  2399                           ;main.c: 316:             jump_counter = -10;
  2400  010A  30F6               	movlw	246
  2401  010B  00B7               	movwf	??_get_jump_full
  2402  010C  0837               	movf	??_get_jump_full,w
  2403  010D  00B1               	movwf	get_jump_full@jump_counter
  2404  010E                     l2063:
  2405                           
  2406                           ;main.c: 317:             FLAGS.bits._JUMP_CONNECTED = 1;
  2407  010E  15F7               	bsf	_FLAGS,3
  2408  010F  2900               	goto	l2057
  2409  0110                     l2067:
  2410                           
  2411                           ;main.c: 323:     } while (flag == 0);
  2412  0110  083B               	movf	get_jump_full@flag,w
  2413  0111  1903               	btfsc	3,2
  2414  0112  2914               	goto	u1031
  2415  0113  2915               	goto	u1030
  2416  0114                     u1031:
  2417  0114  28D7               	goto	l2043
  2418  0115                     u1030:
  2419  0115                     l412:	
  2420                           ;main.c: 324:     do { ANSELAbits.ANSA1 = 0; } while(0);
  2421                           
  2422  0115  0023               	movlb	3	; select bank3
  2423  0116  108C               	bcf	12,1	;volatile
  2424  0117                     l414:
  2425  0117  0008               	return
  2426  0118                     __end_of_get_jump_full:
  2427                           
  2428                           	psect	text5
  2429  0038                     __ptext5:	
  2430 ;; *************** function _get_fun_full *****************
  2431 ;; Defined at:
  2432 ;;		line 216 in file "main.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;		None
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  res             2    4[BANK0 ] unsigned int 
  2437 ;;  flag            1    6[BANK0 ] unsigned char 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      void 
  2440 ;; Registers used:
  2441 ;;		wreg, status,2, status,0, pclath, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMMON   BANK0   BANK1
  2447 ;;      Params:         0       0       0
  2448 ;;      Locals:         0       3       0
  2449 ;;      Temps:          0       2       0
  2450 ;;      Totals:         0       5       0
  2451 ;;Total ram usage:        5 bytes
  2452 ;; Hardware stack levels used: 1
  2453 ;; Hardware stack levels required when called: 8
  2454 ;; This function calls:
  2455 ;;		_ADC_GetConversion
  2456 ;; This function is called by:
  2457 ;;		_start_setup
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461  0038                     _get_fun_full:	
  2462                           ;psect for function _get_fun_full
  2463                           
  2464  0038                     l369:	
  2465                           ;incstack = 0
  2466                           ; Regs used in _get_fun_full: [wreg+status,2+status,0+pclath+cstack]
  2467                           ;main.c: 218:     static signed char fun_counter;;main.c: 219:     do { LATCbits.LATC1 =
      +                           1; } while(0);
  2468                           
  2469  0038  0022               	movlb	2	; select bank2
  2470  0039  148E               	bsf	14,1	;volatile
  2471  003A                     l371:	
  2472                           ;main.c: 220:     do { ANSELCbits.ANSC2 = 1; } while(0);
  2473                           
  2474  003A  0023               	movlb	3	; select bank3
  2475  003B  150E               	bsf	14,2	;volatile
  2476  003C                     l2011:
  2477                           
  2478                           ;main.c: 221:     char flag = 0;
  2479  003C  0020               	movlb	0	; select bank0
  2480  003D  01BB               	clrf	get_fun_full@flag
  2481  003E                     l2013:
  2482                           
  2483                           ;main.c: 223:         _delay((unsigned long)((1)*(16000000/4000.0)));
  2484  003E  3006               	movlw	6
  2485  003F  0020               	movlb	0	; select bank0
  2486  0040  00B7               	movwf	??_get_fun_full
  2487  0041  3030               	movlw	48
  2488  0042                     u1667:
  2489  0042  0B89               	decfsz	9,f
  2490  0043  2842               	goto	u1667
  2491  0044  0BB7               	decfsz	??_get_fun_full,f
  2492  0045  2842               	goto	u1667
  2493  0046  0000               	nop
  2494  0047                     l2015:
  2495                           
  2496                           ;main.c: 224:         unsigned res = ADC_GetConversion(PIN_FUN_STATE);
  2497  0047  3006               	movlw	6
  2498  0048  3183  2367  3180   	fcall	_ADC_GetConversion
  2499  004B  0020               	movlb	0	; select bank0
  2500  004C  00B7               	movwf	??_get_fun_full
  2501  004D  01B8               	clrf	??_get_fun_full+1
  2502  004E  0837               	movf	??_get_fun_full,w
  2503  004F  00B9               	movwf	get_fun_full@res
  2504  0050  0838               	movf	??_get_fun_full+1,w
  2505  0051  00BA               	movwf	get_fun_full@res+1
  2506  0052                     l2017:
  2507                           
  2508                           ;main.c: 225:         if (res < 25) fun_counter--;
  2509  0052  3000               	movlw	0
  2510  0053  023A               	subwf	get_fun_full@res+1,w
  2511  0054  3019               	movlw	25
  2512  0055  1903               	skipnz
  2513  0056  0239               	subwf	get_fun_full@res,w
  2514  0057  1803               	skipnc
  2515  0058  285A               	goto	u961
  2516  0059  285B               	goto	u960
  2517  005A                     u961:
  2518  005A  2860               	goto	l2021
  2519  005B                     u960:
  2520  005B                     l2019:
  2521  005B  30FF               	movlw	255
  2522  005C  00B7               	movwf	??_get_fun_full
  2523  005D  0837               	movf	??_get_fun_full,w
  2524  005E  07B3               	addwf	get_fun_full@fun_counter,f
  2525  005F  2864               	goto	l2023
  2526  0060                     l2021:
  2527  0060  3001               	movlw	1
  2528  0061  00B7               	movwf	??_get_fun_full
  2529  0062  0837               	movf	??_get_fun_full,w
  2530  0063  07B3               	addwf	get_fun_full@fun_counter,f
  2531  0064                     l2023:
  2532                           
  2533                           ;main.c: 241:         if (fun_counter > 10) {
  2534  0064  0833               	movf	get_fun_full@fun_counter,w
  2535  0065  3A80               	xorlw	128
  2536  0066  3E75               	addlw	-139
  2537  0067  1C03               	skipc
  2538  0068  286A               	goto	u971
  2539  0069  286B               	goto	u970
  2540  006A                     u971:
  2541  006A  2873               	goto	l2031
  2542  006B                     u970:
  2543  006B                     l2025:
  2544                           
  2545                           ;main.c: 242:             fun_counter = 10;
  2546  006B  300A               	movlw	10
  2547  006C  00B7               	movwf	??_get_fun_full
  2548  006D  0837               	movf	??_get_fun_full,w
  2549  006E  00B3               	movwf	get_fun_full@fun_counter
  2550  006F                     l2027:
  2551                           
  2552                           ;main.c: 243:             FLAGS.bits._FUN_CONNECTED = 0;
  2553  006F  1177               	bcf	_FLAGS,2
  2554  0070                     l2029:
  2555                           
  2556                           ;main.c: 244:             flag = 1;
  2557  0070  01BB               	clrf	get_fun_full@flag
  2558  0071  0ABB               	incf	get_fun_full@flag,f
  2559                           
  2560                           ;main.c: 245:         } else if (fun_counter<-10) {
  2561  0072  2880               	goto	l2039
  2562  0073                     l2031:
  2563  0073  0833               	movf	get_fun_full@fun_counter,w
  2564  0074  3A80               	xorlw	128
  2565  0075  3E8A               	addlw	138
  2566  0076  1803               	skipnc
  2567  0077  2879               	goto	u981
  2568  0078  287A               	goto	u980
  2569  0079                     u981:
  2570  0079  2880               	goto	l2039
  2571  007A                     u980:
  2572  007A                     l2033:
  2573                           
  2574                           ;main.c: 246:             fun_counter = 10;
  2575  007A  300A               	movlw	10
  2576  007B  00B7               	movwf	??_get_fun_full
  2577  007C  0837               	movf	??_get_fun_full,w
  2578  007D  00B3               	movwf	get_fun_full@fun_counter
  2579  007E                     l2035:
  2580                           
  2581                           ;main.c: 247:             FLAGS.bits._FUN_CONNECTED = 1;
  2582  007E  1577               	bsf	_FLAGS,2
  2583  007F  2870               	goto	l2029
  2584  0080                     l2039:
  2585                           
  2586                           ;main.c: 252:     } while (flag == 0);
  2587  0080  083B               	movf	get_fun_full@flag,w
  2588  0081  1903               	btfsc	3,2
  2589  0082  2884               	goto	u991
  2590  0083  2885               	goto	u990
  2591  0084                     u991:
  2592  0084  283E               	goto	l2013
  2593  0085                     u990:
  2594  0085                     l380:	
  2595                           ;main.c: 254:     do { ANSELCbits.ANSC2 = 0; } while(0);
  2596                           
  2597  0085  0023               	movlb	3	; select bank3
  2598  0086  110E               	bcf	14,2	;volatile
  2599  0087                     l382:	
  2600                           ;main.c: 255:     do { LATCbits.LATC1 = 0; } while(0);
  2601                           
  2602  0087  0022               	movlb	2	; select bank2
  2603  0088  108E               	bcf	14,1	;volatile
  2604  0089                     l384:
  2605  0089  0008               	return
  2606  008A                     __end_of_get_fun_full:
  2607                           
  2608                           	psect	text6
  2609  04AB                     __ptext6:	
  2610 ;; *************** function _TMR2_StartTimer *****************
  2611 ;; Defined at:
  2612 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;		None
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		None
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMMON   BANK0   BANK1
  2626 ;;      Params:         0       0       0
  2627 ;;      Locals:         0       0       0
  2628 ;;      Temps:          0       0       0
  2629 ;;      Totals:         0       0       0
  2630 ;;Total ram usage:        0 bytes
  2631 ;; Hardware stack levels used: 1
  2632 ;; Hardware stack levels required when called: 7
  2633 ;; This function calls:
  2634 ;;		Nothing
  2635 ;; This function is called by:
  2636 ;;		_start_setup
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640  04AB                     _TMR2_StartTimer:	
  2641                           ;psect for function _TMR2_StartTimer
  2642                           
  2643  04AB                     l2321:	
  2644                           ;incstack = 0
  2645                           ; Regs used in _TMR2_StartTimer: []
  2646                           
  2647                           
  2648                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  2649  04AB  0020               	movlb	0	; select bank0
  2650  04AC  151C               	bsf	28,2	;volatile
  2651  04AD                     l140:
  2652  04AD  0008               	return
  2653  04AE                     __end_of_TMR2_StartTimer:
  2654                           
  2655                           	psect	text7
  2656  03B3                     __ptext7:	
  2657 ;; *************** function _SYSTEM_Initialize *****************
  2658 ;; Defined at:
  2659 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;		None
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;		None
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  1    wreg      void 
  2666 ;; Registers used:
  2667 ;;		wreg, status,2, status,0, pclath, cstack
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMMON   BANK0   BANK1
  2673 ;;      Params:         0       0       0
  2674 ;;      Locals:         0       0       0
  2675 ;;      Temps:          0       0       0
  2676 ;;      Totals:         0       0       0
  2677 ;;Total ram usage:        0 bytes
  2678 ;; Hardware stack levels used: 1
  2679 ;; Hardware stack levels required when called: 9
  2680 ;; This function calls:
  2681 ;;		_ADC_Initialize
  2682 ;;		_FVR_Initialize
  2683 ;;		_OSCILLATOR_Initialize
  2684 ;;		_PIN_MANAGER_Initialize
  2685 ;;		_TMR0_Initialize
  2686 ;;		_TMR2_Initialize
  2687 ;;		_WDT_Initialize
  2688 ;; This function is called by:
  2689 ;;		_start_setup
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693  03B3                     _SYSTEM_Initialize:	
  2694                           ;psect for function _SYSTEM_Initialize
  2695                           
  2696  03B3                     l2319:	
  2697                           ;incstack = 0
  2698                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2699                           
  2700                           
  2701                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2702  03B3  3183  23DF  3183   	fcall	_PIN_MANAGER_Initialize
  2703                           
  2704                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2705  03B6  3184  247B  3183   	fcall	_OSCILLATOR_Initialize
  2706                           
  2707                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2708  03B9  3184  24A3  3183   	fcall	_WDT_Initialize
  2709                           
  2710                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  2711  03BC  3184  24A7  3183   	fcall	_FVR_Initialize
  2712                           
  2713                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2714  03BF  3184  2473  3183   	fcall	_ADC_Initialize
  2715                           
  2716                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  2717  03C2  3184  2409  3183   	fcall	_TMR2_Initialize
  2718                           
  2719                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  2720  03C5  3183  23C9  3183   	fcall	_TMR0_Initialize
  2721  03C8                     l25:
  2722  03C8  0008               	return
  2723  03C9                     __end_of_SYSTEM_Initialize:
  2724                           
  2725                           	psect	text8
  2726  04A3                     __ptext8:	
  2727 ;; *************** function _WDT_Initialize *****************
  2728 ;; Defined at:
  2729 ;;		line 72 in file "mcc_generated_files/mcc.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMMON   BANK0   BANK1
  2743 ;;      Params:         0       0       0
  2744 ;;      Locals:         0       0       0
  2745 ;;      Temps:          0       0       0
  2746 ;;      Totals:         0       0       0
  2747 ;;Total ram usage:        0 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; Hardware stack levels required when called: 7
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_SYSTEM_Initialize
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757  04A3                     _WDT_Initialize:	
  2758                           ;psect for function _WDT_Initialize
  2759                           
  2760  04A3                     l2281:	
  2761                           ;incstack = 0
  2762                           ; Regs used in _WDT_Initialize: [wreg]
  2763                           
  2764                           
  2765                           ;mcc_generated_files/mcc.c: 75:     WDTCON = 0x14;
  2766  04A3  3014               	movlw	20
  2767  04A4  0021               	movlb	1	; select bank1
  2768  04A5  0097               	movwf	23	;volatile
  2769  04A6                     l31:
  2770  04A6  0008               	return
  2771  04A7                     __end_of_WDT_Initialize:
  2772                           
  2773                           	psect	text9
  2774  0409                     __ptext9:	
  2775 ;; *************** function _TMR2_Initialize *****************
  2776 ;; Defined at:
  2777 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;		None
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;		None
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      void 
  2784 ;; Registers used:
  2785 ;;		wreg, status,2, status,0, pclath, cstack
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMMON   BANK0   BANK1
  2791 ;;      Params:         0       0       0
  2792 ;;      Locals:         0       0       0
  2793 ;;      Temps:          0       0       0
  2794 ;;      Totals:         0       0       0
  2795 ;;Total ram usage:        0 bytes
  2796 ;; Hardware stack levels used: 1
  2797 ;; Hardware stack levels required when called: 8
  2798 ;; This function calls:
  2799 ;;		_TMR2_SetInterruptHandler
  2800 ;; This function is called by:
  2801 ;;		_SYSTEM_Initialize
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805  0409                     _TMR2_Initialize:	
  2806                           ;psect for function _TMR2_Initialize
  2807                           
  2808  0409                     l2291:	
  2809                           ;incstack = 0
  2810                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2811                           
  2812                           
  2813                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x63;
  2814  0409  3063               	movlw	99
  2815  040A  0020               	movlb	0	; select bank0
  2816  040B  009B               	movwf	27	;volatile
  2817  040C                     l2293:
  2818                           
  2819                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  2820  040C  019A               	clrf	26	;volatile
  2821  040D                     l2295:
  2822                           
  2823                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  2824  040D  1091               	bcf	17,1	;volatile
  2825  040E                     l2297:
  2826                           
  2827                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  2828  040E  0021               	movlb	1	; select bank1
  2829  040F  1491               	bsf	17,1	;volatile
  2830  0410                     l2299:
  2831                           
  2832                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  2833  0410  30B8               	movlw	low _TMR2_DefaultInterruptHandler
  2834  0411  0020               	movlb	0	; select bank0
  2835  0412  00B5               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2836  0413  3004               	movlw	high _TMR2_DefaultInterruptHandler
  2837  0414  00B6               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2838  0415  3184  2488  3184   	fcall	_TMR2_SetInterruptHandler
  2839  0418                     l2301:
  2840                           
  2841                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x4D;
  2842  0418  304D               	movlw	77
  2843  0419  0020               	movlb	0	; select bank0
  2844  041A  009C               	movwf	28	;volatile
  2845  041B                     l137:
  2846  041B  0008               	return
  2847  041C                     __end_of_TMR2_Initialize:
  2848                           
  2849                           	psect	text10
  2850  0488                     __ptext10:	
  2851 ;; *************** function _TMR2_SetInterruptHandler *****************
  2852 ;; Defined at:
  2853 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2856 ;;		 -> ms_tick(1), TMR2_DefaultInterruptHandler(1), 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;		None
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		wreg
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMMON   BANK0   BANK1
  2868 ;;      Params:         0       2       0
  2869 ;;      Locals:         0       0       0
  2870 ;;      Temps:          0       0       0
  2871 ;;      Totals:         0       2       0
  2872 ;;Total ram usage:        2 bytes
  2873 ;; Hardware stack levels used: 1
  2874 ;; Hardware stack levels required when called: 7
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		_TMR2_Initialize
  2879 ;;		_start_setup
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883  0488                     _TMR2_SetInterruptHandler:	
  2884                           ;psect for function _TMR2_SetInterruptHandler
  2885                           
  2886  0488                     l2259:	
  2887                           ;incstack = 0
  2888                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2889                           
  2890                           
  2891                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
  2892  0488  0020               	movlb	0	; select bank0
  2893  0489  0836               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2894  048A  00BF               	movwf	_TMR2_InterruptHandler+1
  2895  048B  0835               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2896  048C  00BE               	movwf	_TMR2_InterruptHandler
  2897  048D                     l159:
  2898  048D  0008               	return
  2899  048E                     __end_of_TMR2_SetInterruptHandler:
  2900                           
  2901                           	psect	text11
  2902  03C9                     __ptext11:	
  2903 ;; *************** function _TMR0_Initialize *****************
  2904 ;; Defined at:
  2905 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;		None
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;		None
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      void 
  2912 ;; Registers used:
  2913 ;;		wreg, status,2, status,0, pclath, cstack
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMMON   BANK0   BANK1
  2919 ;;      Params:         0       0       0
  2920 ;;      Locals:         0       0       0
  2921 ;;      Temps:          0       1       0
  2922 ;;      Totals:         0       1       0
  2923 ;;Total ram usage:        1 bytes
  2924 ;; Hardware stack levels used: 1
  2925 ;; Hardware stack levels required when called: 8
  2926 ;; This function calls:
  2927 ;;		_TMR0_SetInterruptHandler
  2928 ;; This function is called by:
  2929 ;;		_SYSTEM_Initialize
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933  03C9                     _TMR0_Initialize:	
  2934                           ;psect for function _TMR0_Initialize
  2935                           
  2936  03C9                     l2303:	
  2937                           ;incstack = 0
  2938                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2939                           
  2940                           
  2941                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD2 
      +                          & 0x3F));
  2942  03C9  0021               	movlb	1	; select bank1
  2943  03CA  0815               	movf	21,w	;volatile
  2944  03CB  39C0               	andlw	192
  2945  03CC  3812               	iorlw	18
  2946  03CD  0095               	movwf	21	;volatile
  2947  03CE                     l2305:
  2948                           
  2949                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x9C;
  2950  03CE  309C               	movlw	156
  2951  03CF  0020               	movlb	0	; select bank0
  2952  03D0  0095               	movwf	21	;volatile
  2953  03D1                     l2307:
  2954                           
  2955                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 156;
  2956  03D1  309C               	movlw	156
  2957  03D2  00B7               	movwf	??_TMR0_Initialize
  2958  03D3  0837               	movf	??_TMR0_Initialize,w
  2959  03D4  00C0               	movwf	_timer0ReloadVal	;volatile
  2960  03D5                     l2309:
  2961                           
  2962                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  2963  03D5  110B               	bcf	11,2	;volatile
  2964  03D6                     l2311:
  2965                           
  2966                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  2967  03D6  168B               	bsf	11,5	;volatile
  2968  03D7                     l2313:
  2969                           
  2970                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2971  03D7  30B9               	movlw	low _TMR0_DefaultInterruptHandler
  2972  03D8  00B5               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2973  03D9  3004               	movlw	high _TMR0_DefaultInterruptHandler
  2974  03DA  00B6               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2975  03DB  3184  248E  3183   	fcall	_TMR0_SetInterruptHandler
  2976  03DE                     l179:
  2977  03DE  0008               	return
  2978  03DF                     __end_of_TMR0_Initialize:
  2979                           
  2980                           	psect	text12
  2981  048E                     __ptext12:	
  2982 ;; *************** function _TMR0_SetInterruptHandler *****************
  2983 ;; Defined at:
  2984 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2987 ;;		 -> switch_zum(1), TMR0_DefaultInterruptHandler(1), 
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;		None
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      void 
  2992 ;; Registers used:
  2993 ;;		wreg
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMMON   BANK0   BANK1
  2999 ;;      Params:         0       2       0
  3000 ;;      Locals:         0       0       0
  3001 ;;      Temps:          0       0       0
  3002 ;;      Totals:         0       2       0
  3003 ;;Total ram usage:        2 bytes
  3004 ;; Hardware stack levels used: 1
  3005 ;; Hardware stack levels required when called: 7
  3006 ;; This function calls:
  3007 ;;		Nothing
  3008 ;; This function is called by:
  3009 ;;		_TMR0_Initialize
  3010 ;;		_start_setup
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014  048E                     _TMR0_SetInterruptHandler:	
  3015                           ;psect for function _TMR0_SetInterruptHandler
  3016                           
  3017  048E                     l2261:	
  3018                           ;incstack = 0
  3019                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  3020                           
  3021                           
  3022                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  3023  048E  0020               	movlb	0	; select bank0
  3024  048F  0836               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  3025  0490  00BD               	movwf	_TMR0_InterruptHandler+1
  3026  0491  0835               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  3027  0492  00BC               	movwf	_TMR0_InterruptHandler
  3028  0493                     l195:
  3029  0493  0008               	return
  3030  0494                     __end_of_TMR0_SetInterruptHandler:
  3031                           
  3032                           	psect	text13
  3033  03DF                     __ptext13:	
  3034 ;; *************** function _PIN_MANAGER_Initialize *****************
  3035 ;; Defined at:
  3036 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;		None
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;		None
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		wreg, status,2
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMMON   BANK0   BANK1
  3050 ;;      Params:         0       0       0
  3051 ;;      Locals:         0       0       0
  3052 ;;      Temps:          0       0       0
  3053 ;;      Totals:         0       0       0
  3054 ;;Total ram usage:        0 bytes
  3055 ;; Hardware stack levels used: 1
  3056 ;; Hardware stack levels required when called: 7
  3057 ;; This function calls:
  3058 ;;		Nothing
  3059 ;; This function is called by:
  3060 ;;		_SYSTEM_Initialize
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064  03DF                     _PIN_MANAGER_Initialize:	
  3065                           ;psect for function _PIN_MANAGER_Initialize
  3066                           
  3067  03DF                     l2263:	
  3068                           ;incstack = 0
  3069                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3070                           
  3071                           
  3072                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3073  03DF  0022               	movlb	2	; select bank2
  3074  03E0  018C               	clrf	12	;volatile
  3075                           
  3076                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  3077  03E1  018E               	clrf	14	;volatile
  3078  03E2                     l2265:
  3079                           
  3080                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x0F;
  3081  03E2  300F               	movlw	15
  3082  03E3  0021               	movlb	1	; select bank1
  3083  03E4  008C               	movwf	12	;volatile
  3084  03E5                     l2267:
  3085                           
  3086                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x0C;
  3087  03E5  300C               	movlw	12
  3088  03E6  008E               	movwf	14	;volatile
  3089  03E7                     l2269:
  3090                           
  3091                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x0C;
  3092  03E7  300C               	movlw	12
  3093  03E8  0023               	movlb	3	; select bank3
  3094  03E9  008E               	movwf	14	;volatile
  3095  03EA                     l2271:
  3096                           
  3097                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x07;
  3098  03EA  3007               	movlw	7
  3099  03EB  008C               	movwf	12	;volatile
  3100                           
  3101                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  3102  03EC  0024               	movlb	4	; select bank4
  3103  03ED  018C               	clrf	12	;volatile
  3104                           
  3105                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  3106  03EE  018E               	clrf	14	;volatile
  3107  03EF                     l2273:
  3108                           
  3109                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  3110  03EF  0021               	movlb	1	; select bank1
  3111  03F0  1795               	bsf	21,7	;volatile
  3112                           
  3113                           ;mcc_generated_files/pin_manager.c: 86:     APFCON = 0x00;
  3114  03F1  0022               	movlb	2	; select bank2
  3115  03F2  019D               	clrf	29	;volatile
  3116  03F3                     l92:
  3117  03F3  0008               	return
  3118  03F4                     __end_of_PIN_MANAGER_Initialize:
  3119                           
  3120                           	psect	text14
  3121  047B                     __ptext14:	
  3122 ;; *************** function _OSCILLATOR_Initialize *****************
  3123 ;; Defined at:
  3124 ;;		line 62 in file "mcc_generated_files/mcc.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg, status,2
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMMON   BANK0   BANK1
  3138 ;;      Params:         0       0       0
  3139 ;;      Locals:         0       0       0
  3140 ;;      Temps:          0       0       0
  3141 ;;      Totals:         0       0       0
  3142 ;;Total ram usage:        0 bytes
  3143 ;; Hardware stack levels used: 1
  3144 ;; Hardware stack levels required when called: 7
  3145 ;; This function calls:
  3146 ;;		Nothing
  3147 ;; This function is called by:
  3148 ;;		_SYSTEM_Initialize
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152  047B                     _OSCILLATOR_Initialize:	
  3153                           ;psect for function _OSCILLATOR_Initialize
  3154                           
  3155  047B                     l2275:	
  3156                           ;incstack = 0
  3157                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3158                           
  3159                           
  3160                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x78;
  3161  047B  3078               	movlw	120
  3162  047C  0021               	movlb	1	; select bank1
  3163  047D  0099               	movwf	25	;volatile
  3164  047E                     l2277:
  3165                           
  3166                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  3167  047E  0198               	clrf	24	;volatile
  3168  047F                     l2279:
  3169                           
  3170                           ;mcc_generated_files/mcc.c: 69:     BORCON = 0x00;
  3171  047F  0022               	movlb	2	; select bank2
  3172  0480  0196               	clrf	22	;volatile
  3173  0481                     l28:
  3174  0481  0008               	return
  3175  0482                     __end_of_OSCILLATOR_Initialize:
  3176                           
  3177                           	psect	text15
  3178  04A7                     __ptext15:	
  3179 ;; *************** function _FVR_Initialize *****************
  3180 ;; Defined at:
  3181 ;;		line 58 in file "mcc_generated_files/fvr.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;		None
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;		None
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      void 
  3188 ;; Registers used:
  3189 ;;		wreg
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMMON   BANK0   BANK1
  3195 ;;      Params:         0       0       0
  3196 ;;      Locals:         0       0       0
  3197 ;;      Temps:          0       0       0
  3198 ;;      Totals:         0       0       0
  3199 ;;Total ram usage:        0 bytes
  3200 ;; Hardware stack levels used: 1
  3201 ;; Hardware stack levels required when called: 7
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		_SYSTEM_Initialize
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209  04A7                     _FVR_Initialize:	
  3210                           ;psect for function _FVR_Initialize
  3211                           
  3212  04A7                     l2283:	
  3213                           ;incstack = 0
  3214                           ; Regs used in _FVR_Initialize: [wreg]
  3215                           
  3216                           
  3217                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  3218  04A7  3082               	movlw	130
  3219  04A8  0022               	movlb	2	; select bank2
  3220  04A9  0097               	movwf	23	;volatile
  3221  04AA                     l205:
  3222  04AA  0008               	return
  3223  04AB                     __end_of_FVR_Initialize:
  3224                           
  3225                           	psect	text16
  3226  0473                     __ptext16:	
  3227 ;; *************** function _ADC_Initialize *****************
  3228 ;; Defined at:
  3229 ;;		line 67 in file "mcc_generated_files/adc.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;		None
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  1    wreg      void 
  3236 ;; Registers used:
  3237 ;;		wreg, status,2
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1
  3243 ;;      Params:         0       0       0
  3244 ;;      Locals:         0       0       0
  3245 ;;      Temps:          0       0       0
  3246 ;;      Totals:         0       0       0
  3247 ;;Total ram usage:        0 bytes
  3248 ;; Hardware stack levels used: 1
  3249 ;; Hardware stack levels required when called: 7
  3250 ;; This function calls:
  3251 ;;		Nothing
  3252 ;; This function is called by:
  3253 ;;		_SYSTEM_Initialize
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257  0473                     _ADC_Initialize:	
  3258                           ;psect for function _ADC_Initialize
  3259                           
  3260  0473                     l2285:	
  3261                           ;incstack = 0
  3262                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3263                           
  3264                           
  3265                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x50;
  3266  0473  3050               	movlw	80
  3267  0474  0021               	movlb	1	; select bank1
  3268  0475  009E               	movwf	30	;volatile
  3269  0476                     l2287:
  3270                           
  3271                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  3272  0476  019B               	clrf	27	;volatile
  3273  0477                     l2289:
  3274                           
  3275                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  3276  0477  019C               	clrf	28	;volatile
  3277                           
  3278                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x7D;
  3279  0478  307D               	movlw	125
  3280  0479  009D               	movwf	29	;volatile
  3281  047A                     l48:
  3282  047A  0008               	return
  3283  047B                     __end_of_ADC_Initialize:
  3284                           
  3285                           	psect	text17
  3286  02E4                     __ptext17:	
  3287 ;; *************** function _povorot *****************
  3288 ;; Defined at:
  3289 ;;		line 377 in file "main.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;		None
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;		None
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1    wreg      void 
  3296 ;; Registers used:
  3297 ;;		wreg, status,2, status,0, pclath, cstack
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMMON   BANK0   BANK1
  3303 ;;      Params:         0       0       0
  3304 ;;      Locals:         0       0       0
  3305 ;;      Temps:          0       0       0
  3306 ;;      Totals:         0       0       0
  3307 ;;Total ram usage:        0 bytes
  3308 ;; Hardware stack levels used: 1
  3309 ;; Hardware stack levels required when called: 8
  3310 ;; This function calls:
  3311 ;;		_go_close
  3312 ;; This function is called by:
  3313 ;;		_main
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317  02E4                     _povorot:	
  3318                           ;psect for function _povorot
  3319                           
  3320  02E4                     l2377:	
  3321                           ;incstack = 0
  3322                           ; Regs used in _povorot: [wreg+status,2+status,0+pclath+cstack]
  3323                           
  3324                           
  3325                           ;main.c: 378:     if ((time_rotation > 90) &&
  3326  02E4  3000               	movlw	0
  3327  02E5  0020               	movlb	0	; select bank0
  3328  02E6  0222               	subwf	_time_rotation+2,w
  3329  02E7  1D03               	skipz
  3330  02E8  2AEF               	goto	u1415
  3331  02E9  3000               	movlw	0
  3332  02EA  0221               	subwf	_time_rotation+1,w
  3333  02EB  1D03               	skipz
  3334  02EC  2AEF               	goto	u1415
  3335  02ED  305B               	movlw	91
  3336  02EE  0220               	subwf	_time_rotation,w
  3337  02EF                     u1415:
  3338  02EF  1C03               	skipc
  3339  02F0  2AF2               	goto	u1411
  3340  02F1  2AF3               	goto	u1410
  3341  02F2                     u1411:
  3342  02F2  2B06               	goto	l445
  3343  02F3                     u1410:
  3344  02F3                     l2379:
  3345  02F3  1978               	btfsc	_FLAGS+1,2
  3346  02F4  2AF6               	goto	u1421
  3347  02F5  2AF7               	goto	u1420
  3348  02F6                     u1421:
  3349  02F6  2B06               	goto	l445
  3350  02F7                     u1420:
  3351  02F7                     l2381:
  3352  02F7  18F8               	btfsc	_FLAGS+1,1
  3353  02F8  2AFA               	goto	u1431
  3354  02F9  2AFB               	goto	u1430
  3355  02FA                     u1431:
  3356  02FA  2B06               	goto	l445
  3357  02FB                     u1430:
  3358  02FB                     l2383:
  3359  02FB  1877               	btfsc	_FLAGS,0
  3360  02FC  2AFE               	goto	u1441
  3361  02FD  2AFF               	goto	u1440
  3362  02FE                     u1441:
  3363  02FE  2B06               	goto	l445
  3364  02FF                     u1440:
  3365  02FF                     l2385:
  3366  02FF  1CF7               	btfss	_FLAGS,1
  3367  0300  2B02               	goto	u1451
  3368  0301  2B03               	goto	u1450
  3369  0302                     u1451:
  3370  0302  2B06               	goto	l445
  3371  0303                     u1450:
  3372  0303                     l2387:
  3373                           
  3374                           ;main.c: 383:             ) {;main.c: 384:         go_close();
  3375  0303  3183  2327  3182   	fcall	_go_close
  3376  0306                     l445:
  3377  0306  0008               	return
  3378  0307                     __end_of_povorot:
  3379                           
  3380                           	psect	text18
  3381  019C                     __ptext18:	
  3382 ;; *************** function _get_jump *****************
  3383 ;; Defined at:
  3384 ;;		line 259 in file "main.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;		None
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;  res             2    4[BANK0 ] unsigned int 
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg, status,2, status,0, pclath, cstack
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMMON   BANK0   BANK1
  3398 ;;      Params:         0       0       0
  3399 ;;      Locals:         0       2       0
  3400 ;;      Temps:          0       2       0
  3401 ;;      Totals:         0       4       0
  3402 ;;Total ram usage:        4 bytes
  3403 ;; Hardware stack levels used: 1
  3404 ;; Hardware stack levels required when called: 8
  3405 ;; This function calls:
  3406 ;;		_ADC_GetConversion
  3407 ;; This function is called by:
  3408 ;;		_main
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412  019C                     _get_jump:	
  3413                           ;psect for function _get_jump
  3414                           
  3415  019C                     l389:	
  3416                           ;incstack = 0
  3417                           ; Regs used in _get_jump: [wreg+status,2+status,0+pclath+cstack]
  3418                           ;main.c: 261:     static signed char jump_counter;;main.c: 262:     do { ANSELAbits.ANSA
      +                          1 = 1; } while(0);
  3419                           
  3420  019C  0023               	movlb	3	; select bank3
  3421  019D  148C               	bsf	12,1	;volatile
  3422  019E                     l2119:
  3423                           
  3424                           ;main.c: 263:     unsigned res = ADC_GetConversion(PIN_JUMP_STATE);
  3425  019E  3001               	movlw	1
  3426  019F  3183  2367  3181   	fcall	_ADC_GetConversion
  3427  01A2  0020               	movlb	0	; select bank0
  3428  01A3  00B7               	movwf	??_get_jump
  3429  01A4  01B8               	clrf	??_get_jump+1
  3430  01A5  0837               	movf	??_get_jump,w
  3431  01A6  00B9               	movwf	get_jump@res
  3432  01A7  0838               	movf	??_get_jump+1,w
  3433  01A8  00BA               	movwf	get_jump@res+1
  3434  01A9                     l2121:
  3435  01A9  0023               	movlb	3	; select bank3
  3436  01AA  108C               	bcf	12,1	;volatile
  3437  01AB                     l2123:
  3438                           
  3439                           ;main.c: 265:     if (res < 25) jump_counter--;
  3440  01AB  3000               	movlw	0
  3441  01AC  0020               	movlb	0	; select bank0
  3442  01AD  023A               	subwf	get_jump@res+1,w
  3443  01AE  3019               	movlw	25
  3444  01AF  1903               	skipnz
  3445  01B0  0239               	subwf	get_jump@res,w
  3446  01B1  1803               	skipnc
  3447  01B2  29B4               	goto	u1101
  3448  01B3  29B5               	goto	u1100
  3449  01B4                     u1101:
  3450  01B4  29BA               	goto	l2127
  3451  01B5                     u1100:
  3452  01B5                     l2125:
  3453  01B5  30FF               	movlw	255
  3454  01B6  00B7               	movwf	??_get_jump
  3455  01B7  0837               	movf	??_get_jump,w
  3456  01B8  07B2               	addwf	get_jump@jump_counter,f
  3457  01B9  29BE               	goto	l2129
  3458  01BA                     l2127:
  3459  01BA  3001               	movlw	1
  3460  01BB  00B7               	movwf	??_get_jump
  3461  01BC  0837               	movf	??_get_jump,w
  3462  01BD  07B2               	addwf	get_jump@jump_counter,f
  3463  01BE                     l2129:
  3464                           
  3465                           ;main.c: 277:     if (jump_counter > 10) {
  3466  01BE  0832               	movf	get_jump@jump_counter,w
  3467  01BF  3A80               	xorlw	128
  3468  01C0  3E75               	addlw	-139
  3469  01C1  1C03               	skipc
  3470  01C2  29C4               	goto	u1111
  3471  01C3  29C5               	goto	u1110
  3472  01C4                     u1111:
  3473  01C4  29CB               	goto	l2135
  3474  01C5                     u1110:
  3475  01C5                     l2131:
  3476                           
  3477                           ;main.c: 278:         jump_counter = 10;
  3478  01C5  300A               	movlw	10
  3479  01C6  00B7               	movwf	??_get_jump
  3480  01C7  0837               	movf	??_get_jump,w
  3481  01C8  00B2               	movwf	get_jump@jump_counter
  3482  01C9                     l2133:
  3483                           
  3484                           ;main.c: 279:         FLAGS.bits._JUMP_CONNECTED = 0;
  3485  01C9  11F7               	bcf	_FLAGS,3
  3486                           
  3487                           ;main.c: 280:     } else if (jump_counter<-10) {
  3488  01CA  29D7               	goto	l398
  3489  01CB                     l2135:
  3490  01CB  0832               	movf	get_jump@jump_counter,w
  3491  01CC  3A80               	xorlw	128
  3492  01CD  3E8A               	addlw	138
  3493  01CE  1803               	skipnc
  3494  01CF  29D1               	goto	u1121
  3495  01D0  29D2               	goto	u1120
  3496  01D1                     u1121:
  3497  01D1  29D7               	goto	l398
  3498  01D2                     u1120:
  3499  01D2                     l2137:
  3500                           
  3501                           ;main.c: 281:         jump_counter = -10;
  3502  01D2  30F6               	movlw	246
  3503  01D3  00B7               	movwf	??_get_jump
  3504  01D4  0837               	movf	??_get_jump,w
  3505  01D5  00B2               	movwf	get_jump@jump_counter
  3506  01D6                     l2139:
  3507                           
  3508                           ;main.c: 282:         FLAGS.bits._JUMP_CONNECTED = 1;
  3509  01D6  15F7               	bsf	_FLAGS,3
  3510  01D7                     l398:
  3511  01D7  0008               	return
  3512  01D8                     __end_of_get_jump:
  3513                           
  3514                           	psect	text19
  3515  008A                     __ptext19:	
  3516 ;; *************** function _get_fun *****************
  3517 ;; Defined at:
  3518 ;;		line 182 in file "main.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;		None
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  res             2    4[BANK0 ] unsigned int 
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  1    wreg      void 
  3525 ;; Registers used:
  3526 ;;		wreg, status,2, status,0, pclath, cstack
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMMON   BANK0   BANK1
  3532 ;;      Params:         0       0       0
  3533 ;;      Locals:         0       2       0
  3534 ;;      Temps:          0       2       0
  3535 ;;      Totals:         0       4       0
  3536 ;;Total ram usage:        4 bytes
  3537 ;; Hardware stack levels used: 1
  3538 ;; Hardware stack levels required when called: 8
  3539 ;; This function calls:
  3540 ;;		_ADC_GetConversion
  3541 ;; This function is called by:
  3542 ;;		_main
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546  008A                     _get_fun:	
  3547                           ;psect for function _get_fun
  3548                           
  3549  008A                     l351:	
  3550                           ;incstack = 0
  3551                           ; Regs used in _get_fun: [wreg+status,2+status,0+pclath+cstack]
  3552                           ;main.c: 184:     static signed char fun_counter;;main.c: 185:     do { LATCbits.LATC1 =
      +                           1; } while(0);
  3553                           
  3554  008A  0022               	movlb	2	; select bank2
  3555  008B  148E               	bsf	14,1	;volatile
  3556  008C                     l353:	
  3557                           ;main.c: 186:     do { ANSELCbits.ANSC2 = 1; } while(0);
  3558                           
  3559  008C  0023               	movlb	3	; select bank3
  3560  008D  150E               	bsf	14,2	;volatile
  3561  008E                     l2091:
  3562                           
  3563                           ;main.c: 188:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3564  008E  3006               	movlw	6
  3565  008F  0020               	movlb	0	; select bank0
  3566  0090  00B7               	movwf	??_get_fun
  3567  0091  3030               	movlw	48
  3568  0092                     u1677:
  3569  0092  0B89               	decfsz	9,f
  3570  0093  2892               	goto	u1677
  3571  0094  0BB7               	decfsz	??_get_fun,f
  3572  0095  2892               	goto	u1677
  3573  0096  0000               	nop
  3574  0097                     l2093:
  3575                           
  3576                           ;main.c: 189:     unsigned res = ADC_GetConversion(PIN_FUN_STATE);
  3577  0097  3006               	movlw	6
  3578  0098  3183  2367  3180   	fcall	_ADC_GetConversion
  3579  009B  0020               	movlb	0	; select bank0
  3580  009C  00B7               	movwf	??_get_fun
  3581  009D  01B8               	clrf	??_get_fun+1
  3582  009E  0837               	movf	??_get_fun,w
  3583  009F  00B9               	movwf	get_fun@res
  3584  00A0  0838               	movf	??_get_fun+1,w
  3585  00A1  00BA               	movwf	get_fun@res+1
  3586  00A2                     l2095:
  3587  00A2  0023               	movlb	3	; select bank3
  3588  00A3  110E               	bcf	14,2	;volatile
  3589  00A4                     l2097:
  3590  00A4  0022               	movlb	2	; select bank2
  3591  00A5  108E               	bcf	14,1	;volatile
  3592  00A6                     l2099:
  3593                           
  3594                           ;main.c: 192:     if (res < 25) fun_counter--;
  3595  00A6  3000               	movlw	0
  3596  00A7  0020               	movlb	0	; select bank0
  3597  00A8  023A               	subwf	get_fun@res+1,w
  3598  00A9  3019               	movlw	25
  3599  00AA  1903               	skipnz
  3600  00AB  0239               	subwf	get_fun@res,w
  3601  00AC  1803               	skipnc
  3602  00AD  28AF               	goto	u1071
  3603  00AE  28B0               	goto	u1070
  3604  00AF                     u1071:
  3605  00AF  28B5               	goto	l2103
  3606  00B0                     u1070:
  3607  00B0                     l2101:
  3608  00B0  30FF               	movlw	255
  3609  00B1  00B7               	movwf	??_get_fun
  3610  00B2  0837               	movf	??_get_fun,w
  3611  00B3  07B4               	addwf	get_fun@fun_counter,f
  3612  00B4  28B9               	goto	l2105
  3613  00B5                     l2103:
  3614  00B5  3001               	movlw	1
  3615  00B6  00B7               	movwf	??_get_fun
  3616  00B7  0837               	movf	??_get_fun,w
  3617  00B8  07B4               	addwf	get_fun@fun_counter,f
  3618  00B9                     l2105:
  3619                           
  3620                           ;main.c: 205:     if (fun_counter > 10) {
  3621  00B9  0834               	movf	get_fun@fun_counter,w
  3622  00BA  3A80               	xorlw	128
  3623  00BB  3E75               	addlw	-139
  3624  00BC  1C03               	skipc
  3625  00BD  28BF               	goto	u1081
  3626  00BE  28C0               	goto	u1080
  3627  00BF                     u1081:
  3628  00BF  28C6               	goto	l2111
  3629  00C0                     u1080:
  3630  00C0                     l2107:
  3631                           
  3632                           ;main.c: 206:         fun_counter = 10;
  3633  00C0  300A               	movlw	10
  3634  00C1  00B7               	movwf	??_get_fun
  3635  00C2  0837               	movf	??_get_fun,w
  3636  00C3  00B4               	movwf	get_fun@fun_counter
  3637  00C4                     l2109:
  3638                           
  3639                           ;main.c: 207:         FLAGS.bits._FUN_CONNECTED = 0;
  3640  00C4  1177               	bcf	_FLAGS,2
  3641                           
  3642                           ;main.c: 208:     } else if (fun_counter<-10) {
  3643  00C5  28D2               	goto	l364
  3644  00C6                     l2111:
  3645  00C6  0834               	movf	get_fun@fun_counter,w
  3646  00C7  3A80               	xorlw	128
  3647  00C8  3E8A               	addlw	138
  3648  00C9  1803               	skipnc
  3649  00CA  28CC               	goto	u1091
  3650  00CB  28CD               	goto	u1090
  3651  00CC                     u1091:
  3652  00CC  28D2               	goto	l364
  3653  00CD                     u1090:
  3654  00CD                     l2113:
  3655                           
  3656                           ;main.c: 209:         fun_counter = -10;
  3657  00CD  30F6               	movlw	246
  3658  00CE  00B7               	movwf	??_get_fun
  3659  00CF  0837               	movf	??_get_fun,w
  3660  00D0  00B4               	movwf	get_fun@fun_counter
  3661  00D1                     l2115:
  3662                           
  3663                           ;main.c: 210:         FLAGS.bits._FUN_CONNECTED = 1;
  3664  00D1  1577               	bsf	_FLAGS,2
  3665  00D2                     l364:
  3666  00D2  0008               	return
  3667  00D3                     __end_of_get_fun:
  3668                           
  3669                           	psect	text20
  3670  0367                     __ptext20:	
  3671 ;; *************** function _ADC_GetConversion *****************
  3672 ;; Defined at:
  3673 ;;		line 111 in file "mcc_generated_files/adc.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  channel         1    wreg     enum E2178
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;  channel         1    1[BANK0 ] enum E2178
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      unsigned char 
  3680 ;; Registers used:
  3681 ;;		wreg, status,2, status,0
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMMON   BANK0   BANK1
  3687 ;;      Params:         0       0       0
  3688 ;;      Locals:         0       1       0
  3689 ;;      Temps:          0       1       0
  3690 ;;      Totals:         0       2       0
  3691 ;;Total ram usage:        2 bytes
  3692 ;; Hardware stack levels used: 1
  3693 ;; Hardware stack levels required when called: 7
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_get_fun
  3698 ;;		_get_fun_full
  3699 ;;		_get_jump
  3700 ;;		_get_jump_full
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704  0367                     _ADC_GetConversion:	
  3705                           ;psect for function _ADC_GetConversion
  3706                           
  3707                           
  3708                           ;incstack = 0
  3709                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3710                           ;ADC_GetConversion@channel stored from wreg
  3711  0367  0020               	movlb	0	; select bank0
  3712  0368  00B6               	movwf	ADC_GetConversion@channel
  3713  0369                     l1913:
  3714                           
  3715                           ;mcc_generated_files/adc.c: 111: char ADC_GetConversion(adc_channel_t channel);mcc_gener
      +                          ated_files/adc.c: 112: {;mcc_generated_files/adc.c: 114:     ADCON0bits.CHS = channel;
  3716  0369  0836               	movf	ADC_GetConversion@channel,w
  3717  036A  00B5               	movwf	??_ADC_GetConversion
  3718  036B  0DB5               	rlf	??_ADC_GetConversion,f
  3719  036C  0DB5               	rlf	??_ADC_GetConversion,f
  3720  036D  0021               	movlb	1	; select bank1
  3721  036E  081D               	movf	29,w	;volatile
  3722  036F  0020               	movlb	0	; select bank0
  3723  0370  0635               	xorwf	??_ADC_GetConversion,w
  3724  0371  3983               	andlw	-125
  3725  0372  0635               	xorwf	??_ADC_GetConversion,w
  3726  0373  0021               	movlb	1	; select bank1
  3727  0374  009D               	movwf	29	;volatile
  3728  0375                     l1915:
  3729                           
  3730                           ;mcc_generated_files/adc.c: 117:     ADCON0bits.ADON = 1;
  3731  0375  141D               	bsf	29,0	;volatile
  3732  0376                     l1917:
  3733                           
  3734                           ;mcc_generated_files/adc.c: 120:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  3735  0376  3006               	movlw	6
  3736  0377                     u1687:
  3737  0377  0B89               	decfsz	9,f
  3738  0378  2B77               	goto	u1687
  3739  0379  3200               	nop2
  3740  037A                     l1919:
  3741                           
  3742                           ;mcc_generated_files/adc.c: 123:     ADCON0bits.GO_nDONE = 1;
  3743  037A  0021               	movlb	1	; select bank1
  3744  037B  149D               	bsf	29,1	;volatile
  3745  037C                     l63:	
  3746                           ;mcc_generated_files/adc.c: 127:     {;mcc_generated_files/adc.c: 128:     }
  3747                           
  3748                           
  3749                           ;mcc_generated_files/adc.c: 126:     while (ADCON0bits.GO_nDONE)
  3750  037C  189D               	btfsc	29,1	;volatile
  3751  037D  2B7F               	goto	u841
  3752  037E  2B80               	goto	u840
  3753  037F                     u841:
  3754  037F  2B7C               	goto	l63
  3755  0380                     u840:
  3756  0380                     l1921:
  3757                           
  3758                           ;mcc_generated_files/adc.c: 130:     return ( ADRESH);
  3759  0380  081C               	movf	28,w	;volatile
  3760  0381                     l66:
  3761  0381  0008               	return
  3762  0382                     __end_of_ADC_GetConversion:
  3763                           
  3764                           	psect	text21
  3765  0118                     __ptext21:	
  3766 ;; *************** function _fun_work *****************
  3767 ;; Defined at:
  3768 ;;		line 399 in file "main.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;		None
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;		None
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg, status,2, status,0, pclath, cstack
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMMON   BANK0   BANK1
  3782 ;;      Params:         0       0       0
  3783 ;;      Locals:         0       0       0
  3784 ;;      Temps:          0       1       0
  3785 ;;      Totals:         0       1       0
  3786 ;;Total ram usage:        1 bytes
  3787 ;; Hardware stack levels used: 1
  3788 ;; Hardware stack levels required when called: 9
  3789 ;; This function calls:
  3790 ;;		_beep
  3791 ;;		_go_close
  3792 ;;		_go_close_alt
  3793 ;;		_go_open
  3794 ;;		_go_open_alt
  3795 ;; This function is called by:
  3796 ;;		_main
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800  0118                     _fun_work:	
  3801                           ;psect for function _fun_work
  3802                           
  3803  0118                     l2389:	
  3804                           ;incstack = 0
  3805                           ; Regs used in _fun_work: [wreg+status,2+status,0+pclath+cstack]
  3806                           
  3807                           
  3808                           ;main.c: 400:     {;main.c: 401:         if (FLAGS.bits._FUN_CONNECTED &&
  3809  0118  1D77               	btfss	_FLAGS,2
  3810  0119  291B               	goto	u1461
  3811  011A  291C               	goto	u1460
  3812  011B                     u1461:
  3813  011B  293A               	goto	l2405
  3814  011C                     u1460:
  3815  011C                     l2391:
  3816  011C  1877               	btfsc	_FLAGS,0
  3817  011D  291F               	goto	u1471
  3818  011E  2920               	goto	u1470
  3819  011F                     u1471:
  3820  011F  293A               	goto	l2405
  3821  0120                     u1470:
  3822  0120                     l2393:
  3823  0120  1D78               	btfss	_FLAGS+1,2
  3824  0121  2923               	goto	u1481
  3825  0122  2924               	goto	u1480
  3826  0123                     u1481:
  3827  0123  293A               	goto	l2405
  3828  0124                     u1480:
  3829  0124                     l2395:
  3830  0124  1AF7               	btfsc	_FLAGS,5
  3831  0125  2927               	goto	u1491
  3832  0126  2928               	goto	u1490
  3833  0127                     u1491:
  3834  0127  293A               	goto	l2405
  3835  0128                     u1490:
  3836  0128                     l2397:
  3837                           
  3838                           ;main.c: 404:                 !FLAGS.bits.RELE_POWER_WAIT) {;main.c: 406:             be
      +                          ep(40, 1);
  3839  0128  0020               	movlb	0	; select bank0
  3840  0129  01B5               	clrf	beep@count
  3841  012A  0AB5               	incf	beep@count,f
  3842  012B  3028               	movlw	40
  3843  012C  3182  22B4  3181   	fcall	_beep
  3844  012F                     l2399:
  3845                           
  3846                           ;main.c: 408:             if (FLAGS.bits.NORMAL_WORK_MODE) go_open();
  3847  012F  1CF7               	btfss	_FLAGS,1
  3848  0130  2932               	goto	u1501
  3849  0131  2933               	goto	u1500
  3850  0132                     u1501:
  3851  0132  2937               	goto	l2403
  3852  0133                     u1500:
  3853  0133                     l2401:
  3854  0133  3184  2456  3181   	fcall	_go_open
  3855  0136  293A               	goto	l2405
  3856  0137                     l2403:
  3857  0137  3184  2494  3181   	fcall	_go_open_alt
  3858  013A                     l2405:
  3859                           
  3860                           ;main.c: 412:         if (!FLAGS.bits._FUN_CONNECTED &&
  3861  013A  1977               	btfsc	_FLAGS,2
  3862  013B  293D               	goto	u1511
  3863  013C  293E               	goto	u1510
  3864  013D                     u1511:
  3865  013D  295A               	goto	l454
  3866  013E                     u1510:
  3867  013E                     l2407:
  3868  013E  1978               	btfsc	_FLAGS+1,2
  3869  013F  2941               	goto	u1521
  3870  0140  2942               	goto	u1520
  3871  0141                     u1521:
  3872  0141  295A               	goto	l454
  3873  0142                     u1520:
  3874  0142                     l2409:
  3875  0142  1AF7               	btfsc	_FLAGS,5
  3876  0143  2945               	goto	u1531
  3877  0144  2946               	goto	u1530
  3878  0145                     u1531:
  3879  0145  295A               	goto	l454
  3880  0146                     u1530:
  3881  0146                     l2411:
  3882                           
  3883                           ;main.c: 414:                 !FLAGS.bits.RELE_POWER_WAIT) {;main.c: 416:             be
      +                          ep(40, 2);
  3884  0146  3002               	movlw	2
  3885  0147  0020               	movlb	0	; select bank0
  3886  0148  00BB               	movwf	??_fun_work
  3887  0149  083B               	movf	??_fun_work,w
  3888  014A  00B5               	movwf	beep@count
  3889  014B  3028               	movlw	40
  3890  014C  3182  22B4  3181   	fcall	_beep
  3891  014F                     l2413:
  3892                           
  3893                           ;main.c: 418:             if (FLAGS.bits.NORMAL_WORK_MODE) go_close();
  3894  014F  1CF7               	btfss	_FLAGS,1
  3895  0150  2952               	goto	u1541
  3896  0151  2953               	goto	u1540
  3897  0152                     u1541:
  3898  0152  2957               	goto	l2417
  3899  0153                     u1540:
  3900  0153                     l2415:
  3901  0153  3183  2327  3181   	fcall	_go_close
  3902  0156  295A               	goto	l454
  3903  0157                     l2417:
  3904  0157  3184  2499  3181   	fcall	_go_close_alt
  3905  015A                     l454:
  3906  015A  0008               	return
  3907  015B                     __end_of_fun_work:
  3908                           
  3909                           	psect	text22
  3910  0494                     __ptext22:	
  3911 ;; *************** function _go_open_alt *****************
  3912 ;; Defined at:
  3913 ;;		line 150 in file "main.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;		None
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;		None
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  1    wreg      void 
  3920 ;; Registers used:
  3921 ;;		None
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMMON   BANK0   BANK1
  3927 ;;      Params:         0       0       0
  3928 ;;      Locals:         0       0       0
  3929 ;;      Temps:          0       0       0
  3930 ;;      Totals:         0       0       0
  3931 ;;Total ram usage:        0 bytes
  3932 ;; Hardware stack levels used: 1
  3933 ;; Hardware stack levels required when called: 7
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_fun_work
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941  0494                     _go_open_alt:	
  3942                           ;psect for function _go_open_alt
  3943                           
  3944  0494                     l2367:	
  3945                           ;incstack = 0
  3946                           ; Regs used in _go_open_alt: []
  3947                           
  3948                           
  3949                           ;main.c: 151:     FLAGS.bits.CLOSED = 0;
  3950  0494  1178               	bcf	_FLAGS+1,2
  3951  0495                     l318:	
  3952                           ;main.c: 152:     do { LATCbits.LATC4 = 0; } while(0);
  3953                           
  3954  0495  0022               	movlb	2	; select bank2
  3955  0496  120E               	bcf	14,4	;volatile
  3956  0497                     l320:	
  3957                           ;main.c: 153:     do { LATCbits.LATC5 = 0; } while(0);
  3958                           
  3959  0497  128E               	bcf	14,5	;volatile
  3960  0498                     l322:
  3961  0498  0008               	return
  3962  0499                     __end_of_go_open_alt:
  3963                           
  3964                           	psect	text23
  3965  0456                     __ptext23:	
  3966 ;; *************** function _go_open *****************
  3967 ;; Defined at:
  3968 ;;		line 136 in file "main.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;		None
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;		None
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      void 
  3975 ;; Registers used:
  3976 ;;		wreg
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMMON   BANK0   BANK1
  3982 ;;      Params:         0       0       0
  3983 ;;      Locals:         0       0       0
  3984 ;;      Temps:          0       0       0
  3985 ;;      Totals:         0       0       0
  3986 ;;Total ram usage:        0 bytes
  3987 ;; Hardware stack levels used: 1
  3988 ;; Hardware stack levels required when called: 7
  3989 ;; This function calls:
  3990 ;;		Nothing
  3991 ;; This function is called by:
  3992 ;;		_fun_work
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996  0456                     _go_open:	
  3997                           ;psect for function _go_open
  3998                           
  3999  0456                     l304:	
  4000                           ;incstack = 0
  4001                           ; Regs used in _go_open: [wreg]
  4002                           ;main.c: 137:     do { LATCbits.LATC4 = 0; } while(0);
  4003                           
  4004  0456  0022               	movlb	2	; select bank2
  4005  0457  120E               	bcf	14,4	;volatile
  4006  0458                     l306:	
  4007                           ;main.c: 138:     do { LATCbits.LATC5 = 1; } while(0);
  4008                           
  4009  0458  168E               	bsf	14,5	;volatile
  4010  0459                     l2359:
  4011                           
  4012                           ;main.c: 139:     time_rele_power = 10;
  4013  0459  300A               	movlw	10
  4014  045A  0020               	movlb	0	; select bank0
  4015  045B  00AD               	movwf	_time_rele_power
  4016  045C  3000               	movlw	0
  4017  045D  00AE               	movwf	_time_rele_power+1
  4018  045E                     l2361:
  4019                           
  4020                           ;main.c: 140:     FLAGS.bits.RELE_POWER_WAIT = 1;
  4021  045E  16F7               	bsf	_FLAGS,5
  4022  045F                     l308:
  4023  045F  0008               	return
  4024  0460                     __end_of_go_open:
  4025                           
  4026                           	psect	text24
  4027  0499                     __ptext24:	
  4028 ;; *************** function _go_close_alt *****************
  4029 ;; Defined at:
  4030 ;;		line 144 in file "main.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;		None
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;		None
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  1    wreg      void 
  4037 ;; Registers used:
  4038 ;;		None
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMMON   BANK0   BANK1
  4044 ;;      Params:         0       0       0
  4045 ;;      Locals:         0       0       0
  4046 ;;      Temps:          0       0       0
  4047 ;;      Totals:         0       0       0
  4048 ;;Total ram usage:        0 bytes
  4049 ;; Hardware stack levels used: 1
  4050 ;; Hardware stack levels required when called: 7
  4051 ;; This function calls:
  4052 ;;		Nothing
  4053 ;; This function is called by:
  4054 ;;		_fun_work
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058  0499                     _go_close_alt:	
  4059                           ;psect for function _go_close_alt
  4060                           
  4061  0499                     l2365:	
  4062                           ;incstack = 0
  4063                           ; Regs used in _go_close_alt: []
  4064                           
  4065                           
  4066                           ;main.c: 145:     FLAGS.bits.CLOSED = 1;
  4067  0499  1578               	bsf	_FLAGS+1,2
  4068  049A                     l311:	
  4069                           ;main.c: 146:     do { LATCbits.LATC4 = 0; } while(0);
  4070                           
  4071  049A  0022               	movlb	2	; select bank2
  4072  049B  120E               	bcf	14,4	;volatile
  4073  049C                     l313:	
  4074                           ;main.c: 147:     do { LATCbits.LATC5 = 1; } while(0);
  4075                           
  4076  049C  168E               	bsf	14,5	;volatile
  4077  049D                     l315:
  4078  049D  0008               	return
  4079  049E                     __end_of_go_close_alt:
  4080                           
  4081                           	psect	text25
  4082  0327                     __ptext25:	
  4083 ;; *************** function _go_close *****************
  4084 ;; Defined at:
  4085 ;;		line 124 in file "main.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;		None
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;		None
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  1    wreg      void 
  4092 ;; Registers used:
  4093 ;;		wreg
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMMON   BANK0   BANK1
  4099 ;;      Params:         0       0       0
  4100 ;;      Locals:         0       0       0
  4101 ;;      Temps:          0       2       0
  4102 ;;      Totals:         0       2       0
  4103 ;;Total ram usage:        2 bytes
  4104 ;; Hardware stack levels used: 1
  4105 ;; Hardware stack levels required when called: 7
  4106 ;; This function calls:
  4107 ;;		Nothing
  4108 ;; This function is called by:
  4109 ;;		_povorot
  4110 ;;		_fun_work
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114  0327                     _go_close:	
  4115                           ;psect for function _go_close
  4116                           
  4117  0327                     l1991:	
  4118                           ;incstack = 0
  4119                           ; Regs used in _go_close: [wreg]
  4120                           
  4121                           
  4122                           ;main.c: 125:     time_rotation = 0;
  4123  0327  3000               	movlw	0
  4124  0328  0020               	movlb	0	; select bank0
  4125  0329  00A0               	movwf	_time_rotation
  4126  032A  3000               	movlw	0
  4127  032B  00A1               	movwf	_time_rotation+1
  4128  032C  3000               	movlw	0
  4129  032D  00A2               	movwf	_time_rotation+2
  4130  032E                     l1993:
  4131  032E  0022               	movlb	2	; select bank2
  4132  032F  160E               	bsf	14,4	;volatile
  4133  0330                     l1995:
  4134                           
  4135                           ;main.c: 127:     FLAGS.bits.CLOSING = 1;
  4136  0330  14F8               	bsf	_FLAGS+1,1
  4137                           
  4138                           ;main.c: 128:     _delay((unsigned long)((2 * 1000)*(16000000/4000.0)));
  4139  0331  3029               	movlw	41
  4140  0332  0020               	movlb	0	; select bank0
  4141  0333  00B6               	movwf	??_go_close+1
  4142  0334  3096               	movlw	150
  4143  0335  00B5               	movwf	??_go_close
  4144  0336  307F               	movlw	127
  4145  0337                     u1697:
  4146  0337  0B89               	decfsz	9,f
  4147  0338  2B37               	goto	u1697
  4148  0339  0BB5               	decfsz	??_go_close,f
  4149  033A  2B37               	goto	u1697
  4150  033B  0BB6               	decfsz	??_go_close+1,f
  4151  033C  2B37               	goto	u1697
  4152  033D                     l1997:
  4153  033D  0022               	movlb	2	; select bank2
  4154  033E  168E               	bsf	14,5	;volatile
  4155  033F                     l300:
  4156                           
  4157                           ;main.c: 130:     time_rele_power = 10;
  4158  033F  300A               	movlw	10
  4159  0340  0020               	movlb	0	; select bank0
  4160  0341  00AD               	movwf	_time_rele_power
  4161  0342  3000               	movlw	0
  4162  0343  00AE               	movwf	_time_rele_power+1
  4163  0344                     l1999:
  4164                           
  4165                           ;main.c: 131:     FLAGS.bits.RELE_POWER_WAIT = 1;
  4166  0344  16F7               	bsf	_FLAGS,5
  4167  0345                     l2001:
  4168                           
  4169                           ;main.c: 132:     FLAGS.bits.RELE_CONTROL_WAIT = 1;
  4170  0345  1777               	bsf	_FLAGS,6
  4171  0346                     l301:
  4172  0346  0008               	return
  4173  0347                     __end_of_go_close:
  4174                           
  4175                           	psect	text26
  4176  02B4                     __ptext26:	
  4177 ;; *************** function _beep *****************
  4178 ;; Defined at:
  4179 ;;		line 104 in file "main.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;  time            1    wreg     unsigned char 
  4182 ;;  count           1    0[BANK0 ] unsigned char 
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;  time            1    3[BANK0 ] unsigned char 
  4185 ;;  i               1    5[BANK0 ] unsigned char 
  4186 ;;  j               1    4[BANK0 ] unsigned char 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  1    wreg      void 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0, pclath, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1
  4196 ;;      Params:         0       1       0
  4197 ;;      Locals:         0       3       0
  4198 ;;      Temps:          0       2       0
  4199 ;;      Totals:         0       6       0
  4200 ;;Total ram usage:        6 bytes
  4201 ;; Hardware stack levels used: 1
  4202 ;; Hardware stack levels required when called: 8
  4203 ;; This function calls:
  4204 ;;		_switch_zum
  4205 ;; This function is called by:
  4206 ;;		_fun_work
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210  02B4                     _beep:	
  4211                           ;psect for function _beep
  4212                           
  4213                           
  4214                           ;incstack = 0
  4215                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
  4216                           ;beep@time stored from wreg
  4217  02B4  0020               	movlb	0	; select bank0
  4218  02B5  00B8               	movwf	beep@time
  4219  02B6                     l2323:
  4220                           
  4221                           ;main.c: 105:     for (char j = 0; j < count; j++) {
  4222  02B6  01B9               	clrf	beep@j
  4223  02B7  2ADD               	goto	l2339
  4224  02B8                     l2325:
  4225                           
  4226                           ;main.c: 106:         for (char i = 0; i < time; i++) {
  4227  02B8  01BA               	clrf	beep@i
  4228  02B9  2AC6               	goto	l2333
  4229  02BA                     l2327:
  4230                           
  4231                           ;main.c: 107:             switch_zum();
  4232  02BA  3184  244A  3182   	fcall	_switch_zum
  4233  02BD                     l2329:
  4234                           
  4235                           ;main.c: 108:             _delay((unsigned long)((300)*(16000000/4000000.0)));
  4236  02BD  30F0               	movlw	240
  4237  02BE                     u1707:
  4238  02BE  3200               	nop2
  4239  02BF  0B89               	decfsz	9,f
  4240  02C0  2ABE               	goto	u1707
  4241  02C1                     l2331:
  4242                           
  4243                           ;main.c: 109:         }
  4244  02C1  3001               	movlw	1
  4245  02C2  0020               	movlb	0	; select bank0
  4246  02C3  00B6               	movwf	??_beep
  4247  02C4  0836               	movf	??_beep,w
  4248  02C5  07BA               	addwf	beep@i,f
  4249  02C6                     l2333:
  4250  02C6  0838               	movf	beep@time,w
  4251  02C7  023A               	subwf	beep@i,w
  4252  02C8  1C03               	skipc
  4253  02C9  2ACB               	goto	u1361
  4254  02CA  2ACC               	goto	u1360
  4255  02CB                     u1361:
  4256  02CB  2ABA               	goto	l2327
  4257  02CC                     u1360:
  4258  02CC                     l2335:
  4259                           
  4260                           ;main.c: 110:         _delay((unsigned long)((100)*(16000000/4000.0)));
  4261  02CC  3003               	movlw	3
  4262  02CD  0020               	movlb	0	; select bank0
  4263  02CE  00B7               	movwf	??_beep+1
  4264  02CF  3008               	movlw	8
  4265  02D0  00B6               	movwf	??_beep
  4266  02D1  3077               	movlw	119
  4267  02D2                     u1717:
  4268  02D2  0B89               	decfsz	9,f
  4269  02D3  2AD2               	goto	u1717
  4270  02D4  0BB6               	decfsz	??_beep,f
  4271  02D5  2AD2               	goto	u1717
  4272  02D6  0BB7               	decfsz	??_beep+1,f
  4273  02D7  2AD2               	goto	u1717
  4274  02D8                     l2337:
  4275                           
  4276                           ;main.c: 111:     }
  4277  02D8  3001               	movlw	1
  4278  02D9  0020               	movlb	0	; select bank0
  4279  02DA  00B6               	movwf	??_beep
  4280  02DB  0836               	movf	??_beep,w
  4281  02DC  07B9               	addwf	beep@j,f
  4282  02DD                     l2339:
  4283  02DD  0835               	movf	beep@count,w
  4284  02DE  0239               	subwf	beep@j,w
  4285  02DF  1C03               	skipc
  4286  02E0  2AE2               	goto	u1371
  4287  02E1  2AE3               	goto	u1370
  4288  02E2                     u1371:
  4289  02E2  2AB8               	goto	l2325
  4290  02E3                     u1370:
  4291  02E3                     l285:
  4292  02E3  0008               	return
  4293  02E4                     __end_of_beep:
  4294                           
  4295                           	psect	text27
  4296  044A                     __ptext27:	
  4297 ;; *************** function _switch_zum *****************
  4298 ;; Defined at:
  4299 ;;		line 94 in file "main.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;		None
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;		None
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      void 
  4306 ;; Registers used:
  4307 ;;		wreg
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMMON   BANK0   BANK1
  4313 ;;      Params:         0       0       0
  4314 ;;      Locals:         0       0       0
  4315 ;;      Temps:          0       0       0
  4316 ;;      Totals:         0       0       0
  4317 ;;Total ram usage:        0 bytes
  4318 ;; Hardware stack levels used: 1
  4319 ;; Hardware stack levels required when called: 7
  4320 ;; This function calls:
  4321 ;;		Nothing
  4322 ;; This function is called by:
  4323 ;;		_beep
  4324 ;;		_boop
  4325 ;;		_start_setup
  4326 ;;		_TMR0_ISR
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330  044A                     _switch_zum:	
  4331                           ;psect for function _switch_zum
  4332                           
  4333                           
  4334                           ;Skip over the trampoline to the duplicate function for level 1
  4335  044A  1C7E               	btfss	int$flags,0
  4336  044B  2C4D               	goto	_switch_zum$intlevel0
  4337  044C  2C6A               	ljmp	i1_switch_zum
  4338  044D                     _switch_zum$intlevel0:
  4339  044D                     l269:	
  4340                           ;incstack = 0
  4341                           ; Regs used in _switch_zum: [wreg]
  4342                           ;main.c: 95:     do { LATAbits.LATA5 = 1; } while(0);
  4343                           
  4344  044D  0022               	movlb	2	; select bank2
  4345  044E  168C               	bsf	12,5	;volatile
  4346  044F                     l2315:
  4347                           
  4348                           ;main.c: 96:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  4349  044F  3006               	movlw	6
  4350  0450                     u1727:
  4351  0450  0B89               	decfsz	9,f
  4352  0451  2C50               	goto	u1727
  4353  0452  3200               	nop2
  4354  0453                     l2317:
  4355  0453  0022               	movlb	2	; select bank2
  4356  0454  128C               	bcf	12,5	;volatile
  4357  0455                     l273:
  4358  0455  0008               	return
  4359  0456                     __end_of_switch_zum:
  4360                           
  4361                           	psect	intentry
  4362  0004                     __pintentry:	
  4363 ;; *************** function _INTERRUPT_InterruptManager *****************
  4364 ;; Defined at:
  4365 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;		None
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;		None
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      void 
  4372 ;; Registers used:
  4373 ;;		wreg, status,2, status,0, pclath, cstack
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMMON   BANK0   BANK1
  4379 ;;      Params:         0       0       0
  4380 ;;      Locals:         0       0       0
  4381 ;;      Temps:          0       0       0
  4382 ;;      Totals:         0       0       0
  4383 ;;Total ram usage:        0 bytes
  4384 ;; Hardware stack levels used: 1
  4385 ;; Hardware stack levels required when called: 6
  4386 ;; This function calls:
  4387 ;;		_TMR0_ISR
  4388 ;;		_TMR2_ISR
  4389 ;; This function is called by:
  4390 ;;		Interrupt level 1
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394  0004                     _INTERRUPT_InterruptManager:
  4395                           
  4396                           ;incstack = 0
  4397  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4398                           
  4399                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  4400  0005  3180               	pagesel	$
  4401  0006                     i1l2473:
  4402                           
  4403                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4404  0006  1E8B               	btfss	11,5	;volatile
  4405  0007  2809               	goto	u158_21
  4406  0008  280A               	goto	u158_20
  4407  0009                     u158_21:
  4408  0009  2812               	goto	i1l110
  4409  000A                     u158_20:
  4410  000A                     i1l2475:
  4411  000A  1D0B               	btfss	11,2	;volatile
  4412  000B  280D               	goto	u159_21
  4413  000C  280E               	goto	u159_20
  4414  000D                     u159_21:
  4415  000D  2812               	goto	i1l110
  4416  000E                     u159_20:
  4417  000E                     i1l2477:
  4418                           
  4419                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  4420  000E  3184  242C  3180   	fcall	_TMR0_ISR
  4421                           
  4422                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  4423  0011  2824               	goto	i1l116
  4424  0012                     i1l110:	
  4425                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  4426                           
  4427  0012  1F0B               	btfss	11,6	;volatile
  4428  0013  2815               	goto	u160_21
  4429  0014  2816               	goto	u160_20
  4430  0015                     u160_21:
  4431  0015  2824               	goto	i1l116
  4432  0016                     u160_20:
  4433  0016                     i1l2479:
  4434                           
  4435                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  4436  0016  0021               	movlb	1	; select bank1
  4437  0017  1C91               	btfss	17,1	;volatile
  4438  0018  281A               	goto	u161_21
  4439  0019  281B               	goto	u161_20
  4440  001A                     u161_21:
  4441  001A  2824               	goto	i1l115
  4442  001B                     u161_20:
  4443  001B                     i1l2481:
  4444  001B  0020               	movlb	0	; select bank0
  4445  001C  1C91               	btfss	17,1	;volatile
  4446  001D  281F               	goto	u162_21
  4447  001E  2820               	goto	u162_20
  4448  001F                     u162_21:
  4449  001F  2824               	goto	i1l115
  4450  0020                     u162_20:
  4451  0020                     i1l2483:
  4452                           
  4453                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
  4454  0020  3184  243C  3180   	fcall	_TMR2_ISR
  4455                           
  4456                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4457  0023  2824               	goto	i1l116
  4458  0024                     i1l115:	
  4459                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  4460                           
  4461  0024                     i1l116:
  4462  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4463  0025  0009               	retfie
  4464  0026                     __end_of_INTERRUPT_InterruptManager:
  4465                           
  4466                           	psect	text29
  4467  043C                     __ptext29:	
  4468 ;; *************** function _TMR2_ISR *****************
  4469 ;; Defined at:
  4470 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;		None
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;		None
  4475 ;; Return value:  Size  Location     Type
  4476 ;;                  1    wreg      void 
  4477 ;; Registers used:
  4478 ;;		wreg, status,2, status,0, pclath, cstack
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMMON   BANK0   BANK1
  4484 ;;      Params:         0       0       0
  4485 ;;      Locals:         0       0       0
  4486 ;;      Temps:          0       0       0
  4487 ;;      Totals:         0       0       0
  4488 ;;Total ram usage:        0 bytes
  4489 ;; Hardware stack levels used: 1
  4490 ;; Hardware stack levels required when called: 5
  4491 ;; This function calls:
  4492 ;;		Absolute function
  4493 ;;		_TMR2_DefaultInterruptHandler
  4494 ;;		_ms_tick
  4495 ;; This function is called by:
  4496 ;;		_INTERRUPT_InterruptManager
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500  043C                     _TMR2_ISR:	
  4501                           ;psect for function _TMR2_ISR
  4502                           
  4503  043C                     i1l2085:	
  4504                           ;incstack = 0
  4505                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  4506                           
  4507                           
  4508                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
  4509  043C  0020               	movlb	0	; select bank0
  4510  043D  1091               	bcf	17,1	;volatile
  4511  043E                     i1l2087:
  4512                           
  4513                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
  4514  043E  083E               	movf	_TMR2_InterruptHandler,w
  4515  043F  043F               	iorwf	_TMR2_InterruptHandler+1,w
  4516  0440  1903               	btfsc	3,2
  4517  0441  2C43               	goto	u106_21
  4518  0442  2C44               	goto	u106_20
  4519  0443                     u106_21:
  4520  0443  2C49               	goto	i1l156
  4521  0444                     u106_20:
  4522  0444                     i1l2089:
  4523                           
  4524                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
  4525  0444  083F               	movf	_TMR2_InterruptHandler+1,w
  4526  0445  008A               	movwf	10
  4527  0446  083E               	movf	_TMR2_InterruptHandler,w
  4528  0447  000A               	callw
  4529  0448  3184               	pagesel	$
  4530  0449                     i1l156:
  4531  0449  0008               	return
  4532  044A                     __end_of_TMR2_ISR:
  4533                           
  4534                           	psect	text30
  4535  04B8                     __ptext30:	
  4536 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4537 ;; Defined at:
  4538 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;		None
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;		None
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  1    wreg      void 
  4545 ;; Registers used:
  4546 ;;		None
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMMON   BANK0   BANK1
  4552 ;;      Params:         0       0       0
  4553 ;;      Locals:         0       0       0
  4554 ;;      Temps:          0       0       0
  4555 ;;      Totals:         0       0       0
  4556 ;;Total ram usage:        0 bytes
  4557 ;; Hardware stack levels used: 1
  4558 ;; This function calls:
  4559 ;;		Nothing
  4560 ;; This function is called by:
  4561 ;;		_TMR2_Initialize
  4562 ;;		_TMR2_ISR
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566  04B8                     _TMR2_DefaultInterruptHandler:	
  4567                           ;psect for function _TMR2_DefaultInterruptHandler
  4568                           
  4569  04B8                     i1l162:	
  4570                           ;incstack = 0
  4571                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  4572                           
  4573  04B8  0008               	return
  4574  04B9                     __end_of_TMR2_DefaultInterruptHandler:
  4575                           
  4576                           	psect	text31
  4577  03F4                     __ptext31:	
  4578 ;; *************** function _ms_tick *****************
  4579 ;; Defined at:
  4580 ;;		line 457 in file "main.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;		None
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;		None
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  1    wreg      void 
  4587 ;; Registers used:
  4588 ;;		wreg, status,2, status,0, pclath, cstack
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMMON   BANK0   BANK1
  4594 ;;      Params:         0       0       0
  4595 ;;      Locals:         0       0       0
  4596 ;;      Temps:          0       0       0
  4597 ;;      Totals:         0       0       0
  4598 ;;Total ram usage:        0 bytes
  4599 ;; Hardware stack levels used: 1
  4600 ;; Hardware stack levels required when called: 4
  4601 ;; This function calls:
  4602 ;;		_sec_tick_work
  4603 ;; This function is called by:
  4604 ;;		_start_setup
  4605 ;;		_TMR2_ISR
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609  03F4                     _ms_tick:	
  4610                           ;psect for function _ms_tick
  4611                           
  4612  03F4                     i1l2069:	
  4613                           ;incstack = 0
  4614                           ; Regs used in _ms_tick: [wreg+status,2+status,0+pclath+cstack]
  4615                           
  4616                           
  4617                           ;main.c: 458:     static unsigned tick_count =0;;main.c: 459:     tick_count++;
  4618  03F4  3001               	movlw	1
  4619  03F5  0020               	movlb	0	; select bank0
  4620  03F6  07A3               	addwf	ms_tick@tick_count,f
  4621  03F7  3000               	movlw	0
  4622  03F8  3DA4               	addwfc	ms_tick@tick_count+1,f
  4623  03F9                     i1l2071:
  4624                           
  4625                           ;main.c: 461:     if (tick_count == 1000){
  4626  03F9  30E8               	movlw	232
  4627  03FA  0623               	xorwf	ms_tick@tick_count,w
  4628  03FB  3003               	movlw	3
  4629  03FC  1903               	skipnz
  4630  03FD  0624               	xorwf	ms_tick@tick_count+1,w
  4631  03FE  1D03               	btfss	3,2
  4632  03FF  2C01               	goto	u104_21
  4633  0400  2C02               	goto	u104_20
  4634  0401                     u104_21:
  4635  0401  2C08               	goto	i1l467
  4636  0402                     u104_20:
  4637  0402                     i1l2073:
  4638                           
  4639                           ;main.c: 462:     sec_tick_work();
  4640  0402  3181  215B  3183   	fcall	_sec_tick_work
  4641  0405                     i1l2075:
  4642                           
  4643                           ;main.c: 463:     tick_count=0;
  4644  0405  0020               	movlb	0	; select bank0
  4645  0406  01A3               	clrf	ms_tick@tick_count
  4646  0407  01A4               	clrf	ms_tick@tick_count+1
  4647  0408                     i1l467:
  4648  0408  0008               	return
  4649  0409                     __end_of_ms_tick:
  4650                           
  4651                           	psect	text32
  4652  015B                     __ptext32:	
  4653 ;; *************** function _sec_tick_work *****************
  4654 ;; Defined at:
  4655 ;;		line 354 in file "main.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;		None
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;		None
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  1    wreg      void 
  4662 ;; Registers used:
  4663 ;;		wreg, status,2, status,0, pclath, cstack
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMMON   BANK0   BANK1
  4669 ;;      Params:         0       0       0
  4670 ;;      Locals:         0       0       0
  4671 ;;      Temps:          1       0       0
  4672 ;;      Totals:         1       0       0
  4673 ;;Total ram usage:        1 bytes
  4674 ;; Hardware stack levels used: 1
  4675 ;; Hardware stack levels required when called: 3
  4676 ;; This function calls:
  4677 ;;		_get_measure
  4678 ;;		_rele_tick
  4679 ;;		_toggle_tone
  4680 ;; This function is called by:
  4681 ;;		_ms_tick
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685  015B                     _sec_tick_work:	
  4686                           ;psect for function _sec_tick_work
  4687                           
  4688  015B                     i1l1929:	
  4689                           ;incstack = 0
  4690                           ; Regs used in _sec_tick_work: [wreg+status,2+status,0+pclath+cstack]
  4691                           
  4692                           
  4693                           ;main.c: 358:     if (!FLAGS.bits.CLOSED) {
  4694  015B  1978               	btfsc	_FLAGS+1,2
  4695  015C  295E               	goto	u85_21
  4696  015D  295F               	goto	u85_20
  4697  015E                     u85_21:
  4698  015E  296A               	goto	i1l1933
  4699  015F                     u85_20:
  4700  015F                     i1l1931:
  4701                           
  4702                           ;main.c: 359:         time_rotation++;
  4703  015F  3001               	movlw	1
  4704  0160  0020               	movlb	0	; select bank0
  4705  0161  07A0               	addwf	_time_rotation,f
  4706  0162  3000               	movlw	0
  4707  0163  1803               	skipnc
  4708  0164  3001               	movlw	1
  4709  0165  07A1               	addwf	_time_rotation+1,f
  4710  0166  3000               	movlw	0
  4711  0167  1803               	skipnc
  4712  0168  3001               	movlw	1
  4713  0169  07A2               	addwf	_time_rotation+2,f
  4714  016A                     i1l1933:
  4715                           
  4716                           ;main.c: 361:     rele_tick();
  4717  016A  3182  2282  3181   	fcall	_rele_tick
  4718  016D                     i1l1935:
  4719                           
  4720                           ;main.c: 363:     if (FLAGS.bits.ALARM) {
  4721  016D  1C77               	btfss	_FLAGS,0
  4722  016E  2970               	goto	u86_21
  4723  016F  2971               	goto	u86_20
  4724  0170                     u86_21:
  4725  0170  2981               	goto	i1l1941
  4726  0171                     u86_20:
  4727  0171                     i1l1937:
  4728  0171  1003               	clrc
  4729  0172  0022               	movlb	2	; select bank2
  4730  0173  1E0C               	btfss	12,4	;volatile
  4731  0174  1403               	setc
  4732  0175  1803               	btfsc	3,0
  4733  0176  2978               	goto	u87_21
  4734  0177  297B               	goto	u87_20
  4735  0178                     u87_21:
  4736  0178  0022               	movlb	2	; select bank2
  4737  0179  160C               	bsf	12,4	;volatile
  4738  017A  297D               	goto	u88_24
  4739  017B                     u87_20:
  4740  017B  0022               	movlb	2	; select bank2
  4741  017C  120C               	bcf	12,4	;volatile
  4742  017D                     u88_24:
  4743  017D                     i1l1939:
  4744                           
  4745                           ;main.c: 365:         toggle_tone();
  4746  017D  3184  2460  3181   	fcall	_toggle_tone
  4747                           
  4748                           ;main.c: 366:     } else {
  4749  0180  299B               	goto	i1l441
  4750  0181                     i1l1941:
  4751                           
  4752                           ;main.c: 367:         get_measure();
  4753  0181  3181  21D8  3181   	fcall	_get_measure
  4754  0184                     i1l1943:
  4755                           
  4756                           ;main.c: 368:         static char iled;;main.c: 369:         iled++;
  4757  0184  3001               	movlw	1
  4758  0185  00F6               	movwf	??_sec_tick_work
  4759  0186  0876               	movf	??_sec_tick_work,w
  4760  0187  07F9               	addwf	sec_tick_work@iled,f
  4761  0188                     i1l1945:
  4762                           
  4763                           ;main.c: 370:         if (iled > 2) {
  4764  0188  3003               	movlw	3
  4765  0189  0279               	subwf	sec_tick_work@iled,w
  4766  018A  1C03               	skipc
  4767  018B  298D               	goto	u89_21
  4768  018C  298E               	goto	u89_20
  4769  018D                     u89_21:
  4770  018D  299B               	goto	i1l441
  4771  018E                     u89_20:
  4772  018E                     i1l1947:
  4773  018E  1003               	clrc
  4774  018F  0022               	movlb	2	; select bank2
  4775  0190  1E0C               	btfss	12,4	;volatile
  4776  0191  1403               	setc
  4777  0192  1803               	btfsc	3,0
  4778  0193  2995               	goto	u90_21
  4779  0194  2998               	goto	u90_20
  4780  0195                     u90_21:
  4781  0195  0022               	movlb	2	; select bank2
  4782  0196  160C               	bsf	12,4	;volatile
  4783  0197  299A               	goto	u91_24
  4784  0198                     u90_20:
  4785  0198  0022               	movlb	2	; select bank2
  4786  0199  120C               	bcf	12,4	;volatile
  4787  019A                     u91_24:
  4788  019A                     i1l1949:
  4789                           
  4790                           ;main.c: 372:             iled = 0;
  4791  019A  01F9               	clrf	sec_tick_work@iled
  4792  019B                     i1l441:
  4793  019B  0008               	return
  4794  019C                     __end_of_sec_tick_work:
  4795                           
  4796                           	psect	text33
  4797  0460                     __ptext33:	
  4798 ;; *************** function _toggle_tone *****************
  4799 ;; Defined at:
  4800 ;;		line 100 in file "main.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;		None
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;		None
  4805 ;; Return value:  Size  Location     Type
  4806 ;;                  1    wreg      void 
  4807 ;; Registers used:
  4808 ;;		status,0
  4809 ;; Tracked objects:
  4810 ;;		On entry : 0/0
  4811 ;;		On exit  : 0/0
  4812 ;;		Unchanged: 0/0
  4813 ;; Data sizes:     COMMON   BANK0   BANK1
  4814 ;;      Params:         0       0       0
  4815 ;;      Locals:         0       0       0
  4816 ;;      Temps:          0       0       0
  4817 ;;      Totals:         0       0       0
  4818 ;;Total ram usage:        0 bytes
  4819 ;; Hardware stack levels used: 1
  4820 ;; This function calls:
  4821 ;;		Nothing
  4822 ;; This function is called by:
  4823 ;;		_sec_tick_work
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827  0460                     _toggle_tone:	
  4828                           ;psect for function _toggle_tone
  4829                           
  4830  0460                     i1l1817:	
  4831                           ;incstack = 0
  4832                           ; Regs used in _toggle_tone: [status,0]
  4833                           
  4834                           
  4835                           ;main.c: 101:     INTCONbits.TMR0IE = ~INTCONbits.TMR0IE;
  4836  0460  1003               	clrc
  4837  0461  1E8B               	btfss	11,5	;volatile
  4838  0462  1403               	setc
  4839  0463  1803               	btfsc	3,0
  4840  0464  2C66               	goto	u76_21
  4841  0465  2C68               	goto	u76_20
  4842  0466                     u76_21:
  4843  0466  168B               	bsf	11,5	;volatile
  4844  0467  2C69               	goto	u77_24
  4845  0468                     u76_20:
  4846  0468  128B               	bcf	11,5	;volatile
  4847  0469                     u77_24:
  4848  0469                     i1l276:
  4849  0469  0008               	return
  4850  046A                     __end_of_toggle_tone:
  4851                           
  4852                           	psect	text34
  4853  0282                     __ptext34:	
  4854 ;; *************** function _rele_tick *****************
  4855 ;; Defined at:
  4856 ;;		line 327 in file "main.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;		None
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;		None
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  1    wreg      void 
  4863 ;; Registers used:
  4864 ;;		wreg, status,2, status,0, pclath, cstack
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMMON   BANK0   BANK1
  4870 ;;      Params:         0       0       0
  4871 ;;      Locals:         0       0       0
  4872 ;;      Temps:          2       0       0
  4873 ;;      Totals:         2       0       0
  4874 ;;Total ram usage:        2 bytes
  4875 ;; Hardware stack levels used: 1
  4876 ;; Hardware stack levels required when called: 1
  4877 ;; This function calls:
  4878 ;;		i1_switch_zum
  4879 ;; This function is called by:
  4880 ;;		_sec_tick_work
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884  0282                     _rele_tick:	
  4885                           ;psect for function _rele_tick
  4886                           
  4887  0282                     i1l1841:	
  4888                           ;incstack = 0
  4889                           ; Regs used in _rele_tick: [wreg+status,2+status,0+pclath+cstack]
  4890                           
  4891                           
  4892                           ;main.c: 329:     switch_zum();
  4893  0282  3184  246A  3182   	fcall	i1_switch_zum
  4894  0285                     i1l1843:
  4895                           
  4896                           ;main.c: 332:     if (FLAGS.bits.RELE_POWER_WAIT) {
  4897  0285  1EF7               	btfss	_FLAGS,5
  4898  0286  2A88               	goto	u81_21
  4899  0287  2A89               	goto	u81_20
  4900  0288                     u81_21:
  4901  0288  2AB3               	goto	i1l428
  4902  0289                     u81_20:
  4903  0289                     i1l1845:
  4904                           
  4905                           ;main.c: 333:         if (time_rele_power > 0) {
  4906  0289  0020               	movlb	0	; select bank0
  4907  028A  082D               	movf	_time_rele_power,w
  4908  028B  042E               	iorwf	_time_rele_power+1,w
  4909  028C  1903               	btfsc	3,2
  4910  028D  2A8F               	goto	u82_21
  4911  028E  2A90               	goto	u82_20
  4912  028F                     u82_21:
  4913  028F  2A95               	goto	i1l418
  4914  0290                     u82_20:
  4915  0290                     i1l1847:
  4916                           
  4917                           ;main.c: 334:             time_rele_power--;
  4918  0290  3001               	movlw	1
  4919  0291  02AD               	subwf	_time_rele_power,f
  4920  0292  3000               	movlw	0
  4921  0293  3BAE               	subwfb	_time_rele_power+1,f
  4922                           
  4923                           ;main.c: 335:         } else {
  4924  0294  2AB3               	goto	i1l428
  4925  0295                     i1l418:
  4926                           
  4927                           ;main.c: 336:             if (FLAGS.bits.RELE_CONTROL_WAIT) {
  4928  0295  1F77               	btfss	_FLAGS,6
  4929  0296  2A98               	goto	u83_21
  4930  0297  2A99               	goto	u83_20
  4931  0298                     u83_21:
  4932  0298  2AAE               	goto	i1l426
  4933  0299                     u83_20:
  4934  0299                     i1l421:	
  4935                           ;main.c: 337:                 do { LATCbits.LATC5 = 0; } while(0);
  4936                           
  4937  0299  0022               	movlb	2	; select bank2
  4938  029A  128E               	bcf	14,5	;volatile
  4939  029B                     i1l1849:
  4940                           
  4941                           ;main.c: 338:                 _delay((unsigned long)((2 * 1000)*(16000000/4000.0)));
  4942  029B  3029               	movlw	41
  4943  029C  00F1               	movwf	??_rele_tick+1
  4944  029D  3096               	movlw	150
  4945  029E  00F0               	movwf	??_rele_tick
  4946  029F  307F               	movlw	127
  4947  02A0                     u173_27:
  4948  02A0  0B89               	decfsz	9,f
  4949  02A1  2AA0               	goto	u173_27
  4950  02A2  0BF0               	decfsz	??_rele_tick,f
  4951  02A3  2AA0               	goto	u173_27
  4952  02A4  0BF1               	decfsz	??_rele_tick+1,f
  4953  02A5  2AA0               	goto	u173_27
  4954  02A6  0000               	nop
  4955  02A7                     i1l1851:
  4956  02A7  0022               	movlb	2	; select bank2
  4957  02A8  120E               	bcf	14,4	;volatile
  4958  02A9                     i1l1853:
  4959                           
  4960                           ;main.c: 340:                 FLAGS.bits.CLOSING =0;
  4961  02A9  10F8               	bcf	_FLAGS+1,1
  4962  02AA                     i1l1855:
  4963                           
  4964                           ;main.c: 341:                 FLAGS.bits.CLOSED = 1;
  4965  02AA  1578               	bsf	_FLAGS+1,2
  4966  02AB                     i1l1857:
  4967                           
  4968                           ;main.c: 342:                 FLAGS.bits.RELE_CONTROL_WAIT = 0;
  4969  02AB  1377               	bcf	_FLAGS,6
  4970  02AC                     i1l1859:
  4971                           
  4972                           ;main.c: 343:                 FLAGS.bits.RELE_POWER_WAIT = 0;
  4973  02AC  12F7               	bcf	_FLAGS,5
  4974                           
  4975                           ;main.c: 344:             } else {
  4976  02AD  2AB3               	goto	i1l428
  4977  02AE                     i1l426:	
  4978                           ;main.c: 345:                 do { LATCbits.LATC5 = 0; } while(0);
  4979                           
  4980  02AE  0022               	movlb	2	; select bank2
  4981  02AF  128E               	bcf	14,5	;volatile
  4982  02B0                     i1l427:
  4983                           
  4984                           ;main.c: 346:                 FLAGS.bits.OPENING = 0;
  4985  02B0  13F7               	bcf	_FLAGS,7
  4986                           
  4987                           ;main.c: 347:                 FLAGS.bits.CLOSED = 0;
  4988  02B1  1178               	bcf	_FLAGS+1,2
  4989                           
  4990                           ;main.c: 348:                 FLAGS.bits.RELE_POWER_WAIT = 0;
  4991  02B2  12F7               	bcf	_FLAGS,5
  4992  02B3                     i1l428:
  4993  02B3  0008               	return
  4994  02B4                     __end_of_rele_tick:
  4995                           
  4996                           	psect	text35
  4997  01D8                     __ptext35:	
  4998 ;; *************** function _get_measure *****************
  4999 ;; Defined at:
  5000 ;;		line 168 in file "main.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;		None
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;  res             2    4[COMMON] unsigned int 
  5005 ;; Return value:  Size  Location     Type
  5006 ;;                  1    wreg      void 
  5007 ;; Registers used:
  5008 ;;		wreg, status,2, status,0, pclath, cstack
  5009 ;; Tracked objects:
  5010 ;;		On entry : 0/0
  5011 ;;		On exit  : 0/0
  5012 ;;		Unchanged: 0/0
  5013 ;; Data sizes:     COMMON   BANK0   BANK1
  5014 ;;      Params:         0       0       0
  5015 ;;      Locals:         2       0       0
  5016 ;;      Temps:          2       0       0
  5017 ;;      Totals:         4       0       0
  5018 ;;Total ram usage:        4 bytes
  5019 ;; Hardware stack levels used: 1
  5020 ;; Hardware stack levels required when called: 2
  5021 ;; This function calls:
  5022 ;;		_start_alarm
  5023 ;;		i1_ADC_GetConversion
  5024 ;; This function is called by:
  5025 ;;		_sec_tick_work
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029  01D8                     _get_measure:	
  5030                           ;psect for function _get_measure
  5031                           
  5032  01D8                     i1l334:	
  5033                           ;incstack = 0
  5034                           ; Regs used in _get_measure: [wreg+status,2+status,0+pclath+cstack]
  5035                           ;main.c: 169:     static unsigned char measures;;main.c: 170:     do { LATCbits.LATC1 = 
      +                          1; } while(0);
  5036                           
  5037  01D8  0022               	movlb	2	; select bank2
  5038  01D9  148E               	bsf	14,1	;volatile
  5039  01DA                     i1l336:	
  5040                           ;main.c: 171:     do { ANSELCbits.ANSC3 = 1; } while(0);
  5041                           
  5042  01DA  0023               	movlb	3	; select bank3
  5043  01DB  158E               	bsf	14,3	;volatile
  5044  01DC                     i1l1819:
  5045                           
  5046                           ;main.c: 172:     _delay((unsigned long)((1)*(16000000/4000.0)));
  5047  01DC  3006               	movlw	6
  5048  01DD  00F2               	movwf	??_get_measure
  5049  01DE  3030               	movlw	48
  5050  01DF                     u174_27:
  5051  01DF  0B89               	decfsz	9,f
  5052  01E0  29DF               	goto	u174_27
  5053  01E1  0BF2               	decfsz	??_get_measure,f
  5054  01E2  29DF               	goto	u174_27
  5055  01E3  3200               	nop2
  5056  01E4                     i1l1821:
  5057                           
  5058                           ;main.c: 173:     unsigned res = ADC_GetConversion(PIN_WSP_STATE);
  5059  01E4  3007               	movlw	7
  5060  01E5  3183  239B  3181   	fcall	i1_ADC_GetConversion
  5061  01E8  00F2               	movwf	??_get_measure
  5062  01E9  01F3               	clrf	??_get_measure+1
  5063  01EA  0872               	movf	??_get_measure,w
  5064  01EB  00F4               	movwf	get_measure@res
  5065  01EC  0873               	movf	??_get_measure+1,w
  5066  01ED  00F5               	movwf	get_measure@res+1
  5067  01EE                     i1l1823:
  5068  01EE  0023               	movlb	3	; select bank3
  5069  01EF  118E               	bcf	14,3	;volatile
  5070  01F0                     i1l1825:
  5071  01F0  0022               	movlb	2	; select bank2
  5072  01F1  108E               	bcf	14,1	;volatile
  5073  01F2                     i1l1827:
  5074                           
  5075                           ;main.c: 176:     if (res < BAD_WSP_VOLTAGE) measures++;
  5076  01F2  3000               	movlw	0
  5077  01F3  0275               	subwf	get_measure@res+1,w
  5078  01F4  3080               	movlw	128
  5079  01F5  1903               	skipnz
  5080  01F6  0274               	subwf	get_measure@res,w
  5081  01F7  1803               	skipnc
  5082  01F8  29FA               	goto	u78_21
  5083  01F9  29FB               	goto	u78_20
  5084  01FA                     u78_21:
  5085  01FA  2A00               	goto	i1l1831
  5086  01FB                     u78_20:
  5087  01FB                     i1l1829:
  5088  01FB  3001               	movlw	1
  5089  01FC  00F2               	movwf	??_get_measure
  5090  01FD  0872               	movf	??_get_measure,w
  5091  01FE  07FA               	addwf	get_measure@measures,f
  5092  01FF  2A0A               	goto	i1l1835
  5093  0200                     i1l1831:
  5094  0200  3000               	movlw	0
  5095  0201  0275               	subwf	get_measure@res+1,w
  5096  0202  308F               	movlw	143
  5097  0203  1903               	skipnz
  5098  0204  0274               	subwf	get_measure@res,w
  5099  0205  1C03               	skipc
  5100  0206  2A08               	goto	u79_21
  5101  0207  2A09               	goto	u79_20
  5102  0208                     u79_21:
  5103  0208  2A0A               	goto	i1l1835
  5104  0209                     u79_20:
  5105  0209                     i1l1833:
  5106  0209  01FA               	clrf	get_measure@measures
  5107  020A                     i1l1835:
  5108                           
  5109                           ;main.c: 178:     if (measures > 2) start_alarm();
  5110  020A  3003               	movlw	3
  5111  020B  027A               	subwf	get_measure@measures,w
  5112  020C  1C03               	skipc
  5113  020D  2A0F               	goto	u80_21
  5114  020E  2A10               	goto	u80_20
  5115  020F                     u80_21:
  5116  020F  2A13               	goto	i1l346
  5117  0210                     u80_20:
  5118  0210                     i1l1837:
  5119  0210  3184  241C  3181   	fcall	_start_alarm
  5120  0213                     i1l346:
  5121  0213  0008               	return
  5122  0214                     __end_of_get_measure:
  5123                           
  5124                           	psect	text36
  5125  039B                     __ptext36:	
  5126 ;; *************** function i1_ADC_GetConversion *****************
  5127 ;; Defined at:
  5128 ;;		line 111 in file "mcc_generated_files/adc.c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;  channel         1    wreg     enum E2178
  5131 ;; Auto vars:     Size  Location     Type
  5132 ;;  channel         1    1[COMMON] enum E2178
  5133 ;; Return value:  Size  Location     Type
  5134 ;;                  1    wreg      unsigned char 
  5135 ;; Registers used:
  5136 ;;		wreg, status,2, status,0
  5137 ;; Tracked objects:
  5138 ;;		On entry : 0/0
  5139 ;;		On exit  : 0/0
  5140 ;;		Unchanged: 0/0
  5141 ;; Data sizes:     COMMON   BANK0   BANK1
  5142 ;;      Params:         0       0       0
  5143 ;;      Locals:         1       0       0
  5144 ;;      Temps:          1       0       0
  5145 ;;      Totals:         2       0       0
  5146 ;;Total ram usage:        2 bytes
  5147 ;; Hardware stack levels used: 1
  5148 ;; This function calls:
  5149 ;;		Nothing
  5150 ;; This function is called by:
  5151 ;;		_get_measure
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155  039B                     i1_ADC_GetConversion:	
  5156                           ;psect for function i1_ADC_GetConversion
  5157                           
  5158                           
  5159                           ;incstack = 0
  5160                           ; Regs used in i1_ADC_GetConversion: [wreg+status,2+status,0]
  5161                           ;i1ADC_GetConversion@channel stored from wreg
  5162  039B  00F1               	movwf	i1ADC_GetConversion@channel
  5163  039C                     i1l1797:
  5164                           
  5165                           ;mcc_generated_files/adc.c: 111: char ADC_GetConversion(adc_channel_t channel);mcc_gener
      +                          ated_files/adc.c: 112: {;mcc_generated_files/adc.c: 114:     ADCON0bits.CHS = channel;
  5166  039C  0871               	movf	i1ADC_GetConversion@channel,w
  5167  039D  00F0               	movwf	??i1_ADC_GetConversion
  5168  039E  0DF0               	rlf	??i1_ADC_GetConversion,f
  5169  039F  0DF0               	rlf	??i1_ADC_GetConversion,f
  5170  03A0  0021               	movlb	1	; select bank1
  5171  03A1  081D               	movf	29,w	;volatile
  5172  03A2  0670               	xorwf	??i1_ADC_GetConversion,w
  5173  03A3  3983               	andlw	-125
  5174  03A4  0670               	xorwf	??i1_ADC_GetConversion,w
  5175  03A5  009D               	movwf	29	;volatile
  5176  03A6                     i1l1799:
  5177                           
  5178                           ;mcc_generated_files/adc.c: 117:     ADCON0bits.ADON = 1;
  5179  03A6  141D               	bsf	29,0	;volatile
  5180  03A7                     i1l1801:
  5181                           
  5182                           ;mcc_generated_files/adc.c: 120:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  5183  03A7  3006               	movlw	6
  5184  03A8                     u175_27:
  5185  03A8  0B89               	decfsz	9,f
  5186  03A9  2BA8               	goto	u175_27
  5187  03AA  3200               	nop2
  5188  03AB                     i1l1803:
  5189                           
  5190                           ;mcc_generated_files/adc.c: 123:     ADCON0bits.GO_nDONE = 1;
  5191  03AB  0021               	movlb	1	; select bank1
  5192  03AC  149D               	bsf	29,1	;volatile
  5193  03AD                     i1l63:	
  5194                           ;mcc_generated_files/adc.c: 127:     {;mcc_generated_files/adc.c: 128:     }
  5195                           
  5196                           
  5197                           ;mcc_generated_files/adc.c: 126:     while (ADCON0bits.GO_nDONE)
  5198  03AD  189D               	btfsc	29,1	;volatile
  5199  03AE  2BB0               	goto	u75_21
  5200  03AF  2BB1               	goto	u75_20
  5201  03B0                     u75_21:
  5202  03B0  2BAD               	goto	i1l63
  5203  03B1                     u75_20:
  5204  03B1                     i1l1805:
  5205                           
  5206                           ;mcc_generated_files/adc.c: 130:     return ( ADRESH);
  5207  03B1  081C               	movf	28,w	;volatile
  5208  03B2                     i1l66:
  5209  03B2  0008               	return
  5210  03B3                     __end_ofi1_ADC_GetConversion:
  5211                           
  5212                           	psect	text37
  5213  041C                     __ptext37:	
  5214 ;; *************** function _start_alarm *****************
  5215 ;; Defined at:
  5216 ;;		line 157 in file "main.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;		None
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;		None
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  1    wreg      void 
  5223 ;; Registers used:
  5224 ;;		wreg, status,2, status,0, pclath, cstack
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMMON   BANK0   BANK1
  5230 ;;      Params:         0       0       0
  5231 ;;      Locals:         0       0       0
  5232 ;;      Temps:          0       0       0
  5233 ;;      Totals:         0       0       0
  5234 ;;Total ram usage:        0 bytes
  5235 ;; Hardware stack levels used: 1
  5236 ;; Hardware stack levels required when called: 1
  5237 ;; This function calls:
  5238 ;;		i1_go_close
  5239 ;;		i1_go_close_alt
  5240 ;; This function is called by:
  5241 ;;		_get_measure
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245  041C                     _start_alarm:	
  5246                           ;psect for function _start_alarm
  5247                           
  5248  041C                     i1l1791:	
  5249                           ;incstack = 0
  5250                           ; Regs used in _start_alarm: [wreg+status,2+status,0+pclath+cstack]
  5251                           
  5252                           
  5253                           ;main.c: 158:     FLAGS.bits.ALARM = 1;
  5254  041C  1477               	bsf	_FLAGS,0
  5255  041D                     i1l325:	
  5256                           ;main.c: 159:     do { LATCbits.LATC0 = 1; } while(0);
  5257                           
  5258  041D  0022               	movlb	2	; select bank2
  5259  041E  140E               	bsf	14,0	;volatile
  5260  041F                     i1l326:
  5261                           
  5262                           ;main.c: 160:     INTCONbits.TMR0IE = 1;
  5263  041F  168B               	bsf	11,5	;volatile
  5264                           
  5265                           ;main.c: 161:     if (FLAGS.bits.NORMAL_WORK_MODE) {
  5266  0420  1CF7               	btfss	_FLAGS,1
  5267  0421  2C23               	goto	u74_21
  5268  0422  2C24               	goto	u74_20
  5269  0423                     u74_21:
  5270  0423  2C28               	goto	i1l1795
  5271  0424                     u74_20:
  5272  0424                     i1l1793:
  5273                           
  5274                           ;main.c: 162:         go_close();
  5275  0424  3183  2347  3184   	fcall	i1_go_close
  5276                           
  5277                           ;main.c: 163:     } else {
  5278  0427  2C2B               	goto	i1l329
  5279  0428                     i1l1795:
  5280                           
  5281                           ;main.c: 164:         go_close_alt();
  5282  0428  3184  249E  3184   	fcall	i1_go_close_alt
  5283  042B                     i1l329:
  5284  042B  0008               	return
  5285  042C                     __end_of_start_alarm:
  5286                           
  5287                           	psect	text38
  5288  049E                     __ptext38:	
  5289 ;; *************** function i1_go_close_alt *****************
  5290 ;; Defined at:
  5291 ;;		line 144 in file "main.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;		None
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;		None
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  1    wreg      void 
  5298 ;; Registers used:
  5299 ;;		None
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMMON   BANK0   BANK1
  5305 ;;      Params:         0       0       0
  5306 ;;      Locals:         0       0       0
  5307 ;;      Temps:          0       0       0
  5308 ;;      Totals:         0       0       0
  5309 ;;Total ram usage:        0 bytes
  5310 ;; Hardware stack levels used: 1
  5311 ;; This function calls:
  5312 ;;		Nothing
  5313 ;; This function is called by:
  5314 ;;		_start_alarm
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318  049E                     i1_go_close_alt:	
  5319                           ;psect for function i1_go_close_alt
  5320                           
  5321  049E                     i1l1789:	
  5322                           ;incstack = 0
  5323                           ; Regs used in i1_go_close_alt: []
  5324                           
  5325                           
  5326                           ;main.c: 145:     FLAGS.bits.CLOSED = 1;
  5327  049E  1578               	bsf	_FLAGS+1,2
  5328  049F                     i1l311:	
  5329                           ;main.c: 146:     do { LATCbits.LATC4 = 0; } while(0);
  5330                           
  5331  049F  0022               	movlb	2	; select bank2
  5332  04A0  120E               	bcf	14,4	;volatile
  5333  04A1                     i1l313:	
  5334                           ;main.c: 147:     do { LATCbits.LATC5 = 1; } while(0);
  5335                           
  5336  04A1  168E               	bsf	14,5	;volatile
  5337  04A2                     i1l315:
  5338  04A2  0008               	return
  5339  04A3                     __end_ofi1_go_close_alt:
  5340                           
  5341                           	psect	text39
  5342  0347                     __ptext39:	
  5343 ;; *************** function i1_go_close *****************
  5344 ;; Defined at:
  5345 ;;		line 124 in file "main.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;		None
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;		None
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  1    wreg      void 
  5352 ;; Registers used:
  5353 ;;		wreg
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/0
  5356 ;;		On exit  : 0/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMMON   BANK0   BANK1
  5359 ;;      Params:         0       0       0
  5360 ;;      Locals:         0       0       0
  5361 ;;      Temps:          2       0       0
  5362 ;;      Totals:         2       0       0
  5363 ;;Total ram usage:        2 bytes
  5364 ;; Hardware stack levels used: 1
  5365 ;; This function calls:
  5366 ;;		Nothing
  5367 ;; This function is called by:
  5368 ;;		_start_alarm
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372  0347                     i1_go_close:	
  5373                           ;psect for function i1_go_close
  5374                           
  5375  0347                     i1l1775:	
  5376                           ;incstack = 0
  5377                           ; Regs used in i1_go_close: [wreg]
  5378                           
  5379                           
  5380                           ;main.c: 125:     time_rotation = 0;
  5381  0347  3000               	movlw	0
  5382  0348  0020               	movlb	0	; select bank0
  5383  0349  00A0               	movwf	_time_rotation
  5384  034A  3000               	movlw	0
  5385  034B  00A1               	movwf	_time_rotation+1
  5386  034C  3000               	movlw	0
  5387  034D  00A2               	movwf	_time_rotation+2
  5388  034E                     i1l1777:
  5389  034E  0022               	movlb	2	; select bank2
  5390  034F  160E               	bsf	14,4	;volatile
  5391  0350                     i1l1779:
  5392                           
  5393                           ;main.c: 127:     FLAGS.bits.CLOSING = 1;
  5394  0350  14F8               	bsf	_FLAGS+1,1
  5395                           
  5396                           ;main.c: 128:     _delay((unsigned long)((2 * 1000)*(16000000/4000.0)));
  5397  0351  3029               	movlw	41
  5398  0352  00F1               	movwf	??i1_go_close+1
  5399  0353  3096               	movlw	150
  5400  0354  00F0               	movwf	??i1_go_close
  5401  0355  307F               	movlw	127
  5402  0356                     u176_27:
  5403  0356  0B89               	decfsz	9,f
  5404  0357  2B56               	goto	u176_27
  5405  0358  0BF0               	decfsz	??i1_go_close,f
  5406  0359  2B56               	goto	u176_27
  5407  035A  0BF1               	decfsz	??i1_go_close+1,f
  5408  035B  2B56               	goto	u176_27
  5409  035C  0000               	nop
  5410  035D                     i1l1781:
  5411  035D  0022               	movlb	2	; select bank2
  5412  035E  168E               	bsf	14,5	;volatile
  5413  035F                     i1l300:
  5414                           
  5415                           ;main.c: 130:     time_rele_power = 10;
  5416  035F  300A               	movlw	10
  5417  0360  0020               	movlb	0	; select bank0
  5418  0361  00AD               	movwf	_time_rele_power
  5419  0362  3000               	movlw	0
  5420  0363  00AE               	movwf	_time_rele_power+1
  5421  0364                     i1l1783:
  5422                           
  5423                           ;main.c: 131:     FLAGS.bits.RELE_POWER_WAIT = 1;
  5424  0364  16F7               	bsf	_FLAGS,5
  5425  0365                     i1l1785:
  5426                           
  5427                           ;main.c: 132:     FLAGS.bits.RELE_CONTROL_WAIT = 1;
  5428  0365  1777               	bsf	_FLAGS,6
  5429  0366                     i1l301:
  5430  0366  0008               	return
  5431  0367                     __end_ofi1_go_close:
  5432                           
  5433                           	psect	text40
  5434  042C                     __ptext40:	
  5435 ;; *************** function _TMR0_ISR *****************
  5436 ;; Defined at:
  5437 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;		None
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;		None
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  1    wreg      void 
  5444 ;; Registers used:
  5445 ;;		wreg, status,2, status,0, pclath, cstack
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMMON   BANK0   BANK1
  5451 ;;      Params:         0       0       0
  5452 ;;      Locals:         0       0       0
  5453 ;;      Temps:          0       0       0
  5454 ;;      Totals:         0       0       0
  5455 ;;Total ram usage:        0 bytes
  5456 ;; Hardware stack levels used: 1
  5457 ;; Hardware stack levels required when called: 1
  5458 ;; This function calls:
  5459 ;;		Absolute function
  5460 ;;		_TMR0_DefaultInterruptHandler
  5461 ;;		i1_switch_zum
  5462 ;; This function is called by:
  5463 ;;		_INTERRUPT_InterruptManager
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467  042C                     _TMR0_ISR:	
  5468                           ;psect for function _TMR0_ISR
  5469                           
  5470  042C                     i1l2369:	
  5471                           ;incstack = 0
  5472                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  5473                           
  5474                           
  5475                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  5476  042C  110B               	bcf	11,2	;volatile
  5477  042D                     i1l2371:
  5478                           
  5479                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  5480  042D  0020               	movlb	0	; select bank0
  5481  042E  0840               	movf	_timer0ReloadVal,w	;volatile
  5482  042F  0095               	movwf	21	;volatile
  5483  0430                     i1l2373:
  5484                           
  5485                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  5486  0430  083C               	movf	_TMR0_InterruptHandler,w
  5487  0431  043D               	iorwf	_TMR0_InterruptHandler+1,w
  5488  0432  1903               	btfsc	3,2
  5489  0433  2C35               	goto	u140_21
  5490  0434  2C36               	goto	u140_20
  5491  0435                     u140_21:
  5492  0435  2C3B               	goto	i1l192
  5493  0436                     u140_20:
  5494  0436                     i1l2375:
  5495                           
  5496                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  5497  0436  083D               	movf	_TMR0_InterruptHandler+1,w
  5498  0437  008A               	movwf	10
  5499  0438  083C               	movf	_TMR0_InterruptHandler,w
  5500  0439  000A               	callw
  5501  043A  3184               	pagesel	$
  5502  043B                     i1l192:
  5503  043B  0008               	return
  5504  043C                     __end_of_TMR0_ISR:
  5505                           
  5506                           	psect	text41
  5507  04B9                     __ptext41:	
  5508 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5509 ;; Defined at:
  5510 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;		None
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;		None
  5515 ;; Return value:  Size  Location     Type
  5516 ;;                  1    wreg      void 
  5517 ;; Registers used:
  5518 ;;		None
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMMON   BANK0   BANK1
  5524 ;;      Params:         0       0       0
  5525 ;;      Locals:         0       0       0
  5526 ;;      Temps:          0       0       0
  5527 ;;      Totals:         0       0       0
  5528 ;;Total ram usage:        0 bytes
  5529 ;; Hardware stack levels used: 1
  5530 ;; This function calls:
  5531 ;;		Nothing
  5532 ;; This function is called by:
  5533 ;;		_TMR0_Initialize
  5534 ;;		_TMR0_ISR
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538  04B9                     _TMR0_DefaultInterruptHandler:	
  5539                           ;psect for function _TMR0_DefaultInterruptHandler
  5540                           
  5541  04B9                     i1l198:	
  5542                           ;incstack = 0
  5543                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  5544                           
  5545  04B9  0008               	return
  5546  04BA                     __end_of_TMR0_DefaultInterruptHandler:
  5547                           
  5548                           	psect	text42
  5549  046A                     __ptext42:	
  5550 ;; *************** function i1_switch_zum *****************
  5551 ;; Defined at:
  5552 ;;		line 94 in file "main.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;		None
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;		None
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  1    wreg      void 
  5559 ;; Registers used:
  5560 ;;		wreg
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMMON   BANK0   BANK1
  5566 ;;      Params:         0       0       0
  5567 ;;      Locals:         0       0       0
  5568 ;;      Temps:          0       0       0
  5569 ;;      Totals:         0       0       0
  5570 ;;Total ram usage:        0 bytes
  5571 ;; Hardware stack levels used: 1
  5572 ;; This function calls:
  5573 ;;		Nothing
  5574 ;; This function is called by:
  5575 ;;		_rele_tick
  5576 ;;		_TMR0_ISR
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580  046A                     i1_switch_zum:	
  5581                           ;psect for function i1_switch_zum
  5582                           
  5583  046A                     i1l269:	
  5584                           ;incstack = 0
  5585                           ; Regs used in i1_switch_zum: [wreg]
  5586                           ;main.c: 95:     do { LATAbits.LATA5 = 1; } while(0);
  5587                           
  5588  046A  0022               	movlb	2	; select bank2
  5589  046B  168C               	bsf	12,5	;volatile
  5590  046C                     i1l1809:
  5591                           
  5592                           ;main.c: 96:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  5593  046C  3006               	movlw	6
  5594  046D                     u177_27:
  5595  046D  0B89               	decfsz	9,f
  5596  046E  2C6D               	goto	u177_27
  5597  046F  3200               	nop2
  5598  0470                     i1l1811:
  5599  0470  0022               	movlb	2	; select bank2
  5600  0471  128C               	bcf	12,5	;volatile
  5601  0472                     i1l273:
  5602  0472  0008               	return
  5603  0473                     __end_ofi1_switch_zum:
  5604  007E                     btemp	set	126	;btemp
  5605  007E                     int$flags	set	126
  5606  007E                     wtemp0	set	126
  5607                           
  5608                           	psect	idloc
  5609                           
  5610                           ;Config register IDLOC0 @ 0x8000
  5611                           ;	unspecified, using default values
  5612  8000                     	org	32768
  5613  8000  3FFF               	dw	16383
  5614                           
  5615                           ;Config register IDLOC1 @ 0x8001
  5616                           ;	unspecified, using default values
  5617  8001                     	org	32769
  5618  8001  3FFF               	dw	16383
  5619                           
  5620                           ;Config register IDLOC2 @ 0x8002
  5621                           ;	unspecified, using default values
  5622  8002                     	org	32770
  5623  8002  3FFF               	dw	16383
  5624                           
  5625                           ;Config register IDLOC3 @ 0x8003
  5626                           ;	unspecified, using default values
  5627  8003                     	org	32771
  5628  8003  3FFF               	dw	16383
  5629                           
  5630                           	psect	config
  5631                           
  5632                           ;Config register CONFIG1 @ 0x8007
  5633                           ;	Oscillator Selection
  5634                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5635                           ;	Watchdog Timer Enable
  5636                           ;	WDTE = OFF, WDT disabled
  5637                           ;	Power-up Timer Enable
  5638                           ;	PWRTE = ON, PWRT enabled
  5639                           ;	MCLR Pin Function Select
  5640                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5641                           ;	Flash Program Memory Code Protection
  5642                           ;	CP = OFF, Program memory code protection is disabled
  5643                           ;	Data Memory Code Protection
  5644                           ;	CPD = OFF, Data memory code protection is disabled
  5645                           ;	Brown-out Reset Enable
  5646                           ;	BOREN = ON, Brown-out Reset enabled
  5647                           ;	Clock Out Enable
  5648                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5649                           ;	Internal/External Switchover
  5650                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5651                           ;	Fail-Safe Clock Monitor Enable
  5652                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5653  8007                     	org	32775
  5654  8007  3FC4               	dw	16324
  5655                           
  5656                           ;Config register CONFIG2 @ 0x8008
  5657                           ;	Flash Memory Self-Write Protection
  5658                           ;	WRT = OFF, Write protection off
  5659                           ;	PLL Enable
  5660                           ;	PLLEN = OFF, 4x PLL disabled
  5661                           ;	Stack Overflow/Underflow Reset Enable
  5662                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5663                           ;	Brown-out Reset Voltage Selection
  5664                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5665                           ;	Low-Voltage Programming Enable
  5666                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5667  8008                     	org	32776
  5668  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         27
    Persistent  37
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80      7      33
    BANK1            16      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> switch_zum(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i1_switch_zum(), switch_zum(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ms_tick(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ms_tick(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _ms_tick->_sec_tick_work
    _sec_tick_work->_get_measure
    _get_measure->i1_ADC_GetConversion
    _start_alarm->i1_go_close

Critical Paths under _main in BANK0

    _main->_fun_work
    _main->_switch_wm
    _switch_wm->_boop
    _start_setup->_get_fun_full
    _start_setup->_get_jump_full
    _get_jump_full->_ADC_GetConversion
    _get_fun_full->_ADC_GetConversion
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _povorot->_go_close
    _get_jump->_ADC_GetConversion
    _get_fun->_ADC_GetConversion
    _fun_work->_beep

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1706
                           _fun_work
                            _get_fun
                           _get_jump
                            _povorot
                        _start_setup
                          _switch_wm
 ---------------------------------------------------------------------------------
 (1) _switch_wm                                            1     1      0     316
                                              6 BANK0      1     1      0
                               _boop
 ---------------------------------------------------------------------------------
 (2) _boop                                                 6     5      1     316
                                              0 BANK0      6     5      1
                         _switch_zum
 ---------------------------------------------------------------------------------
 (1) _start_setup                                          0     0      0     984
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                       _get_fun_full
                      _get_jump_full
 ---------------------------------------------------------------------------------
 (2) _get_jump_full                                        5     5      0      70
                                              2 BANK0      5     5      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (2) _get_fun_full                                         5     5      0      70
                                              2 BANK0      5     5      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     422
                     _ADC_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      1     1      0     211
                                              2 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _povorot                                              0     0      0       0
                           _go_close
 ---------------------------------------------------------------------------------
 (1) _get_jump                                             4     4      0      45
                                              2 BANK0      4     4      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (1) _get_fun                                              4     4      0      45
                                              2 BANK0      4     4      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _fun_work                                             1     1      0     316
                                              6 BANK0      1     1      0
                               _beep
                           _go_close
                       _go_close_alt
                            _go_open
                        _go_open_alt
 ---------------------------------------------------------------------------------
 (2) _go_open_alt                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_open                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_close_alt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_close                                             2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _beep                                                 6     5      1     316
                                              0 BANK0      6     5      1
                         _switch_zum
 ---------------------------------------------------------------------------------
 (3) _switch_zum                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0      67
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0      67
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                            _ms_tick *
 ---------------------------------------------------------------------------------
 (7) _ms_tick                                              0     0      0      67
                      _sec_tick_work
 ---------------------------------------------------------------------------------
 (8) _sec_tick_work                                        1     1      0      67
                                              6 COMMON     1     1      0
                        _get_measure
                          _rele_tick
                        _toggle_tone
 ---------------------------------------------------------------------------------
 (9) _toggle_tone                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _rele_tick                                            2     2      0       0
                                              0 COMMON     2     2      0
                       i1_switch_zum
 ---------------------------------------------------------------------------------
 (9) _get_measure                                          4     4      0      67
                                              2 COMMON     4     4      0
                        _start_alarm
                i1_ADC_GetConversion
 ---------------------------------------------------------------------------------
 (10) i1_ADC_GetConversion                                 2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (10) _start_alarm                                         0     0      0       0
                         i1_go_close
                     i1_go_close_alt
 ---------------------------------------------------------------------------------
 (11) i1_go_close_alt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i1_go_close                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                       i1_switch_zum *
 ---------------------------------------------------------------------------------
 (10) i1_switch_zum                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _fun_work
     _beep
       _switch_zum
     _go_close
     _go_close_alt
     _go_open
     _go_open_alt
   _get_fun
     _ADC_GetConversion
   _get_jump
     _ADC_GetConversion
   _povorot
     _go_close
   _start_setup
     _SYSTEM_Initialize
       _ADC_Initialize
       _FVR_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR2_Initialize
         _TMR2_SetInterruptHandler
       _WDT_Initialize
     _TMR0_SetInterruptHandler
     _TMR2_SetInterruptHandler
     _TMR2_StartTimer
     _get_fun_full
       _ADC_GetConversion
     _get_jump_full
       _ADC_GetConversion
   _switch_wm
     _boop
       _switch_zum

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     i1_switch_zum *
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _ms_tick *
       _sec_tick_work
         _get_measure
           _start_alarm
             i1_go_close
             i1_go_close_alt
           i1_ADC_GetConversion
         _rele_tick
           i1_switch_zum
         _toggle_tone

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              60      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      7      21       6       41.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            10      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      2E       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu May 12 16:59:24 2022

        __end_of_TMR2_SetInterruptHandler 048E                          get_fun_full@flag 003B  
                      get_fun@fun_counter 0034                     __end_of_sec_tick_work 019C  
                                      l31 04A6                                        l25 03C8  
                                      l28 0481                                        l63 037C  
                                      l48 047A                                        l66 0381  
                                      l92 03F3                                        _RD 0CA8  
                                      _WR 0CA9                             ?_go_close_alt 0070  
                          ?_get_jump_full 0070                    __end_of_FVR_Initialize 04AB  
                         _timer0ReloadVal 0040                                       l300 033F  
                                     l140 04AD                                       l301 0346  
                                     l205 04AA                                       l311 049A  
                                     l304 0456                                       l320 0497  
                                     l313 049C                                       l137 041B  
                                     l306 0458                                       l322 0498  
                                     l315 049D                                       l403 00D3  
                                     l308 045F                                       l412 0115  
                                     l318 0495                                       l414 0117  
                                     l351 008A                                       l159 048D  
                                     l273 0455                                       l353 008C  
                                     l195 0493                                       l179 03DE  
                                     l371 003A                                       l364 00D2  
                                     l380 0085                                       l269 044D  
                                     l285 02E3                                       l445 0306  
                                     l461 0326                                       l454 015A  
                                     l382 0087                                       l294 0281  
                                     l384 0089                                       l369 0038  
                                     l457 031A                                       l492 024B  
                                     l389 019C                                       l398 01D7  
                                     l497 0385                                       _GIE 005F  
                             _start_alarm 041C                                       _PR2 001B  
                                     u840 0380                                       u841 037F  
                                     u960 005B                                       u961 005A  
                                     u970 006B                                       u971 006A  
                                     u980 007A                                       u981 0079  
                                     u990 0085                                       u991 0084  
                             _start_setup 0214                              ?_go_open_alt 0070  
                         _TMR2_Initialize 0409                                       wreg 0009  
                              i1_go_close 0347                               get_jump@res 0039  
                                    l2001 0345                                      l2011 003C  
                                    l2101 00B0                                      l2021 0060  
                                    l2013 003E                                      l2111 00C6  
                                    l2103 00B5                                      l2031 0073  
                                    l2023 0064                                      l2015 0047  
                                    l2113 00CD                                      l2105 00B9  
                                    l2121 01A9                                      l2033 007A  
                                    l2025 006B                                      l2017 0052  
                                    l2041 00D5                                      l2115 00D1  
                                    l2107 00C0                                      l2131 01C5  
                                    l2123 01AB                                      l2035 007E  
                                    l2027 006F                                      l2019 005B  
                                    l2051 00F4                                      l2043 00D7  
                                    l2109 00C4                                      l2133 01C9  
                                    l2125 01B5                                      l2301 0418  
                                    l2029 0070                                      l2061 010A  
                                    l2053 00FB                                      l2045 00E2  
                                    l2135 01CB                                      l2127 01BA  
                                    l2119 019E                                      l2311 03D6  
                                    l2303 03C9                                      l2039 0080  
                                    l2063 010E                                      l2055 00FF  
                                    l2047 00EB                                      l2401 0133  
                                    l2137 01D2                                      l2129 01BE  
                                    l2313 03D7                                      l2305 03CE  
                                    l2321 04AB                                      l2057 0100  
                                    l2049 00F0                                      l2315 044F  
                                    l2331 02C1                                      l2323 02B6  
                                    l2411 0146                                      l2403 0137  
                                    l2091 008E                                      l2139 01D6  
                                    l2307 03D1                                      l2067 0110  
                                    l2059 0103                                      l2317 0453  
                                    l2333 02C6                                      l2325 02B8  
                                    l2413 014F                                      l2405 013A  
                                    l2093 0097                                      l2261 048E  
                                    l2309 03D5                                      l2341 024E  
                                    l2421 030B                                      l2335 02CC  
                                    l2327 02BA                                      l2415 0153  
                                    l2407 013E                                      l2095 00A2  
                                    l2271 03EA                                      l2263 03DF  
                                    l2319 03B3                                      l2431 0214  
                                    l2351 0263                                      l2343 0250  
                                    l2423 030F                                      l2337 02D8  
                                    l2329 02BD                                      l2361 045E  
                                    l2417 0157                                      l2409 0142  
                                    l2097 00A4                                      l2273 03EF  
                                    l2265 03E2                                      l2281 04A3  
                                    l2441 022E                                      l2433 0217  
                                    l2353 0269                                      l2345 0252  
                                    l2425 0310                                      l2339 02DD  
                                    l2099 00A6                                      l2283 04A7  
                                    l2275 047B                                      l2267 03E5  
                                    l2259 0488                                      l2291 0409  
                                    l2451 0236                                      l2443 022F  
                                    l2435 0218                                      l2355 0276  
                                    l2347 0255                                      l2427 031E  
                                    l2419 0307                                      l2365 0499  
                                    l2381 02F7                                      l2285 0473  
                                    l2277 047E                                      l2269 03E7  
                                    l2293 040C                                      l2461 023E  
                                    l2453 0238                                      l2445 0230  
                                    l2437 0229                                      l2349 025E  
                                    l2357 027B                                      l2429 031F  
                                    l2359 0459                                      l2367 0494  
                                    l2391 011C                                      l2383 02FB  
                                    l2287 0476                                      l2279 047F  
                                    l2295 040D                                      l2471 0248  
                                    l2463 023F                                      l2455 0239  
                                    l2447 0232                                      l2439 022C  
                                    l2393 0120                                      l1921 0380  
                                    l1913 0369                                      l2385 02FF  
                                    l2377 02E4                                      l2289 0477  
                                    l2297 040E                                      l2465 0240  
                                    l2457 023B                                      l2449 0234  
                                    l2395 0124                                      l1915 0375  
                                    l2387 0303                                      l2379 02F3  
                                    l2299 0410                                      l2467 0242  
                                    l2459 023C                                      l2397 0128  
                                    l2389 0118                                      l1917 0376  
                                    l2469 0245                                      l2485 0382  
                                    l2399 012F                                      l1919 037A  
                                    l2487 0386                                      l2489 038A  
                                    l1991 0327                                      l1993 032E  
                                    l1995 0330                                      l1997 033D  
                                    l1999 0344                                      u1000 00EB  
                                    u1001 00EA                                      u1010 00FB  
                                    u1011 00FA                                      u1100 01B5  
                                    u1020 010A                                      u1101 01B4  
                                    u1021 0109                                      u1110 01C5  
                                    u1030 0115                                      u1111 01C4  
                                    u1031 0114                                      u1120 01D2  
                                    u1121 01D1                                      u1070 00B0  
                                    u1071 00AF                                      u1080 00C0  
                                    u1081 00BF                                      u1090 00CD  
                                    u1410 02F3                                      u1091 00CC  
                                    u1411 02F2                                      u1500 0133  
                                    u1420 02F7                                      u1501 0132  
                                    u1421 02F6                                      _LATA 010C  
                                    u1510 013E                                      u1430 02FB  
                                    u1511 013D                                      u1431 02FA  
                                    u1415 02EF                                      _LATC 010E  
                                    u1360 02CC                                      u1520 0142  
                                    u1440 02FF                                      u1361 02CB  
                                    u1521 0141                                      u1441 02FE  
                                    u1370 02E3                                      u1530 0146  
                                    u1450 0303                                      u1371 02E2  
                                    u1531 0145                                      u1451 0302  
                                    u1540 0153                                      u1460 011C  
                                    u1380 0269                                      u1541 0152  
                                    u1461 011B                                      u1381 0268  
                                    u1470 0120                                      u1390 0281  
                                    u1550 030B                                      u1630 038A  
                                    u1471 011F                                      u1391 0280  
                                    u1551 030A                                      u1631 0389  
                                    u1480 0124                                      u1560 030F  
                                    u1481 0123                                      u1561 030E  
                                    u1490 0128                                      u1570 031E  
                                    u1707 02BE                                      u1491 0127  
                                    u1571 031D                                      u1717 02D2  
                                    u1727 0450                                      u1647 0259  
                                    u1657 026F                                      u1667 0042  
                                    u1677 0092                                      u1687 0377  
                                    u1697 0337                                      i1l63 03AD  
                                    i1l66 03B2                                      _TMR0 0015  
                                    _TMR2 001A                                      _WREN 0CAA  
                                    _WPUA 020C                                      _WPUC 020E  
                                    _beep 02B4                                      _boop 024C  
                                    _main 0382                                      fsr0h 0005  
                                    indf0 0000                                      fsr0l 0004  
                                    btemp 007E                            ??_get_fun_full 0037  
                                    start 0026                      __end_ofi1_switch_zum 0473  
                 get_fun_full@fun_counter 0033                            ??_go_close_alt 0035  
                 __end_of_TMR0_Initialize 03DF            ??_TMR0_DefaultInterruptHandler 0070  
                         ?_FVR_Initialize 0070             __end_of_OSCILLATOR_Initialize 0482  
                                   ?_beep 0035                                     ?_boop 0035  
                                   ?_main 0070                                     _EEADR 0191  
                                   _FLAGS 0077                                     _T2CON 001C  
                                   i1l110 0012                                     i1l115 0024  
                                   i1l300 035F                                     i1l116 0024  
                                   i1l301 0366                                     i1l311 049F  
                                   i1l313 04A1                                     i1l162 04B8  
                                   i1l315 04A2                                     i1l156 0449  
                                   i1l325 041D                                     i1l421 0299  
                                   i1l326 041F                                     i1l334 01D8  
                                   i1l192 043B                                     i1l336 01DA  
                                   i1l273 0472                                     i1l329 042B  
                                   i1l441 019B                                     i1l346 0213  
                                   i1l426 02AE                                     i1l418 0295  
                                   i1l427 02B0                                     i1l428 02B3  
                                   i1l276 0469                                     i1l269 046A  
                                   i1l198 04B9                                     i1l467 0408  
                                   u80_20 0210                                     u80_21 020F  
                                   u81_20 0289                                     u81_21 0288  
                                   _TRISA 008C                                     _TRISC 008E  
                                   u74_20 0424                                     u82_20 0290  
                                   u90_20 0198                                     u74_21 0423  
                                   u82_21 028F                                     u90_21 0195  
                                   u75_20 03B1                                     u83_20 0299  
                                   u75_21 03B0                                     u83_21 0298  
                                   u91_24 019A                                     u76_20 0468  
                                   u76_21 0466                                     u85_20 015F  
                                   u85_21 015E                                     u77_24 0469  
                                   u78_20 01FB                                     u86_20 0171  
                                   u78_21 01FA                                     u86_21 0170  
                                   u79_20 0209                                     u87_20 017B  
                                   u79_21 0208                                     u87_21 0178  
                                   u88_24 017D                                     u89_20 018E  
                                   u89_21 018D                 ?_TMR0_SetInterruptHandler 0035  
                        __end_of_TMR0_ISR 043C                           __end_of_get_fun 00D3  
                        __end_of_TMR2_ISR 044A                           __end_of_go_open 0460  
                                   beep@i 003A                                     beep@j 0039  
                          _WDT_Initialize 04A3                                     boop@i 003A  
                                   boop@j 0039                           __end_of_ms_tick 0409  
                                   pclath 000A                           __end_of_povorot 0307  
                                   status 0003                                     wtemp0 007E  
                       ms_tick@tick_count 0023                           _TMR2_StartTimer 04AB  
                         __initialization 0027                              __end_of_beep 02E4  
                            __end_of_boop 0282                              __end_of_main 039B  
                         ??_get_jump_full 0037                   __end_of_TMR2_Initialize 041C  
             ?_INTERRUPT_InterruptManager 0070                                    ??_beep 0036  
                                  ??_boop 0036                  _TMR2_SetInterruptHandler 0488  
                                  ??_main 003C                    __end_of_WDT_Initialize 04A7  
                             ?i1_go_close 0070                       i1_ADC_GetConversion 039B  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _ADRESH 009C                                    _ADRESL 009B  
                                  _EEDATA 0193                                    _EECON2 0196  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  _ANSELC 018E                                    _BORCON 0116  
                                  i1l2071 03F9                                    u104_20 0402  
                                  i1l2073 0402                                    u104_21 0401  
                                  i1l2075 0405                                    i1l2069 03F4  
                                  i1l2085 043C                                    i1l2087 043E  
                                  i1l1801 03A7                                    i1l2089 0444  
                                  i1l1811 0470                                    i1l2371 042D  
                                  i1l1803 03AB                                    i1l2373 0430  
                                  i1l1805 03B1                                    i1l1821 01E4  
                                  i1l2375 0436                                    i1l1831 0200  
                                  i1l1823 01EE                                    u106_20 0444  
                                  i1l1809 046C                                    i1l2369 042C  
                                  i1l1833 0209                                    i1l1825 01F0  
                                  i1l1841 0282                                    i1l1817 0460  
                                  u106_21 0443                                    i1l2481 001B  
                                  i1l2473 0006                                    i1l1835 020A  
                                  i1l1827 01F2                                    i1l1819 01DC  
                                  i1l1851 02A7                                    i1l1843 0285  
                                  i1l1931 015F                                    i1l2483 0020  
                                  i1l2475 000A                                    i1l1781 035D  
                                  i1l1837 0210                                    i1l1829 01FB  
                                  i1l1853 02A9                                    i1l1845 0289  
                                  i1l1941 0181                                    i1l1933 016A  
                                  i1l2477 000E                                    i1l1783 0364  
                                  i1l1775 0347                                    i1l1791 041C  
                                  i1l1855 02AA                                    i1l1847 0290  
                                  i1l1943 0184                                    i1l1935 016D  
                                  i1l2479 0016                                    i1l1785 0365  
                                  i1l1777 034E                                    i1l1793 0424  
                                  i1l1857 02AB                                    i1l1849 029B  
                                  i1l1945 0188                                    i1l1937 0171  
                                  i1l1929 015B                                    i1l1779 0350  
                                  i1l1795 0428                                    i1l1859 02AC  
                                  i1l1947 018E                                    i1l1939 017D  
                                  i1l1789 049E                                    i1l1797 039C  
                                  i1l1949 019A                                    i1l1799 03A6  
                                  u140_20 0436                                    u140_21 0435  
                                  u160_20 0016                                    u160_21 0015  
                                  u161_20 001B                                    u161_21 001A  
                                  u162_20 0020                                    u162_21 001F  
                                  _FVRCON 0117                                    u173_27 02A0  
                                  u158_20 000A                                    u158_21 0009  
                                  u174_27 01DF                                    u159_20 000E  
                                  u159_21 000D                                    u175_27 03A8  
                                  u176_27 0356                                    u177_27 046D  
                        _GOOD_WSP_VOLTAGE 04AE                                    _OSCCON 0099  
                                  _WDTCON 0097                      ?i1_ADC_GetConversion 0070  
                        __end_of_get_jump 01D8                          __end_of_go_close 0347  
                    _switch_zum$intlevel0 044D                          ?_TMR0_Initialize 0070  
                        __end_of_fun_work 015B                                 ??_get_fun 0037  
                               ??_go_open 0035                      __end_of_get_fun_full 008A  
                               ??_ms_tick 0077                           ?_WDT_Initialize 0070  
                          get_measure@res 0074                  ADC_GetConversion@channel 0036  
                   _HIGH_WATER_RESISTANSE 04B4                                 ??_povorot 0037  
                 __end_of_TMR2_StartTimer 04AE  TMR0_SetInterruptHandler@InterruptHandler 0035  
TMR2_SetInterruptHandler@InterruptHandler 0035                      __end_of_go_close_alt 049E  
                       _SYSTEM_Initialize 03B3                   __end_of__initialization 0035  
                      ?_SYSTEM_Initialize 0070                             _UP_RESISTANSE 04B2  
                            ?_toggle_tone 0070                     ??i1_ADC_GetConversion 0070  
                          __pcstackCOMMON 0070                 get_jump_full@jump_counter 0031  
                     ??_SYSTEM_Initialize 0038                                 ?_TMR0_ISR 0070  
                               ?_TMR2_ISR 0070                          ?_TMR2_Initialize 0070  
              i1ADC_GetConversion@channel 0071                              ?_start_alarm 0070  
                          _OPTION_REGbits 0095                              ?_start_setup 0070  
                            i1_switch_zum 046A                 __end_of_SYSTEM_Initialize 03C9  
                              __pbssBANK0 0020                          ??_FVR_Initialize 0035  
                              __pmaintext 0382          __end_of_TMR0_SetInterruptHandler 0494  
                              ??_TMR0_ISR 0070                                ??_TMR2_ISR 0077  
                         _time_rele_power 002D                                __pintentry 0004  
                       _time_rele_control 002B                          get_jump_full@res 0039  
                                 _OSCTUNE 0098                          ?_TMR2_StartTimer 0070  
                               ?_get_jump 0070                                 ?_go_close 0070  
                               ?_fun_work 0070                      _ADC_InterruptHandler 002F  
              ??_TMR2_SetInterruptHandler 0037                  __end_of_GOOD_WSP_VOLTAGE 04B0  
                                 __ptext1 0307                                   __ptext2 024C  
                     get_measure@measures 007A                                   __ptext3 0214  
                                 __ptext4 00D3                                   __ptext5 0038  
                                 __ptext6 04AB                                   __ptext7 03B3  
                                 __ptext8 04A3                                   __ptext9 0409  
                                 _get_fun 008A                                   _go_open 0456  
                   _OSCILLATOR_Initialize 047B                                 _T2CONbits 001C  
                ??_PIN_MANAGER_Initialize 0035                                   _ms_tick 03F4  
                            ??i1_go_close 0070                                   _povorot 02E4  
                                 clrloop0 0483                                ??_get_jump 0037  
                              ??_go_close 0035                         __end_of_rele_tick 02B4  
                    end_of_initialization 0035                                ??_fun_work 003B  
                            _get_fun_full 0038                        __end_ofi1_go_close 0367  
                   __end_of_get_jump_full 0118                             _sec_tick_work 015B  
                            _go_close_alt 0499                          ??_WDT_Initialize 0035  
            __end_of_LOW_WATER_RESISTANSE 04B8                  _TMR0_SetInterruptHandler 048E  
                       __end_of_switch_wm 0327                                 _TRISAbits 008C  
                               _TRISCbits 008E                           get_fun_full@res 0039  
                              get_fun@res 0039                             ??_get_measure 0072  
                              _switch_zum 044A      __end_of_TMR2_DefaultInterruptHandler 04B9  
            _TMR2_DefaultInterruptHandler 04B8                            ?_sec_tick_work 0070  
                          _ADC_Initialize 0473                    ?_OSCILLATOR_Initialize 0070  
                          i1_go_close_alt 049E                             ??_go_open_alt 0035  
                     start_initialization 0027               __end_ofi1_ADC_GetConversion 03B3  
                  __end_of_ADC_Initialize 047B                       __end_of_get_measure 0214  
                  __end_ofi1_go_close_alt 04A3             ?_TMR2_DefaultInterruptHandler 0070  
                             __pbssCOMMON 0077                                 ___latbits 0000  
                           __pcstackBANK0 0035                       __end_of_go_open_alt 0499  
                    _LOW_WATER_RESISTANSE 04B6                     _TMR0_InterruptHandler 003C  
                               __pnvBANK0 003C                    _PIN_MANAGER_Initialize 03DF  
                         ??_sec_tick_work 0076                               ?_switch_zum 0070  
                         ?_ADC_Initialize 0070                                 beep@count 0035  
                         ?i1_go_close_alt 0070              ??_INTERRUPT_InterruptManager 0077  
                                ?_get_fun 0070                                  ?_go_open 0070  
                       sec_tick_work@iled 0079                                  ?_ms_tick 0070  
                                ?_povorot 0070                         ??_TMR0_Initialize 0037  
                       get_jump_full@flag 003B                                  _LATAbits 010C  
                                _LATCbits 010E                                 _rele_tick 0282  
                               clear_ram0 0482                                  _PIE1bits 0091  
                             _get_measure 01D8                ??_TMR0_SetInterruptHandler 0037  
                                _PIR1bits 0011                                 _time_meas 007B  
                                _TMR0_ISR 042C                                  _TMR2_ISR 043C  
                               boop@count 0035                                _ADCON0bits 009D  
                                _WPUAbits 020C                                  _WPUCbits 020E  
          ??_TMR2_DefaultInterruptHandler 0070                               _go_open_alt 0494  
               ?_TMR2_SetInterruptHandler 0035                                 _switch_wm 0307  
                       ??_TMR2_Initialize 0037                                ?_rele_tick 0070  
                   __end_of_UP_RESISTANSE 04B4                             ??_toggle_tone 0070  
                       _ADC_GetConversion 0367                   ??_OSCILLATOR_Initialize 0035  
                      ?_ADC_GetConversion 0070                             ??_start_alarm 0072  
                              _ANSELAbits 018C                                _ANSELCbits 018E  
                     ??_ADC_GetConversion 0035                             ??_start_setup 003C  
                           _time_rele_gap 0029                                ?_switch_wm 0070  
                                __ptext10 0488                                  __ptext11 03C9  
                                __ptext20 0367                                  __ptext12 048E  
                                __ptext21 0118                                  __ptext13 03DF  
                                __ptext30 04B8                                  __ptext22 0494  
                                __ptext14 047B                                  __ptext31 03F4  
                                __ptext23 0456                                  __ptext15 04A7  
                                __ptext40 042C                                  __ptext32 015B  
                                __ptext24 0499                                  __ptext16 0473  
                                __ptext41 04B9                                  __ptext33 0460  
                                __ptext25 0327                                  __ptext17 02E4  
                                __ptext42 046A                                  __ptext34 0282  
                                __ptext26 02B4                                  __ptext18 019C  
                                __ptext35 01D8                                  __ptext27 044A  
                                __ptext19 008A                                  __ptext36 039B  
                                __ptext37 041C                                  __ptext29 043C  
                                __ptext38 049E                                  __ptext39 0347  
                           ?i1_switch_zum 0070                                  beep@time 0038  
                                _get_jump 019C                                  _go_close 0327  
                         _BAD_WSP_VOLTAGE 04B0                             _time_rotation 0020  
                                _fun_work 0118      __end_of_TMR0_DefaultInterruptHandler 04BA  
            _TMR0_DefaultInterruptHandler 04B9                 __end_of_ADC_GetConversion 0382  
                                _time_led 0027                                  boop@time 0038  
                                int$flags 007E                         ??_TMR2_StartTimer 0035  
                     __end_of_toggle_tone 046A        __end_of_INTERRUPT_InterruptManager 0026  
              _INTERRUPT_InterruptManager 0004                      get_jump@jump_counter 0032  
                              _INTCONbits 000B             __end_of_HIGH_WATER_RESISTANSE 04B6  
                              _FVRCONbits 0117                            ??i1_switch_zum 0070  
                     __end_of_start_alarm 042C                       __end_of_start_setup 024C  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0070  
                             ??_rele_tick 0070                          ??_ADC_Initialize 0035  
           ?_TMR0_DefaultInterruptHandler 0070                          ??i1_go_close_alt 0070  
                            ??_switch_zum 0035                             _get_jump_full 00D3  
                           __pstringtext1 04AE                             __pstringtext2 04B0  
                           __pstringtext3 04B2                             __pstringtext4 04B4  
                           __pstringtext5 04B6                            _FVR_Initialize 04A7  
                              _OPTION_REG 0095               _FRIMWARE_VERSION_EEPROM_ADR 007C  
                         _TMR0_Initialize 03C9                   __end_of_BAD_WSP_VOLTAGE 04B2  
                             ??_switch_wm 003B                               _time_zummer 0025  
                      __end_of_switch_zum 0456            __end_of_PIN_MANAGER_Initialize 03F4  
                   _TMR2_InterruptHandler 003E                               _toggle_tone 0460  
                           ?_get_fun_full 0070                              ?_get_measure 0070  
