

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed May 11 16:18:15 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1823
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    60                           	dabs	1,0x7E,2
    61  0000                     
    62                           ; Version 2.40
    63                           ; Generated 17/11/2021 GMT
    64                           ; 
    65                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC16F1823 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     	;# 
    98  0001                     	;# 
    99  0002                     	;# 
   100  0003                     	;# 
   101  0004                     	;# 
   102  0005                     	;# 
   103  0006                     	;# 
   104  0007                     	;# 
   105  0008                     	;# 
   106  0009                     	;# 
   107  000A                     	;# 
   108  000B                     	;# 
   109  000C                     	;# 
   110  000E                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0016                     	;# 
   116  0017                     	;# 
   117  0018                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  008C                     	;# 
   125  008E                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  010C                     	;# 
   140  010E                     	;# 
   141  0111                     	;# 
   142  0112                     	;# 
   143  0113                     	;# 
   144  0114                     	;# 
   145  0115                     	;# 
   146  0116                     	;# 
   147  0117                     	;# 
   148  0118                     	;# 
   149  0119                     	;# 
   150  011A                     	;# 
   151  011B                     	;# 
   152  011D                     	;# 
   153  011D                     	;# 
   154  018C                     	;# 
   155  018E                     	;# 
   156  0191                     	;# 
   157  0191                     	;# 
   158  0192                     	;# 
   159  0193                     	;# 
   160  0193                     	;# 
   161  0193                     	;# 
   162  0194                     	;# 
   163  0195                     	;# 
   164  0196                     	;# 
   165  0199                     	;# 
   166  019A                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019C                     	;# 
   172  019C                     	;# 
   173  019D                     	;# 
   174  019E                     	;# 
   175  019F                     	;# 
   176  020C                     	;# 
   177  020E                     	;# 
   178  0211                     	;# 
   179  0211                     	;# 
   180  0212                     	;# 
   181  0212                     	;# 
   182  0213                     	;# 
   183  0213                     	;# 
   184  0214                     	;# 
   185  0214                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0216                     	;# 
   190  0216                     	;# 
   191  0217                     	;# 
   192  0217                     	;# 
   193  0291                     	;# 
   194  0291                     	;# 
   195  0292                     	;# 
   196  0293                     	;# 
   197  0294                     	;# 
   198  0295                     	;# 
   199  0295                     	;# 
   200  0296                     	;# 
   201  0391                     	;# 
   202  0392                     	;# 
   203  0393                     	;# 
   204  039A                     	;# 
   205  039C                     	;# 
   206  039D                     	;# 
   207  039E                     	;# 
   208  039F                     	;# 
   209  0FE4                     	;# 
   210  0FE5                     	;# 
   211  0FE6                     	;# 
   212  0FE7                     	;# 
   213  0FE8                     	;# 
   214  0FE9                     	;# 
   215  0FEA                     	;# 
   216  0FEB                     	;# 
   217  0FED                     	;# 
   218  0FEE                     	;# 
   219  0FEF                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000E                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  008C                     	;# 
   248  008E                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0095                     	;# 
   252  0096                     	;# 
   253  0097                     	;# 
   254  0098                     	;# 
   255  0099                     	;# 
   256  009A                     	;# 
   257  009B                     	;# 
   258  009B                     	;# 
   259  009C                     	;# 
   260  009D                     	;# 
   261  009E                     	;# 
   262  010C                     	;# 
   263  010E                     	;# 
   264  0111                     	;# 
   265  0112                     	;# 
   266  0113                     	;# 
   267  0114                     	;# 
   268  0115                     	;# 
   269  0116                     	;# 
   270  0117                     	;# 
   271  0118                     	;# 
   272  0119                     	;# 
   273  011A                     	;# 
   274  011B                     	;# 
   275  011D                     	;# 
   276  011D                     	;# 
   277  018C                     	;# 
   278  018E                     	;# 
   279  0191                     	;# 
   280  0191                     	;# 
   281  0192                     	;# 
   282  0193                     	;# 
   283  0193                     	;# 
   284  0193                     	;# 
   285  0194                     	;# 
   286  0195                     	;# 
   287  0196                     	;# 
   288  0199                     	;# 
   289  019A                     	;# 
   290  019B                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019B                     	;# 
   294  019C                     	;# 
   295  019C                     	;# 
   296  019D                     	;# 
   297  019E                     	;# 
   298  019F                     	;# 
   299  020C                     	;# 
   300  020E                     	;# 
   301  0211                     	;# 
   302  0211                     	;# 
   303  0212                     	;# 
   304  0212                     	;# 
   305  0213                     	;# 
   306  0213                     	;# 
   307  0214                     	;# 
   308  0214                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0215                     	;# 
   312  0216                     	;# 
   313  0216                     	;# 
   314  0217                     	;# 
   315  0217                     	;# 
   316  0291                     	;# 
   317  0291                     	;# 
   318  0292                     	;# 
   319  0293                     	;# 
   320  0294                     	;# 
   321  0295                     	;# 
   322  0295                     	;# 
   323  0296                     	;# 
   324  0391                     	;# 
   325  0392                     	;# 
   326  0393                     	;# 
   327  039A                     	;# 
   328  039C                     	;# 
   329  039D                     	;# 
   330  039E                     	;# 
   331  039F                     	;# 
   332  0FE4                     	;# 
   333  0FE5                     	;# 
   334  0FE6                     	;# 
   335  0FE7                     	;# 
   336  0FE8                     	;# 
   337  0FE9                     	;# 
   338  0FEA                     	;# 
   339  0FEB                     	;# 
   340  0FED                     	;# 
   341  0FEE                     	;# 
   342  0FEF                     	;# 
   343  0000                     	;# 
   344  0001                     	;# 
   345  0002                     	;# 
   346  0003                     	;# 
   347  0004                     	;# 
   348  0005                     	;# 
   349  0006                     	;# 
   350  0007                     	;# 
   351  0008                     	;# 
   352  0009                     	;# 
   353  000A                     	;# 
   354  000B                     	;# 
   355  000C                     	;# 
   356  000E                     	;# 
   357  0011                     	;# 
   358  0012                     	;# 
   359  0015                     	;# 
   360  0016                     	;# 
   361  0016                     	;# 
   362  0017                     	;# 
   363  0018                     	;# 
   364  0019                     	;# 
   365  001A                     	;# 
   366  001B                     	;# 
   367  001C                     	;# 
   368  001E                     	;# 
   369  001F                     	;# 
   370  008C                     	;# 
   371  008E                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0095                     	;# 
   375  0096                     	;# 
   376  0097                     	;# 
   377  0098                     	;# 
   378  0099                     	;# 
   379  009A                     	;# 
   380  009B                     	;# 
   381  009B                     	;# 
   382  009C                     	;# 
   383  009D                     	;# 
   384  009E                     	;# 
   385  010C                     	;# 
   386  010E                     	;# 
   387  0111                     	;# 
   388  0112                     	;# 
   389  0113                     	;# 
   390  0114                     	;# 
   391  0115                     	;# 
   392  0116                     	;# 
   393  0117                     	;# 
   394  0118                     	;# 
   395  0119                     	;# 
   396  011A                     	;# 
   397  011B                     	;# 
   398  011D                     	;# 
   399  011D                     	;# 
   400  018C                     	;# 
   401  018E                     	;# 
   402  0191                     	;# 
   403  0191                     	;# 
   404  0192                     	;# 
   405  0193                     	;# 
   406  0193                     	;# 
   407  0193                     	;# 
   408  0194                     	;# 
   409  0195                     	;# 
   410  0196                     	;# 
   411  0199                     	;# 
   412  019A                     	;# 
   413  019B                     	;# 
   414  019B                     	;# 
   415  019B                     	;# 
   416  019B                     	;# 
   417  019C                     	;# 
   418  019C                     	;# 
   419  019D                     	;# 
   420  019E                     	;# 
   421  019F                     	;# 
   422  020C                     	;# 
   423  020E                     	;# 
   424  0211                     	;# 
   425  0211                     	;# 
   426  0212                     	;# 
   427  0212                     	;# 
   428  0213                     	;# 
   429  0213                     	;# 
   430  0214                     	;# 
   431  0214                     	;# 
   432  0215                     	;# 
   433  0215                     	;# 
   434  0215                     	;# 
   435  0216                     	;# 
   436  0216                     	;# 
   437  0217                     	;# 
   438  0217                     	;# 
   439  0291                     	;# 
   440  0291                     	;# 
   441  0292                     	;# 
   442  0293                     	;# 
   443  0294                     	;# 
   444  0295                     	;# 
   445  0295                     	;# 
   446  0296                     	;# 
   447  0391                     	;# 
   448  0392                     	;# 
   449  0393                     	;# 
   450  039A                     	;# 
   451  039C                     	;# 
   452  039D                     	;# 
   453  039E                     	;# 
   454  039F                     	;# 
   455  0FE4                     	;# 
   456  0FE5                     	;# 
   457  0FE6                     	;# 
   458  0FE7                     	;# 
   459  0FE8                     	;# 
   460  0FE9                     	;# 
   461  0FEA                     	;# 
   462  0FEB                     	;# 
   463  0FED                     	;# 
   464  0FEE                     	;# 
   465  0FEF                     	;# 
   466  0000                     	;# 
   467  0001                     	;# 
   468  0002                     	;# 
   469  0003                     	;# 
   470  0004                     	;# 
   471  0005                     	;# 
   472  0006                     	;# 
   473  0007                     	;# 
   474  0008                     	;# 
   475  0009                     	;# 
   476  000A                     	;# 
   477  000B                     	;# 
   478  000C                     	;# 
   479  000E                     	;# 
   480  0011                     	;# 
   481  0012                     	;# 
   482  0015                     	;# 
   483  0016                     	;# 
   484  0016                     	;# 
   485  0017                     	;# 
   486  0018                     	;# 
   487  0019                     	;# 
   488  001A                     	;# 
   489  001B                     	;# 
   490  001C                     	;# 
   491  001E                     	;# 
   492  001F                     	;# 
   493  008C                     	;# 
   494  008E                     	;# 
   495  0091                     	;# 
   496  0092                     	;# 
   497  0095                     	;# 
   498  0096                     	;# 
   499  0097                     	;# 
   500  0098                     	;# 
   501  0099                     	;# 
   502  009A                     	;# 
   503  009B                     	;# 
   504  009B                     	;# 
   505  009C                     	;# 
   506  009D                     	;# 
   507  009E                     	;# 
   508  010C                     	;# 
   509  010E                     	;# 
   510  0111                     	;# 
   511  0112                     	;# 
   512  0113                     	;# 
   513  0114                     	;# 
   514  0115                     	;# 
   515  0116                     	;# 
   516  0117                     	;# 
   517  0118                     	;# 
   518  0119                     	;# 
   519  011A                     	;# 
   520  011B                     	;# 
   521  011D                     	;# 
   522  011D                     	;# 
   523  018C                     	;# 
   524  018E                     	;# 
   525  0191                     	;# 
   526  0191                     	;# 
   527  0192                     	;# 
   528  0193                     	;# 
   529  0193                     	;# 
   530  0193                     	;# 
   531  0194                     	;# 
   532  0195                     	;# 
   533  0196                     	;# 
   534  0199                     	;# 
   535  019A                     	;# 
   536  019B                     	;# 
   537  019B                     	;# 
   538  019B                     	;# 
   539  019B                     	;# 
   540  019C                     	;# 
   541  019C                     	;# 
   542  019D                     	;# 
   543  019E                     	;# 
   544  019F                     	;# 
   545  020C                     	;# 
   546  020E                     	;# 
   547  0211                     	;# 
   548  0211                     	;# 
   549  0212                     	;# 
   550  0212                     	;# 
   551  0213                     	;# 
   552  0213                     	;# 
   553  0214                     	;# 
   554  0214                     	;# 
   555  0215                     	;# 
   556  0215                     	;# 
   557  0215                     	;# 
   558  0216                     	;# 
   559  0216                     	;# 
   560  0217                     	;# 
   561  0217                     	;# 
   562  0291                     	;# 
   563  0291                     	;# 
   564  0292                     	;# 
   565  0293                     	;# 
   566  0294                     	;# 
   567  0295                     	;# 
   568  0295                     	;# 
   569  0296                     	;# 
   570  0391                     	;# 
   571  0392                     	;# 
   572  0393                     	;# 
   573  039A                     	;# 
   574  039C                     	;# 
   575  039D                     	;# 
   576  039E                     	;# 
   577  039F                     	;# 
   578  0FE4                     	;# 
   579  0FE5                     	;# 
   580  0FE6                     	;# 
   581  0FE7                     	;# 
   582  0FE8                     	;# 
   583  0FE9                     	;# 
   584  0FEA                     	;# 
   585  0FEB                     	;# 
   586  0FED                     	;# 
   587  0FEE                     	;# 
   588  0FEF                     	;# 
   589  0000                     	;# 
   590  0001                     	;# 
   591  0002                     	;# 
   592  0003                     	;# 
   593  0004                     	;# 
   594  0005                     	;# 
   595  0006                     	;# 
   596  0007                     	;# 
   597  0008                     	;# 
   598  0009                     	;# 
   599  000A                     	;# 
   600  000B                     	;# 
   601  000C                     	;# 
   602  000E                     	;# 
   603  0011                     	;# 
   604  0012                     	;# 
   605  0015                     	;# 
   606  0016                     	;# 
   607  0016                     	;# 
   608  0017                     	;# 
   609  0018                     	;# 
   610  0019                     	;# 
   611  001A                     	;# 
   612  001B                     	;# 
   613  001C                     	;# 
   614  001E                     	;# 
   615  001F                     	;# 
   616  008C                     	;# 
   617  008E                     	;# 
   618  0091                     	;# 
   619  0092                     	;# 
   620  0095                     	;# 
   621  0096                     	;# 
   622  0097                     	;# 
   623  0098                     	;# 
   624  0099                     	;# 
   625  009A                     	;# 
   626  009B                     	;# 
   627  009B                     	;# 
   628  009C                     	;# 
   629  009D                     	;# 
   630  009E                     	;# 
   631  010C                     	;# 
   632  010E                     	;# 
   633  0111                     	;# 
   634  0112                     	;# 
   635  0113                     	;# 
   636  0114                     	;# 
   637  0115                     	;# 
   638  0116                     	;# 
   639  0117                     	;# 
   640  0118                     	;# 
   641  0119                     	;# 
   642  011A                     	;# 
   643  011B                     	;# 
   644  011D                     	;# 
   645  011D                     	;# 
   646  018C                     	;# 
   647  018E                     	;# 
   648  0191                     	;# 
   649  0191                     	;# 
   650  0192                     	;# 
   651  0193                     	;# 
   652  0193                     	;# 
   653  0193                     	;# 
   654  0194                     	;# 
   655  0195                     	;# 
   656  0196                     	;# 
   657  0199                     	;# 
   658  019A                     	;# 
   659  019B                     	;# 
   660  019B                     	;# 
   661  019B                     	;# 
   662  019B                     	;# 
   663  019C                     	;# 
   664  019C                     	;# 
   665  019D                     	;# 
   666  019E                     	;# 
   667  019F                     	;# 
   668  020C                     	;# 
   669  020E                     	;# 
   670  0211                     	;# 
   671  0211                     	;# 
   672  0212                     	;# 
   673  0212                     	;# 
   674  0213                     	;# 
   675  0213                     	;# 
   676  0214                     	;# 
   677  0214                     	;# 
   678  0215                     	;# 
   679  0215                     	;# 
   680  0215                     	;# 
   681  0216                     	;# 
   682  0216                     	;# 
   683  0217                     	;# 
   684  0217                     	;# 
   685  0291                     	;# 
   686  0291                     	;# 
   687  0292                     	;# 
   688  0293                     	;# 
   689  0294                     	;# 
   690  0295                     	;# 
   691  0295                     	;# 
   692  0296                     	;# 
   693  0391                     	;# 
   694  0392                     	;# 
   695  0393                     	;# 
   696  039A                     	;# 
   697  039C                     	;# 
   698  039D                     	;# 
   699  039E                     	;# 
   700  039F                     	;# 
   701  0FE4                     	;# 
   702  0FE5                     	;# 
   703  0FE6                     	;# 
   704  0FE7                     	;# 
   705  0FE8                     	;# 
   706  0FE9                     	;# 
   707  0FEA                     	;# 
   708  0FEB                     	;# 
   709  0FED                     	;# 
   710  0FEE                     	;# 
   711  0FEF                     	;# 
   712  0000                     	;# 
   713  0001                     	;# 
   714  0002                     	;# 
   715  0003                     	;# 
   716  0004                     	;# 
   717  0005                     	;# 
   718  0006                     	;# 
   719  0007                     	;# 
   720  0008                     	;# 
   721  0009                     	;# 
   722  000A                     	;# 
   723  000B                     	;# 
   724  000C                     	;# 
   725  000E                     	;# 
   726  0011                     	;# 
   727  0012                     	;# 
   728  0015                     	;# 
   729  0016                     	;# 
   730  0016                     	;# 
   731  0017                     	;# 
   732  0018                     	;# 
   733  0019                     	;# 
   734  001A                     	;# 
   735  001B                     	;# 
   736  001C                     	;# 
   737  001E                     	;# 
   738  001F                     	;# 
   739  008C                     	;# 
   740  008E                     	;# 
   741  0091                     	;# 
   742  0092                     	;# 
   743  0095                     	;# 
   744  0096                     	;# 
   745  0097                     	;# 
   746  0098                     	;# 
   747  0099                     	;# 
   748  009A                     	;# 
   749  009B                     	;# 
   750  009B                     	;# 
   751  009C                     	;# 
   752  009D                     	;# 
   753  009E                     	;# 
   754  010C                     	;# 
   755  010E                     	;# 
   756  0111                     	;# 
   757  0112                     	;# 
   758  0113                     	;# 
   759  0114                     	;# 
   760  0115                     	;# 
   761  0116                     	;# 
   762  0117                     	;# 
   763  0118                     	;# 
   764  0119                     	;# 
   765  011A                     	;# 
   766  011B                     	;# 
   767  011D                     	;# 
   768  011D                     	;# 
   769  018C                     	;# 
   770  018E                     	;# 
   771  0191                     	;# 
   772  0191                     	;# 
   773  0192                     	;# 
   774  0193                     	;# 
   775  0193                     	;# 
   776  0193                     	;# 
   777  0194                     	;# 
   778  0195                     	;# 
   779  0196                     	;# 
   780  0199                     	;# 
   781  019A                     	;# 
   782  019B                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019C                     	;# 
   787  019C                     	;# 
   788  019D                     	;# 
   789  019E                     	;# 
   790  019F                     	;# 
   791  020C                     	;# 
   792  020E                     	;# 
   793  0211                     	;# 
   794  0211                     	;# 
   795  0212                     	;# 
   796  0212                     	;# 
   797  0213                     	;# 
   798  0213                     	;# 
   799  0214                     	;# 
   800  0214                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0215                     	;# 
   804  0216                     	;# 
   805  0216                     	;# 
   806  0217                     	;# 
   807  0217                     	;# 
   808  0291                     	;# 
   809  0291                     	;# 
   810  0292                     	;# 
   811  0293                     	;# 
   812  0294                     	;# 
   813  0295                     	;# 
   814  0295                     	;# 
   815  0296                     	;# 
   816  0391                     	;# 
   817  0392                     	;# 
   818  0393                     	;# 
   819  039A                     	;# 
   820  039C                     	;# 
   821  039D                     	;# 
   822  039E                     	;# 
   823  039F                     	;# 
   824  0FE4                     	;# 
   825  0FE5                     	;# 
   826  0FE6                     	;# 
   827  0FE7                     	;# 
   828  0FE8                     	;# 
   829  0FE9                     	;# 
   830  0FEA                     	;# 
   831  0FEB                     	;# 
   832  0FED                     	;# 
   833  0FEE                     	;# 
   834  0FEF                     	;# 
   835  0000                     	;# 
   836  0001                     	;# 
   837  0002                     	;# 
   838  0003                     	;# 
   839  0004                     	;# 
   840  0005                     	;# 
   841  0006                     	;# 
   842  0007                     	;# 
   843  0008                     	;# 
   844  0009                     	;# 
   845  000A                     	;# 
   846  000B                     	;# 
   847  000C                     	;# 
   848  000E                     	;# 
   849  0011                     	;# 
   850  0012                     	;# 
   851  0015                     	;# 
   852  0016                     	;# 
   853  0016                     	;# 
   854  0017                     	;# 
   855  0018                     	;# 
   856  0019                     	;# 
   857  001A                     	;# 
   858  001B                     	;# 
   859  001C                     	;# 
   860  001E                     	;# 
   861  001F                     	;# 
   862  008C                     	;# 
   863  008E                     	;# 
   864  0091                     	;# 
   865  0092                     	;# 
   866  0095                     	;# 
   867  0096                     	;# 
   868  0097                     	;# 
   869  0098                     	;# 
   870  0099                     	;# 
   871  009A                     	;# 
   872  009B                     	;# 
   873  009B                     	;# 
   874  009C                     	;# 
   875  009D                     	;# 
   876  009E                     	;# 
   877  010C                     	;# 
   878  010E                     	;# 
   879  0111                     	;# 
   880  0112                     	;# 
   881  0113                     	;# 
   882  0114                     	;# 
   883  0115                     	;# 
   884  0116                     	;# 
   885  0117                     	;# 
   886  0118                     	;# 
   887  0119                     	;# 
   888  011A                     	;# 
   889  011B                     	;# 
   890  011D                     	;# 
   891  011D                     	;# 
   892  018C                     	;# 
   893  018E                     	;# 
   894  0191                     	;# 
   895  0191                     	;# 
   896  0192                     	;# 
   897  0193                     	;# 
   898  0193                     	;# 
   899  0193                     	;# 
   900  0194                     	;# 
   901  0195                     	;# 
   902  0196                     	;# 
   903  0199                     	;# 
   904  019A                     	;# 
   905  019B                     	;# 
   906  019B                     	;# 
   907  019B                     	;# 
   908  019B                     	;# 
   909  019C                     	;# 
   910  019C                     	;# 
   911  019D                     	;# 
   912  019E                     	;# 
   913  019F                     	;# 
   914  020C                     	;# 
   915  020E                     	;# 
   916  0211                     	;# 
   917  0211                     	;# 
   918  0212                     	;# 
   919  0212                     	;# 
   920  0213                     	;# 
   921  0213                     	;# 
   922  0214                     	;# 
   923  0214                     	;# 
   924  0215                     	;# 
   925  0215                     	;# 
   926  0215                     	;# 
   927  0216                     	;# 
   928  0216                     	;# 
   929  0217                     	;# 
   930  0217                     	;# 
   931  0291                     	;# 
   932  0291                     	;# 
   933  0292                     	;# 
   934  0293                     	;# 
   935  0294                     	;# 
   936  0295                     	;# 
   937  0295                     	;# 
   938  0296                     	;# 
   939  0391                     	;# 
   940  0392                     	;# 
   941  0393                     	;# 
   942  039A                     	;# 
   943  039C                     	;# 
   944  039D                     	;# 
   945  039E                     	;# 
   946  039F                     	;# 
   947  0FE4                     	;# 
   948  0FE5                     	;# 
   949  0FE6                     	;# 
   950  0FE7                     	;# 
   951  0FE8                     	;# 
   952  0FE9                     	;# 
   953  0FEA                     	;# 
   954  0FEB                     	;# 
   955  0FED                     	;# 
   956  0FEE                     	;# 
   957  0FEF                     	;# 
   958  0000                     	;# 
   959  0001                     	;# 
   960  0002                     	;# 
   961  0003                     	;# 
   962  0004                     	;# 
   963  0005                     	;# 
   964  0006                     	;# 
   965  0007                     	;# 
   966  0008                     	;# 
   967  0009                     	;# 
   968  000A                     	;# 
   969  000B                     	;# 
   970  000C                     	;# 
   971  000E                     	;# 
   972  0011                     	;# 
   973  0012                     	;# 
   974  0015                     	;# 
   975  0016                     	;# 
   976  0016                     	;# 
   977  0017                     	;# 
   978  0018                     	;# 
   979  0019                     	;# 
   980  001A                     	;# 
   981  001B                     	;# 
   982  001C                     	;# 
   983  001E                     	;# 
   984  001F                     	;# 
   985  008C                     	;# 
   986  008E                     	;# 
   987  0091                     	;# 
   988  0092                     	;# 
   989  0095                     	;# 
   990  0096                     	;# 
   991  0097                     	;# 
   992  0098                     	;# 
   993  0099                     	;# 
   994  009A                     	;# 
   995  009B                     	;# 
   996  009B                     	;# 
   997  009C                     	;# 
   998  009D                     	;# 
   999  009E                     	;# 
  1000  010C                     	;# 
  1001  010E                     	;# 
  1002  0111                     	;# 
  1003  0112                     	;# 
  1004  0113                     	;# 
  1005  0114                     	;# 
  1006  0115                     	;# 
  1007  0116                     	;# 
  1008  0117                     	;# 
  1009  0118                     	;# 
  1010  0119                     	;# 
  1011  011A                     	;# 
  1012  011B                     	;# 
  1013  011D                     	;# 
  1014  011D                     	;# 
  1015  018C                     	;# 
  1016  018E                     	;# 
  1017  0191                     	;# 
  1018  0191                     	;# 
  1019  0192                     	;# 
  1020  0193                     	;# 
  1021  0193                     	;# 
  1022  0193                     	;# 
  1023  0194                     	;# 
  1024  0195                     	;# 
  1025  0196                     	;# 
  1026  0199                     	;# 
  1027  019A                     	;# 
  1028  019B                     	;# 
  1029  019B                     	;# 
  1030  019B                     	;# 
  1031  019B                     	;# 
  1032  019C                     	;# 
  1033  019C                     	;# 
  1034  019D                     	;# 
  1035  019E                     	;# 
  1036  019F                     	;# 
  1037  020C                     	;# 
  1038  020E                     	;# 
  1039  0211                     	;# 
  1040  0211                     	;# 
  1041  0212                     	;# 
  1042  0212                     	;# 
  1043  0213                     	;# 
  1044  0213                     	;# 
  1045  0214                     	;# 
  1046  0214                     	;# 
  1047  0215                     	;# 
  1048  0215                     	;# 
  1049  0215                     	;# 
  1050  0216                     	;# 
  1051  0216                     	;# 
  1052  0217                     	;# 
  1053  0217                     	;# 
  1054  0291                     	;# 
  1055  0291                     	;# 
  1056  0292                     	;# 
  1057  0293                     	;# 
  1058  0294                     	;# 
  1059  0295                     	;# 
  1060  0295                     	;# 
  1061  0296                     	;# 
  1062  0391                     	;# 
  1063  0392                     	;# 
  1064  0393                     	;# 
  1065  039A                     	;# 
  1066  039C                     	;# 
  1067  039D                     	;# 
  1068  039E                     	;# 
  1069  039F                     	;# 
  1070  0FE4                     	;# 
  1071  0FE5                     	;# 
  1072  0FE6                     	;# 
  1073  0FE7                     	;# 
  1074  0FE8                     	;# 
  1075  0FE9                     	;# 
  1076  0FEA                     	;# 
  1077  0FEB                     	;# 
  1078  0FED                     	;# 
  1079  0FEE                     	;# 
  1080  0FEF                     	;# 
  1081  0000                     	;# 
  1082  0001                     	;# 
  1083  0002                     	;# 
  1084  0003                     	;# 
  1085  0004                     	;# 
  1086  0005                     	;# 
  1087  0006                     	;# 
  1088  0007                     	;# 
  1089  0008                     	;# 
  1090  0009                     	;# 
  1091  000A                     	;# 
  1092  000B                     	;# 
  1093  000C                     	;# 
  1094  000E                     	;# 
  1095  0011                     	;# 
  1096  0012                     	;# 
  1097  0015                     	;# 
  1098  0016                     	;# 
  1099  0016                     	;# 
  1100  0017                     	;# 
  1101  0018                     	;# 
  1102  0019                     	;# 
  1103  001A                     	;# 
  1104  001B                     	;# 
  1105  001C                     	;# 
  1106  001E                     	;# 
  1107  001F                     	;# 
  1108  008C                     	;# 
  1109  008E                     	;# 
  1110  0091                     	;# 
  1111  0092                     	;# 
  1112  0095                     	;# 
  1113  0096                     	;# 
  1114  0097                     	;# 
  1115  0098                     	;# 
  1116  0099                     	;# 
  1117  009A                     	;# 
  1118  009B                     	;# 
  1119  009B                     	;# 
  1120  009C                     	;# 
  1121  009D                     	;# 
  1122  009E                     	;# 
  1123  010C                     	;# 
  1124  010E                     	;# 
  1125  0111                     	;# 
  1126  0112                     	;# 
  1127  0113                     	;# 
  1128  0114                     	;# 
  1129  0115                     	;# 
  1130  0116                     	;# 
  1131  0117                     	;# 
  1132  0118                     	;# 
  1133  0119                     	;# 
  1134  011A                     	;# 
  1135  011B                     	;# 
  1136  011D                     	;# 
  1137  011D                     	;# 
  1138  018C                     	;# 
  1139  018E                     	;# 
  1140  0191                     	;# 
  1141  0191                     	;# 
  1142  0192                     	;# 
  1143  0193                     	;# 
  1144  0193                     	;# 
  1145  0193                     	;# 
  1146  0194                     	;# 
  1147  0195                     	;# 
  1148  0196                     	;# 
  1149  0199                     	;# 
  1150  019A                     	;# 
  1151  019B                     	;# 
  1152  019B                     	;# 
  1153  019B                     	;# 
  1154  019B                     	;# 
  1155  019C                     	;# 
  1156  019C                     	;# 
  1157  019D                     	;# 
  1158  019E                     	;# 
  1159  019F                     	;# 
  1160  020C                     	;# 
  1161  020E                     	;# 
  1162  0211                     	;# 
  1163  0211                     	;# 
  1164  0212                     	;# 
  1165  0212                     	;# 
  1166  0213                     	;# 
  1167  0213                     	;# 
  1168  0214                     	;# 
  1169  0214                     	;# 
  1170  0215                     	;# 
  1171  0215                     	;# 
  1172  0215                     	;# 
  1173  0216                     	;# 
  1174  0216                     	;# 
  1175  0217                     	;# 
  1176  0217                     	;# 
  1177  0291                     	;# 
  1178  0291                     	;# 
  1179  0292                     	;# 
  1180  0293                     	;# 
  1181  0294                     	;# 
  1182  0295                     	;# 
  1183  0295                     	;# 
  1184  0296                     	;# 
  1185  0391                     	;# 
  1186  0392                     	;# 
  1187  0393                     	;# 
  1188  039A                     	;# 
  1189  039C                     	;# 
  1190  039D                     	;# 
  1191  039E                     	;# 
  1192  039F                     	;# 
  1193  0FE4                     	;# 
  1194  0FE5                     	;# 
  1195  0FE6                     	;# 
  1196  0FE7                     	;# 
  1197  0FE8                     	;# 
  1198  0FE9                     	;# 
  1199  0FEA                     	;# 
  1200  0FEB                     	;# 
  1201  0FED                     	;# 
  1202  0FEE                     	;# 
  1203  0FEF                     	;# 
  1204  0000                     	;# 
  1205  0001                     	;# 
  1206  0002                     	;# 
  1207  0003                     	;# 
  1208  0004                     	;# 
  1209  0005                     	;# 
  1210  0006                     	;# 
  1211  0007                     	;# 
  1212  0008                     	;# 
  1213  0009                     	;# 
  1214  000A                     	;# 
  1215  000B                     	;# 
  1216  000C                     	;# 
  1217  000E                     	;# 
  1218  0011                     	;# 
  1219  0012                     	;# 
  1220  0015                     	;# 
  1221  0016                     	;# 
  1222  0016                     	;# 
  1223  0017                     	;# 
  1224  0018                     	;# 
  1225  0019                     	;# 
  1226  001A                     	;# 
  1227  001B                     	;# 
  1228  001C                     	;# 
  1229  001E                     	;# 
  1230  001F                     	;# 
  1231  008C                     	;# 
  1232  008E                     	;# 
  1233  0091                     	;# 
  1234  0092                     	;# 
  1235  0095                     	;# 
  1236  0096                     	;# 
  1237  0097                     	;# 
  1238  0098                     	;# 
  1239  0099                     	;# 
  1240  009A                     	;# 
  1241  009B                     	;# 
  1242  009B                     	;# 
  1243  009C                     	;# 
  1244  009D                     	;# 
  1245  009E                     	;# 
  1246  010C                     	;# 
  1247  010E                     	;# 
  1248  0111                     	;# 
  1249  0112                     	;# 
  1250  0113                     	;# 
  1251  0114                     	;# 
  1252  0115                     	;# 
  1253  0116                     	;# 
  1254  0117                     	;# 
  1255  0118                     	;# 
  1256  0119                     	;# 
  1257  011A                     	;# 
  1258  011B                     	;# 
  1259  011D                     	;# 
  1260  011D                     	;# 
  1261  018C                     	;# 
  1262  018E                     	;# 
  1263  0191                     	;# 
  1264  0191                     	;# 
  1265  0192                     	;# 
  1266  0193                     	;# 
  1267  0193                     	;# 
  1268  0193                     	;# 
  1269  0194                     	;# 
  1270  0195                     	;# 
  1271  0196                     	;# 
  1272  0199                     	;# 
  1273  019A                     	;# 
  1274  019B                     	;# 
  1275  019B                     	;# 
  1276  019B                     	;# 
  1277  019B                     	;# 
  1278  019C                     	;# 
  1279  019C                     	;# 
  1280  019D                     	;# 
  1281  019E                     	;# 
  1282  019F                     	;# 
  1283  020C                     	;# 
  1284  020E                     	;# 
  1285  0211                     	;# 
  1286  0211                     	;# 
  1287  0212                     	;# 
  1288  0212                     	;# 
  1289  0213                     	;# 
  1290  0213                     	;# 
  1291  0214                     	;# 
  1292  0214                     	;# 
  1293  0215                     	;# 
  1294  0215                     	;# 
  1295  0215                     	;# 
  1296  0216                     	;# 
  1297  0216                     	;# 
  1298  0217                     	;# 
  1299  0217                     	;# 
  1300  0291                     	;# 
  1301  0291                     	;# 
  1302  0292                     	;# 
  1303  0293                     	;# 
  1304  0294                     	;# 
  1305  0295                     	;# 
  1306  0295                     	;# 
  1307  0296                     	;# 
  1308  0391                     	;# 
  1309  0392                     	;# 
  1310  0393                     	;# 
  1311  039A                     	;# 
  1312  039C                     	;# 
  1313  039D                     	;# 
  1314  039E                     	;# 
  1315  039F                     	;# 
  1316  0FE4                     	;# 
  1317  0FE5                     	;# 
  1318  0FE6                     	;# 
  1319  0FE7                     	;# 
  1320  0FE8                     	;# 
  1321  0FE9                     	;# 
  1322  0FEA                     	;# 
  1323  0FEB                     	;# 
  1324  0FED                     	;# 
  1325  0FEE                     	;# 
  1326  0FEF                     	;# 
  1327                           
  1328                           	psect	stringtext1
  1329  0472                     __pstringtext1:
  1330  0472                     _GOOD_WSP_VOLTAGE:
  1331  0472  348E               	retlw	142
  1332  0473  3400               	retlw	0
  1333  0474                     __end_of_GOOD_WSP_VOLTAGE:
  1334                           
  1335                           	psect	stringtext2
  1336  0474                     __pstringtext2:
  1337  0474                     _BAD_WSP_VOLTAGE:
  1338  0474  3480               	retlw	128
  1339  0475  3400               	retlw	0
  1340  0476                     __end_of_BAD_WSP_VOLTAGE:
  1341                           
  1342                           	psect	stringtext3
  1343  0476                     __pstringtext3:
  1344  0476                     _UP_RESISTANSE:
  1345  0476  3420               	retlw	32
  1346  0477  344E               	retlw	78
  1347  0478                     __end_of_UP_RESISTANSE:
  1348                           
  1349                           	psect	stringtext4
  1350  0478                     __pstringtext4:
  1351  0478                     _HIGH_WATER_RESISTANSE:
  1352  0478  34A8               	retlw	168
  1353  0479  3461               	retlw	97
  1354  047A                     __end_of_HIGH_WATER_RESISTANSE:
  1355                           
  1356                           	psect	stringtext5
  1357  047A                     __pstringtext5:
  1358  047A                     _LOW_WATER_RESISTANSE:
  1359  047A  3420               	retlw	32
  1360  047B  344E               	retlw	78
  1361  047C                     __end_of_LOW_WATER_RESISTANSE:
  1362                           
  1363                           	psect	nvBANK0
  1364  003C                     __pnvBANK0:
  1365  003C                     _TMR0_InterruptHandler:
  1366  003C                     	ds	2
  1367  003E                     _TMR2_InterruptHandler:
  1368  003E                     	ds	2
  1369  0040                     _timer0ReloadVal:
  1370  0040                     	ds	1
  1371  0015                     _TMR0	set	21
  1372  001C                     _T2CONbits	set	28
  1373  001C                     _T2CON	set	28
  1374  001A                     _TMR2	set	26
  1375  001B                     _PR2	set	27
  1376  0011                     _PIR1bits	set	17
  1377  000B                     _INTCONbits	set	11
  1378  005F                     _GIE	set	95
  1379  008E                     _TRISCbits	set	142
  1380  008C                     _TRISAbits	set	140
  1381  0095                     _OPTION_REG	set	149
  1382  0091                     _PIE1bits	set	145
  1383  0095                     _OPTION_REGbits	set	149
  1384  008E                     _TRISC	set	142
  1385  008C                     _TRISA	set	140
  1386  009D                     _ADCON0bits	set	157
  1387  009D                     _ADCON0	set	157
  1388  009C                     _ADRESH	set	156
  1389  009B                     _ADRESL	set	155
  1390  009E                     _ADCON1	set	158
  1391  0097                     _WDTCON	set	151
  1392  0098                     _OSCTUNE	set	152
  1393  0099                     _OSCCON	set	153
  1394  010E                     _LATCbits	set	270
  1395  010C                     _LATAbits	set	268
  1396  0117                     _FVRCONbits	set	279
  1397  0117                     _FVRCON	set	279
  1398  011D                     _APFCON	set	285
  1399  010E                     _LATC	set	270
  1400  010C                     _LATA	set	268
  1401  0116                     _BORCON	set	278
  1402  0191                     _EEADR	set	401
  1403  0196                     _EECON2	set	406
  1404  0193                     _EEDATA	set	403
  1405  018C                     _ANSELAbits	set	396
  1406  018E                     _ANSELCbits	set	398
  1407  018C                     _ANSELA	set	396
  1408  018E                     _ANSELC	set	398
  1409  0CA8                     _RD	set	3240
  1410  0CAA                     _WREN	set	3242
  1411  0CA9                     _WR	set	3241
  1412  020E                     _WPUCbits	set	526
  1413  020C                     _WPUAbits	set	524
  1414  020E                     _WPUC	set	526
  1415  020C                     _WPUA	set	524
  1416                           
  1417                           	psect	cinit
  1418  0027                     start_initialization:	
  1419                           ; #config settings
  1420                           
  1421  0027                     __initialization:
  1422                           
  1423                           ; Clear objects allocated to COMMON
  1424  0027  01F7               	clrf	__pbssCOMMON& (0+127)
  1425  0028  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1426  0029  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1427  002A  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  1428  002B  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
  1429  002C  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
  1430                           
  1431                           ; Clear objects allocated to BANK0
  1432  002D  3020               	movlw	low __pbssBANK0
  1433  002E  0084               	movwf	4
  1434  002F  3000               	movlw	high __pbssBANK0
  1435  0030  0085               	movwf	5
  1436  0031  3015               	movlw	21
  1437  0032  3184  2446  3180   	fcall	clear_ram0
  1438  0035                     end_of_initialization:	
  1439                           ;End of C runtime variable initialization code
  1440                           
  1441  0035                     __end_of__initialization:
  1442  0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1443  0036  0020               	movlb	0
  1444  0037  2B86               	ljmp	_main	;jump to C main() function
  1445                           
  1446                           	psect	bssCOMMON
  1447  0077                     __pbssCOMMON:
  1448  0077                     _FLAGS:
  1449  0077                     	ds	2
  1450  0079                     sec_tick_work@iled:
  1451  0079                     	ds	1
  1452  007A                     get_measure@measures:
  1453  007A                     	ds	1
  1454  007B                     _time_meas:
  1455  007B                     	ds	1
  1456  007C                     _FRIMWARE_VERSION_EEPROM_ADR:
  1457  007C                     	ds	1
  1458                           
  1459                           	psect	bssBANK0
  1460  0020                     __pbssBANK0:
  1461  0020                     _time_rotation:
  1462  0020                     	ds	3
  1463  0023                     ms_tick@tick_count:
  1464  0023                     	ds	2
  1465  0025                     _time_zummer:
  1466  0025                     	ds	2
  1467  0027                     _time_led:
  1468  0027                     	ds	2
  1469  0029                     _time_rele_gap:
  1470  0029                     	ds	2
  1471  002B                     _time_rele_control:
  1472  002B                     	ds	2
  1473  002D                     _time_rele_power:
  1474  002D                     	ds	2
  1475  002F                     _ADC_InterruptHandler:
  1476  002F                     	ds	2
  1477  0031                     get_jump_full@jump_counter:
  1478  0031                     	ds	1
  1479  0032                     get_jump@jump_counter:
  1480  0032                     	ds	1
  1481  0033                     get_fun_full@fun_counter:
  1482  0033                     	ds	1
  1483  0034                     get_fun@fun_counter:
  1484  0034                     	ds	1
  1485                           
  1486                           	psect	clrtext
  1487  0446                     clear_ram0:	
  1488                           ;	Called with FSR0 containing the base address, and
  1489                           ;	WREG with the size to clear
  1490                           
  1491  0446  0064               	clrwdt	;clear the watchdog before getting into this loop
  1492  0447                     clrloop0:
  1493  0447  0180               	clrf	0	;clear RAM location pointed to by FSR
  1494  0448  3101               	addfsr 0,1
  1495  0449  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1496  044A  2C47               	goto	clrloop0	;have we reached the end yet?
  1497  044B  3400               	retlw	0	;all done for this memory range, return
  1498                           
  1499                           	psect	cstackCOMMON
  1500  0070                     __pcstackCOMMON:
  1501  0070                     ?_PIN_MANAGER_Initialize:
  1502  0070                     ?_OSCILLATOR_Initialize:	
  1503                           ; 1 bytes @ 0x0
  1504                           
  1505  0070                     ?_WDT_Initialize:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508  0070                     ?_FVR_Initialize:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511  0070                     ?_ADC_Initialize:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514  0070                     ?_TMR2_Initialize:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517  0070                     ?_TMR0_Initialize:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520  0070                     ?_TMR0_ISR:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523  0070                     ??_TMR0_ISR:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526  0070                     ?_TMR2_ISR:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529  0070                     ?_TMR2_DefaultInterruptHandler:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532  0070                     ??_TMR2_DefaultInterruptHandler:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535  0070                     ?_TMR0_DefaultInterruptHandler:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538  0070                     ??_TMR0_DefaultInterruptHandler:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541  0070                     ?_SYSTEM_Initialize:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0070                     ?_ADC_GetConversion:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ?_INTERRUPT_InterruptManager:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ?_TMR2_StartTimer:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ?_switch_zum:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ?_toggle_tone:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ??_toggle_tone:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  0070                     ?_go_close:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  0070                     ?_go_open:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0070                     ?_go_close_alt:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ?_go_open_alt:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0070                     ?_start_alarm:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     ?_get_measure:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ?_get_fun:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0070                     ?_get_fun_full:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586  0070                     ?_get_jump:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589  0070                     ?_get_jump_full:	
  1590                           ; 1 bytes @ 0x0
  1591                           
  1592  0070                     ?_rele_tick:	
  1593                           ; 1 bytes @ 0x0
  1594                           
  1595  0070                     ??_rele_tick:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598  0070                     ?_sec_tick_work:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601  0070                     ?_fun_work:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604  0070                     ?_switch_wm:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0070                     ?_ms_tick:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610  0070                     ?_start_setup:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613  0070                     ?_main:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616  0070                     ?i1_ADC_GetConversion:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619  0070                     ??i1_ADC_GetConversion:	
  1620                           ; 1 bytes @ 0x0
  1621                           
  1622  0070                     ?i1_switch_zum:	
  1623                           ; 1 bytes @ 0x0
  1624                           
  1625  0070                     ??i1_switch_zum:	
  1626                           ; 1 bytes @ 0x0
  1627                           
  1628  0070                     ?i1_go_close:	
  1629                           ; 1 bytes @ 0x0
  1630                           
  1631  0070                     ??i1_go_close:	
  1632                           ; 1 bytes @ 0x0
  1633                           
  1634  0070                     ?i1_go_close_alt:	
  1635                           ; 1 bytes @ 0x0
  1636                           
  1637  0070                     ??i1_go_close_alt:	
  1638                           ; 1 bytes @ 0x0
  1639                           
  1640                           
  1641                           ; 1 bytes @ 0x0
  1642  0070                     	ds	1
  1643  0071                     i1ADC_GetConversion@channel:
  1644                           
  1645                           ; 1 bytes @ 0x1
  1646  0071                     	ds	1
  1647  0072                     ??_start_alarm:
  1648  0072                     ??_get_measure:	
  1649                           ; 1 bytes @ 0x2
  1650                           
  1651                           
  1652                           ; 1 bytes @ 0x2
  1653  0072                     	ds	2
  1654  0074                     get_measure@res:
  1655                           
  1656                           ; 2 bytes @ 0x4
  1657  0074                     	ds	2
  1658  0076                     ??_sec_tick_work:
  1659                           
  1660                           ; 1 bytes @ 0x6
  1661  0076                     	ds	1
  1662  0077                     ??_TMR2_ISR:
  1663  0077                     ??_INTERRUPT_InterruptManager:	
  1664                           ; 1 bytes @ 0x7
  1665                           
  1666  0077                     ??_ms_tick:	
  1667                           ; 1 bytes @ 0x7
  1668                           
  1669                           
  1670                           	psect	cstackBANK0
  1671  0035                     __pcstackBANK0:	
  1672                           ; 1 bytes @ 0x7
  1673                           
  1674  0035                     ??_PIN_MANAGER_Initialize:
  1675  0035                     ??_OSCILLATOR_Initialize:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678  0035                     ??_WDT_Initialize:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681  0035                     ??_FVR_Initialize:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684  0035                     ??_ADC_Initialize:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687  0035                     ?_TMR2_SetInterruptHandler:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690  0035                     ?_TMR0_SetInterruptHandler:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693  0035                     ??_ADC_GetConversion:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696  0035                     ??_TMR2_StartTimer:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699  0035                     ??_switch_zum:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702  0035                     ?_beep:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705  0035                     ?_boop:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708  0035                     ??_go_close:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711  0035                     ??_go_open:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714  0035                     ??_go_close_alt:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717  0035                     ??_go_open_alt:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720  0035                     beep@count:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723  0035                     boop@count:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726  0035                     TMR2_SetInterruptHandler@InterruptHandler:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729  0035                     TMR0_SetInterruptHandler@InterruptHandler:	
  1730                           ; 2 bytes @ 0x0
  1731                           
  1732                           
  1733                           ; 2 bytes @ 0x0
  1734  0035                     	ds	1
  1735  0036                     ??_beep:
  1736  0036                     ??_boop:	
  1737                           ; 1 bytes @ 0x1
  1738                           
  1739  0036                     ADC_GetConversion@channel:	
  1740                           ; 1 bytes @ 0x1
  1741                           
  1742                           
  1743                           ; 1 bytes @ 0x1
  1744  0036                     	ds	1
  1745  0037                     ??_TMR2_Initialize:
  1746  0037                     ??_TMR0_Initialize:	
  1747                           ; 1 bytes @ 0x2
  1748                           
  1749  0037                     ??_TMR2_SetInterruptHandler:	
  1750                           ; 1 bytes @ 0x2
  1751                           
  1752  0037                     ??_TMR0_SetInterruptHandler:	
  1753                           ; 1 bytes @ 0x2
  1754                           
  1755  0037                     ??_get_fun:	
  1756                           ; 1 bytes @ 0x2
  1757                           
  1758  0037                     ??_get_fun_full:	
  1759                           ; 1 bytes @ 0x2
  1760                           
  1761  0037                     ??_get_jump:	
  1762                           ; 1 bytes @ 0x2
  1763                           
  1764  0037                     ??_get_jump_full:	
  1765                           ; 1 bytes @ 0x2
  1766                           
  1767                           
  1768                           ; 1 bytes @ 0x2
  1769  0037                     	ds	1
  1770  0038                     ??_SYSTEM_Initialize:
  1771  0038                     beep@time:	
  1772                           ; 1 bytes @ 0x3
  1773                           
  1774  0038                     boop@time:	
  1775                           ; 1 bytes @ 0x3
  1776                           
  1777                           
  1778                           ; 1 bytes @ 0x3
  1779  0038                     	ds	1
  1780  0039                     beep@j:
  1781  0039                     boop@j:	
  1782                           ; 1 bytes @ 0x4
  1783                           
  1784  0039                     get_fun@res:	
  1785                           ; 1 bytes @ 0x4
  1786                           
  1787  0039                     get_fun_full@res:	
  1788                           ; 2 bytes @ 0x4
  1789                           
  1790  0039                     get_jump@res:	
  1791                           ; 2 bytes @ 0x4
  1792                           
  1793  0039                     get_jump_full@res:	
  1794                           ; 2 bytes @ 0x4
  1795                           
  1796                           
  1797                           ; 2 bytes @ 0x4
  1798  0039                     	ds	1
  1799  003A                     beep@i:
  1800  003A                     boop@i:	
  1801                           ; 1 bytes @ 0x5
  1802                           
  1803                           
  1804                           ; 1 bytes @ 0x5
  1805  003A                     	ds	1
  1806  003B                     ??_fun_work:
  1807  003B                     ??_switch_wm:	
  1808                           ; 1 bytes @ 0x6
  1809                           
  1810  003B                     get_fun_full@flag:	
  1811                           ; 1 bytes @ 0x6
  1812                           
  1813  003B                     get_jump_full@flag:	
  1814                           ; 1 bytes @ 0x6
  1815                           
  1816                           
  1817                           ; 1 bytes @ 0x6
  1818  003B                     	ds	1
  1819  003C                     ??_start_setup:
  1820  003C                     ??_main:	
  1821                           ; 1 bytes @ 0x7
  1822                           
  1823                           
  1824                           	psect	maintext
  1825  0386                     __pmaintext:	
  1826                           ; 1 bytes @ 0x7
  1827 ;;
  1828 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1829 ;;
  1830 ;; *************** function _main *****************
  1831 ;; Defined at:
  1832 ;;		line 566 in file "main.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;		None
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;		None
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		wreg, status,2, status,0, pclath, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : B1F/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMMON   BANK0   BANK1
  1846 ;;      Params:         0       0       0
  1847 ;;      Locals:         0       0       0
  1848 ;;      Temps:          0       0       0
  1849 ;;      Totals:         0       0       0
  1850 ;;Total ram usage:        0 bytes
  1851 ;; Hardware stack levels required when called: 11
  1852 ;; This function calls:
  1853 ;;		_fun_work
  1854 ;;		_get_fun
  1855 ;;		_get_jump
  1856 ;;		_start_setup
  1857 ;;		_switch_wm
  1858 ;; This function is called by:
  1859 ;;		Startup code after reset
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863  0386                     _main:	
  1864                           ;psect for function _main
  1865                           
  1866  0386                     l2499:	
  1867                           ;incstack = 0
  1868                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1869                           
  1870                           
  1871                           ;main.c: 568:     start_setup();
  1872  0386  3181  21C3  3183   	fcall	_start_setup
  1873  0389                     l2501:
  1874                           
  1875                           ;main.c: 572:         if (!FLAGS.bits.ALARM) {
  1876  0389  1877               	btfsc	_FLAGS,0
  1877  038A  2B8C               	goto	u1861
  1878  038B  2B8D               	goto	u1860
  1879  038C                     u1861:
  1880  038C  2B89               	goto	l2501
  1881  038D                     u1860:
  1882  038D                     l2503:
  1883                           
  1884                           ;main.c: 574:             get_jump();
  1885  038D  3181  2187  3183   	fcall	_get_jump
  1886                           
  1887                           ;main.c: 575:             switch_wm();
  1888  0390  3182  22C7  3183   	fcall	_switch_wm
  1889                           
  1890                           ;main.c: 577:             get_fun();
  1891  0393  3181  2109  3183   	fcall	_get_fun
  1892                           
  1893                           ;main.c: 578:             fun_work();
  1894  0396  3180  20C6  3183   	fcall	_fun_work
  1895  0399  2B89               	goto	l2501
  1896  039A  2826               	ljmp	start
  1897  039B                     __end_of_main:
  1898                           
  1899                           	psect	text1
  1900  02C7                     __ptext1:	
  1901 ;; *************** function _switch_wm *****************
  1902 ;; Defined at:
  1903 ;;		line 413 in file "main.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg, status,2, status,0, pclath, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0   BANK1
  1917 ;;      Params:         0       0       0
  1918 ;;      Locals:         0       0       0
  1919 ;;      Temps:          0       1       0
  1920 ;;      Totals:         0       1       0
  1921 ;;Total ram usage:        1 bytes
  1922 ;; Hardware stack levels used: 1
  1923 ;; Hardware stack levels required when called: 9
  1924 ;; This function calls:
  1925 ;;		_boop
  1926 ;; This function is called by:
  1927 ;;		_main
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931  02C7                     _switch_wm:	
  1932                           ;psect for function _switch_wm
  1933                           
  1934  02C7                     l2407:	
  1935                           ;incstack = 0
  1936                           ; Regs used in _switch_wm: [wreg+status,2+status,0+pclath+cstack]
  1937                           
  1938                           
  1939                           ;main.c: 414:     if (!FLAGS.bits._JUMP_CONNECTED) {
  1940  02C7  19F7               	btfsc	_FLAGS,3
  1941  02C8  2ACA               	goto	u1681
  1942  02C9  2ACB               	goto	u1680
  1943  02CA                     u1681:
  1944  02CA  2ADA               	goto	l455
  1945  02CB                     u1680:
  1946  02CB                     l2409:
  1947                           
  1948                           ;main.c: 415:         if (FLAGS.bits.NORMAL_WORK_MODE) {
  1949  02CB  1CF7               	btfss	_FLAGS,1
  1950  02CC  2ACE               	goto	u1691
  1951  02CD  2ACF               	goto	u1690
  1952  02CE                     u1691:
  1953  02CE  2AE6               	goto	l459
  1954  02CF                     u1690:
  1955  02CF                     l2411:
  1956                           
  1957                           ;main.c: 416:             FLAGS.bits.NORMAL_WORK_MODE = 0;
  1958  02CF  10F7               	bcf	_FLAGS,1
  1959  02D0                     l2413:
  1960                           
  1961                           ;main.c: 419:             boop(40, 2);
  1962  02D0  3002               	movlw	2
  1963  02D1  0020               	movlb	0	; select bank0
  1964  02D2  00BB               	movwf	??_switch_wm
  1965  02D3  083B               	movf	??_switch_wm,w
  1966  02D4  00B5               	movwf	boop@count
  1967  02D5  3028               	movlw	40
  1968  02D6  3181  21FB  3182   	fcall	_boop
  1969  02D9  2AE6               	goto	l459
  1970  02DA                     l455:
  1971                           
  1972                           ;main.c: 422:         if (!FLAGS.bits.NORMAL_WORK_MODE) {
  1973  02DA  18F7               	btfsc	_FLAGS,1
  1974  02DB  2ADD               	goto	u1701
  1975  02DC  2ADE               	goto	u1700
  1976  02DD                     u1701:
  1977  02DD  2AE6               	goto	l459
  1978  02DE                     u1700:
  1979  02DE                     l2415:
  1980                           
  1981                           ;main.c: 423:             FLAGS.bits.NORMAL_WORK_MODE = 1;
  1982  02DE  14F7               	bsf	_FLAGS,1
  1983  02DF                     l2417:
  1984                           
  1985                           ;main.c: 426:             boop(40, 1);
  1986  02DF  0020               	movlb	0	; select bank0
  1987  02E0  01B5               	clrf	boop@count
  1988  02E1  0AB5               	incf	boop@count,f
  1989  02E2  3028               	movlw	40
  1990  02E3  3181  21FB  3182   	fcall	_boop
  1991  02E6                     l459:
  1992  02E6  0008               	return
  1993  02E7                     __end_of_switch_wm:
  1994                           
  1995                           	psect	text2
  1996  01FB                     __ptext2:	
  1997 ;; *************** function _boop *****************
  1998 ;; Defined at:
  1999 ;;		line 112 in file "main.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;  time            1    wreg     unsigned char 
  2002 ;;  count           1    0[BANK0 ] unsigned char 
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;  time            1    3[BANK0 ] unsigned char 
  2005 ;;  i               1    5[BANK0 ] unsigned char 
  2006 ;;  j               1    4[BANK0 ] unsigned char 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      void 
  2009 ;; Registers used:
  2010 ;;		wreg, status,2, status,0, pclath, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMMON   BANK0   BANK1
  2016 ;;      Params:         0       1       0
  2017 ;;      Locals:         0       3       0
  2018 ;;      Temps:          0       2       0
  2019 ;;      Totals:         0       6       0
  2020 ;;Total ram usage:        6 bytes
  2021 ;; Hardware stack levels used: 1
  2022 ;; Hardware stack levels required when called: 8
  2023 ;; This function calls:
  2024 ;;		_switch_zum
  2025 ;; This function is called by:
  2026 ;;		_switch_wm
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030  01FB                     _boop:	
  2031                           ;psect for function _boop
  2032                           
  2033                           
  2034                           ;incstack = 0
  2035                           ; Regs used in _boop: [wreg+status,2+status,0+pclath+cstack]
  2036                           ;boop@time stored from wreg
  2037  01FB  0020               	movlb	0	; select bank0
  2038  01FC  00B8               	movwf	boop@time
  2039  01FD                     l2341:
  2040                           
  2041                           ;main.c: 113:     for (char j = 0; j < count; j++) {
  2042  01FD  01B9               	clrf	boop@j
  2043  01FE  2A2A               	goto	l2357
  2044  01FF                     l2343:
  2045                           
  2046                           ;main.c: 114:         for (char i = 0; i < time; i++) {
  2047  01FF  01BA               	clrf	boop@i
  2048  0200  2A12               	goto	l2351
  2049  0201                     l2345:
  2050                           
  2051                           ;main.c: 115:             switch_zum();
  2052  0201  3183  23D8  3181   	fcall	_switch_zum
  2053  0204                     l2347:
  2054                           
  2055                           ;main.c: 116:             _delay((unsigned long)((1)*(16000000/4000.0)));
  2056  0204  3006               	movlw	6
  2057  0205  0020               	movlb	0	; select bank0
  2058  0206  00B6               	movwf	??_boop
  2059  0207  3030               	movlw	48
  2060  0208                     u1877:
  2061  0208  0B89               	decfsz	9,f
  2062  0209  2A08               	goto	u1877
  2063  020A  0BB6               	decfsz	??_boop,f
  2064  020B  2A08               	goto	u1877
  2065  020C  0000               	nop
  2066  020D                     l2349:
  2067                           
  2068                           ;main.c: 117:         }
  2069  020D  3001               	movlw	1
  2070  020E  0020               	movlb	0	; select bank0
  2071  020F  00B6               	movwf	??_boop
  2072  0210  0836               	movf	??_boop,w
  2073  0211  07BA               	addwf	boop@i,f
  2074  0212                     l2351:
  2075  0212  0838               	movf	boop@time,w
  2076  0213  023A               	subwf	boop@i,w
  2077  0214  1C03               	skipc
  2078  0215  2A17               	goto	u1561
  2079  0216  2A18               	goto	u1560
  2080  0217                     u1561:
  2081  0217  2A01               	goto	l2345
  2082  0218                     u1560:
  2083  0218                     l2353:
  2084                           
  2085                           ;main.c: 118:         _delay((unsigned long)((150)*(16000000/4000.0)));
  2086  0218  3004               	movlw	4
  2087  0219  0020               	movlb	0	; select bank0
  2088  021A  00B7               	movwf	??_boop+1
  2089  021B  300C               	movlw	12
  2090  021C  00B6               	movwf	??_boop
  2091  021D  3033               	movlw	51
  2092  021E                     u1887:
  2093  021E  0B89               	decfsz	9,f
  2094  021F  2A1E               	goto	u1887
  2095  0220  0BB6               	decfsz	??_boop,f
  2096  0221  2A1E               	goto	u1887
  2097  0222  0BB7               	decfsz	??_boop+1,f
  2098  0223  2A1E               	goto	u1887
  2099  0224  3200               	nop2
  2100  0225                     l2355:
  2101                           
  2102                           ;main.c: 119:     }
  2103  0225  3001               	movlw	1
  2104  0226  0020               	movlb	0	; select bank0
  2105  0227  00B6               	movwf	??_boop
  2106  0228  0836               	movf	??_boop,w
  2107  0229  07B9               	addwf	boop@j,f
  2108  022A                     l2357:
  2109  022A  0835               	movf	boop@count,w
  2110  022B  0239               	subwf	boop@j,w
  2111  022C  1C03               	skipc
  2112  022D  2A2F               	goto	u1571
  2113  022E  2A30               	goto	u1570
  2114  022F                     u1571:
  2115  022F  29FF               	goto	l2343
  2116  0230                     u1570:
  2117  0230                     l292:
  2118  0230  0008               	return
  2119  0231                     __end_of_boop:
  2120                           
  2121                           	psect	text3
  2122  01C3                     __ptext3:	
  2123 ;; *************** function _start_setup *****************
  2124 ;; Defined at:
  2125 ;;		line 531 in file "main.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, status,2, status,0, pclath, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMMON   BANK0   BANK1
  2139 ;;      Params:         0       0       0
  2140 ;;      Locals:         0       0       0
  2141 ;;      Temps:          0       0       0
  2142 ;;      Totals:         0       0       0
  2143 ;;Total ram usage:        0 bytes
  2144 ;; Hardware stack levels used: 1
  2145 ;; Hardware stack levels required when called: 10
  2146 ;; This function calls:
  2147 ;;		_SYSTEM_Initialize
  2148 ;;		_TMR0_SetInterruptHandler
  2149 ;;		_TMR2_SetInterruptHandler
  2150 ;;		_TMR2_StartTimer
  2151 ;;		_get_fun_full
  2152 ;;		_get_jump_full
  2153 ;; This function is called by:
  2154 ;;		_main
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158  01C3                     _start_setup:	
  2159                           ;psect for function _start_setup
  2160                           
  2161  01C3                     l2419:	
  2162                           ;incstack = 0
  2163                           ; Regs used in _start_setup: [wreg+status,2+status,0+pclath+cstack]
  2164                           
  2165                           
  2166                           ;main.c: 533:     SYSTEM_Initialize();
  2167  01C3  3183  235A  3181   	fcall	_SYSTEM_Initialize
  2168  01C6                     l2421:
  2169                           
  2170                           ;main.c: 534:     (INTCONbits.GIE = 1);
  2171  01C6  178B               	bsf	11,7	;volatile
  2172  01C7                     l2423:
  2173                           
  2174                           ;main.c: 535:     (INTCONbits.PEIE = 1);
  2175  01C7  170B               	bsf	11,6	;volatile
  2176                           
  2177                           ;main.c: 538:     TMR0_SetInterruptHandler(switch_zum);
  2178  01C8  30D8               	movlw	low _switch_zum
  2179  01C9  0020               	movlb	0	; select bank0
  2180  01CA  00B5               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2181  01CB  3003               	movlw	high _switch_zum
  2182  01CC  00B6               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2183  01CD  3184  2452  3181   	fcall	_TMR0_SetInterruptHandler
  2184                           
  2185                           ;main.c: 539:     TMR2_SetInterruptHandler(ms_tick);
  2186  01D0  30B0               	movlw	low _ms_tick
  2187  01D1  0020               	movlb	0	; select bank0
  2188  01D2  00B5               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2189  01D3  3003               	movlw	high _ms_tick
  2190  01D4  00B6               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2191  01D5  3184  244C  3181   	fcall	_TMR2_SetInterruptHandler
  2192  01D8                     l2425:
  2193                           
  2194                           ;main.c: 540:     TMR2_StartTimer();
  2195  01D8  3184  246F  3181   	fcall	_TMR2_StartTimer
  2196  01DB                     l2427:
  2197  01DB  0023               	movlb	3	; select bank3
  2198  01DC  118E               	bcf	14,3	;volatile
  2199  01DD                     l2429:
  2200  01DD  108C               	bcf	12,1	;volatile
  2201  01DE                     l2431:
  2202  01DE  110E               	bcf	14,2	;volatile
  2203  01DF                     l2433:
  2204  01DF  0024               	movlb	4	; select bank4
  2205  01E0  108C               	bcf	12,1	;volatile
  2206  01E1                     l2435:
  2207  01E1  0021               	movlb	1	; select bank1
  2208  01E2  148C               	bsf	12,1	;volatile
  2209  01E3                     l2437:
  2210  01E3  0024               	movlb	4	; select bank4
  2211  01E4  110E               	bcf	14,2	;volatile
  2212  01E5                     l2439:
  2213  01E5  0021               	movlb	1	; select bank1
  2214  01E6  150E               	bsf	14,2	;volatile
  2215  01E7                     l2441:
  2216                           
  2217                           ;main.c: 552:     INTCONbits.TMR0IE = 0;
  2218  01E7  128B               	bcf	11,5	;volatile
  2219  01E8                     l2443:
  2220                           
  2221                           ;main.c: 553:     FLAGS.value = 0;
  2222  01E8  01F7               	clrf	_FLAGS
  2223  01E9  01F8               	clrf	_FLAGS+1
  2224  01EA                     l2445:
  2225                           
  2226                           ;main.c: 554:     FLAGS.bits.ALARM =0;
  2227  01EA  1077               	bcf	_FLAGS,0
  2228  01EB                     l2447:
  2229  01EB  0022               	movlb	2	; select bank2
  2230  01EC  128E               	bcf	14,5	;volatile
  2231  01ED                     l2449:
  2232  01ED  120E               	bcf	14,4	;volatile
  2233  01EE                     l2451:
  2234  01EE  100E               	bcf	14,0	;volatile
  2235  01EF                     l2453:
  2236  01EF  0021               	movlb	1	; select bank1
  2237  01F0  100E               	bcf	14,0	;volatile
  2238  01F1                     l2455:
  2239                           
  2240                           ;main.c: 561:     get_jump_full();
  2241  01F1  3180  2081  3181   	fcall	_get_jump_full
  2242  01F4                     l2457:
  2243                           
  2244                           ;main.c: 562:     get_fun_full();
  2245  01F4  3180  2038  3181   	fcall	_get_fun_full
  2246  01F7                     l2459:
  2247                           
  2248                           ;main.c: 563:     time_rele_power = 0;
  2249  01F7  0020               	movlb	0	; select bank0
  2250  01F8  01AD               	clrf	_time_rele_power
  2251  01F9  01AE               	clrf	_time_rele_power+1
  2252  01FA                     l490:
  2253  01FA  0008               	return
  2254  01FB                     __end_of_start_setup:
  2255                           
  2256                           	psect	text4
  2257  0081                     __ptext4:	
  2258 ;; *************** function _get_jump_full *****************
  2259 ;; Defined at:
  2260 ;;		line 283 in file "main.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  res             2    4[BANK0 ] unsigned int 
  2265 ;;  flag            1    6[BANK0 ] unsigned char 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg, status,2, status,0, pclath, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMMON   BANK0   BANK1
  2275 ;;      Params:         0       0       0
  2276 ;;      Locals:         0       3       0
  2277 ;;      Temps:          0       2       0
  2278 ;;      Totals:         0       5       0
  2279 ;;Total ram usage:        5 bytes
  2280 ;; Hardware stack levels used: 1
  2281 ;; Hardware stack levels required when called: 8
  2282 ;; This function calls:
  2283 ;;		_ADC_GetConversion
  2284 ;; This function is called by:
  2285 ;;		_start_setup
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289  0081                     _get_jump_full:	
  2290                           ;psect for function _get_jump_full
  2291                           
  2292  0081                     l401:	
  2293                           ;incstack = 0
  2294                           ; Regs used in _get_jump_full: [wreg+status,2+status,0+pclath+cstack]
  2295                           ;main.c: 285:     static signed char jump_counter;;main.c: 286:     do { ANSELAbits.ANSA
      +                          1 = 1; } while(0);
  2296                           
  2297  0081  0023               	movlb	3	; select bank3
  2298  0082  148C               	bsf	12,1	;volatile
  2299  0083                     l2031:
  2300                           
  2301                           ;main.c: 287:     char flag = 0;
  2302  0083  0020               	movlb	0	; select bank0
  2303  0084  01BB               	clrf	get_jump_full@flag
  2304  0085                     l2033:
  2305                           
  2306                           ;main.c: 289:         unsigned res = ADC_GetConversion(PIN_JUMP_STATE);
  2307  0085  3001               	movlw	1
  2308  0086  3183  2327  3180   	fcall	_ADC_GetConversion
  2309  0089  0020               	movlb	0	; select bank0
  2310  008A  00B7               	movwf	??_get_jump_full
  2311  008B  01B8               	clrf	??_get_jump_full+1
  2312  008C  0837               	movf	??_get_jump_full,w
  2313  008D  00B9               	movwf	get_jump_full@res
  2314  008E  0838               	movf	??_get_jump_full+1,w
  2315  008F  00BA               	movwf	get_jump_full@res+1
  2316  0090                     l2035:
  2317                           
  2318                           ;main.c: 290:         if (res < 25) jump_counter--;
  2319  0090  3000               	movlw	0
  2320  0091  023A               	subwf	get_jump_full@res+1,w
  2321  0092  3019               	movlw	25
  2322  0093  1903               	skipnz
  2323  0094  0239               	subwf	get_jump_full@res,w
  2324  0095  1803               	skipnc
  2325  0096  2898               	goto	u1111
  2326  0097  2899               	goto	u1110
  2327  0098                     u1111:
  2328  0098  289E               	goto	l2039
  2329  0099                     u1110:
  2330  0099                     l2037:
  2331  0099  30FF               	movlw	255
  2332  009A  00B7               	movwf	??_get_jump_full
  2333  009B  0837               	movf	??_get_jump_full,w
  2334  009C  07B1               	addwf	get_jump_full@jump_counter,f
  2335  009D  28A2               	goto	l2041
  2336  009E                     l2039:
  2337  009E  3001               	movlw	1
  2338  009F  00B7               	movwf	??_get_jump_full
  2339  00A0  0837               	movf	??_get_jump_full,w
  2340  00A1  07B1               	addwf	get_jump_full@jump_counter,f
  2341  00A2                     l2041:
  2342                           
  2343                           ;main.c: 305:         if (jump_counter > 10) {
  2344  00A2  0831               	movf	get_jump_full@jump_counter,w
  2345  00A3  3A80               	xorlw	128
  2346  00A4  3E75               	addlw	-139
  2347  00A5  1C03               	skipc
  2348  00A6  28A8               	goto	u1121
  2349  00A7  28A9               	goto	u1120
  2350  00A8                     u1121:
  2351  00A8  28B1               	goto	l2049
  2352  00A9                     u1120:
  2353  00A9                     l2043:
  2354                           
  2355                           ;main.c: 306:             jump_counter = 10;
  2356  00A9  300A               	movlw	10
  2357  00AA  00B7               	movwf	??_get_jump_full
  2358  00AB  0837               	movf	??_get_jump_full,w
  2359  00AC  00B1               	movwf	get_jump_full@jump_counter
  2360  00AD                     l2045:
  2361                           
  2362                           ;main.c: 307:             FLAGS.bits._JUMP_CONNECTED = 0;
  2363  00AD  11F7               	bcf	_FLAGS,3
  2364  00AE                     l2047:
  2365                           
  2366                           ;main.c: 308:             flag = 1;
  2367  00AE  01BB               	clrf	get_jump_full@flag
  2368  00AF  0ABB               	incf	get_jump_full@flag,f
  2369                           
  2370                           ;main.c: 309:         } else if (jump_counter<-10) {
  2371  00B0  28BE               	goto	l2057
  2372  00B1                     l2049:
  2373  00B1  0831               	movf	get_jump_full@jump_counter,w
  2374  00B2  3A80               	xorlw	128
  2375  00B3  3E8A               	addlw	138
  2376  00B4  1803               	skipnc
  2377  00B5  28B7               	goto	u1131
  2378  00B6  28B8               	goto	u1130
  2379  00B7                     u1131:
  2380  00B7  28BE               	goto	l2057
  2381  00B8                     u1130:
  2382  00B8                     l2051:
  2383                           
  2384                           ;main.c: 310:             jump_counter = -10;
  2385  00B8  30F6               	movlw	246
  2386  00B9  00B7               	movwf	??_get_jump_full
  2387  00BA  0837               	movf	??_get_jump_full,w
  2388  00BB  00B1               	movwf	get_jump_full@jump_counter
  2389  00BC                     l2053:
  2390                           
  2391                           ;main.c: 311:             FLAGS.bits._JUMP_CONNECTED = 1;
  2392  00BC  15F7               	bsf	_FLAGS,3
  2393  00BD  28AE               	goto	l2047
  2394  00BE                     l2057:
  2395                           
  2396                           ;main.c: 317:     } while (flag == 0);
  2397  00BE  083B               	movf	get_jump_full@flag,w
  2398  00BF  1903               	btfsc	3,2
  2399  00C0  28C2               	goto	u1141
  2400  00C1  28C3               	goto	u1140
  2401  00C2                     u1141:
  2402  00C2  2885               	goto	l2033
  2403  00C3                     u1140:
  2404  00C3                     l410:	
  2405                           ;main.c: 318:     do { ANSELAbits.ANSA1 = 0; } while(0);
  2406                           
  2407  00C3  0023               	movlb	3	; select bank3
  2408  00C4  108C               	bcf	12,1	;volatile
  2409  00C5                     l412:
  2410  00C5  0008               	return
  2411  00C6                     __end_of_get_jump_full:
  2412                           
  2413                           	psect	text5
  2414  0038                     __ptext5:	
  2415 ;; *************** function _get_fun_full *****************
  2416 ;; Defined at:
  2417 ;;		line 211 in file "main.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  res             2    4[BANK0 ] unsigned int 
  2422 ;;  flag            1    6[BANK0 ] unsigned char 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		wreg, status,2, status,0, pclath, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMMON   BANK0   BANK1
  2432 ;;      Params:         0       0       0
  2433 ;;      Locals:         0       3       0
  2434 ;;      Temps:          0       2       0
  2435 ;;      Totals:         0       5       0
  2436 ;;Total ram usage:        5 bytes
  2437 ;; Hardware stack levels used: 1
  2438 ;; Hardware stack levels required when called: 8
  2439 ;; This function calls:
  2440 ;;		_ADC_GetConversion
  2441 ;; This function is called by:
  2442 ;;		_start_setup
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446  0038                     _get_fun_full:	
  2447                           ;psect for function _get_fun_full
  2448                           
  2449  0038                     l367:	
  2450                           ;incstack = 0
  2451                           ; Regs used in _get_fun_full: [wreg+status,2+status,0+pclath+cstack]
  2452                           ;main.c: 213:     static signed char fun_counter;;main.c: 214:     do { LATCbits.LATC1 =
      +                           1; } while(0);
  2453                           
  2454  0038  0022               	movlb	2	; select bank2
  2455  0039  148E               	bsf	14,1	;volatile
  2456  003A                     l369:	
  2457                           ;main.c: 215:     do { ANSELCbits.ANSC2 = 1; } while(0);
  2458                           
  2459  003A  0023               	movlb	3	; select bank3
  2460  003B  150E               	bsf	14,2	;volatile
  2461  003C                     l2003:
  2462                           
  2463                           ;main.c: 216:     char flag = 0;
  2464  003C  0020               	movlb	0	; select bank0
  2465  003D  01BB               	clrf	get_fun_full@flag
  2466  003E                     l2005:
  2467                           
  2468                           ;main.c: 218:         unsigned res = ADC_GetConversion(PIN_FUN_STATE);
  2469  003E  3006               	movlw	6
  2470  003F  3183  2327  3180   	fcall	_ADC_GetConversion
  2471  0042  0020               	movlb	0	; select bank0
  2472  0043  00B7               	movwf	??_get_fun_full
  2473  0044  01B8               	clrf	??_get_fun_full+1
  2474  0045  0837               	movf	??_get_fun_full,w
  2475  0046  00B9               	movwf	get_fun_full@res
  2476  0047  0838               	movf	??_get_fun_full+1,w
  2477  0048  00BA               	movwf	get_fun_full@res+1
  2478  0049                     l2007:
  2479                           
  2480                           ;main.c: 219:         if (res < 25) fun_counter--;
  2481  0049  3000               	movlw	0
  2482  004A  023A               	subwf	get_fun_full@res+1,w
  2483  004B  3019               	movlw	25
  2484  004C  1903               	skipnz
  2485  004D  0239               	subwf	get_fun_full@res,w
  2486  004E  1803               	skipnc
  2487  004F  2851               	goto	u1071
  2488  0050  2852               	goto	u1070
  2489  0051                     u1071:
  2490  0051  2857               	goto	l2011
  2491  0052                     u1070:
  2492  0052                     l2009:
  2493  0052  30FF               	movlw	255
  2494  0053  00B7               	movwf	??_get_fun_full
  2495  0054  0837               	movf	??_get_fun_full,w
  2496  0055  07B3               	addwf	get_fun_full@fun_counter,f
  2497  0056  285B               	goto	l2013
  2498  0057                     l2011:
  2499  0057  3001               	movlw	1
  2500  0058  00B7               	movwf	??_get_fun_full
  2501  0059  0837               	movf	??_get_fun_full,w
  2502  005A  07B3               	addwf	get_fun_full@fun_counter,f
  2503  005B                     l2013:
  2504                           
  2505                           ;main.c: 235:         if (fun_counter > 10) {
  2506  005B  0833               	movf	get_fun_full@fun_counter,w
  2507  005C  3A80               	xorlw	128
  2508  005D  3E75               	addlw	-139
  2509  005E  1C03               	skipc
  2510  005F  2861               	goto	u1081
  2511  0060  2862               	goto	u1080
  2512  0061                     u1081:
  2513  0061  286A               	goto	l2021
  2514  0062                     u1080:
  2515  0062                     l2015:
  2516                           
  2517                           ;main.c: 236:             fun_counter = 10;
  2518  0062  300A               	movlw	10
  2519  0063  00B7               	movwf	??_get_fun_full
  2520  0064  0837               	movf	??_get_fun_full,w
  2521  0065  00B3               	movwf	get_fun_full@fun_counter
  2522  0066                     l2017:
  2523                           
  2524                           ;main.c: 237:             FLAGS.bits._FUN_CONNECTED = 0;
  2525  0066  1177               	bcf	_FLAGS,2
  2526  0067                     l2019:
  2527                           
  2528                           ;main.c: 238:             flag = 1;
  2529  0067  01BB               	clrf	get_fun_full@flag
  2530  0068  0ABB               	incf	get_fun_full@flag,f
  2531                           
  2532                           ;main.c: 239:         } else if (fun_counter<-10) {
  2533  0069  2877               	goto	l2029
  2534  006A                     l2021:
  2535  006A  0833               	movf	get_fun_full@fun_counter,w
  2536  006B  3A80               	xorlw	128
  2537  006C  3E8A               	addlw	138
  2538  006D  1803               	skipnc
  2539  006E  2870               	goto	u1091
  2540  006F  2871               	goto	u1090
  2541  0070                     u1091:
  2542  0070  2877               	goto	l2029
  2543  0071                     u1090:
  2544  0071                     l2023:
  2545                           
  2546                           ;main.c: 240:             fun_counter = 10;
  2547  0071  300A               	movlw	10
  2548  0072  00B7               	movwf	??_get_fun_full
  2549  0073  0837               	movf	??_get_fun_full,w
  2550  0074  00B3               	movwf	get_fun_full@fun_counter
  2551  0075                     l2025:
  2552                           
  2553                           ;main.c: 241:             FLAGS.bits._FUN_CONNECTED = 1;
  2554  0075  1577               	bsf	_FLAGS,2
  2555  0076  2867               	goto	l2019
  2556  0077                     l2029:
  2557                           
  2558                           ;main.c: 246:     } while (flag == 0);
  2559  0077  083B               	movf	get_fun_full@flag,w
  2560  0078  1903               	btfsc	3,2
  2561  0079  287B               	goto	u1101
  2562  007A  287C               	goto	u1100
  2563  007B                     u1101:
  2564  007B  283E               	goto	l2005
  2565  007C                     u1100:
  2566  007C                     l378:	
  2567                           ;main.c: 248:     do { ANSELCbits.ANSC2 = 0; } while(0);
  2568                           
  2569  007C  0023               	movlb	3	; select bank3
  2570  007D  110E               	bcf	14,2	;volatile
  2571  007E                     l380:	
  2572                           ;main.c: 249:     do { LATCbits.LATC1 = 0; } while(0);
  2573                           
  2574  007E  0022               	movlb	2	; select bank2
  2575  007F  108E               	bcf	14,1	;volatile
  2576  0080                     l382:
  2577  0080  0008               	return
  2578  0081                     __end_of_get_fun_full:
  2579                           
  2580                           	psect	text6
  2581  046F                     __ptext6:	
  2582 ;; *************** function _TMR2_StartTimer *****************
  2583 ;; Defined at:
  2584 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;		None
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;		None
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      void 
  2591 ;; Registers used:
  2592 ;;		None
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1
  2598 ;;      Params:         0       0       0
  2599 ;;      Locals:         0       0       0
  2600 ;;      Temps:          0       0       0
  2601 ;;      Totals:         0       0       0
  2602 ;;Total ram usage:        0 bytes
  2603 ;; Hardware stack levels used: 1
  2604 ;; Hardware stack levels required when called: 7
  2605 ;; This function calls:
  2606 ;;		Nothing
  2607 ;; This function is called by:
  2608 ;;		_start_setup
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612  046F                     _TMR2_StartTimer:	
  2613                           ;psect for function _TMR2_StartTimer
  2614                           
  2615  046F                     l2321:	
  2616                           ;incstack = 0
  2617                           ; Regs used in _TMR2_StartTimer: []
  2618                           
  2619                           
  2620                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  2621  046F  0020               	movlb	0	; select bank0
  2622  0470  151C               	bsf	28,2	;volatile
  2623  0471                     l140:
  2624  0471  0008               	return
  2625  0472                     __end_of_TMR2_StartTimer:
  2626                           
  2627                           	psect	text7
  2628  035A                     __ptext7:	
  2629 ;; *************** function _SYSTEM_Initialize *****************
  2630 ;; Defined at:
  2631 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;		None
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;		None
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  1    wreg      void 
  2638 ;; Registers used:
  2639 ;;		wreg, status,2, status,0, pclath, cstack
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMMON   BANK0   BANK1
  2645 ;;      Params:         0       0       0
  2646 ;;      Locals:         0       0       0
  2647 ;;      Temps:          0       0       0
  2648 ;;      Totals:         0       0       0
  2649 ;;Total ram usage:        0 bytes
  2650 ;; Hardware stack levels used: 1
  2651 ;; Hardware stack levels required when called: 9
  2652 ;; This function calls:
  2653 ;;		_ADC_Initialize
  2654 ;;		_FVR_Initialize
  2655 ;;		_OSCILLATOR_Initialize
  2656 ;;		_PIN_MANAGER_Initialize
  2657 ;;		_TMR0_Initialize
  2658 ;;		_TMR2_Initialize
  2659 ;;		_WDT_Initialize
  2660 ;; This function is called by:
  2661 ;;		_start_setup
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665  035A                     _SYSTEM_Initialize:	
  2666                           ;psect for function _SYSTEM_Initialize
  2667                           
  2668  035A                     l2319:	
  2669                           ;incstack = 0
  2670                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2671                           
  2672                           
  2673                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2674  035A  3183  239B  3183   	fcall	_PIN_MANAGER_Initialize
  2675                           
  2676                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2677  035D  3184  243F  3183   	fcall	_OSCILLATOR_Initialize
  2678                           
  2679                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2680  0360  3184  2467  3183   	fcall	_WDT_Initialize
  2681                           
  2682                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  2683  0363  3184  246B  3183   	fcall	_FVR_Initialize
  2684                           
  2685                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2686  0366  3184  2437  3183   	fcall	_ADC_Initialize
  2687                           
  2688                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  2689  0369  3183  23C5  3183   	fcall	_TMR2_Initialize
  2690                           
  2691                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  2692  036C  3183  2370  3183   	fcall	_TMR0_Initialize
  2693  036F                     l25:
  2694  036F  0008               	return
  2695  0370                     __end_of_SYSTEM_Initialize:
  2696                           
  2697                           	psect	text8
  2698  0467                     __ptext8:	
  2699 ;; *************** function _WDT_Initialize *****************
  2700 ;; Defined at:
  2701 ;;		line 72 in file "mcc_generated_files/mcc.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;		None
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      void 
  2708 ;; Registers used:
  2709 ;;		wreg
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMMON   BANK0   BANK1
  2715 ;;      Params:         0       0       0
  2716 ;;      Locals:         0       0       0
  2717 ;;      Temps:          0       0       0
  2718 ;;      Totals:         0       0       0
  2719 ;;Total ram usage:        0 bytes
  2720 ;; Hardware stack levels used: 1
  2721 ;; Hardware stack levels required when called: 7
  2722 ;; This function calls:
  2723 ;;		Nothing
  2724 ;; This function is called by:
  2725 ;;		_SYSTEM_Initialize
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729  0467                     _WDT_Initialize:	
  2730                           ;psect for function _WDT_Initialize
  2731                           
  2732  0467                     l2283:	
  2733                           ;incstack = 0
  2734                           ; Regs used in _WDT_Initialize: [wreg]
  2735                           
  2736                           
  2737                           ;mcc_generated_files/mcc.c: 75:     WDTCON = 0x16;
  2738  0467  3016               	movlw	22
  2739  0468  0021               	movlb	1	; select bank1
  2740  0469  0097               	movwf	23	;volatile
  2741  046A                     l31:
  2742  046A  0008               	return
  2743  046B                     __end_of_WDT_Initialize:
  2744                           
  2745                           	psect	text9
  2746  03C5                     __ptext9:	
  2747 ;; *************** function _TMR2_Initialize *****************
  2748 ;; Defined at:
  2749 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;		None
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;		None
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  1    wreg      void 
  2756 ;; Registers used:
  2757 ;;		wreg, status,2, status,0, pclath, cstack
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMMON   BANK0   BANK1
  2763 ;;      Params:         0       0       0
  2764 ;;      Locals:         0       0       0
  2765 ;;      Temps:          0       0       0
  2766 ;;      Totals:         0       0       0
  2767 ;;Total ram usage:        0 bytes
  2768 ;; Hardware stack levels used: 1
  2769 ;; Hardware stack levels required when called: 8
  2770 ;; This function calls:
  2771 ;;		_TMR2_SetInterruptHandler
  2772 ;; This function is called by:
  2773 ;;		_SYSTEM_Initialize
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777  03C5                     _TMR2_Initialize:	
  2778                           ;psect for function _TMR2_Initialize
  2779                           
  2780  03C5                     l2293:	
  2781                           ;incstack = 0
  2782                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2783                           
  2784                           
  2785                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x63;
  2786  03C5  3063               	movlw	99
  2787  03C6  0020               	movlb	0	; select bank0
  2788  03C7  009B               	movwf	27	;volatile
  2789  03C8                     l2295:
  2790                           
  2791                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  2792  03C8  019A               	clrf	26	;volatile
  2793  03C9                     l2297:
  2794                           
  2795                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  2796  03C9  1091               	bcf	17,1	;volatile
  2797  03CA                     l2299:
  2798                           
  2799                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  2800  03CA  0021               	movlb	1	; select bank1
  2801  03CB  1491               	bsf	17,1	;volatile
  2802  03CC                     l2301:
  2803                           
  2804                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  2805  03CC  307C               	movlw	low _TMR2_DefaultInterruptHandler
  2806  03CD  0020               	movlb	0	; select bank0
  2807  03CE  00B5               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2808  03CF  3004               	movlw	high _TMR2_DefaultInterruptHandler
  2809  03D0  00B6               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2810  03D1  3184  244C  3183   	fcall	_TMR2_SetInterruptHandler
  2811  03D4                     l2303:
  2812                           
  2813                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x4D;
  2814  03D4  304D               	movlw	77
  2815  03D5  0020               	movlb	0	; select bank0
  2816  03D6  009C               	movwf	28	;volatile
  2817  03D7                     l137:
  2818  03D7  0008               	return
  2819  03D8                     __end_of_TMR2_Initialize:
  2820                           
  2821                           	psect	text10
  2822  044C                     __ptext10:	
  2823 ;; *************** function _TMR2_SetInterruptHandler *****************
  2824 ;; Defined at:
  2825 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2828 ;;		 -> ms_tick(1), TMR2_DefaultInterruptHandler(1), 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;		None
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  1    wreg      void 
  2833 ;; Registers used:
  2834 ;;		wreg
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMMON   BANK0   BANK1
  2840 ;;      Params:         0       2       0
  2841 ;;      Locals:         0       0       0
  2842 ;;      Temps:          0       0       0
  2843 ;;      Totals:         0       2       0
  2844 ;;Total ram usage:        2 bytes
  2845 ;; Hardware stack levels used: 1
  2846 ;; Hardware stack levels required when called: 7
  2847 ;; This function calls:
  2848 ;;		Nothing
  2849 ;; This function is called by:
  2850 ;;		_TMR2_Initialize
  2851 ;;		_start_setup
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855  044C                     _TMR2_SetInterruptHandler:	
  2856                           ;psect for function _TMR2_SetInterruptHandler
  2857                           
  2858  044C                     l2261:	
  2859                           ;incstack = 0
  2860                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2861                           
  2862                           
  2863                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
  2864  044C  0020               	movlb	0	; select bank0
  2865  044D  0836               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2866  044E  00BF               	movwf	_TMR2_InterruptHandler+1
  2867  044F  0835               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2868  0450  00BE               	movwf	_TMR2_InterruptHandler
  2869  0451                     l159:
  2870  0451  0008               	return
  2871  0452                     __end_of_TMR2_SetInterruptHandler:
  2872                           
  2873                           	psect	text11
  2874  0370                     __ptext11:	
  2875 ;; *************** function _TMR0_Initialize *****************
  2876 ;; Defined at:
  2877 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;		None
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;		None
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  1    wreg      void 
  2884 ;; Registers used:
  2885 ;;		wreg, status,2, status,0, pclath, cstack
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMMON   BANK0   BANK1
  2891 ;;      Params:         0       0       0
  2892 ;;      Locals:         0       0       0
  2893 ;;      Temps:          0       1       0
  2894 ;;      Totals:         0       1       0
  2895 ;;Total ram usage:        1 bytes
  2896 ;; Hardware stack levels used: 1
  2897 ;; Hardware stack levels required when called: 8
  2898 ;; This function calls:
  2899 ;;		_TMR0_SetInterruptHandler
  2900 ;; This function is called by:
  2901 ;;		_SYSTEM_Initialize
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905  0370                     _TMR0_Initialize:	
  2906                           ;psect for function _TMR0_Initialize
  2907                           
  2908  0370                     l2305:	
  2909                           ;incstack = 0
  2910                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2911                           
  2912                           
  2913                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD2 
      +                          & 0x3F));
  2914  0370  0021               	movlb	1	; select bank1
  2915  0371  0815               	movf	21,w	;volatile
  2916  0372  39C0               	andlw	192
  2917  0373  3812               	iorlw	18
  2918  0374  0095               	movwf	21	;volatile
  2919  0375                     l2307:
  2920                           
  2921                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x9C;
  2922  0375  309C               	movlw	156
  2923  0376  0020               	movlb	0	; select bank0
  2924  0377  0095               	movwf	21	;volatile
  2925  0378                     l2309:
  2926                           
  2927                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 156;
  2928  0378  309C               	movlw	156
  2929  0379  00B7               	movwf	??_TMR0_Initialize
  2930  037A  0837               	movf	??_TMR0_Initialize,w
  2931  037B  00C0               	movwf	_timer0ReloadVal	;volatile
  2932  037C                     l2311:
  2933                           
  2934                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  2935  037C  110B               	bcf	11,2	;volatile
  2936  037D                     l2313:
  2937                           
  2938                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  2939  037D  168B               	bsf	11,5	;volatile
  2940  037E                     l2315:
  2941                           
  2942                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2943  037E  307D               	movlw	low _TMR0_DefaultInterruptHandler
  2944  037F  00B5               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2945  0380  3004               	movlw	high _TMR0_DefaultInterruptHandler
  2946  0381  00B6               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2947  0382  3184  2452  3183   	fcall	_TMR0_SetInterruptHandler
  2948  0385                     l179:
  2949  0385  0008               	return
  2950  0386                     __end_of_TMR0_Initialize:
  2951                           
  2952                           	psect	text12
  2953  0452                     __ptext12:	
  2954 ;; *************** function _TMR0_SetInterruptHandler *****************
  2955 ;; Defined at:
  2956 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2959 ;;		 -> switch_zum(1), TMR0_DefaultInterruptHandler(1), 
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      void 
  2964 ;; Registers used:
  2965 ;;		wreg
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMMON   BANK0   BANK1
  2971 ;;      Params:         0       2       0
  2972 ;;      Locals:         0       0       0
  2973 ;;      Temps:          0       0       0
  2974 ;;      Totals:         0       2       0
  2975 ;;Total ram usage:        2 bytes
  2976 ;; Hardware stack levels used: 1
  2977 ;; Hardware stack levels required when called: 7
  2978 ;; This function calls:
  2979 ;;		Nothing
  2980 ;; This function is called by:
  2981 ;;		_TMR0_Initialize
  2982 ;;		_start_setup
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986  0452                     _TMR0_SetInterruptHandler:	
  2987                           ;psect for function _TMR0_SetInterruptHandler
  2988                           
  2989  0452                     l2263:	
  2990                           ;incstack = 0
  2991                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2992                           
  2993                           
  2994                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  2995  0452  0020               	movlb	0	; select bank0
  2996  0453  0836               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2997  0454  00BD               	movwf	_TMR0_InterruptHandler+1
  2998  0455  0835               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2999  0456  00BC               	movwf	_TMR0_InterruptHandler
  3000  0457                     l195:
  3001  0457  0008               	return
  3002  0458                     __end_of_TMR0_SetInterruptHandler:
  3003                           
  3004                           	psect	text13
  3005  039B                     __ptext13:	
  3006 ;; *************** function _PIN_MANAGER_Initialize *****************
  3007 ;; Defined at:
  3008 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;		None
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      void 
  3015 ;; Registers used:
  3016 ;;		wreg, status,2
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMMON   BANK0   BANK1
  3022 ;;      Params:         0       0       0
  3023 ;;      Locals:         0       0       0
  3024 ;;      Temps:          0       0       0
  3025 ;;      Totals:         0       0       0
  3026 ;;Total ram usage:        0 bytes
  3027 ;; Hardware stack levels used: 1
  3028 ;; Hardware stack levels required when called: 7
  3029 ;; This function calls:
  3030 ;;		Nothing
  3031 ;; This function is called by:
  3032 ;;		_SYSTEM_Initialize
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036  039B                     _PIN_MANAGER_Initialize:	
  3037                           ;psect for function _PIN_MANAGER_Initialize
  3038                           
  3039  039B                     l2265:	
  3040                           ;incstack = 0
  3041                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3042                           
  3043                           
  3044                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3045  039B  0022               	movlb	2	; select bank2
  3046  039C  018C               	clrf	12	;volatile
  3047                           
  3048                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  3049  039D  018E               	clrf	14	;volatile
  3050  039E                     l2267:
  3051                           
  3052                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x0F;
  3053  039E  300F               	movlw	15
  3054  039F  0021               	movlb	1	; select bank1
  3055  03A0  008C               	movwf	12	;volatile
  3056  03A1                     l2269:
  3057                           
  3058                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x0C;
  3059  03A1  300C               	movlw	12
  3060  03A2  008E               	movwf	14	;volatile
  3061  03A3                     l2271:
  3062                           
  3063                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x0C;
  3064  03A3  300C               	movlw	12
  3065  03A4  0023               	movlb	3	; select bank3
  3066  03A5  008E               	movwf	14	;volatile
  3067  03A6                     l2273:
  3068                           
  3069                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x07;
  3070  03A6  3007               	movlw	7
  3071  03A7  008C               	movwf	12	;volatile
  3072                           
  3073                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  3074  03A8  0024               	movlb	4	; select bank4
  3075  03A9  018C               	clrf	12	;volatile
  3076                           
  3077                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  3078  03AA  018E               	clrf	14	;volatile
  3079  03AB                     l2275:
  3080                           
  3081                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  3082  03AB  0021               	movlb	1	; select bank1
  3083  03AC  1795               	bsf	21,7	;volatile
  3084                           
  3085                           ;mcc_generated_files/pin_manager.c: 86:     APFCON = 0x00;
  3086  03AD  0022               	movlb	2	; select bank2
  3087  03AE  019D               	clrf	29	;volatile
  3088  03AF                     l92:
  3089  03AF  0008               	return
  3090  03B0                     __end_of_PIN_MANAGER_Initialize:
  3091                           
  3092                           	psect	text14
  3093  043F                     __ptext14:	
  3094 ;; *************** function _OSCILLATOR_Initialize *****************
  3095 ;; Defined at:
  3096 ;;		line 62 in file "mcc_generated_files/mcc.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;		None
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;		None
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      void 
  3103 ;; Registers used:
  3104 ;;		wreg, status,2
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMMON   BANK0   BANK1
  3110 ;;      Params:         0       0       0
  3111 ;;      Locals:         0       0       0
  3112 ;;      Temps:          0       0       0
  3113 ;;      Totals:         0       0       0
  3114 ;;Total ram usage:        0 bytes
  3115 ;; Hardware stack levels used: 1
  3116 ;; Hardware stack levels required when called: 7
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_SYSTEM_Initialize
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124  043F                     _OSCILLATOR_Initialize:	
  3125                           ;psect for function _OSCILLATOR_Initialize
  3126                           
  3127  043F                     l2277:	
  3128                           ;incstack = 0
  3129                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3130                           
  3131                           
  3132                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x78;
  3133  043F  3078               	movlw	120
  3134  0440  0021               	movlb	1	; select bank1
  3135  0441  0099               	movwf	25	;volatile
  3136  0442                     l2279:
  3137                           
  3138                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  3139  0442  0198               	clrf	24	;volatile
  3140  0443                     l2281:
  3141                           
  3142                           ;mcc_generated_files/mcc.c: 69:     BORCON = 0x00;
  3143  0443  0022               	movlb	2	; select bank2
  3144  0444  0196               	clrf	22	;volatile
  3145  0445                     l28:
  3146  0445  0008               	return
  3147  0446                     __end_of_OSCILLATOR_Initialize:
  3148                           
  3149                           	psect	text15
  3150  046B                     __ptext15:	
  3151 ;; *************** function _FVR_Initialize *****************
  3152 ;; Defined at:
  3153 ;;		line 58 in file "mcc_generated_files/fvr.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;		None
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;		None
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  1    wreg      void 
  3160 ;; Registers used:
  3161 ;;		wreg
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMMON   BANK0   BANK1
  3167 ;;      Params:         0       0       0
  3168 ;;      Locals:         0       0       0
  3169 ;;      Temps:          0       0       0
  3170 ;;      Totals:         0       0       0
  3171 ;;Total ram usage:        0 bytes
  3172 ;; Hardware stack levels used: 1
  3173 ;; Hardware stack levels required when called: 7
  3174 ;; This function calls:
  3175 ;;		Nothing
  3176 ;; This function is called by:
  3177 ;;		_SYSTEM_Initialize
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181  046B                     _FVR_Initialize:	
  3182                           ;psect for function _FVR_Initialize
  3183                           
  3184  046B                     l2285:	
  3185                           ;incstack = 0
  3186                           ; Regs used in _FVR_Initialize: [wreg]
  3187                           
  3188                           
  3189                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  3190  046B  3082               	movlw	130
  3191  046C  0022               	movlb	2	; select bank2
  3192  046D  0097               	movwf	23	;volatile
  3193  046E                     l205:
  3194  046E  0008               	return
  3195  046F                     __end_of_FVR_Initialize:
  3196                           
  3197                           	psect	text16
  3198  0437                     __ptext16:	
  3199 ;; *************** function _ADC_Initialize *****************
  3200 ;; Defined at:
  3201 ;;		line 67 in file "mcc_generated_files/adc.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;		None
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;		None
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		wreg, status,2
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMMON   BANK0   BANK1
  3215 ;;      Params:         0       0       0
  3216 ;;      Locals:         0       0       0
  3217 ;;      Temps:          0       0       0
  3218 ;;      Totals:         0       0       0
  3219 ;;Total ram usage:        0 bytes
  3220 ;; Hardware stack levels used: 1
  3221 ;; Hardware stack levels required when called: 7
  3222 ;; This function calls:
  3223 ;;		Nothing
  3224 ;; This function is called by:
  3225 ;;		_SYSTEM_Initialize
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229  0437                     _ADC_Initialize:	
  3230                           ;psect for function _ADC_Initialize
  3231                           
  3232  0437                     l2287:	
  3233                           ;incstack = 0
  3234                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3235                           
  3236                           
  3237                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x50;
  3238  0437  3050               	movlw	80
  3239  0438  0021               	movlb	1	; select bank1
  3240  0439  009E               	movwf	30	;volatile
  3241  043A                     l2289:
  3242                           
  3243                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  3244  043A  019B               	clrf	27	;volatile
  3245  043B                     l2291:
  3246                           
  3247                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  3248  043B  019C               	clrf	28	;volatile
  3249                           
  3250                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x7D;
  3251  043C  307D               	movlw	125
  3252  043D  009D               	movwf	29	;volatile
  3253  043E                     l48:
  3254  043E  0008               	return
  3255  043F                     __end_of_ADC_Initialize:
  3256                           
  3257                           	psect	text17
  3258  0187                     __ptext17:	
  3259 ;; *************** function _get_jump *****************
  3260 ;; Defined at:
  3261 ;;		line 253 in file "main.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;		None
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  res             2    4[BANK0 ] unsigned int 
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      void 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0, pclath, cstack
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1
  3275 ;;      Params:         0       0       0
  3276 ;;      Locals:         0       2       0
  3277 ;;      Temps:          0       2       0
  3278 ;;      Totals:         0       4       0
  3279 ;;Total ram usage:        4 bytes
  3280 ;; Hardware stack levels used: 1
  3281 ;; Hardware stack levels required when called: 8
  3282 ;; This function calls:
  3283 ;;		_ADC_GetConversion
  3284 ;; This function is called by:
  3285 ;;		_main
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289  0187                     _get_jump:	
  3290                           ;psect for function _get_jump
  3291                           
  3292  0187                     l387:	
  3293                           ;incstack = 0
  3294                           ; Regs used in _get_jump: [wreg+status,2+status,0+pclath+cstack]
  3295                           ;main.c: 255:     static signed char jump_counter;;main.c: 256:     do { ANSELAbits.ANSA
      +                          1 = 1; } while(0);
  3296                           
  3297  0187  0023               	movlb	3	; select bank3
  3298  0188  148C               	bsf	12,1	;volatile
  3299  0189                     l2107:
  3300                           
  3301                           ;main.c: 257:     unsigned res = ADC_GetConversion(PIN_JUMP_STATE);
  3302  0189  3001               	movlw	1
  3303  018A  3183  2327  3181   	fcall	_ADC_GetConversion
  3304  018D  0020               	movlb	0	; select bank0
  3305  018E  00B7               	movwf	??_get_jump
  3306  018F  01B8               	clrf	??_get_jump+1
  3307  0190  0837               	movf	??_get_jump,w
  3308  0191  00B9               	movwf	get_jump@res
  3309  0192  0838               	movf	??_get_jump+1,w
  3310  0193  00BA               	movwf	get_jump@res+1
  3311  0194                     l2109:
  3312  0194  0023               	movlb	3	; select bank3
  3313  0195  108C               	bcf	12,1	;volatile
  3314  0196                     l2111:
  3315                           
  3316                           ;main.c: 259:     if (res < 25) jump_counter--;
  3317  0196  3000               	movlw	0
  3318  0197  0020               	movlb	0	; select bank0
  3319  0198  023A               	subwf	get_jump@res+1,w
  3320  0199  3019               	movlw	25
  3321  019A  1903               	skipnz
  3322  019B  0239               	subwf	get_jump@res,w
  3323  019C  1803               	skipnc
  3324  019D  299F               	goto	u1211
  3325  019E  29A0               	goto	u1210
  3326  019F                     u1211:
  3327  019F  29A5               	goto	l2115
  3328  01A0                     u1210:
  3329  01A0                     l2113:
  3330  01A0  30FF               	movlw	255
  3331  01A1  00B7               	movwf	??_get_jump
  3332  01A2  0837               	movf	??_get_jump,w
  3333  01A3  07B2               	addwf	get_jump@jump_counter,f
  3334  01A4  29A9               	goto	l2117
  3335  01A5                     l2115:
  3336  01A5  3001               	movlw	1
  3337  01A6  00B7               	movwf	??_get_jump
  3338  01A7  0837               	movf	??_get_jump,w
  3339  01A8  07B2               	addwf	get_jump@jump_counter,f
  3340  01A9                     l2117:
  3341                           
  3342                           ;main.c: 271:     if (jump_counter > 10) {
  3343  01A9  0832               	movf	get_jump@jump_counter,w
  3344  01AA  3A80               	xorlw	128
  3345  01AB  3E75               	addlw	-139
  3346  01AC  1C03               	skipc
  3347  01AD  29AF               	goto	u1221
  3348  01AE  29B0               	goto	u1220
  3349  01AF                     u1221:
  3350  01AF  29B6               	goto	l2123
  3351  01B0                     u1220:
  3352  01B0                     l2119:
  3353                           
  3354                           ;main.c: 272:         jump_counter = 10;
  3355  01B0  300A               	movlw	10
  3356  01B1  00B7               	movwf	??_get_jump
  3357  01B2  0837               	movf	??_get_jump,w
  3358  01B3  00B2               	movwf	get_jump@jump_counter
  3359  01B4                     l2121:
  3360                           
  3361                           ;main.c: 273:         FLAGS.bits._JUMP_CONNECTED = 0;
  3362  01B4  11F7               	bcf	_FLAGS,3
  3363                           
  3364                           ;main.c: 274:     } else if (jump_counter<-10) {
  3365  01B5  29C2               	goto	l396
  3366  01B6                     l2123:
  3367  01B6  0832               	movf	get_jump@jump_counter,w
  3368  01B7  3A80               	xorlw	128
  3369  01B8  3E8A               	addlw	138
  3370  01B9  1803               	skipnc
  3371  01BA  29BC               	goto	u1231
  3372  01BB  29BD               	goto	u1230
  3373  01BC                     u1231:
  3374  01BC  29C2               	goto	l396
  3375  01BD                     u1230:
  3376  01BD                     l2125:
  3377                           
  3378                           ;main.c: 275:         jump_counter = -10;
  3379  01BD  30F6               	movlw	246
  3380  01BE  00B7               	movwf	??_get_jump
  3381  01BF  0837               	movf	??_get_jump,w
  3382  01C0  00B2               	movwf	get_jump@jump_counter
  3383  01C1                     l2127:
  3384                           
  3385                           ;main.c: 276:         FLAGS.bits._JUMP_CONNECTED = 1;
  3386  01C1  15F7               	bsf	_FLAGS,3
  3387  01C2                     l396:
  3388  01C2  0008               	return
  3389  01C3                     __end_of_get_jump:
  3390                           
  3391                           	psect	text18
  3392  0109                     __ptext18:	
  3393 ;; *************** function _get_fun *****************
  3394 ;; Defined at:
  3395 ;;		line 179 in file "main.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;  res             2    4[BANK0 ] unsigned int 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0, pclath, cstack
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1
  3409 ;;      Params:         0       0       0
  3410 ;;      Locals:         0       2       0
  3411 ;;      Temps:          0       2       0
  3412 ;;      Totals:         0       4       0
  3413 ;;Total ram usage:        4 bytes
  3414 ;; Hardware stack levels used: 1
  3415 ;; Hardware stack levels required when called: 8
  3416 ;; This function calls:
  3417 ;;		_ADC_GetConversion
  3418 ;; This function is called by:
  3419 ;;		_main
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423  0109                     _get_fun:	
  3424                           ;psect for function _get_fun
  3425                           
  3426  0109                     l349:	
  3427                           ;incstack = 0
  3428                           ; Regs used in _get_fun: [wreg+status,2+status,0+pclath+cstack]
  3429                           ;main.c: 181:     static signed char fun_counter;;main.c: 182:     do { LATCbits.LATC1 =
      +                           1; } while(0);
  3430                           
  3431  0109  0022               	movlb	2	; select bank2
  3432  010A  148E               	bsf	14,1	;volatile
  3433  010B                     l351:	
  3434                           ;main.c: 183:     do { ANSELCbits.ANSC2 = 1; } while(0);
  3435                           
  3436  010B  0023               	movlb	3	; select bank3
  3437  010C  150E               	bsf	14,2	;volatile
  3438  010D                     l2081:
  3439                           
  3440                           ;main.c: 184:     unsigned res = ADC_GetConversion(PIN_FUN_STATE);
  3441  010D  3006               	movlw	6
  3442  010E  3183  2327  3181   	fcall	_ADC_GetConversion
  3443  0111  0020               	movlb	0	; select bank0
  3444  0112  00B7               	movwf	??_get_fun
  3445  0113  01B8               	clrf	??_get_fun+1
  3446  0114  0837               	movf	??_get_fun,w
  3447  0115  00B9               	movwf	get_fun@res
  3448  0116  0838               	movf	??_get_fun+1,w
  3449  0117  00BA               	movwf	get_fun@res+1
  3450  0118                     l2083:
  3451  0118  0023               	movlb	3	; select bank3
  3452  0119  110E               	bcf	14,2	;volatile
  3453  011A                     l2085:
  3454  011A  0022               	movlb	2	; select bank2
  3455  011B  108E               	bcf	14,1	;volatile
  3456  011C                     l2087:
  3457                           
  3458                           ;main.c: 187:     if (res < 25) fun_counter--;
  3459  011C  3000               	movlw	0
  3460  011D  0020               	movlb	0	; select bank0
  3461  011E  023A               	subwf	get_fun@res+1,w
  3462  011F  3019               	movlw	25
  3463  0120  1903               	skipnz
  3464  0121  0239               	subwf	get_fun@res,w
  3465  0122  1803               	skipnc
  3466  0123  2925               	goto	u1181
  3467  0124  2926               	goto	u1180
  3468  0125                     u1181:
  3469  0125  292B               	goto	l2091
  3470  0126                     u1180:
  3471  0126                     l2089:
  3472  0126  30FF               	movlw	255
  3473  0127  00B7               	movwf	??_get_fun
  3474  0128  0837               	movf	??_get_fun,w
  3475  0129  07B4               	addwf	get_fun@fun_counter,f
  3476  012A  292F               	goto	l2093
  3477  012B                     l2091:
  3478  012B  3001               	movlw	1
  3479  012C  00B7               	movwf	??_get_fun
  3480  012D  0837               	movf	??_get_fun,w
  3481  012E  07B4               	addwf	get_fun@fun_counter,f
  3482  012F                     l2093:
  3483                           
  3484                           ;main.c: 200:     if (fun_counter > 10) {
  3485  012F  0834               	movf	get_fun@fun_counter,w
  3486  0130  3A80               	xorlw	128
  3487  0131  3E75               	addlw	-139
  3488  0132  1C03               	skipc
  3489  0133  2935               	goto	u1191
  3490  0134  2936               	goto	u1190
  3491  0135                     u1191:
  3492  0135  293C               	goto	l2099
  3493  0136                     u1190:
  3494  0136                     l2095:
  3495                           
  3496                           ;main.c: 201:         fun_counter = 10;
  3497  0136  300A               	movlw	10
  3498  0137  00B7               	movwf	??_get_fun
  3499  0138  0837               	movf	??_get_fun,w
  3500  0139  00B4               	movwf	get_fun@fun_counter
  3501  013A                     l2097:
  3502                           
  3503                           ;main.c: 202:         FLAGS.bits._FUN_CONNECTED = 0;
  3504  013A  1177               	bcf	_FLAGS,2
  3505                           
  3506                           ;main.c: 203:     } else if (fun_counter<-10) {
  3507  013B  2948               	goto	l362
  3508  013C                     l2099:
  3509  013C  0834               	movf	get_fun@fun_counter,w
  3510  013D  3A80               	xorlw	128
  3511  013E  3E8A               	addlw	138
  3512  013F  1803               	skipnc
  3513  0140  2942               	goto	u1201
  3514  0141  2943               	goto	u1200
  3515  0142                     u1201:
  3516  0142  2948               	goto	l362
  3517  0143                     u1200:
  3518  0143                     l2101:
  3519                           
  3520                           ;main.c: 204:         fun_counter = -10;
  3521  0143  30F6               	movlw	246
  3522  0144  00B7               	movwf	??_get_fun
  3523  0145  0837               	movf	??_get_fun,w
  3524  0146  00B4               	movwf	get_fun@fun_counter
  3525  0147                     l2103:
  3526                           
  3527                           ;main.c: 205:         FLAGS.bits._FUN_CONNECTED = 1;
  3528  0147  1577               	bsf	_FLAGS,2
  3529  0148                     l362:
  3530  0148  0008               	return
  3531  0149                     __end_of_get_fun:
  3532                           
  3533                           	psect	text19
  3534  0327                     __ptext19:	
  3535 ;; *************** function _ADC_GetConversion *****************
  3536 ;; Defined at:
  3537 ;;		line 111 in file "mcc_generated_files/adc.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;  channel         1    wreg     enum E2178
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;  channel         1    1[BANK0 ] enum E2178
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  1    wreg      unsigned char 
  3544 ;; Registers used:
  3545 ;;		wreg, status,2, status,0
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMMON   BANK0   BANK1
  3551 ;;      Params:         0       0       0
  3552 ;;      Locals:         0       1       0
  3553 ;;      Temps:          0       1       0
  3554 ;;      Totals:         0       2       0
  3555 ;;Total ram usage:        2 bytes
  3556 ;; Hardware stack levels used: 1
  3557 ;; Hardware stack levels required when called: 7
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_get_fun
  3562 ;;		_get_fun_full
  3563 ;;		_get_jump
  3564 ;;		_get_jump_full
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568  0327                     _ADC_GetConversion:	
  3569                           ;psect for function _ADC_GetConversion
  3570                           
  3571                           
  3572                           ;incstack = 0
  3573                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3574                           ;ADC_GetConversion@channel stored from wreg
  3575  0327  0020               	movlb	0	; select bank0
  3576  0328  00B6               	movwf	ADC_GetConversion@channel
  3577  0329                     l1909:
  3578                           
  3579                           ;mcc_generated_files/adc.c: 111: char ADC_GetConversion(adc_channel_t channel);mcc_gener
      +                          ated_files/adc.c: 112: {;mcc_generated_files/adc.c: 114:     ADCON0bits.CHS = channel;
  3580  0329  0836               	movf	ADC_GetConversion@channel,w
  3581  032A  00B5               	movwf	??_ADC_GetConversion
  3582  032B  0DB5               	rlf	??_ADC_GetConversion,f
  3583  032C  0DB5               	rlf	??_ADC_GetConversion,f
  3584  032D  0021               	movlb	1	; select bank1
  3585  032E  081D               	movf	29,w	;volatile
  3586  032F  0020               	movlb	0	; select bank0
  3587  0330  0635               	xorwf	??_ADC_GetConversion,w
  3588  0331  3983               	andlw	-125
  3589  0332  0635               	xorwf	??_ADC_GetConversion,w
  3590  0333  0021               	movlb	1	; select bank1
  3591  0334  009D               	movwf	29	;volatile
  3592  0335                     l1911:
  3593                           
  3594                           ;mcc_generated_files/adc.c: 117:     ADCON0bits.ADON = 1;
  3595  0335  141D               	bsf	29,0	;volatile
  3596  0336                     l1913:
  3597                           
  3598                           ;mcc_generated_files/adc.c: 120:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  3599  0336  3006               	movlw	6
  3600  0337                     u1897:
  3601  0337  0B89               	decfsz	9,f
  3602  0338  2B37               	goto	u1897
  3603  0339  3200               	nop2
  3604  033A                     l1915:
  3605                           
  3606                           ;mcc_generated_files/adc.c: 123:     ADCON0bits.GO_nDONE = 1;
  3607  033A  0021               	movlb	1	; select bank1
  3608  033B  149D               	bsf	29,1	;volatile
  3609  033C                     l63:	
  3610                           ;mcc_generated_files/adc.c: 127:     {;mcc_generated_files/adc.c: 128:     }
  3611                           
  3612                           
  3613                           ;mcc_generated_files/adc.c: 126:     while (ADCON0bits.GO_nDONE)
  3614  033C  189D               	btfsc	29,1	;volatile
  3615  033D  2B3F               	goto	u941
  3616  033E  2B40               	goto	u940
  3617  033F                     u941:
  3618  033F  2B3C               	goto	l63
  3619  0340                     u940:
  3620  0340                     l1917:
  3621                           
  3622                           ;mcc_generated_files/adc.c: 130:     return ( ADRESH);
  3623  0340  081C               	movf	28,w	;volatile
  3624  0341                     l66:
  3625  0341  0008               	return
  3626  0342                     __end_of_ADC_GetConversion:
  3627                           
  3628                           	psect	text20
  3629  00C6                     __ptext20:	
  3630 ;; *************** function _fun_work *****************
  3631 ;; Defined at:
  3632 ;;		line 387 in file "main.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;		None
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;		None
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      void 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2, status,0, pclath, cstack
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMMON   BANK0   BANK1
  3646 ;;      Params:         0       0       0
  3647 ;;      Locals:         0       0       0
  3648 ;;      Temps:          0       1       0
  3649 ;;      Totals:         0       1       0
  3650 ;;Total ram usage:        1 bytes
  3651 ;; Hardware stack levels used: 1
  3652 ;; Hardware stack levels required when called: 9
  3653 ;; This function calls:
  3654 ;;		_beep
  3655 ;;		_go_close
  3656 ;;		_go_close_alt
  3657 ;;		_go_open
  3658 ;;		_go_open_alt
  3659 ;; This function is called by:
  3660 ;;		_main
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664  00C6                     _fun_work:	
  3665                           ;psect for function _fun_work
  3666                           
  3667  00C6                     l2377:	
  3668                           ;incstack = 0
  3669                           ; Regs used in _fun_work: [wreg+status,2+status,0+pclath+cstack]
  3670                           
  3671                           
  3672                           ;main.c: 388:     {;main.c: 389:         if (FLAGS.bits._FUN_CONNECTED &&
  3673  00C6  1D77               	btfss	_FLAGS,2
  3674  00C7  28C9               	goto	u1591
  3675  00C8  28CA               	goto	u1590
  3676  00C9                     u1591:
  3677  00C9  28E8               	goto	l2393
  3678  00CA                     u1590:
  3679  00CA                     l2379:
  3680  00CA  1877               	btfsc	_FLAGS,0
  3681  00CB  28CD               	goto	u1601
  3682  00CC  28CE               	goto	u1600
  3683  00CD                     u1601:
  3684  00CD  28E8               	goto	l2393
  3685  00CE                     u1600:
  3686  00CE                     l2381:
  3687  00CE  1D78               	btfss	_FLAGS+1,2
  3688  00CF  28D1               	goto	u1611
  3689  00D0  28D2               	goto	u1610
  3690  00D1                     u1611:
  3691  00D1  28E8               	goto	l2393
  3692  00D2                     u1610:
  3693  00D2                     l2383:
  3694  00D2  1AF7               	btfsc	_FLAGS,5
  3695  00D3  28D5               	goto	u1621
  3696  00D4  28D6               	goto	u1620
  3697  00D5                     u1621:
  3698  00D5  28E8               	goto	l2393
  3699  00D6                     u1620:
  3700  00D6                     l2385:
  3701                           
  3702                           ;main.c: 392:                 !FLAGS.bits.RELE_POWER_WAIT) {;main.c: 394:             be
      +                          ep(40, 1);
  3703  00D6  0020               	movlb	0	; select bank0
  3704  00D7  01B5               	clrf	beep@count
  3705  00D8  0AB5               	incf	beep@count,f
  3706  00D9  3028               	movlw	40
  3707  00DA  3182  2297  3180   	fcall	_beep
  3708  00DD                     l2387:
  3709                           
  3710                           ;main.c: 396:             if (FLAGS.bits.NORMAL_WORK_MODE) go_open();
  3711  00DD  1CF7               	btfss	_FLAGS,1
  3712  00DE  28E0               	goto	u1631
  3713  00DF  28E1               	goto	u1630
  3714  00E0                     u1631:
  3715  00E0  28E5               	goto	l2391
  3716  00E1                     u1630:
  3717  00E1                     l2389:
  3718  00E1  3184  2423  3180   	fcall	_go_open
  3719  00E4  28E8               	goto	l2393
  3720  00E5                     l2391:
  3721  00E5  3184  2458  3180   	fcall	_go_open_alt
  3722  00E8                     l2393:
  3723                           
  3724                           ;main.c: 400:         if (!FLAGS.bits._FUN_CONNECTED &&
  3725  00E8  1977               	btfsc	_FLAGS,2
  3726  00E9  28EB               	goto	u1641
  3727  00EA  28EC               	goto	u1640
  3728  00EB                     u1641:
  3729  00EB  2908               	goto	l452
  3730  00EC                     u1640:
  3731  00EC                     l2395:
  3732  00EC  1978               	btfsc	_FLAGS+1,2
  3733  00ED  28EF               	goto	u1651
  3734  00EE  28F0               	goto	u1650
  3735  00EF                     u1651:
  3736  00EF  2908               	goto	l452
  3737  00F0                     u1650:
  3738  00F0                     l2397:
  3739  00F0  1AF7               	btfsc	_FLAGS,5
  3740  00F1  28F3               	goto	u1661
  3741  00F2  28F4               	goto	u1660
  3742  00F3                     u1661:
  3743  00F3  2908               	goto	l452
  3744  00F4                     u1660:
  3745  00F4                     l2399:
  3746                           
  3747                           ;main.c: 402:                 !FLAGS.bits.RELE_POWER_WAIT) {;main.c: 404:             be
      +                          ep(40, 2);
  3748  00F4  3002               	movlw	2
  3749  00F5  0020               	movlb	0	; select bank0
  3750  00F6  00BB               	movwf	??_fun_work
  3751  00F7  083B               	movf	??_fun_work,w
  3752  00F8  00B5               	movwf	beep@count
  3753  00F9  3028               	movlw	40
  3754  00FA  3182  2297  3180   	fcall	_beep
  3755  00FD                     l2401:
  3756                           
  3757                           ;main.c: 406:             if (FLAGS.bits.NORMAL_WORK_MODE) go_close();
  3758  00FD  1CF7               	btfss	_FLAGS,1
  3759  00FE  2900               	goto	u1671
  3760  00FF  2901               	goto	u1670
  3761  0100                     u1671:
  3762  0100  2905               	goto	l2405
  3763  0101                     u1670:
  3764  0101                     l2403:
  3765  0101  3182  22E7  3180   	fcall	_go_close
  3766  0104  2908               	goto	l452
  3767  0105                     l2405:
  3768  0105  3184  245D  3180   	fcall	_go_close_alt
  3769  0108                     l452:
  3770  0108  0008               	return
  3771  0109                     __end_of_fun_work:
  3772                           
  3773                           	psect	text21
  3774  0458                     __ptext21:	
  3775 ;; *************** function _go_open_alt *****************
  3776 ;; Defined at:
  3777 ;;		line 148 in file "main.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;		None
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;		None
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      void 
  3784 ;; Registers used:
  3785 ;;		None
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMMON   BANK0   BANK1
  3791 ;;      Params:         0       0       0
  3792 ;;      Locals:         0       0       0
  3793 ;;      Temps:          0       0       0
  3794 ;;      Totals:         0       0       0
  3795 ;;Total ram usage:        0 bytes
  3796 ;; Hardware stack levels used: 1
  3797 ;; Hardware stack levels required when called: 7
  3798 ;; This function calls:
  3799 ;;		Nothing
  3800 ;; This function is called by:
  3801 ;;		_fun_work
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805  0458                     _go_open_alt:	
  3806                           ;psect for function _go_open_alt
  3807                           
  3808  0458                     l2367:	
  3809                           ;incstack = 0
  3810                           ; Regs used in _go_open_alt: []
  3811                           
  3812                           
  3813                           ;main.c: 149:     FLAGS.bits.CLOSED = 0;
  3814  0458  1178               	bcf	_FLAGS+1,2
  3815  0459                     l316:	
  3816                           ;main.c: 150:     do { LATCbits.LATC4 = 0; } while(0);
  3817                           
  3818  0459  0022               	movlb	2	; select bank2
  3819  045A  120E               	bcf	14,4	;volatile
  3820  045B                     l318:	
  3821                           ;main.c: 151:     do { LATCbits.LATC5 = 0; } while(0);
  3822                           
  3823  045B  128E               	bcf	14,5	;volatile
  3824  045C                     l320:
  3825  045C  0008               	return
  3826  045D                     __end_of_go_open_alt:
  3827                           
  3828                           	psect	text22
  3829  0423                     __ptext22:	
  3830 ;; *************** function _go_open *****************
  3831 ;; Defined at:
  3832 ;;		line 134 in file "main.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;		None
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;		None
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      void 
  3839 ;; Registers used:
  3840 ;;		wreg
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMMON   BANK0   BANK1
  3846 ;;      Params:         0       0       0
  3847 ;;      Locals:         0       0       0
  3848 ;;      Temps:          0       0       0
  3849 ;;      Totals:         0       0       0
  3850 ;;Total ram usage:        0 bytes
  3851 ;; Hardware stack levels used: 1
  3852 ;; Hardware stack levels required when called: 7
  3853 ;; This function calls:
  3854 ;;		Nothing
  3855 ;; This function is called by:
  3856 ;;		_fun_work
  3857 ;;		_povorot
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861  0423                     _go_open:	
  3862                           ;psect for function _go_open
  3863                           
  3864  0423                     l302:	
  3865                           ;incstack = 0
  3866                           ; Regs used in _go_open: [wreg]
  3867                           ;main.c: 135:     do { LATCbits.LATC4 = 0; } while(0);
  3868                           
  3869  0423  0022               	movlb	2	; select bank2
  3870  0424  120E               	bcf	14,4	;volatile
  3871  0425                     l304:	
  3872                           ;main.c: 136:     do { LATCbits.LATC5 = 1; } while(0);
  3873                           
  3874  0425  168E               	bsf	14,5	;volatile
  3875  0426                     l2359:
  3876                           
  3877                           ;main.c: 137:     time_rele_power = 10;
  3878  0426  300A               	movlw	10
  3879  0427  0020               	movlb	0	; select bank0
  3880  0428  00AD               	movwf	_time_rele_power
  3881  0429  3000               	movlw	0
  3882  042A  00AE               	movwf	_time_rele_power+1
  3883  042B                     l2361:
  3884                           
  3885                           ;main.c: 138:     FLAGS.bits.RELE_POWER_WAIT = 1;
  3886  042B  16F7               	bsf	_FLAGS,5
  3887  042C                     l306:
  3888  042C  0008               	return
  3889  042D                     __end_of_go_open:
  3890                           
  3891                           	psect	text23
  3892  045D                     __ptext23:	
  3893 ;; *************** function _go_close_alt *****************
  3894 ;; Defined at:
  3895 ;;		line 142 in file "main.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;		None
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;		None
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  1    wreg      void 
  3902 ;; Registers used:
  3903 ;;		None
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMMON   BANK0   BANK1
  3909 ;;      Params:         0       0       0
  3910 ;;      Locals:         0       0       0
  3911 ;;      Temps:          0       0       0
  3912 ;;      Totals:         0       0       0
  3913 ;;Total ram usage:        0 bytes
  3914 ;; Hardware stack levels used: 1
  3915 ;; Hardware stack levels required when called: 7
  3916 ;; This function calls:
  3917 ;;		Nothing
  3918 ;; This function is called by:
  3919 ;;		_fun_work
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923  045D                     _go_close_alt:	
  3924                           ;psect for function _go_close_alt
  3925                           
  3926  045D                     l2365:	
  3927                           ;incstack = 0
  3928                           ; Regs used in _go_close_alt: []
  3929                           
  3930                           
  3931                           ;main.c: 143:     FLAGS.bits.CLOSED = 1;
  3932  045D  1578               	bsf	_FLAGS+1,2
  3933  045E                     l309:	
  3934                           ;main.c: 144:     do { LATCbits.LATC4 = 0; } while(0);
  3935                           
  3936  045E  0022               	movlb	2	; select bank2
  3937  045F  120E               	bcf	14,4	;volatile
  3938  0460                     l311:	
  3939                           ;main.c: 145:     do { LATCbits.LATC5 = 1; } while(0);
  3940                           
  3941  0460  168E               	bsf	14,5	;volatile
  3942  0461                     l313:
  3943  0461  0008               	return
  3944  0462                     __end_of_go_close_alt:
  3945                           
  3946                           	psect	text24
  3947  02E7                     __ptext24:	
  3948 ;; *************** function _go_close *****************
  3949 ;; Defined at:
  3950 ;;		line 122 in file "main.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;		None
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;		None
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  1    wreg      void 
  3957 ;; Registers used:
  3958 ;;		wreg
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMMON   BANK0   BANK1
  3964 ;;      Params:         0       0       0
  3965 ;;      Locals:         0       0       0
  3966 ;;      Temps:          0       2       0
  3967 ;;      Totals:         0       2       0
  3968 ;;Total ram usage:        2 bytes
  3969 ;; Hardware stack levels used: 1
  3970 ;; Hardware stack levels required when called: 7
  3971 ;; This function calls:
  3972 ;;		Nothing
  3973 ;; This function is called by:
  3974 ;;		_fun_work
  3975 ;;		_povorot
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979  02E7                     _go_close:	
  3980                           ;psect for function _go_close
  3981                           
  3982  02E7                     l1983:	
  3983                           ;incstack = 0
  3984                           ; Regs used in _go_close: [wreg]
  3985                           
  3986                           
  3987                           ;main.c: 123:     time_rotation = 0;
  3988  02E7  3000               	movlw	0
  3989  02E8  0020               	movlb	0	; select bank0
  3990  02E9  00A0               	movwf	_time_rotation
  3991  02EA  3000               	movlw	0
  3992  02EB  00A1               	movwf	_time_rotation+1
  3993  02EC  3000               	movlw	0
  3994  02ED  00A2               	movwf	_time_rotation+2
  3995  02EE                     l1985:
  3996  02EE  0022               	movlb	2	; select bank2
  3997  02EF  160E               	bsf	14,4	;volatile
  3998  02F0                     l1987:
  3999                           
  4000                           ;main.c: 125:     FLAGS.bits.CLOSING = 1;
  4001  02F0  14F8               	bsf	_FLAGS+1,1
  4002                           
  4003                           ;main.c: 126:     _delay((unsigned long)((2 * 1000)*(16000000/4000.0)));
  4004  02F1  3029               	movlw	41
  4005  02F2  0020               	movlb	0	; select bank0
  4006  02F3  00B6               	movwf	??_go_close+1
  4007  02F4  3096               	movlw	150
  4008  02F5  00B5               	movwf	??_go_close
  4009  02F6  307F               	movlw	127
  4010  02F7                     u1907:
  4011  02F7  0B89               	decfsz	9,f
  4012  02F8  2AF7               	goto	u1907
  4013  02F9  0BB5               	decfsz	??_go_close,f
  4014  02FA  2AF7               	goto	u1907
  4015  02FB  0BB6               	decfsz	??_go_close+1,f
  4016  02FC  2AF7               	goto	u1907
  4017  02FD                     l1989:
  4018  02FD  0022               	movlb	2	; select bank2
  4019  02FE  168E               	bsf	14,5	;volatile
  4020  02FF                     l298:
  4021                           
  4022                           ;main.c: 128:     time_rele_power = 10;
  4023  02FF  300A               	movlw	10
  4024  0300  0020               	movlb	0	; select bank0
  4025  0301  00AD               	movwf	_time_rele_power
  4026  0302  3000               	movlw	0
  4027  0303  00AE               	movwf	_time_rele_power+1
  4028  0304                     l1991:
  4029                           
  4030                           ;main.c: 129:     FLAGS.bits.RELE_POWER_WAIT = 1;
  4031  0304  16F7               	bsf	_FLAGS,5
  4032  0305                     l1993:
  4033                           
  4034                           ;main.c: 130:     FLAGS.bits.RELE_CONTROL_WAIT = 1;
  4035  0305  1777               	bsf	_FLAGS,6
  4036  0306                     l299:
  4037  0306  0008               	return
  4038  0307                     __end_of_go_close:
  4039                           
  4040                           	psect	text25
  4041  0297                     __ptext25:	
  4042 ;; *************** function _beep *****************
  4043 ;; Defined at:
  4044 ;;		line 102 in file "main.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;  time            1    wreg     unsigned char 
  4047 ;;  count           1    0[BANK0 ] unsigned char 
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;  time            1    3[BANK0 ] unsigned char 
  4050 ;;  i               1    5[BANK0 ] unsigned char 
  4051 ;;  j               1    4[BANK0 ] unsigned char 
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  1    wreg      void 
  4054 ;; Registers used:
  4055 ;;		wreg, status,2, status,0, pclath, cstack
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMMON   BANK0   BANK1
  4061 ;;      Params:         0       1       0
  4062 ;;      Locals:         0       3       0
  4063 ;;      Temps:          0       2       0
  4064 ;;      Totals:         0       6       0
  4065 ;;Total ram usage:        6 bytes
  4066 ;; Hardware stack levels used: 1
  4067 ;; Hardware stack levels required when called: 8
  4068 ;; This function calls:
  4069 ;;		_switch_zum
  4070 ;; This function is called by:
  4071 ;;		_fun_work
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075  0297                     _beep:	
  4076                           ;psect for function _beep
  4077                           
  4078                           
  4079                           ;incstack = 0
  4080                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
  4081                           ;beep@time stored from wreg
  4082  0297  0020               	movlb	0	; select bank0
  4083  0298  00B8               	movwf	beep@time
  4084  0299                     l2323:
  4085                           
  4086                           ;main.c: 103:     for (char j = 0; j < count; j++) {
  4087  0299  01B9               	clrf	beep@j
  4088  029A  2AC0               	goto	l2339
  4089  029B                     l2325:
  4090                           
  4091                           ;main.c: 104:         for (char i = 0; i < time; i++) {
  4092  029B  01BA               	clrf	beep@i
  4093  029C  2AA9               	goto	l2333
  4094  029D                     l2327:
  4095                           
  4096                           ;main.c: 105:             switch_zum();
  4097  029D  3183  23D8  3182   	fcall	_switch_zum
  4098  02A0                     l2329:
  4099                           
  4100                           ;main.c: 106:             _delay((unsigned long)((300)*(16000000/4000000.0)));
  4101  02A0  30F0               	movlw	240
  4102  02A1                     u1917:
  4103  02A1  3200               	nop2
  4104  02A2  0B89               	decfsz	9,f
  4105  02A3  2AA1               	goto	u1917
  4106  02A4                     l2331:
  4107                           
  4108                           ;main.c: 107:         }
  4109  02A4  3001               	movlw	1
  4110  02A5  0020               	movlb	0	; select bank0
  4111  02A6  00B6               	movwf	??_beep
  4112  02A7  0836               	movf	??_beep,w
  4113  02A8  07BA               	addwf	beep@i,f
  4114  02A9                     l2333:
  4115  02A9  0838               	movf	beep@time,w
  4116  02AA  023A               	subwf	beep@i,w
  4117  02AB  1C03               	skipc
  4118  02AC  2AAE               	goto	u1541
  4119  02AD  2AAF               	goto	u1540
  4120  02AE                     u1541:
  4121  02AE  2A9D               	goto	l2327
  4122  02AF                     u1540:
  4123  02AF                     l2335:
  4124                           
  4125                           ;main.c: 108:         _delay((unsigned long)((100)*(16000000/4000.0)));
  4126  02AF  3003               	movlw	3
  4127  02B0  0020               	movlb	0	; select bank0
  4128  02B1  00B7               	movwf	??_beep+1
  4129  02B2  3008               	movlw	8
  4130  02B3  00B6               	movwf	??_beep
  4131  02B4  3077               	movlw	119
  4132  02B5                     u1927:
  4133  02B5  0B89               	decfsz	9,f
  4134  02B6  2AB5               	goto	u1927
  4135  02B7  0BB6               	decfsz	??_beep,f
  4136  02B8  2AB5               	goto	u1927
  4137  02B9  0BB7               	decfsz	??_beep+1,f
  4138  02BA  2AB5               	goto	u1927
  4139  02BB                     l2337:
  4140                           
  4141                           ;main.c: 109:     }
  4142  02BB  3001               	movlw	1
  4143  02BC  0020               	movlb	0	; select bank0
  4144  02BD  00B6               	movwf	??_beep
  4145  02BE  0836               	movf	??_beep,w
  4146  02BF  07B9               	addwf	beep@j,f
  4147  02C0                     l2339:
  4148  02C0  0835               	movf	beep@count,w
  4149  02C1  0239               	subwf	beep@j,w
  4150  02C2  1C03               	skipc
  4151  02C3  2AC5               	goto	u1551
  4152  02C4  2AC6               	goto	u1550
  4153  02C5                     u1551:
  4154  02C5  2A9B               	goto	l2325
  4155  02C6                     u1550:
  4156  02C6                     l283:
  4157  02C6  0008               	return
  4158  02C7                     __end_of_beep:
  4159                           
  4160                           	psect	text26
  4161  03D8                     __ptext26:	
  4162 ;; *************** function _switch_zum *****************
  4163 ;; Defined at:
  4164 ;;		line 94 in file "main.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;		None
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;		None
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  1    wreg      void 
  4171 ;; Registers used:
  4172 ;;		status,0
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMMON   BANK0   BANK1
  4178 ;;      Params:         0       0       0
  4179 ;;      Locals:         0       0       0
  4180 ;;      Temps:          0       0       0
  4181 ;;      Totals:         0       0       0
  4182 ;;Total ram usage:        0 bytes
  4183 ;; Hardware stack levels used: 1
  4184 ;; Hardware stack levels required when called: 7
  4185 ;; This function calls:
  4186 ;;		Nothing
  4187 ;; This function is called by:
  4188 ;;		_beep
  4189 ;;		_boop
  4190 ;;		_start_setup
  4191 ;;		_TMR0_ISR
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195  03D8                     _switch_zum:	
  4196                           ;psect for function _switch_zum
  4197                           
  4198                           
  4199                           ;Skip over the trampoline to the duplicate function for level 1
  4200  03D8  1C7E               	btfss	int$flags,0
  4201  03D9  2BDB               	goto	_switch_zum$intlevel0
  4202  03DA  2C16               	ljmp	i1_switch_zum
  4203  03DB                     _switch_zum$intlevel0:
  4204  03DB                     l269:	
  4205                           ;incstack = 0
  4206                           ; Regs used in _switch_zum: [status,0]
  4207                           ;main.c: 95:     do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  4208                           
  4209  03DB                     l2317:
  4210  03DB  1003               	clrc
  4211  03DC  0022               	movlb	2	; select bank2
  4212  03DD  1E8C               	btfss	12,5	;volatile
  4213  03DE  1403               	setc
  4214  03DF  1803               	btfsc	3,0
  4215  03E0  2BE2               	goto	u1521
  4216  03E1  2BE5               	goto	u1520
  4217  03E2                     u1521:
  4218  03E2  0022               	movlb	2	; select bank2
  4219  03E3  168C               	bsf	12,5	;volatile
  4220  03E4  2BE7               	goto	u1534
  4221  03E5                     u1520:
  4222  03E5  0022               	movlb	2	; select bank2
  4223  03E6  128C               	bcf	12,5	;volatile
  4224  03E7                     u1534:
  4225  03E7                     l271:
  4226  03E7  0008               	return
  4227  03E8                     __end_of_switch_zum:
  4228                           
  4229                           	psect	intentry
  4230  0004                     __pintentry:	
  4231 ;; *************** function _INTERRUPT_InterruptManager *****************
  4232 ;; Defined at:
  4233 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;		None
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;		None
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  1    wreg      void 
  4240 ;; Registers used:
  4241 ;;		wreg, status,2, status,0, pclath, cstack
  4242 ;; Tracked objects:
  4243 ;;		On entry : 0/0
  4244 ;;		On exit  : 0/0
  4245 ;;		Unchanged: 0/0
  4246 ;; Data sizes:     COMMON   BANK0   BANK1
  4247 ;;      Params:         0       0       0
  4248 ;;      Locals:         0       0       0
  4249 ;;      Temps:          0       0       0
  4250 ;;      Totals:         0       0       0
  4251 ;;Total ram usage:        0 bytes
  4252 ;; Hardware stack levels used: 1
  4253 ;; Hardware stack levels required when called: 6
  4254 ;; This function calls:
  4255 ;;		_TMR0_ISR
  4256 ;;		_TMR2_ISR
  4257 ;; This function is called by:
  4258 ;;		Interrupt level 1
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262  0004                     _INTERRUPT_InterruptManager:
  4263                           
  4264                           ;incstack = 0
  4265  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4266                           
  4267                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  4268  0005  3180               	pagesel	$
  4269  0006                     i1l2461:
  4270                           
  4271                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4272  0006  1E8B               	btfss	11,5	;volatile
  4273  0007  2809               	goto	u171_21
  4274  0008  280A               	goto	u171_20
  4275  0009                     u171_21:
  4276  0009  2812               	goto	i1l110
  4277  000A                     u171_20:
  4278  000A                     i1l2463:
  4279  000A  1D0B               	btfss	11,2	;volatile
  4280  000B  280D               	goto	u172_21
  4281  000C  280E               	goto	u172_20
  4282  000D                     u172_21:
  4283  000D  2812               	goto	i1l110
  4284  000E                     u172_20:
  4285  000E                     i1l2465:
  4286                           
  4287                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  4288  000E  3183  23F8  3180   	fcall	_TMR0_ISR
  4289                           
  4290                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  4291  0011  2824               	goto	i1l116
  4292  0012                     i1l110:	
  4293                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  4294                           
  4295  0012  1F0B               	btfss	11,6	;volatile
  4296  0013  2815               	goto	u173_21
  4297  0014  2816               	goto	u173_20
  4298  0015                     u173_21:
  4299  0015  2824               	goto	i1l116
  4300  0016                     u173_20:
  4301  0016                     i1l2467:
  4302                           
  4303                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  4304  0016  0021               	movlb	1	; select bank1
  4305  0017  1C91               	btfss	17,1	;volatile
  4306  0018  281A               	goto	u174_21
  4307  0019  281B               	goto	u174_20
  4308  001A                     u174_21:
  4309  001A  2824               	goto	i1l115
  4310  001B                     u174_20:
  4311  001B                     i1l2469:
  4312  001B  0020               	movlb	0	; select bank0
  4313  001C  1C91               	btfss	17,1	;volatile
  4314  001D  281F               	goto	u175_21
  4315  001E  2820               	goto	u175_20
  4316  001F                     u175_21:
  4317  001F  2824               	goto	i1l115
  4318  0020                     u175_20:
  4319  0020                     i1l2471:
  4320                           
  4321                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
  4322  0020  3184  2408  3180   	fcall	_TMR2_ISR
  4323                           
  4324                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4325  0023  2824               	goto	i1l116
  4326  0024                     i1l115:	
  4327                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  4328                           
  4329  0024                     i1l116:
  4330  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4331  0025  0009               	retfie
  4332  0026                     __end_of_INTERRUPT_InterruptManager:
  4333                           
  4334                           	psect	text28
  4335  0408                     __ptext28:	
  4336 ;; *************** function _TMR2_ISR *****************
  4337 ;; Defined at:
  4338 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;		None
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;		None
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  1    wreg      void 
  4345 ;; Registers used:
  4346 ;;		wreg, status,2, status,0, pclath, cstack
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMMON   BANK0   BANK1
  4352 ;;      Params:         0       0       0
  4353 ;;      Locals:         0       0       0
  4354 ;;      Temps:          0       0       0
  4355 ;;      Totals:         0       0       0
  4356 ;;Total ram usage:        0 bytes
  4357 ;; Hardware stack levels used: 1
  4358 ;; Hardware stack levels required when called: 5
  4359 ;; This function calls:
  4360 ;;		Absolute function
  4361 ;;		_TMR2_DefaultInterruptHandler
  4362 ;;		_ms_tick
  4363 ;; This function is called by:
  4364 ;;		_INTERRUPT_InterruptManager
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368  0408                     _TMR2_ISR:	
  4369                           ;psect for function _TMR2_ISR
  4370                           
  4371  0408                     i1l2075:	
  4372                           ;incstack = 0
  4373                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  4374                           
  4375                           
  4376                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
  4377  0408  0020               	movlb	0	; select bank0
  4378  0409  1091               	bcf	17,1	;volatile
  4379  040A                     i1l2077:
  4380                           
  4381                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
  4382  040A  083E               	movf	_TMR2_InterruptHandler,w
  4383  040B  043F               	iorwf	_TMR2_InterruptHandler+1,w
  4384  040C  1903               	btfsc	3,2
  4385  040D  2C0F               	goto	u117_21
  4386  040E  2C10               	goto	u117_20
  4387  040F                     u117_21:
  4388  040F  2C15               	goto	i1l156
  4389  0410                     u117_20:
  4390  0410                     i1l2079:
  4391                           
  4392                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
  4393  0410  083F               	movf	_TMR2_InterruptHandler+1,w
  4394  0411  008A               	movwf	10
  4395  0412  083E               	movf	_TMR2_InterruptHandler,w
  4396  0413  000A               	callw
  4397  0414  3184               	pagesel	$
  4398  0415                     i1l156:
  4399  0415  0008               	return
  4400  0416                     __end_of_TMR2_ISR:
  4401                           
  4402                           	psect	text29
  4403  047C                     __ptext29:	
  4404 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4405 ;; Defined at:
  4406 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;		None
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;		None
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  1    wreg      void 
  4413 ;; Registers used:
  4414 ;;		None
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMMON   BANK0   BANK1
  4420 ;;      Params:         0       0       0
  4421 ;;      Locals:         0       0       0
  4422 ;;      Temps:          0       0       0
  4423 ;;      Totals:         0       0       0
  4424 ;;Total ram usage:        0 bytes
  4425 ;; Hardware stack levels used: 1
  4426 ;; This function calls:
  4427 ;;		Nothing
  4428 ;; This function is called by:
  4429 ;;		_TMR2_Initialize
  4430 ;;		_TMR2_ISR
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434  047C                     _TMR2_DefaultInterruptHandler:	
  4435                           ;psect for function _TMR2_DefaultInterruptHandler
  4436                           
  4437  047C                     i1l162:	
  4438                           ;incstack = 0
  4439                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  4440                           
  4441  047C  0008               	return
  4442  047D                     __end_of_TMR2_DefaultInterruptHandler:
  4443                           
  4444                           	psect	text30
  4445  03B0                     __ptext30:	
  4446 ;; *************** function _ms_tick *****************
  4447 ;; Defined at:
  4448 ;;		line 445 in file "main.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;		None
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;		None
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      void 
  4455 ;; Registers used:
  4456 ;;		wreg, status,2, status,0, pclath, cstack
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMMON   BANK0   BANK1
  4462 ;;      Params:         0       0       0
  4463 ;;      Locals:         0       0       0
  4464 ;;      Temps:          0       0       0
  4465 ;;      Totals:         0       0       0
  4466 ;;Total ram usage:        0 bytes
  4467 ;; Hardware stack levels used: 1
  4468 ;; Hardware stack levels required when called: 4
  4469 ;; This function calls:
  4470 ;;		_sec_tick_work
  4471 ;; This function is called by:
  4472 ;;		_start_setup
  4473 ;;		_TMR2_ISR
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477  03B0                     _ms_tick:	
  4478                           ;psect for function _ms_tick
  4479                           
  4480  03B0                     i1l2059:	
  4481                           ;incstack = 0
  4482                           ; Regs used in _ms_tick: [wreg+status,2+status,0+pclath+cstack]
  4483                           
  4484                           
  4485                           ;main.c: 446:     static unsigned tick_count =0;;main.c: 447:     tick_count++;
  4486  03B0  3001               	movlw	1
  4487  03B1  0020               	movlb	0	; select bank0
  4488  03B2  07A3               	addwf	ms_tick@tick_count,f
  4489  03B3  3000               	movlw	0
  4490  03B4  3DA4               	addwfc	ms_tick@tick_count+1,f
  4491  03B5                     i1l2061:
  4492                           
  4493                           ;main.c: 449:     if (tick_count == 1000){
  4494  03B5  30E8               	movlw	232
  4495  03B6  0623               	xorwf	ms_tick@tick_count,w
  4496  03B7  3003               	movlw	3
  4497  03B8  1903               	skipnz
  4498  03B9  0624               	xorwf	ms_tick@tick_count+1,w
  4499  03BA  1D03               	btfss	3,2
  4500  03BB  2BBD               	goto	u115_21
  4501  03BC  2BBE               	goto	u115_20
  4502  03BD                     u115_21:
  4503  03BD  2BC4               	goto	i1l465
  4504  03BE                     u115_20:
  4505  03BE                     i1l2063:
  4506                           
  4507                           ;main.c: 450:     sec_tick_work();
  4508  03BE  3181  2149  3183   	fcall	_sec_tick_work
  4509  03C1                     i1l2065:
  4510                           
  4511                           ;main.c: 451:     tick_count=0;
  4512  03C1  0020               	movlb	0	; select bank0
  4513  03C2  01A3               	clrf	ms_tick@tick_count
  4514  03C3  01A4               	clrf	ms_tick@tick_count+1
  4515  03C4                     i1l465:
  4516  03C4  0008               	return
  4517  03C5                     __end_of_ms_tick:
  4518                           
  4519                           	psect	text31
  4520  0149                     __ptext31:	
  4521 ;; *************** function _sec_tick_work *****************
  4522 ;; Defined at:
  4523 ;;		line 345 in file "main.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;		None
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;		None
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      void 
  4530 ;; Registers used:
  4531 ;;		wreg, status,2, status,0, pclath, cstack
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMMON   BANK0   BANK1
  4537 ;;      Params:         0       0       0
  4538 ;;      Locals:         0       0       0
  4539 ;;      Temps:          1       0       0
  4540 ;;      Totals:         1       0       0
  4541 ;;Total ram usage:        1 bytes
  4542 ;; Hardware stack levels used: 1
  4543 ;; Hardware stack levels required when called: 3
  4544 ;; This function calls:
  4545 ;;		_get_measure
  4546 ;;		_rele_tick
  4547 ;;		_toggle_tone
  4548 ;; This function is called by:
  4549 ;;		_ms_tick
  4550 ;; This function uses a non-reentrant model
  4551 ;;
  4552                           
  4553  0149                     _sec_tick_work:	
  4554                           ;psect for function _sec_tick_work
  4555                           
  4556  0149                     i1l1923:	
  4557                           ;incstack = 0
  4558                           ; Regs used in _sec_tick_work: [wreg+status,2+status,0+pclath+cstack]
  4559                           
  4560                           
  4561                           ;main.c: 349:     time_rotation++;
  4562  0149  3001               	movlw	1
  4563  014A  0020               	movlb	0	; select bank0
  4564  014B  07A0               	addwf	_time_rotation,f
  4565  014C  3000               	movlw	0
  4566  014D  1803               	skipnc
  4567  014E  3001               	movlw	1
  4568  014F  07A1               	addwf	_time_rotation+1,f
  4569  0150  3000               	movlw	0
  4570  0151  1803               	skipnc
  4571  0152  3001               	movlw	1
  4572  0153  07A2               	addwf	_time_rotation+2,f
  4573  0154                     i1l1925:
  4574                           
  4575                           ;main.c: 350:     rele_tick();
  4576  0154  3182  2265  3181   	fcall	_rele_tick
  4577  0157  0064               	clrwdt	;# 
  4578  0158                     i1l1927:
  4579                           
  4580                           ;main.c: 352:     if (FLAGS.bits.ALARM) {
  4581  0158  1C77               	btfss	_FLAGS,0
  4582  0159  295B               	goto	u97_21
  4583  015A  295C               	goto	u97_20
  4584  015B                     u97_21:
  4585  015B  296C               	goto	i1l1933
  4586  015C                     u97_20:
  4587  015C                     i1l1929:
  4588  015C  1003               	clrc
  4589  015D  0022               	movlb	2	; select bank2
  4590  015E  1E0C               	btfss	12,4	;volatile
  4591  015F  1403               	setc
  4592  0160  1803               	btfsc	3,0
  4593  0161  2963               	goto	u98_21
  4594  0162  2966               	goto	u98_20
  4595  0163                     u98_21:
  4596  0163  0022               	movlb	2	; select bank2
  4597  0164  160C               	bsf	12,4	;volatile
  4598  0165  2968               	goto	u99_24
  4599  0166                     u98_20:
  4600  0166  0022               	movlb	2	; select bank2
  4601  0167  120C               	bcf	12,4	;volatile
  4602  0168                     u99_24:
  4603  0168                     i1l1931:
  4604                           
  4605                           ;main.c: 354:         toggle_tone();
  4606  0168  3184  242D  3181   	fcall	_toggle_tone
  4607                           
  4608                           ;main.c: 355:     } else {
  4609  016B  2986               	goto	i1l438
  4610  016C                     i1l1933:
  4611                           
  4612                           ;main.c: 356:         get_measure();
  4613  016C  3182  2231  3181   	fcall	_get_measure
  4614  016F                     i1l1935:
  4615                           
  4616                           ;main.c: 357:         static char iled;;main.c: 358:         iled++;
  4617  016F  3001               	movlw	1
  4618  0170  00F6               	movwf	??_sec_tick_work
  4619  0171  0876               	movf	??_sec_tick_work,w
  4620  0172  07F9               	addwf	sec_tick_work@iled,f
  4621  0173                     i1l1937:
  4622                           
  4623                           ;main.c: 359:         if (iled > 2) {
  4624  0173  3003               	movlw	3
  4625  0174  0279               	subwf	sec_tick_work@iled,w
  4626  0175  1C03               	skipc
  4627  0176  2978               	goto	u100_21
  4628  0177  2979               	goto	u100_20
  4629  0178                     u100_21:
  4630  0178  2986               	goto	i1l438
  4631  0179                     u100_20:
  4632  0179                     i1l1939:
  4633  0179  1003               	clrc
  4634  017A  0022               	movlb	2	; select bank2
  4635  017B  1E0C               	btfss	12,4	;volatile
  4636  017C  1403               	setc
  4637  017D  1803               	btfsc	3,0
  4638  017E  2980               	goto	u101_21
  4639  017F  2983               	goto	u101_20
  4640  0180                     u101_21:
  4641  0180  0022               	movlb	2	; select bank2
  4642  0181  160C               	bsf	12,4	;volatile
  4643  0182  2985               	goto	u102_24
  4644  0183                     u101_20:
  4645  0183  0022               	movlb	2	; select bank2
  4646  0184  120C               	bcf	12,4	;volatile
  4647  0185                     u102_24:
  4648  0185                     i1l1941:
  4649                           
  4650                           ;main.c: 361:             iled = 0;
  4651  0185  01F9               	clrf	sec_tick_work@iled
  4652  0186                     i1l438:
  4653  0186  0008               	return
  4654  0187                     __end_of_sec_tick_work:
  4655                           
  4656                           	psect	text32
  4657  042D                     __ptext32:	
  4658 ;; *************** function _toggle_tone *****************
  4659 ;; Defined at:
  4660 ;;		line 98 in file "main.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;		None
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;		None
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  1    wreg      void 
  4667 ;; Registers used:
  4668 ;;		status,0
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMMON   BANK0   BANK1
  4674 ;;      Params:         0       0       0
  4675 ;;      Locals:         0       0       0
  4676 ;;      Temps:          0       0       0
  4677 ;;      Totals:         0       0       0
  4678 ;;Total ram usage:        0 bytes
  4679 ;; Hardware stack levels used: 1
  4680 ;; This function calls:
  4681 ;;		Nothing
  4682 ;; This function is called by:
  4683 ;;		_sec_tick_work
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687  042D                     _toggle_tone:	
  4688                           ;psect for function _toggle_tone
  4689                           
  4690  042D                     i1l1815:	
  4691                           ;incstack = 0
  4692                           ; Regs used in _toggle_tone: [status,0]
  4693                           
  4694                           
  4695                           ;main.c: 99:     INTCONbits.TMR0IE = ~INTCONbits.TMR0IE;
  4696  042D  1003               	clrc
  4697  042E  1E8B               	btfss	11,5	;volatile
  4698  042F  1403               	setc
  4699  0430  1803               	btfsc	3,0
  4700  0431  2C33               	goto	u86_21
  4701  0432  2C35               	goto	u86_20
  4702  0433                     u86_21:
  4703  0433  168B               	bsf	11,5	;volatile
  4704  0434  2C36               	goto	u87_24
  4705  0435                     u86_20:
  4706  0435  128B               	bcf	11,5	;volatile
  4707  0436                     u87_24:
  4708  0436                     i1l274:
  4709  0436  0008               	return
  4710  0437                     __end_of_toggle_tone:
  4711                           
  4712                           	psect	text33
  4713  0265                     __ptext33:	
  4714 ;; *************** function _rele_tick *****************
  4715 ;; Defined at:
  4716 ;;		line 321 in file "main.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;		None
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;		None
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      void 
  4723 ;; Registers used:
  4724 ;;		wreg, status,2, status,0, pclath, cstack
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMMON   BANK0   BANK1
  4730 ;;      Params:         0       0       0
  4731 ;;      Locals:         0       0       0
  4732 ;;      Temps:          2       0       0
  4733 ;;      Totals:         2       0       0
  4734 ;;Total ram usage:        2 bytes
  4735 ;; Hardware stack levels used: 1
  4736 ;; Hardware stack levels required when called: 1
  4737 ;; This function calls:
  4738 ;;		i1_switch_zum
  4739 ;; This function is called by:
  4740 ;;		_sec_tick_work
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744  0265                     _rele_tick:	
  4745                           ;psect for function _rele_tick
  4746                           
  4747  0265                     i1l1837:	
  4748                           ;incstack = 0
  4749                           ; Regs used in _rele_tick: [wreg+status,2+status,0+pclath+cstack]
  4750                           
  4751                           
  4752                           ;main.c: 322:     switch_zum();
  4753  0265  3184  2416  3182   	fcall	i1_switch_zum
  4754  0268                     i1l1839:
  4755                           
  4756                           ;main.c: 323:     if (FLAGS.bits.RELE_POWER_WAIT) {
  4757  0268  1EF7               	btfss	_FLAGS,5
  4758  0269  2A6B               	goto	u91_21
  4759  026A  2A6C               	goto	u91_20
  4760  026B                     u91_21:
  4761  026B  2A96               	goto	i1l426
  4762  026C                     u91_20:
  4763  026C                     i1l1841:
  4764                           
  4765                           ;main.c: 324:         if (time_rele_power > 0) {
  4766  026C  0020               	movlb	0	; select bank0
  4767  026D  082D               	movf	_time_rele_power,w
  4768  026E  042E               	iorwf	_time_rele_power+1,w
  4769  026F  1903               	btfsc	3,2
  4770  0270  2A72               	goto	u92_21
  4771  0271  2A73               	goto	u92_20
  4772  0272                     u92_21:
  4773  0272  2A78               	goto	i1l416
  4774  0273                     u92_20:
  4775  0273                     i1l1843:
  4776                           
  4777                           ;main.c: 325:             time_rele_power--;
  4778  0273  3001               	movlw	1
  4779  0274  02AD               	subwf	_time_rele_power,f
  4780  0275  3000               	movlw	0
  4781  0276  3BAE               	subwfb	_time_rele_power+1,f
  4782                           
  4783                           ;main.c: 326:         } else {
  4784  0277  2A96               	goto	i1l426
  4785  0278                     i1l416:
  4786                           
  4787                           ;main.c: 327:             if (FLAGS.bits.RELE_CONTROL_WAIT) {
  4788  0278  1F77               	btfss	_FLAGS,6
  4789  0279  2A7B               	goto	u93_21
  4790  027A  2A7C               	goto	u93_20
  4791  027B                     u93_21:
  4792  027B  2A91               	goto	i1l424
  4793  027C                     u93_20:
  4794  027C                     i1l419:	
  4795                           ;main.c: 328:                 do { LATCbits.LATC5 = 0; } while(0);
  4796                           
  4797  027C  0022               	movlb	2	; select bank2
  4798  027D  128E               	bcf	14,5	;volatile
  4799  027E                     i1l1845:
  4800                           
  4801                           ;main.c: 329:                 _delay((unsigned long)((2 * 1000)*(16000000/4000.0)));
  4802  027E  3029               	movlw	41
  4803  027F  00F1               	movwf	??_rele_tick+1
  4804  0280  3096               	movlw	150
  4805  0281  00F0               	movwf	??_rele_tick
  4806  0282  307F               	movlw	127
  4807  0283                     u193_27:
  4808  0283  0B89               	decfsz	9,f
  4809  0284  2A83               	goto	u193_27
  4810  0285  0BF0               	decfsz	??_rele_tick,f
  4811  0286  2A83               	goto	u193_27
  4812  0287  0BF1               	decfsz	??_rele_tick+1,f
  4813  0288  2A83               	goto	u193_27
  4814  0289  0000               	nop
  4815  028A                     i1l1847:
  4816  028A  0022               	movlb	2	; select bank2
  4817  028B  120E               	bcf	14,4	;volatile
  4818  028C                     i1l1849:
  4819                           
  4820                           ;main.c: 331:                 FLAGS.bits.CLOSING =0;
  4821  028C  10F8               	bcf	_FLAGS+1,1
  4822  028D                     i1l1851:
  4823                           
  4824                           ;main.c: 332:                 FLAGS.bits.CLOSED = 1;
  4825  028D  1578               	bsf	_FLAGS+1,2
  4826  028E                     i1l1853:
  4827                           
  4828                           ;main.c: 333:                 FLAGS.bits.RELE_CONTROL_WAIT = 0;
  4829  028E  1377               	bcf	_FLAGS,6
  4830  028F                     i1l1855:
  4831                           
  4832                           ;main.c: 334:                 FLAGS.bits.RELE_POWER_WAIT = 0;
  4833  028F  12F7               	bcf	_FLAGS,5
  4834                           
  4835                           ;main.c: 335:             } else {
  4836  0290  2A96               	goto	i1l426
  4837  0291                     i1l424:	
  4838                           ;main.c: 336:                 do { LATCbits.LATC5 = 0; } while(0);
  4839                           
  4840  0291  0022               	movlb	2	; select bank2
  4841  0292  128E               	bcf	14,5	;volatile
  4842  0293                     i1l425:
  4843                           
  4844                           ;main.c: 337:                 FLAGS.bits.OPENING = 0;
  4845  0293  13F7               	bcf	_FLAGS,7
  4846                           
  4847                           ;main.c: 338:                 FLAGS.bits.CLOSED = 0;
  4848  0294  1178               	bcf	_FLAGS+1,2
  4849                           
  4850                           ;main.c: 339:                 FLAGS.bits.RELE_POWER_WAIT = 0;
  4851  0295  12F7               	bcf	_FLAGS,5
  4852  0296                     i1l426:
  4853  0296  0008               	return
  4854  0297                     __end_of_rele_tick:
  4855                           
  4856                           	psect	text34
  4857  0231                     __ptext34:	
  4858 ;; *************** function _get_measure *****************
  4859 ;; Defined at:
  4860 ;;		line 166 in file "main.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;		None
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;  res             2    4[COMMON] unsigned int 
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  1    wreg      void 
  4867 ;; Registers used:
  4868 ;;		wreg, status,2, status,0, pclath, cstack
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMMON   BANK0   BANK1
  4874 ;;      Params:         0       0       0
  4875 ;;      Locals:         2       0       0
  4876 ;;      Temps:          2       0       0
  4877 ;;      Totals:         4       0       0
  4878 ;;Total ram usage:        4 bytes
  4879 ;; Hardware stack levels used: 1
  4880 ;; Hardware stack levels required when called: 2
  4881 ;; This function calls:
  4882 ;;		_start_alarm
  4883 ;;		i1_ADC_GetConversion
  4884 ;; This function is called by:
  4885 ;;		_sec_tick_work
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           
  4889  0231                     _get_measure:	
  4890                           ;psect for function _get_measure
  4891                           
  4892  0231                     i1l332:	
  4893                           ;incstack = 0
  4894                           ; Regs used in _get_measure: [wreg+status,2+status,0+pclath+cstack]
  4895                           ;main.c: 167:     static unsigned char measures;;main.c: 168:     do { LATCbits.LATC1 = 
      +                          1; } while(0);
  4896                           
  4897  0231  0022               	movlb	2	; select bank2
  4898  0232  148E               	bsf	14,1	;volatile
  4899  0233                     i1l334:	
  4900                           ;main.c: 169:     do { ANSELCbits.ANSC3 = 1; } while(0);
  4901                           
  4902  0233  0023               	movlb	3	; select bank3
  4903  0234  158E               	bsf	14,3	;volatile
  4904  0235                     i1l1817:
  4905                           
  4906                           ;main.c: 170:     unsigned res = ADC_GetConversion(PIN_WSP_STATE);
  4907  0235  3007               	movlw	7
  4908  0236  3183  2342  3182   	fcall	i1_ADC_GetConversion
  4909  0239  00F2               	movwf	??_get_measure
  4910  023A  01F3               	clrf	??_get_measure+1
  4911  023B  0872               	movf	??_get_measure,w
  4912  023C  00F4               	movwf	get_measure@res
  4913  023D  0873               	movf	??_get_measure+1,w
  4914  023E  00F5               	movwf	get_measure@res+1
  4915  023F                     i1l1819:
  4916  023F  0023               	movlb	3	; select bank3
  4917  0240  118E               	bcf	14,3	;volatile
  4918  0241                     i1l1821:
  4919  0241  0022               	movlb	2	; select bank2
  4920  0242  108E               	bcf	14,1	;volatile
  4921  0243                     i1l1823:
  4922                           
  4923                           ;main.c: 173:     if (res < BAD_WSP_VOLTAGE) measures++;
  4924  0243  3000               	movlw	0
  4925  0244  0275               	subwf	get_measure@res+1,w
  4926  0245  3080               	movlw	128
  4927  0246  1903               	skipnz
  4928  0247  0274               	subwf	get_measure@res,w
  4929  0248  1803               	skipnc
  4930  0249  2A4B               	goto	u88_21
  4931  024A  2A4C               	goto	u88_20
  4932  024B                     u88_21:
  4933  024B  2A51               	goto	i1l1827
  4934  024C                     u88_20:
  4935  024C                     i1l1825:
  4936  024C  3001               	movlw	1
  4937  024D  00F2               	movwf	??_get_measure
  4938  024E  0872               	movf	??_get_measure,w
  4939  024F  07FA               	addwf	get_measure@measures,f
  4940  0250  2A5B               	goto	i1l1831
  4941  0251                     i1l1827:
  4942  0251  3000               	movlw	0
  4943  0252  0275               	subwf	get_measure@res+1,w
  4944  0253  308F               	movlw	143
  4945  0254  1903               	skipnz
  4946  0255  0274               	subwf	get_measure@res,w
  4947  0256  1C03               	skipc
  4948  0257  2A59               	goto	u89_21
  4949  0258  2A5A               	goto	u89_20
  4950  0259                     u89_21:
  4951  0259  2A5B               	goto	i1l1831
  4952  025A                     u89_20:
  4953  025A                     i1l1829:
  4954  025A  01FA               	clrf	get_measure@measures
  4955  025B                     i1l1831:
  4956                           
  4957                           ;main.c: 175:     if (measures > 2) start_alarm();
  4958  025B  3003               	movlw	3
  4959  025C  027A               	subwf	get_measure@measures,w
  4960  025D  1C03               	skipc
  4961  025E  2A60               	goto	u90_21
  4962  025F  2A61               	goto	u90_20
  4963  0260                     u90_21:
  4964  0260  2A64               	goto	i1l344
  4965  0261                     u90_20:
  4966  0261                     i1l1833:
  4967  0261  3183  23E8  3182   	fcall	_start_alarm
  4968  0264                     i1l344:
  4969  0264  0008               	return
  4970  0265                     __end_of_get_measure:
  4971                           
  4972                           	psect	text35
  4973  0342                     __ptext35:	
  4974 ;; *************** function i1_ADC_GetConversion *****************
  4975 ;; Defined at:
  4976 ;;		line 111 in file "mcc_generated_files/adc.c"
  4977 ;; Parameters:    Size  Location     Type
  4978 ;;  channel         1    wreg     enum E2178
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;  channel         1    1[COMMON] enum E2178
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  1    wreg      unsigned char 
  4983 ;; Registers used:
  4984 ;;		wreg, status,2, status,0
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMMON   BANK0   BANK1
  4990 ;;      Params:         0       0       0
  4991 ;;      Locals:         1       0       0
  4992 ;;      Temps:          1       0       0
  4993 ;;      Totals:         2       0       0
  4994 ;;Total ram usage:        2 bytes
  4995 ;; Hardware stack levels used: 1
  4996 ;; This function calls:
  4997 ;;		Nothing
  4998 ;; This function is called by:
  4999 ;;		_get_measure
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003  0342                     i1_ADC_GetConversion:	
  5004                           ;psect for function i1_ADC_GetConversion
  5005                           
  5006                           
  5007                           ;incstack = 0
  5008                           ; Regs used in i1_ADC_GetConversion: [wreg+status,2+status,0]
  5009                           ;i1ADC_GetConversion@channel stored from wreg
  5010  0342  00F1               	movwf	i1ADC_GetConversion@channel
  5011  0343                     i1l1797:
  5012                           
  5013                           ;mcc_generated_files/adc.c: 111: char ADC_GetConversion(adc_channel_t channel);mcc_gener
      +                          ated_files/adc.c: 112: {;mcc_generated_files/adc.c: 114:     ADCON0bits.CHS = channel;
  5014  0343  0871               	movf	i1ADC_GetConversion@channel,w
  5015  0344  00F0               	movwf	??i1_ADC_GetConversion
  5016  0345  0DF0               	rlf	??i1_ADC_GetConversion,f
  5017  0346  0DF0               	rlf	??i1_ADC_GetConversion,f
  5018  0347  0021               	movlb	1	; select bank1
  5019  0348  081D               	movf	29,w	;volatile
  5020  0349  0670               	xorwf	??i1_ADC_GetConversion,w
  5021  034A  3983               	andlw	-125
  5022  034B  0670               	xorwf	??i1_ADC_GetConversion,w
  5023  034C  009D               	movwf	29	;volatile
  5024  034D                     i1l1799:
  5025                           
  5026                           ;mcc_generated_files/adc.c: 117:     ADCON0bits.ADON = 1;
  5027  034D  141D               	bsf	29,0	;volatile
  5028  034E                     i1l1801:
  5029                           
  5030                           ;mcc_generated_files/adc.c: 120:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  5031  034E  3006               	movlw	6
  5032  034F                     u194_27:
  5033  034F  0B89               	decfsz	9,f
  5034  0350  2B4F               	goto	u194_27
  5035  0351  3200               	nop2
  5036  0352                     i1l1803:
  5037                           
  5038                           ;mcc_generated_files/adc.c: 123:     ADCON0bits.GO_nDONE = 1;
  5039  0352  0021               	movlb	1	; select bank1
  5040  0353  149D               	bsf	29,1	;volatile
  5041  0354                     i1l63:	
  5042                           ;mcc_generated_files/adc.c: 127:     {;mcc_generated_files/adc.c: 128:     }
  5043                           
  5044                           
  5045                           ;mcc_generated_files/adc.c: 126:     while (ADCON0bits.GO_nDONE)
  5046  0354  189D               	btfsc	29,1	;volatile
  5047  0355  2B57               	goto	u83_21
  5048  0356  2B58               	goto	u83_20
  5049  0357                     u83_21:
  5050  0357  2B54               	goto	i1l63
  5051  0358                     u83_20:
  5052  0358                     i1l1805:
  5053                           
  5054                           ;mcc_generated_files/adc.c: 130:     return ( ADRESH);
  5055  0358  081C               	movf	28,w	;volatile
  5056  0359                     i1l66:
  5057  0359  0008               	return
  5058  035A                     __end_ofi1_ADC_GetConversion:
  5059                           
  5060                           	psect	text36
  5061  03E8                     __ptext36:	
  5062 ;; *************** function _start_alarm *****************
  5063 ;; Defined at:
  5064 ;;		line 155 in file "main.c"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;		None
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;		None
  5069 ;; Return value:  Size  Location     Type
  5070 ;;                  1    wreg      void 
  5071 ;; Registers used:
  5072 ;;		wreg, status,2, status,0, pclath, cstack
  5073 ;; Tracked objects:
  5074 ;;		On entry : 0/0
  5075 ;;		On exit  : 0/0
  5076 ;;		Unchanged: 0/0
  5077 ;; Data sizes:     COMMON   BANK0   BANK1
  5078 ;;      Params:         0       0       0
  5079 ;;      Locals:         0       0       0
  5080 ;;      Temps:          0       0       0
  5081 ;;      Totals:         0       0       0
  5082 ;;Total ram usage:        0 bytes
  5083 ;; Hardware stack levels used: 1
  5084 ;; Hardware stack levels required when called: 1
  5085 ;; This function calls:
  5086 ;;		i1_go_close
  5087 ;;		i1_go_close_alt
  5088 ;; This function is called by:
  5089 ;;		_get_measure
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093  03E8                     _start_alarm:	
  5094                           ;psect for function _start_alarm
  5095                           
  5096  03E8                     i1l1791:	
  5097                           ;incstack = 0
  5098                           ; Regs used in _start_alarm: [wreg+status,2+status,0+pclath+cstack]
  5099                           
  5100                           
  5101                           ;main.c: 156:     FLAGS.bits.ALARM = 1;
  5102  03E8  1477               	bsf	_FLAGS,0
  5103  03E9                     i1l323:	
  5104                           ;main.c: 157:     do { LATCbits.LATC0 = 1; } while(0);
  5105                           
  5106  03E9  0022               	movlb	2	; select bank2
  5107  03EA  140E               	bsf	14,0	;volatile
  5108  03EB                     i1l324:
  5109                           
  5110                           ;main.c: 158:     INTCONbits.TMR0IE = 1;
  5111  03EB  168B               	bsf	11,5	;volatile
  5112                           
  5113                           ;main.c: 159:     if (FLAGS.bits.NORMAL_WORK_MODE) {
  5114  03EC  1CF7               	btfss	_FLAGS,1
  5115  03ED  2BEF               	goto	u82_21
  5116  03EE  2BF0               	goto	u82_20
  5117  03EF                     u82_21:
  5118  03EF  2BF4               	goto	i1l1795
  5119  03F0                     u82_20:
  5120  03F0                     i1l1793:
  5121                           
  5122                           ;main.c: 160:         go_close();
  5123  03F0  3183  2307  3183   	fcall	i1_go_close
  5124                           
  5125                           ;main.c: 161:     } else {
  5126  03F3  2BF7               	goto	i1l327
  5127  03F4                     i1l1795:
  5128                           
  5129                           ;main.c: 162:         go_close_alt();
  5130  03F4  3184  2462  3183   	fcall	i1_go_close_alt
  5131  03F7                     i1l327:
  5132  03F7  0008               	return
  5133  03F8                     __end_of_start_alarm:
  5134                           
  5135                           	psect	text37
  5136  0462                     __ptext37:	
  5137 ;; *************** function i1_go_close_alt *****************
  5138 ;; Defined at:
  5139 ;;		line 142 in file "main.c"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;		None
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;		None
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  1    wreg      void 
  5146 ;; Registers used:
  5147 ;;		None
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMMON   BANK0   BANK1
  5153 ;;      Params:         0       0       0
  5154 ;;      Locals:         0       0       0
  5155 ;;      Temps:          0       0       0
  5156 ;;      Totals:         0       0       0
  5157 ;;Total ram usage:        0 bytes
  5158 ;; Hardware stack levels used: 1
  5159 ;; This function calls:
  5160 ;;		Nothing
  5161 ;; This function is called by:
  5162 ;;		_start_alarm
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166  0462                     i1_go_close_alt:	
  5167                           ;psect for function i1_go_close_alt
  5168                           
  5169  0462                     i1l1789:	
  5170                           ;incstack = 0
  5171                           ; Regs used in i1_go_close_alt: []
  5172                           
  5173                           
  5174                           ;main.c: 143:     FLAGS.bits.CLOSED = 1;
  5175  0462  1578               	bsf	_FLAGS+1,2
  5176  0463                     i1l309:	
  5177                           ;main.c: 144:     do { LATCbits.LATC4 = 0; } while(0);
  5178                           
  5179  0463  0022               	movlb	2	; select bank2
  5180  0464  120E               	bcf	14,4	;volatile
  5181  0465                     i1l311:	
  5182                           ;main.c: 145:     do { LATCbits.LATC5 = 1; } while(0);
  5183                           
  5184  0465  168E               	bsf	14,5	;volatile
  5185  0466                     i1l313:
  5186  0466  0008               	return
  5187  0467                     __end_ofi1_go_close_alt:
  5188                           
  5189                           	psect	text38
  5190  0307                     __ptext38:	
  5191 ;; *************** function i1_go_close *****************
  5192 ;; Defined at:
  5193 ;;		line 122 in file "main.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;		None
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;		None
  5198 ;; Return value:  Size  Location     Type
  5199 ;;                  1    wreg      void 
  5200 ;; Registers used:
  5201 ;;		wreg
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMMON   BANK0   BANK1
  5207 ;;      Params:         0       0       0
  5208 ;;      Locals:         0       0       0
  5209 ;;      Temps:          2       0       0
  5210 ;;      Totals:         2       0       0
  5211 ;;Total ram usage:        2 bytes
  5212 ;; Hardware stack levels used: 1
  5213 ;; This function calls:
  5214 ;;		Nothing
  5215 ;; This function is called by:
  5216 ;;		_start_alarm
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220  0307                     i1_go_close:	
  5221                           ;psect for function i1_go_close
  5222                           
  5223  0307                     i1l1775:	
  5224                           ;incstack = 0
  5225                           ; Regs used in i1_go_close: [wreg]
  5226                           
  5227                           
  5228                           ;main.c: 123:     time_rotation = 0;
  5229  0307  3000               	movlw	0
  5230  0308  0020               	movlb	0	; select bank0
  5231  0309  00A0               	movwf	_time_rotation
  5232  030A  3000               	movlw	0
  5233  030B  00A1               	movwf	_time_rotation+1
  5234  030C  3000               	movlw	0
  5235  030D  00A2               	movwf	_time_rotation+2
  5236  030E                     i1l1777:
  5237  030E  0022               	movlb	2	; select bank2
  5238  030F  160E               	bsf	14,4	;volatile
  5239  0310                     i1l1779:
  5240                           
  5241                           ;main.c: 125:     FLAGS.bits.CLOSING = 1;
  5242  0310  14F8               	bsf	_FLAGS+1,1
  5243                           
  5244                           ;main.c: 126:     _delay((unsigned long)((2 * 1000)*(16000000/4000.0)));
  5245  0311  3029               	movlw	41
  5246  0312  00F1               	movwf	??i1_go_close+1
  5247  0313  3096               	movlw	150
  5248  0314  00F0               	movwf	??i1_go_close
  5249  0315  307F               	movlw	127
  5250  0316                     u195_27:
  5251  0316  0B89               	decfsz	9,f
  5252  0317  2B16               	goto	u195_27
  5253  0318  0BF0               	decfsz	??i1_go_close,f
  5254  0319  2B16               	goto	u195_27
  5255  031A  0BF1               	decfsz	??i1_go_close+1,f
  5256  031B  2B16               	goto	u195_27
  5257  031C  0000               	nop
  5258  031D                     i1l1781:
  5259  031D  0022               	movlb	2	; select bank2
  5260  031E  168E               	bsf	14,5	;volatile
  5261  031F                     i1l298:
  5262                           
  5263                           ;main.c: 128:     time_rele_power = 10;
  5264  031F  300A               	movlw	10
  5265  0320  0020               	movlb	0	; select bank0
  5266  0321  00AD               	movwf	_time_rele_power
  5267  0322  3000               	movlw	0
  5268  0323  00AE               	movwf	_time_rele_power+1
  5269  0324                     i1l1783:
  5270                           
  5271                           ;main.c: 129:     FLAGS.bits.RELE_POWER_WAIT = 1;
  5272  0324  16F7               	bsf	_FLAGS,5
  5273  0325                     i1l1785:
  5274                           
  5275                           ;main.c: 130:     FLAGS.bits.RELE_CONTROL_WAIT = 1;
  5276  0325  1777               	bsf	_FLAGS,6
  5277  0326                     i1l299:
  5278  0326  0008               	return
  5279  0327                     __end_ofi1_go_close:
  5280                           
  5281                           	psect	text39
  5282  03F8                     __ptext39:	
  5283 ;; *************** function _TMR0_ISR *****************
  5284 ;; Defined at:
  5285 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;		None
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;		None
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  1    wreg      void 
  5292 ;; Registers used:
  5293 ;;		wreg, status,2, status,0, pclath, cstack
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMMON   BANK0   BANK1
  5299 ;;      Params:         0       0       0
  5300 ;;      Locals:         0       0       0
  5301 ;;      Temps:          0       0       0
  5302 ;;      Totals:         0       0       0
  5303 ;;Total ram usage:        0 bytes
  5304 ;; Hardware stack levels used: 1
  5305 ;; Hardware stack levels required when called: 1
  5306 ;; This function calls:
  5307 ;;		Absolute function
  5308 ;;		_TMR0_DefaultInterruptHandler
  5309 ;;		i1_switch_zum
  5310 ;; This function is called by:
  5311 ;;		_INTERRUPT_InterruptManager
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315  03F8                     _TMR0_ISR:	
  5316                           ;psect for function _TMR0_ISR
  5317                           
  5318  03F8                     i1l2369:	
  5319                           ;incstack = 0
  5320                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  5321                           
  5322                           
  5323                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  5324  03F8  110B               	bcf	11,2	;volatile
  5325  03F9                     i1l2371:
  5326                           
  5327                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  5328  03F9  0020               	movlb	0	; select bank0
  5329  03FA  0840               	movf	_timer0ReloadVal,w	;volatile
  5330  03FB  0095               	movwf	21	;volatile
  5331  03FC                     i1l2373:
  5332                           
  5333                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  5334  03FC  083C               	movf	_TMR0_InterruptHandler,w
  5335  03FD  043D               	iorwf	_TMR0_InterruptHandler+1,w
  5336  03FE  1903               	btfsc	3,2
  5337  03FF  2C01               	goto	u158_21
  5338  0400  2C02               	goto	u158_20
  5339  0401                     u158_21:
  5340  0401  2C07               	goto	i1l192
  5341  0402                     u158_20:
  5342  0402                     i1l2375:
  5343                           
  5344                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  5345  0402  083D               	movf	_TMR0_InterruptHandler+1,w
  5346  0403  008A               	movwf	10
  5347  0404  083C               	movf	_TMR0_InterruptHandler,w
  5348  0405  000A               	callw
  5349  0406  3183               	pagesel	$
  5350  0407                     i1l192:
  5351  0407  0008               	return
  5352  0408                     __end_of_TMR0_ISR:
  5353                           
  5354                           	psect	text40
  5355  047D                     __ptext40:	
  5356 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5357 ;; Defined at:
  5358 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;		None
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;		None
  5363 ;; Return value:  Size  Location     Type
  5364 ;;                  1    wreg      void 
  5365 ;; Registers used:
  5366 ;;		None
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMMON   BANK0   BANK1
  5372 ;;      Params:         0       0       0
  5373 ;;      Locals:         0       0       0
  5374 ;;      Temps:          0       0       0
  5375 ;;      Totals:         0       0       0
  5376 ;;Total ram usage:        0 bytes
  5377 ;; Hardware stack levels used: 1
  5378 ;; This function calls:
  5379 ;;		Nothing
  5380 ;; This function is called by:
  5381 ;;		_TMR0_Initialize
  5382 ;;		_TMR0_ISR
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386  047D                     _TMR0_DefaultInterruptHandler:	
  5387                           ;psect for function _TMR0_DefaultInterruptHandler
  5388                           
  5389  047D                     i1l198:	
  5390                           ;incstack = 0
  5391                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  5392                           
  5393  047D  0008               	return
  5394  047E                     __end_of_TMR0_DefaultInterruptHandler:
  5395                           
  5396                           	psect	text41
  5397  0416                     __ptext41:	
  5398 ;; *************** function i1_switch_zum *****************
  5399 ;; Defined at:
  5400 ;;		line 94 in file "main.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;		None
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;		None
  5405 ;; Return value:  Size  Location     Type
  5406 ;;                  1    wreg      void 
  5407 ;; Registers used:
  5408 ;;		status,0
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMMON   BANK0   BANK1
  5414 ;;      Params:         0       0       0
  5415 ;;      Locals:         0       0       0
  5416 ;;      Temps:          0       0       0
  5417 ;;      Totals:         0       0       0
  5418 ;;Total ram usage:        0 bytes
  5419 ;; Hardware stack levels used: 1
  5420 ;; This function calls:
  5421 ;;		Nothing
  5422 ;; This function is called by:
  5423 ;;		_rele_tick
  5424 ;;		_TMR0_ISR
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428  0416                     i1_switch_zum:	
  5429                           ;psect for function i1_switch_zum
  5430                           
  5431  0416                     i1l269:	
  5432                           ;incstack = 0
  5433                           ; Regs used in i1_switch_zum: [status,0]
  5434                           ;main.c: 95:     do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  5435                           
  5436  0416                     i1l1809:
  5437  0416  1003               	clrc
  5438  0417  0022               	movlb	2	; select bank2
  5439  0418  1E8C               	btfss	12,5	;volatile
  5440  0419  1403               	setc
  5441  041A  1803               	btfsc	3,0
  5442  041B  2C1D               	goto	u84_21
  5443  041C  2C20               	goto	u84_20
  5444  041D                     u84_21:
  5445  041D  0022               	movlb	2	; select bank2
  5446  041E  168C               	bsf	12,5	;volatile
  5447  041F  2C22               	goto	u85_24
  5448  0420                     u84_20:
  5449  0420  0022               	movlb	2	; select bank2
  5450  0421  128C               	bcf	12,5	;volatile
  5451  0422                     u85_24:
  5452  0422                     i1l271:
  5453  0422  0008               	return
  5454  0423                     __end_ofi1_switch_zum:
  5455  007E                     btemp	set	126	;btemp
  5456  007E                     int$flags	set	126
  5457  007E                     wtemp0	set	126
  5458                           
  5459                           	psect	idloc
  5460                           
  5461                           ;Config register IDLOC0 @ 0x8000
  5462                           ;	unspecified, using default values
  5463  8000                     	org	32768
  5464  8000  3FFF               	dw	16383
  5465                           
  5466                           ;Config register IDLOC1 @ 0x8001
  5467                           ;	unspecified, using default values
  5468  8001                     	org	32769
  5469  8001  3FFF               	dw	16383
  5470                           
  5471                           ;Config register IDLOC2 @ 0x8002
  5472                           ;	unspecified, using default values
  5473  8002                     	org	32770
  5474  8002  3FFF               	dw	16383
  5475                           
  5476                           ;Config register IDLOC3 @ 0x8003
  5477                           ;	unspecified, using default values
  5478  8003                     	org	32771
  5479  8003  3FFF               	dw	16383
  5480                           
  5481                           	psect	config
  5482                           
  5483                           ;Config register CONFIG1 @ 0x8007
  5484                           ;	Oscillator Selection
  5485                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5486                           ;	Watchdog Timer Enable
  5487                           ;	WDTE = OFF, WDT disabled
  5488                           ;	Power-up Timer Enable
  5489                           ;	PWRTE = OFF, PWRT disabled
  5490                           ;	MCLR Pin Function Select
  5491                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5492                           ;	Flash Program Memory Code Protection
  5493                           ;	CP = OFF, Program memory code protection is disabled
  5494                           ;	Data Memory Code Protection
  5495                           ;	CPD = OFF, Data memory code protection is disabled
  5496                           ;	Brown-out Reset Enable
  5497                           ;	BOREN = ON, Brown-out Reset enabled
  5498                           ;	Clock Out Enable
  5499                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5500                           ;	Internal/External Switchover
  5501                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5502                           ;	Fail-Safe Clock Monitor Enable
  5503                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5504  8007                     	org	32775
  5505  8007  3FE4               	dw	16356
  5506                           
  5507                           ;Config register CONFIG2 @ 0x8008
  5508                           ;	Flash Memory Self-Write Protection
  5509                           ;	WRT = OFF, Write protection off
  5510                           ;	PLL Enable
  5511                           ;	PLLEN = OFF, 4x PLL disabled
  5512                           ;	Stack Overflow/Underflow Reset Enable
  5513                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5514                           ;	Brown-out Reset Voltage Selection
  5515                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5516                           ;	Low-Voltage Programming Enable
  5517                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5518  8008                     	org	32776
  5519  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         27
    Persistent  37
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80      7      33
    BANK1            16      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> switch_zum(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i1_switch_zum(), switch_zum(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ms_tick(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ms_tick(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _ms_tick->_sec_tick_work
    _sec_tick_work->_get_measure
    _get_measure->i1_ADC_GetConversion
    _start_alarm->i1_go_close

Critical Paths under _main in BANK0

    _main->_fun_work
    _main->_switch_wm
    _switch_wm->_boop
    _start_setup->_get_fun_full
    _start_setup->_get_jump_full
    _get_jump_full->_ADC_GetConversion
    _get_fun_full->_ADC_GetConversion
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _get_jump->_ADC_GetConversion
    _get_fun->_ADC_GetConversion
    _fun_work->_beep

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1706
                           _fun_work
                            _get_fun
                           _get_jump
                        _start_setup
                          _switch_wm
 ---------------------------------------------------------------------------------
 (1) _switch_wm                                            1     1      0     316
                                              6 BANK0      1     1      0
                               _boop
 ---------------------------------------------------------------------------------
 (2) _boop                                                 6     5      1     316
                                              0 BANK0      6     5      1
                         _switch_zum
 ---------------------------------------------------------------------------------
 (1) _start_setup                                          0     0      0     984
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                       _get_fun_full
                      _get_jump_full
 ---------------------------------------------------------------------------------
 (2) _get_jump_full                                        5     5      0      70
                                              2 BANK0      5     5      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (2) _get_fun_full                                         5     5      0      70
                                              2 BANK0      5     5      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     422
                     _ADC_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      1     1      0     211
                                              2 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_jump                                             4     4      0      45
                                              2 BANK0      4     4      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (1) _get_fun                                              4     4      0      45
                                              2 BANK0      4     4      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _fun_work                                             1     1      0     316
                                              6 BANK0      1     1      0
                               _beep
                           _go_close
                       _go_close_alt
                            _go_open
                        _go_open_alt
 ---------------------------------------------------------------------------------
 (2) _go_open_alt                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_open                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_close_alt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_close                                             2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _beep                                                 6     5      1     316
                                              0 BANK0      6     5      1
                         _switch_zum
 ---------------------------------------------------------------------------------
 (3) _switch_zum                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0      67
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0      67
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                            _ms_tick *
 ---------------------------------------------------------------------------------
 (7) _ms_tick                                              0     0      0      67
                      _sec_tick_work
 ---------------------------------------------------------------------------------
 (8) _sec_tick_work                                        1     1      0      67
                                              6 COMMON     1     1      0
                        _get_measure
                          _rele_tick
                        _toggle_tone
 ---------------------------------------------------------------------------------
 (9) _toggle_tone                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _rele_tick                                            2     2      0       0
                                              0 COMMON     2     2      0
                       i1_switch_zum
 ---------------------------------------------------------------------------------
 (9) _get_measure                                          4     4      0      67
                                              2 COMMON     4     4      0
                        _start_alarm
                i1_ADC_GetConversion
 ---------------------------------------------------------------------------------
 (10) i1_ADC_GetConversion                                 2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (10) _start_alarm                                         0     0      0       0
                         i1_go_close
                     i1_go_close_alt
 ---------------------------------------------------------------------------------
 (11) i1_go_close_alt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i1_go_close                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                       i1_switch_zum *
 ---------------------------------------------------------------------------------
 (10) i1_switch_zum                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _fun_work
     _beep
       _switch_zum
     _go_close
     _go_close_alt
     _go_open
     _go_open_alt
   _get_fun
     _ADC_GetConversion
   _get_jump
     _ADC_GetConversion
   _start_setup
     _SYSTEM_Initialize
       _ADC_Initialize
       _FVR_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR2_Initialize
         _TMR2_SetInterruptHandler
       _WDT_Initialize
     _TMR0_SetInterruptHandler
     _TMR2_SetInterruptHandler
     _TMR2_StartTimer
     _get_fun_full
       _ADC_GetConversion
     _get_jump_full
       _ADC_GetConversion
   _switch_wm
     _boop
       _switch_zum

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     i1_switch_zum *
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _ms_tick *
       _sec_tick_work
         _get_measure
           _start_alarm
             i1_go_close
             i1_go_close_alt
           i1_ADC_GetConversion
         _rele_tick
           i1_switch_zum
         _toggle_tone

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              60      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      7      21       6       41.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            10      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      2E       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed May 11 16:18:15 2022

        __end_of_TMR2_SetInterruptHandler 0452                          get_fun_full@flag 003B  
                      get_fun@fun_counter 0034                     __end_of_sec_tick_work 0187  
                                      l31 046A                                        l25 036F  
                                      l28 0445                                        l63 033C  
                                      l48 043E                                        l66 0341  
                                      l92 03AF                                        _RD 0CA8  
                                      _WR 0CA9                             ?_go_close_alt 0070  
                          ?_get_jump_full 0070                    __end_of_FVR_Initialize 046F  
                         _timer0ReloadVal 0040                                       l140 0471  
                                     l205 046E                                       l302 0423  
                                     l311 0460                                       l304 0425  
                                     l320 045C                                       l313 0461  
                                     l137 03D7                                       l401 0081  
                                     l306 042C                                       l410 00C3  
                                     l316 0459                                       l412 00C5  
                                     l309 045E                                       l318 045B  
                                     l271 03E7                                       l351 010B  
                                     l159 0451                                       l362 0148  
                                     l283 02C6                                       l195 0457  
                                     l179 0385                                       l452 0108  
                                     l380 007E                                       l292 0230  
                                     l269 03DB                                       l349 0109  
                                     l382 0080                                       l367 0038  
                                     l455 02DA                                       l369 003A  
                                     l298 02FF                                       l378 007C  
                                     l490 01FA                                       l299 0306  
                                     l387 0187                                       l459 02E6  
                                     l396 01C2                                       _GIE 005F  
                             _start_alarm 03E8                                       _PR2 001B  
                                     u940 0340                                       u941 033F  
                             _start_setup 01C3                              ?_go_open_alt 0070  
                         _TMR2_Initialize 03C5                                       wreg 0009  
                              i1_go_close 0307                               get_jump@res 0039  
                                    l2011 0057                                      l2003 003C  
                                    l2101 0143                                      l2021 006A  
                                    l2013 005B                                      l2005 003E  
                                    l2103 0147                                      l2111 0196  
                                    l2023 0071                                      l2015 0062  
                                    l2007 0049                                      l2031 0083  
                                    l2121 01B4                                      l2113 01A0  
                                    l2025 0075                                      l2017 0066  
                                    l2009 0052                                      l2041 00A2  
                                    l2033 0085                                      l2123 01B6  
                                    l2115 01A5                                      l2107 0189  
                                    l2019 0067                                      l2051 00B8  
                                    l2043 00A9                                      l2035 0090  
                                    l2125 01BD                                      l2117 01A9  
                                    l2109 0194                                      l2301 03CC  
                                    l2029 0077                                      l2053 00BC  
                                    l2045 00AD                                      l2037 0099  
                                    l2127 01C1                                      l2119 01B0  
                                    l2311 037C                                      l2303 03D4  
                                    l2047 00AE                                      l2039 009E  
                                    l2401 00FD                                      l2081 010D  
                                    l2313 037D                                      l2305 0370  
                                    l2321 046F                                      l2057 00BE  
                                    l2049 00B1                                      l2331 02A4  
                                    l2323 0299                                      l2403 0101  
                                    l2091 012B                                      l2083 0118  
                                    l2315 037E                                      l2307 0375  
                                    l2411 02CF                                      l2317 03DB  
                                    l2333 02A9                                      l2325 029B  
                                    l2405 0105                                      l2093 012F  
                                    l2085 011A                                      l2309 0378  
                                    l2261 044C                                      l2421 01C6  
                                    l2341 01FD                                      l2413 02D0  
                                    l2501 0389                                      l2335 02AF  
                                    l2327 029D                                      l2095 0136  
                                    l2087 011C                                      l2271 03A3  
                                    l2263 0452                                      l2319 035A  
                                    l2431 01DE                                      l2423 01C7  
                                    l2351 0212                                      l2343 01FF  
                                    l2415 02DE                                      l2407 02C7  
                                    l2503 038D                                      l2337 02BB  
                                    l2329 02A0                                      l2361 042B  
                                    l2097 013A                                      l2089 0126  
                                    l2281 0443                                      l2273 03A6  
                                    l2265 039B                                      l2441 01E7  
                                    l2433 01DF                                      l2425 01D8  
                                    l2353 0218                                      l2345 0201  
                                    l2417 02DF                                      l2409 02CB  
                                    l2339 02C0                                      l2099 013C  
                                    l2291 043B                                      l2275 03AB  
                                    l2267 039E                                      l2283 0467  
                                    l2451 01EE                                      l2443 01E8  
                                    l2435 01E1                                      l2427 01DB  
                                    l2419 01C3                                      l2355 0225  
                                    l2347 0204                                      l2365 045D  
                                    l2381 00CE                                      l2285 046B  
                                    l2277 043F                                      l2269 03A1  
                                    l2293 03C5                                      l2453 01EF  
                                    l2445 01EA                                      l2437 01E3  
                                    l2429 01DD                                      l2349 020D  
                                    l2357 022A                                      l2359 0426  
                                    l2367 0458                                      l2391 00E5  
                                    l2383 00D2                                      l1911 0335  
                                    l2287 0437                                      l2279 0442  
                                    l2295 03C8                                      l2455 01F1  
                                    l2447 01EB                                      l2439 01E5  
                                    l2385 00D6                                      l2393 00E8  
                                    l2377 00C6                                      l1913 0336  
                                    l2289 043A                                      l2297 03C9  
                                    l2457 01F4                                      l2449 01ED  
                                    l2395 00EC                                      l2387 00DD  
                                    l2379 00CA                                      l1915 033A  
                                    l2299 03CA                                      l2459 01F7  
                                    l2397 00F0                                      l2389 00E1  
                                    l1917 0340                                      l1909 0329  
                                    l2399 00F4                                      l2499 0386  
                                    l1991 0304                                      l1983 02E7  
                                    l1993 0305                                      l1985 02EE  
                                    l1987 02F0                                      l1989 02FD  
                                    u1100 007C                                      u1101 007B  
                                    u1110 0099                                      u1111 0098  
                                    u1200 0143                                      u1120 00A9  
                                    u1201 0142                                      u1121 00A8  
                                    u1210 01A0                                      u1130 00B8  
                                    u1211 019F                                      u1131 00B7  
                                    u1220 01B0                                      u1140 00C3  
                                    u1221 01AF                                      u1141 00C2  
                                    u1230 01BD                                      u1070 0052  
                                    u1231 01BC                                      u1071 0051  
                                    u1080 0062                                      u1081 0061  
                                    u1090 0071                                      u1091 0070  
                                    u1180 0126                                      u1181 0125  
                                    _LATA 010C                                      u1190 0136  
                                    u1191 0135                                      _LATC 010E  
                                    u1520 03E5                                      u1600 00CE  
                                    u1521 03E2                                      u1601 00CD  
                                    u1610 00D2                                      u1611 00D1  
                                    u1540 02AF                                      u1620 00D6  
                                    u1700 02DE                                      u1541 02AE  
                                    u1621 00D5                                      u1701 02DD  
                                    u1534 03E7                                      u1550 02C6  
                                    u1630 00E1                                      u1551 02C5  
                                    u1631 00E0                                      u1640 00EC  
                                    u1560 0218                                      u1641 00EB  
                                    u1561 0217                                      u1650 00F0  
                                    u1570 0230                                      u1651 00EF  
                                    u1571 022F                                      u1660 00F4  
                                    u1661 00F3                                      u1670 0101  
                                    u1590 00CA                                      u1671 0100  
                                    u1591 00C9                                      u1680 02CB  
                                    u1681 02CA                                      u1690 02CF  
                                    u1907 02F7                                      u1691 02CE  
                                    u1860 038D                                      u1917 02A1  
                                    u1861 038C                                      u1927 02B5  
                                    u1877 0208                                      u1887 021E  
                                    u1897 0337                                      i1l63 0354  
                                    i1l66 0359                                      _TMR0 0015  
                                    _TMR2 001A                                      _WREN 0CAA  
                                    _WPUA 020C                                      _WPUC 020E  
                                    _beep 0297                                      _boop 01FB  
                                    _main 0386                                      fsr0h 0005  
                                    indf0 0000                                      fsr0l 0004  
                                    btemp 007E                            ??_get_fun_full 0037  
                                    start 0026                      __end_ofi1_switch_zum 0423  
                 get_fun_full@fun_counter 0033                            ??_go_close_alt 0035  
                 __end_of_TMR0_Initialize 0386            ??_TMR0_DefaultInterruptHandler 0070  
                         ?_FVR_Initialize 0070             __end_of_OSCILLATOR_Initialize 0446  
                                   ?_beep 0035                                     ?_boop 0035  
                                   ?_main 0070                                     _EEADR 0191  
                                   _FLAGS 0077                                     _T2CON 001C  
                                   i1l110 0012                                     i1l115 0024  
                                   i1l116 0024                                     i1l311 0465  
                                   i1l313 0466                                     i1l162 047C  
                                   i1l323 03E9                                     i1l324 03EB  
                                   i1l332 0231                                     i1l156 0415  
                                   i1l309 0463                                     i1l334 0233  
                                   i1l271 0422                                     i1l327 03F7  
                                   i1l192 0407                                     i1l344 0264  
                                   i1l424 0291                                     i1l416 0278  
                                   i1l425 0293                                     i1l426 0296  
                                   i1l274 0436                                     i1l419 027C  
                                   i1l269 0416                                     i1l198 047D  
                                   i1l438 0186                                     i1l465 03C4  
                                   i1l298 031F                                     i1l299 0326  
                                   _TRISA 008C                                     _TRISC 008E  
                                   u82_20 03F0                                     u90_20 0261  
                                   u82_21 03EF                                     u90_21 0260  
                                   u83_20 0358                                     u91_20 026C  
                                   u83_21 0357                                     u91_21 026B  
                                   u84_20 0420                                     u92_20 0273  
                                   u84_21 041D                                     u92_21 0272  
                                   u93_20 027C                                     u93_21 027B  
                                   u85_24 0422                                     u86_20 0435  
                                   u86_21 0433                                     u87_24 0436  
                                   u88_20 024C                                     u88_21 024B  
                                   u89_20 025A                                     u97_20 015C  
                                   u89_21 0259                                     u97_21 015B  
                                   u98_20 0166                                     u98_21 0163  
                                   u99_24 0168                 ?_TMR0_SetInterruptHandler 0035  
                        __end_of_TMR0_ISR 0408                           __end_of_get_fun 0149  
                        __end_of_TMR2_ISR 0416                           __end_of_go_open 042D  
                                   beep@i 003A                                     beep@j 0039  
                          _WDT_Initialize 0467                                     boop@i 003A  
                                   boop@j 0039                           __end_of_ms_tick 03C5  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                         ms_tick@tick_count 0023  
                         _TMR2_StartTimer 046F                           __initialization 0027  
                            __end_of_beep 02C7                              __end_of_boop 0231  
                            __end_of_main 039B                           ??_get_jump_full 0037  
                 __end_of_TMR2_Initialize 03D8               ?_INTERRUPT_InterruptManager 0070  
                                  ??_beep 0036                                    ??_boop 0036  
                _TMR2_SetInterruptHandler 044C                                    ??_main 003C  
                  __end_of_WDT_Initialize 046B                               ?i1_go_close 0070  
                     i1_ADC_GetConversion 0342                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _EEDATA 0193  
                                  _EECON2 0196                                    _APFCON 011D  
                                  _ANSELA 018C                                    _ANSELC 018E  
                                  _BORCON 0116                                    u100_20 0179  
                                  u100_21 0178                                    u101_20 0183  
                                  u101_21 0180                                    u102_24 0185  
                                  i1l2061 03B5                                    i1l2063 03BE  
                                  i1l2065 03C1                                    i1l2059 03B0  
                                  i1l2075 0408                                    i1l2077 040A  
                                  i1l2079 0410                                    i1l1801 034E  
                                  i1l2371 03F9                                    i1l1803 0352  
                                  i1l2373 03FC                                    i1l1805 0358  
                                  i1l1821 0241                                    i1l2461 0006  
                                  i1l2375 0402                                    i1l1831 025B  
                                  i1l1823 0243                                    i1l1815 042D  
                                  i1l2471 0020                                    i1l2463 000A  
                                  i1l1809 0416                                    i1l2369 03F8  
                                  i1l1833 0261                                    i1l1825 024C  
                                  i1l1817 0235                                    i1l1841 026C  
                                  i1l2465 000E                                    i1l1827 0251  
                                  i1l1819 023F                                    i1l1851 028D  
                                  i1l1843 0273                                    i1l1931 0168  
                                  i1l1923 0149                                    i1l2467 0016  
                                  i1l1781 031D                                    i1l1829 025A  
                                  i1l1853 028E                                    i1l1845 027E  
                                  i1l1837 0265                                    i1l1941 0185  
                                  i1l1933 016C                                    i1l1925 0154  
                                  i1l2469 001B                                    i1l1783 0324  
                                  i1l1775 0307                                    i1l1791 03E8  
                                  i1l1855 028F                                    i1l1847 028A  
                                  i1l1839 0268                                    i1l1935 016F  
                                  i1l1927 0158                                    u115_20 03BE  
                                  i1l1785 0325                                    i1l1777 030E  
                                  i1l1793 03F0                                    i1l1849 028C  
                                  i1l1937 0173                                    i1l1929 015C  
                                  u115_21 03BD                                    i1l1779 0310  
                                  i1l1795 03F4                                    i1l1939 0179  
                                  i1l1789 0462                                    i1l1797 0343  
                                  i1l1799 034D                                    u117_20 0410  
                                  u117_21 040F                                    u171_20 000A  
                                  _FVRCON 0117                                    u171_21 0009  
                                  u172_20 000E                                    u172_21 000D  
                                  u173_20 0016                                    u173_21 0015  
                                  u158_20 0402                                    u174_20 001B  
                                  u158_21 0401                                    u174_21 001A  
                                  u175_20 0020                                    u175_21 001F  
                                  u193_27 0283                                    u194_27 034F  
                                  u195_27 0316                          _GOOD_WSP_VOLTAGE 0472  
                                  _OSCCON 0099                                    _WDTCON 0097  
                    ?i1_ADC_GetConversion 0070                          __end_of_get_jump 01C3  
                        __end_of_go_close 0307                      _switch_zum$intlevel0 03DB  
                        ?_TMR0_Initialize 0070                          __end_of_fun_work 0109  
                               ??_get_fun 0037                                 ??_go_open 0035  
                    __end_of_get_fun_full 0081                                 ??_ms_tick 0077  
                         ?_WDT_Initialize 0070                            get_measure@res 0074  
                ADC_GetConversion@channel 0036                     _HIGH_WATER_RESISTANSE 0478  
                 __end_of_TMR2_StartTimer 0472  TMR0_SetInterruptHandler@InterruptHandler 0035  
TMR2_SetInterruptHandler@InterruptHandler 0035                      __end_of_go_close_alt 0462  
                       _SYSTEM_Initialize 035A                   __end_of__initialization 0035  
                      ?_SYSTEM_Initialize 0070                             _UP_RESISTANSE 0476  
                            ?_toggle_tone 0070                     ??i1_ADC_GetConversion 0070  
                          __pcstackCOMMON 0070                 get_jump_full@jump_counter 0031  
                     ??_SYSTEM_Initialize 0038                                 ?_TMR0_ISR 0070  
                               ?_TMR2_ISR 0070                          ?_TMR2_Initialize 0070  
              i1ADC_GetConversion@channel 0071                              ?_start_alarm 0070  
                          _OPTION_REGbits 0095                              ?_start_setup 0070  
                            i1_switch_zum 0416                 __end_of_SYSTEM_Initialize 0370  
                              __pbssBANK0 0020                          ??_FVR_Initialize 0035  
                              __pmaintext 0386          __end_of_TMR0_SetInterruptHandler 0458  
                              ??_TMR0_ISR 0070                                ??_TMR2_ISR 0077  
                         _time_rele_power 002D                                __pintentry 0004  
                       _time_rele_control 002B                          get_jump_full@res 0039  
                                 _OSCTUNE 0098                          ?_TMR2_StartTimer 0070  
                               ?_get_jump 0070                                 ?_go_close 0070  
                               ?_fun_work 0070                      _ADC_InterruptHandler 002F  
              ??_TMR2_SetInterruptHandler 0037                  __end_of_GOOD_WSP_VOLTAGE 0474  
                                 __ptext1 02C7                                   __ptext2 01FB  
                     get_measure@measures 007A                                   __ptext3 01C3  
                                 __ptext4 0081                                   __ptext5 0038  
                                 __ptext6 046F                                   __ptext7 035A  
                                 __ptext8 0467                                   __ptext9 03C5  
                                 _get_fun 0109                                   _go_open 0423  
                   _OSCILLATOR_Initialize 043F                                 _T2CONbits 001C  
                ??_PIN_MANAGER_Initialize 0035                                   _ms_tick 03B0  
                            ??i1_go_close 0070                                   clrloop0 0447  
                              ??_get_jump 0037                                ??_go_close 0035  
                       __end_of_rele_tick 0297                      end_of_initialization 0035  
                              ??_fun_work 003B                              _get_fun_full 0038  
                      __end_ofi1_go_close 0327                     __end_of_get_jump_full 00C6  
                           _sec_tick_work 0149                              _go_close_alt 045D  
                        ??_WDT_Initialize 0035              __end_of_LOW_WATER_RESISTANSE 047C  
                _TMR0_SetInterruptHandler 0452                         __end_of_switch_wm 02E7  
                               _TRISAbits 008C                                 _TRISCbits 008E  
                         get_fun_full@res 0039                                get_fun@res 0039  
                           ??_get_measure 0072                                _switch_zum 03D8  
    __end_of_TMR2_DefaultInterruptHandler 047D              _TMR2_DefaultInterruptHandler 047C  
                          ?_sec_tick_work 0070                            _ADC_Initialize 0437  
                  ?_OSCILLATOR_Initialize 0070                            i1_go_close_alt 0462  
                           ??_go_open_alt 0035                       start_initialization 0027  
             __end_ofi1_ADC_GetConversion 035A                    __end_of_ADC_Initialize 043F  
                     __end_of_get_measure 0265                    __end_ofi1_go_close_alt 0467  
           ?_TMR2_DefaultInterruptHandler 0070                               __pbssCOMMON 0077  
                               ___latbits 0000                             __pcstackBANK0 0035  
                     __end_of_go_open_alt 045D                      _LOW_WATER_RESISTANSE 047A  
                   _TMR0_InterruptHandler 003C                                 __pnvBANK0 003C  
                  _PIN_MANAGER_Initialize 039B                           ??_sec_tick_work 0076  
                             ?_switch_zum 0070                           ?_ADC_Initialize 0070  
                               beep@count 0035                           ?i1_go_close_alt 0070  
            ??_INTERRUPT_InterruptManager 0077                                  ?_get_fun 0070  
                                ?_go_open 0070                         sec_tick_work@iled 0079  
                                ?_ms_tick 0070                         ??_TMR0_Initialize 0037  
                       get_jump_full@flag 003B                                  _LATAbits 010C  
                                _LATCbits 010E                                 _rele_tick 0265  
                               clear_ram0 0446                                  _PIE1bits 0091  
                             _get_measure 0231                ??_TMR0_SetInterruptHandler 0037  
                                _PIR1bits 0011                                 _time_meas 007B  
                                _TMR0_ISR 03F8                                  _TMR2_ISR 0408  
                               boop@count 0035                                _ADCON0bits 009D  
                                _WPUAbits 020C                                  _WPUCbits 020E  
          ??_TMR2_DefaultInterruptHandler 0070                               _go_open_alt 0458  
               ?_TMR2_SetInterruptHandler 0035                                 _switch_wm 02C7  
                       ??_TMR2_Initialize 0037                                ?_rele_tick 0070  
                   __end_of_UP_RESISTANSE 0478                             ??_toggle_tone 0070  
                       _ADC_GetConversion 0327                   ??_OSCILLATOR_Initialize 0035  
                      ?_ADC_GetConversion 0070                             ??_start_alarm 0072  
                              _ANSELAbits 018C                                _ANSELCbits 018E  
                     ??_ADC_GetConversion 0035                             ??_start_setup 003C  
                           _time_rele_gap 0029                                ?_switch_wm 0070  
                                __ptext10 044C                                  __ptext11 0370  
                                __ptext20 00C6                                  __ptext12 0452  
                                __ptext21 0458                                  __ptext13 039B  
                                __ptext30 03B0                                  __ptext22 0423  
                                __ptext14 043F                                  __ptext31 0149  
                                __ptext23 045D                                  __ptext15 046B  
                                __ptext40 047D                                  __ptext32 042D  
                                __ptext24 02E7                                  __ptext16 0437  
                                __ptext41 0416                                  __ptext33 0265  
                                __ptext25 0297                                  __ptext17 0187  
                                __ptext34 0231                                  __ptext26 03D8  
                                __ptext18 0109                                  __ptext35 0342  
                                __ptext19 0327                                  __ptext36 03E8  
                                __ptext28 0408                                  __ptext37 0462  
                                __ptext29 047C                                  __ptext38 0307  
                                __ptext39 03F8                             ?i1_switch_zum 0070  
                                beep@time 0038                                  _get_jump 0187  
                                _go_close 02E7                           _BAD_WSP_VOLTAGE 0474  
                           _time_rotation 0020                                  _fun_work 00C6  
    __end_of_TMR0_DefaultInterruptHandler 047E              _TMR0_DefaultInterruptHandler 047D  
               __end_of_ADC_GetConversion 0342                                  _time_led 0027  
                                boop@time 0038                                  int$flags 007E  
                       ??_TMR2_StartTimer 0035                       __end_of_toggle_tone 0437  
      __end_of_INTERRUPT_InterruptManager 0026                _INTERRUPT_InterruptManager 0004  
                    get_jump@jump_counter 0032                                _INTCONbits 000B  
           __end_of_HIGH_WATER_RESISTANSE 047A                                _FVRCONbits 0117  
                          ??i1_switch_zum 0070                       __end_of_start_alarm 03F8  
                     __end_of_start_setup 01FB                                  intlevel1 0000  
                 ?_PIN_MANAGER_Initialize 0070                               ??_rele_tick 0070  
                        ??_ADC_Initialize 0035             ?_TMR0_DefaultInterruptHandler 0070  
                        ??i1_go_close_alt 0070                              ??_switch_zum 0035  
                           _get_jump_full 0081                             __pstringtext1 0472  
                           __pstringtext2 0474                             __pstringtext3 0476  
                           __pstringtext4 0478                             __pstringtext5 047A  
                          _FVR_Initialize 046B                                _OPTION_REG 0095  
             _FRIMWARE_VERSION_EEPROM_ADR 007C                           _TMR0_Initialize 0370  
                 __end_of_BAD_WSP_VOLTAGE 0476                               ??_switch_wm 003B  
                             _time_zummer 0025                        __end_of_switch_zum 03E8  
          __end_of_PIN_MANAGER_Initialize 03B0                     _TMR2_InterruptHandler 003E  
                             _toggle_tone 042D                             ?_get_fun_full 0070  
                            ?_get_measure 0070  
