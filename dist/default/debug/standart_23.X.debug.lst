

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri May 06 12:36:52 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1823
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	text41,local,class=CODE,merge=1,delta=2
    55                           	psect	text42,local,class=CODE,merge=1,delta=2
    56                           	psect	text43,local,class=CODE,merge=1,delta=2
    57                           	psect	text44,local,class=CODE,merge=1,delta=2
    58                           	psect	text45,local,class=CODE,merge=1,delta=2
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    61                           	dabs	1,0x7E,2
    62  0000                     
    63                           ; Version 2.40
    64                           ; Generated 17/11/2021 GMT
    65                           ; 
    66                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F1823 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  0007                     	;# 
   106  0008                     	;# 
   107  0009                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000E                     	;# 
   112  0011                     	;# 
   113  0012                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001C                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  008C                     	;# 
   126  008E                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0095                     	;# 
   130  0096                     	;# 
   131  0097                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  010C                     	;# 
   141  010E                     	;# 
   142  0111                     	;# 
   143  0112                     	;# 
   144  0113                     	;# 
   145  0114                     	;# 
   146  0115                     	;# 
   147  0116                     	;# 
   148  0117                     	;# 
   149  0118                     	;# 
   150  0119                     	;# 
   151  011A                     	;# 
   152  011B                     	;# 
   153  011D                     	;# 
   154  011D                     	;# 
   155  018C                     	;# 
   156  018E                     	;# 
   157  0191                     	;# 
   158  0191                     	;# 
   159  0192                     	;# 
   160  0193                     	;# 
   161  0193                     	;# 
   162  0193                     	;# 
   163  0194                     	;# 
   164  0195                     	;# 
   165  0196                     	;# 
   166  0199                     	;# 
   167  019A                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019D                     	;# 
   175  019E                     	;# 
   176  019F                     	;# 
   177  020C                     	;# 
   178  020E                     	;# 
   179  0211                     	;# 
   180  0211                     	;# 
   181  0212                     	;# 
   182  0212                     	;# 
   183  0213                     	;# 
   184  0213                     	;# 
   185  0214                     	;# 
   186  0214                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0215                     	;# 
   190  0216                     	;# 
   191  0216                     	;# 
   192  0217                     	;# 
   193  0217                     	;# 
   194  0291                     	;# 
   195  0291                     	;# 
   196  0292                     	;# 
   197  0293                     	;# 
   198  0294                     	;# 
   199  0295                     	;# 
   200  0295                     	;# 
   201  0296                     	;# 
   202  0391                     	;# 
   203  0392                     	;# 
   204  0393                     	;# 
   205  039A                     	;# 
   206  039C                     	;# 
   207  039D                     	;# 
   208  039E                     	;# 
   209  039F                     	;# 
   210  0FE4                     	;# 
   211  0FE5                     	;# 
   212  0FE6                     	;# 
   213  0FE7                     	;# 
   214  0FE8                     	;# 
   215  0FE9                     	;# 
   216  0FEA                     	;# 
   217  0FEB                     	;# 
   218  0FED                     	;# 
   219  0FEE                     	;# 
   220  0FEF                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000E                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  008C                     	;# 
   249  008E                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0095                     	;# 
   253  0096                     	;# 
   254  0097                     	;# 
   255  0098                     	;# 
   256  0099                     	;# 
   257  009A                     	;# 
   258  009B                     	;# 
   259  009B                     	;# 
   260  009C                     	;# 
   261  009D                     	;# 
   262  009E                     	;# 
   263  010C                     	;# 
   264  010E                     	;# 
   265  0111                     	;# 
   266  0112                     	;# 
   267  0113                     	;# 
   268  0114                     	;# 
   269  0115                     	;# 
   270  0116                     	;# 
   271  0117                     	;# 
   272  0118                     	;# 
   273  0119                     	;# 
   274  011A                     	;# 
   275  011B                     	;# 
   276  011D                     	;# 
   277  011D                     	;# 
   278  018C                     	;# 
   279  018E                     	;# 
   280  0191                     	;# 
   281  0191                     	;# 
   282  0192                     	;# 
   283  0193                     	;# 
   284  0193                     	;# 
   285  0193                     	;# 
   286  0194                     	;# 
   287  0195                     	;# 
   288  0196                     	;# 
   289  0199                     	;# 
   290  019A                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019B                     	;# 
   294  019B                     	;# 
   295  019C                     	;# 
   296  019C                     	;# 
   297  019D                     	;# 
   298  019E                     	;# 
   299  019F                     	;# 
   300  020C                     	;# 
   301  020E                     	;# 
   302  0211                     	;# 
   303  0211                     	;# 
   304  0212                     	;# 
   305  0212                     	;# 
   306  0213                     	;# 
   307  0213                     	;# 
   308  0214                     	;# 
   309  0214                     	;# 
   310  0215                     	;# 
   311  0215                     	;# 
   312  0215                     	;# 
   313  0216                     	;# 
   314  0216                     	;# 
   315  0217                     	;# 
   316  0217                     	;# 
   317  0291                     	;# 
   318  0291                     	;# 
   319  0292                     	;# 
   320  0293                     	;# 
   321  0294                     	;# 
   322  0295                     	;# 
   323  0295                     	;# 
   324  0296                     	;# 
   325  0391                     	;# 
   326  0392                     	;# 
   327  0393                     	;# 
   328  039A                     	;# 
   329  039C                     	;# 
   330  039D                     	;# 
   331  039E                     	;# 
   332  039F                     	;# 
   333  0FE4                     	;# 
   334  0FE5                     	;# 
   335  0FE6                     	;# 
   336  0FE7                     	;# 
   337  0FE8                     	;# 
   338  0FE9                     	;# 
   339  0FEA                     	;# 
   340  0FEB                     	;# 
   341  0FED                     	;# 
   342  0FEE                     	;# 
   343  0FEF                     	;# 
   344  0000                     	;# 
   345  0001                     	;# 
   346  0002                     	;# 
   347  0003                     	;# 
   348  0004                     	;# 
   349  0005                     	;# 
   350  0006                     	;# 
   351  0007                     	;# 
   352  0008                     	;# 
   353  0009                     	;# 
   354  000A                     	;# 
   355  000B                     	;# 
   356  000C                     	;# 
   357  000E                     	;# 
   358  0011                     	;# 
   359  0012                     	;# 
   360  0015                     	;# 
   361  0016                     	;# 
   362  0016                     	;# 
   363  0017                     	;# 
   364  0018                     	;# 
   365  0019                     	;# 
   366  001A                     	;# 
   367  001B                     	;# 
   368  001C                     	;# 
   369  001E                     	;# 
   370  001F                     	;# 
   371  008C                     	;# 
   372  008E                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0095                     	;# 
   376  0096                     	;# 
   377  0097                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009A                     	;# 
   381  009B                     	;# 
   382  009B                     	;# 
   383  009C                     	;# 
   384  009D                     	;# 
   385  009E                     	;# 
   386  010C                     	;# 
   387  010E                     	;# 
   388  0111                     	;# 
   389  0112                     	;# 
   390  0113                     	;# 
   391  0114                     	;# 
   392  0115                     	;# 
   393  0116                     	;# 
   394  0117                     	;# 
   395  0118                     	;# 
   396  0119                     	;# 
   397  011A                     	;# 
   398  011B                     	;# 
   399  011D                     	;# 
   400  011D                     	;# 
   401  018C                     	;# 
   402  018E                     	;# 
   403  0191                     	;# 
   404  0191                     	;# 
   405  0192                     	;# 
   406  0193                     	;# 
   407  0193                     	;# 
   408  0193                     	;# 
   409  0194                     	;# 
   410  0195                     	;# 
   411  0196                     	;# 
   412  0199                     	;# 
   413  019A                     	;# 
   414  019B                     	;# 
   415  019B                     	;# 
   416  019B                     	;# 
   417  019B                     	;# 
   418  019C                     	;# 
   419  019C                     	;# 
   420  019D                     	;# 
   421  019E                     	;# 
   422  019F                     	;# 
   423  020C                     	;# 
   424  020E                     	;# 
   425  0211                     	;# 
   426  0211                     	;# 
   427  0212                     	;# 
   428  0212                     	;# 
   429  0213                     	;# 
   430  0213                     	;# 
   431  0214                     	;# 
   432  0214                     	;# 
   433  0215                     	;# 
   434  0215                     	;# 
   435  0215                     	;# 
   436  0216                     	;# 
   437  0216                     	;# 
   438  0217                     	;# 
   439  0217                     	;# 
   440  0291                     	;# 
   441  0291                     	;# 
   442  0292                     	;# 
   443  0293                     	;# 
   444  0294                     	;# 
   445  0295                     	;# 
   446  0295                     	;# 
   447  0296                     	;# 
   448  0391                     	;# 
   449  0392                     	;# 
   450  0393                     	;# 
   451  039A                     	;# 
   452  039C                     	;# 
   453  039D                     	;# 
   454  039E                     	;# 
   455  039F                     	;# 
   456  0FE4                     	;# 
   457  0FE5                     	;# 
   458  0FE6                     	;# 
   459  0FE7                     	;# 
   460  0FE8                     	;# 
   461  0FE9                     	;# 
   462  0FEA                     	;# 
   463  0FEB                     	;# 
   464  0FED                     	;# 
   465  0FEE                     	;# 
   466  0FEF                     	;# 
   467  0000                     	;# 
   468  0001                     	;# 
   469  0002                     	;# 
   470  0003                     	;# 
   471  0004                     	;# 
   472  0005                     	;# 
   473  0006                     	;# 
   474  0007                     	;# 
   475  0008                     	;# 
   476  0009                     	;# 
   477  000A                     	;# 
   478  000B                     	;# 
   479  000C                     	;# 
   480  000E                     	;# 
   481  0011                     	;# 
   482  0012                     	;# 
   483  0015                     	;# 
   484  0016                     	;# 
   485  0016                     	;# 
   486  0017                     	;# 
   487  0018                     	;# 
   488  0019                     	;# 
   489  001A                     	;# 
   490  001B                     	;# 
   491  001C                     	;# 
   492  001E                     	;# 
   493  001F                     	;# 
   494  008C                     	;# 
   495  008E                     	;# 
   496  0091                     	;# 
   497  0092                     	;# 
   498  0095                     	;# 
   499  0096                     	;# 
   500  0097                     	;# 
   501  0098                     	;# 
   502  0099                     	;# 
   503  009A                     	;# 
   504  009B                     	;# 
   505  009B                     	;# 
   506  009C                     	;# 
   507  009D                     	;# 
   508  009E                     	;# 
   509  010C                     	;# 
   510  010E                     	;# 
   511  0111                     	;# 
   512  0112                     	;# 
   513  0113                     	;# 
   514  0114                     	;# 
   515  0115                     	;# 
   516  0116                     	;# 
   517  0117                     	;# 
   518  0118                     	;# 
   519  0119                     	;# 
   520  011A                     	;# 
   521  011B                     	;# 
   522  011D                     	;# 
   523  011D                     	;# 
   524  018C                     	;# 
   525  018E                     	;# 
   526  0191                     	;# 
   527  0191                     	;# 
   528  0192                     	;# 
   529  0193                     	;# 
   530  0193                     	;# 
   531  0193                     	;# 
   532  0194                     	;# 
   533  0195                     	;# 
   534  0196                     	;# 
   535  0199                     	;# 
   536  019A                     	;# 
   537  019B                     	;# 
   538  019B                     	;# 
   539  019B                     	;# 
   540  019B                     	;# 
   541  019C                     	;# 
   542  019C                     	;# 
   543  019D                     	;# 
   544  019E                     	;# 
   545  019F                     	;# 
   546  020C                     	;# 
   547  020E                     	;# 
   548  0211                     	;# 
   549  0211                     	;# 
   550  0212                     	;# 
   551  0212                     	;# 
   552  0213                     	;# 
   553  0213                     	;# 
   554  0214                     	;# 
   555  0214                     	;# 
   556  0215                     	;# 
   557  0215                     	;# 
   558  0215                     	;# 
   559  0216                     	;# 
   560  0216                     	;# 
   561  0217                     	;# 
   562  0217                     	;# 
   563  0291                     	;# 
   564  0291                     	;# 
   565  0292                     	;# 
   566  0293                     	;# 
   567  0294                     	;# 
   568  0295                     	;# 
   569  0295                     	;# 
   570  0296                     	;# 
   571  0391                     	;# 
   572  0392                     	;# 
   573  0393                     	;# 
   574  039A                     	;# 
   575  039C                     	;# 
   576  039D                     	;# 
   577  039E                     	;# 
   578  039F                     	;# 
   579  0FE4                     	;# 
   580  0FE5                     	;# 
   581  0FE6                     	;# 
   582  0FE7                     	;# 
   583  0FE8                     	;# 
   584  0FE9                     	;# 
   585  0FEA                     	;# 
   586  0FEB                     	;# 
   587  0FED                     	;# 
   588  0FEE                     	;# 
   589  0FEF                     	;# 
   590  0000                     	;# 
   591  0001                     	;# 
   592  0002                     	;# 
   593  0003                     	;# 
   594  0004                     	;# 
   595  0005                     	;# 
   596  0006                     	;# 
   597  0007                     	;# 
   598  0008                     	;# 
   599  0009                     	;# 
   600  000A                     	;# 
   601  000B                     	;# 
   602  000C                     	;# 
   603  000E                     	;# 
   604  0011                     	;# 
   605  0012                     	;# 
   606  0015                     	;# 
   607  0016                     	;# 
   608  0016                     	;# 
   609  0017                     	;# 
   610  0018                     	;# 
   611  0019                     	;# 
   612  001A                     	;# 
   613  001B                     	;# 
   614  001C                     	;# 
   615  001E                     	;# 
   616  001F                     	;# 
   617  008C                     	;# 
   618  008E                     	;# 
   619  0091                     	;# 
   620  0092                     	;# 
   621  0095                     	;# 
   622  0096                     	;# 
   623  0097                     	;# 
   624  0098                     	;# 
   625  0099                     	;# 
   626  009A                     	;# 
   627  009B                     	;# 
   628  009B                     	;# 
   629  009C                     	;# 
   630  009D                     	;# 
   631  009E                     	;# 
   632  010C                     	;# 
   633  010E                     	;# 
   634  0111                     	;# 
   635  0112                     	;# 
   636  0113                     	;# 
   637  0114                     	;# 
   638  0115                     	;# 
   639  0116                     	;# 
   640  0117                     	;# 
   641  0118                     	;# 
   642  0119                     	;# 
   643  011A                     	;# 
   644  011B                     	;# 
   645  011D                     	;# 
   646  011D                     	;# 
   647  018C                     	;# 
   648  018E                     	;# 
   649  0191                     	;# 
   650  0191                     	;# 
   651  0192                     	;# 
   652  0193                     	;# 
   653  0193                     	;# 
   654  0193                     	;# 
   655  0194                     	;# 
   656  0195                     	;# 
   657  0196                     	;# 
   658  0199                     	;# 
   659  019A                     	;# 
   660  019B                     	;# 
   661  019B                     	;# 
   662  019B                     	;# 
   663  019B                     	;# 
   664  019C                     	;# 
   665  019C                     	;# 
   666  019D                     	;# 
   667  019E                     	;# 
   668  019F                     	;# 
   669  020C                     	;# 
   670  020E                     	;# 
   671  0211                     	;# 
   672  0211                     	;# 
   673  0212                     	;# 
   674  0212                     	;# 
   675  0213                     	;# 
   676  0213                     	;# 
   677  0214                     	;# 
   678  0214                     	;# 
   679  0215                     	;# 
   680  0215                     	;# 
   681  0215                     	;# 
   682  0216                     	;# 
   683  0216                     	;# 
   684  0217                     	;# 
   685  0217                     	;# 
   686  0291                     	;# 
   687  0291                     	;# 
   688  0292                     	;# 
   689  0293                     	;# 
   690  0294                     	;# 
   691  0295                     	;# 
   692  0295                     	;# 
   693  0296                     	;# 
   694  0391                     	;# 
   695  0392                     	;# 
   696  0393                     	;# 
   697  039A                     	;# 
   698  039C                     	;# 
   699  039D                     	;# 
   700  039E                     	;# 
   701  039F                     	;# 
   702  0FE4                     	;# 
   703  0FE5                     	;# 
   704  0FE6                     	;# 
   705  0FE7                     	;# 
   706  0FE8                     	;# 
   707  0FE9                     	;# 
   708  0FEA                     	;# 
   709  0FEB                     	;# 
   710  0FED                     	;# 
   711  0FEE                     	;# 
   712  0FEF                     	;# 
   713  0000                     	;# 
   714  0001                     	;# 
   715  0002                     	;# 
   716  0003                     	;# 
   717  0004                     	;# 
   718  0005                     	;# 
   719  0006                     	;# 
   720  0007                     	;# 
   721  0008                     	;# 
   722  0009                     	;# 
   723  000A                     	;# 
   724  000B                     	;# 
   725  000C                     	;# 
   726  000E                     	;# 
   727  0011                     	;# 
   728  0012                     	;# 
   729  0015                     	;# 
   730  0016                     	;# 
   731  0016                     	;# 
   732  0017                     	;# 
   733  0018                     	;# 
   734  0019                     	;# 
   735  001A                     	;# 
   736  001B                     	;# 
   737  001C                     	;# 
   738  001E                     	;# 
   739  001F                     	;# 
   740  008C                     	;# 
   741  008E                     	;# 
   742  0091                     	;# 
   743  0092                     	;# 
   744  0095                     	;# 
   745  0096                     	;# 
   746  0097                     	;# 
   747  0098                     	;# 
   748  0099                     	;# 
   749  009A                     	;# 
   750  009B                     	;# 
   751  009B                     	;# 
   752  009C                     	;# 
   753  009D                     	;# 
   754  009E                     	;# 
   755  010C                     	;# 
   756  010E                     	;# 
   757  0111                     	;# 
   758  0112                     	;# 
   759  0113                     	;# 
   760  0114                     	;# 
   761  0115                     	;# 
   762  0116                     	;# 
   763  0117                     	;# 
   764  0118                     	;# 
   765  0119                     	;# 
   766  011A                     	;# 
   767  011B                     	;# 
   768  011D                     	;# 
   769  011D                     	;# 
   770  018C                     	;# 
   771  018E                     	;# 
   772  0191                     	;# 
   773  0191                     	;# 
   774  0192                     	;# 
   775  0193                     	;# 
   776  0193                     	;# 
   777  0193                     	;# 
   778  0194                     	;# 
   779  0195                     	;# 
   780  0196                     	;# 
   781  0199                     	;# 
   782  019A                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019B                     	;# 
   787  019C                     	;# 
   788  019C                     	;# 
   789  019D                     	;# 
   790  019E                     	;# 
   791  019F                     	;# 
   792  020C                     	;# 
   793  020E                     	;# 
   794  0211                     	;# 
   795  0211                     	;# 
   796  0212                     	;# 
   797  0212                     	;# 
   798  0213                     	;# 
   799  0213                     	;# 
   800  0214                     	;# 
   801  0214                     	;# 
   802  0215                     	;# 
   803  0215                     	;# 
   804  0215                     	;# 
   805  0216                     	;# 
   806  0216                     	;# 
   807  0217                     	;# 
   808  0217                     	;# 
   809  0291                     	;# 
   810  0291                     	;# 
   811  0292                     	;# 
   812  0293                     	;# 
   813  0294                     	;# 
   814  0295                     	;# 
   815  0295                     	;# 
   816  0296                     	;# 
   817  0391                     	;# 
   818  0392                     	;# 
   819  0393                     	;# 
   820  039A                     	;# 
   821  039C                     	;# 
   822  039D                     	;# 
   823  039E                     	;# 
   824  039F                     	;# 
   825  0FE4                     	;# 
   826  0FE5                     	;# 
   827  0FE6                     	;# 
   828  0FE7                     	;# 
   829  0FE8                     	;# 
   830  0FE9                     	;# 
   831  0FEA                     	;# 
   832  0FEB                     	;# 
   833  0FED                     	;# 
   834  0FEE                     	;# 
   835  0FEF                     	;# 
   836  0000                     	;# 
   837  0001                     	;# 
   838  0002                     	;# 
   839  0003                     	;# 
   840  0004                     	;# 
   841  0005                     	;# 
   842  0006                     	;# 
   843  0007                     	;# 
   844  0008                     	;# 
   845  0009                     	;# 
   846  000A                     	;# 
   847  000B                     	;# 
   848  000C                     	;# 
   849  000E                     	;# 
   850  0011                     	;# 
   851  0012                     	;# 
   852  0015                     	;# 
   853  0016                     	;# 
   854  0016                     	;# 
   855  0017                     	;# 
   856  0018                     	;# 
   857  0019                     	;# 
   858  001A                     	;# 
   859  001B                     	;# 
   860  001C                     	;# 
   861  001E                     	;# 
   862  001F                     	;# 
   863  008C                     	;# 
   864  008E                     	;# 
   865  0091                     	;# 
   866  0092                     	;# 
   867  0095                     	;# 
   868  0096                     	;# 
   869  0097                     	;# 
   870  0098                     	;# 
   871  0099                     	;# 
   872  009A                     	;# 
   873  009B                     	;# 
   874  009B                     	;# 
   875  009C                     	;# 
   876  009D                     	;# 
   877  009E                     	;# 
   878  010C                     	;# 
   879  010E                     	;# 
   880  0111                     	;# 
   881  0112                     	;# 
   882  0113                     	;# 
   883  0114                     	;# 
   884  0115                     	;# 
   885  0116                     	;# 
   886  0117                     	;# 
   887  0118                     	;# 
   888  0119                     	;# 
   889  011A                     	;# 
   890  011B                     	;# 
   891  011D                     	;# 
   892  011D                     	;# 
   893  018C                     	;# 
   894  018E                     	;# 
   895  0191                     	;# 
   896  0191                     	;# 
   897  0192                     	;# 
   898  0193                     	;# 
   899  0193                     	;# 
   900  0193                     	;# 
   901  0194                     	;# 
   902  0195                     	;# 
   903  0196                     	;# 
   904  0199                     	;# 
   905  019A                     	;# 
   906  019B                     	;# 
   907  019B                     	;# 
   908  019B                     	;# 
   909  019B                     	;# 
   910  019C                     	;# 
   911  019C                     	;# 
   912  019D                     	;# 
   913  019E                     	;# 
   914  019F                     	;# 
   915  020C                     	;# 
   916  020E                     	;# 
   917  0211                     	;# 
   918  0211                     	;# 
   919  0212                     	;# 
   920  0212                     	;# 
   921  0213                     	;# 
   922  0213                     	;# 
   923  0214                     	;# 
   924  0214                     	;# 
   925  0215                     	;# 
   926  0215                     	;# 
   927  0215                     	;# 
   928  0216                     	;# 
   929  0216                     	;# 
   930  0217                     	;# 
   931  0217                     	;# 
   932  0291                     	;# 
   933  0291                     	;# 
   934  0292                     	;# 
   935  0293                     	;# 
   936  0294                     	;# 
   937  0295                     	;# 
   938  0295                     	;# 
   939  0296                     	;# 
   940  0391                     	;# 
   941  0392                     	;# 
   942  0393                     	;# 
   943  039A                     	;# 
   944  039C                     	;# 
   945  039D                     	;# 
   946  039E                     	;# 
   947  039F                     	;# 
   948  0FE4                     	;# 
   949  0FE5                     	;# 
   950  0FE6                     	;# 
   951  0FE7                     	;# 
   952  0FE8                     	;# 
   953  0FE9                     	;# 
   954  0FEA                     	;# 
   955  0FEB                     	;# 
   956  0FED                     	;# 
   957  0FEE                     	;# 
   958  0FEF                     	;# 
   959  0000                     	;# 
   960  0001                     	;# 
   961  0002                     	;# 
   962  0003                     	;# 
   963  0004                     	;# 
   964  0005                     	;# 
   965  0006                     	;# 
   966  0007                     	;# 
   967  0008                     	;# 
   968  0009                     	;# 
   969  000A                     	;# 
   970  000B                     	;# 
   971  000C                     	;# 
   972  000E                     	;# 
   973  0011                     	;# 
   974  0012                     	;# 
   975  0015                     	;# 
   976  0016                     	;# 
   977  0016                     	;# 
   978  0017                     	;# 
   979  0018                     	;# 
   980  0019                     	;# 
   981  001A                     	;# 
   982  001B                     	;# 
   983  001C                     	;# 
   984  001E                     	;# 
   985  001F                     	;# 
   986  008C                     	;# 
   987  008E                     	;# 
   988  0091                     	;# 
   989  0092                     	;# 
   990  0095                     	;# 
   991  0096                     	;# 
   992  0097                     	;# 
   993  0098                     	;# 
   994  0099                     	;# 
   995  009A                     	;# 
   996  009B                     	;# 
   997  009B                     	;# 
   998  009C                     	;# 
   999  009D                     	;# 
  1000  009E                     	;# 
  1001  010C                     	;# 
  1002  010E                     	;# 
  1003  0111                     	;# 
  1004  0112                     	;# 
  1005  0113                     	;# 
  1006  0114                     	;# 
  1007  0115                     	;# 
  1008  0116                     	;# 
  1009  0117                     	;# 
  1010  0118                     	;# 
  1011  0119                     	;# 
  1012  011A                     	;# 
  1013  011B                     	;# 
  1014  011D                     	;# 
  1015  011D                     	;# 
  1016  018C                     	;# 
  1017  018E                     	;# 
  1018  0191                     	;# 
  1019  0191                     	;# 
  1020  0192                     	;# 
  1021  0193                     	;# 
  1022  0193                     	;# 
  1023  0193                     	;# 
  1024  0194                     	;# 
  1025  0195                     	;# 
  1026  0196                     	;# 
  1027  0199                     	;# 
  1028  019A                     	;# 
  1029  019B                     	;# 
  1030  019B                     	;# 
  1031  019B                     	;# 
  1032  019B                     	;# 
  1033  019C                     	;# 
  1034  019C                     	;# 
  1035  019D                     	;# 
  1036  019E                     	;# 
  1037  019F                     	;# 
  1038  020C                     	;# 
  1039  020E                     	;# 
  1040  0211                     	;# 
  1041  0211                     	;# 
  1042  0212                     	;# 
  1043  0212                     	;# 
  1044  0213                     	;# 
  1045  0213                     	;# 
  1046  0214                     	;# 
  1047  0214                     	;# 
  1048  0215                     	;# 
  1049  0215                     	;# 
  1050  0215                     	;# 
  1051  0216                     	;# 
  1052  0216                     	;# 
  1053  0217                     	;# 
  1054  0217                     	;# 
  1055  0291                     	;# 
  1056  0291                     	;# 
  1057  0292                     	;# 
  1058  0293                     	;# 
  1059  0294                     	;# 
  1060  0295                     	;# 
  1061  0295                     	;# 
  1062  0296                     	;# 
  1063  0391                     	;# 
  1064  0392                     	;# 
  1065  0393                     	;# 
  1066  039A                     	;# 
  1067  039C                     	;# 
  1068  039D                     	;# 
  1069  039E                     	;# 
  1070  039F                     	;# 
  1071  0FE4                     	;# 
  1072  0FE5                     	;# 
  1073  0FE6                     	;# 
  1074  0FE7                     	;# 
  1075  0FE8                     	;# 
  1076  0FE9                     	;# 
  1077  0FEA                     	;# 
  1078  0FEB                     	;# 
  1079  0FED                     	;# 
  1080  0FEE                     	;# 
  1081  0FEF                     	;# 
  1082  0000                     	;# 
  1083  0001                     	;# 
  1084  0002                     	;# 
  1085  0003                     	;# 
  1086  0004                     	;# 
  1087  0005                     	;# 
  1088  0006                     	;# 
  1089  0007                     	;# 
  1090  0008                     	;# 
  1091  0009                     	;# 
  1092  000A                     	;# 
  1093  000B                     	;# 
  1094  000C                     	;# 
  1095  000E                     	;# 
  1096  0011                     	;# 
  1097  0012                     	;# 
  1098  0015                     	;# 
  1099  0016                     	;# 
  1100  0016                     	;# 
  1101  0017                     	;# 
  1102  0018                     	;# 
  1103  0019                     	;# 
  1104  001A                     	;# 
  1105  001B                     	;# 
  1106  001C                     	;# 
  1107  001E                     	;# 
  1108  001F                     	;# 
  1109  008C                     	;# 
  1110  008E                     	;# 
  1111  0091                     	;# 
  1112  0092                     	;# 
  1113  0095                     	;# 
  1114  0096                     	;# 
  1115  0097                     	;# 
  1116  0098                     	;# 
  1117  0099                     	;# 
  1118  009A                     	;# 
  1119  009B                     	;# 
  1120  009B                     	;# 
  1121  009C                     	;# 
  1122  009D                     	;# 
  1123  009E                     	;# 
  1124  010C                     	;# 
  1125  010E                     	;# 
  1126  0111                     	;# 
  1127  0112                     	;# 
  1128  0113                     	;# 
  1129  0114                     	;# 
  1130  0115                     	;# 
  1131  0116                     	;# 
  1132  0117                     	;# 
  1133  0118                     	;# 
  1134  0119                     	;# 
  1135  011A                     	;# 
  1136  011B                     	;# 
  1137  011D                     	;# 
  1138  011D                     	;# 
  1139  018C                     	;# 
  1140  018E                     	;# 
  1141  0191                     	;# 
  1142  0191                     	;# 
  1143  0192                     	;# 
  1144  0193                     	;# 
  1145  0193                     	;# 
  1146  0193                     	;# 
  1147  0194                     	;# 
  1148  0195                     	;# 
  1149  0196                     	;# 
  1150  0199                     	;# 
  1151  019A                     	;# 
  1152  019B                     	;# 
  1153  019B                     	;# 
  1154  019B                     	;# 
  1155  019B                     	;# 
  1156  019C                     	;# 
  1157  019C                     	;# 
  1158  019D                     	;# 
  1159  019E                     	;# 
  1160  019F                     	;# 
  1161  020C                     	;# 
  1162  020E                     	;# 
  1163  0211                     	;# 
  1164  0211                     	;# 
  1165  0212                     	;# 
  1166  0212                     	;# 
  1167  0213                     	;# 
  1168  0213                     	;# 
  1169  0214                     	;# 
  1170  0214                     	;# 
  1171  0215                     	;# 
  1172  0215                     	;# 
  1173  0215                     	;# 
  1174  0216                     	;# 
  1175  0216                     	;# 
  1176  0217                     	;# 
  1177  0217                     	;# 
  1178  0291                     	;# 
  1179  0291                     	;# 
  1180  0292                     	;# 
  1181  0293                     	;# 
  1182  0294                     	;# 
  1183  0295                     	;# 
  1184  0295                     	;# 
  1185  0296                     	;# 
  1186  0391                     	;# 
  1187  0392                     	;# 
  1188  0393                     	;# 
  1189  039A                     	;# 
  1190  039C                     	;# 
  1191  039D                     	;# 
  1192  039E                     	;# 
  1193  039F                     	;# 
  1194  0FE4                     	;# 
  1195  0FE5                     	;# 
  1196  0FE6                     	;# 
  1197  0FE7                     	;# 
  1198  0FE8                     	;# 
  1199  0FE9                     	;# 
  1200  0FEA                     	;# 
  1201  0FEB                     	;# 
  1202  0FED                     	;# 
  1203  0FEE                     	;# 
  1204  0FEF                     	;# 
  1205  0000                     	;# 
  1206  0001                     	;# 
  1207  0002                     	;# 
  1208  0003                     	;# 
  1209  0004                     	;# 
  1210  0005                     	;# 
  1211  0006                     	;# 
  1212  0007                     	;# 
  1213  0008                     	;# 
  1214  0009                     	;# 
  1215  000A                     	;# 
  1216  000B                     	;# 
  1217  000C                     	;# 
  1218  000E                     	;# 
  1219  0011                     	;# 
  1220  0012                     	;# 
  1221  0015                     	;# 
  1222  0016                     	;# 
  1223  0016                     	;# 
  1224  0017                     	;# 
  1225  0018                     	;# 
  1226  0019                     	;# 
  1227  001A                     	;# 
  1228  001B                     	;# 
  1229  001C                     	;# 
  1230  001E                     	;# 
  1231  001F                     	;# 
  1232  008C                     	;# 
  1233  008E                     	;# 
  1234  0091                     	;# 
  1235  0092                     	;# 
  1236  0095                     	;# 
  1237  0096                     	;# 
  1238  0097                     	;# 
  1239  0098                     	;# 
  1240  0099                     	;# 
  1241  009A                     	;# 
  1242  009B                     	;# 
  1243  009B                     	;# 
  1244  009C                     	;# 
  1245  009D                     	;# 
  1246  009E                     	;# 
  1247  010C                     	;# 
  1248  010E                     	;# 
  1249  0111                     	;# 
  1250  0112                     	;# 
  1251  0113                     	;# 
  1252  0114                     	;# 
  1253  0115                     	;# 
  1254  0116                     	;# 
  1255  0117                     	;# 
  1256  0118                     	;# 
  1257  0119                     	;# 
  1258  011A                     	;# 
  1259  011B                     	;# 
  1260  011D                     	;# 
  1261  011D                     	;# 
  1262  018C                     	;# 
  1263  018E                     	;# 
  1264  0191                     	;# 
  1265  0191                     	;# 
  1266  0192                     	;# 
  1267  0193                     	;# 
  1268  0193                     	;# 
  1269  0193                     	;# 
  1270  0194                     	;# 
  1271  0195                     	;# 
  1272  0196                     	;# 
  1273  0199                     	;# 
  1274  019A                     	;# 
  1275  019B                     	;# 
  1276  019B                     	;# 
  1277  019B                     	;# 
  1278  019B                     	;# 
  1279  019C                     	;# 
  1280  019C                     	;# 
  1281  019D                     	;# 
  1282  019E                     	;# 
  1283  019F                     	;# 
  1284  020C                     	;# 
  1285  020E                     	;# 
  1286  0211                     	;# 
  1287  0211                     	;# 
  1288  0212                     	;# 
  1289  0212                     	;# 
  1290  0213                     	;# 
  1291  0213                     	;# 
  1292  0214                     	;# 
  1293  0214                     	;# 
  1294  0215                     	;# 
  1295  0215                     	;# 
  1296  0215                     	;# 
  1297  0216                     	;# 
  1298  0216                     	;# 
  1299  0217                     	;# 
  1300  0217                     	;# 
  1301  0291                     	;# 
  1302  0291                     	;# 
  1303  0292                     	;# 
  1304  0293                     	;# 
  1305  0294                     	;# 
  1306  0295                     	;# 
  1307  0295                     	;# 
  1308  0296                     	;# 
  1309  0391                     	;# 
  1310  0392                     	;# 
  1311  0393                     	;# 
  1312  039A                     	;# 
  1313  039C                     	;# 
  1314  039D                     	;# 
  1315  039E                     	;# 
  1316  039F                     	;# 
  1317  0FE4                     	;# 
  1318  0FE5                     	;# 
  1319  0FE6                     	;# 
  1320  0FE7                     	;# 
  1321  0FE8                     	;# 
  1322  0FE9                     	;# 
  1323  0FEA                     	;# 
  1324  0FEB                     	;# 
  1325  0FED                     	;# 
  1326  0FEE                     	;# 
  1327  0FEF                     	;# 
  1328                           
  1329                           	psect	stringtext1
  1330  0547                     __pstringtext1:
  1331  0547                     _ROTATION_TIME:
  1332  0547  3478               	retlw	120
  1333  0548  3400               	retlw	0
  1334  0549  3400               	retlw	0
  1335  054A                     __end_of_ROTATION_TIME:
  1336                           
  1337                           	psect	stringtext2
  1338  054A                     __pstringtext2:
  1339  054A                     _GOOD_WSP_VOLTAGE:
  1340  054A  3487               	retlw	135
  1341  054B  3400               	retlw	0
  1342  054C  3400               	retlw	0
  1343  054D                     __end_of_GOOD_WSP_VOLTAGE:
  1344                           
  1345                           	psect	stringtext3
  1346  054D                     __pstringtext3:
  1347  054D                     _BAD_WSP_VOLTAGE:
  1348  054D  3478               	retlw	120
  1349  054E  3400               	retlw	0
  1350  054F  3400               	retlw	0
  1351  0550                     __end_of_BAD_WSP_VOLTAGE:
  1352                           
  1353                           	psect	nvBANK0
  1354  0041                     __pnvBANK0:
  1355  0041                     _TMR0_InterruptHandler:
  1356  0041                     	ds	2
  1357  0043                     _TMR2_InterruptHandler:
  1358  0043                     	ds	2
  1359  0045                     _timer0ReloadVal:
  1360  0045                     	ds	1
  1361  0015                     _TMR0	set	21
  1362  001C                     _T2CONbits	set	28
  1363  001C                     _T2CON	set	28
  1364  001A                     _TMR2	set	26
  1365  001B                     _PR2	set	27
  1366  0011                     _PIR1bits	set	17
  1367  000B                     _INTCONbits	set	11
  1368  005F                     _GIE	set	95
  1369  008E                     _TRISCbits	set	142
  1370  008C                     _TRISAbits	set	140
  1371  0095                     _OPTION_REG	set	149
  1372  0091                     _PIE1bits	set	145
  1373  0095                     _OPTION_REGbits	set	149
  1374  008E                     _TRISC	set	142
  1375  008C                     _TRISA	set	140
  1376  009D                     _ADCON0bits	set	157
  1377  009D                     _ADCON0	set	157
  1378  009C                     _ADRESH	set	156
  1379  009B                     _ADRESL	set	155
  1380  009E                     _ADCON1	set	158
  1381  0097                     _WDTCON	set	151
  1382  0098                     _OSCTUNE	set	152
  1383  0099                     _OSCCON	set	153
  1384  010E                     _LATCbits	set	270
  1385  010C                     _LATAbits	set	268
  1386  0117                     _FVRCONbits	set	279
  1387  0117                     _FVRCON	set	279
  1388  011D                     _APFCON	set	285
  1389  010E                     _LATC	set	270
  1390  010C                     _LATA	set	268
  1391  0116                     _BORCON	set	278
  1392  0191                     _EEADR	set	401
  1393  0196                     _EECON2	set	406
  1394  0193                     _EEDATA	set	403
  1395  018C                     _ANSELAbits	set	396
  1396  018E                     _ANSELCbits	set	398
  1397  018C                     _ANSELA	set	396
  1398  018E                     _ANSELC	set	398
  1399  0CA8                     _RD	set	3240
  1400  0CAA                     _WREN	set	3242
  1401  0CA9                     _WR	set	3241
  1402  020E                     _WPUCbits	set	526
  1403  020C                     _WPUAbits	set	524
  1404  020E                     _WPUC	set	526
  1405  020C                     _WPUA	set	524
  1406                           
  1407                           	psect	cinit
  1408  0027                     start_initialization:	
  1409                           ; #config settings
  1410                           
  1411  0027                     __initialization:
  1412                           
  1413                           ; Clear objects allocated to COMMON
  1414  0027  01F0               	clrf	__pbssCOMMON& (0+127)
  1415  0028  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1416  0029  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1417  002A  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1418  002B  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1419  002C  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1420  002D  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  1421                           
  1422                           ; Clear objects allocated to BANK0
  1423  002E  0020               	movlb	0	; select bank0
  1424  002F  01B8               	clrf	__pbssBANK0& (0+127)
  1425  0030  01B9               	clrf	(__pbssBANK0+1)& (0+127)
  1426  0031  01BA               	clrf	(__pbssBANK0+2)& (0+127)
  1427  0032  01BB               	clrf	(__pbssBANK0+3)& (0+127)
  1428  0033  01BC               	clrf	(__pbssBANK0+4)& (0+127)
  1429  0034  01BD               	clrf	(__pbssBANK0+5)& (0+127)
  1430  0035  01BE               	clrf	(__pbssBANK0+6)& (0+127)
  1431  0036  01BF               	clrf	(__pbssBANK0+7)& (0+127)
  1432  0037  01C0               	clrf	(__pbssBANK0+8)& (0+127)
  1433  0038                     end_of_initialization:	
  1434                           ;End of C runtime variable initialization code
  1435                           
  1436  0038                     __end_of__initialization:
  1437  0038  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1438  0039  0020               	movlb	0
  1439  003A  2BE7               	ljmp	_main	;jump to C main() function
  1440                           
  1441                           	psect	bssCOMMON
  1442  0070                     __pbssCOMMON:
  1443  0070                     TMR2_ISR@CountCallBack:
  1444  0070                     	ds	2
  1445  0072                     _ADC_InterruptHandler:
  1446  0072                     	ds	2
  1447  0074                     sec_tick_work@iled:
  1448  0074                     	ds	1
  1449  0075                     get_measure@measures:
  1450  0075                     	ds	1
  1451  0076                     _FLAGS:
  1452  0076                     	ds	1
  1453                           
  1454                           	psect	bssBANK0
  1455  0038                     __pbssBANK0:
  1456  0038                     _time_s:
  1457  0038                     	ds	3
  1458  003B                     get_jump_full@jump_counter:
  1459  003B                     	ds	1
  1460  003C                     get_jump@jump_counter:
  1461  003C                     	ds	1
  1462  003D                     get_fun_full@fun_counter:
  1463  003D                     	ds	1
  1464  003E                     get_fun@fun_counter:
  1465  003E                     	ds	1
  1466  003F                     _time_pow_s:
  1467  003F                     	ds	1
  1468  0040                     _START_EEPROM_ADR:
  1469  0040                     	ds	1
  1470                           
  1471                           	psect	cstackCOMMON
  1472  0077                     __pcstackCOMMON:
  1473  0077                     ?_PIN_MANAGER_Initialize:
  1474  0077                     ?_OSCILLATOR_Initialize:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  0077                     ?_WDT_Initialize:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480  0077                     ?_FVR_Initialize:	
  1481                           ; 1 bytes @ 0x0
  1482                           
  1483  0077                     ?_ADC_Initialize:	
  1484                           ; 1 bytes @ 0x0
  1485                           
  1486  0077                     ?_TMR2_Initialize:	
  1487                           ; 1 bytes @ 0x0
  1488                           
  1489  0077                     ?_TMR0_Initialize:	
  1490                           ; 1 bytes @ 0x0
  1491                           
  1492  0077                     ?_TMR0_ISR:	
  1493                           ; 1 bytes @ 0x0
  1494                           
  1495  0077                     ??_TMR0_ISR:	
  1496                           ; 1 bytes @ 0x0
  1497                           
  1498  0077                     ?_TMR2_ISR:	
  1499                           ; 1 bytes @ 0x0
  1500                           
  1501  0077                     ?_TMR2_DefaultInterruptHandler:	
  1502                           ; 1 bytes @ 0x0
  1503                           
  1504  0077                     ??_TMR2_DefaultInterruptHandler:	
  1505                           ; 1 bytes @ 0x0
  1506                           
  1507  0077                     ?_TMR2_CallBack:	
  1508                           ; 1 bytes @ 0x0
  1509                           
  1510  0077                     ?_TMR0_DefaultInterruptHandler:	
  1511                           ; 1 bytes @ 0x0
  1512                           
  1513  0077                     ??_TMR0_DefaultInterruptHandler:	
  1514                           ; 1 bytes @ 0x0
  1515                           
  1516  0077                     ?_EEPROM_ReadByte:	
  1517                           ; 1 bytes @ 0x0
  1518                           
  1519  0077                     ?_SYSTEM_Initialize:	
  1520                           ; 1 bytes @ 0x0
  1521                           
  1522  0077                     ?_ADC_GetConversion:	
  1523                           ; 1 bytes @ 0x0
  1524                           
  1525  0077                     ?_INTERRUPT_InterruptManager:	
  1526                           ; 1 bytes @ 0x0
  1527                           
  1528  0077                     ?_TMR2_StartTimer:	
  1529                           ; 1 bytes @ 0x0
  1530                           
  1531  0077                     ?_switch_zum:	
  1532                           ; 1 bytes @ 0x0
  1533                           
  1534  0077                     ?_toggle_tone:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537  0077                     ??_toggle_tone:	
  1538                           ; 1 bytes @ 0x0
  1539                           
  1540  0077                     ?_go_close:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543  0077                     ?_go_open:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546  0077                     ?_go_close_alt:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549  0077                     ?_go_open_alt:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552  0077                     ?_start_alarm:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555  0077                     ?_get_measure:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558  0077                     ?_get_fun:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561  0077                     ?_get_fun_full:	
  1562                           ; 1 bytes @ 0x0
  1563                           
  1564  0077                     ?_get_jump:	
  1565                           ; 1 bytes @ 0x0
  1566                           
  1567  0077                     ?_get_jump_full:	
  1568                           ; 1 bytes @ 0x0
  1569                           
  1570  0077                     ?_rele_tick:	
  1571                           ; 1 bytes @ 0x0
  1572                           
  1573  0077                     ??_rele_tick:	
  1574                           ; 1 bytes @ 0x0
  1575                           
  1576  0077                     ?_sec_tick_work:	
  1577                           ; 1 bytes @ 0x0
  1578                           
  1579  0077                     ?_povorot:	
  1580                           ; 1 bytes @ 0x0
  1581                           
  1582  0077                     ?_fun_work:	
  1583                           ; 1 bytes @ 0x0
  1584                           
  1585  0077                     ?_switch_wm:	
  1586                           ; 1 bytes @ 0x0
  1587                           
  1588  0077                     ?_get_voltage:	
  1589                           ; 1 bytes @ 0x0
  1590                           
  1591  0077                     ?_start_setup:	
  1592                           ; 1 bytes @ 0x0
  1593                           
  1594  0077                     ?_main:	
  1595                           ; 1 bytes @ 0x0
  1596                           
  1597  0077                     ?i1_ADC_GetConversion:	
  1598                           ; 1 bytes @ 0x0
  1599                           
  1600  0077                     ??i1_ADC_GetConversion:	
  1601                           ; 1 bytes @ 0x0
  1602                           
  1603  0077                     ?i1_switch_zum:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606  0077                     ??i1_switch_zum:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609  0077                     ?i1_go_close:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612  0077                     ??i1_go_close:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615  0077                     ?i1_go_close_alt:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618  0077                     ??i1_go_close_alt:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621                           
  1622                           ; 1 bytes @ 0x0
  1623  0077                     	ds	1
  1624  0078                     i1ADC_GetConversion@channel:
  1625                           
  1626                           ; 1 bytes @ 0x1
  1627  0078                     	ds	1
  1628  0079                     ??_start_alarm:
  1629  0079                     ??_get_measure:	
  1630                           ; 1 bytes @ 0x2
  1631                           
  1632                           
  1633                           ; 1 bytes @ 0x2
  1634  0079                     	ds	2
  1635  007B                     get_measure@res:
  1636                           
  1637                           ; 2 bytes @ 0x4
  1638  007B                     	ds	2
  1639  007D                     ??_sec_tick_work:
  1640                           
  1641                           ; 1 bytes @ 0x6
  1642  007D                     	ds	1
  1643  007E                     ??_TMR2_ISR:
  1644  007E                     ??_TMR2_CallBack:	
  1645                           ; 1 bytes @ 0x7
  1646                           
  1647  007E                     ??_INTERRUPT_InterruptManager:	
  1648                           ; 1 bytes @ 0x7
  1649                           
  1650                           
  1651                           	psect	cstackBANK0
  1652  0020                     __pcstackBANK0:	
  1653                           ; 1 bytes @ 0x7
  1654                           
  1655  0020                     ??_PIN_MANAGER_Initialize:
  1656  0020                     ??_OSCILLATOR_Initialize:	
  1657                           ; 1 bytes @ 0x0
  1658                           
  1659  0020                     ??_WDT_Initialize:	
  1660                           ; 1 bytes @ 0x0
  1661                           
  1662  0020                     ??_FVR_Initialize:	
  1663                           ; 1 bytes @ 0x0
  1664                           
  1665  0020                     ??_ADC_Initialize:	
  1666                           ; 1 bytes @ 0x0
  1667                           
  1668  0020                     ?_TMR2_SetInterruptHandler:	
  1669                           ; 1 bytes @ 0x0
  1670                           
  1671  0020                     ?_TMR0_SetInterruptHandler:	
  1672                           ; 1 bytes @ 0x0
  1673                           
  1674  0020                     ??_EEPROM_ReadByte:	
  1675                           ; 1 bytes @ 0x0
  1676                           
  1677  0020                     ?_EEPROM_WriteByte:	
  1678                           ; 1 bytes @ 0x0
  1679                           
  1680  0020                     ??_ADC_GetConversion:	
  1681                           ; 1 bytes @ 0x0
  1682                           
  1683  0020                     ??_TMR2_StartTimer:	
  1684                           ; 1 bytes @ 0x0
  1685                           
  1686  0020                     ??_switch_zum:	
  1687                           ; 1 bytes @ 0x0
  1688                           
  1689  0020                     ?_beep:	
  1690                           ; 1 bytes @ 0x0
  1691                           
  1692  0020                     ??_go_close:	
  1693                           ; 1 bytes @ 0x0
  1694                           
  1695  0020                     ??_go_open:	
  1696                           ; 1 bytes @ 0x0
  1697                           
  1698  0020                     ??_go_close_alt:	
  1699                           ; 1 bytes @ 0x0
  1700                           
  1701  0020                     ??_go_open_alt:	
  1702                           ; 1 bytes @ 0x0
  1703                           
  1704  0020                     beep@count:	
  1705                           ; 1 bytes @ 0x0
  1706                           
  1707  0020                     EEPROM_WriteByte@dt:	
  1708                           ; 1 bytes @ 0x0
  1709                           
  1710  0020                     TMR2_SetInterruptHandler@InterruptHandler:	
  1711                           ; 1 bytes @ 0x0
  1712                           
  1713  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  1714                           ; 2 bytes @ 0x0
  1715                           
  1716                           
  1717                           ; 2 bytes @ 0x0
  1718  0020                     	ds	1
  1719  0021                     ??_EEPROM_WriteByte:
  1720  0021                     ??_beep:	
  1721                           ; 1 bytes @ 0x1
  1722                           
  1723  0021                     ADC_GetConversion@channel:	
  1724                           ; 1 bytes @ 0x1
  1725                           
  1726                           
  1727                           ; 1 bytes @ 0x1
  1728  0021                     	ds	1
  1729  0022                     ??_TMR2_Initialize:
  1730  0022                     ??_TMR0_Initialize:	
  1731                           ; 1 bytes @ 0x2
  1732                           
  1733  0022                     ??_TMR2_SetInterruptHandler:	
  1734                           ; 1 bytes @ 0x2
  1735                           
  1736  0022                     ??_TMR0_SetInterruptHandler:	
  1737                           ; 1 bytes @ 0x2
  1738                           
  1739  0022                     ??_get_fun:	
  1740                           ; 1 bytes @ 0x2
  1741                           
  1742  0022                     ??_get_fun_full:	
  1743                           ; 1 bytes @ 0x2
  1744                           
  1745  0022                     ??_get_jump:	
  1746                           ; 1 bytes @ 0x2
  1747                           
  1748  0022                     ??_get_jump_full:	
  1749                           ; 1 bytes @ 0x2
  1750                           
  1751  0022                     ??_povorot:	
  1752                           ; 1 bytes @ 0x2
  1753                           
  1754  0022                     EEPROM_ReadByte@addr:	
  1755                           ; 1 bytes @ 0x2
  1756                           
  1757                           
  1758                           ; 1 bytes @ 0x2
  1759  0022                     	ds	1
  1760  0023                     ??_SYSTEM_Initialize:
  1761  0023                     beep@time:	
  1762                           ; 1 bytes @ 0x3
  1763                           
  1764  0023                     EEPROM_WriteByte@addr:	
  1765                           ; 1 bytes @ 0x3
  1766                           
  1767                           
  1768                           ; 1 bytes @ 0x3
  1769  0023                     	ds	1
  1770  0024                     beep@j:
  1771  0024                     EEPROM_WriteByte@status:	
  1772                           ; 1 bytes @ 0x4
  1773                           
  1774  0024                     get_fun@res:	
  1775                           ; 1 bytes @ 0x4
  1776                           
  1777  0024                     get_fun_full@res:	
  1778                           ; 2 bytes @ 0x4
  1779                           
  1780  0024                     get_jump@res:	
  1781                           ; 2 bytes @ 0x4
  1782                           
  1783  0024                     get_jump_full@res:	
  1784                           ; 2 bytes @ 0x4
  1785                           
  1786                           
  1787                           ; 2 bytes @ 0x4
  1788  0024                     	ds	1
  1789  0025                     ?_EEPROM_WriteShortLong:
  1790  0025                     beep@i:	
  1791                           ; 1 bytes @ 0x5
  1792                           
  1793  0025                     EEPROM_WriteShortLong@ucData:	
  1794                           ; 1 bytes @ 0x5
  1795                           
  1796                           
  1797                           ; 3 bytes @ 0x5
  1798  0025                     	ds	1
  1799  0026                     ??_fun_work:
  1800  0026                     ??_switch_wm:	
  1801                           ; 1 bytes @ 0x6
  1802                           
  1803  0026                     get_fun_full@flag:	
  1804                           ; 1 bytes @ 0x6
  1805                           
  1806  0026                     get_jump_full@flag:	
  1807                           ; 1 bytes @ 0x6
  1808                           
  1809                           
  1810                           ; 1 bytes @ 0x6
  1811  0026                     	ds	1
  1812  0027                     ??_start_setup:
  1813                           
  1814                           ; 1 bytes @ 0x7
  1815  0027                     	ds	1
  1816  0028                     ??_EEPROM_WriteShortLong:
  1817                           
  1818                           ; 1 bytes @ 0x8
  1819  0028                     	ds	4
  1820  002C                     EEPROM_WriteShortLong@dt:
  1821                           
  1822                           ; 1 bytes @ 0xC
  1823  002C                     	ds	1
  1824  002D                     EEPROM_WriteShortLong@addr:
  1825                           
  1826                           ; 1 bytes @ 0xD
  1827  002D                     	ds	1
  1828  002E                     ??_get_voltage:
  1829                           
  1830                           ; 1 bytes @ 0xE
  1831  002E                     	ds	2
  1832  0030                     get_voltage@buf_795:
  1833                           
  1834                           ; 3 bytes @ 0x10
  1835  0030                     	ds	3
  1836  0033                     get_voltage@res:
  1837                           
  1838                           ; 2 bytes @ 0x13
  1839  0033                     	ds	2
  1840  0035                     get_voltage@buf:
  1841                           
  1842                           ; 1 bytes @ 0x15
  1843  0035                     	ds	1
  1844  0036                     get_voltage@q_796:
  1845                           
  1846                           ; 1 bytes @ 0x16
  1847  0036                     	ds	1
  1848  0037                     get_voltage@q:
  1849                           
  1850                           ; 1 bytes @ 0x17
  1851  0037                     	ds	1
  1852  0038                     ??_main:
  1853                           
  1854                           	psect	maintext
  1855  03E7                     __pmaintext:	
  1856                           ; 1 bytes @ 0x18
  1857 ;;
  1858 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1859 ;;
  1860 ;; *************** function _main *****************
  1861 ;; Defined at:
  1862 ;;		line 512 in file "main.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;		None
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, status,2, status,0, pclath, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : B1F/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1
  1876 ;;      Params:         0       0       0
  1877 ;;      Locals:         0       0       0
  1878 ;;      Temps:          0       0       0
  1879 ;;      Totals:         0       0       0
  1880 ;;Total ram usage:        0 bytes
  1881 ;; Hardware stack levels required when called: 11
  1882 ;; This function calls:
  1883 ;;		_fun_work
  1884 ;;		_get_fun
  1885 ;;		_get_jump
  1886 ;;		_get_voltage
  1887 ;;		_povorot
  1888 ;;		_start_setup
  1889 ;;		_switch_wm
  1890 ;; This function is called by:
  1891 ;;		Startup code after reset
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895  03E7                     _main:	
  1896                           ;psect for function _main
  1897                           
  1898  03E7                     l2535:	
  1899                           ;incstack = 0
  1900                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1901                           
  1902                           
  1903                           ;main.c: 514:     start_setup();
  1904  03E7  3182  2299  3183   	fcall	_start_setup
  1905  03EA                     l487:	
  1906                           ;main.c: 516:     while (1) {
  1907                           
  1908                           
  1909                           ;main.c: 517:         get_voltage();
  1910  03EA  3180  203B  3183   	fcall	_get_voltage
  1911  03ED                     l2537:
  1912                           
  1913                           ;main.c: 518:         if (!FLAGS.bits.ALARM) {
  1914  03ED  1876               	btfsc	_FLAGS,0
  1915  03EE  2BF0               	goto	u1931
  1916  03EF  2BF1               	goto	u1930
  1917  03F0                     u1931:
  1918  03F0  2BEA               	goto	l487
  1919  03F1                     u1930:
  1920  03F1                     l2539:
  1921                           
  1922                           ;main.c: 519:             get_fun();
  1923  03F1  3181  21A0  3183   	fcall	_get_fun
  1924                           
  1925                           ;main.c: 520:             fun_work();
  1926  03F4  3181  215D  3183   	fcall	_fun_work
  1927                           
  1928                           ;main.c: 521:             get_jump();
  1929  03F7  3182  225D  3183   	fcall	_get_jump
  1930                           
  1931                           ;main.c: 522:             switch_wm();
  1932  03FA  3183  2387  3183   	fcall	_switch_wm
  1933                           
  1934                           ;main.c: 523:             povorot();
  1935  03FD  3181  2119  3183   	fcall	_povorot
  1936  0400  2BEA               	goto	l487
  1937  0401  2826               	ljmp	start
  1938  0402                     __end_of_main:
  1939                           
  1940                           	psect	text1
  1941  0387                     __ptext1:	
  1942 ;; *************** function _switch_wm *****************
  1943 ;; Defined at:
  1944 ;;		line 371 in file "main.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;		None
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;		None
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2, status,0, pclath, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMMON   BANK0   BANK1
  1958 ;;      Params:         0       0       0
  1959 ;;      Locals:         0       0       0
  1960 ;;      Temps:          0       1       0
  1961 ;;      Totals:         0       1       0
  1962 ;;Total ram usage:        1 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; Hardware stack levels required when called: 9
  1965 ;; This function calls:
  1966 ;;		_beep
  1967 ;; This function is called by:
  1968 ;;		_main
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972  0387                     _switch_wm:	
  1973                           ;psect for function _switch_wm
  1974                           
  1975  0387                     l2471:	
  1976                           ;incstack = 0
  1977                           ; Regs used in _switch_wm: [wreg+status,2+status,0+pclath+cstack]
  1978                           
  1979                           
  1980                           ;main.c: 372:     if (FLAGS.bits._JUMP_CONNECTED) {
  1981  0387  1E76               	btfss	_FLAGS,4
  1982  0388  2B8A               	goto	u1851
  1983  0389  2B8B               	goto	u1850
  1984  038A                     u1851:
  1985  038A  2B9A               	goto	l443
  1986  038B                     u1850:
  1987  038B                     l2473:
  1988                           
  1989                           ;main.c: 373:         if (FLAGS.bits.NORMAL_WORK_MODE) {
  1990  038B  1CF6               	btfss	_FLAGS,1
  1991  038C  2B8E               	goto	u1861
  1992  038D  2B8F               	goto	u1860
  1993  038E                     u1861:
  1994  038E  2BA8               	goto	l447
  1995  038F                     u1860:
  1996  038F                     l2475:
  1997                           
  1998                           ;main.c: 374:             FLAGS.bits.NORMAL_WORK_MODE = 0;
  1999  038F  10F6               	bcf	_FLAGS,1
  2000  0390                     l2477:
  2001                           
  2002                           ;main.c: 377:             beep(40, 8);
  2003  0390  3008               	movlw	8
  2004  0391  0020               	movlb	0	; select bank0
  2005  0392  00A6               	movwf	??_switch_wm
  2006  0393  0826               	movf	??_switch_wm,w
  2007  0394  00A0               	movwf	beep@count
  2008  0395  3028               	movlw	40
  2009  0396  3183  2302  3183   	fcall	_beep
  2010  0399  2BA8               	goto	l447
  2011  039A                     l443:
  2012                           
  2013                           ;main.c: 380:         if (!FLAGS.bits.NORMAL_WORK_MODE) {
  2014  039A  18F6               	btfsc	_FLAGS,1
  2015  039B  2B9D               	goto	u1871
  2016  039C  2B9E               	goto	u1870
  2017  039D                     u1871:
  2018  039D  2BA8               	goto	l447
  2019  039E                     u1870:
  2020  039E                     l2479:
  2021                           
  2022                           ;main.c: 381:             FLAGS.bits.NORMAL_WORK_MODE = 1;
  2023  039E  14F6               	bsf	_FLAGS,1
  2024  039F                     l2481:
  2025                           
  2026                           ;main.c: 384:             beep(40, 4);
  2027  039F  3004               	movlw	4
  2028  03A0  0020               	movlb	0	; select bank0
  2029  03A1  00A6               	movwf	??_switch_wm
  2030  03A2  0826               	movf	??_switch_wm,w
  2031  03A3  00A0               	movwf	beep@count
  2032  03A4  3028               	movlw	40
  2033  03A5  3183  2302  3183   	fcall	_beep
  2034  03A8                     l447:
  2035  03A8  0008               	return
  2036  03A9                     __end_of_switch_wm:
  2037                           
  2038                           	psect	text2
  2039  0299                     __ptext2:	
  2040 ;; *************** function _start_setup *****************
  2041 ;; Defined at:
  2042 ;;		line 478 in file "main.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;		None
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		wreg, status,2, status,0, pclath, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMMON   BANK0   BANK1
  2056 ;;      Params:         0       0       0
  2057 ;;      Locals:         0       0       0
  2058 ;;      Temps:          0       0       0
  2059 ;;      Totals:         0       0       0
  2060 ;;Total ram usage:        0 bytes
  2061 ;; Hardware stack levels used: 1
  2062 ;; Hardware stack levels required when called: 10
  2063 ;; This function calls:
  2064 ;;		_SYSTEM_Initialize
  2065 ;;		_TMR0_SetInterruptHandler
  2066 ;;		_TMR2_SetInterruptHandler
  2067 ;;		_TMR2_StartTimer
  2068 ;;		_get_fun_full
  2069 ;;		_get_jump_full
  2070 ;; This function is called by:
  2071 ;;		_main
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075  0299                     _start_setup:	
  2076                           ;psect for function _start_setup
  2077                           
  2078  0299                     l2483:	
  2079                           ;incstack = 0
  2080                           ; Regs used in _start_setup: [wreg+status,2+status,0+pclath+cstack]
  2081                           
  2082                           
  2083                           ;main.c: 480:     SYSTEM_Initialize();
  2084  0299  3184  244E  3182   	fcall	_SYSTEM_Initialize
  2085  029C                     l2485:
  2086                           
  2087                           ;main.c: 481:     (INTCONbits.GIE = 1);
  2088  029C  178B               	bsf	11,7	;volatile
  2089  029D                     l2487:
  2090                           
  2091                           ;main.c: 482:     (INTCONbits.PEIE = 1);
  2092  029D  170B               	bsf	11,6	;volatile
  2093                           
  2094                           ;main.c: 485:     TMR0_SetInterruptHandler(switch_zum);
  2095  029E  30B7               	movlw	low _switch_zum
  2096  029F  0020               	movlb	0	; select bank0
  2097  02A0  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2098  02A1  3004               	movlw	high _switch_zum
  2099  02A2  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2100  02A3  3185  252A  3182   	fcall	_TMR0_SetInterruptHandler
  2101                           
  2102                           ;main.c: 486:     TMR2_SetInterruptHandler(sec_tick_work);
  2103  02A6  301F               	movlw	low _sec_tick_work
  2104  02A7  0020               	movlb	0	; select bank0
  2105  02A8  00A0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2106  02A9  3002               	movlw	high _sec_tick_work
  2107  02AA  00A1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2108  02AB  3185  2524  3182   	fcall	_TMR2_SetInterruptHandler
  2109  02AE                     l2489:
  2110                           
  2111                           ;main.c: 487:     TMR2_StartTimer();
  2112  02AE  3185  2550  3182   	fcall	_TMR2_StartTimer
  2113  02B1                     l2491:
  2114  02B1  0023               	movlb	3	; select bank3
  2115  02B2  118E               	bcf	14,3	;volatile
  2116  02B3                     l2493:
  2117  02B3  108C               	bcf	12,1	;volatile
  2118  02B4                     l2495:
  2119  02B4  110E               	bcf	14,2	;volatile
  2120  02B5                     l2497:
  2121  02B5  0024               	movlb	4	; select bank4
  2122  02B6  108C               	bcf	12,1	;volatile
  2123  02B7                     l2499:
  2124  02B7  0021               	movlb	1	; select bank1
  2125  02B8  148C               	bsf	12,1	;volatile
  2126  02B9                     l2501:
  2127  02B9  0024               	movlb	4	; select bank4
  2128  02BA  110E               	bcf	14,2	;volatile
  2129  02BB                     l2503:
  2130  02BB  0021               	movlb	1	; select bank1
  2131  02BC  150E               	bsf	14,2	;volatile
  2132  02BD                     l2505:
  2133                           
  2134                           ;main.c: 499:     INTCONbits.TMR0IE = 0;
  2135  02BD  128B               	bcf	11,5	;volatile
  2136  02BE                     l2507:
  2137                           
  2138                           ;main.c: 500:     FLAGS.value = 0;
  2139  02BE  01F6               	clrf	_FLAGS
  2140  02BF                     l2509:
  2141  02BF  0022               	movlb	2	; select bank2
  2142  02C0  128E               	bcf	14,5	;volatile
  2143  02C1                     l2511:
  2144  02C1  120E               	bcf	14,4	;volatile
  2145  02C2                     l2513:
  2146  02C2  100E               	bcf	14,0	;volatile
  2147  02C3                     l2515:
  2148  02C3  0021               	movlb	1	; select bank1
  2149  02C4  100E               	bcf	14,0	;volatile
  2150  02C5                     l2517:
  2151                           
  2152                           ;main.c: 507:     get_fun_full();
  2153  02C5  3180  208B  3182   	fcall	_get_fun_full
  2154  02C8                     l2519:
  2155                           
  2156                           ;main.c: 508:     get_jump_full();
  2157  02C8  3180  20D4  3182   	fcall	_get_jump_full
  2158  02CB                     l2521:
  2159                           
  2160                           ;main.c: 509:     time_pow_s = 0;
  2161  02CB  0020               	movlb	0	; select bank0
  2162  02CC  01BF               	clrf	_time_pow_s
  2163  02CD                     l482:
  2164  02CD  0008               	return
  2165  02CE                     __end_of_start_setup:
  2166                           
  2167                           	psect	text3
  2168  00D4                     __ptext3:	
  2169 ;; *************** function _get_jump_full *****************
  2170 ;; Defined at:
  2171 ;;		line 250 in file "main.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;		None
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  res             2    4[BANK0 ] unsigned int 
  2176 ;;  flag            1    6[BANK0 ] unsigned char 
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      void 
  2179 ;; Registers used:
  2180 ;;		wreg, status,2, status,0, pclath, cstack
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMMON   BANK0   BANK1
  2186 ;;      Params:         0       0       0
  2187 ;;      Locals:         0       3       0
  2188 ;;      Temps:          0       2       0
  2189 ;;      Totals:         0       5       0
  2190 ;;Total ram usage:        5 bytes
  2191 ;; Hardware stack levels used: 1
  2192 ;; Hardware stack levels required when called: 8
  2193 ;; This function calls:
  2194 ;;		_ADC_GetConversion
  2195 ;; This function is called by:
  2196 ;;		_start_setup
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200  00D4                     _get_jump_full:	
  2201                           ;psect for function _get_jump_full
  2202                           
  2203  00D4                     l389:	
  2204                           ;incstack = 0
  2205                           ; Regs used in _get_jump_full: [wreg+status,2+status,0+pclath+cstack]
  2206                           ;main.c: 252:     static signed char jump_counter;;main.c: 253:     do { ANSELAbits.ANSA
      +                          1 = 1; } while(0);
  2207                           
  2208  00D4  0023               	movlb	3	; select bank3
  2209  00D5  148C               	bsf	12,1	;volatile
  2210  00D6                     l2013:
  2211                           
  2212                           ;main.c: 254:     char flag = 0;
  2213  00D6  0020               	movlb	0	; select bank0
  2214  00D7  01A6               	clrf	get_jump_full@flag
  2215  00D8                     l2015:
  2216                           
  2217                           ;main.c: 256:         unsigned res = ADC_GetConversion(PIN_JUMP_STATE);
  2218  00D8  3001               	movlw	1
  2219  00D9  3184  2402  3180   	fcall	_ADC_GetConversion
  2220  00DC  0020               	movlb	0	; select bank0
  2221  00DD  00A2               	movwf	??_get_jump_full
  2222  00DE  01A3               	clrf	??_get_jump_full+1
  2223  00DF  0822               	movf	??_get_jump_full,w
  2224  00E0  00A4               	movwf	get_jump_full@res
  2225  00E1  0823               	movf	??_get_jump_full+1,w
  2226  00E2  00A5               	movwf	get_jump_full@res+1
  2227  00E3                     l2017:
  2228                           
  2229                           ;main.c: 257:         if (res < 50) jump_counter--;
  2230  00E3  3000               	movlw	0
  2231  00E4  0225               	subwf	get_jump_full@res+1,w
  2232  00E5  3032               	movlw	50
  2233  00E6  1903               	skipnz
  2234  00E7  0224               	subwf	get_jump_full@res,w
  2235  00E8  1803               	skipnc
  2236  00E9  28EB               	goto	u1111
  2237  00EA  28EC               	goto	u1110
  2238  00EB                     u1111:
  2239  00EB  28F1               	goto	l2021
  2240  00EC                     u1110:
  2241  00EC                     l2019:
  2242  00EC  30FF               	movlw	255
  2243  00ED  00A2               	movwf	??_get_jump_full
  2244  00EE  0822               	movf	??_get_jump_full,w
  2245  00EF  07BB               	addwf	get_jump_full@jump_counter,f
  2246  00F0  28F5               	goto	l2023
  2247  00F1                     l2021:
  2248  00F1  3001               	movlw	1
  2249  00F2  00A2               	movwf	??_get_jump_full
  2250  00F3  0822               	movf	??_get_jump_full,w
  2251  00F4  07BB               	addwf	get_jump_full@jump_counter,f
  2252  00F5                     l2023:
  2253                           
  2254                           ;main.c: 272:         if (jump_counter > 10) {
  2255  00F5  083B               	movf	get_jump_full@jump_counter,w
  2256  00F6  3A80               	xorlw	128
  2257  00F7  3E75               	addlw	-139
  2258  00F8  1C03               	skipc
  2259  00F9  28FB               	goto	u1121
  2260  00FA  28FC               	goto	u1120
  2261  00FB                     u1121:
  2262  00FB  2904               	goto	l2031
  2263  00FC                     u1120:
  2264  00FC                     l2025:
  2265                           
  2266                           ;main.c: 273:             jump_counter = 10;
  2267  00FC  300A               	movlw	10
  2268  00FD  00A2               	movwf	??_get_jump_full
  2269  00FE  0822               	movf	??_get_jump_full,w
  2270  00FF  00BB               	movwf	get_jump_full@jump_counter
  2271  0100                     l2027:
  2272                           
  2273                           ;main.c: 274:             FLAGS.bits._JUMP_CONNECTED = 0;
  2274  0100  1276               	bcf	_FLAGS,4
  2275  0101                     l2029:
  2276                           
  2277                           ;main.c: 275:             flag = 1;
  2278  0101  01A6               	clrf	get_jump_full@flag
  2279  0102  0AA6               	incf	get_jump_full@flag,f
  2280                           
  2281                           ;main.c: 276:         } else if (jump_counter<-10) {
  2282  0103  2911               	goto	l2039
  2283  0104                     l2031:
  2284  0104  083B               	movf	get_jump_full@jump_counter,w
  2285  0105  3A80               	xorlw	128
  2286  0106  3E8A               	addlw	138
  2287  0107  1803               	skipnc
  2288  0108  290A               	goto	u1131
  2289  0109  290B               	goto	u1130
  2290  010A                     u1131:
  2291  010A  2911               	goto	l2039
  2292  010B                     u1130:
  2293  010B                     l2033:
  2294                           
  2295                           ;main.c: 277:             jump_counter = -10;
  2296  010B  30F6               	movlw	246
  2297  010C  00A2               	movwf	??_get_jump_full
  2298  010D  0822               	movf	??_get_jump_full,w
  2299  010E  00BB               	movwf	get_jump_full@jump_counter
  2300  010F                     l2035:
  2301                           
  2302                           ;main.c: 278:             FLAGS.bits._JUMP_CONNECTED = 1;
  2303  010F  1676               	bsf	_FLAGS,4
  2304  0110  2901               	goto	l2029
  2305  0111                     l2039:
  2306                           
  2307                           ;main.c: 284:     } while (flag == 0);
  2308  0111  0826               	movf	get_jump_full@flag,w
  2309  0112  1903               	btfsc	3,2
  2310  0113  2915               	goto	u1141
  2311  0114  2916               	goto	u1140
  2312  0115                     u1141:
  2313  0115  28D8               	goto	l2015
  2314  0116                     u1140:
  2315  0116                     l398:	
  2316                           ;main.c: 285:     do { ANSELAbits.ANSA1 = 0; } while(0);
  2317                           
  2318  0116  0023               	movlb	3	; select bank3
  2319  0117  108C               	bcf	12,1	;volatile
  2320  0118                     l400:
  2321  0118  0008               	return
  2322  0119                     __end_of_get_jump_full:
  2323                           
  2324                           	psect	text4
  2325  008B                     __ptext4:	
  2326 ;; *************** function _get_fun_full *****************
  2327 ;; Defined at:
  2328 ;;		line 176 in file "main.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;		None
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;  res             2    4[BANK0 ] unsigned int 
  2333 ;;  flag            1    6[BANK0 ] unsigned char 
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1    wreg      void 
  2336 ;; Registers used:
  2337 ;;		wreg, status,2, status,0, pclath, cstack
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMMON   BANK0   BANK1
  2343 ;;      Params:         0       0       0
  2344 ;;      Locals:         0       3       0
  2345 ;;      Temps:          0       2       0
  2346 ;;      Totals:         0       5       0
  2347 ;;Total ram usage:        5 bytes
  2348 ;; Hardware stack levels used: 1
  2349 ;; Hardware stack levels required when called: 8
  2350 ;; This function calls:
  2351 ;;		_ADC_GetConversion
  2352 ;; This function is called by:
  2353 ;;		_start_setup
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357  008B                     _get_fun_full:	
  2358                           ;psect for function _get_fun_full
  2359                           
  2360  008B                     l355:	
  2361                           ;incstack = 0
  2362                           ; Regs used in _get_fun_full: [wreg+status,2+status,0+pclath+cstack]
  2363                           ;main.c: 178:     static signed char fun_counter;;main.c: 179:     do { LATCbits.LATC1 =
      +                           1; } while(0);
  2364                           
  2365  008B  0022               	movlb	2	; select bank2
  2366  008C  148E               	bsf	14,1	;volatile
  2367  008D                     l357:	
  2368                           ;main.c: 180:     do { ANSELCbits.ANSC2 = 1; } while(0);
  2369                           
  2370  008D  0023               	movlb	3	; select bank3
  2371  008E  150E               	bsf	14,2	;volatile
  2372  008F                     l1985:
  2373                           
  2374                           ;main.c: 181:     char flag = 0;
  2375  008F  0020               	movlb	0	; select bank0
  2376  0090  01A6               	clrf	get_fun_full@flag
  2377  0091                     l1987:
  2378                           
  2379                           ;main.c: 183:         unsigned res = ADC_GetConversion(PIN_FUN_STATE);
  2380  0091  3006               	movlw	6
  2381  0092  3184  2402  3180   	fcall	_ADC_GetConversion
  2382  0095  0020               	movlb	0	; select bank0
  2383  0096  00A2               	movwf	??_get_fun_full
  2384  0097  01A3               	clrf	??_get_fun_full+1
  2385  0098  0822               	movf	??_get_fun_full,w
  2386  0099  00A4               	movwf	get_fun_full@res
  2387  009A  0823               	movf	??_get_fun_full+1,w
  2388  009B  00A5               	movwf	get_fun_full@res+1
  2389  009C                     l1989:
  2390                           
  2391                           ;main.c: 184:         if (res < 50) fun_counter--;
  2392  009C  3000               	movlw	0
  2393  009D  0225               	subwf	get_fun_full@res+1,w
  2394  009E  3032               	movlw	50
  2395  009F  1903               	skipnz
  2396  00A0  0224               	subwf	get_fun_full@res,w
  2397  00A1  1803               	skipnc
  2398  00A2  28A4               	goto	u1071
  2399  00A3  28A5               	goto	u1070
  2400  00A4                     u1071:
  2401  00A4  28AA               	goto	l1993
  2402  00A5                     u1070:
  2403  00A5                     l1991:
  2404  00A5  30FF               	movlw	255
  2405  00A6  00A2               	movwf	??_get_fun_full
  2406  00A7  0822               	movf	??_get_fun_full,w
  2407  00A8  07BD               	addwf	get_fun_full@fun_counter,f
  2408  00A9  28AE               	goto	l1995
  2409  00AA                     l1993:
  2410  00AA  3001               	movlw	1
  2411  00AB  00A2               	movwf	??_get_fun_full
  2412  00AC  0822               	movf	??_get_fun_full,w
  2413  00AD  07BD               	addwf	get_fun_full@fun_counter,f
  2414  00AE                     l1995:
  2415                           
  2416                           ;main.c: 200:         if (fun_counter > 10) {
  2417  00AE  083D               	movf	get_fun_full@fun_counter,w
  2418  00AF  3A80               	xorlw	128
  2419  00B0  3E75               	addlw	-139
  2420  00B1  1C03               	skipc
  2421  00B2  28B4               	goto	u1081
  2422  00B3  28B5               	goto	u1080
  2423  00B4                     u1081:
  2424  00B4  28BD               	goto	l2003
  2425  00B5                     u1080:
  2426  00B5                     l1997:
  2427                           
  2428                           ;main.c: 201:             fun_counter = 10;
  2429  00B5  300A               	movlw	10
  2430  00B6  00A2               	movwf	??_get_fun_full
  2431  00B7  0822               	movf	??_get_fun_full,w
  2432  00B8  00BD               	movwf	get_fun_full@fun_counter
  2433  00B9                     l1999:
  2434                           
  2435                           ;main.c: 202:             FLAGS.bits._FUN_CONNECTED = 0;
  2436  00B9  11F6               	bcf	_FLAGS,3
  2437  00BA                     l2001:
  2438                           
  2439                           ;main.c: 203:             flag = 1;
  2440  00BA  01A6               	clrf	get_fun_full@flag
  2441  00BB  0AA6               	incf	get_fun_full@flag,f
  2442                           
  2443                           ;main.c: 204:         } else if (fun_counter<-10) {
  2444  00BC  28CA               	goto	l2011
  2445  00BD                     l2003:
  2446  00BD  083D               	movf	get_fun_full@fun_counter,w
  2447  00BE  3A80               	xorlw	128
  2448  00BF  3E8A               	addlw	138
  2449  00C0  1803               	skipnc
  2450  00C1  28C3               	goto	u1091
  2451  00C2  28C4               	goto	u1090
  2452  00C3                     u1091:
  2453  00C3  28CA               	goto	l2011
  2454  00C4                     u1090:
  2455  00C4                     l2005:
  2456                           
  2457                           ;main.c: 205:             fun_counter = 10;
  2458  00C4  300A               	movlw	10
  2459  00C5  00A2               	movwf	??_get_fun_full
  2460  00C6  0822               	movf	??_get_fun_full,w
  2461  00C7  00BD               	movwf	get_fun_full@fun_counter
  2462  00C8                     l2007:
  2463                           
  2464                           ;main.c: 206:             FLAGS.bits._FUN_CONNECTED = 1;
  2465  00C8  15F6               	bsf	_FLAGS,3
  2466  00C9  28BA               	goto	l2001
  2467  00CA                     l2011:
  2468                           
  2469                           ;main.c: 211:     } while (flag == 0);
  2470  00CA  0826               	movf	get_fun_full@flag,w
  2471  00CB  1903               	btfsc	3,2
  2472  00CC  28CE               	goto	u1101
  2473  00CD  28CF               	goto	u1100
  2474  00CE                     u1101:
  2475  00CE  2891               	goto	l1987
  2476  00CF                     u1100:
  2477  00CF                     l366:	
  2478                           ;main.c: 213:     do { ANSELCbits.ANSC2 = 0; } while(0);
  2479                           
  2480  00CF  0023               	movlb	3	; select bank3
  2481  00D0  110E               	bcf	14,2	;volatile
  2482  00D1                     l368:	
  2483                           ;main.c: 214:     do { LATCbits.LATC1 = 0; } while(0);
  2484                           
  2485  00D1  0022               	movlb	2	; select bank2
  2486  00D2  108E               	bcf	14,1	;volatile
  2487  00D3                     l370:
  2488  00D3  0008               	return
  2489  00D4                     __end_of_get_fun_full:
  2490                           
  2491                           	psect	text5
  2492  0550                     __ptext5:	
  2493 ;; *************** function _TMR2_StartTimer *****************
  2494 ;; Defined at:
  2495 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		None
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMMON   BANK0   BANK1
  2509 ;;      Params:         0       0       0
  2510 ;;      Locals:         0       0       0
  2511 ;;      Temps:          0       0       0
  2512 ;;      Totals:         0       0       0
  2513 ;;Total ram usage:        0 bytes
  2514 ;; Hardware stack levels used: 1
  2515 ;; Hardware stack levels required when called: 7
  2516 ;; This function calls:
  2517 ;;		Nothing
  2518 ;; This function is called by:
  2519 ;;		_start_setup
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523  0550                     _TMR2_StartTimer:	
  2524                           ;psect for function _TMR2_StartTimer
  2525                           
  2526  0550                     l2387:	
  2527                           ;incstack = 0
  2528                           ; Regs used in _TMR2_StartTimer: []
  2529                           
  2530                           
  2531                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  2532  0550  0020               	movlb	0	; select bank0
  2533  0551  151C               	bsf	28,2	;volatile
  2534  0552                     l142:
  2535  0552  0008               	return
  2536  0553                     __end_of_TMR2_StartTimer:
  2537                           
  2538                           	psect	text6
  2539  044E                     __ptext6:	
  2540 ;; *************** function _SYSTEM_Initialize *****************
  2541 ;; Defined at:
  2542 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;		None
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;		None
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      void 
  2549 ;; Registers used:
  2550 ;;		wreg, status,2, status,0, pclath, cstack
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMMON   BANK0   BANK1
  2556 ;;      Params:         0       0       0
  2557 ;;      Locals:         0       0       0
  2558 ;;      Temps:          0       0       0
  2559 ;;      Totals:         0       0       0
  2560 ;;Total ram usage:        0 bytes
  2561 ;; Hardware stack levels used: 1
  2562 ;; Hardware stack levels required when called: 9
  2563 ;; This function calls:
  2564 ;;		_ADC_Initialize
  2565 ;;		_FVR_Initialize
  2566 ;;		_OSCILLATOR_Initialize
  2567 ;;		_PIN_MANAGER_Initialize
  2568 ;;		_TMR0_Initialize
  2569 ;;		_TMR2_Initialize
  2570 ;;		_WDT_Initialize
  2571 ;; This function is called by:
  2572 ;;		_start_setup
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576  044E                     _SYSTEM_Initialize:	
  2577                           ;psect for function _SYSTEM_Initialize
  2578                           
  2579  044E                     l2385:	
  2580                           ;incstack = 0
  2581                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2582                           
  2583                           
  2584                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2585  044E  3184  247A  3184   	fcall	_PIN_MANAGER_Initialize
  2586                           
  2587                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2588  0451  3185  251D  3184   	fcall	_OSCILLATOR_Initialize
  2589                           
  2590                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2591  0454  3185  253F  3184   	fcall	_WDT_Initialize
  2592                           
  2593                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  2594  0457  3185  2543  3184   	fcall	_FVR_Initialize
  2595                           
  2596                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2597  045A  3185  2515  3184   	fcall	_ADC_Initialize
  2598                           
  2599                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  2600  045D  3184  24A4  3184   	fcall	_TMR2_Initialize
  2601                           
  2602                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  2603  0460  3184  2464  3184   	fcall	_TMR0_Initialize
  2604  0463                     l25:
  2605  0463  0008               	return
  2606  0464                     __end_of_SYSTEM_Initialize:
  2607                           
  2608                           	psect	text7
  2609  053F                     __ptext7:	
  2610 ;; *************** function _WDT_Initialize *****************
  2611 ;; Defined at:
  2612 ;;		line 72 in file "mcc_generated_files/mcc.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;		None
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		wreg
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMMON   BANK0   BANK1
  2626 ;;      Params:         0       0       0
  2627 ;;      Locals:         0       0       0
  2628 ;;      Temps:          0       0       0
  2629 ;;      Totals:         0       0       0
  2630 ;;Total ram usage:        0 bytes
  2631 ;; Hardware stack levels used: 1
  2632 ;; Hardware stack levels required when called: 7
  2633 ;; This function calls:
  2634 ;;		Nothing
  2635 ;; This function is called by:
  2636 ;;		_SYSTEM_Initialize
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640  053F                     _WDT_Initialize:	
  2641                           ;psect for function _WDT_Initialize
  2642                           
  2643  053F                     l2349:	
  2644                           ;incstack = 0
  2645                           ; Regs used in _WDT_Initialize: [wreg]
  2646                           
  2647                           
  2648                           ;mcc_generated_files/mcc.c: 75:     WDTCON = 0x16;
  2649  053F  3016               	movlw	22
  2650  0540  0021               	movlb	1	; select bank1
  2651  0541  0097               	movwf	23	;volatile
  2652  0542                     l31:
  2653  0542  0008               	return
  2654  0543                     __end_of_WDT_Initialize:
  2655                           
  2656                           	psect	text8
  2657  04A4                     __ptext8:	
  2658 ;; *************** function _TMR2_Initialize *****************
  2659 ;; Defined at:
  2660 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;		None
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;		None
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  1    wreg      void 
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, status,0, pclath, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMMON   BANK0   BANK1
  2674 ;;      Params:         0       0       0
  2675 ;;      Locals:         0       0       0
  2676 ;;      Temps:          0       0       0
  2677 ;;      Totals:         0       0       0
  2678 ;;Total ram usage:        0 bytes
  2679 ;; Hardware stack levels used: 1
  2680 ;; Hardware stack levels required when called: 8
  2681 ;; This function calls:
  2682 ;;		_TMR2_SetInterruptHandler
  2683 ;; This function is called by:
  2684 ;;		_SYSTEM_Initialize
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688  04A4                     _TMR2_Initialize:	
  2689                           ;psect for function _TMR2_Initialize
  2690                           
  2691  04A4                     l2359:	
  2692                           ;incstack = 0
  2693                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2694                           
  2695                           
  2696                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xF9;
  2697  04A4  30F9               	movlw	249
  2698  04A5  0020               	movlb	0	; select bank0
  2699  04A6  009B               	movwf	27	;volatile
  2700  04A7                     l2361:
  2701                           
  2702                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  2703  04A7  019A               	clrf	26	;volatile
  2704  04A8                     l2363:
  2705                           
  2706                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  2707  04A8  1091               	bcf	17,1	;volatile
  2708  04A9                     l2365:
  2709                           
  2710                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  2711  04A9  0021               	movlb	1	; select bank1
  2712  04AA  1491               	bsf	17,1	;volatile
  2713  04AB                     l2367:
  2714                           
  2715                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  2716  04AB  3053               	movlw	low _TMR2_DefaultInterruptHandler
  2717  04AC  0020               	movlb	0	; select bank0
  2718  04AD  00A0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2719  04AE  3005               	movlw	high _TMR2_DefaultInterruptHandler
  2720  04AF  00A1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2721  04B0  3185  2524  3184   	fcall	_TMR2_SetInterruptHandler
  2722  04B3                     l2369:
  2723                           
  2724                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x4E;
  2725  04B3  304E               	movlw	78
  2726  04B4  0020               	movlb	0	; select bank0
  2727  04B5  009C               	movwf	28	;volatile
  2728  04B6                     l139:
  2729  04B6  0008               	return
  2730  04B7                     __end_of_TMR2_Initialize:
  2731                           
  2732                           	psect	text9
  2733  0524                     __ptext9:	
  2734 ;; *************** function _TMR2_SetInterruptHandler *****************
  2735 ;; Defined at:
  2736 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2739 ;;		 -> sec_tick_work(1), TMR2_DefaultInterruptHandler(1), 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;		None
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  1    wreg      void 
  2744 ;; Registers used:
  2745 ;;		wreg
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMMON   BANK0   BANK1
  2751 ;;      Params:         0       2       0
  2752 ;;      Locals:         0       0       0
  2753 ;;      Temps:          0       0       0
  2754 ;;      Totals:         0       2       0
  2755 ;;Total ram usage:        2 bytes
  2756 ;; Hardware stack levels used: 1
  2757 ;; Hardware stack levels required when called: 7
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_TMR2_Initialize
  2762 ;;		_start_setup
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766  0524                     _TMR2_SetInterruptHandler:	
  2767                           ;psect for function _TMR2_SetInterruptHandler
  2768                           
  2769  0524                     l2327:	
  2770                           ;incstack = 0
  2771                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2772                           
  2773                           
  2774                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  2775  0524  0020               	movlb	0	; select bank0
  2776  0525  0821               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2777  0526  00C4               	movwf	_TMR2_InterruptHandler+1
  2778  0527  0820               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2779  0528  00C3               	movwf	_TMR2_InterruptHandler
  2780  0529                     l164:
  2781  0529  0008               	return
  2782  052A                     __end_of_TMR2_SetInterruptHandler:
  2783                           
  2784                           	psect	text10
  2785  0464                     __ptext10:	
  2786 ;; *************** function _TMR0_Initialize *****************
  2787 ;; Defined at:
  2788 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;		None
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;		None
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0, pclath, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMMON   BANK0   BANK1
  2802 ;;      Params:         0       0       0
  2803 ;;      Locals:         0       0       0
  2804 ;;      Temps:          0       1       0
  2805 ;;      Totals:         0       1       0
  2806 ;;Total ram usage:        1 bytes
  2807 ;; Hardware stack levels used: 1
  2808 ;; Hardware stack levels required when called: 8
  2809 ;; This function calls:
  2810 ;;		_TMR0_SetInterruptHandler
  2811 ;; This function is called by:
  2812 ;;		_SYSTEM_Initialize
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816  0464                     _TMR0_Initialize:	
  2817                           ;psect for function _TMR0_Initialize
  2818                           
  2819  0464                     l2371:	
  2820                           ;incstack = 0
  2821                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2822                           
  2823                           
  2824                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD2 
      +                          & 0x3F));
  2825  0464  0021               	movlb	1	; select bank1
  2826  0465  0815               	movf	21,w	;volatile
  2827  0466  39C0               	andlw	192
  2828  0467  3812               	iorlw	18
  2829  0468  0095               	movwf	21	;volatile
  2830  0469                     l2373:
  2831                           
  2832                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x9C;
  2833  0469  309C               	movlw	156
  2834  046A  0020               	movlb	0	; select bank0
  2835  046B  0095               	movwf	21	;volatile
  2836  046C                     l2375:
  2837                           
  2838                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 156;
  2839  046C  309C               	movlw	156
  2840  046D  00A2               	movwf	??_TMR0_Initialize
  2841  046E  0822               	movf	??_TMR0_Initialize,w
  2842  046F  00C5               	movwf	_timer0ReloadVal	;volatile
  2843  0470                     l2377:
  2844                           
  2845                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  2846  0470  110B               	bcf	11,2	;volatile
  2847  0471                     l2379:
  2848                           
  2849                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  2850  0471  168B               	bsf	11,5	;volatile
  2851  0472                     l2381:
  2852                           
  2853                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2854  0472  3054               	movlw	low _TMR0_DefaultInterruptHandler
  2855  0473  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2856  0474  3005               	movlw	high _TMR0_DefaultInterruptHandler
  2857  0475  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2858  0476  3185  252A  3184   	fcall	_TMR0_SetInterruptHandler
  2859  0479                     l184:
  2860  0479  0008               	return
  2861  047A                     __end_of_TMR0_Initialize:
  2862                           
  2863                           	psect	text11
  2864  052A                     __ptext11:	
  2865 ;; *************** function _TMR0_SetInterruptHandler *****************
  2866 ;; Defined at:
  2867 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2870 ;;		 -> switch_zum(1), TMR0_DefaultInterruptHandler(1), 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;		None
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		wreg
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMMON   BANK0   BANK1
  2882 ;;      Params:         0       2       0
  2883 ;;      Locals:         0       0       0
  2884 ;;      Temps:          0       0       0
  2885 ;;      Totals:         0       2       0
  2886 ;;Total ram usage:        2 bytes
  2887 ;; Hardware stack levels used: 1
  2888 ;; Hardware stack levels required when called: 7
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_TMR0_Initialize
  2893 ;;		_start_setup
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897  052A                     _TMR0_SetInterruptHandler:	
  2898                           ;psect for function _TMR0_SetInterruptHandler
  2899                           
  2900  052A                     l2329:	
  2901                           ;incstack = 0
  2902                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2903                           
  2904                           
  2905                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  2906  052A  0020               	movlb	0	; select bank0
  2907  052B  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2908  052C  00C2               	movwf	_TMR0_InterruptHandler+1
  2909  052D  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2910  052E  00C1               	movwf	_TMR0_InterruptHandler
  2911  052F                     l200:
  2912  052F  0008               	return
  2913  0530                     __end_of_TMR0_SetInterruptHandler:
  2914                           
  2915                           	psect	text12
  2916  047A                     __ptext12:	
  2917 ;; *************** function _PIN_MANAGER_Initialize *****************
  2918 ;; Defined at:
  2919 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;		None
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;		None
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      void 
  2926 ;; Registers used:
  2927 ;;		wreg, status,2
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMMON   BANK0   BANK1
  2933 ;;      Params:         0       0       0
  2934 ;;      Locals:         0       0       0
  2935 ;;      Temps:          0       0       0
  2936 ;;      Totals:         0       0       0
  2937 ;;Total ram usage:        0 bytes
  2938 ;; Hardware stack levels used: 1
  2939 ;; Hardware stack levels required when called: 7
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_SYSTEM_Initialize
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947  047A                     _PIN_MANAGER_Initialize:	
  2948                           ;psect for function _PIN_MANAGER_Initialize
  2949                           
  2950  047A                     l2331:	
  2951                           ;incstack = 0
  2952                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2953                           
  2954                           
  2955                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2956  047A  0022               	movlb	2	; select bank2
  2957  047B  018C               	clrf	12	;volatile
  2958                           
  2959                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  2960  047C  018E               	clrf	14	;volatile
  2961  047D                     l2333:
  2962                           
  2963                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x0F;
  2964  047D  300F               	movlw	15
  2965  047E  0021               	movlb	1	; select bank1
  2966  047F  008C               	movwf	12	;volatile
  2967  0480                     l2335:
  2968                           
  2969                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x0C;
  2970  0480  300C               	movlw	12
  2971  0481  008E               	movwf	14	;volatile
  2972  0482                     l2337:
  2973                           
  2974                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x0C;
  2975  0482  300C               	movlw	12
  2976  0483  0023               	movlb	3	; select bank3
  2977  0484  008E               	movwf	14	;volatile
  2978  0485                     l2339:
  2979                           
  2980                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x07;
  2981  0485  3007               	movlw	7
  2982  0486  008C               	movwf	12	;volatile
  2983                           
  2984                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  2985  0487  0024               	movlb	4	; select bank4
  2986  0488  018C               	clrf	12	;volatile
  2987                           
  2988                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  2989  0489  018E               	clrf	14	;volatile
  2990  048A                     l2341:
  2991                           
  2992                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2993  048A  0021               	movlb	1	; select bank1
  2994  048B  1795               	bsf	21,7	;volatile
  2995                           
  2996                           ;mcc_generated_files/pin_manager.c: 86:     APFCON = 0x00;
  2997  048C  0022               	movlb	2	; select bank2
  2998  048D  019D               	clrf	29	;volatile
  2999  048E                     l92:
  3000  048E  0008               	return
  3001  048F                     __end_of_PIN_MANAGER_Initialize:
  3002                           
  3003                           	psect	text13
  3004  051D                     __ptext13:	
  3005 ;; *************** function _OSCILLATOR_Initialize *****************
  3006 ;; Defined at:
  3007 ;;		line 62 in file "mcc_generated_files/mcc.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;		None
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;		None
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      void 
  3014 ;; Registers used:
  3015 ;;		wreg, status,2
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMMON   BANK0   BANK1
  3021 ;;      Params:         0       0       0
  3022 ;;      Locals:         0       0       0
  3023 ;;      Temps:          0       0       0
  3024 ;;      Totals:         0       0       0
  3025 ;;Total ram usage:        0 bytes
  3026 ;; Hardware stack levels used: 1
  3027 ;; Hardware stack levels required when called: 7
  3028 ;; This function calls:
  3029 ;;		Nothing
  3030 ;; This function is called by:
  3031 ;;		_SYSTEM_Initialize
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035  051D                     _OSCILLATOR_Initialize:	
  3036                           ;psect for function _OSCILLATOR_Initialize
  3037                           
  3038  051D                     l2343:	
  3039                           ;incstack = 0
  3040                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3041                           
  3042                           
  3043                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x78;
  3044  051D  3078               	movlw	120
  3045  051E  0021               	movlb	1	; select bank1
  3046  051F  0099               	movwf	25	;volatile
  3047  0520                     l2345:
  3048                           
  3049                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  3050  0520  0198               	clrf	24	;volatile
  3051  0521                     l2347:
  3052                           
  3053                           ;mcc_generated_files/mcc.c: 69:     BORCON = 0x00;
  3054  0521  0022               	movlb	2	; select bank2
  3055  0522  0196               	clrf	22	;volatile
  3056  0523                     l28:
  3057  0523  0008               	return
  3058  0524                     __end_of_OSCILLATOR_Initialize:
  3059                           
  3060                           	psect	text14
  3061  0543                     __ptext14:	
  3062 ;; *************** function _FVR_Initialize *****************
  3063 ;; Defined at:
  3064 ;;		line 58 in file "mcc_generated_files/fvr.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;		None
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;		None
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  1    wreg      void 
  3071 ;; Registers used:
  3072 ;;		wreg
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMMON   BANK0   BANK1
  3078 ;;      Params:         0       0       0
  3079 ;;      Locals:         0       0       0
  3080 ;;      Temps:          0       0       0
  3081 ;;      Totals:         0       0       0
  3082 ;;Total ram usage:        0 bytes
  3083 ;; Hardware stack levels used: 1
  3084 ;; Hardware stack levels required when called: 7
  3085 ;; This function calls:
  3086 ;;		Nothing
  3087 ;; This function is called by:
  3088 ;;		_SYSTEM_Initialize
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092  0543                     _FVR_Initialize:	
  3093                           ;psect for function _FVR_Initialize
  3094                           
  3095  0543                     l2351:	
  3096                           ;incstack = 0
  3097                           ; Regs used in _FVR_Initialize: [wreg]
  3098                           
  3099                           
  3100                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  3101  0543  3082               	movlw	130
  3102  0544  0022               	movlb	2	; select bank2
  3103  0545  0097               	movwf	23	;volatile
  3104  0546                     l210:
  3105  0546  0008               	return
  3106  0547                     __end_of_FVR_Initialize:
  3107                           
  3108                           	psect	text15
  3109  0515                     __ptext15:	
  3110 ;; *************** function _ADC_Initialize *****************
  3111 ;; Defined at:
  3112 ;;		line 67 in file "mcc_generated_files/adc.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;		None
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;		None
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      void 
  3119 ;; Registers used:
  3120 ;;		wreg, status,2
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMMON   BANK0   BANK1
  3126 ;;      Params:         0       0       0
  3127 ;;      Locals:         0       0       0
  3128 ;;      Temps:          0       0       0
  3129 ;;      Totals:         0       0       0
  3130 ;;Total ram usage:        0 bytes
  3131 ;; Hardware stack levels used: 1
  3132 ;; Hardware stack levels required when called: 7
  3133 ;; This function calls:
  3134 ;;		Nothing
  3135 ;; This function is called by:
  3136 ;;		_SYSTEM_Initialize
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140  0515                     _ADC_Initialize:	
  3141                           ;psect for function _ADC_Initialize
  3142                           
  3143  0515                     l2353:	
  3144                           ;incstack = 0
  3145                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3146                           
  3147                           
  3148                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x50;
  3149  0515  3050               	movlw	80
  3150  0516  0021               	movlb	1	; select bank1
  3151  0517  009E               	movwf	30	;volatile
  3152  0518                     l2355:
  3153                           
  3154                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  3155  0518  019B               	clrf	27	;volatile
  3156  0519                     l2357:
  3157                           
  3158                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  3159  0519  019C               	clrf	28	;volatile
  3160                           
  3161                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x7D;
  3162  051A  307D               	movlw	125
  3163  051B  009D               	movwf	29	;volatile
  3164  051C                     l48:
  3165  051C  0008               	return
  3166  051D                     __end_of_ADC_Initialize:
  3167                           
  3168                           	psect	text16
  3169  0119                     __ptext16:	
  3170 ;; *************** function _povorot *****************
  3171 ;; Defined at:
  3172 ;;		line 330 in file "main.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;		None
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      void 
  3179 ;; Registers used:
  3180 ;;		wreg, status,2, status,0, pclath, cstack
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMMON   BANK0   BANK1
  3186 ;;      Params:         0       0       0
  3187 ;;      Locals:         0       0       0
  3188 ;;      Temps:          0       0       0
  3189 ;;      Totals:         0       0       0
  3190 ;;Total ram usage:        0 bytes
  3191 ;; Hardware stack levels used: 1
  3192 ;; Hardware stack levels required when called: 8
  3193 ;; This function calls:
  3194 ;;		_go_close
  3195 ;;		_go_open
  3196 ;; This function is called by:
  3197 ;;		_main
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201  0119                     _povorot:	
  3202                           ;psect for function _povorot
  3203                           
  3204  0119                     l2419:	
  3205                           ;incstack = 0
  3206                           ; Regs used in _povorot: [wreg+status,2+status,0+pclath+cstack]
  3207                           
  3208                           
  3209                           ;main.c: 331:     if ((time_s > ROTATION_TIME) &&
  3210  0119  3000               	movlw	0
  3211  011A  0020               	movlb	0	; select bank0
  3212  011B  023A               	subwf	_time_s+2,w
  3213  011C  1D03               	skipz
  3214  011D  2924               	goto	u1685
  3215  011E  3000               	movlw	0
  3216  011F  0239               	subwf	_time_s+1,w
  3217  0120  1D03               	skipz
  3218  0121  2924               	goto	u1685
  3219  0122  3079               	movlw	121
  3220  0123  0238               	subwf	_time_s,w
  3221  0124                     u1685:
  3222  0124  1C03               	skipc
  3223  0125  2927               	goto	u1681
  3224  0126  2928               	goto	u1680
  3225  0127                     u1681:
  3226  0127  2937               	goto	l2429
  3227  0128                     u1680:
  3228  0128                     l2421:
  3229  0128  1976               	btfsc	_FLAGS,2
  3230  0129  292B               	goto	u1691
  3231  012A  292C               	goto	u1690
  3232  012B                     u1691:
  3233  012B  2937               	goto	l2429
  3234  012C                     u1690:
  3235  012C                     l2423:
  3236  012C  1876               	btfsc	_FLAGS,0
  3237  012D  292F               	goto	u1701
  3238  012E  2930               	goto	u1700
  3239  012F                     u1701:
  3240  012F  2937               	goto	l2429
  3241  0130                     u1700:
  3242  0130                     l2425:
  3243  0130  1CF6               	btfss	_FLAGS,1
  3244  0131  2933               	goto	u1711
  3245  0132  2934               	goto	u1710
  3246  0133                     u1711:
  3247  0133  2937               	goto	l2429
  3248  0134                     u1710:
  3249  0134                     l2427:
  3250                           
  3251                           ;main.c: 335:             ) {;main.c: 336:         go_close();
  3252  0134  3183  23A9  3181   	fcall	_go_close
  3253  0137                     l2429:
  3254                           
  3255                           ;main.c: 338:     if ((time_s > (ROTATION_TIME + 10 + 2 * 2)) &&
  3256  0137  3000               	movlw	0
  3257  0138  0020               	movlb	0	; select bank0
  3258  0139  023A               	subwf	_time_s+2,w
  3259  013A  1D03               	skipz
  3260  013B  2942               	goto	u1725
  3261  013C  3000               	movlw	0
  3262  013D  0239               	subwf	_time_s+1,w
  3263  013E  1D03               	skipz
  3264  013F  2942               	goto	u1725
  3265  0140  3087               	movlw	135
  3266  0141  0238               	subwf	_time_s,w
  3267  0142                     u1725:
  3268  0142  1C03               	skipc
  3269  0143  2945               	goto	u1721
  3270  0144  2946               	goto	u1720
  3271  0145                     u1721:
  3272  0145  295C               	goto	l431
  3273  0146                     u1720:
  3274  0146                     l2431:
  3275  0146  1D76               	btfss	_FLAGS,2
  3276  0147  2949               	goto	u1731
  3277  0148  294A               	goto	u1730
  3278  0149                     u1731:
  3279  0149  295C               	goto	l431
  3280  014A                     u1730:
  3281  014A                     l2433:
  3282  014A  1876               	btfsc	_FLAGS,0
  3283  014B  294D               	goto	u1741
  3284  014C  294E               	goto	u1740
  3285  014D                     u1741:
  3286  014D  295C               	goto	l431
  3287  014E                     u1740:
  3288  014E                     l2435:
  3289  014E  1CF6               	btfss	_FLAGS,1
  3290  014F  2951               	goto	u1751
  3291  0150  2952               	goto	u1750
  3292  0151                     u1751:
  3293  0151  295C               	goto	l431
  3294  0152                     u1750:
  3295  0152                     l2437:
  3296                           
  3297                           ;main.c: 342:             ) {;main.c: 343:         go_open();
  3298  0152  3185  2501  3181   	fcall	_go_open
  3299  0155                     l2439:
  3300                           
  3301                           ;main.c: 344:         time_s = 0;
  3302  0155  3000               	movlw	0
  3303  0156  0020               	movlb	0	; select bank0
  3304  0157  00B8               	movwf	_time_s
  3305  0158  3000               	movlw	0
  3306  0159  00B9               	movwf	_time_s+1
  3307  015A  3000               	movlw	0
  3308  015B  00BA               	movwf	_time_s+2
  3309  015C                     l431:
  3310  015C  0008               	return
  3311  015D                     __end_of_povorot:
  3312                           
  3313                           	psect	text17
  3314  003B                     __ptext17:	
  3315 ;; *************** function _get_voltage *****************
  3316 ;; Defined at:
  3317 ;;		line 389 in file "main.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;		None
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;  buf             1   21[BANK0 ] unsigned char 
  3322 ;;  q               1   22[BANK0 ] unsigned char 
  3323 ;;  q               1   23[BANK0 ] unsigned char 
  3324 ;;  buf             3   16[BANK0 ] unsigned um
  3325 ;;  res             2   19[BANK0 ] unsigned int 
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  1    wreg      void 
  3328 ;; Registers used:
  3329 ;;		wreg, status,2, status,0, pclath, cstack
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMMON   BANK0   BANK1
  3335 ;;      Params:         0       0       0
  3336 ;;      Locals:         0       8       0
  3337 ;;      Temps:          0       2       0
  3338 ;;      Totals:         0      10       0
  3339 ;;Total ram usage:       10 bytes
  3340 ;; Hardware stack levels used: 1
  3341 ;; Hardware stack levels required when called: 9
  3342 ;; This function calls:
  3343 ;;		_ADC_GetConversion
  3344 ;;		_EEPROM_ReadByte
  3345 ;;		_EEPROM_WriteByte
  3346 ;;		_EEPROM_WriteShortLong
  3347 ;; This function is called by:
  3348 ;;		_main
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352  003B                     _get_voltage:	
  3353                           ;psect for function _get_voltage
  3354                           
  3355  003B                     l2191:	
  3356                           ;incstack = 0
  3357                           ; Regs used in _get_voltage: [wreg+status,2+status,0+pclath+cstack]
  3358                           
  3359                           
  3360                           ;main.c: 390:     unsigned res = ADC_GetConversion(channel_FVR);
  3361  003B  301F               	movlw	31
  3362  003C  3184  2402  3180   	fcall	_ADC_GetConversion
  3363  003F  0020               	movlb	0	; select bank0
  3364  0040  00AE               	movwf	??_get_voltage
  3365  0041  01AF               	clrf	??_get_voltage+1
  3366  0042  082E               	movf	??_get_voltage,w
  3367  0043  00B3               	movwf	get_voltage@res
  3368  0044  082F               	movf	??_get_voltage+1,w
  3369  0045  00B4               	movwf	get_voltage@res+1
  3370  0046                     l2193:
  3371                           
  3372                           ;main.c: 391:     if (res > 46200) {
  3373  0046  30B4               	movlw	180
  3374  0047  0234               	subwf	get_voltage@res+1,w
  3375  0048  3079               	movlw	121
  3376  0049  1903               	skipnz
  3377  004A  0233               	subwf	get_voltage@res,w
  3378  004B  1C03               	skipc
  3379  004C  284E               	goto	u1491
  3380  004D  284F               	goto	u1490
  3381  004E                     u1491:
  3382  004E  288A               	goto	l457
  3383  004F                     u1490:
  3384  004F                     l2195:
  3385                           
  3386                           ;main.c: 392:         for (char q = 0; q < 0x10; q++) {
  3387  004F  01B7               	clrf	get_voltage@q
  3388  0050                     l2201:
  3389                           
  3390                           ;main.c: 393:             char buf = EEPROM_ReadByte(q);
  3391  0050  0837               	movf	get_voltage@q,w
  3392  0051  3184  241D  3180   	fcall	_EEPROM_ReadByte
  3393  0054  0020               	movlb	0	; select bank0
  3394  0055  00AE               	movwf	??_get_voltage
  3395  0056  082E               	movf	??_get_voltage,w
  3396  0057  00B5               	movwf	get_voltage@buf
  3397  0058                     l2203:
  3398                           
  3399                           ;main.c: 394:             if (buf != START_EEPROM_ADR) EEPROM_WriteByte(q, START_EEPROM_
      +                          ADR);
  3400  0058  0835               	movf	get_voltage@buf,w
  3401  0059  1903               	btfsc	3,2
  3402  005A  285C               	goto	u1501
  3403  005B  285D               	goto	u1500
  3404  005C                     u1501:
  3405  005C  2862               	goto	l2207
  3406  005D                     u1500:
  3407  005D                     l2205:
  3408  005D  01A0               	clrf	EEPROM_WriteByte@dt
  3409  005E  0837               	movf	get_voltage@q,w
  3410  005F  3183  2332  3180   	fcall	_EEPROM_WriteByte
  3411  0062                     l2207:
  3412                           
  3413                           ;main.c: 395:         }
  3414  0062  3001               	movlw	1
  3415  0063  0020               	movlb	0	; select bank0
  3416  0064  00AE               	movwf	??_get_voltage
  3417  0065  082E               	movf	??_get_voltage,w
  3418  0066  07B7               	addwf	get_voltage@q,f
  3419  0067                     l2209:
  3420  0067  3010               	movlw	16
  3421  0068  0237               	subwf	get_voltage@q,w
  3422  0069  1C03               	skipc
  3423  006A  286C               	goto	u1511
  3424  006B  286D               	goto	u1510
  3425  006C                     u1511:
  3426  006C  2850               	goto	l2201
  3427  006D                     u1510:
  3428  006D                     l2211:
  3429                           
  3430                           ;main.c: 396:         __uint24 buf = time_s;
  3431  006D  0838               	movf	_time_s,w
  3432  006E  00B0               	movwf	get_voltage@buf_795
  3433  006F  0839               	movf	_time_s+1,w
  3434  0070  00B1               	movwf	get_voltage@buf_795+1
  3435  0071  083A               	movf	_time_s+2,w
  3436  0072  00B2               	movwf	get_voltage@buf_795+2
  3437  0073                     l2213:
  3438                           
  3439                           ;main.c: 397:         for (char q = START_EEPROM_ADR; q < START_EEPROM_ADR + 12; q += 4)
      +                           {
  3440  0073  01B6               	clrf	get_voltage@q_796
  3441  0074  2884               	goto	l2219
  3442  0075                     l2215:
  3443                           
  3444                           ;main.c: 398:             EEPROM_WriteShortLong(q, buf);
  3445  0075  0830               	movf	get_voltage@buf_795,w
  3446  0076  00A5               	movwf	EEPROM_WriteShortLong@ucData
  3447  0077  0831               	movf	get_voltage@buf_795+1,w
  3448  0078  00A6               	movwf	EEPROM_WriteShortLong@ucData+1
  3449  0079  0832               	movf	get_voltage@buf_795+2,w
  3450  007A  00A7               	movwf	EEPROM_WriteShortLong@ucData+2
  3451  007B  0836               	movf	get_voltage@q_796,w
  3452  007C  3181  21E0  3180   	fcall	_EEPROM_WriteShortLong
  3453  007F                     l2217:
  3454                           
  3455                           ;main.c: 399:         }
  3456  007F  3004               	movlw	4
  3457  0080  0020               	movlb	0	; select bank0
  3458  0081  00AE               	movwf	??_get_voltage
  3459  0082  082E               	movf	??_get_voltage,w
  3460  0083  07B6               	addwf	get_voltage@q_796,f
  3461  0084                     l2219:
  3462  0084  300C               	movlw	12
  3463  0085  0236               	subwf	get_voltage@q_796,w
  3464  0086  1C03               	skipc
  3465  0087  2889               	goto	u1521
  3466  0088  288A               	goto	u1520
  3467  0089                     u1521:
  3468  0089  2875               	goto	l2215
  3469  008A                     u1520:
  3470  008A                     l457:
  3471  008A  0008               	return
  3472  008B                     __end_of_get_voltage:
  3473                           
  3474                           	psect	text18
  3475  01E0                     __ptext18:	
  3476 ;; *************** function _EEPROM_WriteShortLong *****************
  3477 ;; Defined at:
  3478 ;;		line 40 in file "eeprom.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;  addr            1    wreg     unsigned char 
  3481 ;;  ucData          3    5[BANK0 ] unsigned um
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  addr            1   13[BANK0 ] unsigned char 
  3484 ;;  dt              1   12[BANK0 ] unsigned char 
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      void 
  3487 ;; Registers used:
  3488 ;;		wreg, status,2, status,0, pclath, cstack
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMMON   BANK0   BANK1
  3494 ;;      Params:         0       3       0
  3495 ;;      Locals:         0       2       0
  3496 ;;      Temps:          0       4       0
  3497 ;;      Totals:         0       9       0
  3498 ;;Total ram usage:        9 bytes
  3499 ;; Hardware stack levels used: 1
  3500 ;; Hardware stack levels required when called: 8
  3501 ;; This function calls:
  3502 ;;		_EEPROM_WriteByte
  3503 ;; This function is called by:
  3504 ;;		_get_voltage
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508  01E0                     _EEPROM_WriteShortLong:	
  3509                           ;psect for function _EEPROM_WriteShortLong
  3510                           
  3511                           
  3512                           ;incstack = 0
  3513                           ; Regs used in _EEPROM_WriteShortLong: [wreg+status,2+status,0+pclath+cstack]
  3514                           ;EEPROM_WriteShortLong@addr stored from wreg
  3515  01E0  0020               	movlb	0	; select bank0
  3516  01E1  00AD               	movwf	EEPROM_WriteShortLong@addr
  3517  01E2                     l2051:
  3518                           
  3519                           ;eeprom.c: 41:     EEPROM_WriteByte(addr, (unsigned char) ucData);
  3520  01E2  0825               	movf	EEPROM_WriteShortLong@ucData,w
  3521  01E3  00A8               	movwf	??_EEPROM_WriteShortLong
  3522  01E4  0828               	movf	??_EEPROM_WriteShortLong,w
  3523  01E5  00A0               	movwf	EEPROM_WriteByte@dt
  3524  01E6  082D               	movf	EEPROM_WriteShortLong@addr,w
  3525  01E7  3183  2332  3181   	fcall	_EEPROM_WriteByte
  3526  01EA                     l2053:
  3527                           
  3528                           ;eeprom.c: 42:      char dt = ucData >> 8;
  3529  01EA  0020               	movlb	0	; select bank0
  3530  01EB  0825               	movf	EEPROM_WriteShortLong@ucData,w
  3531  01EC  00A8               	movwf	??_EEPROM_WriteShortLong
  3532  01ED  0826               	movf	EEPROM_WriteShortLong@ucData+1,w
  3533  01EE  00A9               	movwf	??_EEPROM_WriteShortLong+1
  3534  01EF  0827               	movf	EEPROM_WriteShortLong@ucData+2,w
  3535  01F0  00AA               	movwf	??_EEPROM_WriteShortLong+2
  3536  01F1  3008               	movlw	8
  3537  01F2                     u1175:
  3538  01F2  36AA               	lsrf	??_EEPROM_WriteShortLong+2,f
  3539  01F3  0CA9               	rrf	??_EEPROM_WriteShortLong+1,f
  3540  01F4  0CA8               	rrf	??_EEPROM_WriteShortLong,f
  3541  01F5                     u1170:
  3542  01F5  0B89               	decfsz	9,f
  3543  01F6  29F2               	goto	u1175
  3544  01F7  0828               	movf	??_EEPROM_WriteShortLong,w
  3545  01F8  00AB               	movwf	??_EEPROM_WriteShortLong+3
  3546  01F9  082B               	movf	??_EEPROM_WriteShortLong+3,w
  3547  01FA  00AC               	movwf	EEPROM_WriteShortLong@dt
  3548  01FB                     l2055:
  3549                           
  3550                           ;eeprom.c: 43:     EEPROM_WriteByte(addr + 1, dt);
  3551  01FB  082C               	movf	EEPROM_WriteShortLong@dt,w
  3552  01FC  00A8               	movwf	??_EEPROM_WriteShortLong
  3553  01FD  0828               	movf	??_EEPROM_WriteShortLong,w
  3554  01FE  00A0               	movwf	EEPROM_WriteByte@dt
  3555  01FF  082D               	movf	EEPROM_WriteShortLong@addr,w
  3556  0200  3E01               	addlw	1
  3557  0201  3183  2332  3181   	fcall	_EEPROM_WriteByte
  3558                           
  3559                           ;eeprom.c: 44:     dt = ucData >> 16;
  3560  0204  0020               	movlb	0	; select bank0
  3561  0205  0825               	movf	EEPROM_WriteShortLong@ucData,w
  3562  0206  00A8               	movwf	??_EEPROM_WriteShortLong
  3563  0207  0826               	movf	EEPROM_WriteShortLong@ucData+1,w
  3564  0208  00A9               	movwf	??_EEPROM_WriteShortLong+1
  3565  0209  0827               	movf	EEPROM_WriteShortLong@ucData+2,w
  3566  020A  00AA               	movwf	??_EEPROM_WriteShortLong+2
  3567  020B  3010               	movlw	16
  3568  020C                     u1185:
  3569  020C  36AA               	lsrf	??_EEPROM_WriteShortLong+2,f
  3570  020D  0CA9               	rrf	??_EEPROM_WriteShortLong+1,f
  3571  020E  0CA8               	rrf	??_EEPROM_WriteShortLong,f
  3572  020F                     u1180:
  3573  020F  0B89               	decfsz	9,f
  3574  0210  2A0C               	goto	u1185
  3575  0211  0828               	movf	??_EEPROM_WriteShortLong,w
  3576  0212  00AB               	movwf	??_EEPROM_WriteShortLong+3
  3577  0213  082B               	movf	??_EEPROM_WriteShortLong+3,w
  3578  0214  00AC               	movwf	EEPROM_WriteShortLong@dt
  3579  0215                     l2057:
  3580                           
  3581                           ;eeprom.c: 45:     EEPROM_WriteByte(addr + 2, dt);
  3582  0215  082C               	movf	EEPROM_WriteShortLong@dt,w
  3583  0216  00A8               	movwf	??_EEPROM_WriteShortLong
  3584  0217  0828               	movf	??_EEPROM_WriteShortLong,w
  3585  0218  00A0               	movwf	EEPROM_WriteByte@dt
  3586  0219  082D               	movf	EEPROM_WriteShortLong@addr,w
  3587  021A  3E02               	addlw	2
  3588  021B  3183  2332  3181   	fcall	_EEPROM_WriteByte
  3589  021E                     l526:
  3590  021E  0008               	return
  3591  021F                     __end_of_EEPROM_WriteShortLong:
  3592                           
  3593                           	psect	text19
  3594  0332                     __ptext19:	
  3595 ;; *************** function _EEPROM_WriteByte *****************
  3596 ;; Defined at:
  3597 ;;		line 6 in file "eeprom.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;  addr            1    wreg     unsigned char 
  3600 ;;  dt              1    0[BANK0 ] unsigned char 
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;  addr            1    3[BANK0 ] unsigned char 
  3603 ;;  status          1    4[BANK0 ] unsigned char 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      void 
  3606 ;; Registers used:
  3607 ;;		wreg, status,2
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMMON   BANK0   BANK1
  3613 ;;      Params:         0       1       0
  3614 ;;      Locals:         0       2       0
  3615 ;;      Temps:          0       2       0
  3616 ;;      Totals:         0       5       0
  3617 ;;Total ram usage:        5 bytes
  3618 ;; Hardware stack levels used: 1
  3619 ;; Hardware stack levels required when called: 7
  3620 ;; This function calls:
  3621 ;;		Nothing
  3622 ;; This function is called by:
  3623 ;;		_get_voltage
  3624 ;;		_EEPROM_WriteShortLong
  3625 ;;		_EEPROM_WriteWord
  3626 ;;		_EEPROM_WriteString
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630  0332                     _EEPROM_WriteByte:	
  3631                           ;psect for function _EEPROM_WriteByte
  3632                           
  3633                           
  3634                           ;incstack = 0
  3635                           ; Regs used in _EEPROM_WriteByte: [wreg+status,2]
  3636                           ;EEPROM_WriteByte@addr stored from wreg
  3637  0332  0020               	movlb	0	; select bank0
  3638  0333  00A3               	movwf	EEPROM_WriteByte@addr
  3639  0334                     l1919:
  3640  0334                     l508:	
  3641                           ;eeprom.c: 7:     unsigned char status;;eeprom.c: 8:     while (WR);
  3642                           
  3643  0334  0023               	movlb	3	; select bank3
  3644  0335  1895               	btfsc	21,1	;volsfr
  3645  0336  2B38               	goto	u1011
  3646  0337  2B39               	goto	u1010
  3647  0338                     u1011:
  3648  0338  2B34               	goto	l508
  3649  0339                     u1010:
  3650  0339                     l1921:
  3651                           
  3652                           ;eeprom.c: 9:     status = GIE;
  3653  0339  3000               	movlw	0
  3654  033A  1B8B               	btfsc	11,7	;volatile
  3655  033B  3001               	movlw	1
  3656  033C  0020               	movlb	0	; select bank0
  3657  033D  00A4               	movwf	EEPROM_WriteByte@status
  3658  033E                     l1923:
  3659                           
  3660                           ;eeprom.c: 10:     GIE = 0;
  3661  033E  138B               	bcf	11,7	;volatile
  3662  033F                     l1925:
  3663                           
  3664                           ;eeprom.c: 11:     EEADR = addr;
  3665  033F  0823               	movf	EEPROM_WriteByte@addr,w
  3666  0340  00A1               	movwf	??_EEPROM_WriteByte
  3667  0341  01A2               	clrf	??_EEPROM_WriteByte+1
  3668  0342  0821               	movf	??_EEPROM_WriteByte,w
  3669  0343  0023               	movlb	3	; select bank3
  3670  0344  0091               	movwf	17	;volatile
  3671  0345  0020               	movlb	0	; select bank0
  3672  0346  0822               	movf	??_EEPROM_WriteByte+1,w
  3673  0347  0023               	movlb	3	; select bank3
  3674  0348  0092               	movwf	18	;volatile
  3675  0349                     l1927:
  3676                           
  3677                           ;eeprom.c: 12:     EEDATA = dt;
  3678  0349  0020               	movlb	0	; select bank0
  3679  034A  0820               	movf	EEPROM_WriteByte@dt,w
  3680  034B  0023               	movlb	3	; select bank3
  3681  034C  0093               	movwf	19	;volatile
  3682  034D                     l1929:
  3683                           
  3684                           ;eeprom.c: 13:     WREN = 1;
  3685  034D  1515               	bsf	21,2	;volsfr
  3686  034E                     l1931:
  3687                           
  3688                           ;eeprom.c: 14:     EECON2 = 0x55;
  3689  034E  3055               	movlw	85
  3690  034F  0096               	movwf	22	;volsfr
  3691  0350                     l1933:
  3692                           
  3693                           ;eeprom.c: 15:     EECON2 = 0xAA;
  3694  0350  30AA               	movlw	170
  3695  0351  0096               	movwf	22	;volsfr
  3696  0352                     l1935:
  3697                           
  3698                           ;eeprom.c: 16:     WR = 1;
  3699  0352  1495               	bsf	21,1	;volsfr
  3700  0353                     l1937:
  3701                           
  3702                           ;eeprom.c: 17:     GIE = status;
  3703  0353  0020               	movlb	0	; select bank0
  3704  0354  1824               	btfsc	EEPROM_WriteByte@status,0
  3705  0355  2B57               	goto	u1021
  3706  0356  2B59               	goto	u1020
  3707  0357                     u1021:
  3708  0357  178B               	bsf	11,7	;volatile
  3709  0358  2B5A               	goto	u1034
  3710  0359                     u1020:
  3711  0359  138B               	bcf	11,7	;volatile
  3712  035A                     u1034:
  3713  035A                     l1939:
  3714                           
  3715                           ;eeprom.c: 18:     WREN = 0;
  3716  035A  0023               	movlb	3	; select bank3
  3717  035B  1115               	bcf	21,2	;volsfr
  3718  035C                     l511:
  3719  035C  0008               	return
  3720  035D                     __end_of_EEPROM_WriteByte:
  3721                           
  3722                           	psect	text20
  3723  041D                     __ptext20:	
  3724 ;; *************** function _EEPROM_ReadByte *****************
  3725 ;; Defined at:
  3726 ;;		line 21 in file "eeprom.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;  addr            1    wreg     unsigned char 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  addr            1    2[BANK0 ] unsigned char 
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      unsigned char 
  3733 ;; Registers used:
  3734 ;;		wreg
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMMON   BANK0   BANK1
  3740 ;;      Params:         0       0       0
  3741 ;;      Locals:         0       1       0
  3742 ;;      Temps:          0       2       0
  3743 ;;      Totals:         0       3       0
  3744 ;;Total ram usage:        3 bytes
  3745 ;; Hardware stack levels used: 1
  3746 ;; Hardware stack levels required when called: 7
  3747 ;; This function calls:
  3748 ;;		Nothing
  3749 ;; This function is called by:
  3750 ;;		_get_voltage
  3751 ;;		_EEPROM_ReadWord
  3752 ;;		_EEPROM_ReadShortLong
  3753 ;;		_EEPROM_ReadString
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757  041D                     _EEPROM_ReadByte:	
  3758                           ;psect for function _EEPROM_ReadByte
  3759                           
  3760                           
  3761                           ;incstack = 0
  3762                           ; Regs used in _EEPROM_ReadByte: [wreg]
  3763                           ;EEPROM_ReadByte@addr stored from wreg
  3764  041D  0020               	movlb	0	; select bank0
  3765  041E  00A2               	movwf	EEPROM_ReadByte@addr
  3766  041F                     l2041:
  3767  041F                     l514:	
  3768                           ;eeprom.c: 22:     while (RD || WR);
  3769                           
  3770  041F  0023               	movlb	3	; select bank3
  3771  0420  1815               	btfsc	21,0	;volsfr
  3772  0421  2C23               	goto	u1151
  3773  0422  2C24               	goto	u1150
  3774  0423                     u1151:
  3775  0423  2C1F               	goto	l514
  3776  0424                     u1150:
  3777  0424                     l2043:
  3778  0424  1895               	btfsc	21,1	;volsfr
  3779  0425  2C27               	goto	u1161
  3780  0426  2C28               	goto	u1160
  3781  0427                     u1161:
  3782  0427  2C1F               	goto	l514
  3783  0428                     u1160:
  3784  0428                     l2045:
  3785                           
  3786                           ;eeprom.c: 23:     EEADR = addr;
  3787  0428  0020               	movlb	0	; select bank0
  3788  0429  0822               	movf	EEPROM_ReadByte@addr,w
  3789  042A  00A0               	movwf	??_EEPROM_ReadByte
  3790  042B  01A1               	clrf	??_EEPROM_ReadByte+1
  3791  042C  0820               	movf	??_EEPROM_ReadByte,w
  3792  042D  0023               	movlb	3	; select bank3
  3793  042E  0091               	movwf	17	;volatile
  3794  042F  0020               	movlb	0	; select bank0
  3795  0430  0821               	movf	??_EEPROM_ReadByte+1,w
  3796  0431  0023               	movlb	3	; select bank3
  3797  0432  0092               	movwf	18	;volatile
  3798  0433                     l2047:
  3799                           
  3800                           ;eeprom.c: 24:     RD = 1;
  3801  0433  1415               	bsf	21,0	;volsfr
  3802                           
  3803                           ;eeprom.c: 25:     return EEDATA;
  3804  0434  0813               	movf	19,w	;volatile
  3805  0435                     l517:
  3806  0435  0008               	return
  3807  0436                     __end_of_EEPROM_ReadByte:
  3808                           
  3809                           	psect	text21
  3810  025D                     __ptext21:	
  3811 ;; *************** function _get_jump *****************
  3812 ;; Defined at:
  3813 ;;		line 218 in file "main.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;		None
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  res             2    4[BANK0 ] unsigned int 
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  1    wreg      void 
  3820 ;; Registers used:
  3821 ;;		wreg, status,2, status,0, pclath, cstack
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMMON   BANK0   BANK1
  3827 ;;      Params:         0       0       0
  3828 ;;      Locals:         0       2       0
  3829 ;;      Temps:          0       2       0
  3830 ;;      Totals:         0       4       0
  3831 ;;Total ram usage:        4 bytes
  3832 ;; Hardware stack levels used: 1
  3833 ;; Hardware stack levels required when called: 8
  3834 ;; This function calls:
  3835 ;;		_ADC_GetConversion
  3836 ;; This function is called by:
  3837 ;;		_main
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841  025D                     _get_jump:	
  3842                           ;psect for function _get_jump
  3843                           
  3844  025D                     l375:	
  3845                           ;incstack = 0
  3846                           ; Regs used in _get_jump: [wreg+status,2+status,0+pclath+cstack]
  3847                           ;main.c: 220:     static signed char jump_counter;;main.c: 221:     do { ANSELAbits.ANSA
      +                          1 = 1; } while(0);
  3848                           
  3849  025D  0023               	movlb	3	; select bank3
  3850  025E  148C               	bsf	12,1	;volatile
  3851  025F                     l2103:
  3852                           
  3853                           ;main.c: 222:     unsigned res = ADC_GetConversion(PIN_JUMP_STATE);
  3854  025F  3001               	movlw	1
  3855  0260  3184  2402  3182   	fcall	_ADC_GetConversion
  3856  0263  0020               	movlb	0	; select bank0
  3857  0264  00A2               	movwf	??_get_jump
  3858  0265  01A3               	clrf	??_get_jump+1
  3859  0266  0822               	movf	??_get_jump,w
  3860  0267  00A4               	movwf	get_jump@res
  3861  0268  0823               	movf	??_get_jump+1,w
  3862  0269  00A5               	movwf	get_jump@res+1
  3863  026A                     l2105:
  3864  026A  0023               	movlb	3	; select bank3
  3865  026B  108C               	bcf	12,1	;volatile
  3866  026C                     l2107:
  3867                           
  3868                           ;main.c: 226:     if (res < 50) jump_counter--;
  3869  026C  3000               	movlw	0
  3870  026D  0020               	movlb	0	; select bank0
  3871  026E  0225               	subwf	get_jump@res+1,w
  3872  026F  3032               	movlw	50
  3873  0270  1903               	skipnz
  3874  0271  0224               	subwf	get_jump@res,w
  3875  0272  1803               	skipnc
  3876  0273  2A75               	goto	u1261
  3877  0274  2A76               	goto	u1260
  3878  0275                     u1261:
  3879  0275  2A7B               	goto	l2111
  3880  0276                     u1260:
  3881  0276                     l2109:
  3882  0276  30FF               	movlw	255
  3883  0277  00A2               	movwf	??_get_jump
  3884  0278  0822               	movf	??_get_jump,w
  3885  0279  07BC               	addwf	get_jump@jump_counter,f
  3886  027A  2A7F               	goto	l2113
  3887  027B                     l2111:
  3888  027B  3001               	movlw	1
  3889  027C  00A2               	movwf	??_get_jump
  3890  027D  0822               	movf	??_get_jump,w
  3891  027E  07BC               	addwf	get_jump@jump_counter,f
  3892  027F                     l2113:
  3893                           
  3894                           ;main.c: 238:     if (jump_counter > 10) {
  3895  027F  083C               	movf	get_jump@jump_counter,w
  3896  0280  3A80               	xorlw	128
  3897  0281  3E75               	addlw	-139
  3898  0282  1C03               	skipc
  3899  0283  2A85               	goto	u1271
  3900  0284  2A86               	goto	u1270
  3901  0285                     u1271:
  3902  0285  2A8C               	goto	l2119
  3903  0286                     u1270:
  3904  0286                     l2115:
  3905                           
  3906                           ;main.c: 239:         jump_counter = 10;
  3907  0286  300A               	movlw	10
  3908  0287  00A2               	movwf	??_get_jump
  3909  0288  0822               	movf	??_get_jump,w
  3910  0289  00BC               	movwf	get_jump@jump_counter
  3911  028A                     l2117:
  3912                           
  3913                           ;main.c: 240:         FLAGS.bits._JUMP_CONNECTED = 0;
  3914  028A  1276               	bcf	_FLAGS,4
  3915                           
  3916                           ;main.c: 241:     } else if (jump_counter<-10) {
  3917  028B  2A98               	goto	l384
  3918  028C                     l2119:
  3919  028C  083C               	movf	get_jump@jump_counter,w
  3920  028D  3A80               	xorlw	128
  3921  028E  3E8A               	addlw	138
  3922  028F  1803               	skipnc
  3923  0290  2A92               	goto	u1281
  3924  0291  2A93               	goto	u1280
  3925  0292                     u1281:
  3926  0292  2A98               	goto	l384
  3927  0293                     u1280:
  3928  0293                     l2121:
  3929                           
  3930                           ;main.c: 242:         jump_counter = -10;
  3931  0293  30F6               	movlw	246
  3932  0294  00A2               	movwf	??_get_jump
  3933  0295  0822               	movf	??_get_jump,w
  3934  0296  00BC               	movwf	get_jump@jump_counter
  3935  0297                     l2123:
  3936                           
  3937                           ;main.c: 243:         FLAGS.bits._JUMP_CONNECTED = 1;
  3938  0297  1676               	bsf	_FLAGS,4
  3939  0298                     l384:
  3940  0298  0008               	return
  3941  0299                     __end_of_get_jump:
  3942                           
  3943                           	psect	text22
  3944  01A0                     __ptext22:	
  3945 ;; *************** function _get_fun *****************
  3946 ;; Defined at:
  3947 ;;		line 144 in file "main.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;		None
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  res             2    4[BANK0 ] unsigned int 
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  1    wreg      void 
  3954 ;; Registers used:
  3955 ;;		wreg, status,2, status,0, pclath, cstack
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMMON   BANK0   BANK1
  3961 ;;      Params:         0       0       0
  3962 ;;      Locals:         0       2       0
  3963 ;;      Temps:          0       2       0
  3964 ;;      Totals:         0       4       0
  3965 ;;Total ram usage:        4 bytes
  3966 ;; Hardware stack levels used: 1
  3967 ;; Hardware stack levels required when called: 8
  3968 ;; This function calls:
  3969 ;;		_ADC_GetConversion
  3970 ;; This function is called by:
  3971 ;;		_main
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975  01A0                     _get_fun:	
  3976                           ;psect for function _get_fun
  3977                           
  3978  01A0                     l337:	
  3979                           ;incstack = 0
  3980                           ; Regs used in _get_fun: [wreg+status,2+status,0+pclath+cstack]
  3981                           ;main.c: 146:     static signed char fun_counter;;main.c: 147:     do { LATCbits.LATC1 =
      +                           1; } while(0);
  3982                           
  3983  01A0  0022               	movlb	2	; select bank2
  3984  01A1  148E               	bsf	14,1	;volatile
  3985  01A2                     l339:	
  3986                           ;main.c: 148:     do { ANSELCbits.ANSC2 = 1; } while(0);
  3987                           
  3988  01A2  0023               	movlb	3	; select bank3
  3989  01A3  150E               	bsf	14,2	;volatile
  3990  01A4                     l2077:
  3991                           
  3992                           ;main.c: 149:     unsigned res = ADC_GetConversion(PIN_FUN_STATE);
  3993  01A4  3006               	movlw	6
  3994  01A5  3184  2402  3181   	fcall	_ADC_GetConversion
  3995  01A8  0020               	movlb	0	; select bank0
  3996  01A9  00A2               	movwf	??_get_fun
  3997  01AA  01A3               	clrf	??_get_fun+1
  3998  01AB  0822               	movf	??_get_fun,w
  3999  01AC  00A4               	movwf	get_fun@res
  4000  01AD  0823               	movf	??_get_fun+1,w
  4001  01AE  00A5               	movwf	get_fun@res+1
  4002  01AF                     l2079:
  4003  01AF  0023               	movlb	3	; select bank3
  4004  01B0  110E               	bcf	14,2	;volatile
  4005  01B1                     l2081:
  4006  01B1  0022               	movlb	2	; select bank2
  4007  01B2  108E               	bcf	14,1	;volatile
  4008  01B3                     l2083:
  4009                           
  4010                           ;main.c: 152:     if (res < 50) fun_counter--;
  4011  01B3  3000               	movlw	0
  4012  01B4  0020               	movlb	0	; select bank0
  4013  01B5  0225               	subwf	get_fun@res+1,w
  4014  01B6  3032               	movlw	50
  4015  01B7  1903               	skipnz
  4016  01B8  0224               	subwf	get_fun@res,w
  4017  01B9  1803               	skipnc
  4018  01BA  29BC               	goto	u1231
  4019  01BB  29BD               	goto	u1230
  4020  01BC                     u1231:
  4021  01BC  29C2               	goto	l2087
  4022  01BD                     u1230:
  4023  01BD                     l2085:
  4024  01BD  30FF               	movlw	255
  4025  01BE  00A2               	movwf	??_get_fun
  4026  01BF  0822               	movf	??_get_fun,w
  4027  01C0  07BE               	addwf	get_fun@fun_counter,f
  4028  01C1  29C6               	goto	l2089
  4029  01C2                     l2087:
  4030  01C2  3001               	movlw	1
  4031  01C3  00A2               	movwf	??_get_fun
  4032  01C4  0822               	movf	??_get_fun,w
  4033  01C5  07BE               	addwf	get_fun@fun_counter,f
  4034  01C6                     l2089:
  4035                           
  4036                           ;main.c: 165:     if (fun_counter > 10) {
  4037  01C6  083E               	movf	get_fun@fun_counter,w
  4038  01C7  3A80               	xorlw	128
  4039  01C8  3E75               	addlw	-139
  4040  01C9  1C03               	skipc
  4041  01CA  29CC               	goto	u1241
  4042  01CB  29CD               	goto	u1240
  4043  01CC                     u1241:
  4044  01CC  29D3               	goto	l2095
  4045  01CD                     u1240:
  4046  01CD                     l2091:
  4047                           
  4048                           ;main.c: 166:         fun_counter = 10;
  4049  01CD  300A               	movlw	10
  4050  01CE  00A2               	movwf	??_get_fun
  4051  01CF  0822               	movf	??_get_fun,w
  4052  01D0  00BE               	movwf	get_fun@fun_counter
  4053  01D1                     l2093:
  4054                           
  4055                           ;main.c: 167:         FLAGS.bits._FUN_CONNECTED = 0;
  4056  01D1  11F6               	bcf	_FLAGS,3
  4057                           
  4058                           ;main.c: 168:     } else if (fun_counter<-10) {
  4059  01D2  29DF               	goto	l350
  4060  01D3                     l2095:
  4061  01D3  083E               	movf	get_fun@fun_counter,w
  4062  01D4  3A80               	xorlw	128
  4063  01D5  3E8A               	addlw	138
  4064  01D6  1803               	skipnc
  4065  01D7  29D9               	goto	u1251
  4066  01D8  29DA               	goto	u1250
  4067  01D9                     u1251:
  4068  01D9  29DF               	goto	l350
  4069  01DA                     u1250:
  4070  01DA                     l2097:
  4071                           
  4072                           ;main.c: 169:         fun_counter = -10;
  4073  01DA  30F6               	movlw	246
  4074  01DB  00A2               	movwf	??_get_fun
  4075  01DC  0822               	movf	??_get_fun,w
  4076  01DD  00BE               	movwf	get_fun@fun_counter
  4077  01DE                     l2099:
  4078                           
  4079                           ;main.c: 170:         FLAGS.bits._FUN_CONNECTED = 1;
  4080  01DE  15F6               	bsf	_FLAGS,3
  4081  01DF                     l350:
  4082  01DF  0008               	return
  4083  01E0                     __end_of_get_fun:
  4084                           
  4085                           	psect	text23
  4086  0402                     __ptext23:	
  4087 ;; *************** function _ADC_GetConversion *****************
  4088 ;; Defined at:
  4089 ;;		line 111 in file "mcc_generated_files/adc.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;  channel         1    wreg     enum E2178
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;  channel         1    1[BANK0 ] enum E2178
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      unsigned char 
  4096 ;; Registers used:
  4097 ;;		wreg, status,2, status,0
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMMON   BANK0   BANK1
  4103 ;;      Params:         0       0       0
  4104 ;;      Locals:         0       1       0
  4105 ;;      Temps:          0       1       0
  4106 ;;      Totals:         0       2       0
  4107 ;;Total ram usage:        2 bytes
  4108 ;; Hardware stack levels used: 1
  4109 ;; Hardware stack levels required when called: 7
  4110 ;; This function calls:
  4111 ;;		Nothing
  4112 ;; This function is called by:
  4113 ;;		_get_fun
  4114 ;;		_get_fun_full
  4115 ;;		_get_jump
  4116 ;;		_get_jump_full
  4117 ;;		_get_voltage
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121  0402                     _ADC_GetConversion:	
  4122                           ;psect for function _ADC_GetConversion
  4123                           
  4124                           
  4125                           ;incstack = 0
  4126                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  4127                           ;ADC_GetConversion@channel stored from wreg
  4128  0402  0020               	movlb	0	; select bank0
  4129  0403  00A1               	movwf	ADC_GetConversion@channel
  4130  0404                     l1885:
  4131                           
  4132                           ;mcc_generated_files/adc.c: 111: char ADC_GetConversion(adc_channel_t channel);mcc_gener
      +                          ated_files/adc.c: 112: {;mcc_generated_files/adc.c: 114:     ADCON0bits.CHS = channel;
  4133  0404  0821               	movf	ADC_GetConversion@channel,w
  4134  0405  00A0               	movwf	??_ADC_GetConversion
  4135  0406  0DA0               	rlf	??_ADC_GetConversion,f
  4136  0407  0DA0               	rlf	??_ADC_GetConversion,f
  4137  0408  0021               	movlb	1	; select bank1
  4138  0409  081D               	movf	29,w	;volatile
  4139  040A  0020               	movlb	0	; select bank0
  4140  040B  0620               	xorwf	??_ADC_GetConversion,w
  4141  040C  3983               	andlw	-125
  4142  040D  0620               	xorwf	??_ADC_GetConversion,w
  4143  040E  0021               	movlb	1	; select bank1
  4144  040F  009D               	movwf	29	;volatile
  4145  0410                     l1887:
  4146                           
  4147                           ;mcc_generated_files/adc.c: 117:     ADCON0bits.ADON = 1;
  4148  0410  141D               	bsf	29,0	;volatile
  4149  0411                     l1889:
  4150                           
  4151                           ;mcc_generated_files/adc.c: 120:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  4152  0411  3006               	movlw	6
  4153  0412                     u1947:
  4154  0412  0B89               	decfsz	9,f
  4155  0413  2C12               	goto	u1947
  4156  0414  3200               	nop2
  4157  0415                     l1891:
  4158                           
  4159                           ;mcc_generated_files/adc.c: 123:     ADCON0bits.GO_nDONE = 1;
  4160  0415  0021               	movlb	1	; select bank1
  4161  0416  149D               	bsf	29,1	;volatile
  4162  0417                     l63:	
  4163                           ;mcc_generated_files/adc.c: 127:     {;mcc_generated_files/adc.c: 128:     }
  4164                           
  4165                           
  4166                           ;mcc_generated_files/adc.c: 126:     while (ADCON0bits.GO_nDONE)
  4167  0417  189D               	btfsc	29,1	;volatile
  4168  0418  2C1A               	goto	u921
  4169  0419  2C1B               	goto	u920
  4170  041A                     u921:
  4171  041A  2C17               	goto	l63
  4172  041B                     u920:
  4173  041B                     l1893:
  4174                           
  4175                           ;mcc_generated_files/adc.c: 131:     return ( ADRESH);
  4176  041B  081C               	movf	28,w	;volatile
  4177  041C                     l66:
  4178  041C  0008               	return
  4179  041D                     __end_of_ADC_GetConversion:
  4180                           
  4181                           	psect	text24
  4182  015D                     __ptext24:	
  4183 ;; *************** function _fun_work *****************
  4184 ;; Defined at:
  4185 ;;		line 349 in file "main.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;		None
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;		None
  4190 ;; Return value:  Size  Location     Type
  4191 ;;                  1    wreg      void 
  4192 ;; Registers used:
  4193 ;;		wreg, status,2, status,0, pclath, cstack
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMMON   BANK0   BANK1
  4199 ;;      Params:         0       0       0
  4200 ;;      Locals:         0       0       0
  4201 ;;      Temps:          0       1       0
  4202 ;;      Totals:         0       1       0
  4203 ;;Total ram usage:        1 bytes
  4204 ;; Hardware stack levels used: 1
  4205 ;; Hardware stack levels required when called: 9
  4206 ;; This function calls:
  4207 ;;		_beep
  4208 ;;		_go_close
  4209 ;;		_go_close_alt
  4210 ;;		_go_open
  4211 ;;		_go_open_alt
  4212 ;; This function is called by:
  4213 ;;		_main
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217  015D                     _fun_work:	
  4218                           ;psect for function _fun_work
  4219                           
  4220  015D                     l2441:	
  4221                           ;incstack = 0
  4222                           ; Regs used in _fun_work: [wreg+status,2+status,0+pclath+cstack]
  4223                           
  4224                           
  4225                           ;main.c: 350:     {;main.c: 351:         if (FLAGS.bits._FUN_CONNECTED &&
  4226  015D  1DF6               	btfss	_FLAGS,3
  4227  015E  2960               	goto	u1761
  4228  015F  2961               	goto	u1760
  4229  0160                     u1761:
  4230  0160  297F               	goto	l2457
  4231  0161                     u1760:
  4232  0161                     l2443:
  4233  0161  1876               	btfsc	_FLAGS,0
  4234  0162  2964               	goto	u1771
  4235  0163  2965               	goto	u1770
  4236  0164                     u1771:
  4237  0164  297F               	goto	l2457
  4238  0165                     u1770:
  4239  0165                     l2445:
  4240  0165  1D76               	btfss	_FLAGS,2
  4241  0166  2968               	goto	u1781
  4242  0167  2969               	goto	u1780
  4243  0168                     u1781:
  4244  0168  297F               	goto	l2457
  4245  0169                     u1780:
  4246  0169                     l2447:
  4247  0169  1AF6               	btfsc	_FLAGS,5
  4248  016A  296C               	goto	u1791
  4249  016B  296D               	goto	u1790
  4250  016C                     u1791:
  4251  016C  297F               	goto	l2457
  4252  016D                     u1790:
  4253  016D                     l2449:
  4254                           
  4255                           ;main.c: 354:                 !FLAGS.bits.RELE_POW_WAIT) {;main.c: 355:             if (
      +                          FLAGS.bits.NORMAL_WORK_MODE) go_open();
  4256  016D  1CF6               	btfss	_FLAGS,1
  4257  016E  2970               	goto	u1801
  4258  016F  2971               	goto	u1800
  4259  0170                     u1801:
  4260  0170  2975               	goto	l2453
  4261  0171                     u1800:
  4262  0171                     l2451:
  4263  0171  3185  2501  3181   	fcall	_go_open
  4264  0174  2978               	goto	l2455
  4265  0175                     l2453:
  4266  0175  3185  2530  3181   	fcall	_go_open_alt
  4267  0178                     l2455:
  4268                           
  4269                           ;main.c: 358:             beep(40, 1);
  4270  0178  0020               	movlb	0	; select bank0
  4271  0179  01A0               	clrf	beep@count
  4272  017A  0AA0               	incf	beep@count,f
  4273  017B  3028               	movlw	40
  4274  017C  3183  2302  3181   	fcall	_beep
  4275  017F                     l2457:
  4276                           
  4277                           ;main.c: 360:         if (!FLAGS.bits._FUN_CONNECTED &&
  4278  017F  19F6               	btfsc	_FLAGS,3
  4279  0180  2982               	goto	u1811
  4280  0181  2983               	goto	u1810
  4281  0182                     u1811:
  4282  0182  299F               	goto	l440
  4283  0183                     u1810:
  4284  0183                     l2459:
  4285  0183  1976               	btfsc	_FLAGS,2
  4286  0184  2986               	goto	u1821
  4287  0185  2987               	goto	u1820
  4288  0186                     u1821:
  4289  0186  299F               	goto	l440
  4290  0187                     u1820:
  4291  0187                     l2461:
  4292  0187  1AF6               	btfsc	_FLAGS,5
  4293  0188  298A               	goto	u1831
  4294  0189  298B               	goto	u1830
  4295  018A                     u1831:
  4296  018A  299F               	goto	l440
  4297  018B                     u1830:
  4298  018B                     l2463:
  4299                           
  4300                           ;main.c: 362:                 !FLAGS.bits.RELE_POW_WAIT) {;main.c: 363:             if (
      +                          FLAGS.bits.NORMAL_WORK_MODE) go_close();
  4301  018B  1CF6               	btfss	_FLAGS,1
  4302  018C  298E               	goto	u1841
  4303  018D  298F               	goto	u1840
  4304  018E                     u1841:
  4305  018E  2993               	goto	l2467
  4306  018F                     u1840:
  4307  018F                     l2465:
  4308  018F  3183  23A9  3181   	fcall	_go_close
  4309  0192  2996               	goto	l2469
  4310  0193                     l2467:
  4311  0193  3185  2535  3181   	fcall	_go_close_alt
  4312  0196                     l2469:
  4313                           
  4314                           ;main.c: 366:             beep(40, 2);
  4315  0196  3002               	movlw	2
  4316  0197  0020               	movlb	0	; select bank0
  4317  0198  00A6               	movwf	??_fun_work
  4318  0199  0826               	movf	??_fun_work,w
  4319  019A  00A0               	movwf	beep@count
  4320  019B  3028               	movlw	40
  4321  019C  3183  2302  3181   	fcall	_beep
  4322  019F                     l440:
  4323  019F  0008               	return
  4324  01A0                     __end_of_fun_work:
  4325                           
  4326                           	psect	text25
  4327  0530                     __ptext25:	
  4328 ;; *************** function _go_open_alt *****************
  4329 ;; Defined at:
  4330 ;;		line 113 in file "main.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;		None
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;		None
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  1    wreg      void 
  4337 ;; Registers used:
  4338 ;;		None
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMMON   BANK0   BANK1
  4344 ;;      Params:         0       0       0
  4345 ;;      Locals:         0       0       0
  4346 ;;      Temps:          0       0       0
  4347 ;;      Totals:         0       0       0
  4348 ;;Total ram usage:        0 bytes
  4349 ;; Hardware stack levels used: 1
  4350 ;; Hardware stack levels required when called: 7
  4351 ;; This function calls:
  4352 ;;		Nothing
  4353 ;; This function is called by:
  4354 ;;		_fun_work
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358  0530                     _go_open_alt:	
  4359                           ;psect for function _go_open_alt
  4360                           
  4361  0530                     l2409:	
  4362                           ;incstack = 0
  4363                           ; Regs used in _go_open_alt: []
  4364                           
  4365                           
  4366                           ;main.c: 114:     FLAGS.bits.CLOSED = 0;
  4367  0530  1176               	bcf	_FLAGS,2
  4368  0531                     l304:	
  4369                           ;main.c: 115:     do { LATCbits.LATC4 = 0; } while(0);
  4370                           
  4371  0531  0022               	movlb	2	; select bank2
  4372  0532  120E               	bcf	14,4	;volatile
  4373  0533                     l306:	
  4374                           ;main.c: 116:     do { LATCbits.LATC5 = 0; } while(0);
  4375                           
  4376  0533  128E               	bcf	14,5	;volatile
  4377  0534                     l308:
  4378  0534  0008               	return
  4379  0535                     __end_of_go_open_alt:
  4380                           
  4381                           	psect	text26
  4382  0501                     __ptext26:	
  4383 ;; *************** function _go_open *****************
  4384 ;; Defined at:
  4385 ;;		line 99 in file "main.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;		None
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;		None
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      void 
  4392 ;; Registers used:
  4393 ;;		wreg
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMMON   BANK0   BANK1
  4399 ;;      Params:         0       0       0
  4400 ;;      Locals:         0       0       0
  4401 ;;      Temps:          0       1       0
  4402 ;;      Totals:         0       1       0
  4403 ;;Total ram usage:        1 bytes
  4404 ;; Hardware stack levels used: 1
  4405 ;; Hardware stack levels required when called: 7
  4406 ;; This function calls:
  4407 ;;		Nothing
  4408 ;; This function is called by:
  4409 ;;		_povorot
  4410 ;;		_fun_work
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414  0501                     _go_open:	
  4415                           ;psect for function _go_open
  4416                           
  4417  0501                     l290:	
  4418                           ;incstack = 0
  4419                           ; Regs used in _go_open: [wreg]
  4420                           ;main.c: 100:     do { LATCbits.LATC4 = 0; } while(0);
  4421                           
  4422  0501  0022               	movlb	2	; select bank2
  4423  0502  120E               	bcf	14,4	;volatile
  4424  0503                     l292:	
  4425                           ;main.c: 101:     do { LATCbits.LATC5 = 1; } while(0);
  4426                           
  4427  0503  168E               	bsf	14,5	;volatile
  4428  0504                     l1979:
  4429                           
  4430                           ;main.c: 102:     time_pow_s = 10;
  4431  0504  300A               	movlw	10
  4432  0505  0020               	movlb	0	; select bank0
  4433  0506  00A0               	movwf	??_go_open
  4434  0507  0820               	movf	??_go_open,w
  4435  0508  00BF               	movwf	_time_pow_s
  4436  0509                     l1981:
  4437                           
  4438                           ;main.c: 103:     FLAGS.bits.RELE_POW_WAIT = 1;
  4439  0509  16F6               	bsf	_FLAGS,5
  4440  050A                     l294:
  4441  050A  0008               	return
  4442  050B                     __end_of_go_open:
  4443                           
  4444                           	psect	text27
  4445  0535                     __ptext27:	
  4446 ;; *************** function _go_close_alt *****************
  4447 ;; Defined at:
  4448 ;;		line 107 in file "main.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;		None
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;		None
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      void 
  4455 ;; Registers used:
  4456 ;;		None
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMMON   BANK0   BANK1
  4462 ;;      Params:         0       0       0
  4463 ;;      Locals:         0       0       0
  4464 ;;      Temps:          0       0       0
  4465 ;;      Totals:         0       0       0
  4466 ;;Total ram usage:        0 bytes
  4467 ;; Hardware stack levels used: 1
  4468 ;; Hardware stack levels required when called: 7
  4469 ;; This function calls:
  4470 ;;		Nothing
  4471 ;; This function is called by:
  4472 ;;		_fun_work
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476  0535                     _go_close_alt:	
  4477                           ;psect for function _go_close_alt
  4478                           
  4479  0535                     l2407:	
  4480                           ;incstack = 0
  4481                           ; Regs used in _go_close_alt: []
  4482                           
  4483                           
  4484                           ;main.c: 108:     FLAGS.bits.CLOSED = 1;
  4485  0535  1576               	bsf	_FLAGS,2
  4486  0536                     l297:	
  4487                           ;main.c: 109:     do { LATCbits.LATC4 = 0; } while(0);
  4488                           
  4489  0536  0022               	movlb	2	; select bank2
  4490  0537  120E               	bcf	14,4	;volatile
  4491  0538                     l299:	
  4492                           ;main.c: 110:     do { LATCbits.LATC5 = 1; } while(0);
  4493                           
  4494  0538  168E               	bsf	14,5	;volatile
  4495  0539                     l301:
  4496  0539  0008               	return
  4497  053A                     __end_of_go_close_alt:
  4498                           
  4499                           	psect	text28
  4500  03A9                     __ptext28:	
  4501 ;; *************** function _go_close *****************
  4502 ;; Defined at:
  4503 ;;		line 88 in file "main.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;		None
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;		None
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  1    wreg      void 
  4510 ;; Registers used:
  4511 ;;		wreg
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMMON   BANK0   BANK1
  4517 ;;      Params:         0       0       0
  4518 ;;      Locals:         0       0       0
  4519 ;;      Temps:          0       2       0
  4520 ;;      Totals:         0       2       0
  4521 ;;Total ram usage:        2 bytes
  4522 ;; Hardware stack levels used: 1
  4523 ;; Hardware stack levels required when called: 7
  4524 ;; This function calls:
  4525 ;;		Nothing
  4526 ;; This function is called by:
  4527 ;;		_povorot
  4528 ;;		_fun_work
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532  03A9                     _go_close:	
  4533                           ;psect for function _go_close
  4534                           
  4535  03A9                     l1967:	
  4536                           ;incstack = 0
  4537                           ; Regs used in _go_close: [wreg]
  4538                           
  4539                           
  4540                           ;main.c: 89:     time_s = 0;
  4541  03A9  3000               	movlw	0
  4542  03AA  0020               	movlb	0	; select bank0
  4543  03AB  00B8               	movwf	_time_s
  4544  03AC  3000               	movlw	0
  4545  03AD  00B9               	movwf	_time_s+1
  4546  03AE  3000               	movlw	0
  4547  03AF  00BA               	movwf	_time_s+2
  4548  03B0                     l1969:
  4549  03B0  0022               	movlb	2	; select bank2
  4550  03B1  160E               	bsf	14,4	;volatile
  4551  03B2                     l284:
  4552                           
  4553                           ;main.c: 91:     _delay((unsigned long)((2 * 1000)*(16000000/4000.0)));
  4554  03B2  3029               	movlw	41
  4555  03B3  0020               	movlb	0	; select bank0
  4556  03B4  00A1               	movwf	??_go_close+1
  4557  03B5  3096               	movlw	150
  4558  03B6  00A0               	movwf	??_go_close
  4559  03B7  307F               	movlw	127
  4560  03B8                     u1957:
  4561  03B8  0B89               	decfsz	9,f
  4562  03B9  2BB8               	goto	u1957
  4563  03BA  0BA0               	decfsz	??_go_close,f
  4564  03BB  2BB8               	goto	u1957
  4565  03BC  0BA1               	decfsz	??_go_close+1,f
  4566  03BD  2BB8               	goto	u1957
  4567  03BE                     l1971:
  4568  03BE  0022               	movlb	2	; select bank2
  4569  03BF  168E               	bsf	14,5	;volatile
  4570  03C0                     l286:
  4571                           
  4572                           ;main.c: 93:     time_pow_s = 10;
  4573  03C0  300A               	movlw	10
  4574  03C1  0020               	movlb	0	; select bank0
  4575  03C2  00A0               	movwf	??_go_close
  4576  03C3  0820               	movf	??_go_close,w
  4577  03C4  00BF               	movwf	_time_pow_s
  4578  03C5                     l1973:
  4579                           
  4580                           ;main.c: 94:     FLAGS.bits.RELE_POW_WAIT = 1;
  4581  03C5  16F6               	bsf	_FLAGS,5
  4582  03C6                     l1975:
  4583                           
  4584                           ;main.c: 95:     FLAGS.bits.RELE_CON_WAIT = 1;
  4585  03C6  1776               	bsf	_FLAGS,6
  4586  03C7                     l287:
  4587  03C7  0008               	return
  4588  03C8                     __end_of_go_close:
  4589                           
  4590                           	psect	text29
  4591  0302                     __ptext29:	
  4592 ;; *************** function _beep *****************
  4593 ;; Defined at:
  4594 ;;		line 78 in file "main.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;  time            1    wreg     unsigned char 
  4597 ;;  count           1    0[BANK0 ] unsigned char 
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;  time            1    3[BANK0 ] unsigned char 
  4600 ;;  i               1    5[BANK0 ] unsigned char 
  4601 ;;  j               1    4[BANK0 ] unsigned char 
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  1    wreg      void 
  4604 ;; Registers used:
  4605 ;;		wreg, status,2, status,0, pclath, cstack
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMMON   BANK0   BANK1
  4611 ;;      Params:         0       1       0
  4612 ;;      Locals:         0       3       0
  4613 ;;      Temps:          0       2       0
  4614 ;;      Totals:         0       6       0
  4615 ;;Total ram usage:        6 bytes
  4616 ;; Hardware stack levels used: 1
  4617 ;; Hardware stack levels required when called: 8
  4618 ;; This function calls:
  4619 ;;		_switch_zum
  4620 ;; This function is called by:
  4621 ;;		_fun_work
  4622 ;;		_switch_wm
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626  0302                     _beep:	
  4627                           ;psect for function _beep
  4628                           
  4629                           
  4630                           ;incstack = 0
  4631                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
  4632                           ;beep@time stored from wreg
  4633  0302  0020               	movlb	0	; select bank0
  4634  0303  00A3               	movwf	beep@time
  4635  0304                     l2389:
  4636                           
  4637                           ;main.c: 79:     for (char j = 0; j < count; j++) {
  4638  0304  01A4               	clrf	beep@j
  4639  0305  2B2B               	goto	l2405
  4640  0306                     l2391:
  4641                           
  4642                           ;main.c: 80:         for (char i = 0; i < time; i++) {
  4643  0306  01A5               	clrf	beep@i
  4644  0307  2B14               	goto	l2399
  4645  0308                     l2393:
  4646                           
  4647                           ;main.c: 81:             switch_zum();
  4648  0308  3184  24B7  3183   	fcall	_switch_zum
  4649  030B                     l2395:
  4650                           
  4651                           ;main.c: 82:             _delay((unsigned long)((300)*(16000000/4000000.0)));
  4652  030B  30F0               	movlw	240
  4653  030C                     u1967:
  4654  030C  3200               	nop2
  4655  030D  0B89               	decfsz	9,f
  4656  030E  2B0C               	goto	u1967
  4657  030F                     l2397:
  4658                           
  4659                           ;main.c: 83:         }
  4660  030F  3001               	movlw	1
  4661  0310  0020               	movlb	0	; select bank0
  4662  0311  00A1               	movwf	??_beep
  4663  0312  0821               	movf	??_beep,w
  4664  0313  07A5               	addwf	beep@i,f
  4665  0314                     l2399:
  4666  0314  0823               	movf	beep@time,w
  4667  0315  0225               	subwf	beep@i,w
  4668  0316  1C03               	skipc
  4669  0317  2B19               	goto	u1651
  4670  0318  2B1A               	goto	u1650
  4671  0319                     u1651:
  4672  0319  2B08               	goto	l2393
  4673  031A                     u1650:
  4674  031A                     l2401:
  4675                           
  4676                           ;main.c: 84:         _delay((unsigned long)((100)*(16000000/4000.0)));
  4677  031A  3003               	movlw	3
  4678  031B  0020               	movlb	0	; select bank0
  4679  031C  00A2               	movwf	??_beep+1
  4680  031D  3008               	movlw	8
  4681  031E  00A1               	movwf	??_beep
  4682  031F  3077               	movlw	119
  4683  0320                     u1977:
  4684  0320  0B89               	decfsz	9,f
  4685  0321  2B20               	goto	u1977
  4686  0322  0BA1               	decfsz	??_beep,f
  4687  0323  2B20               	goto	u1977
  4688  0324  0BA2               	decfsz	??_beep+1,f
  4689  0325  2B20               	goto	u1977
  4690  0326                     l2403:
  4691                           
  4692                           ;main.c: 85:     }
  4693  0326  3001               	movlw	1
  4694  0327  0020               	movlb	0	; select bank0
  4695  0328  00A1               	movwf	??_beep
  4696  0329  0821               	movf	??_beep,w
  4697  032A  07A4               	addwf	beep@j,f
  4698  032B                     l2405:
  4699  032B  0820               	movf	beep@count,w
  4700  032C  0224               	subwf	beep@j,w
  4701  032D  1C03               	skipc
  4702  032E  2B30               	goto	u1661
  4703  032F  2B31               	goto	u1660
  4704  0330                     u1661:
  4705  0330  2B06               	goto	l2391
  4706  0331                     u1660:
  4707  0331                     l280:
  4708  0331  0008               	return
  4709  0332                     __end_of_beep:
  4710                           
  4711                           	psect	text30
  4712  04B7                     __ptext30:	
  4713 ;; *************** function _switch_zum *****************
  4714 ;; Defined at:
  4715 ;;		line 70 in file "main.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;		None
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;		None
  4720 ;; Return value:  Size  Location     Type
  4721 ;;                  1    wreg      void 
  4722 ;; Registers used:
  4723 ;;		status,0
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMMON   BANK0   BANK1
  4729 ;;      Params:         0       0       0
  4730 ;;      Locals:         0       0       0
  4731 ;;      Temps:          0       0       0
  4732 ;;      Totals:         0       0       0
  4733 ;;Total ram usage:        0 bytes
  4734 ;; Hardware stack levels used: 1
  4735 ;; Hardware stack levels required when called: 7
  4736 ;; This function calls:
  4737 ;;		Nothing
  4738 ;; This function is called by:
  4739 ;;		_beep
  4740 ;;		_start_setup
  4741 ;;		_TMR0_ISR
  4742 ;; This function uses a non-reentrant model
  4743 ;;
  4744                           
  4745  04B7                     _switch_zum:	
  4746                           ;psect for function _switch_zum
  4747                           
  4748                           
  4749                           ;Skip over the trampoline to the duplicate function for level 1
  4750  04B7  1C7E               	btfss	int$flags,0
  4751  04B8  2CBA               	goto	_switch_zum$intlevel0
  4752  04B9  2CF4               	ljmp	i1_switch_zum
  4753  04BA                     _switch_zum$intlevel0:
  4754  04BA                     l266:	
  4755                           ;incstack = 0
  4756                           ; Regs used in _switch_zum: [status,0]
  4757                           ;main.c: 71:     do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  4758                           
  4759  04BA                     l2383:
  4760  04BA  1003               	clrc
  4761  04BB  0022               	movlb	2	; select bank2
  4762  04BC  1E8C               	btfss	12,5	;volatile
  4763  04BD  1403               	setc
  4764  04BE  1803               	btfsc	3,0
  4765  04BF  2CC1               	goto	u1631
  4766  04C0  2CC4               	goto	u1630
  4767  04C1                     u1631:
  4768  04C1  0022               	movlb	2	; select bank2
  4769  04C2  168C               	bsf	12,5	;volatile
  4770  04C3  2CC6               	goto	u1644
  4771  04C4                     u1630:
  4772  04C4  0022               	movlb	2	; select bank2
  4773  04C5  128C               	bcf	12,5	;volatile
  4774  04C6                     u1644:
  4775  04C6                     l268:
  4776  04C6  0008               	return
  4777  04C7                     __end_of_switch_zum:
  4778                           
  4779                           	psect	intentry
  4780  0004                     __pintentry:	
  4781 ;; *************** function _INTERRUPT_InterruptManager *****************
  4782 ;; Defined at:
  4783 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;		None
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;		None
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  1    wreg      void 
  4790 ;; Registers used:
  4791 ;;		wreg, status,2, status,0, pclath, cstack
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMMON   BANK0   BANK1
  4797 ;;      Params:         0       0       0
  4798 ;;      Locals:         0       0       0
  4799 ;;      Temps:          0       0       0
  4800 ;;      Totals:         0       0       0
  4801 ;;Total ram usage:        0 bytes
  4802 ;; Hardware stack levels used: 1
  4803 ;; Hardware stack levels required when called: 6
  4804 ;; This function calls:
  4805 ;;		_TMR0_ISR
  4806 ;;		_TMR2_ISR
  4807 ;; This function is called by:
  4808 ;;		Interrupt level 1
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812  0004                     _INTERRUPT_InterruptManager:
  4813                           
  4814                           ;incstack = 0
  4815  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4816                           
  4817                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  4818  0005  3180               	pagesel	$
  4819  0006                     i1l2523:
  4820                           
  4821                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4822  0006  1E8B               	btfss	11,5	;volatile
  4823  0007  2809               	goto	u188_21
  4824  0008  280A               	goto	u188_20
  4825  0009                     u188_21:
  4826  0009  2812               	goto	i1l110
  4827  000A                     u188_20:
  4828  000A                     i1l2525:
  4829  000A  1D0B               	btfss	11,2	;volatile
  4830  000B  280D               	goto	u189_21
  4831  000C  280E               	goto	u189_20
  4832  000D                     u189_21:
  4833  000D  2812               	goto	i1l110
  4834  000E                     u189_20:
  4835  000E                     i1l2527:
  4836                           
  4837                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  4838  000E  3184  24D7  3180   	fcall	_TMR0_ISR
  4839                           
  4840                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  4841  0011  2824               	goto	i1l116
  4842  0012                     i1l110:	
  4843                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  4844                           
  4845  0012  1F0B               	btfss	11,6	;volatile
  4846  0013  2815               	goto	u190_21
  4847  0014  2816               	goto	u190_20
  4848  0015                     u190_21:
  4849  0015  2824               	goto	i1l116
  4850  0016                     u190_20:
  4851  0016                     i1l2529:
  4852                           
  4853                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  4854  0016  0021               	movlb	1	; select bank1
  4855  0017  1C91               	btfss	17,1	;volatile
  4856  0018  281A               	goto	u191_21
  4857  0019  281B               	goto	u191_20
  4858  001A                     u191_21:
  4859  001A  2824               	goto	i1l115
  4860  001B                     u191_20:
  4861  001B                     i1l2531:
  4862  001B  0020               	movlb	0	; select bank0
  4863  001C  1C91               	btfss	17,1	;volatile
  4864  001D  281F               	goto	u192_21
  4865  001E  2820               	goto	u192_20
  4866  001F                     u192_21:
  4867  001F  2824               	goto	i1l115
  4868  0020                     u192_20:
  4869  0020                     i1l2533:
  4870                           
  4871                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
  4872  0020  3184  248F  3180   	fcall	_TMR2_ISR
  4873                           
  4874                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4875  0023  2824               	goto	i1l116
  4876  0024                     i1l115:	
  4877                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  4878                           
  4879  0024                     i1l116:
  4880  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4881  0025  0009               	retfie
  4882  0026                     __end_of_INTERRUPT_InterruptManager:
  4883                           
  4884                           	psect	text32
  4885  048F                     __ptext32:	
  4886 ;; *************** function _TMR2_ISR *****************
  4887 ;; Defined at:
  4888 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;		None
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;		None
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  1    wreg      void 
  4895 ;; Registers used:
  4896 ;;		wreg, status,2, status,0, pclath, cstack
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMMON   BANK0   BANK1
  4902 ;;      Params:         0       0       0
  4903 ;;      Locals:         0       0       0
  4904 ;;      Temps:          0       0       0
  4905 ;;      Totals:         0       0       0
  4906 ;;Total ram usage:        0 bytes
  4907 ;; Hardware stack levels used: 1
  4908 ;; Hardware stack levels required when called: 5
  4909 ;; This function calls:
  4910 ;;		_TMR2_CallBack
  4911 ;; This function is called by:
  4912 ;;		_INTERRUPT_InterruptManager
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916  048F                     _TMR2_ISR:	
  4917                           ;psect for function _TMR2_ISR
  4918                           
  4919  048F                     i1l2069:	
  4920                           ;incstack = 0
  4921                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  4922                           
  4923                           
  4924                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
  4925  048F  0020               	movlb	0	; select bank0
  4926  0490  1091               	bcf	17,1	;volatile
  4927  0491                     i1l2071:
  4928                           
  4929                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 100)
  4930  0491  3001               	movlw	1
  4931  0492  07F0               	addwf	TMR2_ISR@CountCallBack,f	;volatile
  4932  0493  3000               	movlw	0
  4933  0494  3DF1               	addwfc	TMR2_ISR@CountCallBack+1,f	;volatile
  4934  0495  3000               	movlw	0
  4935  0496  0271               	subwf	TMR2_ISR@CountCallBack+1,w	;volatile
  4936  0497  3064               	movlw	100
  4937  0498  1903               	skipnz
  4938  0499  0270               	subwf	TMR2_ISR@CountCallBack,w	;volatile
  4939  049A  1C03               	skipc
  4940  049B  2C9D               	goto	u122_21
  4941  049C  2C9E               	goto	u122_20
  4942  049D                     u122_21:
  4943  049D  2CA3               	goto	i1l157
  4944  049E                     u122_20:
  4945  049E                     i1l2073:
  4946                           
  4947                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
  4948  049E  3184  24E7  3184   	fcall	_TMR2_CallBack
  4949  04A1                     i1l2075:
  4950                           
  4951                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
  4952  04A1  01F0               	clrf	TMR2_ISR@CountCallBack	;volatile
  4953  04A2  01F1               	clrf	TMR2_ISR@CountCallBack+1	;volatile
  4954  04A3                     i1l157:
  4955  04A3  0008               	return
  4956  04A4                     __end_of_TMR2_ISR:
  4957                           
  4958                           	psect	text33
  4959  04E7                     __ptext33:	
  4960 ;; *************** function _TMR2_CallBack *****************
  4961 ;; Defined at:
  4962 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;		None
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;		None
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  1    wreg      void 
  4969 ;; Registers used:
  4970 ;;		wreg, status,2, status,0, pclath, cstack
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMMON   BANK0   BANK1
  4976 ;;      Params:         0       0       0
  4977 ;;      Locals:         0       0       0
  4978 ;;      Temps:          0       0       0
  4979 ;;      Totals:         0       0       0
  4980 ;;Total ram usage:        0 bytes
  4981 ;; Hardware stack levels used: 1
  4982 ;; Hardware stack levels required when called: 4
  4983 ;; This function calls:
  4984 ;;		Absolute function
  4985 ;;		_TMR2_DefaultInterruptHandler
  4986 ;;		_sec_tick_work
  4987 ;; This function is called by:
  4988 ;;		_TMR2_ISR
  4989 ;; This function uses a non-reentrant model
  4990 ;;
  4991                           
  4992  04E7                     _TMR2_CallBack:	
  4993                           ;psect for function _TMR2_CallBack
  4994                           
  4995  04E7                     i1l1945:	
  4996                           ;incstack = 0
  4997                           ; Regs used in _TMR2_CallBack: [wreg+status,2+status,0+pclath+cstack]
  4998                           
  4999                           
  5000                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
  5001  04E7  0020               	movlb	0	; select bank0
  5002  04E8  0843               	movf	_TMR2_InterruptHandler,w
  5003  04E9  0444               	iorwf	_TMR2_InterruptHandler+1,w
  5004  04EA  1903               	btfsc	3,2
  5005  04EB  2CED               	goto	u104_21
  5006  04EC  2CEE               	goto	u104_20
  5007  04ED                     u104_21:
  5008  04ED  2CF3               	goto	i1l161
  5009  04EE                     u104_20:
  5010  04EE                     i1l1947:
  5011                           
  5012                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
  5013  04EE  0844               	movf	_TMR2_InterruptHandler+1,w
  5014  04EF  008A               	movwf	10
  5015  04F0  0843               	movf	_TMR2_InterruptHandler,w
  5016  04F1  000A               	callw
  5017  04F2  3184               	pagesel	$
  5018  04F3                     i1l161:
  5019  04F3  0008               	return
  5020  04F4                     __end_of_TMR2_CallBack:
  5021                           
  5022                           	psect	text34
  5023  0553                     __ptext34:	
  5024 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  5025 ;; Defined at:
  5026 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;		None
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;		None
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  1    wreg      void 
  5033 ;; Registers used:
  5034 ;;		None
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMMON   BANK0   BANK1
  5040 ;;      Params:         0       0       0
  5041 ;;      Locals:         0       0       0
  5042 ;;      Temps:          0       0       0
  5043 ;;      Totals:         0       0       0
  5044 ;;Total ram usage:        0 bytes
  5045 ;; Hardware stack levels used: 1
  5046 ;; This function calls:
  5047 ;;		Nothing
  5048 ;; This function is called by:
  5049 ;;		_TMR2_Initialize
  5050 ;;		_TMR2_CallBack
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054  0553                     _TMR2_DefaultInterruptHandler:	
  5055                           ;psect for function _TMR2_DefaultInterruptHandler
  5056                           
  5057  0553                     i1l167:	
  5058                           ;incstack = 0
  5059                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  5060                           
  5061  0553  0008               	return
  5062  0554                     __end_of_TMR2_DefaultInterruptHandler:
  5063                           
  5064                           	psect	text35
  5065  021F                     __ptext35:	
  5066 ;; *************** function _sec_tick_work *****************
  5067 ;; Defined at:
  5068 ;;		line 309 in file "main.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;		None
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;		None
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  1    wreg      void 
  5075 ;; Registers used:
  5076 ;;		wreg, status,2, status,0, pclath, cstack
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMMON   BANK0   BANK1
  5082 ;;      Params:         0       0       0
  5083 ;;      Locals:         0       0       0
  5084 ;;      Temps:          1       0       0
  5085 ;;      Totals:         1       0       0
  5086 ;;Total ram usage:        1 bytes
  5087 ;; Hardware stack levels used: 1
  5088 ;; Hardware stack levels required when called: 3
  5089 ;; This function calls:
  5090 ;;		_get_measure
  5091 ;;		_rele_tick
  5092 ;;		_toggle_tone
  5093 ;; This function is called by:
  5094 ;;		_start_setup
  5095 ;;		_TMR2_CallBack
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099  021F                     _sec_tick_work:	
  5100                           ;psect for function _sec_tick_work
  5101                           
  5102  021F                     i1l1899:	
  5103                           ;incstack = 0
  5104                           ; Regs used in _sec_tick_work: [wreg+status,2+status,0+pclath+cstack]
  5105                           
  5106                           
  5107                           ;main.c: 313:     time_s++;
  5108  021F  3001               	movlw	1
  5109  0220  0020               	movlb	0	; select bank0
  5110  0221  07B8               	addwf	_time_s,f
  5111  0222  3000               	movlw	0
  5112  0223  1803               	skipnc
  5113  0224  3001               	movlw	1
  5114  0225  07B9               	addwf	_time_s+1,f
  5115  0226  3000               	movlw	0
  5116  0227  1803               	skipnc
  5117  0228  3001               	movlw	1
  5118  0229  07BA               	addwf	_time_s+2,f
  5119  022A                     i1l1901:
  5120                           
  5121                           ;main.c: 314:     rele_tick();
  5122  022A  3183  235D  3182   	fcall	_rele_tick
  5123  022D  0064               	clrwdt	;# 
  5124  022E                     i1l1903:
  5125                           
  5126                           ;main.c: 316:     if (FLAGS.bits.ALARM) {
  5127  022E  1C76               	btfss	_FLAGS,0
  5128  022F  2A31               	goto	u95_21
  5129  0230  2A32               	goto	u95_20
  5130  0231                     u95_21:
  5131  0231  2A42               	goto	i1l1909
  5132  0232                     u95_20:
  5133  0232                     i1l1905:
  5134  0232  1003               	clrc
  5135  0233  0022               	movlb	2	; select bank2
  5136  0234  1E0C               	btfss	12,4	;volatile
  5137  0235  1403               	setc
  5138  0236  1803               	btfsc	3,0
  5139  0237  2A39               	goto	u96_21
  5140  0238  2A3C               	goto	u96_20
  5141  0239                     u96_21:
  5142  0239  0022               	movlb	2	; select bank2
  5143  023A  160C               	bsf	12,4	;volatile
  5144  023B  2A3E               	goto	u97_24
  5145  023C                     u96_20:
  5146  023C  0022               	movlb	2	; select bank2
  5147  023D  120C               	bcf	12,4	;volatile
  5148  023E                     u97_24:
  5149  023E                     i1l1907:
  5150                           
  5151                           ;main.c: 318:         toggle_tone();
  5152  023E  3185  250B  3182   	fcall	_toggle_tone
  5153                           
  5154                           ;main.c: 319:     } else {
  5155  0241  2A5C               	goto	i1l426
  5156  0242                     i1l1909:
  5157                           
  5158                           ;main.c: 320:         get_measure();
  5159  0242  3182  22CE  3182   	fcall	_get_measure
  5160  0245                     i1l1911:
  5161                           
  5162                           ;main.c: 321:         static char iled;;main.c: 322:         iled++;
  5163  0245  3001               	movlw	1
  5164  0246  00FD               	movwf	??_sec_tick_work
  5165  0247  087D               	movf	??_sec_tick_work,w
  5166  0248  07F4               	addwf	sec_tick_work@iled,f
  5167  0249                     i1l1913:
  5168                           
  5169                           ;main.c: 323:         if (iled > 2) {
  5170  0249  3003               	movlw	3
  5171  024A  0274               	subwf	sec_tick_work@iled,w
  5172  024B  1C03               	skipc
  5173  024C  2A4E               	goto	u98_21
  5174  024D  2A4F               	goto	u98_20
  5175  024E                     u98_21:
  5176  024E  2A5C               	goto	i1l426
  5177  024F                     u98_20:
  5178  024F                     i1l1915:
  5179  024F  1003               	clrc
  5180  0250  0022               	movlb	2	; select bank2
  5181  0251  1E0C               	btfss	12,4	;volatile
  5182  0252  1403               	setc
  5183  0253  1803               	btfsc	3,0
  5184  0254  2A56               	goto	u99_21
  5185  0255  2A59               	goto	u99_20
  5186  0256                     u99_21:
  5187  0256  0022               	movlb	2	; select bank2
  5188  0257  160C               	bsf	12,4	;volatile
  5189  0258  2A5B               	goto	u100_24
  5190  0259                     u99_20:
  5191  0259  0022               	movlb	2	; select bank2
  5192  025A  120C               	bcf	12,4	;volatile
  5193  025B                     u100_24:
  5194  025B                     i1l1917:
  5195                           
  5196                           ;main.c: 325:             iled = 0;
  5197  025B  01F4               	clrf	sec_tick_work@iled
  5198  025C                     i1l426:
  5199  025C  0008               	return
  5200  025D                     __end_of_sec_tick_work:
  5201                           
  5202                           	psect	text36
  5203  050B                     __ptext36:	
  5204 ;; *************** function _toggle_tone *****************
  5205 ;; Defined at:
  5206 ;;		line 74 in file "main.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;		None
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;		None
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  1    wreg      void 
  5213 ;; Registers used:
  5214 ;;		status,0
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMMON   BANK0   BANK1
  5220 ;;      Params:         0       0       0
  5221 ;;      Locals:         0       0       0
  5222 ;;      Temps:          0       0       0
  5223 ;;      Totals:         0       0       0
  5224 ;;Total ram usage:        0 bytes
  5225 ;; Hardware stack levels used: 1
  5226 ;; This function calls:
  5227 ;;		Nothing
  5228 ;; This function is called by:
  5229 ;;		_sec_tick_work
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233  050B                     _toggle_tone:	
  5234                           ;psect for function _toggle_tone
  5235                           
  5236  050B                     i1l1795:	
  5237                           ;incstack = 0
  5238                           ; Regs used in _toggle_tone: [status,0]
  5239                           
  5240                           
  5241                           ;main.c: 75:     INTCONbits.TMR0IE = ~INTCONbits.TMR0IE;
  5242  050B  1003               	clrc
  5243  050C  1E8B               	btfss	11,5	;volatile
  5244  050D  1403               	setc
  5245  050E  1803               	btfsc	3,0
  5246  050F  2D11               	goto	u84_21
  5247  0510  2D13               	goto	u84_20
  5248  0511                     u84_21:
  5249  0511  168B               	bsf	11,5	;volatile
  5250  0512  2D14               	goto	u85_24
  5251  0513                     u84_20:
  5252  0513  128B               	bcf	11,5	;volatile
  5253  0514                     u85_24:
  5254  0514                     i1l271:
  5255  0514  0008               	return
  5256  0515                     __end_of_toggle_tone:
  5257                           
  5258                           	psect	text37
  5259  035D                     __ptext37:	
  5260 ;; *************** function _rele_tick *****************
  5261 ;; Defined at:
  5262 ;;		line 288 in file "main.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;		None
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;		None
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      void 
  5269 ;; Registers used:
  5270 ;;		wreg, status,2, status,0
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMMON   BANK0   BANK1
  5276 ;;      Params:         0       0       0
  5277 ;;      Locals:         0       0       0
  5278 ;;      Temps:          2       0       0
  5279 ;;      Totals:         2       0       0
  5280 ;;Total ram usage:        2 bytes
  5281 ;; Hardware stack levels used: 1
  5282 ;; This function calls:
  5283 ;;		Nothing
  5284 ;; This function is called by:
  5285 ;;		_sec_tick_work
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           
  5289  035D                     _rele_tick:	
  5290                           ;psect for function _rele_tick
  5291                           
  5292  035D                     i1l1817:	
  5293                           ;incstack = 0
  5294                           ; Regs used in _rele_tick: [wreg+status,2+status,0]
  5295                           
  5296                           
  5297                           ;main.c: 289:     if (FLAGS.bits.RELE_POW_WAIT) {
  5298  035D  1EF6               	btfss	_FLAGS,5
  5299  035E  2B60               	goto	u89_21
  5300  035F  2B61               	goto	u89_20
  5301  0360                     u89_21:
  5302  0360  2B86               	goto	i1l414
  5303  0361                     u89_20:
  5304  0361                     i1l1819:
  5305                           
  5306                           ;main.c: 290:         if (time_pow_s > 0) {
  5307  0361  0020               	movlb	0	; select bank0
  5308  0362  083F               	movf	_time_pow_s,w
  5309  0363  1903               	btfsc	3,2
  5310  0364  2B66               	goto	u90_21
  5311  0365  2B67               	goto	u90_20
  5312  0366                     u90_21:
  5313  0366  2B6A               	goto	i1l404
  5314  0367                     u90_20:
  5315  0367                     i1l1821:
  5316                           
  5317                           ;main.c: 291:             time_pow_s--;
  5318  0367  3001               	movlw	1
  5319  0368  02BF               	subwf	_time_pow_s,f
  5320                           
  5321                           ;main.c: 292:         } else {
  5322  0369  2B86               	goto	i1l414
  5323  036A                     i1l404:
  5324                           
  5325                           ;main.c: 293:             if (FLAGS.bits.RELE_CON_WAIT) {
  5326  036A  1F76               	btfss	_FLAGS,6
  5327  036B  2B6D               	goto	u91_21
  5328  036C  2B6E               	goto	u91_20
  5329  036D                     u91_21:
  5330  036D  2B82               	goto	i1l412
  5331  036E                     u91_20:
  5332  036E                     i1l407:	
  5333                           ;main.c: 294:                 do { LATCbits.LATC5 = 0; } while(0);
  5334                           
  5335  036E  0022               	movlb	2	; select bank2
  5336  036F  128E               	bcf	14,5	;volatile
  5337  0370                     i1l1823:
  5338                           
  5339                           ;main.c: 295:                 _delay((unsigned long)((2 * 1000)*(16000000/4000.0)));
  5340  0370  3029               	movlw	41
  5341  0371  00F8               	movwf	??_rele_tick+1
  5342  0372  3096               	movlw	150
  5343  0373  00F7               	movwf	??_rele_tick
  5344  0374  307F               	movlw	127
  5345  0375                     u198_27:
  5346  0375  0B89               	decfsz	9,f
  5347  0376  2B75               	goto	u198_27
  5348  0377  0BF7               	decfsz	??_rele_tick,f
  5349  0378  2B75               	goto	u198_27
  5350  0379  0BF8               	decfsz	??_rele_tick+1,f
  5351  037A  2B75               	goto	u198_27
  5352  037B  0000               	nop
  5353  037C                     i1l1825:
  5354  037C  0022               	movlb	2	; select bank2
  5355  037D  120E               	bcf	14,4	;volatile
  5356  037E                     i1l1827:
  5357                           
  5358                           ;main.c: 297:                 FLAGS.bits.CLOSED = 1;
  5359  037E  1576               	bsf	_FLAGS,2
  5360  037F                     i1l1829:
  5361                           
  5362                           ;main.c: 298:                 FLAGS.bits.RELE_CON_WAIT = 0;
  5363  037F  1376               	bcf	_FLAGS,6
  5364  0380                     i1l1831:
  5365                           
  5366                           ;main.c: 299:                 FLAGS.bits.RELE_POW_WAIT = 0;
  5367  0380  12F6               	bcf	_FLAGS,5
  5368                           
  5369                           ;main.c: 300:             } else {
  5370  0381  2B86               	goto	i1l414
  5371  0382                     i1l412:	
  5372                           ;main.c: 301:                 do { LATCbits.LATC5 = 0; } while(0);
  5373                           
  5374  0382  0022               	movlb	2	; select bank2
  5375  0383  128E               	bcf	14,5	;volatile
  5376  0384                     i1l413:
  5377                           
  5378                           ;main.c: 302:                 FLAGS.bits.CLOSED = 0;
  5379  0384  1176               	bcf	_FLAGS,2
  5380                           
  5381                           ;main.c: 303:                 FLAGS.bits.RELE_POW_WAIT = 0;
  5382  0385  12F6               	bcf	_FLAGS,5
  5383  0386                     i1l414:
  5384  0386  0008               	return
  5385  0387                     __end_of_rele_tick:
  5386                           
  5387                           	psect	text38
  5388  02CE                     __ptext38:	
  5389 ;; *************** function _get_measure *****************
  5390 ;; Defined at:
  5391 ;;		line 131 in file "main.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;		None
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  res             2    4[COMMON] unsigned int 
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  1    wreg      void 
  5398 ;; Registers used:
  5399 ;;		wreg, status,2, status,0, pclath, cstack
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMMON   BANK0   BANK1
  5405 ;;      Params:         0       0       0
  5406 ;;      Locals:         2       0       0
  5407 ;;      Temps:          2       0       0
  5408 ;;      Totals:         4       0       0
  5409 ;;Total ram usage:        4 bytes
  5410 ;; Hardware stack levels used: 1
  5411 ;; Hardware stack levels required when called: 2
  5412 ;; This function calls:
  5413 ;;		_start_alarm
  5414 ;;		i1_ADC_GetConversion
  5415 ;; This function is called by:
  5416 ;;		_sec_tick_work
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420  02CE                     _get_measure:	
  5421                           ;psect for function _get_measure
  5422                           
  5423  02CE                     i1l320:	
  5424                           ;incstack = 0
  5425                           ; Regs used in _get_measure: [wreg+status,2+status,0+pclath+cstack]
  5426                           ;main.c: 132:     static unsigned char measures;;main.c: 133:     do { LATCbits.LATC1 = 
      +                          1; } while(0);
  5427                           
  5428  02CE  0022               	movlb	2	; select bank2
  5429  02CF  148E               	bsf	14,1	;volatile
  5430  02D0                     i1l322:	
  5431                           ;main.c: 134:     do { ANSELCbits.ANSC3 = 1; } while(0);
  5432                           
  5433  02D0  0023               	movlb	3	; select bank3
  5434  02D1  158E               	bsf	14,3	;volatile
  5435  02D2                     i1l1797:
  5436                           
  5437                           ;main.c: 135:     unsigned res = ADC_GetConversion(PIN_WSP_STATE);
  5438  02D2  3007               	movlw	7
  5439  02D3  3184  2436  3182   	fcall	i1_ADC_GetConversion
  5440  02D6  00F9               	movwf	??_get_measure
  5441  02D7  01FA               	clrf	??_get_measure+1
  5442  02D8  0879               	movf	??_get_measure,w
  5443  02D9  00FB               	movwf	get_measure@res
  5444  02DA  087A               	movf	??_get_measure+1,w
  5445  02DB  00FC               	movwf	get_measure@res+1
  5446  02DC                     i1l1799:
  5447  02DC  0023               	movlb	3	; select bank3
  5448  02DD  118E               	bcf	14,3	;volatile
  5449  02DE                     i1l1801:
  5450  02DE  0022               	movlb	2	; select bank2
  5451  02DF  108E               	bcf	14,1	;volatile
  5452  02E0                     i1l1803:
  5453                           
  5454                           ;main.c: 138:     if (res < BAD_WSP_VOLTAGE) measures++;
  5455  02E0  3000               	movlw	0
  5456  02E1  027C               	subwf	get_measure@res+1,w
  5457  02E2  3078               	movlw	120
  5458  02E3  1903               	skipnz
  5459  02E4  027B               	subwf	get_measure@res,w
  5460  02E5  1803               	skipnc
  5461  02E6  2AE8               	goto	u86_21
  5462  02E7  2AE9               	goto	u86_20
  5463  02E8                     u86_21:
  5464  02E8  2AEE               	goto	i1l1807
  5465  02E9                     u86_20:
  5466  02E9                     i1l1805:
  5467  02E9  3001               	movlw	1
  5468  02EA  00F9               	movwf	??_get_measure
  5469  02EB  0879               	movf	??_get_measure,w
  5470  02EC  07F5               	addwf	get_measure@measures,f
  5471  02ED  2AF8               	goto	i1l1811
  5472  02EE                     i1l1807:
  5473  02EE  3000               	movlw	0
  5474  02EF  027C               	subwf	get_measure@res+1,w
  5475  02F0  3088               	movlw	136
  5476  02F1  1903               	skipnz
  5477  02F2  027B               	subwf	get_measure@res,w
  5478  02F3  1C03               	skipc
  5479  02F4  2AF6               	goto	u87_21
  5480  02F5  2AF7               	goto	u87_20
  5481  02F6                     u87_21:
  5482  02F6  2AF8               	goto	i1l1811
  5483  02F7                     u87_20:
  5484  02F7                     i1l1809:
  5485  02F7  01F5               	clrf	get_measure@measures
  5486  02F8                     i1l1811:
  5487                           
  5488                           ;main.c: 140:     if (measures > 2) start_alarm();
  5489  02F8  3003               	movlw	3
  5490  02F9  0275               	subwf	get_measure@measures,w
  5491  02FA  1C03               	skipc
  5492  02FB  2AFD               	goto	u88_21
  5493  02FC  2AFE               	goto	u88_20
  5494  02FD                     u88_21:
  5495  02FD  2B01               	goto	i1l332
  5496  02FE                     u88_20:
  5497  02FE                     i1l1813:
  5498  02FE  3184  24C7  3182   	fcall	_start_alarm
  5499  0301                     i1l332:
  5500  0301  0008               	return
  5501  0302                     __end_of_get_measure:
  5502                           
  5503                           	psect	text39
  5504  0436                     __ptext39:	
  5505 ;; *************** function i1_ADC_GetConversion *****************
  5506 ;; Defined at:
  5507 ;;		line 111 in file "mcc_generated_files/adc.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;  channel         1    wreg     enum E2178
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;  channel         1    1[COMMON] enum E2178
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  1    wreg      unsigned char 
  5514 ;; Registers used:
  5515 ;;		wreg, status,2, status,0
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMMON   BANK0   BANK1
  5521 ;;      Params:         0       0       0
  5522 ;;      Locals:         1       0       0
  5523 ;;      Temps:          1       0       0
  5524 ;;      Totals:         2       0       0
  5525 ;;Total ram usage:        2 bytes
  5526 ;; Hardware stack levels used: 1
  5527 ;; This function calls:
  5528 ;;		Nothing
  5529 ;; This function is called by:
  5530 ;;		_get_measure
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534  0436                     i1_ADC_GetConversion:	
  5535                           ;psect for function i1_ADC_GetConversion
  5536                           
  5537                           
  5538                           ;incstack = 0
  5539                           ; Regs used in i1_ADC_GetConversion: [wreg+status,2+status,0]
  5540                           ;i1ADC_GetConversion@channel stored from wreg
  5541  0436  00F8               	movwf	i1ADC_GetConversion@channel
  5542  0437                     i1l1779:
  5543                           
  5544                           ;mcc_generated_files/adc.c: 111: char ADC_GetConversion(adc_channel_t channel);mcc_gener
      +                          ated_files/adc.c: 112: {;mcc_generated_files/adc.c: 114:     ADCON0bits.CHS = channel;
  5545  0437  0878               	movf	i1ADC_GetConversion@channel,w
  5546  0438  00F7               	movwf	??i1_ADC_GetConversion
  5547  0439  0DF7               	rlf	??i1_ADC_GetConversion,f
  5548  043A  0DF7               	rlf	??i1_ADC_GetConversion,f
  5549  043B  0021               	movlb	1	; select bank1
  5550  043C  081D               	movf	29,w	;volatile
  5551  043D  0677               	xorwf	??i1_ADC_GetConversion,w
  5552  043E  3983               	andlw	-125
  5553  043F  0677               	xorwf	??i1_ADC_GetConversion,w
  5554  0440  009D               	movwf	29	;volatile
  5555  0441                     i1l1781:
  5556                           
  5557                           ;mcc_generated_files/adc.c: 117:     ADCON0bits.ADON = 1;
  5558  0441  141D               	bsf	29,0	;volatile
  5559  0442                     i1l1783:
  5560                           
  5561                           ;mcc_generated_files/adc.c: 120:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  5562  0442  3006               	movlw	6
  5563  0443                     u199_27:
  5564  0443  0B89               	decfsz	9,f
  5565  0444  2C43               	goto	u199_27
  5566  0445  3200               	nop2
  5567  0446                     i1l1785:
  5568                           
  5569                           ;mcc_generated_files/adc.c: 123:     ADCON0bits.GO_nDONE = 1;
  5570  0446  0021               	movlb	1	; select bank1
  5571  0447  149D               	bsf	29,1	;volatile
  5572  0448                     i1l63:	
  5573                           ;mcc_generated_files/adc.c: 127:     {;mcc_generated_files/adc.c: 128:     }
  5574                           
  5575                           
  5576                           ;mcc_generated_files/adc.c: 126:     while (ADCON0bits.GO_nDONE)
  5577  0448  189D               	btfsc	29,1	;volatile
  5578  0449  2C4B               	goto	u83_21
  5579  044A  2C4C               	goto	u83_20
  5580  044B                     u83_21:
  5581  044B  2C48               	goto	i1l63
  5582  044C                     u83_20:
  5583  044C                     i1l1787:
  5584                           
  5585                           ;mcc_generated_files/adc.c: 131:     return ( ADRESH);
  5586  044C  081C               	movf	28,w	;volatile
  5587  044D                     i1l66:
  5588  044D  0008               	return
  5589  044E                     __end_ofi1_ADC_GetConversion:
  5590                           
  5591                           	psect	text40
  5592  04C7                     __ptext40:	
  5593 ;; *************** function _start_alarm *****************
  5594 ;; Defined at:
  5595 ;;		line 120 in file "main.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;		None
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;		None
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  1    wreg      void 
  5602 ;; Registers used:
  5603 ;;		wreg, status,2, status,0, pclath, cstack
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMMON   BANK0   BANK1
  5609 ;;      Params:         0       0       0
  5610 ;;      Locals:         0       0       0
  5611 ;;      Temps:          0       0       0
  5612 ;;      Totals:         0       0       0
  5613 ;;Total ram usage:        0 bytes
  5614 ;; Hardware stack levels used: 1
  5615 ;; Hardware stack levels required when called: 1
  5616 ;; This function calls:
  5617 ;;		i1_go_close
  5618 ;;		i1_go_close_alt
  5619 ;; This function is called by:
  5620 ;;		_get_measure
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624  04C7                     _start_alarm:	
  5625                           ;psect for function _start_alarm
  5626                           
  5627  04C7                     i1l1773:	
  5628                           ;incstack = 0
  5629                           ; Regs used in _start_alarm: [wreg+status,2+status,0+pclath+cstack]
  5630                           
  5631                           
  5632                           ;main.c: 121:     FLAGS.bits.ALARM = 1;
  5633  04C7  1476               	bsf	_FLAGS,0
  5634  04C8                     i1l311:	
  5635                           ;main.c: 122:     do { LATCbits.LATC0 = 1; } while(0);
  5636                           
  5637  04C8  0022               	movlb	2	; select bank2
  5638  04C9  140E               	bsf	14,0	;volatile
  5639  04CA                     i1l312:
  5640                           
  5641                           ;main.c: 123:     INTCONbits.TMR0IE = 1;
  5642  04CA  168B               	bsf	11,5	;volatile
  5643                           
  5644                           ;main.c: 124:     if (FLAGS.bits.NORMAL_WORK_MODE) {
  5645  04CB  1CF6               	btfss	_FLAGS,1
  5646  04CC  2CCE               	goto	u82_21
  5647  04CD  2CCF               	goto	u82_20
  5648  04CE                     u82_21:
  5649  04CE  2CD3               	goto	i1l1777
  5650  04CF                     u82_20:
  5651  04CF                     i1l1775:
  5652                           
  5653                           ;main.c: 125:         go_close();
  5654  04CF  3183  23C8  3184   	fcall	i1_go_close
  5655                           
  5656                           ;main.c: 126:     } else {
  5657  04D2  2CD6               	goto	i1l315
  5658  04D3                     i1l1777:
  5659                           
  5660                           ;main.c: 127:         go_close_alt();
  5661  04D3  3185  253A  3184   	fcall	i1_go_close_alt
  5662  04D6                     i1l315:
  5663  04D6  0008               	return
  5664  04D7                     __end_of_start_alarm:
  5665                           
  5666                           	psect	text41
  5667  053A                     __ptext41:	
  5668 ;; *************** function i1_go_close_alt *****************
  5669 ;; Defined at:
  5670 ;;		line 107 in file "main.c"
  5671 ;; Parameters:    Size  Location     Type
  5672 ;;		None
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;		None
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  1    wreg      void 
  5677 ;; Registers used:
  5678 ;;		None
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMMON   BANK0   BANK1
  5684 ;;      Params:         0       0       0
  5685 ;;      Locals:         0       0       0
  5686 ;;      Temps:          0       0       0
  5687 ;;      Totals:         0       0       0
  5688 ;;Total ram usage:        0 bytes
  5689 ;; Hardware stack levels used: 1
  5690 ;; This function calls:
  5691 ;;		Nothing
  5692 ;; This function is called by:
  5693 ;;		_start_alarm
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           
  5697  053A                     i1_go_close_alt:	
  5698                           ;psect for function i1_go_close_alt
  5699                           
  5700  053A                     i1l1771:	
  5701                           ;incstack = 0
  5702                           ; Regs used in i1_go_close_alt: []
  5703                           
  5704                           
  5705                           ;main.c: 108:     FLAGS.bits.CLOSED = 1;
  5706  053A  1576               	bsf	_FLAGS,2
  5707  053B                     i1l297:	
  5708                           ;main.c: 109:     do { LATCbits.LATC4 = 0; } while(0);
  5709                           
  5710  053B  0022               	movlb	2	; select bank2
  5711  053C  120E               	bcf	14,4	;volatile
  5712  053D                     i1l299:	
  5713                           ;main.c: 110:     do { LATCbits.LATC5 = 1; } while(0);
  5714                           
  5715  053D  168E               	bsf	14,5	;volatile
  5716  053E                     i1l301:
  5717  053E  0008               	return
  5718  053F                     __end_ofi1_go_close_alt:
  5719                           
  5720                           	psect	text42
  5721  03C8                     __ptext42:	
  5722 ;; *************** function i1_go_close *****************
  5723 ;; Defined at:
  5724 ;;		line 88 in file "main.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;		None
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;		None
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  1    wreg      void 
  5731 ;; Registers used:
  5732 ;;		wreg
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMMON   BANK0   BANK1
  5738 ;;      Params:         0       0       0
  5739 ;;      Locals:         0       0       0
  5740 ;;      Temps:          2       0       0
  5741 ;;      Totals:         2       0       0
  5742 ;;Total ram usage:        2 bytes
  5743 ;; Hardware stack levels used: 1
  5744 ;; This function calls:
  5745 ;;		Nothing
  5746 ;; This function is called by:
  5747 ;;		_start_alarm
  5748 ;; This function uses a non-reentrant model
  5749 ;;
  5750                           
  5751  03C8                     i1_go_close:	
  5752                           ;psect for function i1_go_close
  5753                           
  5754  03C8                     i1l1759:	
  5755                           ;incstack = 0
  5756                           ; Regs used in i1_go_close: [wreg]
  5757                           
  5758                           
  5759                           ;main.c: 89:     time_s = 0;
  5760  03C8  3000               	movlw	0
  5761  03C9  0020               	movlb	0	; select bank0
  5762  03CA  00B8               	movwf	_time_s
  5763  03CB  3000               	movlw	0
  5764  03CC  00B9               	movwf	_time_s+1
  5765  03CD  3000               	movlw	0
  5766  03CE  00BA               	movwf	_time_s+2
  5767  03CF                     i1l1761:
  5768  03CF  0022               	movlb	2	; select bank2
  5769  03D0  160E               	bsf	14,4	;volatile
  5770  03D1                     i1l284:
  5771                           
  5772                           ;main.c: 91:     _delay((unsigned long)((2 * 1000)*(16000000/4000.0)));
  5773  03D1  3029               	movlw	41
  5774  03D2  00F8               	movwf	??i1_go_close+1
  5775  03D3  3096               	movlw	150
  5776  03D4  00F7               	movwf	??i1_go_close
  5777  03D5  307F               	movlw	127
  5778  03D6                     u200_27:
  5779  03D6  0B89               	decfsz	9,f
  5780  03D7  2BD6               	goto	u200_27
  5781  03D8  0BF7               	decfsz	??i1_go_close,f
  5782  03D9  2BD6               	goto	u200_27
  5783  03DA  0BF8               	decfsz	??i1_go_close+1,f
  5784  03DB  2BD6               	goto	u200_27
  5785  03DC  0000               	nop
  5786  03DD                     i1l1763:
  5787  03DD  0022               	movlb	2	; select bank2
  5788  03DE  168E               	bsf	14,5	;volatile
  5789  03DF                     i1l286:
  5790                           
  5791                           ;main.c: 93:     time_pow_s = 10;
  5792  03DF  300A               	movlw	10
  5793  03E0  00F7               	movwf	??i1_go_close
  5794  03E1  0877               	movf	??i1_go_close,w
  5795  03E2  0020               	movlb	0	; select bank0
  5796  03E3  00BF               	movwf	_time_pow_s
  5797  03E4                     i1l1765:
  5798                           
  5799                           ;main.c: 94:     FLAGS.bits.RELE_POW_WAIT = 1;
  5800  03E4  16F6               	bsf	_FLAGS,5
  5801  03E5                     i1l1767:
  5802                           
  5803                           ;main.c: 95:     FLAGS.bits.RELE_CON_WAIT = 1;
  5804  03E5  1776               	bsf	_FLAGS,6
  5805  03E6                     i1l287:
  5806  03E6  0008               	return
  5807  03E7                     __end_ofi1_go_close:
  5808                           
  5809                           	psect	text43
  5810  04D7                     __ptext43:	
  5811 ;; *************** function _TMR0_ISR *****************
  5812 ;; Defined at:
  5813 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  5814 ;; Parameters:    Size  Location     Type
  5815 ;;		None
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;		None
  5818 ;; Return value:  Size  Location     Type
  5819 ;;                  1    wreg      void 
  5820 ;; Registers used:
  5821 ;;		wreg, status,2, status,0, pclath, cstack
  5822 ;; Tracked objects:
  5823 ;;		On entry : 0/0
  5824 ;;		On exit  : 0/0
  5825 ;;		Unchanged: 0/0
  5826 ;; Data sizes:     COMMON   BANK0   BANK1
  5827 ;;      Params:         0       0       0
  5828 ;;      Locals:         0       0       0
  5829 ;;      Temps:          0       0       0
  5830 ;;      Totals:         0       0       0
  5831 ;;Total ram usage:        0 bytes
  5832 ;; Hardware stack levels used: 1
  5833 ;; Hardware stack levels required when called: 1
  5834 ;; This function calls:
  5835 ;;		Absolute function
  5836 ;;		_TMR0_DefaultInterruptHandler
  5837 ;;		i1_switch_zum
  5838 ;; This function is called by:
  5839 ;;		_INTERRUPT_InterruptManager
  5840 ;; This function uses a non-reentrant model
  5841 ;;
  5842                           
  5843  04D7                     _TMR0_ISR:	
  5844                           ;psect for function _TMR0_ISR
  5845                           
  5846  04D7                     i1l2411:	
  5847                           ;incstack = 0
  5848                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  5849                           
  5850                           
  5851                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  5852  04D7  110B               	bcf	11,2	;volatile
  5853  04D8                     i1l2413:
  5854                           
  5855                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  5856  04D8  0020               	movlb	0	; select bank0
  5857  04D9  0845               	movf	_timer0ReloadVal,w	;volatile
  5858  04DA  0095               	movwf	21	;volatile
  5859  04DB                     i1l2415:
  5860                           
  5861                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  5862  04DB  0841               	movf	_TMR0_InterruptHandler,w
  5863  04DC  0442               	iorwf	_TMR0_InterruptHandler+1,w
  5864  04DD  1903               	btfsc	3,2
  5865  04DE  2CE0               	goto	u167_21
  5866  04DF  2CE1               	goto	u167_20
  5867  04E0                     u167_21:
  5868  04E0  2CE6               	goto	i1l197
  5869  04E1                     u167_20:
  5870  04E1                     i1l2417:
  5871                           
  5872                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  5873  04E1  0842               	movf	_TMR0_InterruptHandler+1,w
  5874  04E2  008A               	movwf	10
  5875  04E3  0841               	movf	_TMR0_InterruptHandler,w
  5876  04E4  000A               	callw
  5877  04E5  3184               	pagesel	$
  5878  04E6                     i1l197:
  5879  04E6  0008               	return
  5880  04E7                     __end_of_TMR0_ISR:
  5881                           
  5882                           	psect	text44
  5883  0554                     __ptext44:	
  5884 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5885 ;; Defined at:
  5886 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;		None
  5889 ;; Auto vars:     Size  Location     Type
  5890 ;;		None
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  1    wreg      void 
  5893 ;; Registers used:
  5894 ;;		None
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMMON   BANK0   BANK1
  5900 ;;      Params:         0       0       0
  5901 ;;      Locals:         0       0       0
  5902 ;;      Temps:          0       0       0
  5903 ;;      Totals:         0       0       0
  5904 ;;Total ram usage:        0 bytes
  5905 ;; Hardware stack levels used: 1
  5906 ;; This function calls:
  5907 ;;		Nothing
  5908 ;; This function is called by:
  5909 ;;		_TMR0_Initialize
  5910 ;;		_TMR0_ISR
  5911 ;; This function uses a non-reentrant model
  5912 ;;
  5913                           
  5914  0554                     _TMR0_DefaultInterruptHandler:	
  5915                           ;psect for function _TMR0_DefaultInterruptHandler
  5916                           
  5917  0554                     i1l203:	
  5918                           ;incstack = 0
  5919                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  5920                           
  5921  0554  0008               	return
  5922  0555                     __end_of_TMR0_DefaultInterruptHandler:
  5923                           
  5924                           	psect	text45
  5925  04F4                     __ptext45:	
  5926 ;; *************** function i1_switch_zum *****************
  5927 ;; Defined at:
  5928 ;;		line 70 in file "main.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;		None
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;		None
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  1    wreg      void 
  5935 ;; Registers used:
  5936 ;;		status,0
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMMON   BANK0   BANK1
  5942 ;;      Params:         0       0       0
  5943 ;;      Locals:         0       0       0
  5944 ;;      Temps:          0       0       0
  5945 ;;      Totals:         0       0       0
  5946 ;;Total ram usage:        0 bytes
  5947 ;; Hardware stack levels used: 1
  5948 ;; This function calls:
  5949 ;;		Nothing
  5950 ;; This function is called by:
  5951 ;;		_TMR0_ISR
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           
  5955  04F4                     i1_switch_zum:	
  5956                           ;psect for function i1_switch_zum
  5957                           
  5958  04F4                     i1l266:	
  5959                           ;incstack = 0
  5960                           ; Regs used in i1_switch_zum: [status,0]
  5961                           ;main.c: 71:     do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  5962                           
  5963  04F4                     i1l2059:
  5964  04F4  1003               	clrc
  5965  04F5  0022               	movlb	2	; select bank2
  5966  04F6  1E8C               	btfss	12,5	;volatile
  5967  04F7  1403               	setc
  5968  04F8  1803               	btfsc	3,0
  5969  04F9  2CFB               	goto	u119_21
  5970  04FA  2CFE               	goto	u119_20
  5971  04FB                     u119_21:
  5972  04FB  0022               	movlb	2	; select bank2
  5973  04FC  168C               	bsf	12,5	;volatile
  5974  04FD  2D00               	goto	u120_24
  5975  04FE                     u119_20:
  5976  04FE  0022               	movlb	2	; select bank2
  5977  04FF  128C               	bcf	12,5	;volatile
  5978  0500                     u120_24:
  5979  0500                     i1l268:
  5980  0500  0008               	return
  5981  0501                     __end_ofi1_switch_zum:
  5982  007E                     btemp	set	126	;btemp
  5983  007E                     int$flags	set	126
  5984  007E                     wtemp0	set	126
  5985                           
  5986                           	psect	idloc
  5987                           
  5988                           ;Config register IDLOC0 @ 0x8000
  5989                           ;	unspecified, using default values
  5990  8000                     	org	32768
  5991  8000  3FFF               	dw	16383
  5992                           
  5993                           ;Config register IDLOC1 @ 0x8001
  5994                           ;	unspecified, using default values
  5995  8001                     	org	32769
  5996  8001  3FFF               	dw	16383
  5997                           
  5998                           ;Config register IDLOC2 @ 0x8002
  5999                           ;	unspecified, using default values
  6000  8002                     	org	32770
  6001  8002  3FFF               	dw	16383
  6002                           
  6003                           ;Config register IDLOC3 @ 0x8003
  6004                           ;	unspecified, using default values
  6005  8003                     	org	32771
  6006  8003  3FFF               	dw	16383
  6007                           
  6008                           	psect	config
  6009                           
  6010                           ;Config register CONFIG1 @ 0x8007
  6011                           ;	Oscillator Selection
  6012                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6013                           ;	Watchdog Timer Enable
  6014                           ;	WDTE = ON, WDT enabled
  6015                           ;	Power-up Timer Enable
  6016                           ;	PWRTE = OFF, PWRT disabled
  6017                           ;	MCLR Pin Function Select
  6018                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6019                           ;	Flash Program Memory Code Protection
  6020                           ;	CP = OFF, Program memory code protection is disabled
  6021                           ;	Data Memory Code Protection
  6022                           ;	CPD = OFF, Data memory code protection is disabled
  6023                           ;	Brown-out Reset Enable
  6024                           ;	BOREN = ON, Brown-out Reset enabled
  6025                           ;	Clock Out Enable
  6026                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6027                           ;	Internal/External Switchover
  6028                           ;	IESO = ON, Internal/External Switchover mode is enabled
  6029                           ;	Fail-Safe Clock Monitor Enable
  6030                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6031  8007                     	org	32775
  6032  8007  3FFC               	dw	16380
  6033                           
  6034                           ;Config register CONFIG2 @ 0x8008
  6035                           ;	Flash Memory Self-Write Protection
  6036                           ;	WRT = OFF, Write protection off
  6037                           ;	PLL Enable
  6038                           ;	PLLEN = OFF, 4x PLL disabled
  6039                           ;	Stack Overflow/Underflow Reset Enable
  6040                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6041                           ;	Brown-out Reset Voltage Selection
  6042                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6043                           ;	Low-Voltage Programming Enable
  6044                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  6045  8008                     	org	32776
  6046  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    9
    Data        0
    BSS         16
    Persistent  37
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     24      38
    BANK1            16      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> switch_zum(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i1_switch_zum(), switch_zum(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sec_tick_work(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sec_tick_work(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR2_CallBack->_sec_tick_work
    _sec_tick_work->_get_measure
    _get_measure->i1_ADC_GetConversion
    _start_alarm->i1_go_close

Critical Paths under _main in BANK0

    _main->_get_voltage
    _switch_wm->_beep
    _start_setup->_get_fun_full
    _start_setup->_get_jump_full
    _get_jump_full->_ADC_GetConversion
    _get_fun_full->_ADC_GetConversion
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _povorot->_go_close
    _get_voltage->_EEPROM_WriteShortLong
    _EEPROM_WriteShortLong->_EEPROM_WriteByte
    _get_jump->_ADC_GetConversion
    _get_fun->_ADC_GetConversion
    _fun_work->_beep

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3767
                           _fun_work
                            _get_fun
                           _get_jump
                        _get_voltage
                            _povorot
                        _start_setup
                          _switch_wm
 ---------------------------------------------------------------------------------
 (1) _switch_wm                                            1     1      0     496
                                              6 BANK0      1     1      0
                               _beep
 ---------------------------------------------------------------------------------
 (1) _start_setup                                          0     0      0     984
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                       _get_fun_full
                      _get_jump_full
 ---------------------------------------------------------------------------------
 (2) _get_jump_full                                        5     5      0      70
                                              2 BANK0      5     5      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (2) _get_fun_full                                         5     5      0      70
                                              2 BANK0      5     5      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     422
                     _ADC_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      1     1      0     211
                                              2 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _povorot                                              0     0      0       0
                           _go_close
                            _go_open
 ---------------------------------------------------------------------------------
 (1) _get_voltage                                         10    10      0    1701
                                             14 BANK0     10    10      0
                  _ADC_GetConversion
                    _EEPROM_ReadByte
                   _EEPROM_WriteByte
              _EEPROM_WriteShortLong
 ---------------------------------------------------------------------------------
 (2) _EEPROM_WriteShortLong                                9     6      3     853
                                              5 BANK0      9     6      3
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_WriteByte                                     5     4      1     599
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_ReadByte                                      3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _get_jump                                             4     4      0      45
                                              2 BANK0      4     4      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (1) _get_fun                                              4     4      0      45
                                              2 BANK0      4     4      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _fun_work                                             1     1      0     496
                                              6 BANK0      1     1      0
                               _beep
                           _go_close
                       _go_close_alt
                            _go_open
                        _go_open_alt
 ---------------------------------------------------------------------------------
 (2) _go_open_alt                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_open                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _go_close_alt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_close                                             2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _beep                                                 6     5      1     496
                                              0 BANK0      6     5      1
                         _switch_zum
 ---------------------------------------------------------------------------------
 (3) _switch_zum                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0      67
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0      67
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR2_CallBack                                        0     0      0      67
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                      _sec_tick_work *
 ---------------------------------------------------------------------------------
 (8) _sec_tick_work                                        1     1      0      67
                                              6 COMMON     1     1      0
                        _get_measure
                          _rele_tick
                        _toggle_tone
 ---------------------------------------------------------------------------------
 (9) _toggle_tone                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _rele_tick                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _get_measure                                          4     4      0      67
                                              2 COMMON     4     4      0
                        _start_alarm
                i1_ADC_GetConversion
 ---------------------------------------------------------------------------------
 (10) i1_ADC_GetConversion                                 2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (10) _start_alarm                                         0     0      0       0
                         i1_go_close
                     i1_go_close_alt
 ---------------------------------------------------------------------------------
 (11) i1_go_close_alt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i1_go_close                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                       i1_switch_zum *
 ---------------------------------------------------------------------------------
 (7) i1_switch_zum                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _fun_work
     _beep
       _switch_zum
     _go_close
     _go_close_alt
     _go_open
     _go_open_alt
   _get_fun
     _ADC_GetConversion
   _get_jump
     _ADC_GetConversion
   _get_voltage
     _ADC_GetConversion
     _EEPROM_ReadByte
     _EEPROM_WriteByte
     _EEPROM_WriteShortLong
       _EEPROM_WriteByte
   _povorot
     _go_close
     _go_open
   _start_setup
     _SYSTEM_Initialize
       _ADC_Initialize
       _FVR_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR2_Initialize
         _TMR2_SetInterruptHandler
       _WDT_Initialize
     _TMR0_SetInterruptHandler
     _TMR2_SetInterruptHandler
     _TMR2_StartTimer
     _get_fun_full
       _ADC_GetConversion
     _get_jump_full
       _ADC_GetConversion
   _switch_wm
     _beep

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     i1_switch_zum *
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _sec_tick_work *
         _get_measure
           _start_alarm
             i1_go_close
             i1_go_close_alt
           i1_ADC_GetConversion
         _rele_tick
         _toggle_tone

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              60      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      34       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     18      26       6       47.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            10      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      34       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri May 06 12:36:52 2022

        __end_of_TMR2_SetInterruptHandler 052A                          get_fun_full@flag 0026  
                      get_fun@fun_counter 003E                     __end_of_sec_tick_work 025D  
                                      l31 0542                                        l25 0463  
                                      l28 0523                                        l63 0417  
                                      l48 051C                                        l66 041C  
                                      l92 048E                                        _RD 0CA8  
                                      _WR 0CA9                             ?_go_close_alt 0077  
                            ?_get_voltage 0077                            ?_get_jump_full 0077  
                  __end_of_FVR_Initialize 0547                           _timer0ReloadVal 0045  
                                     l200 052F                                       l210 0546  
                                     l301 0539                                       l142 0552  
                                     l304 0531                                       l400 0118  
                                     l306 0533                                       l139 04B6  
                                     l308 0534                                       l164 0529  
                                     l350 01DF                                       l511 035C  
                                     l431 015C                                       l280 0331  
                                     l440 019F                                       l184 0479  
                                     l337 01A0                                       l266 04BA  
                                     l290 0501                                       l514 041F  
                                     l370 00D3                                       l339 01A2  
                                     l355 008B                                       l443 039A  
                                     l268 04C6                                       l284 03B2  
                                     l292 0503                                       l508 0334  
                                     l517 0435                                       l357 008D  
                                     l286 03C0                                       l294 050A  
                                     l526 021E                                       l366 00CF  
                                     l287 03C7                                       l375 025D  
                                     l447 03A8                                       l384 0298  
                                     l368 00D1                                       l297 0536  
                                     l457 008A                                       l482 02CD  
                                     l299 0538                                       l389 00D4  
                                     l398 0116                                       l487 03EA  
                                     _GIE 005F                               _start_alarm 04C7  
                                     _PR2 001B                                       u920 041B  
                                     u921 041A                               _start_setup 0299  
                            ?_go_open_alt 0077                           _TMR2_Initialize 04A4  
                                     wreg 0009                                i1_go_close 03C8  
                             get_jump@res 0024                                      l2001 00BA  
                                    l2011 00CA                                      l2003 00BD  
                                    l2005 00C4                                      l2021 00F1  
                                    l2013 00D6                                      l2111 027B  
                                    l2103 025F                                      l2007 00C8  
                                    l2031 0104                                      l2023 00F5  
                                    l2015 00D8                                      l2121 0293  
                                    l2113 027F                                      l2105 026A  
                                    l2041 041F                                      l2201 0050  
                                    l2033 010B                                      l2025 00FC  
                                    l2017 00E3                                      l2123 0297  
                                    l2115 0286                                      l2107 026C  
                                    l2043 0424                                      l2051 01E2  
                                    l2211 006D                                      l2203 0058  
                                    l2035 010F                                      l2027 0100  
                                    l2019 00EC                                      l2117 028A  
                                    l2109 0276                                      l2045 0428  
                                    l2053 01EA                                      l2213 0073  
                                    l2205 005D                                      l2029 0101  
                                    l2119 028C                                      l2047 0433  
                                    l2055 01FB                                      l2215 0075  
                                    l2207 0062                                      l2039 0111  
                                    l2401 031A                                      l2081 01B1  
                                    l2057 0215                                      l2217 007F  
                                    l2209 0067                                      l2403 0326  
                                    l2091 01CD                                      l2083 01B3  
                                    l2219 0084                                      l2331 047A  
                                    l2405 032B                                      l2093 01D1  
                                    l2085 01BD                                      l2077 01A4  
                                    l2421 0128                                      l2341 048A  
                                    l2333 047D                                      l2501 02B9  
                                    l2407 0535                                      l2095 01D3  
                                    l2087 01C2                                      l2079 01AF  
                                    l2191 003B                                      l2431 0146  
                                    l2423 012C                                      l2351 0543  
                                    l2343 051D                                      l2335 0480  
                                    l2327 0524                                      l2511 02C1  
                                    l2503 02BB                                      l2409 0530  
                                    l2441 015D                                      l2097 01DA  
                                    l2089 01C6                                      l2193 0046  
                                    l2433 014A                                      l2425 0130  
                                    l2353 0515                                      l2345 0520  
                                    l2337 0482                                      l2329 052A  
                                    l2361 04A7                                      l2521 02CB  
                                    l2513 02C2                                      l2505 02BD  
                                    l2451 0171                                      l2443 0161  
                                    l2099 01DE                                      l2195 004F  
                                    l2435 014E                                      l2427 0134  
                                    l2419 0119                                      l2355 0518  
                                    l2347 0521                                      l2339 0485  
                                    l2371 0464                                      l2363 04A8  
                                    l2515 02C3                                      l2507 02BE  
                                    l2461 0187                                      l2453 0175  
                                    l2445 0165                                      l2437 0152  
                                    l2429 0137                                      l2357 0519  
                                    l2381 0472                                      l2373 0469  
                                    l2365 04A9                                      l2349 053F  
                                    l2517 02C5                                      l2509 02BF  
                                    l2383 04BA                                      l2391 0306  
                                    l2463 018B                                      l2455 0178  
                                    l2447 0169                                      l2439 0155  
                                    l2375 046C                                      l2367 04AB  
                                    l2359 04A4                                      l2519 02C8  
                                    l2471 0387                                      l2535 03E7  
                                    l2393 0308                                      l2465 018F  
                                    l2449 016D                                      l2457 017F  
                                    l1921 0339                                      l2377 0470  
                                    l2369 04B3                                      l2385 044E  
                                    l2481 039F                                      l2473 038B  
                                    l2537 03ED                                      l2395 030B  
                                    l2467 0193                                      l2459 0183  
                                    l1931 034E                                      l1923 033E  
                                    l2379 0471                                      l2387 0550  
                                    l2491 02B1                                      l2483 0299  
                                    l2475 038F                                      l2539 03F1  
                                    l2397 030F                                      l2389 0304  
                                    l2469 0196                                      l1933 0350  
                                    l1925 033F                                      l2493 02B3  
                                    l2485 029C                                      l2477 0390  
                                    l2399 0314                                      l1935 0352  
                                    l1927 0349                                      l1919 0334  
                                    l2495 02B4                                      l2487 029D  
                                    l2479 039E                                      l1937 0353  
                                    l1929 034D                                      l2497 02B5  
                                    l2489 02AE                                      l1971 03BE  
                                    l1891 0415                                      l1939 035A  
                                    l2499 02B7                                      l1973 03C5  
                                    l1981 0509                                      l1893 041B  
                                    l1885 0404                                      l1975 03C6  
                                    l1967 03A9                                      l1887 0410  
                                    l1991 00A5                                      l1969 03B0  
                                    l1889 0411                                      l1993 00AA  
                                    l1985 008F                                      l1979 0504  
                                    l1995 00AE                                      l1987 0091  
                                    l1997 00B5                                      l1989 009C  
                                    l1999 00B9                                      u1010 0339  
                                    u1011 0338                                      u1020 0359  
                                    u1100 00CF                                      u1021 0357  
                                    u1101 00CE                                      u1110 00EC  
                                    u1111 00EB                                      u1120 00FC  
                                    u1121 00FB                                      u1034 035A  
                                    u1130 010B                                      u1131 010A  
                                    u1140 0116                                      u1141 0115  
                                    u1230 01BD                                      u1150 0424  
                                    u1070 00A5                                      u1231 01BC  
                                    u1151 0423                                      u1071 00A4  
                                    u1240 01CD                                      u1160 0428  
                                    u1080 00B5                                      u1241 01CC  
                                    u1161 0427                                      u1081 00B4  
                                    u1250 01DA                                      u1170 01F5  
                                    u1090 00C4                                      u1251 01D9  
                                    u1091 00C3                                      u1260 0276  
                                    u1180 020F                                      u1500 005D  
                                    u1261 0275                                      u1501 005C  
                                    _LATA 010C                                      u1270 0286  
                                    u1510 006D                                      u1271 0285  
                                    u1175 01F2                                      u1511 006C  
                                    _LATC 010E                                      u1280 0293  
                                    u1520 008A                                      u1281 0292  
                                    u1185 020C                                      u1521 0089  
                                    u1700 0130                                      u1701 012F  
                                    u1630 04C4                                      u1710 0134  
                                    u1631 04C1                                      u1711 0133  
                                    u1800 0171                                      u1720 0146  
                                    u1801 0170                                      u1721 0145  
                                    u1650 031A                                      u1810 0183  
                                    u1490 004F                                      u1730 014A  
                                    u1651 0319                                      u1811 0182  
                                    u1491 004E                                      u1731 0149  
                                    u1644 04C6                                      u1660 0331  
                                    u1820 0187                                      u1740 014E  
                                    u1661 0330                                      u1821 0186  
                                    u1741 014D                                      u1725 0142  
                                    u1830 018B                                      u1750 0152  
                                    u1831 018A                                      u1751 0151  
                                    u1840 018F                                      u1760 0161  
                                    u1680 0128                                      u1841 018E  
                                    u1761 0160                                      u1681 0127  
                                    u1770 0165                                      u1690 012C  
                                    u1850 038B                                      u1930 03F1  
                                    u1771 0164                                      u1691 012B  
                                    u1851 038A                                      u1931 03F0  
                                    u1780 0169                                      u1860 038F  
                                    u1781 0168                                      u1685 0124  
                                    u1861 038E                                      u1790 016D  
                                    u1870 039E                                      u1791 016C  
                                    u1871 039D                                      u1947 0412  
                                    u1957 03B8                                      u1967 030C  
                                    u1977 0320                                      i1l63 0448  
                                    i1l66 044D                                      _TMR0 0015  
                                    _TMR2 001A                                      _WREN 0CAA  
                                    _WPUA 020C                                      _WPUC 020E  
                                    _beep 0302                                      _main 03E7  
                    EEPROM_WriteByte@addr 0023                                      btemp 007E  
                          ??_get_fun_full 0022                                      start 0026  
                    __end_ofi1_switch_zum 0501                   get_fun_full@fun_counter 003D  
                          ??_go_close_alt 0020                   __end_of_TMR0_Initialize 047A  
          ??_TMR0_DefaultInterruptHandler 0077                           ?_FVR_Initialize 0077  
           __end_of_OSCILLATOR_Initialize 0524                                     ?_beep 0020  
                                   ?_main 0077                                     _EEADR 0191  
                                   _FLAGS 0076                                     _T2CON 001C  
                                   i1l110 0012                                     i1l203 0554  
                                   i1l115 0024                                     i1l116 0024  
                                   i1l301 053E                                     i1l311 04C8  
                                   i1l312 04CA                                     i1l320 02CE  
                                   i1l161 04F3                                     i1l322 02D0  
                                   i1l315 04D6                                     i1l332 0301  
                                   i1l412 0382                                     i1l404 036A  
                                   i1l413 0384                                     i1l157 04A3  
                                   i1l414 0386                                     i1l407 036E  
                                   i1l271 0514                                     i1l167 0553  
                                   i1l266 04F4                                     i1l426 025C  
                                   i1l268 0500                                     i1l284 03D1  
                                   i1l197 04E6                                     i1l286 03DF  
                                   i1l287 03E6                                     i1l297 053B  
                                   i1l299 053D                                     _TRISA 008C  
                                   _TRISC 008E                                     u82_20 04CF  
                                   u90_20 0367                                     u82_21 04CE  
                                   u90_21 0366                                     u83_20 044C  
                                   u91_20 036E                                     u83_21 044B  
                                   u91_21 036D                                     u84_20 0513  
                                   u84_21 0511                                     u85_24 0514  
                                   u86_20 02E9                                     u86_21 02E8  
                                   u87_20 02F7                                     u95_20 0232  
                                   u87_21 02F6                                     u95_21 0231  
                                   u88_20 02FE                                     u96_20 023C  
                                   u88_21 02FD                                     u96_21 0239  
                                   u89_20 0361                                     u89_21 0360  
                                   u97_24 023E                                     u98_20 024F  
                                   u98_21 024E                                     u99_20 0259  
                                   u99_21 0256                 ?_TMR0_SetInterruptHandler 0020  
                        __end_of_TMR0_ISR 04E7                           __end_of_get_fun 01E0  
                        __end_of_TMR2_ISR 04A4                           __end_of_go_open 050B  
                                   beep@i 0025                                     beep@j 0024  
                          _WDT_Initialize 053F                                     pclath 000A  
                         __end_of_povorot 015D                                     status 0003  
                                   wtemp0 007E                           _TMR2_StartTimer 0550  
                            get_voltage@q 0037                           __initialization 0027  
                            __end_of_beep 0332                              __end_of_main 0402  
                         ??_get_jump_full 0022                   __end_of_TMR2_Initialize 04B7  
             ?_INTERRUPT_InterruptManager 0077                                    ??_beep 0021  
                _TMR2_SetInterruptHandler 0524                                    ??_main 0038  
                  __end_of_WDT_Initialize 0543                               ?i1_go_close 0077  
                     i1_ADC_GetConversion 0436                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _EEDATA 0193  
                                  _EECON2 0196                                    _APFCON 011D  
                                  _ANSELA 018C                                    _ANSELC 018E  
                                  _BORCON 0116                                    u100_24 025B  
                                  i1l2071 0491                                    u104_20 04EE  
                                  u104_21 04ED                                    i1l2073 049E  
                                  i1l2059 04F4                                    i1l2411 04D7  
                                  i1l2075 04A1                                    u120_24 0500  
                                  i1l2413 04D8                                    i1l2069 048F  
                                  i1l2415 04DB                                    u200_27 03D6  
                                  i1l2417 04E1                                    i1l1801 02DE  
                                  i1l1811 02F8                                    i1l1803 02E0  
                                  i1l2531 001B                                    i1l2523 0006  
                                  i1l1813 02FE                                    i1l1805 02E9  
                                  i1l1821 0367                                    i1l1901 022A  
                                  i1l2533 0020                                    i1l2525 000A  
                                  i1l1807 02EE                                    i1l1831 0380  
                                  i1l1823 0370                                    i1l1911 0245  
                                  i1l1903 022E                                    i1l2527 000E  
                                  u122_20 049E                                    i1l1761 03CF  
                                  i1l1809 02F7                                    i1l1825 037C  
                                  i1l1817 035D                                    i1l1913 0249  
                                  i1l1905 0232                                    u122_21 049D  
                                  i1l2529 0016                                    i1l1763 03DD  
                                  i1l1771 053A                                    i1l1827 037E  
                                  i1l1819 0361                                    i1l1915 024F  
                                  i1l1907 023E                                    i1l1765 03E4  
                                  i1l1773 04C7                                    i1l1781 0441  
                                  i1l1829 037F                                    i1l1917 025B  
                                  i1l1909 0242                                    i1l1767 03E5  
                                  i1l1759 03C8                                    i1l1775 04CF  
                                  i1l1783 0442                                    i1l1777 04D3  
                                  i1l1785 0446                                    i1l1945 04E7  
                                  i1l1787 044C                                    i1l1779 0437  
                                  i1l1795 050B                                    i1l1947 04EE  
                                  i1l1797 02D2                                    i1l1799 02DC  
                                  i1l1899 021F                                    u119_20 04FE  
                                  u119_21 04FB                                    _FVRCON 0117  
                                  u190_20 0016                                    u190_21 0015  
                                  u167_20 04E1                                    u191_20 001B  
                                  u167_21 04E0                                    u191_21 001A  
                                  u192_20 0020                                    u192_21 001F  
                                  u188_20 000A                                    u188_21 0009  
                                  u189_20 000E                                    u189_21 000D  
                        _GOOD_WSP_VOLTAGE 054A                                    u198_27 0375  
                                  u199_27 0443                                    _OSCCON 0099  
                                  _WDTCON 0097             __end_of_EEPROM_WriteShortLong 021F  
                    ?i1_ADC_GetConversion 0077                          __end_of_get_jump 0299  
                        __end_of_go_close 03C8                      _switch_zum$intlevel0 04BA  
                        ?_TMR0_Initialize 0077                         ??_EEPROM_ReadByte 0020  
                        __end_of_fun_work 01A0                                    _time_s 0038  
                __end_of_EEPROM_WriteByte 035D                                 ??_get_fun 0022  
                               ??_go_open 0020                      __end_of_get_fun_full 00D4  
                         ?_WDT_Initialize 0077                            get_measure@res 007B  
                  EEPROM_WriteByte@status 0024                  ADC_GetConversion@channel 0021  
                               ??_povorot 0022                   __end_of_TMR2_StartTimer 0553  
TMR0_SetInterruptHandler@InterruptHandler 0020  TMR2_SetInterruptHandler@InterruptHandler 0020  
                    __end_of_go_close_alt 053A                         _SYSTEM_Initialize 044E  
                 __end_of__initialization 0038                     __end_of_TMR2_CallBack 04F4  
                      ?_SYSTEM_Initialize 0077                              ?_toggle_tone 0077  
                   ??i1_ADC_GetConversion 0077                            __pcstackCOMMON 0077  
               get_jump_full@jump_counter 003B                       ??_SYSTEM_Initialize 0023  
                               ?_TMR0_ISR 0077                                 ?_TMR2_ISR 0077  
                   __end_of_ROTATION_TIME 054A                          ?_TMR2_Initialize 0077  
              i1ADC_GetConversion@channel 0078                              ?_start_alarm 0077  
                          _OPTION_REGbits 0095                              ?_start_setup 0077  
                            i1_switch_zum 04F4                 __end_of_SYSTEM_Initialize 0464  
                              __pbssBANK0 0038                          ??_FVR_Initialize 0020  
                              __pmaintext 03E7          __end_of_TMR0_SetInterruptHandler 0530  
                              ??_TMR0_ISR 0077                                ??_TMR2_ISR 007E  
                              __pintentry 0004                          get_jump_full@res 0024  
                                 _OSCTUNE 0098                          ?_TMR2_StartTimer 0077  
                               ?_get_jump 0077                                 ?_go_close 0077  
                               ?_fun_work 0077                      _ADC_InterruptHandler 0072  
              ??_TMR2_SetInterruptHandler 0022                  __end_of_GOOD_WSP_VOLTAGE 054D  
                                 __ptext1 0387                                   __ptext2 0299  
                     get_measure@measures 0075                                   __ptext3 00D4  
                                 __ptext4 008B                                   __ptext5 0550  
                                 __ptext6 044E                                   __ptext7 053F  
                                 __ptext8 04A4                                   __ptext9 0524  
                                 _get_fun 01A0                                   _go_open 0501  
                   _OSCILLATOR_Initialize 051D                                 _T2CONbits 001C  
                ??_PIN_MANAGER_Initialize 0020                              ??i1_go_close 0077  
                                 _povorot 0119                                ??_get_jump 0022  
                              ??_go_close 0020                         __end_of_rele_tick 0387  
                    end_of_initialization 0038                                ??_fun_work 0026  
                         _EEPROM_ReadByte 041D                              _get_fun_full 008B  
                      __end_ofi1_go_close 03E7                     __end_of_get_jump_full 0119  
                           _sec_tick_work 021F                                _time_pow_s 003F  
                            _go_close_alt 0535                          ??_WDT_Initialize 0020  
                _TMR0_SetInterruptHandler 052A                         ?_EEPROM_WriteByte 0020  
                       __end_of_switch_wm 03A9                            get_voltage@buf 0035  
                          get_voltage@res 0033                        ??_EEPROM_WriteByte 0021  
                               _TRISAbits 008C                                 _TRISCbits 008E  
                         get_fun_full@res 0024                                get_fun@res 0024  
                      EEPROM_WriteByte@dt 0020                             ??_get_measure 0079  
                   _EEPROM_WriteShortLong 01E0                                _switch_zum 04B7  
    __end_of_TMR2_DefaultInterruptHandler 0554              _TMR2_DefaultInterruptHandler 0553  
                          ?_sec_tick_work 0077                             ??_get_voltage 002E  
                          _ADC_Initialize 0515                    ?_OSCILLATOR_Initialize 0077  
                          i1_go_close_alt 053A                             ??_go_open_alt 0020  
                     start_initialization 0027                   __end_of_EEPROM_ReadByte 0436  
             __end_ofi1_ADC_GetConversion 044E                    __end_of_ADC_Initialize 051D  
                     __end_of_get_measure 0302                    __end_ofi1_go_close_alt 053F  
           ?_TMR2_DefaultInterruptHandler 0077                               __pbssCOMMON 0070  
                     __end_of_get_voltage 008B                                 ___latbits 0000  
                           __pcstackBANK0 0020                       __end_of_go_open_alt 0535  
                        _START_EEPROM_ADR 0040                     _TMR0_InterruptHandler 0041  
                               __pnvBANK0 0041                    ?_EEPROM_WriteShortLong 0025  
                  _PIN_MANAGER_Initialize 047A                           ??_sec_tick_work 007D  
                             ?_switch_zum 0077                           ?_ADC_Initialize 0077  
                               beep@count 0020                           ?i1_go_close_alt 0077  
            ??_INTERRUPT_InterruptManager 007E               EEPROM_WriteShortLong@ucData 0025  
                                ?_get_fun 0077                                  ?_go_open 0077  
                       sec_tick_work@iled 0074                                  ?_povorot 0077  
                        ?_EEPROM_ReadByte 0077                         ??_TMR0_Initialize 0022  
                       get_jump_full@flag 0026                                  _LATAbits 010C  
                                _LATCbits 010E                                 _rele_tick 035D  
                           _TMR2_CallBack 04E7                                  _PIE1bits 0091  
                             _get_measure 02CE                ??_TMR0_SetInterruptHandler 0022  
                                _PIR1bits 0011                                  _TMR0_ISR 04D7  
                                _TMR2_ISR 048F                             _ROTATION_TIME 0547  
                             _get_voltage 003B                                _ADCON0bits 009D  
                                _WPUAbits 020C                                  _WPUCbits 020E  
          ??_TMR2_DefaultInterruptHandler 0077                               _go_open_alt 0530  
               ?_TMR2_SetInterruptHandler 0020                                 _switch_wm 0387  
                       ??_TMR2_Initialize 0022                            ?_TMR2_CallBack 0077  
                              ?_rele_tick 0077                             ??_toggle_tone 0077  
                       _ADC_GetConversion 0402                   ??_OSCILLATOR_Initialize 0020  
                      ?_ADC_GetConversion 0077                             ??_start_alarm 0079  
                              _ANSELAbits 018C                                _ANSELCbits 018E  
                     ??_ADC_GetConversion 0020                             ??_start_setup 0027  
                 EEPROM_WriteShortLong@dt 002C                                ?_switch_wm 0077  
                      get_voltage@buf_795 0030                                  __ptext10 0464  
                                __ptext11 052A                                  __ptext20 041D  
                                __ptext12 047A                                  __ptext21 025D  
                                __ptext13 051D                                  __ptext30 04B7  
                                __ptext22 01A0                                  __ptext14 0543  
                                __ptext23 0402                                  __ptext15 0515  
                                __ptext40 04C7                                  __ptext32 048F  
                                __ptext24 015D                                  __ptext16 0119  
                                __ptext41 053A                                  __ptext33 04E7  
                                __ptext25 0530                                  __ptext17 003B  
                                __ptext42 03C8                                  __ptext34 0553  
                                __ptext26 0501                                  __ptext18 01E0  
                                __ptext43 04D7                                  __ptext35 021F  
                                __ptext27 0535                                  __ptext19 0332  
                                __ptext44 0554                                  __ptext36 050B  
                                __ptext28 03A9                                  __ptext45 04F4  
                                __ptext37 035D                                  __ptext29 0302  
                                __ptext38 02CE                                  __ptext39 0436  
                           ?i1_switch_zum 0077                                  beep@time 0023  
                                _get_jump 025D                                  _go_close 03A9  
                         _BAD_WSP_VOLTAGE 054D                                  _fun_work 015D  
    __end_of_TMR0_DefaultInterruptHandler 0555              _TMR0_DefaultInterruptHandler 0554  
               __end_of_ADC_GetConversion 041D                                  int$flags 007E  
                       ??_TMR2_StartTimer 0020                       __end_of_toggle_tone 0515  
      __end_of_INTERRUPT_InterruptManager 0026                _INTERRUPT_InterruptManager 0004  
                    get_jump@jump_counter 003C                                _INTCONbits 000B  
                              _FVRCONbits 0117                            ??i1_switch_zum 0077  
                     __end_of_start_alarm 04D7                       __end_of_start_setup 02CE  
                                intlevel1 0000                           ??_TMR2_CallBack 007E  
                 ??_EEPROM_WriteShortLong 0028                 EEPROM_WriteShortLong@addr 002D  
                 ?_PIN_MANAGER_Initialize 0077                               ??_rele_tick 0077  
                     EEPROM_ReadByte@addr 0022                          ??_ADC_Initialize 0020  
           ?_TMR0_DefaultInterruptHandler 0077                          ??i1_go_close_alt 0077  
                            ??_switch_zum 0020                             _get_jump_full 00D4  
                           __pstringtext1 0547                             __pstringtext2 054A  
                           __pstringtext3 054D                            _FVR_Initialize 0543  
                              _OPTION_REG 0095                          get_voltage@q_796 0036  
                   TMR2_ISR@CountCallBack 0070                           _TMR0_Initialize 0464  
                 __end_of_BAD_WSP_VOLTAGE 0550                               ??_switch_wm 0026  
                      __end_of_switch_zum 04C7            __end_of_PIN_MANAGER_Initialize 048F  
                        _EEPROM_WriteByte 0332                     _TMR2_InterruptHandler 0043  
                             _toggle_tone 050B                             ?_get_fun_full 0077  
                            ?_get_measure 0077  
