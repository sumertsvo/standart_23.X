

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu May 12 13:05:38 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1823
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    59                           	dabs	1,0x7E,2
    60  0000                     
    61                           ; Version 2.40
    62                           ; Generated 17/11/2021 GMT
    63                           ; 
    64                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution. Publication is not required when
    78                           ;        this file is used in an embedded application.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC16F1823 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     	;# 
    97  0001                     	;# 
    98  0002                     	;# 
    99  0003                     	;# 
   100  0004                     	;# 
   101  0005                     	;# 
   102  0006                     	;# 
   103  0007                     	;# 
   104  0008                     	;# 
   105  0009                     	;# 
   106  000A                     	;# 
   107  000B                     	;# 
   108  000C                     	;# 
   109  000E                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  008C                     	;# 
   124  008E                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  010C                     	;# 
   139  010E                     	;# 
   140  0111                     	;# 
   141  0112                     	;# 
   142  0113                     	;# 
   143  0114                     	;# 
   144  0115                     	;# 
   145  0116                     	;# 
   146  0117                     	;# 
   147  0118                     	;# 
   148  0119                     	;# 
   149  011A                     	;# 
   150  011B                     	;# 
   151  011D                     	;# 
   152  011D                     	;# 
   153  018C                     	;# 
   154  018E                     	;# 
   155  0191                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  0193                     	;# 
   159  0193                     	;# 
   160  0193                     	;# 
   161  0194                     	;# 
   162  0195                     	;# 
   163  0196                     	;# 
   164  0199                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019C                     	;# 
   171  019C                     	;# 
   172  019D                     	;# 
   173  019E                     	;# 
   174  019F                     	;# 
   175  020C                     	;# 
   176  020E                     	;# 
   177  0211                     	;# 
   178  0211                     	;# 
   179  0212                     	;# 
   180  0212                     	;# 
   181  0213                     	;# 
   182  0213                     	;# 
   183  0214                     	;# 
   184  0214                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0216                     	;# 
   189  0216                     	;# 
   190  0217                     	;# 
   191  0217                     	;# 
   192  0291                     	;# 
   193  0291                     	;# 
   194  0292                     	;# 
   195  0293                     	;# 
   196  0294                     	;# 
   197  0295                     	;# 
   198  0295                     	;# 
   199  0296                     	;# 
   200  0391                     	;# 
   201  0392                     	;# 
   202  0393                     	;# 
   203  039A                     	;# 
   204  039C                     	;# 
   205  039D                     	;# 
   206  039E                     	;# 
   207  039F                     	;# 
   208  0FE4                     	;# 
   209  0FE5                     	;# 
   210  0FE6                     	;# 
   211  0FE7                     	;# 
   212  0FE8                     	;# 
   213  0FE9                     	;# 
   214  0FEA                     	;# 
   215  0FEB                     	;# 
   216  0FED                     	;# 
   217  0FEE                     	;# 
   218  0FEF                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000E                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  008C                     	;# 
   247  008E                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0095                     	;# 
   251  0096                     	;# 
   252  0097                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009A                     	;# 
   256  009B                     	;# 
   257  009B                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009E                     	;# 
   261  010C                     	;# 
   262  010E                     	;# 
   263  0111                     	;# 
   264  0112                     	;# 
   265  0113                     	;# 
   266  0114                     	;# 
   267  0115                     	;# 
   268  0116                     	;# 
   269  0117                     	;# 
   270  0118                     	;# 
   271  0119                     	;# 
   272  011A                     	;# 
   273  011B                     	;# 
   274  011D                     	;# 
   275  011D                     	;# 
   276  018C                     	;# 
   277  018E                     	;# 
   278  0191                     	;# 
   279  0191                     	;# 
   280  0192                     	;# 
   281  0193                     	;# 
   282  0193                     	;# 
   283  0193                     	;# 
   284  0194                     	;# 
   285  0195                     	;# 
   286  0196                     	;# 
   287  0199                     	;# 
   288  019A                     	;# 
   289  019B                     	;# 
   290  019B                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019C                     	;# 
   294  019C                     	;# 
   295  019D                     	;# 
   296  019E                     	;# 
   297  019F                     	;# 
   298  020C                     	;# 
   299  020E                     	;# 
   300  0211                     	;# 
   301  0211                     	;# 
   302  0212                     	;# 
   303  0212                     	;# 
   304  0213                     	;# 
   305  0213                     	;# 
   306  0214                     	;# 
   307  0214                     	;# 
   308  0215                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0216                     	;# 
   312  0216                     	;# 
   313  0217                     	;# 
   314  0217                     	;# 
   315  0291                     	;# 
   316  0291                     	;# 
   317  0292                     	;# 
   318  0293                     	;# 
   319  0294                     	;# 
   320  0295                     	;# 
   321  0295                     	;# 
   322  0296                     	;# 
   323  0391                     	;# 
   324  0392                     	;# 
   325  0393                     	;# 
   326  039A                     	;# 
   327  039C                     	;# 
   328  039D                     	;# 
   329  039E                     	;# 
   330  039F                     	;# 
   331  0FE4                     	;# 
   332  0FE5                     	;# 
   333  0FE6                     	;# 
   334  0FE7                     	;# 
   335  0FE8                     	;# 
   336  0FE9                     	;# 
   337  0FEA                     	;# 
   338  0FEB                     	;# 
   339  0FED                     	;# 
   340  0FEE                     	;# 
   341  0FEF                     	;# 
   342  0000                     	;# 
   343  0001                     	;# 
   344  0002                     	;# 
   345  0003                     	;# 
   346  0004                     	;# 
   347  0005                     	;# 
   348  0006                     	;# 
   349  0007                     	;# 
   350  0008                     	;# 
   351  0009                     	;# 
   352  000A                     	;# 
   353  000B                     	;# 
   354  000C                     	;# 
   355  000E                     	;# 
   356  0011                     	;# 
   357  0012                     	;# 
   358  0015                     	;# 
   359  0016                     	;# 
   360  0016                     	;# 
   361  0017                     	;# 
   362  0018                     	;# 
   363  0019                     	;# 
   364  001A                     	;# 
   365  001B                     	;# 
   366  001C                     	;# 
   367  001E                     	;# 
   368  001F                     	;# 
   369  008C                     	;# 
   370  008E                     	;# 
   371  0091                     	;# 
   372  0092                     	;# 
   373  0095                     	;# 
   374  0096                     	;# 
   375  0097                     	;# 
   376  0098                     	;# 
   377  0099                     	;# 
   378  009A                     	;# 
   379  009B                     	;# 
   380  009B                     	;# 
   381  009C                     	;# 
   382  009D                     	;# 
   383  009E                     	;# 
   384  010C                     	;# 
   385  010E                     	;# 
   386  0111                     	;# 
   387  0112                     	;# 
   388  0113                     	;# 
   389  0114                     	;# 
   390  0115                     	;# 
   391  0116                     	;# 
   392  0117                     	;# 
   393  0118                     	;# 
   394  0119                     	;# 
   395  011A                     	;# 
   396  011B                     	;# 
   397  011D                     	;# 
   398  011D                     	;# 
   399  018C                     	;# 
   400  018E                     	;# 
   401  0191                     	;# 
   402  0191                     	;# 
   403  0192                     	;# 
   404  0193                     	;# 
   405  0193                     	;# 
   406  0193                     	;# 
   407  0194                     	;# 
   408  0195                     	;# 
   409  0196                     	;# 
   410  0199                     	;# 
   411  019A                     	;# 
   412  019B                     	;# 
   413  019B                     	;# 
   414  019B                     	;# 
   415  019B                     	;# 
   416  019C                     	;# 
   417  019C                     	;# 
   418  019D                     	;# 
   419  019E                     	;# 
   420  019F                     	;# 
   421  020C                     	;# 
   422  020E                     	;# 
   423  0211                     	;# 
   424  0211                     	;# 
   425  0212                     	;# 
   426  0212                     	;# 
   427  0213                     	;# 
   428  0213                     	;# 
   429  0214                     	;# 
   430  0214                     	;# 
   431  0215                     	;# 
   432  0215                     	;# 
   433  0215                     	;# 
   434  0216                     	;# 
   435  0216                     	;# 
   436  0217                     	;# 
   437  0217                     	;# 
   438  0291                     	;# 
   439  0291                     	;# 
   440  0292                     	;# 
   441  0293                     	;# 
   442  0294                     	;# 
   443  0295                     	;# 
   444  0295                     	;# 
   445  0296                     	;# 
   446  0391                     	;# 
   447  0392                     	;# 
   448  0393                     	;# 
   449  039A                     	;# 
   450  039C                     	;# 
   451  039D                     	;# 
   452  039E                     	;# 
   453  039F                     	;# 
   454  0FE4                     	;# 
   455  0FE5                     	;# 
   456  0FE6                     	;# 
   457  0FE7                     	;# 
   458  0FE8                     	;# 
   459  0FE9                     	;# 
   460  0FEA                     	;# 
   461  0FEB                     	;# 
   462  0FED                     	;# 
   463  0FEE                     	;# 
   464  0FEF                     	;# 
   465  0000                     	;# 
   466  0001                     	;# 
   467  0002                     	;# 
   468  0003                     	;# 
   469  0004                     	;# 
   470  0005                     	;# 
   471  0006                     	;# 
   472  0007                     	;# 
   473  0008                     	;# 
   474  0009                     	;# 
   475  000A                     	;# 
   476  000B                     	;# 
   477  000C                     	;# 
   478  000E                     	;# 
   479  0011                     	;# 
   480  0012                     	;# 
   481  0015                     	;# 
   482  0016                     	;# 
   483  0016                     	;# 
   484  0017                     	;# 
   485  0018                     	;# 
   486  0019                     	;# 
   487  001A                     	;# 
   488  001B                     	;# 
   489  001C                     	;# 
   490  001E                     	;# 
   491  001F                     	;# 
   492  008C                     	;# 
   493  008E                     	;# 
   494  0091                     	;# 
   495  0092                     	;# 
   496  0095                     	;# 
   497  0096                     	;# 
   498  0097                     	;# 
   499  0098                     	;# 
   500  0099                     	;# 
   501  009A                     	;# 
   502  009B                     	;# 
   503  009B                     	;# 
   504  009C                     	;# 
   505  009D                     	;# 
   506  009E                     	;# 
   507  010C                     	;# 
   508  010E                     	;# 
   509  0111                     	;# 
   510  0112                     	;# 
   511  0113                     	;# 
   512  0114                     	;# 
   513  0115                     	;# 
   514  0116                     	;# 
   515  0117                     	;# 
   516  0118                     	;# 
   517  0119                     	;# 
   518  011A                     	;# 
   519  011B                     	;# 
   520  011D                     	;# 
   521  011D                     	;# 
   522  018C                     	;# 
   523  018E                     	;# 
   524  0191                     	;# 
   525  0191                     	;# 
   526  0192                     	;# 
   527  0193                     	;# 
   528  0193                     	;# 
   529  0193                     	;# 
   530  0194                     	;# 
   531  0195                     	;# 
   532  0196                     	;# 
   533  0199                     	;# 
   534  019A                     	;# 
   535  019B                     	;# 
   536  019B                     	;# 
   537  019B                     	;# 
   538  019B                     	;# 
   539  019C                     	;# 
   540  019C                     	;# 
   541  019D                     	;# 
   542  019E                     	;# 
   543  019F                     	;# 
   544  020C                     	;# 
   545  020E                     	;# 
   546  0211                     	;# 
   547  0211                     	;# 
   548  0212                     	;# 
   549  0212                     	;# 
   550  0213                     	;# 
   551  0213                     	;# 
   552  0214                     	;# 
   553  0214                     	;# 
   554  0215                     	;# 
   555  0215                     	;# 
   556  0215                     	;# 
   557  0216                     	;# 
   558  0216                     	;# 
   559  0217                     	;# 
   560  0217                     	;# 
   561  0291                     	;# 
   562  0291                     	;# 
   563  0292                     	;# 
   564  0293                     	;# 
   565  0294                     	;# 
   566  0295                     	;# 
   567  0295                     	;# 
   568  0296                     	;# 
   569  0391                     	;# 
   570  0392                     	;# 
   571  0393                     	;# 
   572  039A                     	;# 
   573  039C                     	;# 
   574  039D                     	;# 
   575  039E                     	;# 
   576  039F                     	;# 
   577  0FE4                     	;# 
   578  0FE5                     	;# 
   579  0FE6                     	;# 
   580  0FE7                     	;# 
   581  0FE8                     	;# 
   582  0FE9                     	;# 
   583  0FEA                     	;# 
   584  0FEB                     	;# 
   585  0FED                     	;# 
   586  0FEE                     	;# 
   587  0FEF                     	;# 
   588  0000                     	;# 
   589  0001                     	;# 
   590  0002                     	;# 
   591  0003                     	;# 
   592  0004                     	;# 
   593  0005                     	;# 
   594  0006                     	;# 
   595  0007                     	;# 
   596  0008                     	;# 
   597  0009                     	;# 
   598  000A                     	;# 
   599  000B                     	;# 
   600  000C                     	;# 
   601  000E                     	;# 
   602  0011                     	;# 
   603  0012                     	;# 
   604  0015                     	;# 
   605  0016                     	;# 
   606  0016                     	;# 
   607  0017                     	;# 
   608  0018                     	;# 
   609  0019                     	;# 
   610  001A                     	;# 
   611  001B                     	;# 
   612  001C                     	;# 
   613  001E                     	;# 
   614  001F                     	;# 
   615  008C                     	;# 
   616  008E                     	;# 
   617  0091                     	;# 
   618  0092                     	;# 
   619  0095                     	;# 
   620  0096                     	;# 
   621  0097                     	;# 
   622  0098                     	;# 
   623  0099                     	;# 
   624  009A                     	;# 
   625  009B                     	;# 
   626  009B                     	;# 
   627  009C                     	;# 
   628  009D                     	;# 
   629  009E                     	;# 
   630  010C                     	;# 
   631  010E                     	;# 
   632  0111                     	;# 
   633  0112                     	;# 
   634  0113                     	;# 
   635  0114                     	;# 
   636  0115                     	;# 
   637  0116                     	;# 
   638  0117                     	;# 
   639  0118                     	;# 
   640  0119                     	;# 
   641  011A                     	;# 
   642  011B                     	;# 
   643  011D                     	;# 
   644  011D                     	;# 
   645  018C                     	;# 
   646  018E                     	;# 
   647  0191                     	;# 
   648  0191                     	;# 
   649  0192                     	;# 
   650  0193                     	;# 
   651  0193                     	;# 
   652  0193                     	;# 
   653  0194                     	;# 
   654  0195                     	;# 
   655  0196                     	;# 
   656  0199                     	;# 
   657  019A                     	;# 
   658  019B                     	;# 
   659  019B                     	;# 
   660  019B                     	;# 
   661  019B                     	;# 
   662  019C                     	;# 
   663  019C                     	;# 
   664  019D                     	;# 
   665  019E                     	;# 
   666  019F                     	;# 
   667  020C                     	;# 
   668  020E                     	;# 
   669  0211                     	;# 
   670  0211                     	;# 
   671  0212                     	;# 
   672  0212                     	;# 
   673  0213                     	;# 
   674  0213                     	;# 
   675  0214                     	;# 
   676  0214                     	;# 
   677  0215                     	;# 
   678  0215                     	;# 
   679  0215                     	;# 
   680  0216                     	;# 
   681  0216                     	;# 
   682  0217                     	;# 
   683  0217                     	;# 
   684  0291                     	;# 
   685  0291                     	;# 
   686  0292                     	;# 
   687  0293                     	;# 
   688  0294                     	;# 
   689  0295                     	;# 
   690  0295                     	;# 
   691  0296                     	;# 
   692  0391                     	;# 
   693  0392                     	;# 
   694  0393                     	;# 
   695  039A                     	;# 
   696  039C                     	;# 
   697  039D                     	;# 
   698  039E                     	;# 
   699  039F                     	;# 
   700  0FE4                     	;# 
   701  0FE5                     	;# 
   702  0FE6                     	;# 
   703  0FE7                     	;# 
   704  0FE8                     	;# 
   705  0FE9                     	;# 
   706  0FEA                     	;# 
   707  0FEB                     	;# 
   708  0FED                     	;# 
   709  0FEE                     	;# 
   710  0FEF                     	;# 
   711  0000                     	;# 
   712  0001                     	;# 
   713  0002                     	;# 
   714  0003                     	;# 
   715  0004                     	;# 
   716  0005                     	;# 
   717  0006                     	;# 
   718  0007                     	;# 
   719  0008                     	;# 
   720  0009                     	;# 
   721  000A                     	;# 
   722  000B                     	;# 
   723  000C                     	;# 
   724  000E                     	;# 
   725  0011                     	;# 
   726  0012                     	;# 
   727  0015                     	;# 
   728  0016                     	;# 
   729  0016                     	;# 
   730  0017                     	;# 
   731  0018                     	;# 
   732  0019                     	;# 
   733  001A                     	;# 
   734  001B                     	;# 
   735  001C                     	;# 
   736  001E                     	;# 
   737  001F                     	;# 
   738  008C                     	;# 
   739  008E                     	;# 
   740  0091                     	;# 
   741  0092                     	;# 
   742  0095                     	;# 
   743  0096                     	;# 
   744  0097                     	;# 
   745  0098                     	;# 
   746  0099                     	;# 
   747  009A                     	;# 
   748  009B                     	;# 
   749  009B                     	;# 
   750  009C                     	;# 
   751  009D                     	;# 
   752  009E                     	;# 
   753  010C                     	;# 
   754  010E                     	;# 
   755  0111                     	;# 
   756  0112                     	;# 
   757  0113                     	;# 
   758  0114                     	;# 
   759  0115                     	;# 
   760  0116                     	;# 
   761  0117                     	;# 
   762  0118                     	;# 
   763  0119                     	;# 
   764  011A                     	;# 
   765  011B                     	;# 
   766  011D                     	;# 
   767  011D                     	;# 
   768  018C                     	;# 
   769  018E                     	;# 
   770  0191                     	;# 
   771  0191                     	;# 
   772  0192                     	;# 
   773  0193                     	;# 
   774  0193                     	;# 
   775  0193                     	;# 
   776  0194                     	;# 
   777  0195                     	;# 
   778  0196                     	;# 
   779  0199                     	;# 
   780  019A                     	;# 
   781  019B                     	;# 
   782  019B                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019C                     	;# 
   786  019C                     	;# 
   787  019D                     	;# 
   788  019E                     	;# 
   789  019F                     	;# 
   790  020C                     	;# 
   791  020E                     	;# 
   792  0211                     	;# 
   793  0211                     	;# 
   794  0212                     	;# 
   795  0212                     	;# 
   796  0213                     	;# 
   797  0213                     	;# 
   798  0214                     	;# 
   799  0214                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0216                     	;# 
   804  0216                     	;# 
   805  0217                     	;# 
   806  0217                     	;# 
   807  0291                     	;# 
   808  0291                     	;# 
   809  0292                     	;# 
   810  0293                     	;# 
   811  0294                     	;# 
   812  0295                     	;# 
   813  0295                     	;# 
   814  0296                     	;# 
   815  0391                     	;# 
   816  0392                     	;# 
   817  0393                     	;# 
   818  039A                     	;# 
   819  039C                     	;# 
   820  039D                     	;# 
   821  039E                     	;# 
   822  039F                     	;# 
   823  0FE4                     	;# 
   824  0FE5                     	;# 
   825  0FE6                     	;# 
   826  0FE7                     	;# 
   827  0FE8                     	;# 
   828  0FE9                     	;# 
   829  0FEA                     	;# 
   830  0FEB                     	;# 
   831  0FED                     	;# 
   832  0FEE                     	;# 
   833  0FEF                     	;# 
   834  0000                     	;# 
   835  0001                     	;# 
   836  0002                     	;# 
   837  0003                     	;# 
   838  0004                     	;# 
   839  0005                     	;# 
   840  0006                     	;# 
   841  0007                     	;# 
   842  0008                     	;# 
   843  0009                     	;# 
   844  000A                     	;# 
   845  000B                     	;# 
   846  000C                     	;# 
   847  000E                     	;# 
   848  0011                     	;# 
   849  0012                     	;# 
   850  0015                     	;# 
   851  0016                     	;# 
   852  0016                     	;# 
   853  0017                     	;# 
   854  0018                     	;# 
   855  0019                     	;# 
   856  001A                     	;# 
   857  001B                     	;# 
   858  001C                     	;# 
   859  001E                     	;# 
   860  001F                     	;# 
   861  008C                     	;# 
   862  008E                     	;# 
   863  0091                     	;# 
   864  0092                     	;# 
   865  0095                     	;# 
   866  0096                     	;# 
   867  0097                     	;# 
   868  0098                     	;# 
   869  0099                     	;# 
   870  009A                     	;# 
   871  009B                     	;# 
   872  009B                     	;# 
   873  009C                     	;# 
   874  009D                     	;# 
   875  009E                     	;# 
   876  010C                     	;# 
   877  010E                     	;# 
   878  0111                     	;# 
   879  0112                     	;# 
   880  0113                     	;# 
   881  0114                     	;# 
   882  0115                     	;# 
   883  0116                     	;# 
   884  0117                     	;# 
   885  0118                     	;# 
   886  0119                     	;# 
   887  011A                     	;# 
   888  011B                     	;# 
   889  011D                     	;# 
   890  011D                     	;# 
   891  018C                     	;# 
   892  018E                     	;# 
   893  0191                     	;# 
   894  0191                     	;# 
   895  0192                     	;# 
   896  0193                     	;# 
   897  0193                     	;# 
   898  0193                     	;# 
   899  0194                     	;# 
   900  0195                     	;# 
   901  0196                     	;# 
   902  0199                     	;# 
   903  019A                     	;# 
   904  019B                     	;# 
   905  019B                     	;# 
   906  019B                     	;# 
   907  019B                     	;# 
   908  019C                     	;# 
   909  019C                     	;# 
   910  019D                     	;# 
   911  019E                     	;# 
   912  019F                     	;# 
   913  020C                     	;# 
   914  020E                     	;# 
   915  0211                     	;# 
   916  0211                     	;# 
   917  0212                     	;# 
   918  0212                     	;# 
   919  0213                     	;# 
   920  0213                     	;# 
   921  0214                     	;# 
   922  0214                     	;# 
   923  0215                     	;# 
   924  0215                     	;# 
   925  0215                     	;# 
   926  0216                     	;# 
   927  0216                     	;# 
   928  0217                     	;# 
   929  0217                     	;# 
   930  0291                     	;# 
   931  0291                     	;# 
   932  0292                     	;# 
   933  0293                     	;# 
   934  0294                     	;# 
   935  0295                     	;# 
   936  0295                     	;# 
   937  0296                     	;# 
   938  0391                     	;# 
   939  0392                     	;# 
   940  0393                     	;# 
   941  039A                     	;# 
   942  039C                     	;# 
   943  039D                     	;# 
   944  039E                     	;# 
   945  039F                     	;# 
   946  0FE4                     	;# 
   947  0FE5                     	;# 
   948  0FE6                     	;# 
   949  0FE7                     	;# 
   950  0FE8                     	;# 
   951  0FE9                     	;# 
   952  0FEA                     	;# 
   953  0FEB                     	;# 
   954  0FED                     	;# 
   955  0FEE                     	;# 
   956  0FEF                     	;# 
   957  0000                     	;# 
   958  0001                     	;# 
   959  0002                     	;# 
   960  0003                     	;# 
   961  0004                     	;# 
   962  0005                     	;# 
   963  0006                     	;# 
   964  0007                     	;# 
   965  0008                     	;# 
   966  0009                     	;# 
   967  000A                     	;# 
   968  000B                     	;# 
   969  000C                     	;# 
   970  000E                     	;# 
   971  0011                     	;# 
   972  0012                     	;# 
   973  0015                     	;# 
   974  0016                     	;# 
   975  0016                     	;# 
   976  0017                     	;# 
   977  0018                     	;# 
   978  0019                     	;# 
   979  001A                     	;# 
   980  001B                     	;# 
   981  001C                     	;# 
   982  001E                     	;# 
   983  001F                     	;# 
   984  008C                     	;# 
   985  008E                     	;# 
   986  0091                     	;# 
   987  0092                     	;# 
   988  0095                     	;# 
   989  0096                     	;# 
   990  0097                     	;# 
   991  0098                     	;# 
   992  0099                     	;# 
   993  009A                     	;# 
   994  009B                     	;# 
   995  009B                     	;# 
   996  009C                     	;# 
   997  009D                     	;# 
   998  009E                     	;# 
   999  010C                     	;# 
  1000  010E                     	;# 
  1001  0111                     	;# 
  1002  0112                     	;# 
  1003  0113                     	;# 
  1004  0114                     	;# 
  1005  0115                     	;# 
  1006  0116                     	;# 
  1007  0117                     	;# 
  1008  0118                     	;# 
  1009  0119                     	;# 
  1010  011A                     	;# 
  1011  011B                     	;# 
  1012  011D                     	;# 
  1013  011D                     	;# 
  1014  018C                     	;# 
  1015  018E                     	;# 
  1016  0191                     	;# 
  1017  0191                     	;# 
  1018  0192                     	;# 
  1019  0193                     	;# 
  1020  0193                     	;# 
  1021  0193                     	;# 
  1022  0194                     	;# 
  1023  0195                     	;# 
  1024  0196                     	;# 
  1025  0199                     	;# 
  1026  019A                     	;# 
  1027  019B                     	;# 
  1028  019B                     	;# 
  1029  019B                     	;# 
  1030  019B                     	;# 
  1031  019C                     	;# 
  1032  019C                     	;# 
  1033  019D                     	;# 
  1034  019E                     	;# 
  1035  019F                     	;# 
  1036  020C                     	;# 
  1037  020E                     	;# 
  1038  0211                     	;# 
  1039  0211                     	;# 
  1040  0212                     	;# 
  1041  0212                     	;# 
  1042  0213                     	;# 
  1043  0213                     	;# 
  1044  0214                     	;# 
  1045  0214                     	;# 
  1046  0215                     	;# 
  1047  0215                     	;# 
  1048  0215                     	;# 
  1049  0216                     	;# 
  1050  0216                     	;# 
  1051  0217                     	;# 
  1052  0217                     	;# 
  1053  0291                     	;# 
  1054  0291                     	;# 
  1055  0292                     	;# 
  1056  0293                     	;# 
  1057  0294                     	;# 
  1058  0295                     	;# 
  1059  0295                     	;# 
  1060  0296                     	;# 
  1061  0391                     	;# 
  1062  0392                     	;# 
  1063  0393                     	;# 
  1064  039A                     	;# 
  1065  039C                     	;# 
  1066  039D                     	;# 
  1067  039E                     	;# 
  1068  039F                     	;# 
  1069  0FE4                     	;# 
  1070  0FE5                     	;# 
  1071  0FE6                     	;# 
  1072  0FE7                     	;# 
  1073  0FE8                     	;# 
  1074  0FE9                     	;# 
  1075  0FEA                     	;# 
  1076  0FEB                     	;# 
  1077  0FED                     	;# 
  1078  0FEE                     	;# 
  1079  0FEF                     	;# 
  1080  0000                     	;# 
  1081  0001                     	;# 
  1082  0002                     	;# 
  1083  0003                     	;# 
  1084  0004                     	;# 
  1085  0005                     	;# 
  1086  0006                     	;# 
  1087  0007                     	;# 
  1088  0008                     	;# 
  1089  0009                     	;# 
  1090  000A                     	;# 
  1091  000B                     	;# 
  1092  000C                     	;# 
  1093  000E                     	;# 
  1094  0011                     	;# 
  1095  0012                     	;# 
  1096  0015                     	;# 
  1097  0016                     	;# 
  1098  0016                     	;# 
  1099  0017                     	;# 
  1100  0018                     	;# 
  1101  0019                     	;# 
  1102  001A                     	;# 
  1103  001B                     	;# 
  1104  001C                     	;# 
  1105  001E                     	;# 
  1106  001F                     	;# 
  1107  008C                     	;# 
  1108  008E                     	;# 
  1109  0091                     	;# 
  1110  0092                     	;# 
  1111  0095                     	;# 
  1112  0096                     	;# 
  1113  0097                     	;# 
  1114  0098                     	;# 
  1115  0099                     	;# 
  1116  009A                     	;# 
  1117  009B                     	;# 
  1118  009B                     	;# 
  1119  009C                     	;# 
  1120  009D                     	;# 
  1121  009E                     	;# 
  1122  010C                     	;# 
  1123  010E                     	;# 
  1124  0111                     	;# 
  1125  0112                     	;# 
  1126  0113                     	;# 
  1127  0114                     	;# 
  1128  0115                     	;# 
  1129  0116                     	;# 
  1130  0117                     	;# 
  1131  0118                     	;# 
  1132  0119                     	;# 
  1133  011A                     	;# 
  1134  011B                     	;# 
  1135  011D                     	;# 
  1136  011D                     	;# 
  1137  018C                     	;# 
  1138  018E                     	;# 
  1139  0191                     	;# 
  1140  0191                     	;# 
  1141  0192                     	;# 
  1142  0193                     	;# 
  1143  0193                     	;# 
  1144  0193                     	;# 
  1145  0194                     	;# 
  1146  0195                     	;# 
  1147  0196                     	;# 
  1148  0199                     	;# 
  1149  019A                     	;# 
  1150  019B                     	;# 
  1151  019B                     	;# 
  1152  019B                     	;# 
  1153  019B                     	;# 
  1154  019C                     	;# 
  1155  019C                     	;# 
  1156  019D                     	;# 
  1157  019E                     	;# 
  1158  019F                     	;# 
  1159  020C                     	;# 
  1160  020E                     	;# 
  1161  0211                     	;# 
  1162  0211                     	;# 
  1163  0212                     	;# 
  1164  0212                     	;# 
  1165  0213                     	;# 
  1166  0213                     	;# 
  1167  0214                     	;# 
  1168  0214                     	;# 
  1169  0215                     	;# 
  1170  0215                     	;# 
  1171  0215                     	;# 
  1172  0216                     	;# 
  1173  0216                     	;# 
  1174  0217                     	;# 
  1175  0217                     	;# 
  1176  0291                     	;# 
  1177  0291                     	;# 
  1178  0292                     	;# 
  1179  0293                     	;# 
  1180  0294                     	;# 
  1181  0295                     	;# 
  1182  0295                     	;# 
  1183  0296                     	;# 
  1184  0391                     	;# 
  1185  0392                     	;# 
  1186  0393                     	;# 
  1187  039A                     	;# 
  1188  039C                     	;# 
  1189  039D                     	;# 
  1190  039E                     	;# 
  1191  039F                     	;# 
  1192  0FE4                     	;# 
  1193  0FE5                     	;# 
  1194  0FE6                     	;# 
  1195  0FE7                     	;# 
  1196  0FE8                     	;# 
  1197  0FE9                     	;# 
  1198  0FEA                     	;# 
  1199  0FEB                     	;# 
  1200  0FED                     	;# 
  1201  0FEE                     	;# 
  1202  0FEF                     	;# 
  1203                           
  1204                           	psect	stringtext1
  1205  03EC                     __pstringtext1:
  1206  03EC                     _GOOD_WSP_VOLTAGE:
  1207  03EC  348E               	retlw	142
  1208  03ED  3400               	retlw	0
  1209  03EE                     __end_of_GOOD_WSP_VOLTAGE:
  1210                           
  1211                           	psect	stringtext2
  1212  03EE                     __pstringtext2:
  1213  03EE                     _BAD_WSP_VOLTAGE:
  1214  03EE  3480               	retlw	128
  1215  03EF  3400               	retlw	0
  1216  03F0                     __end_of_BAD_WSP_VOLTAGE:
  1217                           
  1218                           	psect	stringtext3
  1219  03F0                     __pstringtext3:
  1220  03F0                     _UP_RESISTANSE:
  1221  03F0  3420               	retlw	32
  1222  03F1  344E               	retlw	78
  1223  03F2                     __end_of_UP_RESISTANSE:
  1224                           
  1225                           	psect	stringtext4
  1226  03F2                     __pstringtext4:
  1227  03F2                     _HIGH_WATER_RESISTANSE:
  1228  03F2  34A8               	retlw	168
  1229  03F3  3461               	retlw	97
  1230  03F4                     __end_of_HIGH_WATER_RESISTANSE:
  1231                           
  1232                           	psect	stringtext5
  1233  03F4                     __pstringtext5:
  1234  03F4                     _LOW_WATER_RESISTANSE:
  1235  03F4  3420               	retlw	32
  1236  03F5  344E               	retlw	78
  1237  03F6                     __end_of_LOW_WATER_RESISTANSE:
  1238                           
  1239                           	psect	nvBANK0
  1240  003D                     __pnvBANK0:
  1241  003D                     _TMR0_InterruptHandler:
  1242  003D                     	ds	2
  1243  003F                     _TMR2_InterruptHandler:
  1244  003F                     	ds	2
  1245  000C                     _PORTAbits	set	12
  1246  000E                     _PORTCbits	set	14
  1247  0015                     _TMR0	set	21
  1248  001C                     _T2CONbits	set	28
  1249  001C                     _T2CON	set	28
  1250  001A                     _TMR2	set	26
  1251  001B                     _PR2	set	27
  1252  0011                     _PIR1bits	set	17
  1253  000B                     _INTCONbits	set	11
  1254  005F                     _GIE	set	95
  1255  008C                     _TRISAbits	set	140
  1256  008E                     _TRISCbits	set	142
  1257  0095                     _OPTION_REG	set	149
  1258  0091                     _PIE1bits	set	145
  1259  0095                     _OPTION_REGbits	set	149
  1260  008E                     _TRISC	set	142
  1261  008C                     _TRISA	set	140
  1262  009D                     _ADCON0bits	set	157
  1263  009D                     _ADCON0	set	157
  1264  009C                     _ADRESH	set	156
  1265  009B                     _ADRESL	set	155
  1266  009E                     _ADCON1	set	158
  1267  0097                     _WDTCON	set	151
  1268  0098                     _OSCTUNE	set	152
  1269  0099                     _OSCCON	set	153
  1270  010E                     _LATCbits	set	270
  1271  010C                     _LATAbits	set	268
  1272  011D                     _APFCON	set	285
  1273  010E                     _LATC	set	270
  1274  010C                     _LATA	set	268
  1275  0116                     _BORCON	set	278
  1276  0191                     _EEADR	set	401
  1277  0196                     _EECON2	set	406
  1278  0193                     _EEDATA	set	403
  1279  018C                     _ANSELAbits	set	396
  1280  018E                     _ANSELCbits	set	398
  1281  018C                     _ANSELA	set	396
  1282  018E                     _ANSELC	set	398
  1283  0CA8                     _RD	set	3240
  1284  0CAA                     _WREN	set	3242
  1285  0CA9                     _WR	set	3241
  1286  020E                     _WPUCbits	set	526
  1287  020C                     _WPUAbits	set	524
  1288  020E                     _WPUC	set	526
  1289  020C                     _WPUA	set	524
  1290                           
  1291                           	psect	cinit
  1292  0027                     start_initialization:	
  1293                           ; #config settings
  1294                           
  1295  0027                     __initialization:
  1296                           
  1297                           ; Clear objects allocated to COMMON
  1298  0027  01F7               	clrf	__pbssCOMMON& (0+127)
  1299  0028  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1300  0029  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1301  002A  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  1302                           
  1303                           ; Clear objects allocated to BANK0
  1304  002B  3020               	movlw	low __pbssBANK0
  1305  002C  0084               	movwf	4
  1306  002D  3000               	movlw	high __pbssBANK0
  1307  002E  0085               	movwf	5
  1308  002F  301D               	movlw	29
  1309  0030  3183  23C2  3180   	fcall	clear_ram0
  1310  0033                     end_of_initialization:	
  1311                           ;End of C runtime variable initialization code
  1312                           
  1313  0033                     __end_of__initialization:
  1314  0033  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1315  0034  0020               	movlb	0
  1316  0035  2A2C               	ljmp	_main	;jump to C main() function
  1317                           
  1318                           	psect	bssCOMMON
  1319  0077                     __pbssCOMMON:
  1320  0077                     _FF:
  1321  0077                     	ds	3
  1322  007A                     _timer0ReloadVal:
  1323  007A                     	ds	1
  1324                           
  1325                           	psect	bssBANK0
  1326  0020                     __pbssBANK0:
  1327  0020                     _time_rotation:
  1328  0020                     	ds	3
  1329  0023                     ms_tick@tick_count:
  1330  0023                     	ds	2
  1331  0025                     _time_zummer_short:
  1332  0025                     	ds	2
  1333  0027                     _time_zummer:
  1334  0027                     	ds	2
  1335  0029                     _time_led:
  1336  0029                     	ds	2
  1337  002B                     _time_rele_gap:
  1338  002B                     	ds	2
  1339  002D                     _time_rele_control:
  1340  002D                     	ds	2
  1341  002F                     _time_rele_power:
  1342  002F                     	ds	2
  1343  0031                     _ADC_InterruptHandler:
  1344  0031                     	ds	2
  1345  0033                     sec_tick_work@iled:
  1346  0033                     	ds	1
  1347  0034                     get_jump_full@jump_counter:
  1348  0034                     	ds	1
  1349  0035                     get_jump@jump_counter:
  1350  0035                     	ds	1
  1351  0036                     get_fun_full@fun_counter:
  1352  0036                     	ds	1
  1353  0037                     get_fun@fun_counter:
  1354  0037                     	ds	1
  1355  0038                     get_measure@measures:
  1356  0038                     	ds	1
  1357  0039                     _beep_long_count:
  1358  0039                     	ds	1
  1359  003A                     _beep_short_count:
  1360  003A                     	ds	1
  1361  003B                     _time_meas:
  1362  003B                     	ds	1
  1363  003C                     _FRIMWARE_VERSION_EEPROM_ADR:
  1364  003C                     	ds	1
  1365                           
  1366                           	psect	clrtext
  1367  03C2                     clear_ram0:	
  1368                           ;	Called with FSR0 containing the base address, and
  1369                           ;	WREG with the size to clear
  1370                           
  1371  03C2  0064               	clrwdt	;clear the watchdog before getting into this loop
  1372  03C3                     clrloop0:
  1373  03C3  0180               	clrf	0	;clear RAM location pointed to by FSR
  1374  03C4  3101               	addfsr 0,1
  1375  03C5  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1376  03C6  2BC3               	goto	clrloop0	;have we reached the end yet?
  1377  03C7  3400               	retlw	0	;all done for this memory range, return
  1378                           
  1379                           	psect	cstackCOMMON
  1380  0070                     __pcstackCOMMON:
  1381  0070                     ?_PIN_MANAGER_Initialize:
  1382  0070                     ?_OSCILLATOR_Initialize:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385  0070                     ?_WDT_Initialize:	
  1386                           ; 1 bytes @ 0x0
  1387                           
  1388  0070                     ?_TMR2_Initialize:	
  1389                           ; 1 bytes @ 0x0
  1390                           
  1391  0070                     ?_ADC_Initialize:	
  1392                           ; 1 bytes @ 0x0
  1393                           
  1394  0070                     ?_TMR0_Initialize:	
  1395                           ; 1 bytes @ 0x0
  1396                           
  1397  0070                     ?_TMR0_ISR:	
  1398                           ; 1 bytes @ 0x0
  1399                           
  1400  0070                     ??_TMR0_ISR:	
  1401                           ; 1 bytes @ 0x0
  1402                           
  1403  0070                     ?_TMR2_ISR:	
  1404                           ; 1 bytes @ 0x0
  1405                           
  1406  0070                     ?_TMR2_DefaultInterruptHandler:	
  1407                           ; 1 bytes @ 0x0
  1408                           
  1409  0070                     ??_TMR2_DefaultInterruptHandler:	
  1410                           ; 1 bytes @ 0x0
  1411                           
  1412  0070                     ?_TMR0_DefaultInterruptHandler:	
  1413                           ; 1 bytes @ 0x0
  1414                           
  1415  0070                     ??_TMR0_DefaultInterruptHandler:	
  1416                           ; 1 bytes @ 0x0
  1417                           
  1418  0070                     ?_EEPROM_ReadByte:	
  1419                           ; 1 bytes @ 0x0
  1420                           
  1421  0070                     ?_SYSTEM_Initialize:	
  1422                           ; 1 bytes @ 0x0
  1423                           
  1424  0070                     ?_ADC_GetConversion:	
  1425                           ; 1 bytes @ 0x0
  1426                           
  1427  0070                     ?_INTERRUPT_InterruptManager:	
  1428                           ; 1 bytes @ 0x0
  1429                           
  1430  0070                     ?_TMR2_StartTimer:	
  1431                           ; 1 bytes @ 0x0
  1432                           
  1433  0070                     ?_toggle_zummer:	
  1434                           ; 1 bytes @ 0x0
  1435                           
  1436  0070                     ??_toggle_zummer:	
  1437                           ; 1 bytes @ 0x0
  1438                           
  1439  0070                     ?_timer0_switch:	
  1440                           ; 1 bytes @ 0x0
  1441                           
  1442  0070                     ??_timer0_switch:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445  0070                     ?_start_tone:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448  0070                     ?_beep_short:	
  1449                           ; 1 bytes @ 0x0
  1450                           
  1451  0070                     ?_beep_long:	
  1452                           ; 1 bytes @ 0x0
  1453                           
  1454  0070                     ?_go_close:	
  1455                           ; 1 bytes @ 0x0
  1456                           
  1457  0070                     ?_go_close_short:	
  1458                           ; 1 bytes @ 0x0
  1459                           
  1460  0070                     ?_go_open:	
  1461                           ; 1 bytes @ 0x0
  1462                           
  1463  0070                     ?_go_close_alt:	
  1464                           ; 1 bytes @ 0x0
  1465                           
  1466  0070                     ?_go_open_alt:	
  1467                           ; 1 bytes @ 0x0
  1468                           
  1469  0070                     ?_start_alarm:	
  1470                           ; 1 bytes @ 0x0
  1471                           
  1472  0070                     ?_get_measure:	
  1473                           ; 1 bytes @ 0x0
  1474                           
  1475  0070                     ?_get_fun:	
  1476                           ; 1 bytes @ 0x0
  1477                           
  1478  0070                     ?_get_jump:	
  1479                           ; 1 bytes @ 0x0
  1480                           
  1481  0070                     ?_rele_tick:	
  1482                           ; 1 bytes @ 0x0
  1483                           
  1484  0070                     ??_rele_tick:	
  1485                           ; 1 bytes @ 0x0
  1486                           
  1487  0070                     ?_sec_tick_work:	
  1488                           ; 1 bytes @ 0x0
  1489                           
  1490  0070                     ?_povorot:	
  1491                           ; 1 bytes @ 0x0
  1492                           
  1493  0070                     ?_fun_work:	
  1494                           ; 1 bytes @ 0x0
  1495                           
  1496  0070                     ?_switch_wm:	
  1497                           ; 1 bytes @ 0x0
  1498                           
  1499  0070                     ?_ms_tick:	
  1500                           ; 1 bytes @ 0x0
  1501                           
  1502  0070                     ?_eeprom_set:	
  1503                           ; 1 bytes @ 0x0
  1504                           
  1505  0070                     ?_start_setup:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508  0070                     ?_main:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511                           
  1512                           ; 1 bytes @ 0x0
  1513  0070                     	ds	2
  1514  0072                     ??_sec_tick_work:
  1515                           
  1516                           ; 1 bytes @ 0x2
  1517  0072                     	ds	1
  1518  0073                     ??_PIN_MANAGER_Initialize:
  1519  0073                     ??_OSCILLATOR_Initialize:	
  1520                           ; 1 bytes @ 0x3
  1521                           
  1522  0073                     ??_WDT_Initialize:	
  1523                           ; 1 bytes @ 0x3
  1524                           
  1525  0073                     ??_ADC_Initialize:	
  1526                           ; 1 bytes @ 0x3
  1527                           
  1528  0073                     ??_TMR2_ISR:	
  1529                           ; 1 bytes @ 0x3
  1530                           
  1531  0073                     ?_TMR2_SetInterruptHandler:	
  1532                           ; 1 bytes @ 0x3
  1533                           
  1534  0073                     ?_TMR0_SetInterruptHandler:	
  1535                           ; 1 bytes @ 0x3
  1536                           
  1537  0073                     ??_EEPROM_ReadByte:	
  1538                           ; 1 bytes @ 0x3
  1539                           
  1540  0073                     ?_EEPROM_WriteByte:	
  1541                           ; 1 bytes @ 0x3
  1542                           
  1543  0073                     ??_ADC_GetConversion:	
  1544                           ; 1 bytes @ 0x3
  1545                           
  1546  0073                     ??_INTERRUPT_InterruptManager:	
  1547                           ; 1 bytes @ 0x3
  1548                           
  1549  0073                     ??_TMR2_StartTimer:	
  1550                           ; 1 bytes @ 0x3
  1551                           
  1552  0073                     ??_start_tone:	
  1553                           ; 1 bytes @ 0x3
  1554                           
  1555  0073                     ??_beep_short:	
  1556                           ; 1 bytes @ 0x3
  1557                           
  1558  0073                     ??_beep_long:	
  1559                           ; 1 bytes @ 0x3
  1560                           
  1561  0073                     ??_go_close:	
  1562                           ; 1 bytes @ 0x3
  1563                           
  1564  0073                     ??_go_close_short:	
  1565                           ; 1 bytes @ 0x3
  1566                           
  1567  0073                     ??_go_open:	
  1568                           ; 1 bytes @ 0x3
  1569                           
  1570  0073                     ??_go_close_alt:	
  1571                           ; 1 bytes @ 0x3
  1572                           
  1573  0073                     ??_go_open_alt:	
  1574                           ; 1 bytes @ 0x3
  1575                           
  1576  0073                     ??_get_fun:	
  1577                           ; 1 bytes @ 0x3
  1578                           
  1579  0073                     ??_get_jump:	
  1580                           ; 1 bytes @ 0x3
  1581                           
  1582  0073                     ??_ms_tick:	
  1583                           ; 1 bytes @ 0x3
  1584                           
  1585  0073                     EEPROM_WriteByte@dt:	
  1586                           ; 1 bytes @ 0x3
  1587                           
  1588  0073                     TMR2_SetInterruptHandler@InterruptHandler:	
  1589                           ; 1 bytes @ 0x3
  1590                           
  1591  0073                     TMR0_SetInterruptHandler@InterruptHandler:	
  1592                           ; 2 bytes @ 0x3
  1593                           
  1594                           
  1595                           ; 2 bytes @ 0x3
  1596  0073                     	ds	1
  1597  0074                     ??_EEPROM_WriteByte:
  1598  0074                     ADC_GetConversion@channel:	
  1599                           ; 1 bytes @ 0x4
  1600                           
  1601  0074                     beep_short@count:	
  1602                           ; 1 bytes @ 0x4
  1603                           
  1604  0074                     beep_long@count:	
  1605                           ; 1 bytes @ 0x4
  1606                           
  1607                           
  1608                           ; 1 bytes @ 0x4
  1609  0074                     	ds	1
  1610  0075                     ??_TMR2_Initialize:
  1611  0075                     ??_TMR0_Initialize:	
  1612                           ; 1 bytes @ 0x5
  1613                           
  1614  0075                     ??_TMR2_SetInterruptHandler:	
  1615                           ; 1 bytes @ 0x5
  1616                           
  1617  0075                     ??_TMR0_SetInterruptHandler:	
  1618                           ; 1 bytes @ 0x5
  1619                           
  1620  0075                     ??_SYSTEM_Initialize:	
  1621                           ; 1 bytes @ 0x5
  1622                           
  1623  0075                     ??_start_alarm:	
  1624                           ; 1 bytes @ 0x5
  1625                           
  1626  0075                     ??_get_measure:	
  1627                           ; 1 bytes @ 0x5
  1628                           
  1629  0075                     ??_povorot:	
  1630                           ; 1 bytes @ 0x5
  1631                           
  1632  0075                     ??_fun_work:	
  1633                           ; 1 bytes @ 0x5
  1634                           
  1635  0075                     ??_switch_wm:	
  1636                           ; 1 bytes @ 0x5
  1637                           
  1638  0075                     EEPROM_ReadByte@addr:	
  1639                           ; 1 bytes @ 0x5
  1640                           
  1641                           
  1642                           ; 1 bytes @ 0x5
  1643  0075                     	ds	1
  1644  0076                     ??_eeprom_set:
  1645                           
  1646                           ; 1 bytes @ 0x6
  1647  0076                     	ds	1
  1648  0077                     ??_start_setup:
  1649  0077                     ??_main:	
  1650                           ; 1 bytes @ 0x7
  1651                           
  1652                           
  1653                           	psect	cstackBANK0
  1654  0041                     __pcstackBANK0:	
  1655                           ; 1 bytes @ 0x7
  1656                           
  1657  0041                     EEPROM_WriteByte@addr:
  1658  0041                     get_measure@res:	
  1659                           ; 1 bytes @ 0x0
  1660                           
  1661                           
  1662                           ; 2 bytes @ 0x0
  1663  0041                     	ds	1
  1664  0042                     EEPROM_WriteByte@status:
  1665                           
  1666                           ; 1 bytes @ 0x1
  1667  0042                     	ds	1
  1668  0043                     eeprom_set@adres:
  1669                           
  1670                           ; 1 bytes @ 0x2
  1671  0043                     	ds	1
  1672                           
  1673                           	psect	maintext
  1674  022C                     __pmaintext:	
  1675 ;;
  1676 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1677 ;;
  1678 ;; *************** function _main *****************
  1679 ;; Defined at:
  1680 ;;		line 626 in file "main.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;		None
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;		None
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		wreg, status,2, status,0, pclath, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : B1F/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMMON   BANK0   BANK1
  1694 ;;      Params:         0       0       0
  1695 ;;      Locals:         0       0       0
  1696 ;;      Temps:          0       0       0
  1697 ;;      Totals:         0       0       0
  1698 ;;Total ram usage:        0 bytes
  1699 ;; Hardware stack levels required when called: 10
  1700 ;; This function calls:
  1701 ;;		_fun_work
  1702 ;;		_get_fun
  1703 ;;		_get_jump
  1704 ;;		_get_measure
  1705 ;;		_povorot
  1706 ;;		_start_setup
  1707 ;;		_switch_wm
  1708 ;; This function is called by:
  1709 ;;		Startup code after reset
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713  022C                     _main:	
  1714                           ;psect for function _main
  1715                           
  1716  022C                     l2477:	
  1717                           ;incstack = 0
  1718                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1719                           
  1720                           
  1721                           ;main.c: 628:     start_setup();
  1722  022C  3181  2174  3182   	fcall	_start_setup
  1723  022F                     l2479:
  1724                           
  1725                           ;main.c: 632:         if (!FF.bits.ALARM) {
  1726  022F  1877               	btfsc	_FF,0
  1727  0230  2A32               	goto	u1731
  1728  0231  2A33               	goto	u1730
  1729  0232                     u1731:
  1730  0232  2A2F               	goto	l2479
  1731  0233                     u1730:
  1732  0233                     l2481:
  1733                           
  1734                           ;main.c: 634:             get_jump();
  1735  0233  3181  21D9  3182   	fcall	_get_jump
  1736                           
  1737                           ;main.c: 635:             switch_wm();
  1738  0236  3182  22AC  3182   	fcall	_switch_wm
  1739                           
  1740                           ;main.c: 637:             get_fun();
  1741  0239  3181  213B  3182   	fcall	_get_fun
  1742                           
  1743                           ;main.c: 638:             fun_work();
  1744  023C  3181  2100  3182   	fcall	_fun_work
  1745  023F                     l2483:
  1746                           
  1747                           ;main.c: 640:             if (FF.bits.ALLOW_MEASURE) {
  1748  023F  1E77               	btfss	_FF,4
  1749  0240  2A42               	goto	u1741
  1750  0241  2A43               	goto	u1740
  1751  0242                     u1741:
  1752  0242  2A47               	goto	l512
  1753  0243                     u1740:
  1754  0243                     l2485:
  1755                           
  1756                           ;main.c: 641:                 get_measure();
  1757  0243  3180  20C2  3182   	fcall	_get_measure
  1758  0246                     l2487:
  1759                           
  1760                           ;main.c: 642:                 FF.bits.ALLOW_MEASURE =0;
  1761  0246  1277               	bcf	_FF,4
  1762  0247                     l512:	
  1763                           ;main.c: 643:             }
  1764                           
  1765                           
  1766                           ;main.c: 644:             povorot();
  1767  0247  3180  2036  3182   	fcall	_povorot
  1768  024A  0064               	clrwdt	;# 
  1769  024B  2A2F               	goto	l2479
  1770  024C  2826               	ljmp	start
  1771  024D                     __end_of_main:
  1772                           
  1773                           	psect	text1
  1774  02AC                     __ptext1:	
  1775 ;; *************** function _switch_wm *****************
  1776 ;; Defined at:
  1777 ;;		line 458 in file "main.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;		None
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;		None
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg, status,2, status,0, pclath, cstack
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMMON   BANK0   BANK1
  1791 ;;      Params:         0       0       0
  1792 ;;      Locals:         0       0       0
  1793 ;;      Temps:          0       0       0
  1794 ;;      Totals:         0       0       0
  1795 ;;Total ram usage:        0 bytes
  1796 ;; Hardware stack levels used: 1
  1797 ;; Hardware stack levels required when called: 8
  1798 ;; This function calls:
  1799 ;;		_beep_long
  1800 ;; This function is called by:
  1801 ;;		_main
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805  02AC                     _switch_wm:	
  1806                           ;psect for function _switch_wm
  1807                           
  1808  02AC                     l2121:	
  1809                           ;incstack = 0
  1810                           ; Regs used in _switch_wm: [wreg+status,2+status,0+pclath+cstack]
  1811                           
  1812                           
  1813                           ;main.c: 459:     if (FF.bits._JUMP_CONNECTED) {
  1814  02AC  1DF7               	btfss	_FF,3
  1815  02AD  2AAF               	goto	u1291
  1816  02AE  2AB0               	goto	u1290
  1817  02AF                     u1291:
  1818  02AF  2ABA               	goto	l465
  1819  02B0                     u1290:
  1820  02B0                     l2123:
  1821                           
  1822                           ;main.c: 460:         if (FF.bits.NORMAL_WORK_MODE) {
  1823  02B0  1CF7               	btfss	_FF,1
  1824  02B1  2AB3               	goto	u1301
  1825  02B2  2AB4               	goto	u1300
  1826  02B3                     u1301:
  1827  02B3  2AC3               	goto	l469
  1828  02B4                     u1300:
  1829  02B4                     l2125:
  1830                           
  1831                           ;main.c: 461:             FF.bits.NORMAL_WORK_MODE = 0;
  1832  02B4  10F7               	bcf	_FF,1
  1833  02B5                     l2127:
  1834                           
  1835                           ;main.c: 464:                beep_long(2);
  1836  02B5  3002               	movlw	2
  1837  02B6  3183  2370  3182   	fcall	_beep_long
  1838  02B9  2AC3               	goto	l469
  1839  02BA                     l465:
  1840                           
  1841                           ;main.c: 467:         if (!FF.bits.NORMAL_WORK_MODE) {
  1842  02BA  18F7               	btfsc	_FF,1
  1843  02BB  2ABD               	goto	u1311
  1844  02BC  2ABE               	goto	u1310
  1845  02BD                     u1311:
  1846  02BD  2AC3               	goto	l469
  1847  02BE                     u1310:
  1848  02BE                     l2129:
  1849                           
  1850                           ;main.c: 468:             FF.bits.NORMAL_WORK_MODE = 1;
  1851  02BE  14F7               	bsf	_FF,1
  1852  02BF                     l2131:
  1853                           
  1854                           ;main.c: 471:                beep_long(1);
  1855  02BF  3001               	movlw	1
  1856  02C0  3183  2370  3182   	fcall	_beep_long
  1857  02C3                     l469:
  1858  02C3  0008               	return
  1859  02C4                     __end_of_switch_wm:
  1860                           
  1861                           	psect	text2
  1862  0370                     __ptext2:	
  1863 ;; *************** function _beep_long *****************
  1864 ;; Defined at:
  1865 ;;		line 141 in file "main.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  count           1    wreg     unsigned char 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  count           1    4[COMMON] unsigned char 
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2, status,0, pclath, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMMON   BANK0   BANK1
  1879 ;;      Params:         0       0       0
  1880 ;;      Locals:         1       0       0
  1881 ;;      Temps:          1       0       0
  1882 ;;      Totals:         2       0       0
  1883 ;;Total ram usage:        2 bytes
  1884 ;; Hardware stack levels used: 1
  1885 ;; Hardware stack levels required when called: 7
  1886 ;; This function calls:
  1887 ;;		_start_tone
  1888 ;; This function is called by:
  1889 ;;		_switch_wm
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893  0370                     _beep_long:	
  1894                           ;psect for function _beep_long
  1895                           
  1896                           
  1897                           ;incstack = 0
  1898                           ; Regs used in _beep_long: [wreg+status,2+status,0+pclath+cstack]
  1899                           ;beep_long@count stored from wreg
  1900  0370  00F4               	movwf	beep_long@count
  1901  0371                     l1929:
  1902                           
  1903                           ;main.c: 142:     start_tone();
  1904  0371  3183  23E9  3183   	fcall	_start_tone
  1905  0374                     l1931:
  1906                           
  1907                           ;main.c: 143:     FF.bits.BEEP_LONG_ON = 1;
  1908  0374  1678               	bsf	_FF+1,4
  1909  0375                     l1933:
  1910                           
  1911                           ;main.c: 144:     time_zummer_short = 130;
  1912  0375  3082               	movlw	130
  1913  0376  0020               	movlb	0	; select bank0
  1914  0377  00A5               	movwf	_time_zummer_short
  1915  0378  3000               	movlw	0
  1916  0379  00A6               	movwf	_time_zummer_short+1
  1917  037A                     l1935:
  1918                           
  1919                           ;main.c: 145:     beep_long_count = count;
  1920  037A  0874               	movf	beep_long@count,w
  1921  037B  00F3               	movwf	??_beep_long
  1922  037C  0873               	movf	??_beep_long,w
  1923  037D  00B9               	movwf	_beep_long_count
  1924  037E                     l294:
  1925  037E  0008               	return
  1926  037F                     __end_of_beep_long:
  1927                           
  1928                           	psect	text3
  1929  0174                     __ptext3:	
  1930 ;; *************** function _start_setup *****************
  1931 ;; Defined at:
  1932 ;;		line 589 in file "main.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;		None
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;		None
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      void 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0, pclath, cstack
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMMON   BANK0   BANK1
  1946 ;;      Params:         0       0       0
  1947 ;;      Locals:         0       0       0
  1948 ;;      Temps:          0       0       0
  1949 ;;      Totals:         0       0       0
  1950 ;;Total ram usage:        0 bytes
  1951 ;; Hardware stack levels used: 1
  1952 ;; Hardware stack levels required when called: 9
  1953 ;; This function calls:
  1954 ;;		_SYSTEM_Initialize
  1955 ;;		_TMR0_SetInterruptHandler
  1956 ;;		_TMR2_SetInterruptHandler
  1957 ;;		_TMR2_StartTimer
  1958 ;;		_eeprom_set
  1959 ;; This function is called by:
  1960 ;;		_main
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964  0174                     _start_setup:	
  1965                           ;psect for function _start_setup
  1966                           
  1967  0174                     l2425:	
  1968                           ;incstack = 0
  1969                           ; Regs used in _start_setup: [wreg+status,2+status,0+pclath+cstack]
  1970                           
  1971                           
  1972                           ;main.c: 591:     SYSTEM_Initialize();
  1973  0174  3183  2319  3181   	fcall	_SYSTEM_Initialize
  1974  0177                     l2427:
  1975                           
  1976                           ;main.c: 592:     (INTCONbits.GIE = 1);
  1977  0177  178B               	bsf	11,7	;volatile
  1978  0178                     l2429:
  1979                           
  1980                           ;main.c: 593:     (INTCONbits.PEIE = 1);
  1981  0178  170B               	bsf	11,6	;volatile
  1982                           
  1983                           ;main.c: 596:     eeprom_set();
  1984  0179  3182  22F1  3181   	fcall	_eeprom_set
  1985                           
  1986                           ;main.c: 598:     TMR0_SetInterruptHandler(timer0_switch);
  1987  017C  309C               	movlw	low _timer0_switch
  1988  017D  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1989  017E  3003               	movlw	high _timer0_switch
  1990  017F  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1991  0180  3183  23CE  3181   	fcall	_TMR0_SetInterruptHandler
  1992                           
  1993                           ;main.c: 599:     TMR2_SetInterruptHandler(ms_tick);
  1994  0183  308D               	movlw	low _ms_tick
  1995  0184  00F3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  1996  0185  3002               	movlw	high _ms_tick
  1997  0186  00F4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  1998  0187  3183  23C8  3181   	fcall	_TMR2_SetInterruptHandler
  1999  018A                     l2431:
  2000                           
  2001                           ;main.c: 600:     TMR2_StartTimer();
  2002  018A  3183  23E6  3181   	fcall	_TMR2_StartTimer
  2003  018D                     l2433:
  2004  018D  0023               	movlb	3	; select bank3
  2005  018E  118E               	bcf	14,3	;volatile
  2006  018F                     l2435:
  2007  018F  108C               	bcf	12,1	;volatile
  2008  0190                     l2437:
  2009  0190  110E               	bcf	14,2	;volatile
  2010  0191                     l2439:
  2011  0191  0024               	movlb	4	; select bank4
  2012  0192  108C               	bcf	12,1	;volatile
  2013  0193                     l2441:
  2014  0193  0021               	movlb	1	; select bank1
  2015  0194  148C               	bsf	12,1	;volatile
  2016  0195                     l2443:
  2017  0195  0024               	movlb	4	; select bank4
  2018  0196  110E               	bcf	14,2	;volatile
  2019  0197                     l2445:
  2020  0197  0021               	movlb	1	; select bank1
  2021  0198  150E               	bsf	14,2	;volatile
  2022  0199                     l2447:
  2023                           
  2024                           ;main.c: 612:     INTCONbits.TMR0IE = 0;
  2025  0199  128B               	bcf	11,5	;volatile
  2026  019A                     l2449:
  2027                           
  2028                           ;main.c: 613:     FF.value = 0;
  2029  019A  01F7               	clrf	_FF
  2030  019B  01F8               	clrf	_FF+1
  2031  019C                     l2451:
  2032                           
  2033                           ;main.c: 614:     FF.bits.ALARM = 0;
  2034  019C  1077               	bcf	_FF,0
  2035  019D                     l2453:
  2036  019D  0022               	movlb	2	; select bank2
  2037  019E  128E               	bcf	14,5	;volatile
  2038  019F                     l2455:
  2039  019F  120E               	bcf	14,4	;volatile
  2040  01A0                     l2457:
  2041  01A0  100E               	bcf	14,0	;volatile
  2042  01A1                     l2459:
  2043  01A1  0021               	movlb	1	; select bank1
  2044  01A2  100E               	bcf	14,0	;volatile
  2045  01A3                     l2461:
  2046                           
  2047                           ;main.c: 623:     time_rele_power = 0;
  2048  01A3  0020               	movlb	0	; select bank0
  2049  01A4  01AF               	clrf	_time_rele_power
  2050  01A5  01B0               	clrf	_time_rele_power+1
  2051  01A6                     l505:
  2052  01A6  0008               	return
  2053  01A7                     __end_of_start_setup:
  2054                           
  2055                           	psect	text4
  2056  02F1                     __ptext4:	
  2057 ;; *************** function _eeprom_set *****************
  2058 ;; Defined at:
  2059 ;;		line 582 in file "main.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;		None
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  adres           1    2[BANK0 ] unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0, pclath, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMMON   BANK0   BANK1
  2073 ;;      Params:         0       0       0
  2074 ;;      Locals:         0       1       0
  2075 ;;      Temps:          1       0       0
  2076 ;;      Totals:         1       1       0
  2077 ;;Total ram usage:        2 bytes
  2078 ;; Hardware stack levels used: 1
  2079 ;; Hardware stack levels required when called: 7
  2080 ;; This function calls:
  2081 ;;		_EEPROM_ReadByte
  2082 ;;		_EEPROM_WriteByte
  2083 ;; This function is called by:
  2084 ;;		_start_setup
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088  02F1                     _eeprom_set:	
  2089                           ;psect for function _eeprom_set
  2090                           
  2091  02F1                     l2367:	
  2092                           ;incstack = 0
  2093                           ; Regs used in _eeprom_set: [wreg+status,2+status,0+pclath+cstack]
  2094                           
  2095                           
  2096                           ;main.c: 583:     char adres = EEPROM_ReadByte(FRIMWARE_VERSION_EEPROM_ADR);
  2097  02F1  3000               	movlw	0
  2098  02F2  3183  2305  3182   	fcall	_EEPROM_ReadByte
  2099  02F5  00F6               	movwf	??_eeprom_set
  2100  02F6  0876               	movf	??_eeprom_set,w
  2101  02F7  0020               	movlb	0	; select bank0
  2102  02F8  00C3               	movwf	eeprom_set@adres
  2103  02F9                     l2369:
  2104                           
  2105                           ;main.c: 584:     if (adres == 0xFF) {
  2106  02F9  0A43               	incf	eeprom_set@adres,w
  2107  02FA  1D03               	btfss	3,2
  2108  02FB  2AFD               	goto	u1601
  2109  02FC  2AFE               	goto	u1600
  2110  02FD                     u1601:
  2111  02FD  2B04               	goto	l480
  2112  02FE                     u1600:
  2113  02FE                     l2371:
  2114                           
  2115                           ;main.c: 585:         EEPROM_WriteByte(FRIMWARE_VERSION_EEPROM_ADR, 1);
  2116  02FE  01F3               	clrf	EEPROM_WriteByte@dt
  2117  02FF  0AF3               	incf	EEPROM_WriteByte@dt,f
  2118  0300  3000               	movlw	0
  2119  0301  3182  2205  3182   	fcall	_EEPROM_WriteByte
  2120  0304                     l480:
  2121  0304  0008               	return
  2122  0305                     __end_of_eeprom_set:
  2123                           
  2124                           	psect	text5
  2125  0205                     __ptext5:	
  2126 ;; *************** function _EEPROM_WriteByte *****************
  2127 ;; Defined at:
  2128 ;;		line 6 in file "eeprom.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  addr            1    wreg     unsigned char 
  2131 ;;  dt              1    3[COMMON] unsigned char 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  addr            1    0[BANK0 ] unsigned char 
  2134 ;;  status          1    1[BANK0 ] unsigned char 
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		wreg, status,2
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1
  2144 ;;      Params:         1       0       0
  2145 ;;      Locals:         0       2       0
  2146 ;;      Temps:          2       0       0
  2147 ;;      Totals:         3       2       0
  2148 ;;Total ram usage:        5 bytes
  2149 ;; Hardware stack levels used: 1
  2150 ;; Hardware stack levels required when called: 6
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_eeprom_set
  2155 ;;		_EEPROM_WriteWord
  2156 ;;		_EEPROM_Writeint24
  2157 ;;		_EEPROM_WriteString
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161  0205                     _EEPROM_WriteByte:	
  2162                           ;psect for function _EEPROM_WriteByte
  2163                           
  2164                           
  2165                           ;incstack = 0
  2166                           ; Regs used in _EEPROM_WriteByte: [wreg+status,2]
  2167                           ;EEPROM_WriteByte@addr stored from wreg
  2168  0205  0020               	movlb	0	; select bank0
  2169  0206  00C1               	movwf	EEPROM_WriteByte@addr
  2170  0207                     l2327:
  2171  0207                     l532:	
  2172                           ;eeprom.c: 7:     unsigned char status;;eeprom.c: 8:     while (WR);
  2173                           
  2174  0207  0023               	movlb	3	; select bank3
  2175  0208  1895               	btfsc	21,1	;volsfr
  2176  0209  2A0B               	goto	u1551
  2177  020A  2A0C               	goto	u1550
  2178  020B                     u1551:
  2179  020B  2A07               	goto	l532
  2180  020C                     u1550:
  2181  020C                     l2329:
  2182                           
  2183                           ;eeprom.c: 9:     status = GIE;
  2184  020C  3000               	movlw	0
  2185  020D  1B8B               	btfsc	11,7	;volatile
  2186  020E  3001               	movlw	1
  2187  020F  0020               	movlb	0	; select bank0
  2188  0210  00C2               	movwf	EEPROM_WriteByte@status
  2189  0211                     l2331:
  2190                           
  2191                           ;eeprom.c: 10:     GIE = 0;
  2192  0211  138B               	bcf	11,7	;volatile
  2193  0212                     l2333:
  2194                           
  2195                           ;eeprom.c: 11:     EEADR = addr;
  2196  0212  0841               	movf	EEPROM_WriteByte@addr,w
  2197  0213  00F4               	movwf	??_EEPROM_WriteByte
  2198  0214  01F5               	clrf	??_EEPROM_WriteByte+1
  2199  0215  0874               	movf	??_EEPROM_WriteByte,w
  2200  0216  0023               	movlb	3	; select bank3
  2201  0217  0091               	movwf	17	;volatile
  2202  0218  0875               	movf	??_EEPROM_WriteByte+1,w
  2203  0219  0092               	movwf	18	;volatile
  2204  021A                     l2335:
  2205                           
  2206                           ;eeprom.c: 12:     EEDATA = dt;
  2207  021A  0873               	movf	EEPROM_WriteByte@dt,w
  2208  021B  0093               	movwf	19	;volatile
  2209  021C                     l2337:
  2210                           
  2211                           ;eeprom.c: 13:     WREN = 1;
  2212  021C  1515               	bsf	21,2	;volsfr
  2213  021D                     l2339:
  2214                           
  2215                           ;eeprom.c: 14:     EECON2 = 0x55;
  2216  021D  3055               	movlw	85
  2217  021E  0096               	movwf	22	;volsfr
  2218  021F                     l2341:
  2219                           
  2220                           ;eeprom.c: 15:     EECON2 = 0xAA;
  2221  021F  30AA               	movlw	170
  2222  0220  0096               	movwf	22	;volsfr
  2223  0221                     l2343:
  2224                           
  2225                           ;eeprom.c: 16:     WR = 1;
  2226  0221  1495               	bsf	21,1	;volsfr
  2227  0222                     l2345:
  2228                           
  2229                           ;eeprom.c: 17:     GIE = status;
  2230  0222  0020               	movlb	0	; select bank0
  2231  0223  1842               	btfsc	EEPROM_WriteByte@status,0
  2232  0224  2A26               	goto	u1561
  2233  0225  2A28               	goto	u1560
  2234  0226                     u1561:
  2235  0226  178B               	bsf	11,7	;volatile
  2236  0227  2A29               	goto	u1574
  2237  0228                     u1560:
  2238  0228  138B               	bcf	11,7	;volatile
  2239  0229                     u1574:
  2240  0229                     l2347:
  2241                           
  2242                           ;eeprom.c: 18:     WREN = 0;
  2243  0229  0023               	movlb	3	; select bank3
  2244  022A  1115               	bcf	21,2	;volsfr
  2245  022B                     l535:
  2246  022B  0008               	return
  2247  022C                     __end_of_EEPROM_WriteByte:
  2248                           
  2249                           	psect	text6
  2250  0305                     __ptext6:	
  2251 ;; *************** function _EEPROM_ReadByte *****************
  2252 ;; Defined at:
  2253 ;;		line 21 in file "eeprom.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  addr            1    wreg     unsigned char 
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;  addr            1    5[COMMON] unsigned char 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      unsigned char 
  2260 ;; Registers used:
  2261 ;;		wreg
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1
  2267 ;;      Params:         0       0       0
  2268 ;;      Locals:         1       0       0
  2269 ;;      Temps:          2       0       0
  2270 ;;      Totals:         3       0       0
  2271 ;;Total ram usage:        3 bytes
  2272 ;; Hardware stack levels used: 1
  2273 ;; Hardware stack levels required when called: 6
  2274 ;; This function calls:
  2275 ;;		Nothing
  2276 ;; This function is called by:
  2277 ;;		_eeprom_set
  2278 ;;		_EEPROM_ReadWord
  2279 ;;		_EEPROM_Readint24
  2280 ;;		_EEPROM_ReadString
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284  0305                     _EEPROM_ReadByte:	
  2285                           ;psect for function _EEPROM_ReadByte
  2286                           
  2287                           
  2288                           ;incstack = 0
  2289                           ; Regs used in _EEPROM_ReadByte: [wreg]
  2290                           ;EEPROM_ReadByte@addr stored from wreg
  2291  0305  00F5               	movwf	EEPROM_ReadByte@addr
  2292  0306                     l2317:
  2293  0306                     l538:	
  2294                           ;eeprom.c: 22:     while (RD || WR);
  2295                           
  2296  0306  0023               	movlb	3	; select bank3
  2297  0307  1815               	btfsc	21,0	;volsfr
  2298  0308  2B0A               	goto	u1531
  2299  0309  2B0B               	goto	u1530
  2300  030A                     u1531:
  2301  030A  2B06               	goto	l538
  2302  030B                     u1530:
  2303  030B                     l2319:
  2304  030B  1895               	btfsc	21,1	;volsfr
  2305  030C  2B0E               	goto	u1541
  2306  030D  2B0F               	goto	u1540
  2307  030E                     u1541:
  2308  030E  2B06               	goto	l538
  2309  030F                     u1540:
  2310  030F                     l2321:
  2311                           
  2312                           ;eeprom.c: 23:     EEADR = addr;
  2313  030F  0875               	movf	EEPROM_ReadByte@addr,w
  2314  0310  00F3               	movwf	??_EEPROM_ReadByte
  2315  0311  01F4               	clrf	??_EEPROM_ReadByte+1
  2316  0312  0873               	movf	??_EEPROM_ReadByte,w
  2317  0313  0091               	movwf	17	;volatile
  2318  0314  0874               	movf	??_EEPROM_ReadByte+1,w
  2319  0315  0092               	movwf	18	;volatile
  2320  0316                     l2323:
  2321                           
  2322                           ;eeprom.c: 24:     RD = 1;
  2323  0316  1415               	bsf	21,0	;volsfr
  2324                           
  2325                           ;eeprom.c: 25:     return EEDATA;
  2326  0317  0813               	movf	19,w	;volatile
  2327  0318                     l541:
  2328  0318  0008               	return
  2329  0319                     __end_of_EEPROM_ReadByte:
  2330                           
  2331                           	psect	text7
  2332  03E6                     __ptext7:	
  2333 ;; *************** function _TMR2_StartTimer *****************
  2334 ;; Defined at:
  2335 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;		None
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;		None
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		None
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMMON   BANK0   BANK1
  2349 ;;      Params:         0       0       0
  2350 ;;      Locals:         0       0       0
  2351 ;;      Temps:          0       0       0
  2352 ;;      Totals:         0       0       0
  2353 ;;Total ram usage:        0 bytes
  2354 ;; Hardware stack levels used: 1
  2355 ;; Hardware stack levels required when called: 6
  2356 ;; This function calls:
  2357 ;;		Nothing
  2358 ;; This function is called by:
  2359 ;;		_start_setup
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363  03E6                     _TMR2_StartTimer:	
  2364                           ;psect for function _TMR2_StartTimer
  2365                           
  2366  03E6                     l1917:	
  2367                           ;incstack = 0
  2368                           ; Regs used in _TMR2_StartTimer: []
  2369                           
  2370                           
  2371                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  2372  03E6  0020               	movlb	0	; select bank0
  2373  03E7  151C               	bsf	28,2	;volatile
  2374  03E8                     l138:
  2375  03E8  0008               	return
  2376  03E9                     __end_of_TMR2_StartTimer:
  2377                           
  2378                           	psect	text8
  2379  0319                     __ptext8:	
  2380 ;; *************** function _SYSTEM_Initialize *****************
  2381 ;; Defined at:
  2382 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;		None
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;		None
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		wreg, status,2, status,0, pclath, cstack
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMMON   BANK0   BANK1
  2396 ;;      Params:         0       0       0
  2397 ;;      Locals:         0       0       0
  2398 ;;      Temps:          0       0       0
  2399 ;;      Totals:         0       0       0
  2400 ;;Total ram usage:        0 bytes
  2401 ;; Hardware stack levels used: 1
  2402 ;; Hardware stack levels required when called: 8
  2403 ;; This function calls:
  2404 ;;		_ADC_Initialize
  2405 ;;		_OSCILLATOR_Initialize
  2406 ;;		_PIN_MANAGER_Initialize
  2407 ;;		_TMR0_Initialize
  2408 ;;		_TMR2_Initialize
  2409 ;;		_WDT_Initialize
  2410 ;; This function is called by:
  2411 ;;		_start_setup
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415  0319                     _SYSTEM_Initialize:	
  2416                           ;psect for function _SYSTEM_Initialize
  2417                           
  2418  0319                     l1903:	
  2419                           ;incstack = 0
  2420                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2421                           
  2422                           
  2423                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2424  0319  3182  22DC  3183   	fcall	_PIN_MANAGER_Initialize
  2425                           
  2426                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2427  031C  3183  23BB  3183   	fcall	_OSCILLATOR_Initialize
  2428                           
  2429                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2430  031F  3183  23DE  3183   	fcall	_WDT_Initialize
  2431                           
  2432                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  2433  0322  3183  232C  3183   	fcall	_TMR2_Initialize
  2434                           
  2435                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2436  0325  3183  23B3  3183   	fcall	_ADC_Initialize
  2437                           
  2438                           ;mcc_generated_files/mcc.c: 58:     TMR0_Initialize();
  2439  0328  3183  233E  3183   	fcall	_TMR0_Initialize
  2440  032B                     l23:
  2441  032B  0008               	return
  2442  032C                     __end_of_SYSTEM_Initialize:
  2443                           
  2444                           	psect	text9
  2445  03DE                     __ptext9:	
  2446 ;; *************** function _WDT_Initialize *****************
  2447 ;; Defined at:
  2448 ;;		line 71 in file "mcc_generated_files/mcc.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;		None
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMMON   BANK0   BANK1
  2462 ;;      Params:         0       0       0
  2463 ;;      Locals:         0       0       0
  2464 ;;      Temps:          0       0       0
  2465 ;;      Totals:         0       0       0
  2466 ;;Total ram usage:        0 bytes
  2467 ;; Hardware stack levels used: 1
  2468 ;; Hardware stack levels required when called: 6
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		_SYSTEM_Initialize
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476  03DE                     _WDT_Initialize:	
  2477                           ;psect for function _WDT_Initialize
  2478                           
  2479  03DE                     l1801:	
  2480                           ;incstack = 0
  2481                           ; Regs used in _WDT_Initialize: [wreg]
  2482                           
  2483                           
  2484                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x0A;
  2485  03DE  300A               	movlw	10
  2486  03DF  0021               	movlb	1	; select bank1
  2487  03E0  0097               	movwf	23	;volatile
  2488  03E1                     l29:
  2489  03E1  0008               	return
  2490  03E2                     __end_of_WDT_Initialize:
  2491                           
  2492                           	psect	text10
  2493  032C                     __ptext10:	
  2494 ;; *************** function _TMR2_Initialize *****************
  2495 ;; Defined at:
  2496 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;		None
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;		None
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0, pclath, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMMON   BANK0   BANK1
  2510 ;;      Params:         0       0       0
  2511 ;;      Locals:         0       0       0
  2512 ;;      Temps:          0       0       0
  2513 ;;      Totals:         0       0       0
  2514 ;;Total ram usage:        0 bytes
  2515 ;; Hardware stack levels used: 1
  2516 ;; Hardware stack levels required when called: 7
  2517 ;; This function calls:
  2518 ;;		_TMR2_SetInterruptHandler
  2519 ;; This function is called by:
  2520 ;;		_SYSTEM_Initialize
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524  032C                     _TMR2_Initialize:	
  2525                           ;psect for function _TMR2_Initialize
  2526                           
  2527  032C                     l1803:	
  2528                           ;incstack = 0
  2529                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2530                           
  2531                           
  2532                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x63;
  2533  032C  3063               	movlw	99
  2534  032D  0020               	movlb	0	; select bank0
  2535  032E  009B               	movwf	27	;volatile
  2536  032F                     l1805:
  2537                           
  2538                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  2539  032F  019A               	clrf	26	;volatile
  2540  0330                     l1807:
  2541                           
  2542                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  2543  0330  1091               	bcf	17,1	;volatile
  2544  0331                     l1809:
  2545                           
  2546                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  2547  0331  0021               	movlb	1	; select bank1
  2548  0332  1491               	bsf	17,1	;volatile
  2549  0333                     l1811:
  2550                           
  2551                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  2552  0333  30F6               	movlw	low _TMR2_DefaultInterruptHandler
  2553  0334  00F3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2554  0335  3003               	movlw	high _TMR2_DefaultInterruptHandler
  2555  0336  00F4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2556  0337  3183  23C8  3183   	fcall	_TMR2_SetInterruptHandler
  2557  033A                     l1813:
  2558                           
  2559                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x4D;
  2560  033A  304D               	movlw	77
  2561  033B  0020               	movlb	0	; select bank0
  2562  033C  009C               	movwf	28	;volatile
  2563  033D                     l135:
  2564  033D  0008               	return
  2565  033E                     __end_of_TMR2_Initialize:
  2566                           
  2567                           	psect	text11
  2568  03C8                     __ptext11:	
  2569 ;; *************** function _TMR2_SetInterruptHandler *****************
  2570 ;; Defined at:
  2571 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  2574 ;;		 -> ms_tick(1), TMR2_DefaultInterruptHandler(1), 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;		None
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      void 
  2579 ;; Registers used:
  2580 ;;		wreg
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMMON   BANK0   BANK1
  2586 ;;      Params:         2       0       0
  2587 ;;      Locals:         0       0       0
  2588 ;;      Temps:          0       0       0
  2589 ;;      Totals:         2       0       0
  2590 ;;Total ram usage:        2 bytes
  2591 ;; Hardware stack levels used: 1
  2592 ;; Hardware stack levels required when called: 6
  2593 ;; This function calls:
  2594 ;;		Nothing
  2595 ;; This function is called by:
  2596 ;;		_TMR2_Initialize
  2597 ;;		_start_setup
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601  03C8                     _TMR2_SetInterruptHandler:	
  2602                           ;psect for function _TMR2_SetInterruptHandler
  2603                           
  2604  03C8                     l1759:	
  2605                           ;incstack = 0
  2606                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2607                           
  2608                           
  2609                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
  2610  03C8  0874               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2611  03C9  0020               	movlb	0	; select bank0
  2612  03CA  00C0               	movwf	_TMR2_InterruptHandler+1
  2613  03CB  0873               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2614  03CC  00BF               	movwf	_TMR2_InterruptHandler
  2615  03CD                     l157:
  2616  03CD  0008               	return
  2617  03CE                     __end_of_TMR2_SetInterruptHandler:
  2618                           
  2619                           	psect	text12
  2620  033E                     __ptext12:	
  2621 ;; *************** function _TMR0_Initialize *****************
  2622 ;; Defined at:
  2623 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;		None
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;		None
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  1    wreg      void 
  2630 ;; Registers used:
  2631 ;;		wreg, status,2, status,0, pclath, cstack
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMMON   BANK0   BANK1
  2637 ;;      Params:         0       0       0
  2638 ;;      Locals:         0       0       0
  2639 ;;      Temps:          0       0       0
  2640 ;;      Totals:         0       0       0
  2641 ;;Total ram usage:        0 bytes
  2642 ;; Hardware stack levels used: 1
  2643 ;; Hardware stack levels required when called: 7
  2644 ;; This function calls:
  2645 ;;		_TMR0_SetInterruptHandler
  2646 ;; This function is called by:
  2647 ;;		_SYSTEM_Initialize
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651  033E                     _TMR0_Initialize:	
  2652                           ;psect for function _TMR0_Initialize
  2653                           
  2654  033E                     l1821:	
  2655                           ;incstack = 0
  2656                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2657                           
  2658                           
  2659                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD1 
      +                          & 0x3F));
  2660  033E  0021               	movlb	1	; select bank1
  2661  033F  0815               	movf	21,w	;volatile
  2662  0340  39C0               	andlw	192
  2663  0341  3811               	iorlw	17
  2664  0342  0095               	movwf	21	;volatile
  2665  0343                     l1823:
  2666                           
  2667                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x00;
  2668  0343  0020               	movlb	0	; select bank0
  2669  0344  0195               	clrf	21	;volatile
  2670  0345                     l1825:
  2671                           
  2672                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 0;
  2673  0345  01FA               	clrf	_timer0ReloadVal	;volatile
  2674  0346                     l1827:
  2675                           
  2676                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  2677  0346  110B               	bcf	11,2	;volatile
  2678  0347                     l1829:
  2679                           
  2680                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  2681  0347  168B               	bsf	11,5	;volatile
  2682  0348                     l1831:
  2683                           
  2684                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2685  0348  30F7               	movlw	low _TMR0_DefaultInterruptHandler
  2686  0349  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2687  034A  3003               	movlw	high _TMR0_DefaultInterruptHandler
  2688  034B  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2689  034C  3183  23CE  3183   	fcall	_TMR0_SetInterruptHandler
  2690  034F                     l177:
  2691  034F  0008               	return
  2692  0350                     __end_of_TMR0_Initialize:
  2693                           
  2694                           	psect	text13
  2695  03CE                     __ptext13:	
  2696 ;; *************** function _TMR0_SetInterruptHandler *****************
  2697 ;; Defined at:
  2698 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  2701 ;;		 -> timer0_switch(1), TMR0_DefaultInterruptHandler(1), 
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;		None
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  1    wreg      void 
  2706 ;; Registers used:
  2707 ;;		wreg
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMMON   BANK0   BANK1
  2713 ;;      Params:         2       0       0
  2714 ;;      Locals:         0       0       0
  2715 ;;      Temps:          0       0       0
  2716 ;;      Totals:         2       0       0
  2717 ;;Total ram usage:        2 bytes
  2718 ;; Hardware stack levels used: 1
  2719 ;; Hardware stack levels required when called: 6
  2720 ;; This function calls:
  2721 ;;		Nothing
  2722 ;; This function is called by:
  2723 ;;		_TMR0_Initialize
  2724 ;;		_start_setup
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728  03CE                     _TMR0_SetInterruptHandler:	
  2729                           ;psect for function _TMR0_SetInterruptHandler
  2730                           
  2731  03CE                     l1761:	
  2732                           ;incstack = 0
  2733                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2734                           
  2735                           
  2736                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  2737  03CE  0874               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2738  03CF  0020               	movlb	0	; select bank0
  2739  03D0  00BE               	movwf	_TMR0_InterruptHandler+1
  2740  03D1  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2741  03D2  00BD               	movwf	_TMR0_InterruptHandler
  2742  03D3                     l193:
  2743  03D3  0008               	return
  2744  03D4                     __end_of_TMR0_SetInterruptHandler:
  2745                           
  2746                           	psect	text14
  2747  02DC                     __ptext14:	
  2748 ;; *************** function _PIN_MANAGER_Initialize *****************
  2749 ;; Defined at:
  2750 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;		None
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;		None
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg, status,2
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMMON   BANK0   BANK1
  2764 ;;      Params:         0       0       0
  2765 ;;      Locals:         0       0       0
  2766 ;;      Temps:          0       0       0
  2767 ;;      Totals:         0       0       0
  2768 ;;Total ram usage:        0 bytes
  2769 ;; Hardware stack levels used: 1
  2770 ;; Hardware stack levels required when called: 6
  2771 ;; This function calls:
  2772 ;;		Nothing
  2773 ;; This function is called by:
  2774 ;;		_SYSTEM_Initialize
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778  02DC                     _PIN_MANAGER_Initialize:	
  2779                           ;psect for function _PIN_MANAGER_Initialize
  2780                           
  2781  02DC                     l1783:	
  2782                           ;incstack = 0
  2783                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2784                           
  2785                           
  2786                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2787  02DC  0022               	movlb	2	; select bank2
  2788  02DD  018C               	clrf	12	;volatile
  2789                           
  2790                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  2791  02DE  018E               	clrf	14	;volatile
  2792  02DF                     l1785:
  2793                           
  2794                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x0F;
  2795  02DF  300F               	movlw	15
  2796  02E0  0021               	movlb	1	; select bank1
  2797  02E1  008C               	movwf	12	;volatile
  2798  02E2                     l1787:
  2799                           
  2800                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x0C;
  2801  02E2  300C               	movlw	12
  2802  02E3  008E               	movwf	14	;volatile
  2803  02E4                     l1789:
  2804                           
  2805                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x08;
  2806  02E4  3008               	movlw	8
  2807  02E5  0023               	movlb	3	; select bank3
  2808  02E6  008E               	movwf	14	;volatile
  2809  02E7                     l1791:
  2810                           
  2811                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x05;
  2812  02E7  3005               	movlw	5
  2813  02E8  008C               	movwf	12	;volatile
  2814                           
  2815                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  2816  02E9  0024               	movlb	4	; select bank4
  2817  02EA  018C               	clrf	12	;volatile
  2818                           
  2819                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  2820  02EB  018E               	clrf	14	;volatile
  2821  02EC                     l1793:
  2822                           
  2823                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2824  02EC  0021               	movlb	1	; select bank1
  2825  02ED  1795               	bsf	21,7	;volatile
  2826                           
  2827                           ;mcc_generated_files/pin_manager.c: 86:     APFCON = 0x00;
  2828  02EE  0022               	movlb	2	; select bank2
  2829  02EF  019D               	clrf	29	;volatile
  2830  02F0                     l90:
  2831  02F0  0008               	return
  2832  02F1                     __end_of_PIN_MANAGER_Initialize:
  2833                           
  2834                           	psect	text15
  2835  03BB                     __ptext15:	
  2836 ;; *************** function _OSCILLATOR_Initialize *****************
  2837 ;; Defined at:
  2838 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;		None
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;		None
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  1    wreg      void 
  2845 ;; Registers used:
  2846 ;;		wreg, status,2
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMMON   BANK0   BANK1
  2852 ;;      Params:         0       0       0
  2853 ;;      Locals:         0       0       0
  2854 ;;      Temps:          0       0       0
  2855 ;;      Totals:         0       0       0
  2856 ;;Total ram usage:        0 bytes
  2857 ;; Hardware stack levels used: 1
  2858 ;; Hardware stack levels required when called: 6
  2859 ;; This function calls:
  2860 ;;		Nothing
  2861 ;; This function is called by:
  2862 ;;		_SYSTEM_Initialize
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866  03BB                     _OSCILLATOR_Initialize:	
  2867                           ;psect for function _OSCILLATOR_Initialize
  2868                           
  2869  03BB                     l1795:	
  2870                           ;incstack = 0
  2871                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2872                           
  2873                           
  2874                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x78;
  2875  03BB  3078               	movlw	120
  2876  03BC  0021               	movlb	1	; select bank1
  2877  03BD  0099               	movwf	25	;volatile
  2878  03BE                     l1797:
  2879                           
  2880                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  2881  03BE  0198               	clrf	24	;volatile
  2882  03BF                     l1799:
  2883                           
  2884                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  2885  03BF  0022               	movlb	2	; select bank2
  2886  03C0  0196               	clrf	22	;volatile
  2887  03C1                     l26:
  2888  03C1  0008               	return
  2889  03C2                     __end_of_OSCILLATOR_Initialize:
  2890                           
  2891                           	psect	text16
  2892  03B3                     __ptext16:	
  2893 ;; *************** function _ADC_Initialize *****************
  2894 ;; Defined at:
  2895 ;;		line 67 in file "mcc_generated_files/adc.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;		None
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;		None
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      void 
  2902 ;; Registers used:
  2903 ;;		wreg, status,2
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMMON   BANK0   BANK1
  2909 ;;      Params:         0       0       0
  2910 ;;      Locals:         0       0       0
  2911 ;;      Temps:          0       0       0
  2912 ;;      Totals:         0       0       0
  2913 ;;Total ram usage:        0 bytes
  2914 ;; Hardware stack levels used: 1
  2915 ;; Hardware stack levels required when called: 6
  2916 ;; This function calls:
  2917 ;;		Nothing
  2918 ;; This function is called by:
  2919 ;;		_SYSTEM_Initialize
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923  03B3                     _ADC_Initialize:	
  2924                           ;psect for function _ADC_Initialize
  2925                           
  2926  03B3                     l1815:	
  2927                           ;incstack = 0
  2928                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  2929                           
  2930                           
  2931                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x50;
  2932  03B3  3050               	movlw	80
  2933  03B4  0021               	movlb	1	; select bank1
  2934  03B5  009E               	movwf	30	;volatile
  2935  03B6                     l1817:
  2936                           
  2937                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  2938  03B6  019B               	clrf	27	;volatile
  2939  03B7                     l1819:
  2940                           
  2941                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  2942  03B7  019C               	clrf	28	;volatile
  2943                           
  2944                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x1D;
  2945  03B8  301D               	movlw	29
  2946  03B9  009D               	movwf	29	;volatile
  2947  03BA                     l46:
  2948  03BA  0008               	return
  2949  03BB                     __end_of_ADC_Initialize:
  2950                           
  2951                           	psect	text17
  2952  0036                     __ptext17:	
  2953 ;; *************** function _povorot *****************
  2954 ;; Defined at:
  2955 ;;		line 414 in file "main.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0, pclath, cstack
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMMON   BANK0   BANK1
  2969 ;;      Params:         0       0       0
  2970 ;;      Locals:         0       0       0
  2971 ;;      Temps:          0       0       0
  2972 ;;      Totals:         0       0       0
  2973 ;;Total ram usage:        0 bytes
  2974 ;; Hardware stack levels used: 1
  2975 ;; Hardware stack levels required when called: 7
  2976 ;; This function calls:
  2977 ;;		_go_close_short
  2978 ;;		_go_open
  2979 ;; This function is called by:
  2980 ;;		_main
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984  0036                     _povorot:	
  2985                           ;psect for function _povorot
  2986                           
  2987  0036                     l2065:	
  2988                           ;incstack = 0
  2989                           ; Regs used in _povorot: [wreg+status,2+status,0+pclath+cstack]
  2990                           
  2991                           
  2992                           ;main.c: 415:     if ((time_rotation > 120) &&
  2993  0036  3000               	movlw	0
  2994  0037  0020               	movlb	0	; select bank0
  2995  0038  0222               	subwf	_time_rotation+2,w
  2996  0039  1D03               	skipz
  2997  003A  2841               	goto	u1105
  2998  003B  3000               	movlw	0
  2999  003C  0221               	subwf	_time_rotation+1,w
  3000  003D  1D03               	skipz
  3001  003E  2841               	goto	u1105
  3002  003F  3079               	movlw	121
  3003  0040  0220               	subwf	_time_rotation,w
  3004  0041                     u1105:
  3005  0041  1C03               	skipc
  3006  0042  2844               	goto	u1101
  3007  0043  2845               	goto	u1100
  3008  0044                     u1101:
  3009  0044  2858               	goto	l2077
  3010  0045                     u1100:
  3011  0045                     l2067:
  3012  0045  1978               	btfsc	_FF+1,2
  3013  0046  2848               	goto	u1111
  3014  0047  2849               	goto	u1110
  3015  0048                     u1111:
  3016  0048  2858               	goto	l2077
  3017  0049                     u1110:
  3018  0049                     l2069:
  3019  0049  18F8               	btfsc	_FF+1,1
  3020  004A  284C               	goto	u1121
  3021  004B  284D               	goto	u1120
  3022  004C                     u1121:
  3023  004C  2858               	goto	l2077
  3024  004D                     u1120:
  3025  004D                     l2071:
  3026  004D  1877               	btfsc	_FF,0
  3027  004E  2850               	goto	u1131
  3028  004F  2851               	goto	u1130
  3029  0050                     u1131:
  3030  0050  2858               	goto	l2077
  3031  0051                     u1130:
  3032  0051                     l2073:
  3033  0051  1CF7               	btfss	_FF,1
  3034  0052  2854               	goto	u1141
  3035  0053  2855               	goto	u1140
  3036  0054                     u1141:
  3037  0054  2858               	goto	l2077
  3038  0055                     u1140:
  3039  0055                     l2075:
  3040                           
  3041                           ;main.c: 420:             ) {;main.c: 421:         go_close_short();
  3042  0055  3182  224D  3180   	fcall	_go_close_short
  3043  0058                     l2077:
  3044                           
  3045                           ;main.c: 423:     if ((time_rotation > (120 + 10 + 2 * 2)) &&
  3046  0058  3000               	movlw	0
  3047  0059  0020               	movlb	0	; select bank0
  3048  005A  0222               	subwf	_time_rotation+2,w
  3049  005B  1D03               	skipz
  3050  005C  2863               	goto	u1155
  3051  005D  3000               	movlw	0
  3052  005E  0221               	subwf	_time_rotation+1,w
  3053  005F  1D03               	skipz
  3054  0060  2863               	goto	u1155
  3055  0061  3087               	movlw	135
  3056  0062  0220               	subwf	_time_rotation,w
  3057  0063                     u1155:
  3058  0063  1C03               	skipc
  3059  0064  2866               	goto	u1151
  3060  0065  2867               	goto	u1150
  3061  0066                     u1151:
  3062  0066  2881               	goto	l453
  3063  0067                     u1150:
  3064  0067                     l2079:
  3065  0067  1D78               	btfss	_FF+1,2
  3066  0068  286A               	goto	u1161
  3067  0069  286B               	goto	u1160
  3068  006A                     u1161:
  3069  006A  2881               	goto	l453
  3070  006B                     u1160:
  3071  006B                     l2081:
  3072  006B  1CF8               	btfss	_FF+1,1
  3073  006C  286E               	goto	u1171
  3074  006D  286F               	goto	u1170
  3075  006E                     u1171:
  3076  006E  2881               	goto	l453
  3077  006F                     u1170:
  3078  006F                     l2083:
  3079  006F  1877               	btfsc	_FF,0
  3080  0070  2872               	goto	u1181
  3081  0071  2873               	goto	u1180
  3082  0072                     u1181:
  3083  0072  2881               	goto	l453
  3084  0073                     u1180:
  3085  0073                     l2085:
  3086  0073  1CF7               	btfss	_FF,1
  3087  0074  2876               	goto	u1191
  3088  0075  2877               	goto	u1190
  3089  0076                     u1191:
  3090  0076  2881               	goto	l453
  3091  0077                     u1190:
  3092  0077                     l2087:
  3093                           
  3094                           ;main.c: 428:             ) {;main.c: 429:         go_open();
  3095  0077  3183  23A9  3180   	fcall	_go_open
  3096  007A                     l2089:
  3097                           
  3098                           ;main.c: 430:         time_rotation = 0;
  3099  007A  3000               	movlw	0
  3100  007B  0020               	movlb	0	; select bank0
  3101  007C  00A0               	movwf	_time_rotation
  3102  007D  3000               	movlw	0
  3103  007E  00A1               	movwf	_time_rotation+1
  3104  007F  3000               	movlw	0
  3105  0080  00A2               	movwf	_time_rotation+2
  3106  0081                     l453:
  3107  0081  0008               	return
  3108  0082                     __end_of_povorot:
  3109                           
  3110                           	psect	text18
  3111  024D                     __ptext18:	
  3112 ;; *************** function _go_close_short *****************
  3113 ;; Defined at:
  3114 ;;		line 160 in file "main.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;		None
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;		None
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  1    wreg      void 
  3121 ;; Registers used:
  3122 ;;		wreg
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMMON   BANK0   BANK1
  3128 ;;      Params:         0       0       0
  3129 ;;      Locals:         0       0       0
  3130 ;;      Temps:          2       0       0
  3131 ;;      Totals:         2       0       0
  3132 ;;Total ram usage:        2 bytes
  3133 ;; Hardware stack levels used: 1
  3134 ;; Hardware stack levels required when called: 6
  3135 ;; This function calls:
  3136 ;;		Nothing
  3137 ;; This function is called by:
  3138 ;;		_povorot
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142  024D                     _go_close_short:	
  3143                           ;psect for function _go_close_short
  3144                           
  3145  024D                     l1937:	
  3146                           ;incstack = 0
  3147                           ; Regs used in _go_close_short: [wreg]
  3148                           
  3149                           
  3150                           ;main.c: 161:     time_rotation = 0;
  3151  024D  3000               	movlw	0
  3152  024E  0020               	movlb	0	; select bank0
  3153  024F  00A0               	movwf	_time_rotation
  3154  0250  3000               	movlw	0
  3155  0251  00A1               	movwf	_time_rotation+1
  3156  0252  3000               	movlw	0
  3157  0253  00A2               	movwf	_time_rotation+2
  3158  0254                     l1939:
  3159  0254  0022               	movlb	2	; select bank2
  3160  0255  160E               	bsf	14,4	;volatile
  3161  0256                     l1941:
  3162                           
  3163                           ;main.c: 163:     FF.bits.CLOSING = 1;
  3164  0256  14F8               	bsf	_FF+1,1
  3165                           
  3166                           ;main.c: 164:     _delay((unsigned long)((2 * 1000)*(16000000/4000.0)));
  3167  0257  3029               	movlw	41
  3168  0258  00F4               	movwf	??_go_close_short+1
  3169  0259  3096               	movlw	150
  3170  025A  00F3               	movwf	??_go_close_short
  3171  025B  307F               	movlw	127
  3172  025C                     u1817:
  3173  025C  0B89               	decfsz	9,f
  3174  025D  2A5C               	goto	u1817
  3175  025E  0BF3               	decfsz	??_go_close_short,f
  3176  025F  2A5C               	goto	u1817
  3177  0260  0BF4               	decfsz	??_go_close_short+1,f
  3178  0261  2A5C               	goto	u1817
  3179  0262  0000               	nop
  3180  0263                     l1943:
  3181  0263  0022               	movlb	2	; select bank2
  3182  0264  168E               	bsf	14,5	;volatile
  3183  0265                     l307:
  3184                           
  3185                           ;main.c: 166:     time_rele_power = 2;
  3186  0265  3002               	movlw	2
  3187  0266  0020               	movlb	0	; select bank0
  3188  0267  00AF               	movwf	_time_rele_power
  3189  0268  3000               	movlw	0
  3190  0269  00B0               	movwf	_time_rele_power+1
  3191  026A                     l1945:
  3192                           
  3193                           ;main.c: 167:     FF.bits.RELE_POWER_WAIT = 1;
  3194  026A  16F7               	bsf	_FF,5
  3195  026B                     l1947:
  3196                           
  3197                           ;main.c: 168:     FF.bits.RELE_CONTROL_WAIT = 1;
  3198  026B  1777               	bsf	_FF,6
  3199  026C                     l308:
  3200  026C  0008               	return
  3201  026D                     __end_of_go_close_short:
  3202                           
  3203                           	psect	text19
  3204  00C2                     __ptext19:	
  3205 ;; *************** function _get_measure *****************
  3206 ;; Defined at:
  3207 ;;		line 204 in file "main.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;		None
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  res             2    0[BANK0 ] unsigned int 
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  1    wreg      void 
  3214 ;; Registers used:
  3215 ;;		wreg, status,2, status,0, pclath, cstack
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMMON   BANK0   BANK1
  3221 ;;      Params:         0       0       0
  3222 ;;      Locals:         0       2       0
  3223 ;;      Temps:          2       0       0
  3224 ;;      Totals:         2       2       0
  3225 ;;Total ram usage:        4 bytes
  3226 ;; Hardware stack levels used: 1
  3227 ;; Hardware stack levels required when called: 8
  3228 ;; This function calls:
  3229 ;;		_ADC_GetConversion
  3230 ;;		_start_alarm
  3231 ;; This function is called by:
  3232 ;;		_main
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236  00C2                     _get_measure:	
  3237                           ;psect for function _get_measure
  3238                           
  3239  00C2                     l341:	
  3240                           ;incstack = 0
  3241                           ; Regs used in _get_measure: [wreg+status,2+status,0+pclath+cstack]
  3242                           ;main.c: 205:     static unsigned char measures;;main.c: 206:     do { LATCbits.LATC1 = 
      +                          1; } while(0);
  3243                           
  3244  00C2  0022               	movlb	2	; select bank2
  3245  00C3  148E               	bsf	14,1	;volatile
  3246  00C4                     l343:	
  3247                           ;main.c: 207:     do { ANSELCbits.ANSC3 = 1; } while(0);
  3248                           
  3249  00C4  0023               	movlb	3	; select bank3
  3250  00C5  158E               	bsf	14,3	;volatile
  3251  00C6                     l2373:
  3252                           
  3253                           ;main.c: 208:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3254  00C6  3006               	movlw	6
  3255  00C7  00F5               	movwf	??_get_measure
  3256  00C8  3030               	movlw	48
  3257  00C9                     u1827:
  3258  00C9  0B89               	decfsz	9,f
  3259  00CA  28C9               	goto	u1827
  3260  00CB  0BF5               	decfsz	??_get_measure,f
  3261  00CC  28C9               	goto	u1827
  3262  00CD  3200               	nop2
  3263  00CE                     l2375:
  3264                           
  3265                           ;main.c: 209:     unsigned res = ADC_GetConversion(PIN_WSP_STATE);
  3266  00CE  3007               	movlw	7
  3267  00CF  3182  22C4  3180   	fcall	_ADC_GetConversion
  3268  00D2  00F5               	movwf	??_get_measure
  3269  00D3  01F6               	clrf	??_get_measure+1
  3270  00D4  0875               	movf	??_get_measure,w
  3271  00D5  0020               	movlb	0	; select bank0
  3272  00D6  00C1               	movwf	get_measure@res
  3273  00D7  0876               	movf	??_get_measure+1,w
  3274  00D8  00C2               	movwf	get_measure@res+1
  3275  00D9                     l2377:
  3276  00D9  0023               	movlb	3	; select bank3
  3277  00DA  118E               	bcf	14,3	;volatile
  3278  00DB                     l2379:
  3279  00DB  0022               	movlb	2	; select bank2
  3280  00DC  108E               	bcf	14,1	;volatile
  3281  00DD                     l2381:
  3282                           
  3283                           ;main.c: 212:     if (res < BAD_WSP_VOLTAGE) measures++;
  3284  00DD  3000               	movlw	0
  3285  00DE  0020               	movlb	0	; select bank0
  3286  00DF  0242               	subwf	get_measure@res+1,w
  3287  00E0  3080               	movlw	128
  3288  00E1  1903               	skipnz
  3289  00E2  0241               	subwf	get_measure@res,w
  3290  00E3  1803               	skipnc
  3291  00E4  28E6               	goto	u1611
  3292  00E5  28E7               	goto	u1610
  3293  00E6                     u1611:
  3294  00E6  28EC               	goto	l2385
  3295  00E7                     u1610:
  3296  00E7                     l2383:
  3297  00E7  3001               	movlw	1
  3298  00E8  00F5               	movwf	??_get_measure
  3299  00E9  0875               	movf	??_get_measure,w
  3300  00EA  07B8               	addwf	get_measure@measures,f
  3301  00EB  28F6               	goto	l2389
  3302  00EC                     l2385:
  3303  00EC  3000               	movlw	0
  3304  00ED  0242               	subwf	get_measure@res+1,w
  3305  00EE  308F               	movlw	143
  3306  00EF  1903               	skipnz
  3307  00F0  0241               	subwf	get_measure@res,w
  3308  00F1  1C03               	skipc
  3309  00F2  28F4               	goto	u1621
  3310  00F3  28F5               	goto	u1620
  3311  00F4                     u1621:
  3312  00F4  28F6               	goto	l2389
  3313  00F5                     u1620:
  3314  00F5                     l2387:
  3315  00F5  01B8               	clrf	get_measure@measures
  3316  00F6                     l2389:
  3317                           
  3318                           ;main.c: 214:     if (measures > 8) start_alarm();
  3319  00F6  3009               	movlw	9
  3320  00F7  0238               	subwf	get_measure@measures,w
  3321  00F8  1C03               	skipc
  3322  00F9  28FB               	goto	u1631
  3323  00FA  28FC               	goto	u1630
  3324  00FB                     u1631:
  3325  00FB  28FF               	goto	l353
  3326  00FC                     u1630:
  3327  00FC                     l2391:
  3328  00FC  3183  2350  3180   	fcall	_start_alarm
  3329  00FF                     l353:
  3330  00FF  0008               	return
  3331  0100                     __end_of_get_measure:
  3332                           
  3333                           	psect	text20
  3334  0350                     __ptext20:	
  3335 ;; *************** function _start_alarm *****************
  3336 ;; Defined at:
  3337 ;;		line 193 in file "main.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;		None
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;		None
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1    wreg      void 
  3344 ;; Registers used:
  3345 ;;		wreg, status,2, status,0, pclath, cstack
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMMON   BANK0   BANK1
  3351 ;;      Params:         0       0       0
  3352 ;;      Locals:         0       0       0
  3353 ;;      Temps:          0       0       0
  3354 ;;      Totals:         0       0       0
  3355 ;;Total ram usage:        0 bytes
  3356 ;; Hardware stack levels used: 1
  3357 ;; Hardware stack levels required when called: 7
  3358 ;; This function calls:
  3359 ;;		_go_close
  3360 ;;		_go_close_alt
  3361 ;; This function is called by:
  3362 ;;		_get_measure
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366  0350                     _start_alarm:	
  3367                           ;psect for function _start_alarm
  3368                           
  3369  0350                     l2361:	
  3370                           ;incstack = 0
  3371                           ; Regs used in _start_alarm: [wreg+status,2+status,0+pclath+cstack]
  3372                           
  3373                           
  3374                           ;main.c: 194:     FF.bits.ALARM = 1;
  3375  0350  1477               	bsf	_FF,0
  3376  0351                     l332:	
  3377                           ;main.c: 195:     do { LATCbits.LATC0 = 1; } while(0);
  3378                           
  3379  0351  0022               	movlb	2	; select bank2
  3380  0352  140E               	bsf	14,0	;volatile
  3381  0353                     l333:
  3382                           
  3383                           ;main.c: 196:     INTCONbits.TMR0IE = 1;
  3384  0353  168B               	bsf	11,5	;volatile
  3385                           
  3386                           ;main.c: 197:     if (FF.bits.NORMAL_WORK_MODE) {
  3387  0354  1CF7               	btfss	_FF,1
  3388  0355  2B57               	goto	u1591
  3389  0356  2B58               	goto	u1590
  3390  0357                     u1591:
  3391  0357  2B5C               	goto	l2365
  3392  0358                     u1590:
  3393  0358                     l2363:
  3394                           
  3395                           ;main.c: 198:         go_close();
  3396  0358  3182  226D  3183   	fcall	_go_close
  3397                           
  3398                           ;main.c: 199:     } else {
  3399  035B  2B5F               	goto	l336
  3400  035C                     l2365:
  3401                           
  3402                           ;main.c: 200:         go_close_alt();
  3403  035C  3183  23D9  3183   	fcall	_go_close_alt
  3404  035F                     l336:
  3405  035F  0008               	return
  3406  0360                     __end_of_start_alarm:
  3407                           
  3408                           	psect	text21
  3409  02C4                     __ptext21:	
  3410 ;; *************** function _ADC_GetConversion *****************
  3411 ;; Defined at:
  3412 ;;		line 112 in file "mcc_generated_files/adc.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;  channel         1    wreg     enum E2178
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;  channel         1    4[COMMON] enum E2178
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      unsigned char 
  3419 ;; Registers used:
  3420 ;;		wreg, status,2, status,0
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1
  3426 ;;      Params:         0       0       0
  3427 ;;      Locals:         1       0       0
  3428 ;;      Temps:          1       0       0
  3429 ;;      Totals:         2       0       0
  3430 ;;Total ram usage:        2 bytes
  3431 ;; Hardware stack levels used: 1
  3432 ;; Hardware stack levels required when called: 6
  3433 ;; This function calls:
  3434 ;;		Nothing
  3435 ;; This function is called by:
  3436 ;;		_get_measure
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440  02C4                     _ADC_GetConversion:	
  3441                           ;psect for function _ADC_GetConversion
  3442                           
  3443                           
  3444                           ;incstack = 0
  3445                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3446                           ;ADC_GetConversion@channel stored from wreg
  3447  02C4  00F4               	movwf	ADC_GetConversion@channel
  3448  02C5                     l2349:
  3449                           
  3450                           ;mcc_generated_files/adc.c: 112: char ADC_GetConversion(adc_channel_t channel);mcc_gener
      +                          ated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = channel;
  3451  02C5  0874               	movf	ADC_GetConversion@channel,w
  3452  02C6  00F3               	movwf	??_ADC_GetConversion
  3453  02C7  0DF3               	rlf	??_ADC_GetConversion,f
  3454  02C8  0DF3               	rlf	??_ADC_GetConversion,f
  3455  02C9  0021               	movlb	1	; select bank1
  3456  02CA  081D               	movf	29,w	;volatile
  3457  02CB  0673               	xorwf	??_ADC_GetConversion,w
  3458  02CC  3983               	andlw	-125
  3459  02CD  0673               	xorwf	??_ADC_GetConversion,w
  3460  02CE  009D               	movwf	29	;volatile
  3461  02CF                     l2351:
  3462                           
  3463                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  3464  02CF  141D               	bsf	29,0	;volatile
  3465  02D0                     l2353:
  3466                           
  3467                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  3468  02D0  3006               	movlw	6
  3469  02D1                     u1837:
  3470  02D1  0B89               	decfsz	9,f
  3471  02D2  2AD1               	goto	u1837
  3472  02D3  3200               	nop2
  3473  02D4                     l2355:
  3474                           
  3475                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  3476  02D4  0021               	movlb	1	; select bank1
  3477  02D5  149D               	bsf	29,1	;volatile
  3478  02D6                     l61:	
  3479                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  3480                           
  3481                           
  3482                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  3483  02D6  189D               	btfsc	29,1	;volatile
  3484  02D7  2AD9               	goto	u1581
  3485  02D8  2ADA               	goto	u1580
  3486  02D9                     u1581:
  3487  02D9  2AD6               	goto	l61
  3488  02DA                     u1580:
  3489  02DA                     l2357:
  3490                           
  3491                           ;mcc_generated_files/adc.c: 132:     return (ADRESH);
  3492  02DA  081C               	movf	28,w	;volatile
  3493  02DB                     l64:
  3494  02DB  0008               	return
  3495  02DC                     __end_of_ADC_GetConversion:
  3496                           
  3497                           	psect	text22
  3498  01D9                     __ptext22:	
  3499 ;; *************** function _get_jump *****************
  3500 ;; Defined at:
  3501 ;;		line 294 in file "main.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;		None
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;		None
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  1    wreg      void 
  3508 ;; Registers used:
  3509 ;;		wreg, status,2, status,0
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMMON   BANK0   BANK1
  3515 ;;      Params:         0       0       0
  3516 ;;      Locals:         0       0       0
  3517 ;;      Temps:          1       0       0
  3518 ;;      Totals:         1       0       0
  3519 ;;Total ram usage:        1 bytes
  3520 ;; Hardware stack levels used: 1
  3521 ;; Hardware stack levels required when called: 6
  3522 ;; This function calls:
  3523 ;;		Nothing
  3524 ;; This function is called by:
  3525 ;;		_main
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529  01D9                     _get_jump:	
  3530                           ;psect for function _get_jump
  3531                           
  3532  01D9                     l396:	
  3533                           ;incstack = 0
  3534                           ; Regs used in _get_jump: [wreg+status,2+status,0]
  3535                           ;main.c: 296:     static signed char jump_counter;;main.c: 297:     do { ANSELAbits.ANSA
      +                          1 = 0; } while(0);
  3536                           
  3537  01D9  0023               	movlb	3	; select bank3
  3538  01DA  108C               	bcf	12,1	;volatile
  3539  01DB                     l398:	
  3540                           ;main.c: 298:     do { TRISAbits.TRISA1 = 1; } while(0);
  3541                           
  3542  01DB  0021               	movlb	1	; select bank1
  3543  01DC  148C               	bsf	12,1	;volatile
  3544  01DD                     l399:
  3545                           
  3546                           ;main.c: 299:     if (PORTAbits.RA1) jump_counter++;
  3547  01DD  0020               	movlb	0	; select bank0
  3548  01DE  1C8C               	btfss	12,1	;volatile
  3549  01DF  29E1               	goto	u1071
  3550  01E0  29E2               	goto	u1070
  3551  01E1                     u1071:
  3552  01E1  29E7               	goto	l2049
  3553  01E2                     u1070:
  3554  01E2                     l2047:
  3555  01E2  3001               	movlw	1
  3556  01E3  00F3               	movwf	??_get_jump
  3557  01E4  0873               	movf	??_get_jump,w
  3558  01E5  07B5               	addwf	get_jump@jump_counter,f
  3559  01E6  29EB               	goto	l2051
  3560  01E7                     l2049:
  3561  01E7  30FF               	movlw	255
  3562  01E8  00F3               	movwf	??_get_jump
  3563  01E9  0873               	movf	??_get_jump,w
  3564  01EA  07B5               	addwf	get_jump@jump_counter,f
  3565  01EB                     l2051:
  3566                           
  3567                           ;main.c: 316:     if (jump_counter > 10) {
  3568  01EB  0835               	movf	get_jump@jump_counter,w
  3569  01EC  3A80               	xorlw	128
  3570  01ED  3E75               	addlw	-139
  3571  01EE  1C03               	skipc
  3572  01EF  29F1               	goto	u1081
  3573  01F0  29F2               	goto	u1080
  3574  01F1                     u1081:
  3575  01F1  29F8               	goto	l2057
  3576  01F2                     u1080:
  3577  01F2                     l2053:
  3578                           
  3579                           ;main.c: 317:         jump_counter = 10;
  3580  01F2  300A               	movlw	10
  3581  01F3  00F3               	movwf	??_get_jump
  3582  01F4  0873               	movf	??_get_jump,w
  3583  01F5  00B5               	movwf	get_jump@jump_counter
  3584  01F6                     l2055:
  3585                           
  3586                           ;main.c: 318:         FF.bits._JUMP_CONNECTED = 0;
  3587  01F6  11F7               	bcf	_FF,3
  3588                           
  3589                           ;main.c: 319:     } else if (jump_counter<-10) {
  3590  01F7  2A04               	goto	l405
  3591  01F8                     l2057:
  3592  01F8  0835               	movf	get_jump@jump_counter,w
  3593  01F9  3A80               	xorlw	128
  3594  01FA  3E8A               	addlw	138
  3595  01FB  1803               	skipnc
  3596  01FC  29FE               	goto	u1091
  3597  01FD  29FF               	goto	u1090
  3598  01FE                     u1091:
  3599  01FE  2A04               	goto	l405
  3600  01FF                     u1090:
  3601  01FF                     l2059:
  3602                           
  3603                           ;main.c: 320:         jump_counter = -10;
  3604  01FF  30F6               	movlw	246
  3605  0200  00F3               	movwf	??_get_jump
  3606  0201  0873               	movf	??_get_jump,w
  3607  0202  00B5               	movwf	get_jump@jump_counter
  3608  0203                     l2061:
  3609                           
  3610                           ;main.c: 321:         FF.bits._JUMP_CONNECTED = 1;
  3611  0203  15F7               	bsf	_FF,3
  3612  0204                     l405:
  3613  0204  0008               	return
  3614  0205                     __end_of_get_jump:
  3615                           
  3616                           	psect	text23
  3617  013B                     __ptext23:	
  3618 ;; *************** function _get_fun *****************
  3619 ;; Defined at:
  3620 ;;		line 218 in file "main.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;		None
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;		None
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  1    wreg      void 
  3627 ;; Registers used:
  3628 ;;		wreg, status,2, status,0
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMMON   BANK0   BANK1
  3634 ;;      Params:         0       0       0
  3635 ;;      Locals:         0       0       0
  3636 ;;      Temps:          1       0       0
  3637 ;;      Totals:         1       0       0
  3638 ;;Total ram usage:        1 bytes
  3639 ;; Hardware stack levels used: 1
  3640 ;; Hardware stack levels required when called: 6
  3641 ;; This function calls:
  3642 ;;		Nothing
  3643 ;; This function is called by:
  3644 ;;		_main
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648  013B                     _get_fun:	
  3649                           ;psect for function _get_fun
  3650                           
  3651  013B                     l358:	
  3652                           ;incstack = 0
  3653                           ; Regs used in _get_fun: [wreg+status,2+status,0]
  3654                           ;main.c: 219:     static signed char fun_counter;;main.c: 220:     do { LATCbits.LATC1 =
      +                           1; } while(0);
  3655                           
  3656  013B  0022               	movlb	2	; select bank2
  3657  013C  148E               	bsf	14,1	;volatile
  3658  013D                     l2019:
  3659                           
  3660                           ;main.c: 221:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3661  013D  3006               	movlw	6
  3662  013E  00F3               	movwf	??_get_fun
  3663  013F  3030               	movlw	48
  3664  0140                     u1847:
  3665  0140  0B89               	decfsz	9,f
  3666  0141  2940               	goto	u1847
  3667  0142  0BF3               	decfsz	??_get_fun,f
  3668  0143  2940               	goto	u1847
  3669  0144  3200               	nop2
  3670  0145                     l2021:
  3671  0145  0023               	movlb	3	; select bank3
  3672  0146  110E               	bcf	14,2	;volatile
  3673  0147                     l2023:
  3674  0147  0021               	movlb	1	; select bank1
  3675  0148  150E               	bsf	14,2	;volatile
  3676  0149                     l2025:
  3677                           
  3678                           ;main.c: 225:     if (PORTCbits.RC2) fun_counter--;
  3679  0149  0020               	movlb	0	; select bank0
  3680  014A  1D0E               	btfss	14,2	;volatile
  3681  014B  294D               	goto	u1041
  3682  014C  294E               	goto	u1040
  3683  014D                     u1041:
  3684  014D  2953               	goto	l2029
  3685  014E                     u1040:
  3686  014E                     l2027:
  3687  014E  30FF               	movlw	255
  3688  014F  00F3               	movwf	??_get_fun
  3689  0150  0873               	movf	??_get_fun,w
  3690  0151  07B7               	addwf	get_fun@fun_counter,f
  3691  0152  2957               	goto	l2031
  3692  0153                     l2029:
  3693  0153  3001               	movlw	1
  3694  0154  00F3               	movwf	??_get_fun
  3695  0155  0873               	movf	??_get_fun,w
  3696  0156  07B7               	addwf	get_fun@fun_counter,f
  3697  0157                     l2031:
  3698  0157  0022               	movlb	2	; select bank2
  3699  0158  108E               	bcf	14,1	;volatile
  3700  0159                     l2033:
  3701                           
  3702                           ;main.c: 242:     if (fun_counter > 10) {
  3703  0159  0020               	movlb	0	; select bank0
  3704  015A  0837               	movf	get_fun@fun_counter,w
  3705  015B  3A80               	xorlw	128
  3706  015C  3E75               	addlw	-139
  3707  015D  1C03               	skipc
  3708  015E  2960               	goto	u1051
  3709  015F  2961               	goto	u1050
  3710  0160                     u1051:
  3711  0160  2967               	goto	l2039
  3712  0161                     u1050:
  3713  0161                     l2035:
  3714                           
  3715                           ;main.c: 243:         fun_counter = 10;
  3716  0161  300A               	movlw	10
  3717  0162  00F3               	movwf	??_get_fun
  3718  0163  0873               	movf	??_get_fun,w
  3719  0164  00B7               	movwf	get_fun@fun_counter
  3720  0165                     l2037:
  3721                           
  3722                           ;main.c: 244:         FF.bits._FUN_CONNECTED = 0;
  3723  0165  1177               	bcf	_FF,2
  3724                           
  3725                           ;main.c: 245:     } else if (fun_counter<-10) {
  3726  0166  2973               	goto	l371
  3727  0167                     l2039:
  3728  0167  0837               	movf	get_fun@fun_counter,w
  3729  0168  3A80               	xorlw	128
  3730  0169  3E8A               	addlw	138
  3731  016A  1803               	skipnc
  3732  016B  296D               	goto	u1061
  3733  016C  296E               	goto	u1060
  3734  016D                     u1061:
  3735  016D  2973               	goto	l371
  3736  016E                     u1060:
  3737  016E                     l2041:
  3738                           
  3739                           ;main.c: 246:         fun_counter = -10;
  3740  016E  30F6               	movlw	246
  3741  016F  00F3               	movwf	??_get_fun
  3742  0170  0873               	movf	??_get_fun,w
  3743  0171  00B7               	movwf	get_fun@fun_counter
  3744  0172                     l2043:
  3745                           
  3746                           ;main.c: 247:         FF.bits._FUN_CONNECTED = 1;
  3747  0172  1577               	bsf	_FF,2
  3748  0173                     l371:
  3749  0173  0008               	return
  3750  0174                     __end_of_get_fun:
  3751                           
  3752                           	psect	text24
  3753  0100                     __ptext24:	
  3754 ;; *************** function _fun_work *****************
  3755 ;; Defined at:
  3756 ;;		line 434 in file "main.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;		None
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;		None
  3761 ;; Return value:  Size  Location     Type
  3762 ;;                  1    wreg      void 
  3763 ;; Registers used:
  3764 ;;		wreg, status,2, status,0, pclath, cstack
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMMON   BANK0   BANK1
  3770 ;;      Params:         0       0       0
  3771 ;;      Locals:         0       0       0
  3772 ;;      Temps:          0       0       0
  3773 ;;      Totals:         0       0       0
  3774 ;;Total ram usage:        0 bytes
  3775 ;; Hardware stack levels used: 1
  3776 ;; Hardware stack levels required when called: 8
  3777 ;; This function calls:
  3778 ;;		_beep_short
  3779 ;;		_go_close
  3780 ;;		_go_close_alt
  3781 ;;		_go_open
  3782 ;;		_go_open_alt
  3783 ;; This function is called by:
  3784 ;;		_main
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788  0100                     _fun_work:	
  3789                           ;psect for function _fun_work
  3790                           
  3791  0100                     l2395:	
  3792                           ;incstack = 0
  3793                           ; Regs used in _fun_work: [wreg+status,2+status,0+pclath+cstack]
  3794                           
  3795                           
  3796                           ;main.c: 435:     {;main.c: 436:         if (FF.bits._FUN_CONNECTED &&
  3797  0100  1D77               	btfss	_FF,2
  3798  0101  2903               	goto	u1641
  3799  0102  2904               	goto	u1640
  3800  0103                     u1641:
  3801  0103  291F               	goto	l2411
  3802  0104                     u1640:
  3803  0104                     l2397:
  3804  0104  1877               	btfsc	_FF,0
  3805  0105  2907               	goto	u1651
  3806  0106  2908               	goto	u1650
  3807  0107                     u1651:
  3808  0107  291F               	goto	l2411
  3809  0108                     u1650:
  3810  0108                     l2399:
  3811  0108  1D78               	btfss	_FF+1,2
  3812  0109  290B               	goto	u1661
  3813  010A  290C               	goto	u1660
  3814  010B                     u1661:
  3815  010B  291F               	goto	l2411
  3816  010C                     u1660:
  3817  010C                     l2401:
  3818  010C  1AF7               	btfsc	_FF,5
  3819  010D  290F               	goto	u1671
  3820  010E  2910               	goto	u1670
  3821  010F                     u1671:
  3822  010F  291F               	goto	l2411
  3823  0110                     u1670:
  3824  0110                     l2403:
  3825                           
  3826                           ;main.c: 439:                 !FF.bits.RELE_POWER_WAIT) {;main.c: 441:             beep_
      +                          short(1);
  3827  0110  3001               	movlw	1
  3828  0111  3183  237F  3181   	fcall	_beep_short
  3829  0114                     l2405:
  3830                           
  3831                           ;main.c: 443:             if (FF.bits.NORMAL_WORK_MODE) go_open();
  3832  0114  1CF7               	btfss	_FF,1
  3833  0115  2917               	goto	u1681
  3834  0116  2918               	goto	u1680
  3835  0117                     u1681:
  3836  0117  291C               	goto	l2409
  3837  0118                     u1680:
  3838  0118                     l2407:
  3839  0118  3183  23A9  3181   	fcall	_go_open
  3840  011B  291F               	goto	l2411
  3841  011C                     l2409:
  3842  011C  3183  23D4  3181   	fcall	_go_open_alt
  3843  011F                     l2411:
  3844                           
  3845                           ;main.c: 446:         if (!FF.bits._FUN_CONNECTED &&
  3846  011F  1977               	btfsc	_FF,2
  3847  0120  2922               	goto	u1691
  3848  0121  2923               	goto	u1690
  3849  0122                     u1691:
  3850  0122  293A               	goto	l462
  3851  0123                     u1690:
  3852  0123                     l2413:
  3853  0123  1978               	btfsc	_FF+1,2
  3854  0124  2926               	goto	u1701
  3855  0125  2927               	goto	u1700
  3856  0126                     u1701:
  3857  0126  293A               	goto	l462
  3858  0127                     u1700:
  3859  0127                     l2415:
  3860  0127  1AF7               	btfsc	_FF,5
  3861  0128  292A               	goto	u1711
  3862  0129  292B               	goto	u1710
  3863  012A                     u1711:
  3864  012A  293A               	goto	l462
  3865  012B                     u1710:
  3866  012B                     l2417:
  3867                           
  3868                           ;main.c: 448:                 !FF.bits.RELE_POWER_WAIT) {;main.c: 450:                be
      +                          ep_short(2);
  3869  012B  3002               	movlw	2
  3870  012C  3183  237F  3181   	fcall	_beep_short
  3871  012F                     l2419:
  3872                           
  3873                           ;main.c: 452:             if (FF.bits.NORMAL_WORK_MODE) go_close();
  3874  012F  1CF7               	btfss	_FF,1
  3875  0130  2932               	goto	u1721
  3876  0131  2933               	goto	u1720
  3877  0132                     u1721:
  3878  0132  2937               	goto	l2423
  3879  0133                     u1720:
  3880  0133                     l2421:
  3881  0133  3182  226D  3181   	fcall	_go_close
  3882  0136  293A               	goto	l462
  3883  0137                     l2423:
  3884  0137  3183  23D9  3181   	fcall	_go_close_alt
  3885  013A                     l462:
  3886  013A  0008               	return
  3887  013B                     __end_of_fun_work:
  3888                           
  3889                           	psect	text25
  3890  03D4                     __ptext25:	
  3891 ;; *************** function _go_open_alt *****************
  3892 ;; Defined at:
  3893 ;;		line 186 in file "main.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;		None
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		None
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMMON   BANK0   BANK1
  3907 ;;      Params:         0       0       0
  3908 ;;      Locals:         0       0       0
  3909 ;;      Temps:          0       0       0
  3910 ;;      Totals:         0       0       0
  3911 ;;Total ram usage:        0 bytes
  3912 ;; Hardware stack levels used: 1
  3913 ;; Hardware stack levels required when called: 6
  3914 ;; This function calls:
  3915 ;;		Nothing
  3916 ;; This function is called by:
  3917 ;;		_fun_work
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921  03D4                     _go_open_alt:	
  3922                           ;psect for function _go_open_alt
  3923                           
  3924  03D4                     l1377:	
  3925                           ;incstack = 0
  3926                           ; Regs used in _go_open_alt: []
  3927                           
  3928                           
  3929                           ;main.c: 187:     FF.bits.CLOSED = 0;
  3930  03D4  1178               	bcf	_FF+1,2
  3931  03D5                     l325:	
  3932                           ;main.c: 188:     do { LATCbits.LATC4 = 0; } while(0);
  3933                           
  3934  03D5  0022               	movlb	2	; select bank2
  3935  03D6  120E               	bcf	14,4	;volatile
  3936  03D7                     l327:	
  3937                           ;main.c: 189:     do { LATCbits.LATC5 = 0; } while(0);
  3938                           
  3939  03D7  128E               	bcf	14,5	;volatile
  3940  03D8                     l329:
  3941  03D8  0008               	return
  3942  03D9                     __end_of_go_open_alt:
  3943                           
  3944                           	psect	text26
  3945  03A9                     __ptext26:	
  3946 ;; *************** function _go_open *****************
  3947 ;; Defined at:
  3948 ;;		line 172 in file "main.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;		None
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;		None
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  1    wreg      void 
  3955 ;; Registers used:
  3956 ;;		wreg
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMMON   BANK0   BANK1
  3962 ;;      Params:         0       0       0
  3963 ;;      Locals:         0       0       0
  3964 ;;      Temps:          0       0       0
  3965 ;;      Totals:         0       0       0
  3966 ;;Total ram usage:        0 bytes
  3967 ;; Hardware stack levels used: 1
  3968 ;; Hardware stack levels required when called: 6
  3969 ;; This function calls:
  3970 ;;		Nothing
  3971 ;; This function is called by:
  3972 ;;		_povorot
  3973 ;;		_fun_work
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977  03A9                     _go_open:	
  3978                           ;psect for function _go_open
  3979                           
  3980  03A9                     l311:	
  3981                           ;incstack = 0
  3982                           ; Regs used in _go_open: [wreg]
  3983                           ;main.c: 173:     do { LATCbits.LATC4 = 0; } while(0);
  3984                           
  3985  03A9  0022               	movlb	2	; select bank2
  3986  03AA  120E               	bcf	14,4	;volatile
  3987  03AB                     l313:	
  3988                           ;main.c: 174:     do { LATCbits.LATC5 = 1; } while(0);
  3989                           
  3990  03AB  168E               	bsf	14,5	;volatile
  3991  03AC                     l1951:
  3992                           
  3993                           ;main.c: 175:     time_rele_power = 10;
  3994  03AC  300A               	movlw	10
  3995  03AD  0020               	movlb	0	; select bank0
  3996  03AE  00AF               	movwf	_time_rele_power
  3997  03AF  3000               	movlw	0
  3998  03B0  00B0               	movwf	_time_rele_power+1
  3999  03B1                     l1953:
  4000                           
  4001                           ;main.c: 176:     FF.bits.RELE_POWER_WAIT = 1;
  4002  03B1  16F7               	bsf	_FF,5
  4003  03B2                     l315:
  4004  03B2  0008               	return
  4005  03B3                     __end_of_go_open:
  4006                           
  4007                           	psect	text27
  4008  03D9                     __ptext27:	
  4009 ;; *************** function _go_close_alt *****************
  4010 ;; Defined at:
  4011 ;;		line 180 in file "main.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;		None
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;		None
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  1    wreg      void 
  4018 ;; Registers used:
  4019 ;;		None
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMMON   BANK0   BANK1
  4025 ;;      Params:         0       0       0
  4026 ;;      Locals:         0       0       0
  4027 ;;      Temps:          0       0       0
  4028 ;;      Totals:         0       0       0
  4029 ;;Total ram usage:        0 bytes
  4030 ;; Hardware stack levels used: 1
  4031 ;; Hardware stack levels required when called: 6
  4032 ;; This function calls:
  4033 ;;		Nothing
  4034 ;; This function is called by:
  4035 ;;		_start_alarm
  4036 ;;		_fun_work
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040  03D9                     _go_close_alt:	
  4041                           ;psect for function _go_close_alt
  4042                           
  4043  03D9                     l2315:	
  4044                           ;incstack = 0
  4045                           ; Regs used in _go_close_alt: []
  4046                           
  4047                           
  4048                           ;main.c: 181:     FF.bits.CLOSED = 1;
  4049  03D9  1578               	bsf	_FF+1,2
  4050  03DA                     l318:	
  4051                           ;main.c: 182:     do { LATCbits.LATC4 = 0; } while(0);
  4052                           
  4053  03DA  0022               	movlb	2	; select bank2
  4054  03DB  120E               	bcf	14,4	;volatile
  4055  03DC                     l320:	
  4056                           ;main.c: 183:     do { LATCbits.LATC5 = 1; } while(0);
  4057                           
  4058  03DC  168E               	bsf	14,5	;volatile
  4059  03DD                     l322:
  4060  03DD  0008               	return
  4061  03DE                     __end_of_go_close_alt:
  4062                           
  4063                           	psect	text28
  4064  026D                     __ptext28:	
  4065 ;; *************** function _go_close *****************
  4066 ;; Defined at:
  4067 ;;		line 148 in file "main.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;		None
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;		None
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMMON   BANK0   BANK1
  4081 ;;      Params:         0       0       0
  4082 ;;      Locals:         0       0       0
  4083 ;;      Temps:          2       0       0
  4084 ;;      Totals:         2       0       0
  4085 ;;Total ram usage:        2 bytes
  4086 ;; Hardware stack levels used: 1
  4087 ;; Hardware stack levels required when called: 6
  4088 ;; This function calls:
  4089 ;;		Nothing
  4090 ;; This function is called by:
  4091 ;;		_start_alarm
  4092 ;;		_fun_work
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096  026D                     _go_close:	
  4097                           ;psect for function _go_close
  4098                           
  4099  026D                     l2301:	
  4100                           ;incstack = 0
  4101                           ; Regs used in _go_close: [wreg]
  4102                           
  4103                           
  4104                           ;main.c: 149:     time_rotation = 0;
  4105  026D  3000               	movlw	0
  4106  026E  0020               	movlb	0	; select bank0
  4107  026F  00A0               	movwf	_time_rotation
  4108  0270  3000               	movlw	0
  4109  0271  00A1               	movwf	_time_rotation+1
  4110  0272  3000               	movlw	0
  4111  0273  00A2               	movwf	_time_rotation+2
  4112  0274                     l2303:
  4113  0274  0022               	movlb	2	; select bank2
  4114  0275  160E               	bsf	14,4	;volatile
  4115  0276                     l2305:
  4116                           
  4117                           ;main.c: 151:     FF.bits.CLOSING = 1;
  4118  0276  14F8               	bsf	_FF+1,1
  4119                           
  4120                           ;main.c: 152:     _delay((unsigned long)((2 * 1000)*(16000000/4000.0)));
  4121  0277  3029               	movlw	41
  4122  0278  00F4               	movwf	??_go_close+1
  4123  0279  3096               	movlw	150
  4124  027A  00F3               	movwf	??_go_close
  4125  027B  307F               	movlw	127
  4126  027C                     u1857:
  4127  027C  0B89               	decfsz	9,f
  4128  027D  2A7C               	goto	u1857
  4129  027E  0BF3               	decfsz	??_go_close,f
  4130  027F  2A7C               	goto	u1857
  4131  0280  0BF4               	decfsz	??_go_close+1,f
  4132  0281  2A7C               	goto	u1857
  4133  0282  0000               	nop
  4134  0283                     l2307:
  4135  0283  0022               	movlb	2	; select bank2
  4136  0284  168E               	bsf	14,5	;volatile
  4137  0285                     l300:
  4138                           
  4139                           ;main.c: 154:     time_rele_power = 10;
  4140  0285  300A               	movlw	10
  4141  0286  0020               	movlb	0	; select bank0
  4142  0287  00AF               	movwf	_time_rele_power
  4143  0288  3000               	movlw	0
  4144  0289  00B0               	movwf	_time_rele_power+1
  4145  028A                     l2309:
  4146                           
  4147                           ;main.c: 155:     FF.bits.RELE_POWER_WAIT = 1;
  4148  028A  16F7               	bsf	_FF,5
  4149  028B                     l2311:
  4150                           
  4151                           ;main.c: 156:     FF.bits.RELE_CONTROL_WAIT = 1;
  4152  028B  1777               	bsf	_FF,6
  4153  028C                     l301:
  4154  028C  0008               	return
  4155  028D                     __end_of_go_close:
  4156                           
  4157                           	psect	text29
  4158  037F                     __ptext29:	
  4159 ;; *************** function _beep_short *****************
  4160 ;; Defined at:
  4161 ;;		line 134 in file "main.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;  count           1    wreg     unsigned char 
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;  count           1    4[COMMON] unsigned char 
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  1    wreg      void 
  4168 ;; Registers used:
  4169 ;;		wreg, status,2, status,0, pclath, cstack
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMMON   BANK0   BANK1
  4175 ;;      Params:         0       0       0
  4176 ;;      Locals:         1       0       0
  4177 ;;      Temps:          1       0       0
  4178 ;;      Totals:         2       0       0
  4179 ;;Total ram usage:        2 bytes
  4180 ;; Hardware stack levels used: 1
  4181 ;; Hardware stack levels required when called: 7
  4182 ;; This function calls:
  4183 ;;		_start_tone
  4184 ;; This function is called by:
  4185 ;;		_fun_work
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189  037F                     _beep_short:	
  4190                           ;psect for function _beep_short
  4191                           
  4192                           
  4193                           ;incstack = 0
  4194                           ; Regs used in _beep_short: [wreg+status,2+status,0+pclath+cstack]
  4195                           ;beep_short@count stored from wreg
  4196  037F  00F4               	movwf	beep_short@count
  4197  0380                     l1921:
  4198                           
  4199                           ;main.c: 135:     start_tone();
  4200  0380  3183  23E9  3183   	fcall	_start_tone
  4201  0383                     l1923:
  4202                           
  4203                           ;main.c: 136:     FF.bits.BEEP_SHORT_ON = 1;
  4204  0383  15F8               	bsf	_FF+1,3
  4205  0384                     l1925:
  4206                           
  4207                           ;main.c: 137:     time_zummer_short = 30;
  4208  0384  301E               	movlw	30
  4209  0385  0020               	movlb	0	; select bank0
  4210  0386  00A5               	movwf	_time_zummer_short
  4211  0387  3000               	movlw	0
  4212  0388  00A6               	movwf	_time_zummer_short+1
  4213  0389                     l1927:
  4214                           
  4215                           ;main.c: 138:     beep_short_count = count;
  4216  0389  0874               	movf	beep_short@count,w
  4217  038A  00F3               	movwf	??_beep_short
  4218  038B  0873               	movf	??_beep_short,w
  4219  038C  00BA               	movwf	_beep_short_count
  4220  038D                     l291:
  4221  038D  0008               	return
  4222  038E                     __end_of_beep_short:
  4223                           
  4224                           	psect	text30
  4225  03E9                     __ptext30:	
  4226 ;; *************** function _start_tone *****************
  4227 ;; Defined at:
  4228 ;;		line 123 in file "main.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;		None
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;		None
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  1    wreg      void 
  4235 ;; Registers used:
  4236 ;;		None
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/0
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: 0/0
  4241 ;; Data sizes:     COMMON   BANK0   BANK1
  4242 ;;      Params:         0       0       0
  4243 ;;      Locals:         0       0       0
  4244 ;;      Temps:          0       0       0
  4245 ;;      Totals:         0       0       0
  4246 ;;Total ram usage:        0 bytes
  4247 ;; Hardware stack levels used: 1
  4248 ;; Hardware stack levels required when called: 6
  4249 ;; This function calls:
  4250 ;;		Nothing
  4251 ;; This function is called by:
  4252 ;;		_beep_short
  4253 ;;		_beep_long
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257  03E9                     _start_tone:	
  4258                           ;psect for function _start_tone
  4259                           
  4260  03E9                     l1833:	
  4261                           ;incstack = 0
  4262                           ; Regs used in _start_tone: []
  4263                           
  4264                           
  4265                           ;main.c: 124:     INTCONbits.TMR0IE = 1;
  4266  03E9  168B               	bsf	11,5	;volatile
  4267                           
  4268                           ;main.c: 125:     FF.bits.ZUMM_ON = 1;
  4269  03EA  16F8               	bsf	_FF+1,5
  4270  03EB                     l283:
  4271  03EB  0008               	return
  4272  03EC                     __end_of_start_tone:
  4273                           
  4274                           	psect	intentry
  4275  0004                     __pintentry:	
  4276 ;; *************** function _INTERRUPT_InterruptManager *****************
  4277 ;; Defined at:
  4278 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;		None
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;		None
  4283 ;; Return value:  Size  Location     Type
  4284 ;;                  1    wreg      void 
  4285 ;; Registers used:
  4286 ;;		wreg, status,2, status,0, pclath, cstack
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMMON   BANK0   BANK1
  4292 ;;      Params:         0       0       0
  4293 ;;      Locals:         0       0       0
  4294 ;;      Temps:          0       0       0
  4295 ;;      Totals:         0       0       0
  4296 ;;Total ram usage:        0 bytes
  4297 ;; Hardware stack levels used: 1
  4298 ;; Hardware stack levels required when called: 5
  4299 ;; This function calls:
  4300 ;;		_TMR0_ISR
  4301 ;;		_TMR2_ISR
  4302 ;; This function is called by:
  4303 ;;		Interrupt level 1
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307  0004                     _INTERRUPT_InterruptManager:
  4308                           
  4309                           ;incstack = 0
  4310  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4311                           
  4312                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  4313  0005  3180               	pagesel	$
  4314  0006                     i1l2185:
  4315                           
  4316                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4317  0006  1E8B               	btfss	11,5	;volatile
  4318  0007  2809               	goto	u132_21
  4319  0008  280A               	goto	u132_20
  4320  0009                     u132_21:
  4321  0009  2812               	goto	i1l108
  4322  000A                     u132_20:
  4323  000A                     i1l2187:
  4324  000A  1D0B               	btfss	11,2	;volatile
  4325  000B  280D               	goto	u133_21
  4326  000C  280E               	goto	u133_20
  4327  000D                     u133_21:
  4328  000D  2812               	goto	i1l108
  4329  000E                     u133_20:
  4330  000E                     i1l2189:
  4331                           
  4332                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  4333  000E  3183  2360  3180   	fcall	_TMR0_ISR
  4334                           
  4335                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  4336  0011  2824               	goto	i1l114
  4337  0012                     i1l108:	
  4338                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  4339                           
  4340  0012  1F0B               	btfss	11,6	;volatile
  4341  0013  2815               	goto	u134_21
  4342  0014  2816               	goto	u134_20
  4343  0015                     u134_21:
  4344  0015  2824               	goto	i1l114
  4345  0016                     u134_20:
  4346  0016                     i1l2191:
  4347                           
  4348                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  4349  0016  0021               	movlb	1	; select bank1
  4350  0017  1C91               	btfss	17,1	;volatile
  4351  0018  281A               	goto	u135_21
  4352  0019  281B               	goto	u135_20
  4353  001A                     u135_21:
  4354  001A  2824               	goto	i1l113
  4355  001B                     u135_20:
  4356  001B                     i1l2193:
  4357  001B  0020               	movlb	0	; select bank0
  4358  001C  1C91               	btfss	17,1	;volatile
  4359  001D  281F               	goto	u136_21
  4360  001E  2820               	goto	u136_20
  4361  001F                     u136_21:
  4362  001F  2824               	goto	i1l113
  4363  0020                     u136_20:
  4364  0020                     i1l2195:
  4365                           
  4366                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
  4367  0020  3183  238E  3180   	fcall	_TMR2_ISR
  4368                           
  4369                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4370  0023  2824               	goto	i1l114
  4371  0024                     i1l113:	
  4372                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  4373                           
  4374  0024                     i1l114:
  4375  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4376  0025  0009               	retfie
  4377  0026                     __end_of_INTERRUPT_InterruptManager:
  4378                           
  4379                           	psect	text32
  4380  038E                     __ptext32:	
  4381 ;; *************** function _TMR2_ISR *****************
  4382 ;; Defined at:
  4383 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;		None
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;		None
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  1    wreg      void 
  4390 ;; Registers used:
  4391 ;;		wreg, status,2, status,0, pclath, cstack
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMMON   BANK0   BANK1
  4397 ;;      Params:         0       0       0
  4398 ;;      Locals:         0       0       0
  4399 ;;      Temps:          0       0       0
  4400 ;;      Totals:         0       0       0
  4401 ;;Total ram usage:        0 bytes
  4402 ;; Hardware stack levels used: 1
  4403 ;; Hardware stack levels required when called: 4
  4404 ;; This function calls:
  4405 ;;		Absolute function
  4406 ;;		_TMR2_DefaultInterruptHandler
  4407 ;;		_ms_tick
  4408 ;; This function is called by:
  4409 ;;		_INTERRUPT_InterruptManager
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413  038E                     _TMR2_ISR:	
  4414                           ;psect for function _TMR2_ISR
  4415                           
  4416  038E                     i1l1991:	
  4417                           ;incstack = 0
  4418                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  4419                           
  4420                           
  4421                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
  4422  038E  0020               	movlb	0	; select bank0
  4423  038F  1091               	bcf	17,1	;volatile
  4424  0390                     i1l1993:
  4425                           
  4426                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
  4427  0390  083F               	movf	_TMR2_InterruptHandler,w
  4428  0391  0440               	iorwf	_TMR2_InterruptHandler+1,w
  4429  0392  1903               	btfsc	3,2
  4430  0393  2B95               	goto	u100_21
  4431  0394  2B96               	goto	u100_20
  4432  0395                     u100_21:
  4433  0395  2B9B               	goto	i1l154
  4434  0396                     u100_20:
  4435  0396                     i1l1995:
  4436                           
  4437                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
  4438  0396  0840               	movf	_TMR2_InterruptHandler+1,w
  4439  0397  008A               	movwf	10
  4440  0398  083F               	movf	_TMR2_InterruptHandler,w
  4441  0399  000A               	callw
  4442  039A  3183               	pagesel	$
  4443  039B                     i1l154:
  4444  039B  0008               	return
  4445  039C                     __end_of_TMR2_ISR:
  4446                           
  4447                           	psect	text33
  4448  03F6                     __ptext33:	
  4449 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4450 ;; Defined at:
  4451 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;		None
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;		None
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  1    wreg      void 
  4458 ;; Registers used:
  4459 ;;		None
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMMON   BANK0   BANK1
  4465 ;;      Params:         0       0       0
  4466 ;;      Locals:         0       0       0
  4467 ;;      Temps:          0       0       0
  4468 ;;      Totals:         0       0       0
  4469 ;;Total ram usage:        0 bytes
  4470 ;; Hardware stack levels used: 1
  4471 ;; This function calls:
  4472 ;;		Nothing
  4473 ;; This function is called by:
  4474 ;;		_TMR2_Initialize
  4475 ;;		_TMR2_ISR
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479  03F6                     _TMR2_DefaultInterruptHandler:	
  4480                           ;psect for function _TMR2_DefaultInterruptHandler
  4481                           
  4482  03F6                     i1l160:	
  4483                           ;incstack = 0
  4484                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  4485                           
  4486  03F6  0008               	return
  4487  03F7                     __end_of_TMR2_DefaultInterruptHandler:
  4488                           
  4489                           	psect	text34
  4490  028D                     __ptext34:	
  4491 ;; *************** function _ms_tick *****************
  4492 ;; Defined at:
  4493 ;;		line 491 in file "main.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;		None
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;		None
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  1    wreg      void 
  4500 ;; Registers used:
  4501 ;;		wreg, status,2, status,0, pclath, cstack
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMMON   BANK0   BANK1
  4507 ;;      Params:         0       0       0
  4508 ;;      Locals:         0       0       0
  4509 ;;      Temps:          0       0       0
  4510 ;;      Totals:         0       0       0
  4511 ;;Total ram usage:        0 bytes
  4512 ;; Hardware stack levels used: 1
  4513 ;; Hardware stack levels required when called: 3
  4514 ;; This function calls:
  4515 ;;		_sec_tick_work
  4516 ;; This function is called by:
  4517 ;;		_start_setup
  4518 ;;		_TMR2_ISR
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522  028D                     _ms_tick:	
  4523                           ;psect for function _ms_tick
  4524                           
  4525  028D                     i1l1963:	
  4526                           ;incstack = 0
  4527                           ; Regs used in _ms_tick: [wreg+status,2+status,0+pclath+cstack]
  4528                           
  4529                           
  4530                           ;main.c: 492:     static unsigned tick_count = 0;;main.c: 493:     tick_count++;
  4531  028D  3001               	movlw	1
  4532  028E  0020               	movlb	0	; select bank0
  4533  028F  07A3               	addwf	ms_tick@tick_count,f
  4534  0290  3000               	movlw	0
  4535  0291  3DA4               	addwfc	ms_tick@tick_count+1,f
  4536  0292                     i1l1965:
  4537                           
  4538                           ;main.c: 495:     if (tick_count == 100) {
  4539  0292  3064               	movlw	100
  4540  0293  0623               	xorwf	ms_tick@tick_count,w
  4541  0294  0424               	iorwf	ms_tick@tick_count+1,w
  4542  0295  1D03               	btfss	3,2
  4543  0296  2A98               	goto	u96_21
  4544  0297  2A99               	goto	u96_20
  4545  0298                     u96_21:
  4546  0298  2A9C               	goto	i1l1971
  4547  0299                     u96_20:
  4548  0299                     i1l1967:
  4549                           
  4550                           ;main.c: 496:         FF.bits.ALLOW_MEASURE = 1;
  4551  0299  1677               	bsf	_FF,4
  4552  029A                     i1l1969:
  4553                           
  4554                           ;main.c: 497:         tick_count = 0;
  4555  029A  01A3               	clrf	ms_tick@tick_count
  4556  029B  01A4               	clrf	ms_tick@tick_count+1
  4557  029C                     i1l1971:
  4558                           
  4559                           ;main.c: 500:     if (tick_count == 1000) {
  4560  029C  30E8               	movlw	232
  4561  029D  0623               	xorwf	ms_tick@tick_count,w
  4562  029E  3003               	movlw	3
  4563  029F  1903               	skipnz
  4564  02A0  0624               	xorwf	ms_tick@tick_count+1,w
  4565  02A1  1D03               	btfss	3,2
  4566  02A2  2AA4               	goto	u97_21
  4567  02A3  2AA5               	goto	u97_20
  4568  02A4                     u97_21:
  4569  02A4  2AAB               	goto	i1l476
  4570  02A5                     u97_20:
  4571  02A5                     i1l1973:
  4572                           
  4573                           ;main.c: 501:         sec_tick_work();
  4574  02A5  3180  2082  3182   	fcall	_sec_tick_work
  4575  02A8                     i1l1975:
  4576                           
  4577                           ;main.c: 502:         tick_count = 0;
  4578  02A8  0020               	movlb	0	; select bank0
  4579  02A9  01A3               	clrf	ms_tick@tick_count
  4580  02AA  01A4               	clrf	ms_tick@tick_count+1
  4581  02AB                     i1l476:
  4582  02AB  0008               	return
  4583  02AC                     __end_of_ms_tick:
  4584                           
  4585                           	psect	text35
  4586  0082                     __ptext35:	
  4587 ;; *************** function _sec_tick_work *****************
  4588 ;; Defined at:
  4589 ;;		line 390 in file "main.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;		None
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;		None
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      void 
  4596 ;; Registers used:
  4597 ;;		wreg, status,2, status,0, pclath, cstack
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMMON   BANK0   BANK1
  4603 ;;      Params:         0       0       0
  4604 ;;      Locals:         0       0       0
  4605 ;;      Temps:          1       0       0
  4606 ;;      Totals:         1       0       0
  4607 ;;Total ram usage:        1 bytes
  4608 ;; Hardware stack levels used: 1
  4609 ;; Hardware stack levels required when called: 2
  4610 ;; This function calls:
  4611 ;;		_rele_tick
  4612 ;;		_toggle_zummer
  4613 ;; This function is called by:
  4614 ;;		_ms_tick
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618  0082                     _sec_tick_work:	
  4619                           ;psect for function _sec_tick_work
  4620                           
  4621  0082                     i1l1851:	
  4622                           ;incstack = 0
  4623                           ; Regs used in _sec_tick_work: [wreg+status,2+status,0+pclath+cstack]
  4624                           
  4625                           
  4626                           ;main.c: 394:     if (!FF.bits.CLOSED) time_rotation++;
  4627  0082  1978               	btfsc	_FF+1,2
  4628  0083  2885               	goto	u80_21
  4629  0084  2886               	goto	u80_20
  4630  0085                     u80_21:
  4631  0085  2891               	goto	i1l1855
  4632  0086                     u80_20:
  4633  0086                     i1l1853:
  4634  0086  3001               	movlw	1
  4635  0087  0020               	movlb	0	; select bank0
  4636  0088  07A0               	addwf	_time_rotation,f
  4637  0089  3000               	movlw	0
  4638  008A  1803               	skipnc
  4639  008B  3001               	movlw	1
  4640  008C  07A1               	addwf	_time_rotation+1,f
  4641  008D  3000               	movlw	0
  4642  008E  1803               	skipnc
  4643  008F  3001               	movlw	1
  4644  0090  07A2               	addwf	_time_rotation+2,f
  4645  0091                     i1l1855:
  4646                           
  4647                           ;main.c: 395:     rele_tick();
  4648  0091  3181  21A7  3180   	fcall	_rele_tick
  4649  0094                     i1l1857:
  4650                           
  4651                           ;main.c: 397:     if (FF.bits.ALARM) {
  4652  0094  1C77               	btfss	_FF,0
  4653  0095  2897               	goto	u81_21
  4654  0096  2898               	goto	u81_20
  4655  0097                     u81_21:
  4656  0097  28A8               	goto	i1l1863
  4657  0098                     u81_20:
  4658  0098                     i1l1859:
  4659  0098  1003               	clrc
  4660  0099  0022               	movlb	2	; select bank2
  4661  009A  1E0C               	btfss	12,4	;volatile
  4662  009B  1403               	setc
  4663  009C  1803               	btfsc	3,0
  4664  009D  289F               	goto	u82_21
  4665  009E  28A2               	goto	u82_20
  4666  009F                     u82_21:
  4667  009F  0022               	movlb	2	; select bank2
  4668  00A0  160C               	bsf	12,4	;volatile
  4669  00A1  28A4               	goto	u83_24
  4670  00A2                     u82_20:
  4671  00A2  0022               	movlb	2	; select bank2
  4672  00A3  120C               	bcf	12,4	;volatile
  4673  00A4                     u83_24:
  4674  00A4                     i1l1861:
  4675                           
  4676                           ;main.c: 401:         toggle_zummer();
  4677  00A4  3183  23E2  3180   	fcall	_toggle_zummer
  4678                           
  4679                           ;main.c: 403:     } else {
  4680  00A7  28C1               	goto	i1l448
  4681  00A8                     i1l1863:
  4682                           
  4683                           ;main.c: 405:         static char iled;;main.c: 406:         iled++;
  4684  00A8  3001               	movlw	1
  4685  00A9  00F2               	movwf	??_sec_tick_work
  4686  00AA  0872               	movf	??_sec_tick_work,w
  4687  00AB  0020               	movlb	0	; select bank0
  4688  00AC  07B3               	addwf	sec_tick_work@iled,f
  4689  00AD                     i1l1865:
  4690                           
  4691                           ;main.c: 407:         if (iled > 2) {
  4692  00AD  3003               	movlw	3
  4693  00AE  0233               	subwf	sec_tick_work@iled,w
  4694  00AF  1C03               	skipc
  4695  00B0  28B2               	goto	u84_21
  4696  00B1  28B3               	goto	u84_20
  4697  00B2                     u84_21:
  4698  00B2  28C1               	goto	i1l448
  4699  00B3                     u84_20:
  4700  00B3                     i1l1867:
  4701  00B3  1003               	clrc
  4702  00B4  0022               	movlb	2	; select bank2
  4703  00B5  1E0C               	btfss	12,4	;volatile
  4704  00B6  1403               	setc
  4705  00B7  1803               	btfsc	3,0
  4706  00B8  28BA               	goto	u85_21
  4707  00B9  28BD               	goto	u85_20
  4708  00BA                     u85_21:
  4709  00BA  0022               	movlb	2	; select bank2
  4710  00BB  160C               	bsf	12,4	;volatile
  4711  00BC  28BF               	goto	u86_24
  4712  00BD                     u85_20:
  4713  00BD  0022               	movlb	2	; select bank2
  4714  00BE  120C               	bcf	12,4	;volatile
  4715  00BF                     u86_24:
  4716  00BF                     i1l1869:
  4717                           
  4718                           ;main.c: 409:             iled = 0;
  4719  00BF  0020               	movlb	0	; select bank0
  4720  00C0  01B3               	clrf	sec_tick_work@iled
  4721  00C1                     i1l448:
  4722  00C1  0008               	return
  4723  00C2                     __end_of_sec_tick_work:
  4724                           
  4725                           	psect	text36
  4726  01A7                     __ptext36:	
  4727 ;; *************** function _rele_tick *****************
  4728 ;; Defined at:
  4729 ;;		line 366 in file "main.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;		None
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;		None
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		wreg, status,2, status,0, pclath, cstack
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMMON   BANK0   BANK1
  4743 ;;      Params:         0       0       0
  4744 ;;      Locals:         0       0       0
  4745 ;;      Temps:          2       0       0
  4746 ;;      Totals:         2       0       0
  4747 ;;Total ram usage:        2 bytes
  4748 ;; Hardware stack levels used: 1
  4749 ;; Hardware stack levels required when called: 1
  4750 ;; This function calls:
  4751 ;;		_toggle_zummer
  4752 ;; This function is called by:
  4753 ;;		_sec_tick_work
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757  01A7                     _rele_tick:	
  4758                           ;psect for function _rele_tick
  4759                           
  4760  01A7                     i1l1763:	
  4761                           ;incstack = 0
  4762                           ; Regs used in _rele_tick: [wreg+status,2+status,0+pclath+cstack]
  4763                           
  4764                           
  4765                           ;main.c: 367:     toggle_zummer();
  4766  01A7  3183  23E2  3181   	fcall	_toggle_zummer
  4767  01AA                     i1l1765:
  4768                           
  4769                           ;main.c: 368:     if (FF.bits.RELE_POWER_WAIT) {
  4770  01AA  1EF7               	btfss	_FF,5
  4771  01AB  29AD               	goto	u77_21
  4772  01AC  29AE               	goto	u77_20
  4773  01AD                     u77_21:
  4774  01AD  29D8               	goto	i1l435
  4775  01AE                     u77_20:
  4776  01AE                     i1l1767:
  4777                           
  4778                           ;main.c: 369:         if (time_rele_power > 0) {
  4779  01AE  0020               	movlb	0	; select bank0
  4780  01AF  082F               	movf	_time_rele_power,w
  4781  01B0  0430               	iorwf	_time_rele_power+1,w
  4782  01B1  1903               	btfsc	3,2
  4783  01B2  29B4               	goto	u78_21
  4784  01B3  29B5               	goto	u78_20
  4785  01B4                     u78_21:
  4786  01B4  29BA               	goto	i1l425
  4787  01B5                     u78_20:
  4788  01B5                     i1l1769:
  4789                           
  4790                           ;main.c: 370:             time_rele_power--;
  4791  01B5  3001               	movlw	1
  4792  01B6  02AF               	subwf	_time_rele_power,f
  4793  01B7  3000               	movlw	0
  4794  01B8  3BB0               	subwfb	_time_rele_power+1,f
  4795                           
  4796                           ;main.c: 371:         } else {
  4797  01B9  29D8               	goto	i1l435
  4798  01BA                     i1l425:
  4799                           
  4800                           ;main.c: 372:             if (FF.bits.RELE_CONTROL_WAIT) {
  4801  01BA  1F77               	btfss	_FF,6
  4802  01BB  29BD               	goto	u79_21
  4803  01BC  29BE               	goto	u79_20
  4804  01BD                     u79_21:
  4805  01BD  29D3               	goto	i1l433
  4806  01BE                     u79_20:
  4807  01BE                     i1l428:	
  4808                           ;main.c: 373:                 do { LATCbits.LATC5 = 0; } while(0);
  4809                           
  4810  01BE  0022               	movlb	2	; select bank2
  4811  01BF  128E               	bcf	14,5	;volatile
  4812  01C0                     i1l1771:
  4813                           
  4814                           ;main.c: 374:                 _delay((unsigned long)((2 * 1000)*(16000000/4000.0)));
  4815  01C0  3029               	movlw	41
  4816  01C1  00F1               	movwf	??_rele_tick+1
  4817  01C2  3096               	movlw	150
  4818  01C3  00F0               	movwf	??_rele_tick
  4819  01C4  307F               	movlw	127
  4820  01C5                     u186_27:
  4821  01C5  0B89               	decfsz	9,f
  4822  01C6  29C5               	goto	u186_27
  4823  01C7  0BF0               	decfsz	??_rele_tick,f
  4824  01C8  29C5               	goto	u186_27
  4825  01C9  0BF1               	decfsz	??_rele_tick+1,f
  4826  01CA  29C5               	goto	u186_27
  4827  01CB  0000               	nop
  4828  01CC                     i1l1773:
  4829  01CC  0022               	movlb	2	; select bank2
  4830  01CD  120E               	bcf	14,4	;volatile
  4831  01CE                     i1l1775:
  4832                           
  4833                           ;main.c: 376:                 FF.bits.CLOSING = 0;
  4834  01CE  10F8               	bcf	_FF+1,1
  4835  01CF                     i1l1777:
  4836                           
  4837                           ;main.c: 377:                 FF.bits.CLOSED = 1;
  4838  01CF  1578               	bsf	_FF+1,2
  4839  01D0                     i1l1779:
  4840                           
  4841                           ;main.c: 378:                 FF.bits.RELE_CONTROL_WAIT = 0;
  4842  01D0  1377               	bcf	_FF,6
  4843  01D1                     i1l1781:
  4844                           
  4845                           ;main.c: 379:                 FF.bits.RELE_POWER_WAIT = 0;
  4846  01D1  12F7               	bcf	_FF,5
  4847                           
  4848                           ;main.c: 380:             } else {
  4849  01D2  29D8               	goto	i1l435
  4850  01D3                     i1l433:	
  4851                           ;main.c: 381:                 do { LATCbits.LATC5 = 0; } while(0);
  4852                           
  4853  01D3  0022               	movlb	2	; select bank2
  4854  01D4  128E               	bcf	14,5	;volatile
  4855  01D5                     i1l434:
  4856                           
  4857                           ;main.c: 382:                 FF.bits.OPENING = 0;
  4858  01D5  13F7               	bcf	_FF,7
  4859                           
  4860                           ;main.c: 383:                 FF.bits.CLOSED = 0;
  4861  01D6  1178               	bcf	_FF+1,2
  4862                           
  4863                           ;main.c: 384:                 FF.bits.RELE_POWER_WAIT = 0;
  4864  01D7  12F7               	bcf	_FF,5
  4865  01D8                     i1l435:
  4866  01D8  0008               	return
  4867  01D9                     __end_of_rele_tick:
  4868                           
  4869                           	psect	text37
  4870  03E2                     __ptext37:	
  4871 ;; *************** function _toggle_zummer *****************
  4872 ;; Defined at:
  4873 ;;		line 106 in file "main.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;		None
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;		None
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  1    wreg      void 
  4880 ;; Registers used:
  4881 ;;		None
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMMON   BANK0   BANK1
  4887 ;;      Params:         0       0       0
  4888 ;;      Locals:         0       0       0
  4889 ;;      Temps:          0       0       0
  4890 ;;      Totals:         0       0       0
  4891 ;;Total ram usage:        0 bytes
  4892 ;; Hardware stack levels used: 1
  4893 ;; This function calls:
  4894 ;;		Nothing
  4895 ;; This function is called by:
  4896 ;;		_rele_tick
  4897 ;;		_sec_tick_work
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901  03E2                     _toggle_zummer:	
  4902                           ;psect for function _toggle_zummer
  4903                           
  4904  03E2                     i1l271:	
  4905                           ;incstack = 0
  4906                           ; Regs used in _toggle_zummer: []
  4907                           ;main.c: 107:     do { LATAbits.LATA5 = 1; } while(0);
  4908                           
  4909  03E2  0022               	movlb	2	; select bank2
  4910  03E3  168C               	bsf	12,5	;volatile
  4911  03E4                     i1l273:	
  4912                           ;main.c: 108:     do { LATAbits.LATA5 = 0; } while(0);
  4913                           
  4914  03E4  128C               	bcf	12,5	;volatile
  4915  03E5                     i1l275:
  4916  03E5  0008               	return
  4917  03E6                     __end_of_toggle_zummer:
  4918                           
  4919                           	psect	text38
  4920  0360                     __ptext38:	
  4921 ;; *************** function _TMR0_ISR *****************
  4922 ;; Defined at:
  4923 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  4924 ;; Parameters:    Size  Location     Type
  4925 ;;		None
  4926 ;; Auto vars:     Size  Location     Type
  4927 ;;		None
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  1    wreg      void 
  4930 ;; Registers used:
  4931 ;;		wreg, status,2, status,0, pclath, cstack
  4932 ;; Tracked objects:
  4933 ;;		On entry : 0/0
  4934 ;;		On exit  : 0/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMMON   BANK0   BANK1
  4937 ;;      Params:         0       0       0
  4938 ;;      Locals:         0       0       0
  4939 ;;      Temps:          0       0       0
  4940 ;;      Totals:         0       0       0
  4941 ;;Total ram usage:        0 bytes
  4942 ;; Hardware stack levels used: 1
  4943 ;; Hardware stack levels required when called: 1
  4944 ;; This function calls:
  4945 ;;		Absolute function
  4946 ;;		_TMR0_DefaultInterruptHandler
  4947 ;;		_timer0_switch
  4948 ;; This function is called by:
  4949 ;;		_INTERRUPT_InterruptManager
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953  0360                     _TMR0_ISR:	
  4954                           ;psect for function _TMR0_ISR
  4955                           
  4956  0360                     i1l1983:	
  4957                           ;incstack = 0
  4958                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  4959                           
  4960                           
  4961                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  4962  0360  110B               	bcf	11,2	;volatile
  4963  0361                     i1l1985:
  4964                           
  4965                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  4966  0361  087A               	movf	_timer0ReloadVal,w	;volatile
  4967  0362  0020               	movlb	0	; select bank0
  4968  0363  0095               	movwf	21	;volatile
  4969  0364                     i1l1987:
  4970                           
  4971                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  4972  0364  083D               	movf	_TMR0_InterruptHandler,w
  4973  0365  043E               	iorwf	_TMR0_InterruptHandler+1,w
  4974  0366  1903               	btfsc	3,2
  4975  0367  2B69               	goto	u99_21
  4976  0368  2B6A               	goto	u99_20
  4977  0369                     u99_21:
  4978  0369  2B6F               	goto	i1l190
  4979  036A                     u99_20:
  4980  036A                     i1l1989:
  4981                           
  4982                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  4983  036A  083E               	movf	_TMR0_InterruptHandler+1,w
  4984  036B  008A               	movwf	10
  4985  036C  083D               	movf	_TMR0_InterruptHandler,w
  4986  036D  000A               	callw
  4987  036E  3183               	pagesel	$
  4988  036F                     i1l190:
  4989  036F  0008               	return
  4990  0370                     __end_of_TMR0_ISR:
  4991                           
  4992                           	psect	text39
  4993  03F7                     __ptext39:	
  4994 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4995 ;; Defined at:
  4996 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;		None
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;		None
  5001 ;; Return value:  Size  Location     Type
  5002 ;;                  1    wreg      void 
  5003 ;; Registers used:
  5004 ;;		None
  5005 ;; Tracked objects:
  5006 ;;		On entry : 0/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMMON   BANK0   BANK1
  5010 ;;      Params:         0       0       0
  5011 ;;      Locals:         0       0       0
  5012 ;;      Temps:          0       0       0
  5013 ;;      Totals:         0       0       0
  5014 ;;Total ram usage:        0 bytes
  5015 ;; Hardware stack levels used: 1
  5016 ;; This function calls:
  5017 ;;		Nothing
  5018 ;; This function is called by:
  5019 ;;		_TMR0_Initialize
  5020 ;;		_TMR0_ISR
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024  03F7                     _TMR0_DefaultInterruptHandler:	
  5025                           ;psect for function _TMR0_DefaultInterruptHandler
  5026                           
  5027  03F7                     i1l196:	
  5028                           ;incstack = 0
  5029                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  5030                           
  5031  03F7  0008               	return
  5032  03F8                     __end_of_TMR0_DefaultInterruptHandler:
  5033                           
  5034                           	psect	text40
  5035  039C                     __ptext40:	
  5036 ;; *************** function _timer0_switch *****************
  5037 ;; Defined at:
  5038 ;;		line 119 in file "main.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;		None
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;		None
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  1    wreg      void 
  5045 ;; Registers used:
  5046 ;;		status,0
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMMON   BANK0   BANK1
  5052 ;;      Params:         0       0       0
  5053 ;;      Locals:         0       0       0
  5054 ;;      Temps:          0       0       0
  5055 ;;      Totals:         0       0       0
  5056 ;;Total ram usage:        0 bytes
  5057 ;; Hardware stack levels used: 1
  5058 ;; This function calls:
  5059 ;;		Nothing
  5060 ;; This function is called by:
  5061 ;;		_start_setup
  5062 ;;		_TMR0_ISR
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066  039C                     _timer0_switch:	
  5067                           ;psect for function _timer0_switch
  5068                           
  5069  039C                     i1l278:	
  5070                           ;incstack = 0
  5071                           ; Regs used in _timer0_switch: [status,0]
  5072                           ;main.c: 120:     do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  5073                           
  5074  039C                     i1l1919:
  5075  039C  1003               	clrc
  5076  039D  0022               	movlb	2	; select bank2
  5077  039E  1E8C               	btfss	12,5	;volatile
  5078  039F  1403               	setc
  5079  03A0  1803               	btfsc	3,0
  5080  03A1  2BA3               	goto	u93_21
  5081  03A2  2BA6               	goto	u93_20
  5082  03A3                     u93_21:
  5083  03A3  0022               	movlb	2	; select bank2
  5084  03A4  168C               	bsf	12,5	;volatile
  5085  03A5  2BA8               	goto	u94_24
  5086  03A6                     u93_20:
  5087  03A6  0022               	movlb	2	; select bank2
  5088  03A7  128C               	bcf	12,5	;volatile
  5089  03A8                     u94_24:
  5090  03A8                     i1l280:
  5091  03A8  0008               	return
  5092  03A9                     __end_of_timer0_switch:
  5093  007E                     btemp	set	126	;btemp
  5094  007E                     int$flags	set	126
  5095  007E                     wtemp0	set	126
  5096                           
  5097                           	psect	idloc
  5098                           
  5099                           ;Config register IDLOC0 @ 0x8000
  5100                           ;	unspecified, using default values
  5101  8000                     	org	32768
  5102  8000  3FFF               	dw	16383
  5103                           
  5104                           ;Config register IDLOC1 @ 0x8001
  5105                           ;	unspecified, using default values
  5106  8001                     	org	32769
  5107  8001  3FFF               	dw	16383
  5108                           
  5109                           ;Config register IDLOC2 @ 0x8002
  5110                           ;	unspecified, using default values
  5111  8002                     	org	32770
  5112  8002  3FFF               	dw	16383
  5113                           
  5114                           ;Config register IDLOC3 @ 0x8003
  5115                           ;	unspecified, using default values
  5116  8003                     	org	32771
  5117  8003  3FFF               	dw	16383
  5118                           
  5119                           	psect	config
  5120                           
  5121                           ;Config register CONFIG1 @ 0x8007
  5122                           ;	Oscillator Selection
  5123                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5124                           ;	Watchdog Timer Enable
  5125                           ;	WDTE = ON, WDT enabled
  5126                           ;	Power-up Timer Enable
  5127                           ;	PWRTE = ON, PWRT enabled
  5128                           ;	MCLR Pin Function Select
  5129                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5130                           ;	Flash Program Memory Code Protection
  5131                           ;	CP = OFF, Program memory code protection is disabled
  5132                           ;	Data Memory Code Protection
  5133                           ;	CPD = OFF, Data memory code protection is disabled
  5134                           ;	Brown-out Reset Enable
  5135                           ;	BOREN = ON, Brown-out Reset enabled
  5136                           ;	Clock Out Enable
  5137                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5138                           ;	Internal/External Switchover
  5139                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5140                           ;	Fail-Safe Clock Monitor Enable
  5141                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5142  8007                     	org	32775
  5143  8007  3FDC               	dw	16348
  5144                           
  5145                           ;Config register CONFIG2 @ 0x8008
  5146                           ;	Flash Memory Self-Write Protection
  5147                           ;	WRT = OFF, Write protection off
  5148                           ;	PLL Enable
  5149                           ;	PLLEN = OFF, 4x PLL disabled
  5150                           ;	Stack Overflow/Underflow Reset Enable
  5151                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5152                           ;	Brown-out Reset Voltage Selection
  5153                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5154                           ;	Low-Voltage Programming Enable
  5155                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5156  8008                     	org	32776
  5157  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         33
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      3      36
    BANK1            32      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0_switch(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0_switch(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ms_tick(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ms_tick(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_get_measure
    _switch_wm->_beep_long
    _start_setup->_eeprom_set
    _eeprom_set->_EEPROM_ReadByte
    _eeprom_set->_EEPROM_WriteByte
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _povorot->_go_close_short
    _get_measure->_ADC_GetConversion
    _start_alarm->_go_close
    _fun_work->_beep_short
    _fun_work->_go_close

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _ms_tick->_sec_tick_work
    _sec_tick_work->_rele_tick

Critical Paths under _main in BANK0

    _start_setup->_eeprom_set
    _eeprom_set->_EEPROM_WriteByte

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1627
                           _fun_work
                            _get_fun
                           _get_jump
                        _get_measure
                            _povorot
                        _start_setup
                          _switch_wm
 ---------------------------------------------------------------------------------
 (1) _switch_wm                                            0     0      0      22
                          _beep_long
 ---------------------------------------------------------------------------------
 (2) _beep_long                                            2     2      0      22
                                              3 COMMON     2     2      0
                         _start_tone
 ---------------------------------------------------------------------------------
 (1) _start_setup                                          0     0      0    1487
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                         _eeprom_set
 ---------------------------------------------------------------------------------
 (2) _eeprom_set                                           2     2      0     791
                                              6 COMMON     1     1      0
                                              2 BANK0      1     1      0
                    _EEPROM_ReadByte
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_WriteByte                                     5     4      1     726
                                              3 COMMON     3     2      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _EEPROM_ReadByte                                      3     3      0      31
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     348
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     174
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     174
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _povorot                                              0     0      0       0
                     _go_close_short
                            _go_open
 ---------------------------------------------------------------------------------
 (2) _go_close_short                                       2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_measure                                          4     4      0      96
                                              5 COMMON     2     2      0
                                              0 BANK0      2     2      0
                  _ADC_GetConversion
                        _start_alarm
 ---------------------------------------------------------------------------------
 (2) _start_alarm                                          0     0      0       0
                           _go_close
                       _go_close_alt
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    2     2      0      31
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_jump                                             1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_fun                                              1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _fun_work                                             0     0      0      22
                         _beep_short
                           _go_close
                       _go_close_alt
                            _go_open
                        _go_open_alt
 ---------------------------------------------------------------------------------
 (2) _go_open_alt                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_open                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _go_close_alt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _go_close                                             2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _beep_short                                           2     2      0      22
                                              3 COMMON     2     2      0
                         _start_tone
 ---------------------------------------------------------------------------------
 (3) _start_tone                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                            _ms_tick *
 ---------------------------------------------------------------------------------
 (7) _ms_tick                                              0     0      0       0
                      _sec_tick_work
 ---------------------------------------------------------------------------------
 (8) _sec_tick_work                                        1     1      0       0
                                              2 COMMON     1     1      0
                          _rele_tick
                      _toggle_zummer
 ---------------------------------------------------------------------------------
 (9) _rele_tick                                            2     2      0       0
                                              0 COMMON     2     2      0
                      _toggle_zummer
 ---------------------------------------------------------------------------------
 (9) _toggle_zummer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _timer0_switch *
 ---------------------------------------------------------------------------------
 (7) _timer0_switch                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _fun_work
     _beep_short
       _start_tone
     _go_close
     _go_close_alt
     _go_open
     _go_open_alt
   _get_fun
   _get_jump
   _get_measure
     _ADC_GetConversion
     _start_alarm
       _go_close
       _go_close_alt
   _povorot
     _go_close_short
     _go_open
   _start_setup
     _SYSTEM_Initialize
       _ADC_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR2_Initialize
         _TMR2_SetInterruptHandler
       _WDT_Initialize
     _TMR0_SetInterruptHandler
     _TMR2_SetInterruptHandler
     _TMR2_StartTimer
     _eeprom_set
       _EEPROM_ReadByte
       _EEPROM_WriteByte
   _switch_wm
     _beep_long
       _start_tone

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _timer0_switch *
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _ms_tick *
       _sec_tick_work
         _rele_tick
           _toggle_zummer
         _toggle_zummer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      3      24       6       45.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      2F       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu May 12 13:05:38 2022

        __end_of_TMR2_SetInterruptHandler 03CE                        get_fun@fun_counter 0037  
                   __end_of_sec_tick_work 00C2                                        l23 032B  
                                      l26 03C1                                        l61 02D6  
                                      l29 03E1                                        l46 03BA  
                                      _FF 0077                                        l64 02DB  
                                      l90 02F0                                        _RD 0CA8  
                                      _WR 0CA9                             ?_go_close_alt 0070  
                         _timer0ReloadVal 007A                                       l300 0285  
                                     l301 028C                                       l311 03A9  
                                     l135 033D                                       l320 03DC  
                                     l313 03AB                                       l322 03DD  
                                     l138 03E8                                       l315 03B2  
                                     l307 0265                                       l332 0351  
                                     l308 026C                                       l325 03D5  
                                     l405 0204                                       l333 0353  
                                     l341 00C2                                       l157 03CD  
                                     l318 03DA                                       l327 03D7  
                                     l343 00C4                                       l336 035F  
                                     l512 0247                                       l329 03D8  
                                     l353 00FF                                       l193 03D3  
                                     l177 034F                                       l505 01A6  
                                     l283 03EB                                       l291 038D  
                                     l371 0173                                       l532 0207  
                                     l453 0081                                       l541 0318  
                                     l462 013A                                       l358 013B  
                                     l294 037E                                       l535 022B  
                                     l480 0304                                       l465 02BA  
                                     l538 0306                                       l396 01D9  
                                     l469 02C3                                       l398 01DB  
                                     l399 01DD                                       _GIE 005F  
                             _start_alarm 0350                                       _PR2 001B  
                             _start_setup 0174                              ?_go_open_alt 0070  
                         _TMR2_Initialize 032C                                       wreg 0009  
                                    l2021 0145                                      l2031 0157  
                                    l2023 0147                                      l2041 016E  
                                    l2033 0159                                      l2025 0149  
                                    l2121 02AC                                      l2043 0172  
                                    l2035 0161                                      l2027 014E  
                                    l2019 013D                                      l2051 01EB  
                                    l2131 02BF                                      l2123 02B0  
                                    l2301 026D                                      l2037 0165  
                                    l2029 0153                                      l2061 0203  
                                    l2053 01F2                                      l2125 02B4  
                                    l2311 028B                                      l2303 0274  
                                    l2039 0167                                      l2055 01F6  
                                    l2047 01E2                                      l2071 004D  
                                    l2127 02B5                                      l2305 0276  
                                    l2401 010C                                      l2057 01F8  
                                    l2049 01E7                                      l2081 006B  
                                    l2073 0051                                      l2065 0036  
                                    l2321 030F                                      l2129 02BE  
                                    l2307 0283                                      l2315 03D9  
                                    l2403 0110                                      l2411 011F  
                                    l2059 01FF                                      l2083 006F  
                                    l2075 0055                                      l2067 0045  
                                    l2323 0316                                      l2331 0211  
                                    l2309 028A                                      l2421 0133  
                                    l2413 0123                                      l2405 0114  
                                    l2085 0073                                      l2069 0049  
                                    l2077 0058                                      l2317 0306  
                                    l2341 021F                                      l2333 0212  
                                    l2423 0137                                      l2415 0127  
                                    l2407 0118                                      l2351 02CF  
                                    l2087 0077                                      l2079 0067  
                                    l2319 030B                                      l2343 0221  
                                    l2335 021A                                      l2327 0207  
                                    l2431 018A                                      l1377 03D4  
                                    l2417 012B                                      l2409 011C  
                                    l2353 02D0                                      l2361 0350  
                                    l2089 007A                                      l1801 03DE  
                                    l2345 0222                                      l2337 021C  
                                    l2329 020C                                      l2441 0193  
                                    l2433 018D                                      l2425 0174  
                                    l2419 012F                                      l2355 02D4  
                                    l2363 0358                                      l1811 0333  
                                    l1803 032C                                      l2347 0229  
                                    l2339 021D                                      l2371 02FE  
                                    l2451 019C                                      l2443 0195  
                                    l2435 018F                                      l2427 0177  
                                    l2357 02DA                                      l2349 02C5  
                                    l2365 035C                                      l2381 00DD  
                                    l2373 00C6                                      l1821 033E  
                                    l1813 033A                                      l1805 032F  
                                    l2461 01A3                                      l2453 019D  
                                    l2445 0197                                      l2437 0190  
                                    l2429 0178                                      l2391 00FC  
                                    l2383 00E7                                      l2375 00CE  
                                    l1815 03B3                                      l1831 0348  
                                    l1823 0343                                      l1807 0330  
                                    l1903 0319                                      l2367 02F1  
                                    l2455 019F                                      l2447 0199  
                                    l2439 0191                                      l1833 03E9  
                                    l1921 0380                                      l2385 00EC  
                                    l2377 00D9                                      l1817 03B6  
                                    l1761 03CE                                      l1825 0345  
                                    l1809 0331                                      l2369 02F9  
                                    l2457 01A0                                      l2449 019A  
                                    l2481 0233                                      l1923 0383  
                                    l2395 0100                                      l2387 00F5  
                                    l2379 00DB                                      l1819 03B7  
                                    l1827 0346                                      l2459 01A1  
                                    l1931 0374                                      l2483 023F  
                                    l1925 0384                                      l2397 0104  
                                    l2389 00F6                                      l1941 0256  
                                    l1829 0347                                      l1917 03E6  
                                    l1933 0375                                      l2485 0243  
                                    l2477 022C                                      l1927 0389  
                                    l1951 03AC                                      l2399 0108  
                                    l1943 0263                                      l1791 02E7  
                                    l1783 02DC                                      l1759 03C8  
                                    l1935 037A                                      l2487 0246  
                                    l2479 022F                                      l1953 03B1  
                                    l1945 026A                                      l1937 024D  
                                    l1793 02EC                                      l1785 02DF  
                                    l1929 0371                                      l1947 026B  
                                    l1939 0254                                      l1795 03BB  
                                    l1787 02E2                                      l1797 03BE  
                                    l1789 02E4                                      l1799 03BF  
                                    u1100 0045                                      u1101 0044  
                                    u1110 0049                                      u1111 0048  
                                    u1040 014E                                      u1120 004D  
                                    u1041 014D                                      u1121 004C  
                                    u1105 0041                                      u1050 0161  
                                    u1130 0051                                      u1051 0160  
                                    u1131 0050                                      u1060 016E  
                                    u1140 0055                                      u1300 02B4  
                                    u1061 016D                                      u1141 0054  
                                    u1301 02B3                                      u1070 01E2  
                                    u1150 0067                                      u1310 02BE  
                                    u1071 01E1                                      u1151 0066  
                                    u1311 02BD                                      u1080 01F2  
                                    u1160 006B                                      u1081 01F1  
                                    u1161 006A                                      u1090 01FF  
                                    u1170 006F                                      u1091 01FE  
                                    u1171 006E                                      u1155 0063  
                                    u1180 0073                                      u1181 0072  
                                    _LATA 010C                                      u1190 0077  
                                    u1191 0076                                      _LATC 010E  
                                    u1600 02FE                                      u1601 02FD  
                                    u1610 00E7                                      u1530 030B  
                                    u1290 02B0                                      u1611 00E6  
                                    u1531 030A                                      u1291 02AF  
                                    u1700 0127                                      u1620 00F5  
                                    u1540 030F                                      u1701 0126  
                                    u1621 00F4                                      u1541 030E  
                                    u1710 012B                                      u1630 00FC  
                                    u1550 020C                                      u1711 012A  
                                    u1631 00FB                                      u1551 020B  
                                    u1720 0133                                      u1640 0104  
                                    u1560 0228                                      u1721 0132  
                                    u1641 0103                                      u1561 0226  
                                    u1650 0108                                      u1730 0233  
                                    u1651 0107                                      u1731 0232  
                                    u1660 010C                                      u1580 02DA  
                                    u1740 0243                                      u1661 010B  
                                    u1581 02D9                                      u1741 0242  
                                    u1670 0110                                      u1590 0358  
                                    u1574 0229                                      u1671 010F  
                                    u1591 0357                                      u1680 0118  
                                    u1681 0117                                      u1817 025C  
                                    u1690 0123                                      u1691 0122  
                                    u1827 00C9                                      u1837 02D1  
                                    u1847 0140                                      u1857 027C  
                                    _TMR0 0015                                      _TMR2 001A  
                                    _WREN 0CAA                                      _WPUA 020C  
                                    _WPUC 020E                            ?_toggle_zummer 0070  
                                    _main 022C                                      fsr0h 0005  
                                    indf0 0000                                      fsr0l 0004  
                    EEPROM_WriteByte@addr 0041                                      btemp 007E  
                         ?_go_close_short 0070                                      start 0026  
                 get_fun_full@fun_counter 0036                            ??_go_close_alt 0073  
                 __end_of_TMR0_Initialize 0350            ??_TMR0_DefaultInterruptHandler 0070  
           __end_of_OSCILLATOR_Initialize 03C2                                     ?_main 0070  
                                   _EEADR 0191                                     _T2CON 001C  
                                   i1l113 0024                                     i1l114 0024  
                                   i1l108 0012                                     i1l160 03F6  
                                   i1l154 039B                                     i1l190 036F  
                                   i1l271 03E2                                     i1l280 03A8  
                                   i1l273 03E4                                     i1l433 01D3  
                                   i1l425 01BA                                     i1l434 01D5  
                                   i1l275 03E5                                     i1l435 01D8  
                                   i1l196 03F7                                     i1l428 01BE  
                                   i1l278 039C                                     i1l448 00C1  
                                   i1l476 02AB                                     u80_20 0086  
                                   u80_21 0085                                     u81_20 0098  
                                   u81_21 0097                                     _TRISA 008C  
                                   _TRISC 008E                                     u82_20 00A2  
                                   u82_21 009F                                     u83_24 00A4  
                                   u84_20 00B3                                     u84_21 00B2  
                                   u93_20 03A6                                     u77_20 01AE  
                                   u85_20 00BD                                     u93_21 03A3  
                                   u77_21 01AD                                     u85_21 00BA  
                                   u78_20 01B5                                     u78_21 01B4  
                                   u94_24 03A8                                     u86_24 00BF  
                                   u79_20 01BE                                     u79_21 01BD  
                                   u96_20 0299                                     u96_21 0298  
                                   u97_20 02A5                                     u97_21 02A4  
                                   u99_20 036A                                     u99_21 0369  
               ?_TMR0_SetInterruptHandler 0073                          __end_of_TMR0_ISR 0370  
                         __end_of_get_fun 0174                          __end_of_TMR2_ISR 039C  
                         __end_of_go_open 03B3                            _WDT_Initialize 03DE  
                         __end_of_ms_tick 02AC                                     pclath 000A  
                         __end_of_povorot 0082                                     status 0003  
                                   wtemp0 007E                         ms_tick@tick_count 0023  
                         _TMR2_StartTimer 03E6                           __initialization 0027  
                            __end_of_main 024D                   __end_of_TMR2_Initialize 033E  
             ?_INTERRUPT_InterruptManager 0070                  _TMR2_SetInterruptHandler 03C8  
                                  ??_main 0077                    __end_of_WDT_Initialize 03E2  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _ADRESH 009C                                    _ADRESL 009B  
                                  _EEDATA 0193                                    _EECON2 0196  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  _ANSELC 018E                           ??_toggle_zummer 0070  
                                  _BORCON 0116                                    u100_20 0396  
                                  u100_21 0395                                    i1l2191 0016  
                                  i1l2193 001B                                    i1l2185 0006  
                                  i1l2195 0020                                    i1l2187 000A  
                                  i1l2189 000E                                    i1l1771 01C0  
                                  i1l1763 01A7                                    i1l1851 0082  
                                  i1l1781 01D1                                    i1l1773 01CC  
                                  i1l1765 01AA                                    i1l1861 00A4  
                                  i1l1853 0086                                    i1l1919 039C  
                                  i1l1775 01CE                                    i1l1767 01AE  
                                  i1l1863 00A8                                    i1l1855 0091  
                                  i1l1777 01CF                                    i1l1769 01B5  
                                  i1l1865 00AD                                    i1l1857 0094  
                                  i1l1779 01D0                                    i1l1867 00B3  
                                  i1l1859 0098                                    i1l1971 029C  
                                  i1l1963 028D                                    i1l1869 00BF  
                                  i1l1973 02A5                                    i1l1965 0292  
                                  i1l1983 0360                                    i1l1975 02A8  
                                  i1l1967 0299                                    i1l1991 038E  
                                  u132_20 000A                                    i1l1985 0361  
                                  i1l1969 029A                                    i1l1993 0390  
                                  u132_21 0009                                    i1l1987 0364  
                                  i1l1995 0396                                    i1l1989 036A  
                                  u133_20 000E                                    u133_21 000D  
                                  u134_20 0016                                    u134_21 0015  
                                  u135_20 001B                                    u135_21 001A  
                                  u136_20 0020                                    u136_21 001F  
                                  u186_27 01C5                          _GOOD_WSP_VOLTAGE 03EC  
                                  _OSCCON 0099                                    _WDTCON 0097  
                        __end_of_get_jump 0205                          __end_of_go_close 028D  
                        ?_TMR0_Initialize 0070                         ??_EEPROM_ReadByte 0073  
                        __end_of_fun_work 013B                  __end_of_EEPROM_WriteByte 022C  
                               ??_get_fun 0073                                 ??_go_open 0073  
                               ??_ms_tick 0073                           ?_WDT_Initialize 0070  
                          get_measure@res 0041                    EEPROM_WriteByte@status 0042  
                ADC_GetConversion@channel 0074                     _HIGH_WATER_RESISTANSE 03F2  
                               ??_povorot 0075                   __end_of_TMR2_StartTimer 03E9  
TMR0_SetInterruptHandler@InterruptHandler 0073  TMR2_SetInterruptHandler@InterruptHandler 0073  
                    __end_of_go_close_alt 03DE                         _SYSTEM_Initialize 0319  
                 __end_of__initialization 0033                        ?_SYSTEM_Initialize 0070  
                           _UP_RESISTANSE 03F0                           eeprom_set@adres 0043  
                          __pcstackCOMMON 0070                 get_jump_full@jump_counter 0034  
                     ??_SYSTEM_Initialize 0075                                 ?_TMR0_ISR 0070  
                          beep_long@count 0074                                 ?_TMR2_ISR 0070  
                        ?_TMR2_Initialize 0070                              ?_start_alarm 0070  
                          _OPTION_REGbits 0095                              ?_start_setup 0070  
                              _beep_short 037F                 __end_of_SYSTEM_Initialize 032C  
                        ??_go_close_short 0073                     __end_of_timer0_switch 03A9  
                              __pbssBANK0 0020                                __pmaintext 022C  
        __end_of_TMR0_SetInterruptHandler 03D4                                ??_TMR0_ISR 0070  
                              ??_TMR2_ISR 0073                           _time_rele_power 002F  
                              __pintentry 0004                         _time_rele_control 002D  
                              _eeprom_set 02F1                                   _OSCTUNE 0098  
                       __end_of_beep_long 037F                          ?_TMR2_StartTimer 0070  
                               ?_get_jump 0070                                 ?_go_close 0070  
                               ?_fun_work 0070                      _ADC_InterruptHandler 0031  
              ??_TMR2_SetInterruptHandler 0075                  __end_of_GOOD_WSP_VOLTAGE 03EE  
                                 __ptext1 02AC                                   __ptext2 0370  
                     get_measure@measures 0038                                   __ptext3 0174  
                                 __ptext4 02F1                                   __ptext5 0205  
                                 __ptext6 0305                                   __ptext7 03E6  
                                 __ptext8 0319                                   __ptext9 03DE  
                                 _get_fun 013B                                   _go_open 03A9  
                   _OSCILLATOR_Initialize 03BB                                 _T2CONbits 001C  
                ??_PIN_MANAGER_Initialize 0073                                   _ms_tick 028D  
                                 _povorot 0036                               ?_beep_short 0070  
                                 clrloop0 03C3                                ??_get_jump 0073  
                              ??_go_close 0073                         __end_of_rele_tick 01D9  
                    end_of_initialization 0033                                ??_fun_work 0075  
                         _EEPROM_ReadByte 0305                             _sec_tick_work 0082  
                            _go_close_alt 03D9                          ??_WDT_Initialize 0073  
            __end_of_LOW_WATER_RESISTANSE 03F6                  _TMR0_SetInterruptHandler 03CE  
                               _PORTAbits 000C                                 _PORTCbits 000E  
                       ?_EEPROM_WriteByte 0073                         __end_of_switch_wm 02C4  
                             ?_eeprom_set 0070                        ??_EEPROM_WriteByte 0074  
                               _TRISAbits 008C                                 _TRISCbits 008E  
                      EEPROM_WriteByte@dt 0073                                _start_tone 03E9  
                   __end_of_toggle_zummer 03E6                             ??_get_measure 0075  
    __end_of_TMR2_DefaultInterruptHandler 03F7              _TMR2_DefaultInterruptHandler 03F6  
                          ?_sec_tick_work 0070                            _ADC_Initialize 03B3  
                  ?_OSCILLATOR_Initialize 0070                             ??_go_open_alt 0073  
                     start_initialization 0027                   __end_of_EEPROM_ReadByte 0319  
                        _beep_short_count 003A                    __end_of_ADC_Initialize 03BB  
                     __end_of_get_measure 0100             ?_TMR2_DefaultInterruptHandler 0070  
                             __pbssCOMMON 0077                                 ___latbits 0000  
                           __pcstackBANK0 0041                       __end_of_go_open_alt 03D9  
                             ?_start_tone 0070                                 _beep_long 0370  
                    _LOW_WATER_RESISTANSE 03F4                     _TMR0_InterruptHandler 003D  
                               __pnvBANK0 003D                    _PIN_MANAGER_Initialize 02DC  
                         beep_short@count 0074                           ??_sec_tick_work 0072  
                         ?_ADC_Initialize 0070              ??_INTERRUPT_InterruptManager 0073  
                                ?_get_fun 0070                                  ?_go_open 0070  
                       sec_tick_work@iled 0033                                  ?_ms_tick 0070  
                            ??_beep_short 0073                                  ?_povorot 0070  
                        ?_EEPROM_ReadByte 0070                         ??_TMR0_Initialize 0075  
                              ?_beep_long 0070                                  _LATAbits 010C  
                                _LATCbits 010E                                 _rele_tick 01A7  
                               clear_ram0 03C2                                  _PIE1bits 0091  
                             _get_measure 00C2                ??_TMR0_SetInterruptHandler 0075  
                                _PIR1bits 0011                                 _time_meas 003B  
                                _TMR0_ISR 0360                                  _TMR2_ISR 038E  
                      __end_of_beep_short 038E                           _beep_long_count 0039  
                              _ADCON0bits 009D                                  _WPUAbits 020C  
                                _WPUCbits 020E                              ??_eeprom_set 0076  
          ??_TMR2_DefaultInterruptHandler 0070                               _go_open_alt 03D4  
               ?_TMR2_SetInterruptHandler 0073                                 _switch_wm 02AC  
                           _timer0_switch 039C                         ??_TMR2_Initialize 0075  
                              ?_rele_tick 0070                     __end_of_UP_RESISTANSE 03F2  
                       _ADC_GetConversion 02C4                        __end_of_eeprom_set 0305  
                 ??_OSCILLATOR_Initialize 0073                        ?_ADC_GetConversion 0070  
                           ??_start_alarm 0075                                _ANSELAbits 018C  
                              _ANSELCbits 018E                       ??_ADC_GetConversion 0073  
                           ??_start_setup 0077                             _time_rele_gap 002B  
                              ?_switch_wm 0070                                  __ptext10 032C  
                                __ptext11 03C8                                  __ptext20 0350  
                                __ptext12 033E                                  __ptext21 02C4  
                                __ptext13 03CE                                  __ptext30 03E9  
                                __ptext22 01D9                                  __ptext14 02DC  
                                __ptext23 013B                                  __ptext15 03BB  
                                __ptext40 039C                                  __ptext32 038E  
                                __ptext24 0100                                  __ptext16 03B3  
                                __ptext33 03F6                                  __ptext25 03D4  
                                __ptext17 0036                                  __ptext34 028D  
                                __ptext26 03A9                                  __ptext18 024D  
                                __ptext35 0082                                  __ptext27 03D9  
                                __ptext19 00C2                                  __ptext36 01A7  
                                __ptext28 026D                                  __ptext37 03E2  
                                __ptext29 037F                                  __ptext38 0360  
                                __ptext39 03F7                            ?_timer0_switch 0070  
                                _get_jump 01D9                                  _go_close 026D  
                         _BAD_WSP_VOLTAGE 03EE                             _time_rotation 0020  
                             ??_beep_long 0073                                  _fun_work 0100  
    __end_of_TMR0_DefaultInterruptHandler 03F8              _TMR0_DefaultInterruptHandler 03F7  
               __end_of_ADC_GetConversion 02DC                                  _time_led 0029  
                                int$flags 007E                         ??_TMR2_StartTimer 0073  
      __end_of_INTERRUPT_InterruptManager 0026                _INTERRUPT_InterruptManager 0004  
                    get_jump@jump_counter 0035                                _INTCONbits 000B  
           __end_of_HIGH_WATER_RESISTANSE 03F4                       __end_of_start_alarm 0360  
                     __end_of_start_setup 01A7                                  intlevel1 0000  
                            ??_start_tone 0073                   ?_PIN_MANAGER_Initialize 0070  
                             ??_rele_tick 0070                       EEPROM_ReadByte@addr 0075  
                        ??_ADC_Initialize 0073                            _go_close_short 024D  
           ?_TMR0_DefaultInterruptHandler 0070                             __pstringtext1 03EC  
                           __pstringtext2 03EE                             __pstringtext3 03F0  
                           __pstringtext4 03F2                             __pstringtext5 03F4  
                      __end_of_start_tone 03EC                                _OPTION_REG 0095  
                       _time_zummer_short 0025               _FRIMWARE_VERSION_EEPROM_ADR 003C  
                         _TMR0_Initialize 033E                   __end_of_BAD_WSP_VOLTAGE 03F0  
                             ??_switch_wm 0075                               _time_zummer 0027  
                         ??_timer0_switch 0070            __end_of_PIN_MANAGER_Initialize 02F1  
                        _EEPROM_WriteByte 0205                    __end_of_go_close_short 026D  
                           _toggle_zummer 03E2                     _TMR2_InterruptHandler 003F  
                            ?_get_measure 0070  
