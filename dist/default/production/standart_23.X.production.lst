

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon May 30 10:38:51 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1824
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    22                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cinit,global,class=CODE,merge=1,delta=2
    24                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
    25                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    26                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
    27                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	clrtext,global,class=CODE,delta=2
    29                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    30                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    31                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2,codecov
    32                           	psect	text1,local,class=CODE,merge=1,delta=2,codecov
    33                           	psect	text2,local,class=CODE,merge=1,delta=2,codecov
    34                           	psect	text3,local,class=CODE,merge=1,delta=2,codecov
    35                           	psect	text4,local,class=CODE,merge=1,delta=2,codecov
    36                           	psect	text5,local,class=CODE,merge=1,delta=2,codecov
    37                           	psect	text6,local,class=CODE,merge=1,delta=2,codecov
    38                           	psect	text7,local,class=CODE,merge=1,delta=2,codecov
    39                           	psect	text8,local,class=CODE,merge=1,delta=2,codecov
    40                           	psect	text9,local,class=CODE,merge=1,delta=2,codecov
    41                           	psect	text10,local,class=CODE,merge=1,delta=2,codecov
    42                           	psect	text11,local,class=CODE,merge=1,delta=2,codecov
    43                           	psect	text12,local,class=CODE,merge=1,delta=2,codecov
    44                           	psect	text13,local,class=CODE,merge=1,delta=2,codecov
    45                           	psect	text14,local,class=CODE,merge=1,delta=2,codecov
    46                           	psect	text15,local,class=CODE,merge=1,delta=2,codecov
    47                           	psect	text16,local,class=CODE,merge=1,delta=2,codecov
    48                           	psect	text17,local,class=CODE,merge=1,delta=2,codecov
    49                           	psect	text18,local,class=CODE,merge=1,delta=2,codecov
    50                           	psect	text19,local,class=CODE,merge=1,delta=2,codecov
    51                           	psect	text20,local,class=CODE,merge=1,delta=2,codecov
    52                           	psect	text21,local,class=CODE,merge=1,delta=2,codecov
    53                           	psect	text22,local,class=CODE,merge=1,delta=2,codecov
    54                           	psect	text23,local,class=CODE,merge=1,delta=2,codecov
    55                           	psect	text24,local,class=CODE,merge=1,delta=2,codecov
    56                           	psect	text25,local,class=CODE,merge=1,delta=2,codecov
    57                           	psect	text26,local,class=CODE,merge=1,delta=2,codecov
    58                           	psect	text27,local,class=CODE,merge=1,delta=2,codecov
    59                           	psect	text28,local,class=CODE,merge=1,delta=2,codecov
    60                           	psect	text29,local,class=CODE,merge=1,delta=2,codecov
    61                           	psect	text30,local,class=CODE,merge=1,delta=2,codecov
    62                           	psect	text31,local,class=CODE,merge=1,delta=2,codecov
    63                           	psect	text32,local,class=CODE,merge=1,delta=2,codecov
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	text34,local,class=CODE,merge=1,delta=2,codecov
    66                           	psect	text35,local,class=CODE,merge=1,delta=2,codecov
    67                           	psect	text36,local,class=CODE,merge=1,delta=2,codecov
    68                           	psect	text37,local,class=CODE,merge=1,delta=2,codecov
    69                           	psect	text38,local,class=CODE,merge=1,delta=2,codecov
    70                           	psect	text39,local,class=CODE,merge=1,delta=2,codecov
    71                           	psect	text40,local,class=CODE,merge=1,delta=2,codecov
    72                           	psect	text41,local,class=CODE,merge=1,delta=2,codecov
    73                           	psect	text42,local,class=CODE,merge=1,delta=2,codecov
    74                           	psect	text43,local,class=CODE,merge=1,delta=2,codecov
    75                           	psect	text44,local,class=CODE,merge=1,delta=2,codecov
    76                           	psect	text45,local,class=CODE,merge=1,delta=2,codecov
    77                           	psect	text46,local,class=CODE,merge=1,delta=2,codecov
    78                           	psect	text47,local,class=CODE,merge=1,delta=2,codecov
    79                           	psect	text48,local,class=CODE,merge=1,delta=2,codecov
    80                           	psect	text49,local,class=CODE,merge=1,delta=2,codecov
    81                           	psect	text50,local,class=CODE,merge=1,delta=2,codecov
    82                           	psect	codecov_info_hdr,global,note,abs,reloc=1,space=6,split=0,delta=1,noexec
    83                           	psect	codecov_info,global,note,abs,reloc=1,space=6,split=0,delta=1,noexec
    84                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    85                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    86                           	dabs	1,0x7E,2
    87  0000                     
    88                           ; Version 2.40
    89                           ; Generated 17/11/2021 GMT
    90                           ; 
    91                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution. Publication is not required when
   105                           ;        this file is used in an embedded application.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC16F1824 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000E                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0016                     	;# 
   143  0017                     	;# 
   144  0018                     	;# 
   145  0019                     	;# 
   146  001A                     	;# 
   147  001B                     	;# 
   148  001C                     	;# 
   149  001E                     	;# 
   150  001F                     	;# 
   151  008C                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0095                     	;# 
   157  0096                     	;# 
   158  0097                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009A                     	;# 
   162  009B                     	;# 
   163  009B                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  010C                     	;# 
   168  010E                     	;# 
   169  0111                     	;# 
   170  0112                     	;# 
   171  0113                     	;# 
   172  0114                     	;# 
   173  0115                     	;# 
   174  0116                     	;# 
   175  0117                     	;# 
   176  0118                     	;# 
   177  0119                     	;# 
   178  011A                     	;# 
   179  011B                     	;# 
   180  011D                     	;# 
   181  011E                     	;# 
   182  018C                     	;# 
   183  018E                     	;# 
   184  0191                     	;# 
   185  0191                     	;# 
   186  0192                     	;# 
   187  0193                     	;# 
   188  0193                     	;# 
   189  0193                     	;# 
   190  0194                     	;# 
   191  0195                     	;# 
   192  0196                     	;# 
   193  0199                     	;# 
   194  019A                     	;# 
   195  019B                     	;# 
   196  019B                     	;# 
   197  019B                     	;# 
   198  019B                     	;# 
   199  019C                     	;# 
   200  019C                     	;# 
   201  019D                     	;# 
   202  019E                     	;# 
   203  019F                     	;# 
   204  020C                     	;# 
   205  020E                     	;# 
   206  0211                     	;# 
   207  0211                     	;# 
   208  0212                     	;# 
   209  0212                     	;# 
   210  0213                     	;# 
   211  0213                     	;# 
   212  0214                     	;# 
   213  0214                     	;# 
   214  0215                     	;# 
   215  0215                     	;# 
   216  0215                     	;# 
   217  0215                     	;# 
   218  0216                     	;# 
   219  0216                     	;# 
   220  0217                     	;# 
   221  0217                     	;# 
   222  0291                     	;# 
   223  0291                     	;# 
   224  0292                     	;# 
   225  0293                     	;# 
   226  0294                     	;# 
   227  0295                     	;# 
   228  0295                     	;# 
   229  0296                     	;# 
   230  0298                     	;# 
   231  0298                     	;# 
   232  0299                     	;# 
   233  029A                     	;# 
   234  029B                     	;# 
   235  029C                     	;# 
   236  029D                     	;# 
   237  029E                     	;# 
   238  029E                     	;# 
   239  0311                     	;# 
   240  0311                     	;# 
   241  0312                     	;# 
   242  0313                     	;# 
   243  0318                     	;# 
   244  0318                     	;# 
   245  0319                     	;# 
   246  031A                     	;# 
   247  038C                     	;# 
   248  038E                     	;# 
   249  0391                     	;# 
   250  0392                     	;# 
   251  0393                     	;# 
   252  039A                     	;# 
   253  039C                     	;# 
   254  039D                     	;# 
   255  039E                     	;# 
   256  039F                     	;# 
   257  0415                     	;# 
   258  0416                     	;# 
   259  0417                     	;# 
   260  041C                     	;# 
   261  041D                     	;# 
   262  041E                     	;# 
   263  0FE4                     	;# 
   264  0FE5                     	;# 
   265  0FE6                     	;# 
   266  0FE7                     	;# 
   267  0FE8                     	;# 
   268  0FE9                     	;# 
   269  0FEA                     	;# 
   270  0FEB                     	;# 
   271  0FED                     	;# 
   272  0FEE                     	;# 
   273  0FEF                     	;# 
   274  0000                     	;# 
   275  0001                     	;# 
   276  0002                     	;# 
   277  0003                     	;# 
   278  0004                     	;# 
   279  0005                     	;# 
   280  0006                     	;# 
   281  0007                     	;# 
   282  0008                     	;# 
   283  0009                     	;# 
   284  000A                     	;# 
   285  000B                     	;# 
   286  000C                     	;# 
   287  000E                     	;# 
   288  0011                     	;# 
   289  0012                     	;# 
   290  0013                     	;# 
   291  0015                     	;# 
   292  0016                     	;# 
   293  0016                     	;# 
   294  0017                     	;# 
   295  0018                     	;# 
   296  0019                     	;# 
   297  001A                     	;# 
   298  001B                     	;# 
   299  001C                     	;# 
   300  001E                     	;# 
   301  001F                     	;# 
   302  008C                     	;# 
   303  008E                     	;# 
   304  0091                     	;# 
   305  0092                     	;# 
   306  0093                     	;# 
   307  0095                     	;# 
   308  0096                     	;# 
   309  0097                     	;# 
   310  0098                     	;# 
   311  0099                     	;# 
   312  009A                     	;# 
   313  009B                     	;# 
   314  009B                     	;# 
   315  009C                     	;# 
   316  009D                     	;# 
   317  009E                     	;# 
   318  010C                     	;# 
   319  010E                     	;# 
   320  0111                     	;# 
   321  0112                     	;# 
   322  0113                     	;# 
   323  0114                     	;# 
   324  0115                     	;# 
   325  0116                     	;# 
   326  0117                     	;# 
   327  0118                     	;# 
   328  0119                     	;# 
   329  011A                     	;# 
   330  011B                     	;# 
   331  011D                     	;# 
   332  011E                     	;# 
   333  018C                     	;# 
   334  018E                     	;# 
   335  0191                     	;# 
   336  0191                     	;# 
   337  0192                     	;# 
   338  0193                     	;# 
   339  0193                     	;# 
   340  0193                     	;# 
   341  0194                     	;# 
   342  0195                     	;# 
   343  0196                     	;# 
   344  0199                     	;# 
   345  019A                     	;# 
   346  019B                     	;# 
   347  019B                     	;# 
   348  019B                     	;# 
   349  019B                     	;# 
   350  019C                     	;# 
   351  019C                     	;# 
   352  019D                     	;# 
   353  019E                     	;# 
   354  019F                     	;# 
   355  020C                     	;# 
   356  020E                     	;# 
   357  0211                     	;# 
   358  0211                     	;# 
   359  0212                     	;# 
   360  0212                     	;# 
   361  0213                     	;# 
   362  0213                     	;# 
   363  0214                     	;# 
   364  0214                     	;# 
   365  0215                     	;# 
   366  0215                     	;# 
   367  0215                     	;# 
   368  0215                     	;# 
   369  0216                     	;# 
   370  0216                     	;# 
   371  0217                     	;# 
   372  0217                     	;# 
   373  0291                     	;# 
   374  0291                     	;# 
   375  0292                     	;# 
   376  0293                     	;# 
   377  0294                     	;# 
   378  0295                     	;# 
   379  0295                     	;# 
   380  0296                     	;# 
   381  0298                     	;# 
   382  0298                     	;# 
   383  0299                     	;# 
   384  029A                     	;# 
   385  029B                     	;# 
   386  029C                     	;# 
   387  029D                     	;# 
   388  029E                     	;# 
   389  029E                     	;# 
   390  0311                     	;# 
   391  0311                     	;# 
   392  0312                     	;# 
   393  0313                     	;# 
   394  0318                     	;# 
   395  0318                     	;# 
   396  0319                     	;# 
   397  031A                     	;# 
   398  038C                     	;# 
   399  038E                     	;# 
   400  0391                     	;# 
   401  0392                     	;# 
   402  0393                     	;# 
   403  039A                     	;# 
   404  039C                     	;# 
   405  039D                     	;# 
   406  039E                     	;# 
   407  039F                     	;# 
   408  0415                     	;# 
   409  0416                     	;# 
   410  0417                     	;# 
   411  041C                     	;# 
   412  041D                     	;# 
   413  041E                     	;# 
   414  0FE4                     	;# 
   415  0FE5                     	;# 
   416  0FE6                     	;# 
   417  0FE7                     	;# 
   418  0FE8                     	;# 
   419  0FE9                     	;# 
   420  0FEA                     	;# 
   421  0FEB                     	;# 
   422  0FED                     	;# 
   423  0FEE                     	;# 
   424  0FEF                     	;# 
   425  0000                     	;# 
   426  0001                     	;# 
   427  0002                     	;# 
   428  0003                     	;# 
   429  0004                     	;# 
   430  0005                     	;# 
   431  0006                     	;# 
   432  0007                     	;# 
   433  0008                     	;# 
   434  0009                     	;# 
   435  000A                     	;# 
   436  000B                     	;# 
   437  000C                     	;# 
   438  000E                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0015                     	;# 
   443  0016                     	;# 
   444  0016                     	;# 
   445  0017                     	;# 
   446  0018                     	;# 
   447  0019                     	;# 
   448  001A                     	;# 
   449  001B                     	;# 
   450  001C                     	;# 
   451  001E                     	;# 
   452  001F                     	;# 
   453  008C                     	;# 
   454  008E                     	;# 
   455  0091                     	;# 
   456  0092                     	;# 
   457  0093                     	;# 
   458  0095                     	;# 
   459  0096                     	;# 
   460  0097                     	;# 
   461  0098                     	;# 
   462  0099                     	;# 
   463  009A                     	;# 
   464  009B                     	;# 
   465  009B                     	;# 
   466  009C                     	;# 
   467  009D                     	;# 
   468  009E                     	;# 
   469  010C                     	;# 
   470  010E                     	;# 
   471  0111                     	;# 
   472  0112                     	;# 
   473  0113                     	;# 
   474  0114                     	;# 
   475  0115                     	;# 
   476  0116                     	;# 
   477  0117                     	;# 
   478  0118                     	;# 
   479  0119                     	;# 
   480  011A                     	;# 
   481  011B                     	;# 
   482  011D                     	;# 
   483  011E                     	;# 
   484  018C                     	;# 
   485  018E                     	;# 
   486  0191                     	;# 
   487  0191                     	;# 
   488  0192                     	;# 
   489  0193                     	;# 
   490  0193                     	;# 
   491  0193                     	;# 
   492  0194                     	;# 
   493  0195                     	;# 
   494  0196                     	;# 
   495  0199                     	;# 
   496  019A                     	;# 
   497  019B                     	;# 
   498  019B                     	;# 
   499  019B                     	;# 
   500  019B                     	;# 
   501  019C                     	;# 
   502  019C                     	;# 
   503  019D                     	;# 
   504  019E                     	;# 
   505  019F                     	;# 
   506  020C                     	;# 
   507  020E                     	;# 
   508  0211                     	;# 
   509  0211                     	;# 
   510  0212                     	;# 
   511  0212                     	;# 
   512  0213                     	;# 
   513  0213                     	;# 
   514  0214                     	;# 
   515  0214                     	;# 
   516  0215                     	;# 
   517  0215                     	;# 
   518  0215                     	;# 
   519  0215                     	;# 
   520  0216                     	;# 
   521  0216                     	;# 
   522  0217                     	;# 
   523  0217                     	;# 
   524  0291                     	;# 
   525  0291                     	;# 
   526  0292                     	;# 
   527  0293                     	;# 
   528  0294                     	;# 
   529  0295                     	;# 
   530  0295                     	;# 
   531  0296                     	;# 
   532  0298                     	;# 
   533  0298                     	;# 
   534  0299                     	;# 
   535  029A                     	;# 
   536  029B                     	;# 
   537  029C                     	;# 
   538  029D                     	;# 
   539  029E                     	;# 
   540  029E                     	;# 
   541  0311                     	;# 
   542  0311                     	;# 
   543  0312                     	;# 
   544  0313                     	;# 
   545  0318                     	;# 
   546  0318                     	;# 
   547  0319                     	;# 
   548  031A                     	;# 
   549  038C                     	;# 
   550  038E                     	;# 
   551  0391                     	;# 
   552  0392                     	;# 
   553  0393                     	;# 
   554  039A                     	;# 
   555  039C                     	;# 
   556  039D                     	;# 
   557  039E                     	;# 
   558  039F                     	;# 
   559  0415                     	;# 
   560  0416                     	;# 
   561  0417                     	;# 
   562  041C                     	;# 
   563  041D                     	;# 
   564  041E                     	;# 
   565  0FE4                     	;# 
   566  0FE5                     	;# 
   567  0FE6                     	;# 
   568  0FE7                     	;# 
   569  0FE8                     	;# 
   570  0FE9                     	;# 
   571  0FEA                     	;# 
   572  0FEB                     	;# 
   573  0FED                     	;# 
   574  0FEE                     	;# 
   575  0FEF                     	;# 
   576  0000                     	;# 
   577  0001                     	;# 
   578  0002                     	;# 
   579  0003                     	;# 
   580  0004                     	;# 
   581  0005                     	;# 
   582  0006                     	;# 
   583  0007                     	;# 
   584  0008                     	;# 
   585  0009                     	;# 
   586  000A                     	;# 
   587  000B                     	;# 
   588  000C                     	;# 
   589  000E                     	;# 
   590  0011                     	;# 
   591  0012                     	;# 
   592  0013                     	;# 
   593  0015                     	;# 
   594  0016                     	;# 
   595  0016                     	;# 
   596  0017                     	;# 
   597  0018                     	;# 
   598  0019                     	;# 
   599  001A                     	;# 
   600  001B                     	;# 
   601  001C                     	;# 
   602  001E                     	;# 
   603  001F                     	;# 
   604  008C                     	;# 
   605  008E                     	;# 
   606  0091                     	;# 
   607  0092                     	;# 
   608  0093                     	;# 
   609  0095                     	;# 
   610  0096                     	;# 
   611  0097                     	;# 
   612  0098                     	;# 
   613  0099                     	;# 
   614  009A                     	;# 
   615  009B                     	;# 
   616  009B                     	;# 
   617  009C                     	;# 
   618  009D                     	;# 
   619  009E                     	;# 
   620  010C                     	;# 
   621  010E                     	;# 
   622  0111                     	;# 
   623  0112                     	;# 
   624  0113                     	;# 
   625  0114                     	;# 
   626  0115                     	;# 
   627  0116                     	;# 
   628  0117                     	;# 
   629  0118                     	;# 
   630  0119                     	;# 
   631  011A                     	;# 
   632  011B                     	;# 
   633  011D                     	;# 
   634  011E                     	;# 
   635  018C                     	;# 
   636  018E                     	;# 
   637  0191                     	;# 
   638  0191                     	;# 
   639  0192                     	;# 
   640  0193                     	;# 
   641  0193                     	;# 
   642  0193                     	;# 
   643  0194                     	;# 
   644  0195                     	;# 
   645  0196                     	;# 
   646  0199                     	;# 
   647  019A                     	;# 
   648  019B                     	;# 
   649  019B                     	;# 
   650  019B                     	;# 
   651  019B                     	;# 
   652  019C                     	;# 
   653  019C                     	;# 
   654  019D                     	;# 
   655  019E                     	;# 
   656  019F                     	;# 
   657  020C                     	;# 
   658  020E                     	;# 
   659  0211                     	;# 
   660  0211                     	;# 
   661  0212                     	;# 
   662  0212                     	;# 
   663  0213                     	;# 
   664  0213                     	;# 
   665  0214                     	;# 
   666  0214                     	;# 
   667  0215                     	;# 
   668  0215                     	;# 
   669  0215                     	;# 
   670  0215                     	;# 
   671  0216                     	;# 
   672  0216                     	;# 
   673  0217                     	;# 
   674  0217                     	;# 
   675  0291                     	;# 
   676  0291                     	;# 
   677  0292                     	;# 
   678  0293                     	;# 
   679  0294                     	;# 
   680  0295                     	;# 
   681  0295                     	;# 
   682  0296                     	;# 
   683  0298                     	;# 
   684  0298                     	;# 
   685  0299                     	;# 
   686  029A                     	;# 
   687  029B                     	;# 
   688  029C                     	;# 
   689  029D                     	;# 
   690  029E                     	;# 
   691  029E                     	;# 
   692  0311                     	;# 
   693  0311                     	;# 
   694  0312                     	;# 
   695  0313                     	;# 
   696  0318                     	;# 
   697  0318                     	;# 
   698  0319                     	;# 
   699  031A                     	;# 
   700  038C                     	;# 
   701  038E                     	;# 
   702  0391                     	;# 
   703  0392                     	;# 
   704  0393                     	;# 
   705  039A                     	;# 
   706  039C                     	;# 
   707  039D                     	;# 
   708  039E                     	;# 
   709  039F                     	;# 
   710  0415                     	;# 
   711  0416                     	;# 
   712  0417                     	;# 
   713  041C                     	;# 
   714  041D                     	;# 
   715  041E                     	;# 
   716  0FE4                     	;# 
   717  0FE5                     	;# 
   718  0FE6                     	;# 
   719  0FE7                     	;# 
   720  0FE8                     	;# 
   721  0FE9                     	;# 
   722  0FEA                     	;# 
   723  0FEB                     	;# 
   724  0FED                     	;# 
   725  0FEE                     	;# 
   726  0FEF                     	;# 
   727  0000                     	;# 
   728  0001                     	;# 
   729  0002                     	;# 
   730  0003                     	;# 
   731  0004                     	;# 
   732  0005                     	;# 
   733  0006                     	;# 
   734  0007                     	;# 
   735  0008                     	;# 
   736  0009                     	;# 
   737  000A                     	;# 
   738  000B                     	;# 
   739  000C                     	;# 
   740  000E                     	;# 
   741  0011                     	;# 
   742  0012                     	;# 
   743  0013                     	;# 
   744  0015                     	;# 
   745  0016                     	;# 
   746  0016                     	;# 
   747  0017                     	;# 
   748  0018                     	;# 
   749  0019                     	;# 
   750  001A                     	;# 
   751  001B                     	;# 
   752  001C                     	;# 
   753  001E                     	;# 
   754  001F                     	;# 
   755  008C                     	;# 
   756  008E                     	;# 
   757  0091                     	;# 
   758  0092                     	;# 
   759  0093                     	;# 
   760  0095                     	;# 
   761  0096                     	;# 
   762  0097                     	;# 
   763  0098                     	;# 
   764  0099                     	;# 
   765  009A                     	;# 
   766  009B                     	;# 
   767  009B                     	;# 
   768  009C                     	;# 
   769  009D                     	;# 
   770  009E                     	;# 
   771  010C                     	;# 
   772  010E                     	;# 
   773  0111                     	;# 
   774  0112                     	;# 
   775  0113                     	;# 
   776  0114                     	;# 
   777  0115                     	;# 
   778  0116                     	;# 
   779  0117                     	;# 
   780  0118                     	;# 
   781  0119                     	;# 
   782  011A                     	;# 
   783  011B                     	;# 
   784  011D                     	;# 
   785  011E                     	;# 
   786  018C                     	;# 
   787  018E                     	;# 
   788  0191                     	;# 
   789  0191                     	;# 
   790  0192                     	;# 
   791  0193                     	;# 
   792  0193                     	;# 
   793  0193                     	;# 
   794  0194                     	;# 
   795  0195                     	;# 
   796  0196                     	;# 
   797  0199                     	;# 
   798  019A                     	;# 
   799  019B                     	;# 
   800  019B                     	;# 
   801  019B                     	;# 
   802  019B                     	;# 
   803  019C                     	;# 
   804  019C                     	;# 
   805  019D                     	;# 
   806  019E                     	;# 
   807  019F                     	;# 
   808  020C                     	;# 
   809  020E                     	;# 
   810  0211                     	;# 
   811  0211                     	;# 
   812  0212                     	;# 
   813  0212                     	;# 
   814  0213                     	;# 
   815  0213                     	;# 
   816  0214                     	;# 
   817  0214                     	;# 
   818  0215                     	;# 
   819  0215                     	;# 
   820  0215                     	;# 
   821  0215                     	;# 
   822  0216                     	;# 
   823  0216                     	;# 
   824  0217                     	;# 
   825  0217                     	;# 
   826  0291                     	;# 
   827  0291                     	;# 
   828  0292                     	;# 
   829  0293                     	;# 
   830  0294                     	;# 
   831  0295                     	;# 
   832  0295                     	;# 
   833  0296                     	;# 
   834  0298                     	;# 
   835  0298                     	;# 
   836  0299                     	;# 
   837  029A                     	;# 
   838  029B                     	;# 
   839  029C                     	;# 
   840  029D                     	;# 
   841  029E                     	;# 
   842  029E                     	;# 
   843  0311                     	;# 
   844  0311                     	;# 
   845  0312                     	;# 
   846  0313                     	;# 
   847  0318                     	;# 
   848  0318                     	;# 
   849  0319                     	;# 
   850  031A                     	;# 
   851  038C                     	;# 
   852  038E                     	;# 
   853  0391                     	;# 
   854  0392                     	;# 
   855  0393                     	;# 
   856  039A                     	;# 
   857  039C                     	;# 
   858  039D                     	;# 
   859  039E                     	;# 
   860  039F                     	;# 
   861  0415                     	;# 
   862  0416                     	;# 
   863  0417                     	;# 
   864  041C                     	;# 
   865  041D                     	;# 
   866  041E                     	;# 
   867  0FE4                     	;# 
   868  0FE5                     	;# 
   869  0FE6                     	;# 
   870  0FE7                     	;# 
   871  0FE8                     	;# 
   872  0FE9                     	;# 
   873  0FEA                     	;# 
   874  0FEB                     	;# 
   875  0FED                     	;# 
   876  0FEE                     	;# 
   877  0FEF                     	;# 
   878  0000                     	;# 
   879  0001                     	;# 
   880  0002                     	;# 
   881  0003                     	;# 
   882  0004                     	;# 
   883  0005                     	;# 
   884  0006                     	;# 
   885  0007                     	;# 
   886  0008                     	;# 
   887  0009                     	;# 
   888  000A                     	;# 
   889  000B                     	;# 
   890  000C                     	;# 
   891  000E                     	;# 
   892  0011                     	;# 
   893  0012                     	;# 
   894  0013                     	;# 
   895  0015                     	;# 
   896  0016                     	;# 
   897  0016                     	;# 
   898  0017                     	;# 
   899  0018                     	;# 
   900  0019                     	;# 
   901  001A                     	;# 
   902  001B                     	;# 
   903  001C                     	;# 
   904  001E                     	;# 
   905  001F                     	;# 
   906  008C                     	;# 
   907  008E                     	;# 
   908  0091                     	;# 
   909  0092                     	;# 
   910  0093                     	;# 
   911  0095                     	;# 
   912  0096                     	;# 
   913  0097                     	;# 
   914  0098                     	;# 
   915  0099                     	;# 
   916  009A                     	;# 
   917  009B                     	;# 
   918  009B                     	;# 
   919  009C                     	;# 
   920  009D                     	;# 
   921  009E                     	;# 
   922  010C                     	;# 
   923  010E                     	;# 
   924  0111                     	;# 
   925  0112                     	;# 
   926  0113                     	;# 
   927  0114                     	;# 
   928  0115                     	;# 
   929  0116                     	;# 
   930  0117                     	;# 
   931  0118                     	;# 
   932  0119                     	;# 
   933  011A                     	;# 
   934  011B                     	;# 
   935  011D                     	;# 
   936  011E                     	;# 
   937  018C                     	;# 
   938  018E                     	;# 
   939  0191                     	;# 
   940  0191                     	;# 
   941  0192                     	;# 
   942  0193                     	;# 
   943  0193                     	;# 
   944  0193                     	;# 
   945  0194                     	;# 
   946  0195                     	;# 
   947  0196                     	;# 
   948  0199                     	;# 
   949  019A                     	;# 
   950  019B                     	;# 
   951  019B                     	;# 
   952  019B                     	;# 
   953  019B                     	;# 
   954  019C                     	;# 
   955  019C                     	;# 
   956  019D                     	;# 
   957  019E                     	;# 
   958  019F                     	;# 
   959  020C                     	;# 
   960  020E                     	;# 
   961  0211                     	;# 
   962  0211                     	;# 
   963  0212                     	;# 
   964  0212                     	;# 
   965  0213                     	;# 
   966  0213                     	;# 
   967  0214                     	;# 
   968  0214                     	;# 
   969  0215                     	;# 
   970  0215                     	;# 
   971  0215                     	;# 
   972  0215                     	;# 
   973  0216                     	;# 
   974  0216                     	;# 
   975  0217                     	;# 
   976  0217                     	;# 
   977  0291                     	;# 
   978  0291                     	;# 
   979  0292                     	;# 
   980  0293                     	;# 
   981  0294                     	;# 
   982  0295                     	;# 
   983  0295                     	;# 
   984  0296                     	;# 
   985  0298                     	;# 
   986  0298                     	;# 
   987  0299                     	;# 
   988  029A                     	;# 
   989  029B                     	;# 
   990  029C                     	;# 
   991  029D                     	;# 
   992  029E                     	;# 
   993  029E                     	;# 
   994  0311                     	;# 
   995  0311                     	;# 
   996  0312                     	;# 
   997  0313                     	;# 
   998  0318                     	;# 
   999  0318                     	;# 
  1000  0319                     	;# 
  1001  031A                     	;# 
  1002  038C                     	;# 
  1003  038E                     	;# 
  1004  0391                     	;# 
  1005  0392                     	;# 
  1006  0393                     	;# 
  1007  039A                     	;# 
  1008  039C                     	;# 
  1009  039D                     	;# 
  1010  039E                     	;# 
  1011  039F                     	;# 
  1012  0415                     	;# 
  1013  0416                     	;# 
  1014  0417                     	;# 
  1015  041C                     	;# 
  1016  041D                     	;# 
  1017  041E                     	;# 
  1018  0FE4                     	;# 
  1019  0FE5                     	;# 
  1020  0FE6                     	;# 
  1021  0FE7                     	;# 
  1022  0FE8                     	;# 
  1023  0FE9                     	;# 
  1024  0FEA                     	;# 
  1025  0FEB                     	;# 
  1026  0FED                     	;# 
  1027  0FEE                     	;# 
  1028  0FEF                     	;# 
  1029  0000                     	;# 
  1030  0001                     	;# 
  1031  0002                     	;# 
  1032  0003                     	;# 
  1033  0004                     	;# 
  1034  0005                     	;# 
  1035  0006                     	;# 
  1036  0007                     	;# 
  1037  0008                     	;# 
  1038  0009                     	;# 
  1039  000A                     	;# 
  1040  000B                     	;# 
  1041  000C                     	;# 
  1042  000E                     	;# 
  1043  0011                     	;# 
  1044  0012                     	;# 
  1045  0013                     	;# 
  1046  0015                     	;# 
  1047  0016                     	;# 
  1048  0016                     	;# 
  1049  0017                     	;# 
  1050  0018                     	;# 
  1051  0019                     	;# 
  1052  001A                     	;# 
  1053  001B                     	;# 
  1054  001C                     	;# 
  1055  001E                     	;# 
  1056  001F                     	;# 
  1057  008C                     	;# 
  1058  008E                     	;# 
  1059  0091                     	;# 
  1060  0092                     	;# 
  1061  0093                     	;# 
  1062  0095                     	;# 
  1063  0096                     	;# 
  1064  0097                     	;# 
  1065  0098                     	;# 
  1066  0099                     	;# 
  1067  009A                     	;# 
  1068  009B                     	;# 
  1069  009B                     	;# 
  1070  009C                     	;# 
  1071  009D                     	;# 
  1072  009E                     	;# 
  1073  010C                     	;# 
  1074  010E                     	;# 
  1075  0111                     	;# 
  1076  0112                     	;# 
  1077  0113                     	;# 
  1078  0114                     	;# 
  1079  0115                     	;# 
  1080  0116                     	;# 
  1081  0117                     	;# 
  1082  0118                     	;# 
  1083  0119                     	;# 
  1084  011A                     	;# 
  1085  011B                     	;# 
  1086  011D                     	;# 
  1087  011E                     	;# 
  1088  018C                     	;# 
  1089  018E                     	;# 
  1090  0191                     	;# 
  1091  0191                     	;# 
  1092  0192                     	;# 
  1093  0193                     	;# 
  1094  0193                     	;# 
  1095  0193                     	;# 
  1096  0194                     	;# 
  1097  0195                     	;# 
  1098  0196                     	;# 
  1099  0199                     	;# 
  1100  019A                     	;# 
  1101  019B                     	;# 
  1102  019B                     	;# 
  1103  019B                     	;# 
  1104  019B                     	;# 
  1105  019C                     	;# 
  1106  019C                     	;# 
  1107  019D                     	;# 
  1108  019E                     	;# 
  1109  019F                     	;# 
  1110  020C                     	;# 
  1111  020E                     	;# 
  1112  0211                     	;# 
  1113  0211                     	;# 
  1114  0212                     	;# 
  1115  0212                     	;# 
  1116  0213                     	;# 
  1117  0213                     	;# 
  1118  0214                     	;# 
  1119  0214                     	;# 
  1120  0215                     	;# 
  1121  0215                     	;# 
  1122  0215                     	;# 
  1123  0215                     	;# 
  1124  0216                     	;# 
  1125  0216                     	;# 
  1126  0217                     	;# 
  1127  0217                     	;# 
  1128  0291                     	;# 
  1129  0291                     	;# 
  1130  0292                     	;# 
  1131  0293                     	;# 
  1132  0294                     	;# 
  1133  0295                     	;# 
  1134  0295                     	;# 
  1135  0296                     	;# 
  1136  0298                     	;# 
  1137  0298                     	;# 
  1138  0299                     	;# 
  1139  029A                     	;# 
  1140  029B                     	;# 
  1141  029C                     	;# 
  1142  029D                     	;# 
  1143  029E                     	;# 
  1144  029E                     	;# 
  1145  0311                     	;# 
  1146  0311                     	;# 
  1147  0312                     	;# 
  1148  0313                     	;# 
  1149  0318                     	;# 
  1150  0318                     	;# 
  1151  0319                     	;# 
  1152  031A                     	;# 
  1153  038C                     	;# 
  1154  038E                     	;# 
  1155  0391                     	;# 
  1156  0392                     	;# 
  1157  0393                     	;# 
  1158  039A                     	;# 
  1159  039C                     	;# 
  1160  039D                     	;# 
  1161  039E                     	;# 
  1162  039F                     	;# 
  1163  0415                     	;# 
  1164  0416                     	;# 
  1165  0417                     	;# 
  1166  041C                     	;# 
  1167  041D                     	;# 
  1168  041E                     	;# 
  1169  0FE4                     	;# 
  1170  0FE5                     	;# 
  1171  0FE6                     	;# 
  1172  0FE7                     	;# 
  1173  0FE8                     	;# 
  1174  0FE9                     	;# 
  1175  0FEA                     	;# 
  1176  0FEB                     	;# 
  1177  0FED                     	;# 
  1178  0FEE                     	;# 
  1179  0FEF                     	;# 
  1180  0000                     	;# 
  1181  0001                     	;# 
  1182  0002                     	;# 
  1183  0003                     	;# 
  1184  0004                     	;# 
  1185  0005                     	;# 
  1186  0006                     	;# 
  1187  0007                     	;# 
  1188  0008                     	;# 
  1189  0009                     	;# 
  1190  000A                     	;# 
  1191  000B                     	;# 
  1192  000C                     	;# 
  1193  000E                     	;# 
  1194  0011                     	;# 
  1195  0012                     	;# 
  1196  0013                     	;# 
  1197  0015                     	;# 
  1198  0016                     	;# 
  1199  0016                     	;# 
  1200  0017                     	;# 
  1201  0018                     	;# 
  1202  0019                     	;# 
  1203  001A                     	;# 
  1204  001B                     	;# 
  1205  001C                     	;# 
  1206  001E                     	;# 
  1207  001F                     	;# 
  1208  008C                     	;# 
  1209  008E                     	;# 
  1210  0091                     	;# 
  1211  0092                     	;# 
  1212  0093                     	;# 
  1213  0095                     	;# 
  1214  0096                     	;# 
  1215  0097                     	;# 
  1216  0098                     	;# 
  1217  0099                     	;# 
  1218  009A                     	;# 
  1219  009B                     	;# 
  1220  009B                     	;# 
  1221  009C                     	;# 
  1222  009D                     	;# 
  1223  009E                     	;# 
  1224  010C                     	;# 
  1225  010E                     	;# 
  1226  0111                     	;# 
  1227  0112                     	;# 
  1228  0113                     	;# 
  1229  0114                     	;# 
  1230  0115                     	;# 
  1231  0116                     	;# 
  1232  0117                     	;# 
  1233  0118                     	;# 
  1234  0119                     	;# 
  1235  011A                     	;# 
  1236  011B                     	;# 
  1237  011D                     	;# 
  1238  011E                     	;# 
  1239  018C                     	;# 
  1240  018E                     	;# 
  1241  0191                     	;# 
  1242  0191                     	;# 
  1243  0192                     	;# 
  1244  0193                     	;# 
  1245  0193                     	;# 
  1246  0193                     	;# 
  1247  0194                     	;# 
  1248  0195                     	;# 
  1249  0196                     	;# 
  1250  0199                     	;# 
  1251  019A                     	;# 
  1252  019B                     	;# 
  1253  019B                     	;# 
  1254  019B                     	;# 
  1255  019B                     	;# 
  1256  019C                     	;# 
  1257  019C                     	;# 
  1258  019D                     	;# 
  1259  019E                     	;# 
  1260  019F                     	;# 
  1261  020C                     	;# 
  1262  020E                     	;# 
  1263  0211                     	;# 
  1264  0211                     	;# 
  1265  0212                     	;# 
  1266  0212                     	;# 
  1267  0213                     	;# 
  1268  0213                     	;# 
  1269  0214                     	;# 
  1270  0214                     	;# 
  1271  0215                     	;# 
  1272  0215                     	;# 
  1273  0215                     	;# 
  1274  0215                     	;# 
  1275  0216                     	;# 
  1276  0216                     	;# 
  1277  0217                     	;# 
  1278  0217                     	;# 
  1279  0291                     	;# 
  1280  0291                     	;# 
  1281  0292                     	;# 
  1282  0293                     	;# 
  1283  0294                     	;# 
  1284  0295                     	;# 
  1285  0295                     	;# 
  1286  0296                     	;# 
  1287  0298                     	;# 
  1288  0298                     	;# 
  1289  0299                     	;# 
  1290  029A                     	;# 
  1291  029B                     	;# 
  1292  029C                     	;# 
  1293  029D                     	;# 
  1294  029E                     	;# 
  1295  029E                     	;# 
  1296  0311                     	;# 
  1297  0311                     	;# 
  1298  0312                     	;# 
  1299  0313                     	;# 
  1300  0318                     	;# 
  1301  0318                     	;# 
  1302  0319                     	;# 
  1303  031A                     	;# 
  1304  038C                     	;# 
  1305  038E                     	;# 
  1306  0391                     	;# 
  1307  0392                     	;# 
  1308  0393                     	;# 
  1309  039A                     	;# 
  1310  039C                     	;# 
  1311  039D                     	;# 
  1312  039E                     	;# 
  1313  039F                     	;# 
  1314  0415                     	;# 
  1315  0416                     	;# 
  1316  0417                     	;# 
  1317  041C                     	;# 
  1318  041D                     	;# 
  1319  041E                     	;# 
  1320  0FE4                     	;# 
  1321  0FE5                     	;# 
  1322  0FE6                     	;# 
  1323  0FE7                     	;# 
  1324  0FE8                     	;# 
  1325  0FE9                     	;# 
  1326  0FEA                     	;# 
  1327  0FEB                     	;# 
  1328  0FED                     	;# 
  1329  0FEE                     	;# 
  1330  0FEF                     	;# 
  1331  0000                     	;# 
  1332  0001                     	;# 
  1333  0002                     	;# 
  1334  0003                     	;# 
  1335  0004                     	;# 
  1336  0005                     	;# 
  1337  0006                     	;# 
  1338  0007                     	;# 
  1339  0008                     	;# 
  1340  0009                     	;# 
  1341  000A                     	;# 
  1342  000B                     	;# 
  1343  000C                     	;# 
  1344  000E                     	;# 
  1345  0011                     	;# 
  1346  0012                     	;# 
  1347  0013                     	;# 
  1348  0015                     	;# 
  1349  0016                     	;# 
  1350  0016                     	;# 
  1351  0017                     	;# 
  1352  0018                     	;# 
  1353  0019                     	;# 
  1354  001A                     	;# 
  1355  001B                     	;# 
  1356  001C                     	;# 
  1357  001E                     	;# 
  1358  001F                     	;# 
  1359  008C                     	;# 
  1360  008E                     	;# 
  1361  0091                     	;# 
  1362  0092                     	;# 
  1363  0093                     	;# 
  1364  0095                     	;# 
  1365  0096                     	;# 
  1366  0097                     	;# 
  1367  0098                     	;# 
  1368  0099                     	;# 
  1369  009A                     	;# 
  1370  009B                     	;# 
  1371  009B                     	;# 
  1372  009C                     	;# 
  1373  009D                     	;# 
  1374  009E                     	;# 
  1375  010C                     	;# 
  1376  010E                     	;# 
  1377  0111                     	;# 
  1378  0112                     	;# 
  1379  0113                     	;# 
  1380  0114                     	;# 
  1381  0115                     	;# 
  1382  0116                     	;# 
  1383  0117                     	;# 
  1384  0118                     	;# 
  1385  0119                     	;# 
  1386  011A                     	;# 
  1387  011B                     	;# 
  1388  011D                     	;# 
  1389  011E                     	;# 
  1390  018C                     	;# 
  1391  018E                     	;# 
  1392  0191                     	;# 
  1393  0191                     	;# 
  1394  0192                     	;# 
  1395  0193                     	;# 
  1396  0193                     	;# 
  1397  0193                     	;# 
  1398  0194                     	;# 
  1399  0195                     	;# 
  1400  0196                     	;# 
  1401  0199                     	;# 
  1402  019A                     	;# 
  1403  019B                     	;# 
  1404  019B                     	;# 
  1405  019B                     	;# 
  1406  019B                     	;# 
  1407  019C                     	;# 
  1408  019C                     	;# 
  1409  019D                     	;# 
  1410  019E                     	;# 
  1411  019F                     	;# 
  1412  020C                     	;# 
  1413  020E                     	;# 
  1414  0211                     	;# 
  1415  0211                     	;# 
  1416  0212                     	;# 
  1417  0212                     	;# 
  1418  0213                     	;# 
  1419  0213                     	;# 
  1420  0214                     	;# 
  1421  0214                     	;# 
  1422  0215                     	;# 
  1423  0215                     	;# 
  1424  0215                     	;# 
  1425  0215                     	;# 
  1426  0216                     	;# 
  1427  0216                     	;# 
  1428  0217                     	;# 
  1429  0217                     	;# 
  1430  0291                     	;# 
  1431  0291                     	;# 
  1432  0292                     	;# 
  1433  0293                     	;# 
  1434  0294                     	;# 
  1435  0295                     	;# 
  1436  0295                     	;# 
  1437  0296                     	;# 
  1438  0298                     	;# 
  1439  0298                     	;# 
  1440  0299                     	;# 
  1441  029A                     	;# 
  1442  029B                     	;# 
  1443  029C                     	;# 
  1444  029D                     	;# 
  1445  029E                     	;# 
  1446  029E                     	;# 
  1447  0311                     	;# 
  1448  0311                     	;# 
  1449  0312                     	;# 
  1450  0313                     	;# 
  1451  0318                     	;# 
  1452  0318                     	;# 
  1453  0319                     	;# 
  1454  031A                     	;# 
  1455  038C                     	;# 
  1456  038E                     	;# 
  1457  0391                     	;# 
  1458  0392                     	;# 
  1459  0393                     	;# 
  1460  039A                     	;# 
  1461  039C                     	;# 
  1462  039D                     	;# 
  1463  039E                     	;# 
  1464  039F                     	;# 
  1465  0415                     	;# 
  1466  0416                     	;# 
  1467  0417                     	;# 
  1468  041C                     	;# 
  1469  041D                     	;# 
  1470  041E                     	;# 
  1471  0FE4                     	;# 
  1472  0FE5                     	;# 
  1473  0FE6                     	;# 
  1474  0FE7                     	;# 
  1475  0FE8                     	;# 
  1476  0FE9                     	;# 
  1477  0FEA                     	;# 
  1478  0FEB                     	;# 
  1479  0FED                     	;# 
  1480  0FEE                     	;# 
  1481  0FEF                     	;# 
  1482                           
  1483                           	psect	stringtext1
  1484  06C4                     __pstringtext1:
  1485  06C4                     _GOOD_WSP_VOLTAGE:
  1486  06C4  348E               	retlw	142
  1487  06C5  3400               	retlw	0
  1488  06C6                     __end_of_GOOD_WSP_VOLTAGE:
  1489                           
  1490                           	psect	stringtext2
  1491  06C6                     __pstringtext2:
  1492  06C6                     _BAD_WSP_VOLTAGE:
  1493  06C6  3480               	retlw	128
  1494  06C7  3400               	retlw	0
  1495  06C8                     __end_of_BAD_WSP_VOLTAGE:
  1496                           
  1497                           	psect	stringtext3
  1498  06C8                     __pstringtext3:
  1499  06C8                     _AUTOROTATION_DELAY:
  1500  06C8  3400               	retlw	0
  1501  06C9  3475               	retlw	117
  1502  06CA                     __end_of_AUTOROTATION_DELAY:
  1503                           
  1504                           	psect	stringtext4
  1505  06CA                     __pstringtext4:
  1506  06CA                     _UP_RESISTANSE:
  1507  06CA  3420               	retlw	32
  1508  06CB  344E               	retlw	78
  1509  06CC                     __end_of_UP_RESISTANSE:
  1510                           
  1511                           	psect	stringtext5
  1512  06D2                     __pstringtext5:
  1513  06D2                     _MELODY_REPEAT_DELAY:
  1514  06D2  341E               	retlw	30
  1515  06D3                     __end_of_MELODY_REPEAT_DELAY:
  1516                           
  1517                           	psect	stringtext6
  1518  06D3                     __pstringtext6:
  1519  06D3                     _MOVING_WAIT_DELAY:
  1520  06D3  3402               	retlw	2
  1521  06D4                     __end_of_MOVING_WAIT_DELAY:
  1522                           
  1523                           	psect	stringtext7
  1524  06D4                     __pstringtext7:
  1525  06D4                     _FRIMWARE_VERSION_EEPROM_ADR:
  1526  06D4  3401               	retlw	1
  1527  06D5                     __end_of_FRIMWARE_VERSION_EEPROM_ADR:
  1528                           
  1529                           	psect	stringtext8
  1530  06CC                     __pstringtext8:
  1531  06CC                     _HIGH_WATER_RESISTANSE:
  1532  06CC  34A8               	retlw	168
  1533  06CD  3461               	retlw	97
  1534  06CE                     __end_of_HIGH_WATER_RESISTANSE:
  1535                           
  1536                           	psect	stringtext9
  1537  06CE                     __pstringtext9:
  1538  06CE                     _LOW_WATER_RESISTANSE:
  1539  06CE  3420               	retlw	32
  1540  06CF  344E               	retlw	78
  1541  06D0                     __end_of_LOW_WATER_RESISTANSE:
  1542                           
  1543                           	psect	stringtext10
  1544  06D5                     __pstringtext10:
  1545  06D5                     _RELE_GAP:
  1546  06D5  3402               	retlw	2
  1547  06D6                     __end_of_RELE_GAP:
  1548                           
  1549                           	psect	stringtext11
  1550  06D6                     __pstringtext11:
  1551  06D6                     _RELE_POWER_AUTOROTATION_DELAY:
  1552  06D6  340F               	retlw	15
  1553  06D7                     __end_of_RELE_POWER_AUTOROTATION_DELAY:
  1554                           
  1555                           	psect	stringtext12
  1556  06D7                     __pstringtext12:
  1557  06D7                     _RELE_POWER_WORK_DELAY:
  1558  06D7  3478               	retlw	120
  1559  06D8                     __end_of_RELE_POWER_WORK_DELAY:
  1560                           
  1561                           	psect	stringtext13
  1562  06D8                     __pstringtext13:
  1563  06D8                     _JUMP_MEAS_COUNT:
  1564  06D8  340A               	retlw	10
  1565  06D9                     __end_of_JUMP_MEAS_COUNT:
  1566                           
  1567                           	psect	stringtext14
  1568  06D9                     __pstringtext14:
  1569  06D9                     _FUN_MEAS_COUNT:
  1570  06D9  340A               	retlw	10
  1571  06DA                     __end_of_FUN_MEAS_COUNT:
  1572                           
  1573                           	psect	stringtext15
  1574  06DA                     __pstringtext15:
  1575  06DA                     _WSP_MEAS_COUNT:
  1576  06DA  3404               	retlw	4
  1577  06DB                     __end_of_WSP_MEAS_COUNT:
  1578                           
  1579                           	psect	stringtext16
  1580  06DB                     __pstringtext16:
  1581  06DB                     _AUTOROTATION_DAYS:
  1582  06DB  340E               	retlw	14
  1583  06DC                     __end_of_AUTOROTATION_DAYS:
  1584                           
  1585                           	psect	stringtext17
  1586  06DC                     __pstringtext17:
  1587  06DC                     _LONG_ZUMMER_DELAY:
  1588  06DC  3482               	retlw	130
  1589  06DD                     __end_of_LONG_ZUMMER_DELAY:
  1590                           
  1591                           	psect	stringtext18
  1592  06DD                     __pstringtext18:
  1593  06DD                     _SHORT_ZUMMER_DELAY:
  1594  06DD  341E               	retlw	30
  1595  06DE                     __end_of_SHORT_ZUMMER_DELAY:
  1596                           
  1597                           	psect	nvBANK0
  1598  0053                     __pnvBANK0:
  1599  0053                     _TMR0_InterruptHandler:
  1600  0053                     	ds	2
  1601  0055                     _TMR2_InterruptHandler:
  1602  0055                     	ds	2
  1603  0057                     _timer0ReloadVal:
  1604  0057                     	ds	1
  1605  000C                     _PORTAbits	set	12
  1606  000E                     _PORTCbits	set	14
  1607  0015                     _TMR0	set	21
  1608  001C                     _T2CONbits	set	28
  1609  001C                     _T2CON	set	28
  1610  001A                     _TMR2	set	26
  1611  001B                     _PR2	set	27
  1612  0011                     _PIR1bits	set	17
  1613  000B                     _INTCONbits	set	11
  1614  005F                     _GIE	set	95
  1615  008C                     _TRISAbits	set	140
  1616  008E                     _TRISCbits	set	142
  1617  0095                     _OPTION_REG	set	149
  1618  0091                     _PIE1bits	set	145
  1619  0095                     _OPTION_REGbits	set	149
  1620  008E                     _TRISC	set	142
  1621  008C                     _TRISA	set	140
  1622  009D                     _ADCON0bits	set	157
  1623  009D                     _ADCON0	set	157
  1624  009C                     _ADRESH	set	156
  1625  009B                     _ADRESL	set	155
  1626  009E                     _ADCON1	set	158
  1627  0097                     _WDTCON	set	151
  1628  0098                     _OSCTUNE	set	152
  1629  0099                     _OSCCON	set	153
  1630  010C                     _LATAbits	set	268
  1631  010E                     _LATCbits	set	270
  1632  011E                     _APFCON1	set	286
  1633  011D                     _APFCON0	set	285
  1634  010E                     _LATC	set	270
  1635  010C                     _LATA	set	268
  1636  0116                     _BORCON	set	278
  1637  0191                     _EEADR	set	401
  1638  0196                     _EECON2	set	406
  1639  0193                     _EEDATA	set	403
  1640  018C                     _ANSELAbits	set	396
  1641  018E                     _ANSELCbits	set	398
  1642  018C                     _ANSELA	set	396
  1643  018E                     _ANSELC	set	398
  1644  0CA8                     _RD	set	3240
  1645  0CAA                     _WREN	set	3242
  1646  0CA9                     _WR	set	3241
  1647  020E                     _WPUC	set	526
  1648  020C                     _WPUA	set	524
  1649                           
  1650                           	psect	cinit
  1651  002F                     start_initialization:	
  1652                           ; #config settings
  1653                           
  1654  002F                     __initialization:
  1655                           
  1656                           ; Clear objects allocated to BITCOMMON
  1657  002F  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  1658  0030  01F1               	clrf	((__pbitbssCOMMON/(0+8)+1))& (0+127)
  1659  0031  01F2               	clrf	((__pbitbssCOMMON/(0+8)+2))& (0+127)
  1660                           
  1661                           ; Clear objects allocated to COMMON
  1662  0032  01F9               	clrf	__pbssCOMMON& (0+127)
  1663  0033  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  1664  0034  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  1665  0035  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  1666  0036  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
  1667                           
  1668                           ; Clear objects allocated to BITBANK0
  1669  0037  3020               	movlw	low (__pbitbssBANK0/(0+8))
  1670  0038  0084               	movwf	4
  1671  0039  3000               	movlw	high (__pbitbssBANK0/(0+8))
  1672  003A  0085               	movwf	5
  1673  003B  3014               	movlw	20
  1674  003C  3186  26A1  3180   	fcall	clear_ram0
  1675                           
  1676                           ; Clear objects allocated to BANK0
  1677  003F  3034               	movlw	low __pbssBANK0
  1678  0040  0084               	movwf	4
  1679  0041  3000               	movlw	high __pbssBANK0
  1680  0042  0085               	movwf	5
  1681  0043  301F               	movlw	31
  1682  0044  3186  26A1  3180   	fcall	clear_ram0
  1683  0047                     end_of_initialization:	
  1684                           ;End of C runtime variable initialization code
  1685                           
  1686  0047                     __end_of__initialization:
  1687  0047  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1688  0048  0020               	movlb	0
  1689  0049  3184  2C42         	ljmp	_main	;jump to C main() function
  1690                           
  1691                           	psect	bitbssCOMMON
  1692  0380                     __pbitbssCOMMON:
  1693  0380                     __ccovbit1_23:
  1694  0380                     	ds	1
  1695  0381                     __ccovbit5_22:
  1696  0381                     	ds	1
  1697  0382                     __ccovbit3_21:
  1698  0382                     	ds	1
  1699  0383                     __ccovbit6_20:
  1700  0383                     	ds	1
  1701  0384                     __ccovbit0_19:
  1702  0384                     	ds	1
  1703  0385                     __ccovbit1_18:
  1704  0385                     	ds	1
  1705  0386                     __ccovbit4_17:
  1706  0386                     	ds	1
  1707  0387                     __ccovbit2_16:
  1708  0387                     	ds	1
  1709  0388                     __ccovbit1_15:
  1710  0388                     	ds	1
  1711  0389                     __ccovbit6_14:
  1712  0389                     	ds	1
  1713  038A                     __ccovbit12_13:
  1714  038A                     	ds	1
  1715  038B                     __ccovbit10_12:
  1716  038B                     	ds	1
  1717  038C                     __ccovbit6_11:
  1718  038C                     	ds	1
  1719  038D                     __ccovbit5_10:
  1720  038D                     	ds	1
  1721  038E                     __ccovbit3_9:
  1722  038E                     	ds	1
  1723  038F                     __ccovbit2_8:
  1724  038F                     	ds	1
  1725  0390                     __ccovbit1_7:
  1726  0390                     	ds	1
  1727  0391                     __ccovbit6_6:
  1728  0391                     	ds	1
  1729  0392                     __ccovbit9_5:
  1730  0392                     	ds	1
  1731  0393                     __ccovbit3_4:
  1732  0393                     	ds	1
  1733  0394                     __ccovbit1_3:
  1734  0394                     	ds	1
  1735  0395                     __ccovbit3_2:
  1736  0395                     	ds	1
  1737  0396                     __ccovbit1_1:
  1738  0396                     	ds	1
  1739  0397                     EEPROM_WriteByte@status:
  1740  0397                     	ds	1
  1741                           
  1742                           	psect	bssCOMMON
  1743  0079                     __pbssCOMMON:
  1744  0079                     _ff:
  1745  0079                     	ds	4
  1746  007D                     _beep_short_count:
  1747  007D                     	ds	1
  1748                           
  1749                           	psect	bitbssBANK0
  1750  0100                     __pbitbssBANK0:
  1751  0100                     __ccovbit8_182:
  1752  0100                     	ds	1
  1753  0101                     __ccovbit3_181:
  1754  0101                     	ds	1
  1755  0102                     __ccovbit9_180:
  1756  0102                     	ds	1
  1757  0103                     __ccovbit6_179:
  1758  0103                     	ds	1
  1759  0104                     __ccovbit4_178:
  1760  0104                     	ds	1
  1761  0105                     __ccovbit31_177:
  1762  0105                     	ds	1
  1763  0106                     __ccovbit22_176:
  1764  0106                     	ds	1
  1765  0107                     __ccovbit20_175:
  1766  0107                     	ds	1
  1767  0108                     __ccovbit17_174:
  1768  0108                     	ds	1
  1769  0109                     __ccovbit14_173:
  1770  0109                     	ds	1
  1771  010A                     __ccovbit12_172:
  1772  010A                     	ds	1
  1773  010B                     __ccovbit7_171:
  1774  010B                     	ds	1
  1775  010C                     __ccovbit5_170:
  1776  010C                     	ds	1
  1777  010D                     __ccovbit31_169:
  1778  010D                     	ds	1
  1779  010E                     __ccovbit29_168:
  1780  010E                     	ds	1
  1781  010F                     __ccovbit26_167:
  1782  010F                     	ds	1
  1783  0110                     __ccovbit23_166:
  1784  0110                     	ds	1
  1785  0111                     __ccovbit21_165:
  1786  0111                     	ds	1
  1787  0112                     __ccovbit13_164:
  1788  0112                     	ds	1
  1789  0113                     __ccovbit11_163:
  1790  0113                     	ds	1
  1791  0114                     __ccovbit30_162:
  1792  0114                     	ds	1
  1793  0115                     __ccovbit28_161:
  1794  0115                     	ds	1
  1795  0116                     __ccovbit26_160:
  1796  0116                     	ds	1
  1797  0117                     __ccovbit22_159:
  1798  0117                     	ds	1
  1799  0118                     __ccovbit17_158:
  1800  0118                     	ds	1
  1801  0119                     __ccovbit16_157:
  1802  0119                     	ds	1
  1803  011A                     __ccovbit14_156:
  1804  011A                     	ds	1
  1805  011B                     __ccovbit3_155:
  1806  011B                     	ds	1
  1807  011C                     __ccovbit7_154:
  1808  011C                     	ds	1
  1809  011D                     __ccovbit4_153:
  1810  011D                     	ds	1
  1811  011E                     __ccovbit1_152:
  1812  011E                     	ds	1
  1813  011F                     __ccovbit4_151:
  1814  011F                     	ds	1
  1815  0120                     __ccovbit2_150:
  1816  0120                     	ds	1
  1817  0121                     __ccovbit20_149:
  1818  0121                     	ds	1
  1819  0122                     __ccovbit18_148:
  1820  0122                     	ds	1
  1821  0123                     __ccovbit12_147:
  1822  0123                     	ds	1
  1823  0124                     __ccovbit4_146:
  1824  0124                     	ds	1
  1825  0125                     __ccovbit3_145:
  1826  0125                     	ds	1
  1827  0126                     __ccovbit4_144:
  1828  0126                     	ds	1
  1829  0127                     __ccovbit2_143:
  1830  0127                     	ds	1
  1831  0128                     __ccovbit1_142:
  1832  0128                     	ds	1
  1833  0129                     __ccovbit22_141:
  1834  0129                     	ds	1
  1835  012A                     __ccovbit17_140:
  1836  012A                     	ds	1
  1837  012B                     __ccovbit16_139:
  1838  012B                     	ds	1
  1839  012C                     __ccovbit14_138:
  1840  012C                     	ds	1
  1841  012D                     __ccovbit10_137:
  1842  012D                     	ds	1
  1843  012E                     __ccovbit8_136:
  1844  012E                     	ds	1
  1845  012F                     __ccovbit5_135:
  1846  012F                     	ds	1
  1847  0130                     __ccovbit4_134:
  1848  0130                     	ds	1
  1849  0131                     __ccovbit2_133:
  1850  0131                     	ds	1
  1851  0132                     __ccovbit1_132:
  1852  0132                     	ds	1
  1853  0133                     __ccovbit31_131:
  1854  0133                     	ds	1
  1855  0134                     __ccovbit29_130:
  1856  0134                     	ds	1
  1857  0135                     __ccovbit23_129:
  1858  0135                     	ds	1
  1859  0136                     __ccovbit21_128:
  1860  0136                     	ds	1
  1861  0137                     __ccovbit19_127:
  1862  0137                     	ds	1
  1863  0138                     __ccovbit18_126:
  1864  0138                     	ds	1
  1865  0139                     __ccovbit16_125:
  1866  0139                     	ds	1
  1867  013A                     __ccovbit14_124:
  1868  013A                     	ds	1
  1869  013B                     __ccovbit10_123:
  1870  013B                     	ds	1
  1871  013C                     __ccovbit8_122:
  1872  013C                     	ds	1
  1873  013D                     __ccovbit4_121:
  1874  013D                     	ds	1
  1875  013E                     __ccovbit3_120:
  1876  013E                     	ds	1
  1877  013F                     __ccovbit5_119:
  1878  013F                     	ds	1
  1879  0140                     __ccovbit3_118:
  1880  0140                     	ds	1
  1881  0141                     __ccovbit1_117:
  1882  0141                     	ds	1
  1883  0142                     __ccovbit8_116:
  1884  0142                     	ds	1
  1885  0143                     __ccovbit5_115:
  1886  0143                     	ds	1
  1887  0144                     __ccovbit3_114:
  1888  0144                     	ds	1
  1889  0145                     __ccovbit1_113:
  1890  0145                     	ds	1
  1891  0146                     __ccovbit19_112:
  1892  0146                     	ds	1
  1893  0147                     __ccovbit17_111:
  1894  0147                     	ds	1
  1895  0148                     __ccovbit15_110:
  1896  0148                     	ds	1
  1897  0149                     __ccovbit14_109:
  1898  0149                     	ds	1
  1899  014A                     __ccovbit13_108:
  1900  014A                     	ds	1
  1901  014B                     __ccovbit12_107:
  1902  014B                     	ds	1
  1903  014C                     __ccovbit11_106:
  1904  014C                     	ds	1
  1905  014D                     __ccovbit8_105:
  1906  014D                     	ds	1
  1907  014E                     __ccovbit5_104:
  1908  014E                     	ds	1
  1909  014F                     __ccovbit4_103:
  1910  014F                     	ds	1
  1911  0150                     __ccovbit3_102:
  1912  0150                     	ds	1
  1913  0151                     __ccovbit2_101:
  1914  0151                     	ds	1
  1915  0152                     __ccovbit1_100:
  1916  0152                     	ds	1
  1917  0153                     __ccovbit14_99:
  1918  0153                     	ds	1
  1919  0154                     __ccovbit10_98:
  1920  0154                     	ds	1
  1921  0155                     __ccovbit7_97:
  1922  0155                     	ds	1
  1923  0156                     __ccovbit6_96:
  1924  0156                     	ds	1
  1925  0157                     __ccovbit4_95:
  1926  0157                     	ds	1
  1927  0158                     __ccovbit1_94:
  1928  0158                     	ds	1
  1929  0159                     __ccovbit17_93:
  1930  0159                     	ds	1
  1931  015A                     __ccovbit15_92:
  1932  015A                     	ds	1
  1933  015B                     __ccovbit13_91:
  1934  015B                     	ds	1
  1935  015C                     __ccovbit12_90:
  1936  015C                     	ds	1
  1937  015D                     __ccovbit11_89:
  1938  015D                     	ds	1
  1939  015E                     __ccovbit10_88:
  1940  015E                     	ds	1
  1941  015F                     __ccovbit7_87:
  1942  015F                     	ds	1
  1943  0160                     __ccovbit5_86:
  1944  0160                     	ds	1
  1945  0161                     __ccovbit4_85:
  1946  0161                     	ds	1
  1947  0162                     __ccovbit3_84:
  1948  0162                     	ds	1
  1949  0163                     __ccovbit2_83:
  1950  0163                     	ds	1
  1951  0164                     __ccovbit1_82:
  1952  0164                     	ds	1
  1953  0165                     __ccovbit1_81:
  1954  0165                     	ds	1
  1955  0166                     __ccovbit2_80:
  1956  0166                     	ds	1
  1957  0167                     __ccovbit27_79:
  1958  0167                     	ds	1
  1959  0168                     __ccovbit23_78:
  1960  0168                     	ds	1
  1961  0169                     __ccovbit22_77:
  1962  0169                     	ds	1
  1963  016A                     __ccovbit20_76:
  1964  016A                     	ds	1
  1965  016B                     __ccovbit18_75:
  1966  016B                     	ds	1
  1967  016C                     __ccovbit15_74:
  1968  016C                     	ds	1
  1969  016D                     __ccovbit14_73:
  1970  016D                     	ds	1
  1971  016E                     __ccovbit10_72:
  1972  016E                     	ds	1
  1973  016F                     __ccovbit7_71:
  1974  016F                     	ds	1
  1975  0170                     __ccovbit6_70:
  1976  0170                     	ds	1
  1977  0171                     __ccovbit4_69:
  1978  0171                     	ds	1
  1979  0172                     __ccovbit1_68:
  1980  0172                     	ds	1
  1981  0173                     __ccovbit9_67:
  1982  0173                     	ds	1
  1983  0174                     __ccovbit5_66:
  1984  0174                     	ds	1
  1985  0175                     __ccovbit4_65:
  1986  0175                     	ds	1
  1987  0176                     __ccovbit3_64:
  1988  0176                     	ds	1
  1989  0177                     __ccovbit1_63:
  1990  0177                     	ds	1
  1991  0178                     __ccovbit9_62:
  1992  0178                     	ds	1
  1993  0179                     __ccovbit5_61:
  1994  0179                     	ds	1
  1995  017A                     __ccovbit4_60:
  1996  017A                     	ds	1
  1997  017B                     __ccovbit3_59:
  1998  017B                     	ds	1
  1999  017C                     __ccovbit1_58:
  2000  017C                     	ds	1
  2001  017D                     __ccovbit5_57:
  2002  017D                     	ds	1
  2003  017E                     __ccovbit2_56:
  2004  017E                     	ds	1
  2005  017F                     __ccovbit1_55:
  2006  017F                     	ds	1
  2007  0180                     __ccovbit4_54:
  2008  0180                     	ds	1
  2009  0181                     __ccovbit2_53:
  2010  0181                     	ds	1
  2011  0182                     __ccovbit1_52:
  2012  0182                     	ds	1
  2013  0183                     __ccovbit5_51:
  2014  0183                     	ds	1
  2015  0184                     __ccovbit3_50:
  2016  0184                     	ds	1
  2017  0185                     __ccovbit2_49:
  2018  0185                     	ds	1
  2019  0186                     __ccovbit1_48:
  2020  0186                     	ds	1
  2021  0187                     __ccovbit8_47:
  2022  0187                     	ds	1
  2023  0188                     __ccovbit5_46:
  2024  0188                     	ds	1
  2025  0189                     __ccovbit2_45:
  2026  0189                     	ds	1
  2027  018A                     __ccovbit1_44:
  2028  018A                     	ds	1
  2029  018B                     __ccovbit6_43:
  2030  018B                     	ds	1
  2031  018C                     __ccovbit4_42:
  2032  018C                     	ds	1
  2033  018D                     __ccovbit2_41:
  2034  018D                     	ds	1
  2035  018E                     __ccovbit1_40:
  2036  018E                     	ds	1
  2037  018F                     __ccovbit6_39:
  2038  018F                     	ds	1
  2039  0190                     __ccovbit4_38:
  2040  0190                     	ds	1
  2041  0191                     __ccovbit2_37:
  2042  0191                     	ds	1
  2043  0192                     __ccovbit1_36:
  2044  0192                     	ds	1
  2045  0193                     __ccovbit5_35:
  2046  0193                     	ds	1
  2047  0194                     __ccovbit3_34:
  2048  0194                     	ds	1
  2049  0195                     __ccovbit1_33:
  2050  0195                     	ds	1
  2051  0196                     __ccovbit8_32:
  2052  0196                     	ds	1
  2053  0197                     __ccovbit6_31:
  2054  0197                     	ds	1
  2055  0198                     __ccovbit2_30:
  2056  0198                     	ds	1
  2057  0199                     __ccovbit8_29:
  2058  0199                     	ds	1
  2059  019A                     __ccovbit6_28:
  2060  019A                     	ds	1
  2061  019B                     __ccovbit2_27:
  2062  019B                     	ds	1
  2063  019C                     __ccovbit1_26:
  2064  019C                     	ds	1
  2065  019D                     __ccovbit1_25:
  2066  019D                     	ds	1
  2067  019E                     __ccovbit0_24:
  2068  019E                     	ds	1
  2069                           
  2070                           	psect	bssBANK0
  2071  0034                     __pbssBANK0:
  2072  0034                     _time_rotation:
  2073  0034                     	ds	3
  2074  0037                     ms_tick@s_count:
  2075  0037                     	ds	2
  2076  0039                     ms_tick@ms_count:
  2077  0039                     	ds	2
  2078  003B                     _time_zummer_long:
  2079  003B                     	ds	2
  2080  003D                     _time_zummer_short:
  2081  003D                     	ds	2
  2082  003F                     _time_tone:
  2083  003F                     	ds	2
  2084  0041                     _time_rele_gap:
  2085  0041                     	ds	2
  2086  0043                     _time_rele_control:
  2087  0043                     	ds	2
  2088  0045                     _time_rele_power:
  2089  0045                     	ds	2
  2090  0047                     _ADC_InterruptHandler:
  2091  0047                     	ds	2
  2092  0049                     get_jump@jump_counter:
  2093  0049                     	ds	1
  2094  004A                     get_fun@fun_counter:
  2095  004A                     	ds	1
  2096  004B                     get_wsp@bad_measures_counter:
  2097  004B                     	ds	1
  2098  004C                     sec_work@iled:
  2099  004C                     	ds	1
  2100  004D                     _beep_double_count:
  2101  004D                     	ds	1
  2102  004E                     _beep_long_count:
  2103  004E                     	ds	1
  2104  004F                     _time_meas:
  2105  004F                     	ds	1
  2106  0050                     _time_moving_wait:
  2107  0050                     	ds	1
  2108  0051                     _time_melody:
  2109  0051                     	ds	1
  2110  0052                     _sec_count:
  2111  0052                     	ds	1
  2112                           
  2113                           	psect	clrtext
  2114  06A1                     clear_ram0:	
  2115                           ;	Called with FSR0 containing the base address, and
  2116                           ;	WREG with the size to clear
  2117                           
  2118  06A1  0064               	clrwdt	;clear the watchdog before getting into this loop
  2119  06A2                     clrloop0:
  2120  06A2  0180               	clrf	0	;clear RAM location pointed to by FSR
  2121  06A3  3101               	addfsr 0,1
  2122  06A4  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2123  06A5  2EA2               	goto	clrloop0	;have we reached the end yet?
  2124  06A6  3400               	retlw	0	;all done for this memory range, return
  2125                           
  2126                           	psect	cstackCOMMON
  2127  0073                     __pcstackCOMMON:
  2128  0073                     ?_PIN_MANAGER_Initialize:
  2129  0073                     ?_OSCILLATOR_Initialize:	
  2130                           ; 1 bytes @ 0x0
  2131                           
  2132  0073                     ?_WDT_Initialize:	
  2133                           ; 1 bytes @ 0x0
  2134                           
  2135  0073                     ?_TMR2_Initialize:	
  2136                           ; 1 bytes @ 0x0
  2137                           
  2138  0073                     ?_ADC_Initialize:	
  2139                           ; 1 bytes @ 0x0
  2140                           
  2141  0073                     ?_TMR0_Initialize:	
  2142                           ; 1 bytes @ 0x0
  2143                           
  2144  0073                     ?_TMR0_ISR:	
  2145                           ; 1 bytes @ 0x0
  2146                           
  2147  0073                     ??_TMR0_ISR:	
  2148                           ; 1 bytes @ 0x0
  2149                           
  2150  0073                     ?_TMR2_ISR:	
  2151                           ; 1 bytes @ 0x0
  2152                           
  2153  0073                     ?_TMR2_DefaultInterruptHandler:	
  2154                           ; 1 bytes @ 0x0
  2155                           
  2156  0073                     ??_TMR2_DefaultInterruptHandler:	
  2157                           ; 1 bytes @ 0x0
  2158                           
  2159  0073                     ?_TMR0_DefaultInterruptHandler:	
  2160                           ; 1 bytes @ 0x0
  2161                           
  2162  0073                     ??_TMR0_DefaultInterruptHandler:	
  2163                           ; 1 bytes @ 0x0
  2164                           
  2165  0073                     ?_EEPROM_ReadByte:	
  2166                           ; 1 bytes @ 0x0
  2167                           
  2168  0073                     ?_SYSTEM_Initialize:	
  2169                           ; 1 bytes @ 0x0
  2170                           
  2171  0073                     ?_ADC_GetConversion:	
  2172                           ; 1 bytes @ 0x0
  2173                           
  2174  0073                     ?_INTERRUPT_InterruptManager:	
  2175                           ; 1 bytes @ 0x0
  2176                           
  2177  0073                     ?_TMR2_StartTimer:	
  2178                           ; 1 bytes @ 0x0
  2179                           
  2180  0073                     ?_start_tone:	
  2181                           ; 1 bytes @ 0x0
  2182                           
  2183  0073                     ??_start_tone:	
  2184                           ; 1 bytes @ 0x0
  2185                           
  2186  0073                     ?_stop_tone:	
  2187                           ; 1 bytes @ 0x0
  2188                           
  2189  0073                     ??_stop_tone:	
  2190                           ; 1 bytes @ 0x0
  2191                           
  2192  0073                     ?_beep_short:	
  2193                           ; 1 bytes @ 0x0
  2194                           
  2195  0073                     ??_beep_short:	
  2196                           ; 1 bytes @ 0x0
  2197                           
  2198  0073                     ?_beep_long:	
  2199                           ; 1 bytes @ 0x0
  2200                           
  2201  0073                     ??_beep_long:	
  2202                           ; 1 bytes @ 0x0
  2203                           
  2204  0073                     ?_beep_double:	
  2205                           ; 1 bytes @ 0x0
  2206                           
  2207  0073                     ??_beep_double:	
  2208                           ; 1 bytes @ 0x0
  2209                           
  2210  0073                     ?_go_close:	
  2211                           ; 1 bytes @ 0x0
  2212                           
  2213  0073                     ?_go_close_short:	
  2214                           ; 1 bytes @ 0x0
  2215                           
  2216  0073                     ?_go_open:	
  2217                           ; 1 bytes @ 0x0
  2218                           
  2219  0073                     ?_go_close_alt:	
  2220                           ; 1 bytes @ 0x0
  2221                           
  2222  0073                     ?_go_open_alt:	
  2223                           ; 1 bytes @ 0x0
  2224                           
  2225  0073                     ?_rele_off:	
  2226                           ; 1 bytes @ 0x0
  2227                           
  2228  0073                     ?_close:	
  2229                           ; 1 bytes @ 0x0
  2230                           
  2231  0073                     ?_open:	
  2232                           ; 1 bytes @ 0x0
  2233                           
  2234  0073                     ?_rele_tick:	
  2235                           ; 1 bytes @ 0x0
  2236                           
  2237  0073                     ??_rele_tick:	
  2238                           ; 1 bytes @ 0x0
  2239                           
  2240  0073                     ?_start_alarm:	
  2241                           ; 1 bytes @ 0x0
  2242                           
  2243  0073                     ?_clear_alarm:	
  2244                           ; 1 bytes @ 0x0
  2245                           
  2246  0073                     ?_fun_work:	
  2247                           ; 1 bytes @ 0x0
  2248                           
  2249  0073                     ?_switch_wm:	
  2250                           ; 1 bytes @ 0x0
  2251                           
  2252  0073                     ?_autorotation_work:	
  2253                           ; 1 bytes @ 0x0
  2254                           
  2255  0073                     ?_minute_tick:	
  2256                           ; 1 bytes @ 0x0
  2257                           
  2258  0073                     ??_minute_tick:	
  2259                           ; 1 bytes @ 0x0
  2260                           
  2261  0073                     ?_sec_30_work:	
  2262                           ; 1 bytes @ 0x0
  2263                           
  2264  0073                     ??_sec_30_work:	
  2265                           ; 1 bytes @ 0x0
  2266                           
  2267  0073                     ?_sec_work:	
  2268                           ; 1 bytes @ 0x0
  2269                           
  2270  0073                     ?_ms_200_work:	
  2271                           ; 1 bytes @ 0x0
  2272                           
  2273  0073                     ??_ms_200_work:	
  2274                           ; 1 bytes @ 0x0
  2275                           
  2276  0073                     ?_ms_100_work:	
  2277                           ; 1 bytes @ 0x0
  2278                           
  2279  0073                     ??_ms_100_work:	
  2280                           ; 1 bytes @ 0x0
  2281                           
  2282  0073                     ?_ms_tick:	
  2283                           ; 1 bytes @ 0x0
  2284                           
  2285  0073                     ?_eeprom_set:	
  2286                           ; 1 bytes @ 0x0
  2287                           
  2288  0073                     ?_hardware_work:	
  2289                           ; 1 bytes @ 0x0
  2290                           
  2291  0073                     ?_zummer_switch:	
  2292                           ; 1 bytes @ 0x0
  2293                           
  2294  0073                     ??_zummer_switch:	
  2295                           ; 1 bytes @ 0x0
  2296                           
  2297  0073                     ?_get_wsp:	
  2298                           ; 1 bytes @ 0x0
  2299                           
  2300  0073                     ?_get_fun:	
  2301                           ; 1 bytes @ 0x0
  2302                           
  2303  0073                     ?_get_jump:	
  2304                           ; 1 bytes @ 0x0
  2305                           
  2306  0073                     ?_start_setup:	
  2307                           ; 1 bytes @ 0x0
  2308                           
  2309  0073                     ?_main:	
  2310                           ; 1 bytes @ 0x0
  2311                           
  2312                           
  2313                           ; 1 bytes @ 0x0
  2314  0073                     	ds	1
  2315  0074                     ??_sec_work:
  2316                           
  2317                           ; 1 bytes @ 0x1
  2318  0074                     	ds	1
  2319  0075                     ??_PIN_MANAGER_Initialize:
  2320  0075                     ??_OSCILLATOR_Initialize:	
  2321                           ; 1 bytes @ 0x2
  2322                           
  2323  0075                     ??_WDT_Initialize:	
  2324                           ; 1 bytes @ 0x2
  2325                           
  2326  0075                     ??_ADC_Initialize:	
  2327                           ; 1 bytes @ 0x2
  2328                           
  2329  0075                     ??_TMR2_ISR:	
  2330                           ; 1 bytes @ 0x2
  2331                           
  2332  0075                     ?_TMR2_SetInterruptHandler:	
  2333                           ; 1 bytes @ 0x2
  2334                           
  2335  0075                     ?_TMR0_SetInterruptHandler:	
  2336                           ; 1 bytes @ 0x2
  2337                           
  2338  0075                     ??_EEPROM_ReadByte:	
  2339                           ; 1 bytes @ 0x2
  2340                           
  2341  0075                     ?_EEPROM_WriteByte:	
  2342                           ; 1 bytes @ 0x2
  2343                           
  2344  0075                     ??_ADC_GetConversion:	
  2345                           ; 1 bytes @ 0x2
  2346                           
  2347  0075                     ??_INTERRUPT_InterruptManager:	
  2348                           ; 1 bytes @ 0x2
  2349                           
  2350  0075                     ??_TMR2_StartTimer:	
  2351                           ; 1 bytes @ 0x2
  2352                           
  2353  0075                     ??_go_close:	
  2354                           ; 1 bytes @ 0x2
  2355                           
  2356  0075                     ??_go_close_short:	
  2357                           ; 1 bytes @ 0x2
  2358                           
  2359  0075                     ??_go_open:	
  2360                           ; 1 bytes @ 0x2
  2361                           
  2362  0075                     ??_go_close_alt:	
  2363                           ; 1 bytes @ 0x2
  2364                           
  2365  0075                     ??_go_open_alt:	
  2366                           ; 1 bytes @ 0x2
  2367                           
  2368  0075                     ??_rele_off:	
  2369                           ; 1 bytes @ 0x2
  2370                           
  2371  0075                     ??_start_alarm:	
  2372                           ; 1 bytes @ 0x2
  2373                           
  2374  0075                     ??_clear_alarm:	
  2375                           ; 1 bytes @ 0x2
  2376                           
  2377  0075                     ??_autorotation_work:	
  2378                           ; 1 bytes @ 0x2
  2379                           
  2380  0075                     ??_ms_tick:	
  2381                           ; 1 bytes @ 0x2
  2382                           
  2383  0075                     ??_hardware_work:	
  2384                           ; 1 bytes @ 0x2
  2385                           
  2386  0075                     ??_get_fun:	
  2387                           ; 1 bytes @ 0x2
  2388                           
  2389  0075                     ??_get_jump:	
  2390                           ; 1 bytes @ 0x2
  2391                           
  2392  0075                     EEPROM_WriteByte@dt:	
  2393                           ; 1 bytes @ 0x2
  2394                           
  2395  0075                     TMR2_SetInterruptHandler@InterruptHandler:	
  2396                           ; 1 bytes @ 0x2
  2397                           
  2398  0075                     TMR0_SetInterruptHandler@InterruptHandler:	
  2399                           ; 2 bytes @ 0x2
  2400                           
  2401                           
  2402                           ; 2 bytes @ 0x2
  2403  0075                     	ds	1
  2404  0076                     ??_EEPROM_WriteByte:
  2405  0076                     ??_close:	
  2406                           ; 1 bytes @ 0x3
  2407                           
  2408  0076                     ??_open:	
  2409                           ; 1 bytes @ 0x3
  2410                           
  2411  0076                     ??_fun_work:	
  2412                           ; 1 bytes @ 0x3
  2413                           
  2414  0076                     ??_switch_wm:	
  2415                           ; 1 bytes @ 0x3
  2416                           
  2417  0076                     ADC_GetConversion@channel:	
  2418                           ; 1 bytes @ 0x3
  2419                           
  2420                           
  2421                           ; 1 bytes @ 0x3
  2422  0076                     	ds	1
  2423  0077                     ??_TMR2_Initialize:
  2424  0077                     ??_TMR0_Initialize:	
  2425                           ; 1 bytes @ 0x4
  2426                           
  2427  0077                     ??_TMR2_SetInterruptHandler:	
  2428                           ; 1 bytes @ 0x4
  2429                           
  2430  0077                     ??_TMR0_SetInterruptHandler:	
  2431                           ; 1 bytes @ 0x4
  2432                           
  2433  0077                     ??_get_wsp:	
  2434                           ; 1 bytes @ 0x4
  2435                           
  2436  0077                     EEPROM_ReadByte@addr:	
  2437                           ; 1 bytes @ 0x4
  2438                           
  2439                           
  2440                           ; 1 bytes @ 0x4
  2441  0077                     	ds	1
  2442  0078                     ??_SYSTEM_Initialize:
  2443  0078                     EEPROM_WriteByte@addr:	
  2444                           ; 1 bytes @ 0x5
  2445                           
  2446                           
  2447                           ; 1 bytes @ 0x5
  2448  0078                     	ds	1
  2449  0079                     ??_start_setup:
  2450  0079                     ??_main:	
  2451                           ; 1 bytes @ 0x6
  2452                           
  2453                           
  2454                           	psect	cstackBANK0
  2455  0058                     __pcstackBANK0:	
  2456                           ; 1 bytes @ 0x6
  2457                           
  2458  0058                     ??_eeprom_set:
  2459  0058                     get_wsp@res:	
  2460                           ; 1 bytes @ 0x0
  2461                           
  2462                           
  2463                           ; 2 bytes @ 0x0
  2464  0058                     	ds	1
  2465  0059                     eeprom_set@vers:
  2466                           
  2467                           ; 1 bytes @ 0x1
  2468  0059                     	ds	1
  2469                           
  2470                           	psect	maintext
  2471  0442                     __pmaintext:	
  2472 ;;
  2473 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2474 ;;
  2475 ;; *************** function _main *****************
  2476 ;; Defined at:
  2477 ;;		line 830 in file "main.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;		None
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;		None
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		wreg, status,2, status,0, pclath, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : B1F/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2491 ;;      Params:         0       0       0       0
  2492 ;;      Locals:         0       0       0       0
  2493 ;;      Temps:          0       0       0       0
  2494 ;;      Totals:         0       0       0       0
  2495 ;;Total ram usage:        0 bytes
  2496 ;; Hardware stack levels required when called: 11
  2497 ;; This function calls:
  2498 ;;		_autorotation_work
  2499 ;;		_close
  2500 ;;		_fun_work
  2501 ;;		_get_fun
  2502 ;;		_get_jump
  2503 ;;		_get_wsp
  2504 ;;		_hardware_work
  2505 ;;		_start_setup
  2506 ;;		_switch_wm
  2507 ;; This function is called by:
  2508 ;;		Startup code after reset
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512  0442                     _main:	
  2513                           ;psect for function _main
  2514                           
  2515                           
  2516                           ;incstack = 0
  2517                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  2518  0442                     l2684:
  2519                           
  2520                           ;main.c: 832:     start_setup();
  2521  0442  3183  230C  3184   	fcall	_start_setup
  2522  0445                     __ccov385_end_blk0:
  2523  0445                     __ccov386_start_blk1:
  2524  0445                     l551:	
  2525                           ;main.c: 835:     while (1) {
  2526                           
  2527  0445  0064               	clrwdt	;# 
  2528  0446                     __ccov386_end_blk1:
  2529  0446                     __ccov387_start_blk2:
  2530  0446                     l2686:
  2531                           
  2532                           ;main.c: 839:         hardware_work();
  2533  0446  3183  234C  3184   	fcall	_hardware_work
  2534  0449                     __ccov387_end_blk2:
  2535  0449                     __ccov388_start_blk3:
  2536  0449                     l2688:
  2537                           
  2538                           ;main.c: 843:         if (!ff.bits.ALARM_ON) {
  2539  0449  1879               	btfsc	_ff,0
  2540  044A  2C4C               	goto	u2751
  2541  044B  2C4D               	goto	u2750
  2542  044C                     u2751:
  2543  044C  2C62               	goto	l2692
  2544  044D                     __ccov388_end_blk3:
  2545  044D                     u2750:
  2546  044D                     __ccov389_start_blk4:
  2547  044D                     l2690:
  2548  044D  0020               	movlb	0	; select bank0
  2549  044E  1620               	bsf	__ccovbit4_178/(0+8),__ccovbit4_178& (0+7)	;volatile
  2550                           
  2551                           ;main.c: 845:             get_jump();
  2552  044F  3183  2387  3184   	fcall	_get_jump
  2553                           
  2554                           ;main.c: 846:             switch_wm();
  2555  0452  3183  23C2  3184   	fcall	_switch_wm
  2556                           
  2557                           ;main.c: 848:             get_fun();
  2558  0455  3181  21F7  3184   	fcall	_get_fun
  2559                           
  2560                           ;main.c: 849:             fun_work();
  2561  0458  3182  223F  3184   	fcall	_fun_work
  2562                           
  2563                           ;main.c: 851:             get_wsp();
  2564  045B  3181  2135  3184   	fcall	_get_wsp
  2565                           
  2566                           ;main.c: 853:             autorotation_work();
  2567  045E  3180  20CC  3184   	fcall	_autorotation_work
  2568                           
  2569                           ;main.c: 855:         } else {
  2570  0461  2C45               	goto	l551
  2571  0462                     __ccov389_end_blk4:
  2572  0462                     __ccov390_start_blk6:
  2573  0462                     l2692:
  2574  0462  0020               	movlb	0	; select bank0
  2575  0463  15A0               	bsf	__ccovbit6_179/(0+8),__ccovbit6_179& (0+7)	;volatile
  2576                           
  2577                           ;main.c: 856:             close();
  2578  0464  3184  24B1  3184   	fcall	_close
  2579  0467  2C45               	goto	l551
  2580  0468                     __ccov390_end_blk6:
  2581  0468  3180  282D         	ljmp	start
  2582  046A                     __end_of_main:
  2583                           
  2584                           	psect	text1
  2585  03C2                     __ptext1:	
  2586 ;; *************** function _switch_wm *****************
  2587 ;; Defined at:
  2588 ;;		line 358 in file "main.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;		None
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;		None
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      void 
  2595 ;; Registers used:
  2596 ;;		wreg, status,2, status,0, pclath, cstack
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2602 ;;      Params:         0       0       0       0
  2603 ;;      Locals:         0       0       0       0
  2604 ;;      Temps:          1       0       0       0
  2605 ;;      Totals:         1       0       0       0
  2606 ;;Total ram usage:        1 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; Hardware stack levels required when called: 8
  2609 ;; This function calls:
  2610 ;;		_rele_off
  2611 ;; This function is called by:
  2612 ;;		_main
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616  03C2                     _switch_wm:	
  2617                           ;psect for function _switch_wm
  2618                           
  2619                           
  2620                           ;incstack = 0
  2621                           ; Regs used in _switch_wm: [wreg+status,2+status,0+pclath+cstack]
  2622  03C2                     l2296:
  2623                           
  2624                           ;main.c: 359:     if (ff.bits.JUMP_LOW) {
  2625  03C2  1FF9               	btfss	_ff,7
  2626  03C3  2BC5               	goto	u2211
  2627  03C4  2BC6               	goto	u2210
  2628  03C5                     u2211:
  2629  03C5  2BD8               	goto	l392
  2630  03C6                     __ccov203_end_blk0:
  2631  03C6                     u2210:
  2632  03C6                     __ccov204_start_blk1:
  2633  03C6                     l2298:
  2634  03C6  0020               	movlb	0	; select bank0
  2635  03C7  142B               	bsf	__ccovbit1_94/(0+8),__ccovbit1_94& (0+7)	;volatile
  2636                           
  2637                           ;main.c: 360:         if (!ff.bits.UNIVERSAL_VORK_MODE_ON) {
  2638  03C8  1AFB               	btfsc	_ff+2,5
  2639  03C9  2BCB               	goto	u2221
  2640  03CA  2BCC               	goto	u2220
  2641  03CB                     u2221:
  2642  03CB  2BEC               	goto	l397
  2643  03CC                     __ccov204_end_blk1:
  2644  03CC                     u2220:
  2645  03CC                     __ccov205_start_blk2:
  2646  03CC                     l2300:
  2647                           
  2648                           ;main.c: 361:             ff.bits.NORMAL_WORK_MODE_ON = 0;
  2649  03CC  127B               	bcf	_ff+2,4
  2650                           
  2651                           ;main.c: 362:             ff.bits.UNIVERSAL_VORK_MODE_ON = 1;
  2652  03CD  16FB               	bsf	_ff+2,5
  2653  03CE                     __ccov205_end_blk2:
  2654  03CE                     __ccov206_start_blk3:
  2655  03CE                     l2302:
  2656                           
  2657                           ;main.c: 363:             rele_off();
  2658  03CE  3185  25B1  3183   	fcall	_rele_off
  2659  03D1                     __ccov206_end_blk3:
  2660  03D1                     __ccov207_start_blk4:
  2661  03D1                     l2304:
  2662  03D1  0020               	movlb	0	; select bank0
  2663  03D2  17AA               	bsf	__ccovbit4_95/(0+8),__ccovbit4_95& (0+7)	;volatile
  2664                           
  2665                           ;main.c: 365:             beep_long_count = 2;
  2666  03D3  3002               	movlw	2
  2667  03D4  00F6               	movwf	??_switch_wm
  2668  03D5  0876               	movf	??_switch_wm,w
  2669  03D6  00CE               	movwf	_beep_long_count
  2670  03D7  2BEC               	goto	l397
  2671  03D8                     __ccov207_end_blk4:
  2672  03D8                     __ccov208_start_blk6:
  2673  03D8                     l392:
  2674  03D8  0020               	movlb	0	; select bank0
  2675  03D9  172A               	bsf	__ccovbit6_96/(0+8),__ccovbit6_96& (0+7)	;volatile
  2676  03DA  1C7A               	btfss	_ff+1,0
  2677  03DB  2BDD               	goto	u2231
  2678  03DC  2BDE               	goto	u2230
  2679  03DD                     u2231:
  2680  03DD  2BEC               	goto	l397
  2681  03DE                     __ccov208_end_blk6:
  2682  03DE                     u2230:
  2683  03DE                     __ccov209_start_blk7:
  2684  03DE                     l2306:
  2685  03DE  16AA               	bsf	__ccovbit7_97/(0+8),__ccovbit7_97& (0+7)	;volatile
  2686                           
  2687                           ;main.c: 368:         if (!ff.bits.NORMAL_WORK_MODE_ON) {
  2688  03DF  1A7B               	btfsc	_ff+2,4
  2689  03E0  2BE2               	goto	u2241
  2690  03E1  2BE3               	goto	u2240
  2691  03E2                     u2241:
  2692  03E2  2BEC               	goto	l397
  2693  03E3                     __ccov209_end_blk7:
  2694  03E3                     u2240:
  2695  03E3                     __ccov210_start_blk8:
  2696  03E3                     l2308:
  2697                           
  2698                           ;main.c: 369:             ff.bits.NORMAL_WORK_MODE_ON = 1;
  2699  03E3  167B               	bsf	_ff+2,4
  2700                           
  2701                           ;main.c: 370:             ff.bits.UNIVERSAL_VORK_MODE_ON = 0;
  2702  03E4  12FB               	bcf	_ff+2,5
  2703  03E5                     __ccov210_end_blk8:
  2704  03E5                     __ccov211_start_blk9:
  2705  03E5                     l2310:
  2706                           
  2707                           ;main.c: 371:             rele_off();
  2708  03E5  3185  25B1  3183   	fcall	_rele_off
  2709  03E8                     __ccov211_end_blk9:
  2710  03E8                     __ccov212_start_blk10:
  2711  03E8                     l2312:
  2712  03E8  0020               	movlb	0	; select bank0
  2713  03E9  162A               	bsf	__ccovbit10_98/(0+8),__ccovbit10_98& (0+7)	;volatile
  2714                           
  2715                           ;main.c: 373:             beep_long_count = 1;
  2716  03EA  01CE               	clrf	_beep_long_count
  2717  03EB  0ACE               	incf	_beep_long_count,f
  2718  03EC                     __ccov212_end_blk10:
  2719  03EC                     __ccov213_start_blk14:
  2720  03EC                     l397:
  2721  03EC  15AA               	bsf	__ccovbit14_99/(0+8),__ccovbit14_99& (0+7)	;volatile
  2722  03ED  0008               	return
  2723  03EE                     __end_of_switch_wm:
  2724  03EE                     
  2725                           	psect	text2
  2726  030C                     __ptext2:	
  2727 ;; *************** function _start_setup *****************
  2728 ;; Defined at:
  2729 ;;		line 750 in file "main.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, status,0, pclath, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2743 ;;      Params:         0       0       0       0
  2744 ;;      Locals:         0       0       0       0
  2745 ;;      Temps:          0       0       0       0
  2746 ;;      Totals:         0       0       0       0
  2747 ;;Total ram usage:        0 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; Hardware stack levels required when called: 10
  2750 ;; This function calls:
  2751 ;;		_SYSTEM_Initialize
  2752 ;;		_TMR0_SetInterruptHandler
  2753 ;;		_TMR2_SetInterruptHandler
  2754 ;;		_TMR2_StartTimer
  2755 ;;		_eeprom_set
  2756 ;; This function is called by:
  2757 ;;		_main
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761  030C                     _start_setup:	
  2762                           ;psect for function _start_setup
  2763                           
  2764                           
  2765                           ;incstack = 0
  2766                           ; Regs used in _start_setup: [wreg+status,2+status,0+pclath+cstack]
  2767  030C                     l2632:
  2768                           
  2769                           ;main.c: 752:     SYSTEM_Initialize();
  2770  030C  3185  25DF  3183   	fcall	_SYSTEM_Initialize
  2771  030F                     __ccov364_end_blk0:
  2772  030F                     __ccov365_start_blk1:
  2773  030F                     l2634:
  2774                           
  2775                           ;main.c: 753:     (INTCONbits.GIE = 1);
  2776  030F  178B               	bsf	11,7	;volatile
  2777  0310                     __ccov365_end_blk1:
  2778  0310                     __ccov366_start_blk2:
  2779  0310                     l2636:
  2780                           
  2781                           ;main.c: 754:     (INTCONbits.PEIE = 1);
  2782  0310  170B               	bsf	11,6	;volatile
  2783                           
  2784                           ;main.c: 757:     eeprom_set();
  2785  0311  3185  256C  3183   	fcall	_eeprom_set
  2786                           
  2787                           ;main.c: 759:     TMR0_SetInterruptHandler(zummer_switch);
  2788  0314  306B               	movlw	low _zummer_switch
  2789  0315  00F5               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2790  0316  3006               	movlw	high _zummer_switch
  2791  0317  00F6               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2792  0318  3186  269A  3183   	fcall	_TMR0_SetInterruptHandler
  2793                           
  2794                           ;main.c: 760:     TMR2_SetInterruptHandler(ms_tick);
  2795  031B  30CA               	movlw	low _ms_tick
  2796  031C  00F5               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2797  031D  3002               	movlw	high _ms_tick
  2798  031E  00F6               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2799  031F  3186  2693  3183   	fcall	_TMR2_SetInterruptHandler
  2800  0322                     __ccov366_end_blk2:
  2801  0322                     __ccov367_start_blk3:
  2802  0322                     l2638:
  2803                           
  2804                           ;main.c: 761:     TMR2_StartTimer();
  2805  0322  3186  26BD  3183   	fcall	_TMR2_StartTimer
  2806  0325                     __ccov367_end_blk3:
  2807  0325                     __ccov368_start_blk4:
  2808  0325                     l2640:
  2809                           
  2810                           ;main.c: 778:     INTCONbits.TMR0IE = 0;
  2811  0325  128B               	bcf	11,5	;volatile
  2812                           
  2813                           ;main.c: 779:     ff.value = 0;
  2814  0326  3000               	movlw	0
  2815  0327  00FC               	movwf	_ff+3
  2816  0328  3000               	movlw	0
  2817  0329  00FB               	movwf	_ff+2
  2818  032A  3000               	movlw	0
  2819  032B  00FA               	movwf	_ff+1
  2820  032C  3000               	movlw	0
  2821  032D  00F9               	movwf	_ff
  2822  032E                     __ccov368_end_blk4:
  2823  032E                     __ccov369_start_blk6:
  2824  032E                     l2642:
  2825  032E  0022               	movlb	2	; select bank2
  2826  032F  128E               	bcf	14,5	;volatile
  2827  0330                     __ccov369_end_blk6:
  2828  0330                     __ccov370_start_blk9:
  2829  0330                     l2644:
  2830  0330  120E               	bcf	14,4	;volatile
  2831  0331                     __ccov370_end_blk9:
  2832  0331                     __ccov371_start_blk12:
  2833  0331                     l2646:
  2834  0331  100E               	bcf	14,0	;volatile
  2835  0332                     __ccov371_end_blk12:
  2836  0332                     __ccov372_start_blk15:
  2837  0332                     l2648:
  2838  0332  108E               	bcf	14,1	;volatile
  2839  0333                     __ccov372_end_blk15:
  2840  0333                     __ccov373_start_blk18:
  2841  0333                     l2650:
  2842  0333  128C               	bcf	12,5	;volatile
  2843  0334                     __ccov373_end_blk18:
  2844  0334                     __ccov374_start_blk21:
  2845  0334                     l2652:
  2846  0334  120C               	bcf	12,4	;volatile
  2847  0335                     __ccov374_end_blk21:
  2848  0335                     __ccov375_start_blk22:
  2849  0335                     l545:
  2850                           
  2851                           ;main.c: 788:     time_rotation = 0;
  2852  0335  3000               	movlw	0
  2853  0336  0020               	movlb	0	; select bank0
  2854  0337  00B4               	movwf	_time_rotation
  2855  0338  3000               	movlw	0
  2856  0339  00B5               	movwf	_time_rotation+1
  2857  033A  3000               	movlw	0
  2858  033B  00B6               	movwf	_time_rotation+2
  2859  033C                     __ccov375_end_blk22:
  2860  033C                     __ccov376_start_blk23:
  2861  033C                     l2654:
  2862                           
  2863                           ;main.c: 789:     time_rele_power = 0;
  2864  033C  01C5               	clrf	_time_rele_power
  2865  033D  01C6               	clrf	_time_rele_power+1
  2866  033E                     __ccov376_end_blk23:
  2867  033E                     __ccov377_start_blk24:
  2868  033E                     l2656:
  2869                           
  2870                           ;main.c: 790:     time_rele_control = 0;
  2871  033E  01C3               	clrf	_time_rele_control
  2872  033F  01C4               	clrf	_time_rele_control+1
  2873  0340                     __ccov377_end_blk24:
  2874  0340                     __ccov378_start_blk25:
  2875  0340                     l2658:
  2876                           
  2877                           ;main.c: 791:     time_rele_gap = 0;
  2878  0340  01C1               	clrf	_time_rele_gap
  2879  0341  01C2               	clrf	_time_rele_gap+1
  2880  0342                     __ccov378_end_blk25:
  2881  0342                     __ccov379_start_blk26:
  2882  0342                     l2660:
  2883                           
  2884                           ;main.c: 792:     time_tone = 0;
  2885  0342  01BF               	clrf	_time_tone
  2886  0343  01C0               	clrf	_time_tone+1
  2887  0344                     __ccov379_end_blk26:
  2888  0344                     __ccov380_start_blk27:
  2889  0344                     l2662:
  2890                           
  2891                           ;main.c: 797:     time_melody = 0;
  2892  0344  01D1               	clrf	_time_melody
  2893  0345                     __ccov380_end_blk27:
  2894  0345                     __ccov381_start_blk28:
  2895  0345                     l2664:
  2896                           
  2897                           ;main.c: 798:     time_zummer_short = 0;
  2898  0345  01BD               	clrf	_time_zummer_short
  2899  0346  01BE               	clrf	_time_zummer_short+1
  2900  0347                     __ccov381_end_blk28:
  2901  0347                     __ccov382_start_blk29:
  2902  0347                     l2666:
  2903                           
  2904                           ;main.c: 799:     time_zummer_long = 0;
  2905  0347  01BB               	clrf	_time_zummer_long
  2906  0348  01BC               	clrf	_time_zummer_long+1
  2907  0349                     __ccov382_end_blk29:
  2908  0349                     __ccov383_start_blk30:
  2909  0349                     l2668:
  2910                           
  2911                           ;main.c: 802:     time_meas = 0;
  2912  0349  01CF               	clrf	_time_meas
  2913  034A                     __ccov383_end_blk30:
  2914  034A                     __ccov384_start_blk31:
  2915  034A                     l546:
  2916  034A  16A0               	bsf	__ccovbit31_177/(0+8),__ccovbit31_177& (0+7)	;volatile
  2917  034B  0008               	return
  2918  034C                     __end_of_start_setup:
  2919  034C                     
  2920                           	psect	text3
  2921  056C                     __ptext3:	
  2922 ;; *************** function _eeprom_set *****************
  2923 ;; Defined at:
  2924 ;;		line 558 in file "main.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;		None
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  vers            1    1[BANK0 ] unsigned char 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      void 
  2931 ;; Registers used:
  2932 ;;		wreg, status,2, status,0, pclath, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2938 ;;      Params:         0       0       0       0
  2939 ;;      Locals:         0       1       0       0
  2940 ;;      Temps:          0       1       0       0
  2941 ;;      Totals:         0       2       0       0
  2942 ;;Total ram usage:        2 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; Hardware stack levels required when called: 8
  2945 ;; This function calls:
  2946 ;;		_EEPROM_ReadByte
  2947 ;;		_EEPROM_WriteByte
  2948 ;; This function is called by:
  2949 ;;		_start_setup
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953  056C                     _eeprom_set:	
  2954                           ;psect for function _eeprom_set
  2955                           
  2956                           
  2957                           ;incstack = 0
  2958                           ; Regs used in _eeprom_set: [wreg+status,2+status,0+pclath+cstack]
  2959  056C                     l2594:
  2960                           
  2961                           ;main.c: 559:     char vers = EEPROM_ReadByte(FRIMWARE_VERSION_EEPROM_ADR);
  2962  056C  3001               	movlw	1
  2963  056D  3185  2509  3185   	fcall	_EEPROM_ReadByte
  2964  0570  0020               	movlb	0	; select bank0
  2965  0571  00D8               	movwf	??_eeprom_set
  2966  0572  0858               	movf	??_eeprom_set,w
  2967  0573  00D9               	movwf	eeprom_set@vers
  2968  0574                     __ccov297_end_blk0:
  2969  0574                     __ccov298_start_blk1:
  2970  0574                     l2596:
  2971                           
  2972                           ;main.c: 560:     if (vers == 0xFF) {
  2973  0574  0A59               	incf	eeprom_set@vers,w
  2974  0575  1D03               	btfss	3,2
  2975  0576  2D78               	goto	u2691
  2976  0577  2D79               	goto	u2690
  2977  0578                     u2691:
  2978  0578  2D80               	goto	l466
  2979  0579                     __ccov298_end_blk1:
  2980  0579                     u2690:
  2981  0579                     __ccov299_start_blk2:
  2982  0579                     l2598:
  2983  0579  1424               	bsf	__ccovbit2_150/(0+8),__ccovbit2_150& (0+7)	;volatile
  2984                           
  2985                           ;main.c: 561:         EEPROM_WriteByte(FRIMWARE_VERSION_EEPROM_ADR, 1);
  2986  057A  01F5               	clrf	EEPROM_WriteByte@dt
  2987  057B  0AF5               	incf	EEPROM_WriteByte@dt,f
  2988  057C  3001               	movlw	1
  2989  057D  3184  246A  3185   	fcall	_EEPROM_WriteByte
  2990  0580                     __ccov299_end_blk2:
  2991  0580                     __ccov300_start_blk4:
  2992  0580                     l466:
  2993  0580  0020               	movlb	0	; select bank0
  2994  0581  17A3               	bsf	__ccovbit4_151/(0+8),__ccovbit4_151& (0+7)	;volatile
  2995  0582  0008               	return
  2996  0583                     __end_of_eeprom_set:
  2997  0583                     
  2998                           	psect	text4
  2999  046A                     __ptext4:	
  3000 ;; *************** function _EEPROM_WriteByte *****************
  3001 ;; Defined at:
  3002 ;;		line 6 in file "eeprom.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  addr            1    wreg     unsigned char 
  3005 ;;  dt              1    2[COMMON] unsigned char 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  addr            1    5[COMMON] unsigned char 
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		wreg
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3017 ;;      Params:         1       0       0       0
  3018 ;;      Locals:         1       0       0       0
  3019 ;;      Temps:          2       0       0       0
  3020 ;;      Totals:         4       0       0       0
  3021 ;;Total ram usage:        4 bytes
  3022 ;; Hardware stack levels used: 1
  3023 ;; Hardware stack levels required when called: 7
  3024 ;; This function calls:
  3025 ;;		Nothing
  3026 ;; This function is called by:
  3027 ;;		_eeprom_set
  3028 ;;		_EEPROM_WriteWord
  3029 ;;		_EEPROM_Writeint24
  3030 ;;		_EEPROM_WriteString
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034  046A                     _EEPROM_WriteByte:	
  3035                           ;psect for function _EEPROM_WriteByte
  3036                           
  3037                           
  3038                           ;incstack = 0
  3039                           ; Regs used in _EEPROM_WriteByte: [wreg]
  3040                           ;EEPROM_WriteByte@addr stored from wreg
  3041  046A  00F8               	movwf	EEPROM_WriteByte@addr
  3042  046B                     l2564:
  3043  046B                     l575:	
  3044                           ;eeprom.c: 7:    static __bit status;;eeprom.c: 8:     while (WR);
  3045                           
  3046  046B  0023               	movlb	3	; select bank3
  3047  046C  1895               	btfsc	21,1	;volsfr
  3048  046D  2C6F               	goto	u2641
  3049  046E  2C70               	goto	u2640
  3050  046F                     u2641:
  3051  046F  2C6B               	goto	l575
  3052  0470                     __ccov392_end_blk2:
  3053  0470                     u2640:
  3054  0470                     __ccov393_start_blk3:
  3055  0470                     l577:
  3056                           
  3057                           ;eeprom.c: 9:     status = GIE;
  3058  0470  13F2               	bcf	EEPROM_WriteByte@status/(0+8),EEPROM_WriteByte@status& (0+7)
  3059  0471  1F8B               	btfss	11,7	;volatile
  3060  0472  2C74               	goto	u2655
  3061  0473  17F2               	bsf	EEPROM_WriteByte@status/(0+8),EEPROM_WriteByte@status& (0+7)
  3062  0474                     u2655:
  3063                           
  3064                           ;eeprom.c: 10:     GIE = 0;
  3065  0474  138B               	bcf	11,7	;volatile
  3066  0475                     __ccov393_end_blk3:
  3067  0475                     __ccov394_start_blk4:
  3068  0475                     l2566:
  3069                           
  3070                           ;eeprom.c: 11:     EEADR = addr;
  3071  0475  0878               	movf	EEPROM_WriteByte@addr,w
  3072  0476  00F6               	movwf	??_EEPROM_WriteByte
  3073  0477  01F7               	clrf	??_EEPROM_WriteByte+1
  3074  0478  0876               	movf	??_EEPROM_WriteByte,w
  3075  0479  0023               	movlb	3	; select bank3
  3076  047A  0091               	movwf	17	;volatile
  3077  047B  0877               	movf	??_EEPROM_WriteByte+1,w
  3078  047C  0092               	movwf	18	;volatile
  3079                           
  3080                           ;eeprom.c: 12:     EEDATA = dt;
  3081  047D  0875               	movf	EEPROM_WriteByte@dt,w
  3082  047E  0093               	movwf	19	;volatile
  3083  047F                     __ccov394_end_blk4:
  3084  047F                     __ccov395_start_blk5:
  3085  047F                     l2568:
  3086                           
  3087                           ;eeprom.c: 13:     WREN = 1;
  3088  047F  1515               	bsf	21,2	;volsfr
  3089                           
  3090                           ;eeprom.c: 14:     EECON2 = 0x55;
  3091  0480  3055               	movlw	85
  3092  0481  0096               	movwf	22	;volsfr
  3093                           
  3094                           ;eeprom.c: 15:     EECON2 = 0xAA;
  3095  0482  30AA               	movlw	170
  3096  0483  0096               	movwf	22	;volsfr
  3097  0484                     __ccov395_end_blk5:
  3098  0484                     __ccov396_start_blk6:
  3099  0484                     l2570:
  3100                           
  3101                           ;eeprom.c: 16:     WR = 1;
  3102  0484  1495               	bsf	21,1	;volsfr
  3103  0485                     __ccov396_end_blk6:
  3104  0485                     __ccov397_start_blk7:
  3105  0485                     l2572:
  3106                           
  3107                           ;eeprom.c: 17:     GIE = status;
  3108  0485  1BF2               	btfsc	EEPROM_WriteByte@status/(0+8),EEPROM_WriteByte@status& (0+7)
  3109  0486  2C88               	goto	u2661
  3110  0487  2C8A               	goto	u2660
  3111  0488                     u2661:
  3112  0488  178B               	bsf	11,7	;volatile
  3113  0489  2C8B               	goto	u2674
  3114  048A                     u2660:
  3115  048A  138B               	bcf	11,7	;volatile
  3116  048B                     __ccov397_end_blk7:
  3117  048B                     u2674:
  3118  048B                     __ccov398_start_blk8:
  3119  048B                     l2574:
  3120                           
  3121                           ;eeprom.c: 18:     WREN = 0;
  3122  048B  0023               	movlb	3	; select bank3
  3123  048C  1115               	bcf	21,2	;volsfr
  3124  048D                     __ccov398_end_blk8:
  3125  048D                     __ccov399_start_blk9:
  3126  048D                     l578:
  3127  048D  0020               	movlb	0	; select bank0
  3128  048E  1520               	bsf	__ccovbit9_180/(0+8),__ccovbit9_180& (0+7)	;volatile
  3129  048F  0008               	return
  3130  0490                     __end_of_EEPROM_WriteByte:
  3131  0490                     
  3132                           	psect	text5
  3133  0509                     __ptext5:	
  3134 ;; *************** function _EEPROM_ReadByte *****************
  3135 ;; Defined at:
  3136 ;;		line 21 in file "eeprom.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  addr            1    wreg     unsigned char 
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;  addr            1    4[COMMON] unsigned char 
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  1    wreg      unsigned char 
  3143 ;; Registers used:
  3144 ;;		wreg
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3150 ;;      Params:         0       0       0       0
  3151 ;;      Locals:         1       0       0       0
  3152 ;;      Temps:          2       0       0       0
  3153 ;;      Totals:         3       0       0       0
  3154 ;;Total ram usage:        3 bytes
  3155 ;; Hardware stack levels used: 1
  3156 ;; Hardware stack levels required when called: 7
  3157 ;; This function calls:
  3158 ;;		Nothing
  3159 ;; This function is called by:
  3160 ;;		_eeprom_set
  3161 ;;		_EEPROM_ReadWord
  3162 ;;		_EEPROM_Readint24
  3163 ;;		_EEPROM_ReadString
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167  0509                     _EEPROM_ReadByte:	
  3168                           ;psect for function _EEPROM_ReadByte
  3169                           
  3170                           
  3171                           ;incstack = 0
  3172                           ; Regs used in _EEPROM_ReadByte: [wreg]
  3173                           ;EEPROM_ReadByte@addr stored from wreg
  3174  0509  00F7               	movwf	EEPROM_ReadByte@addr
  3175  050A                     l2554:
  3176  050A                     l581:	
  3177                           ;eeprom.c: 22:     while (RD || WR);
  3178                           
  3179  050A  0023               	movlb	3	; select bank3
  3180  050B  1815               	btfsc	21,0	;volsfr
  3181  050C  2D0E               	goto	u2621
  3182  050D  2D0F               	goto	u2620
  3183  050E                     u2621:
  3184  050E  2D0A               	goto	l581
  3185  050F                     __ccov401_end_blk2:
  3186  050F                     u2620:
  3187  050F                     __ccov402_start_blk3:
  3188  050F                     l2556:
  3189  050F  0020               	movlb	0	; select bank0
  3190  0510  14A0               	bsf	__ccovbit3_181/(0+8),__ccovbit3_181& (0+7)	;volatile
  3191  0511  0023               	movlb	3	; select bank3
  3192  0512  1895               	btfsc	21,1	;volsfr
  3193  0513  2D15               	goto	u2631
  3194  0514  2D16               	goto	u2630
  3195  0515                     u2631:
  3196  0515  2D0A               	goto	l581
  3197  0516                     __ccov402_end_blk3:
  3198  0516                     u2630:
  3199  0516                     __ccov403_start_blk5:
  3200  0516                     l2558:
  3201                           
  3202                           ;eeprom.c: 23:     EEADR = addr;
  3203  0516  0877               	movf	EEPROM_ReadByte@addr,w
  3204  0517  00F5               	movwf	??_EEPROM_ReadByte
  3205  0518  01F6               	clrf	??_EEPROM_ReadByte+1
  3206  0519  0875               	movf	??_EEPROM_ReadByte,w
  3207  051A  0091               	movwf	17	;volatile
  3208  051B  0876               	movf	??_EEPROM_ReadByte+1,w
  3209  051C  0092               	movwf	18	;volatile
  3210  051D                     __ccov403_end_blk5:
  3211  051D                     __ccov404_start_blk6:
  3212  051D                     l2560:
  3213                           
  3214                           ;eeprom.c: 24:     RD = 1;
  3215  051D  1415               	bsf	21,0	;volsfr
  3216                           
  3217                           ;eeprom.c: 25:     return EEDATA;
  3218  051E  0813               	movf	19,w	;volatile
  3219  051F                     __ccov404_end_blk6:
  3220  051F                     __ccov405_start_blk8:
  3221  051F                     l584:
  3222  051F  0020               	movlb	0	; select bank0
  3223  0520  1420               	bsf	__ccovbit8_182/(0+8),__ccovbit8_182& (0+7)	;volatile
  3224  0521  0008               	return
  3225  0522                     __end_of_EEPROM_ReadByte:
  3226  0522                     
  3227                           	psect	text6
  3228  06BD                     __ptext6:	
  3229 ;; *************** function _TMR2_StartTimer *****************
  3230 ;; Defined at:
  3231 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;		None
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;		None
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      void 
  3238 ;; Registers used:
  3239 ;;		None
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3245 ;;      Params:         0       0       0       0
  3246 ;;      Locals:         0       0       0       0
  3247 ;;      Temps:          0       0       0       0
  3248 ;;      Totals:         0       0       0       0
  3249 ;;Total ram usage:        0 bytes
  3250 ;; Hardware stack levels used: 1
  3251 ;; Hardware stack levels required when called: 7
  3252 ;; This function calls:
  3253 ;;		Nothing
  3254 ;; This function is called by:
  3255 ;;		_start_setup
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259  06BD                     _TMR2_StartTimer:	
  3260                           ;psect for function _TMR2_StartTimer
  3261                           
  3262                           
  3263                           ;incstack = 0
  3264                           ; Regs used in _TMR2_StartTimer: []
  3265  06BD                     l2180:
  3266                           
  3267                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  3268  06BD  0020               	movlb	0	; select bank0
  3269  06BE  151C               	bsf	28,2	;volatile
  3270  06BF                     __ccov55_end_blk0:
  3271  06BF                     __ccov56_start_blk1:
  3272  06BF                     l140:
  3273  06BF  1471               	bsf	__ccovbit1_15/(0+8),__ccovbit1_15& (0+7)	;volatile
  3274  06C0  0008               	return
  3275  06C1                     __end_of_TMR2_StartTimer:
  3276  06C1                     
  3277                           	psect	text7
  3278  05DF                     __ptext7:	
  3279 ;; *************** function _SYSTEM_Initialize *****************
  3280 ;; Defined at:
  3281 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;		None
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;		None
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  1    wreg      void 
  3288 ;; Registers used:
  3289 ;;		wreg, status,2, status,0, pclath, cstack
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3295 ;;      Params:         0       0       0       0
  3296 ;;      Locals:         0       0       0       0
  3297 ;;      Temps:          0       0       0       0
  3298 ;;      Totals:         0       0       0       0
  3299 ;;Total ram usage:        0 bytes
  3300 ;; Hardware stack levels used: 1
  3301 ;; Hardware stack levels required when called: 9
  3302 ;; This function calls:
  3303 ;;		_ADC_Initialize
  3304 ;;		_OSCILLATOR_Initialize
  3305 ;;		_PIN_MANAGER_Initialize
  3306 ;;		_TMR0_Initialize
  3307 ;;		_TMR2_Initialize
  3308 ;;		_WDT_Initialize
  3309 ;; This function is called by:
  3310 ;;		_start_setup
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314  05DF                     _SYSTEM_Initialize:	
  3315                           ;psect for function _SYSTEM_Initialize
  3316                           
  3317                           
  3318                           ;incstack = 0
  3319                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3320  05DF                     l2166:
  3321                           
  3322                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3323  05DF  3185  259A  3185   	fcall	_PIN_MANAGER_Initialize
  3324                           
  3325                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3326  05E2  3186  2683  3185   	fcall	_OSCILLATOR_Initialize
  3327                           
  3328                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  3329  05E5  3186  26B3  3185   	fcall	_WDT_Initialize
  3330                           
  3331                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  3332  05E8  3185  25F3  3185   	fcall	_TMR2_Initialize
  3333                           
  3334                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  3335  05EB  3186  267A  3185   	fcall	_ADC_Initialize
  3336                           
  3337                           ;mcc_generated_files/mcc.c: 58:     TMR0_Initialize();
  3338  05EE  3185  2583  3185   	fcall	_TMR0_Initialize
  3339  05F1                     __ccov1_end_blk0:
  3340  05F1                     __ccov2_start_blk1:
  3341  05F1                     l23:
  3342  05F1  1772               	bsf	__ccovbit1_1/(0+8),__ccovbit1_1& (0+7)	;volatile
  3343  05F2  0008               	return
  3344  05F3                     __end_of_SYSTEM_Initialize:
  3345  05F3                     
  3346                           	psect	text8
  3347  06B3                     __ptext8:	
  3348 ;; *************** function _WDT_Initialize *****************
  3349 ;; Defined at:
  3350 ;;		line 71 in file "mcc_generated_files/mcc.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;		None
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3364 ;;      Params:         0       0       0       0
  3365 ;;      Locals:         0       0       0       0
  3366 ;;      Temps:          0       0       0       0
  3367 ;;      Totals:         0       0       0       0
  3368 ;;Total ram usage:        0 bytes
  3369 ;; Hardware stack levels used: 1
  3370 ;; Hardware stack levels required when called: 7
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_SYSTEM_Initialize
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378  06B3                     _WDT_Initialize:	
  3379                           ;psect for function _WDT_Initialize
  3380                           
  3381                           
  3382                           ;incstack = 0
  3383                           ; Regs used in _WDT_Initialize: [wreg]
  3384  06B3                     l2014:
  3385                           
  3386                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x0A;
  3387  06B3  300A               	movlw	10
  3388  06B4  0021               	movlb	1	; select bank1
  3389  06B5  0097               	movwf	23	;volatile
  3390  06B6                     __ccov7_end_blk0:
  3391  06B6                     __ccov8_start_blk1:
  3392  06B6                     l29:
  3393  06B6  1672               	bsf	__ccovbit1_3/(0+8),__ccovbit1_3& (0+7)	;volatile
  3394  06B7  0008               	return
  3395  06B8                     __end_of_WDT_Initialize:
  3396  06B8                     
  3397                           	psect	text9
  3398  05F3                     __ptext9:	
  3399 ;; *************** function _TMR2_Initialize *****************
  3400 ;; Defined at:
  3401 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;		None
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;		None
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  1    wreg      void 
  3408 ;; Registers used:
  3409 ;;		wreg, status,2, status,0, pclath, cstack
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3415 ;;      Params:         0       0       0       0
  3416 ;;      Locals:         0       0       0       0
  3417 ;;      Temps:          0       0       0       0
  3418 ;;      Totals:         0       0       0       0
  3419 ;;Total ram usage:        0 bytes
  3420 ;; Hardware stack levels used: 1
  3421 ;; Hardware stack levels required when called: 8
  3422 ;; This function calls:
  3423 ;;		_TMR2_SetInterruptHandler
  3424 ;; This function is called by:
  3425 ;;		_SYSTEM_Initialize
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429  05F3                     _TMR2_Initialize:	
  3430                           ;psect for function _TMR2_Initialize
  3431                           
  3432                           
  3433                           ;incstack = 0
  3434                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3435  05F3                     l2016:
  3436                           
  3437                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x63;
  3438  05F3  3063               	movlw	99
  3439  05F4  0020               	movlb	0	; select bank0
  3440  05F5  009B               	movwf	27	;volatile
  3441  05F6                     __ccov48_end_blk0:
  3442  05F6                     __ccov49_start_blk1:
  3443  05F6                     l2018:
  3444                           
  3445                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  3446  05F6  019A               	clrf	26	;volatile
  3447  05F7                     __ccov49_end_blk1:
  3448  05F7                     __ccov50_start_blk2:
  3449  05F7                     l2020:
  3450                           
  3451                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  3452  05F7  1091               	bcf	17,1	;volatile
  3453  05F8                     __ccov50_end_blk2:
  3454  05F8                     __ccov51_start_blk3:
  3455  05F8                     l2022:
  3456                           
  3457                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  3458  05F8  0021               	movlb	1	; select bank1
  3459  05F9  1491               	bsf	17,1	;volatile
  3460  05FA                     __ccov51_end_blk3:
  3461  05FA                     __ccov52_start_blk4:
  3462  05FA                     l2024:
  3463                           
  3464                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  3465  05FA  30D0               	movlw	low _TMR2_DefaultInterruptHandler
  3466  05FB  00F5               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  3467  05FC  3006               	movlw	high _TMR2_DefaultInterruptHandler
  3468  05FD  00F6               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  3469  05FE  3186  2693  3185   	fcall	_TMR2_SetInterruptHandler
  3470  0601                     __ccov52_end_blk4:
  3471  0601                     __ccov53_start_blk5:
  3472  0601                     l2026:
  3473                           
  3474                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x4D;
  3475  0601  304D               	movlw	77
  3476  0602  0020               	movlb	0	; select bank0
  3477  0603  009C               	movwf	28	;volatile
  3478  0604                     __ccov53_end_blk5:
  3479  0604                     __ccov54_start_blk6:
  3480  0604                     l137:
  3481  0604  14F1               	bsf	__ccovbit6_14/(0+8),__ccovbit6_14& (0+7)	;volatile
  3482  0605  0008               	return
  3483  0606                     __end_of_TMR2_Initialize:
  3484  0606                     
  3485                           	psect	text10
  3486  0693                     __ptext10:	
  3487 ;; *************** function _TMR2_SetInterruptHandler *****************
  3488 ;; Defined at:
  3489 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  3492 ;;		 -> ms_tick(1), TMR2_DefaultInterruptHandler(1), 
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;		None
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      void 
  3497 ;; Registers used:
  3498 ;;		wreg
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3504 ;;      Params:         2       0       0       0
  3505 ;;      Locals:         0       0       0       0
  3506 ;;      Temps:          0       0       0       0
  3507 ;;      Totals:         2       0       0       0
  3508 ;;Total ram usage:        2 bytes
  3509 ;; Hardware stack levels used: 1
  3510 ;; Hardware stack levels required when called: 7
  3511 ;; This function calls:
  3512 ;;		Nothing
  3513 ;; This function is called by:
  3514 ;;		_TMR2_Initialize
  3515 ;;		_start_setup
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519  0693                     _TMR2_SetInterruptHandler:	
  3520                           ;psect for function _TMR2_SetInterruptHandler
  3521                           
  3522                           
  3523                           ;incstack = 0
  3524                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  3525  0693                     l1938:
  3526                           
  3527                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
  3528  0693  0876               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  3529  0694  0020               	movlb	0	; select bank0
  3530  0695  00D6               	movwf	_TMR2_InterruptHandler+1
  3531  0696  0875               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  3532  0697  00D5               	movwf	_TMR2_InterruptHandler
  3533  0698                     __ccov69_end_blk0:
  3534  0698                     __ccov70_start_blk1:
  3535  0698                     l159:
  3536  0698  16F0               	bsf	__ccovbit1_18/(0+8),__ccovbit1_18& (0+7)	;volatile
  3537  0699  0008               	return
  3538  069A                     __end_of_TMR2_SetInterruptHandler:
  3539  069A                     
  3540                           	psect	text11
  3541  0583                     __ptext11:	
  3542 ;; *************** function _TMR0_Initialize *****************
  3543 ;; Defined at:
  3544 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;		None
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;		None
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      void 
  3551 ;; Registers used:
  3552 ;;		wreg, status,2, status,0, pclath, cstack
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3558 ;;      Params:         0       0       0       0
  3559 ;;      Locals:         0       0       0       0
  3560 ;;      Temps:          1       0       0       0
  3561 ;;      Totals:         1       0       0       0
  3562 ;;Total ram usage:        1 bytes
  3563 ;; Hardware stack levels used: 1
  3564 ;; Hardware stack levels required when called: 8
  3565 ;; This function calls:
  3566 ;;		_TMR0_SetInterruptHandler
  3567 ;; This function is called by:
  3568 ;;		_SYSTEM_Initialize
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572  0583                     _TMR0_Initialize:	
  3573                           ;psect for function _TMR0_Initialize
  3574                           
  3575                           
  3576                           ;incstack = 0
  3577                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3578  0583                     l2034:
  3579                           
  3580                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD1 
      +                          & 0x3F));
  3581  0583  0021               	movlb	1	; select bank1
  3582  0584  0815               	movf	21,w	;volatile
  3583  0585  39C0               	andlw	192
  3584  0586  3811               	iorlw	17
  3585  0587  0095               	movwf	21	;volatile
  3586  0588                     __ccov72_end_blk0:
  3587  0588                     __ccov73_start_blk1:
  3588  0588                     l2036:
  3589                           
  3590                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x83;
  3591  0588  3083               	movlw	131
  3592  0589  0020               	movlb	0	; select bank0
  3593  058A  0095               	movwf	21	;volatile
  3594  058B                     __ccov73_end_blk1:
  3595  058B                     __ccov74_start_blk2:
  3596  058B                     l2038:
  3597                           
  3598                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 131;
  3599  058B  3083               	movlw	131
  3600  058C  00F7               	movwf	??_TMR0_Initialize
  3601  058D  0877               	movf	??_TMR0_Initialize,w
  3602  058E  00D7               	movwf	_timer0ReloadVal	;volatile
  3603  058F                     __ccov74_end_blk2:
  3604  058F                     __ccov75_start_blk3:
  3605  058F                     l2040:
  3606                           
  3607                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  3608  058F  110B               	bcf	11,2	;volatile
  3609  0590                     __ccov75_end_blk3:
  3610  0590                     __ccov76_start_blk4:
  3611  0590                     l2042:
  3612                           
  3613                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  3614  0590  168B               	bsf	11,5	;volatile
  3615  0591                     __ccov76_end_blk4:
  3616  0591                     __ccov77_start_blk5:
  3617  0591                     l2044:
  3618                           
  3619                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3620  0591  30C1               	movlw	low _TMR0_DefaultInterruptHandler
  3621  0592  00F5               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3622  0593  3006               	movlw	high _TMR0_DefaultInterruptHandler
  3623  0594  00F6               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3624  0595  3186  269A  3185   	fcall	_TMR0_SetInterruptHandler
  3625  0598                     __ccov77_end_blk5:
  3626  0598                     __ccov78_start_blk6:
  3627  0598                     l179:
  3628  0598  15F0               	bsf	__ccovbit6_20/(0+8),__ccovbit6_20& (0+7)	;volatile
  3629  0599  0008               	return
  3630  059A                     __end_of_TMR0_Initialize:
  3631  059A                     
  3632                           	psect	text12
  3633  069A                     __ptext12:	
  3634 ;; *************** function _TMR0_SetInterruptHandler *****************
  3635 ;; Defined at:
  3636 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  3639 ;;		 -> zummer_switch(1), TMR0_DefaultInterruptHandler(1), 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;		None
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3651 ;;      Params:         2       0       0       0
  3652 ;;      Locals:         0       0       0       0
  3653 ;;      Temps:          0       0       0       0
  3654 ;;      Totals:         2       0       0       0
  3655 ;;Total ram usage:        2 bytes
  3656 ;; Hardware stack levels used: 1
  3657 ;; Hardware stack levels required when called: 7
  3658 ;; This function calls:
  3659 ;;		Nothing
  3660 ;; This function is called by:
  3661 ;;		_TMR0_Initialize
  3662 ;;		_start_setup
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666  069A                     _TMR0_SetInterruptHandler:	
  3667                           ;psect for function _TMR0_SetInterruptHandler
  3668                           
  3669                           
  3670                           ;incstack = 0
  3671                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  3672  069A                     l1940:
  3673                           
  3674                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  3675  069A  0876               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  3676  069B  0020               	movlb	0	; select bank0
  3677  069C  00D4               	movwf	_TMR0_InterruptHandler+1
  3678  069D  0875               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  3679  069E  00D3               	movwf	_TMR0_InterruptHandler
  3680  069F                     __ccov90_end_blk0:
  3681  069F                     __ccov91_start_blk1:
  3682  069F                     l195:
  3683  069F  1470               	bsf	__ccovbit1_23/(0+8),__ccovbit1_23& (0+7)	;volatile
  3684  06A0  0008               	return
  3685  06A1                     __end_of_TMR0_SetInterruptHandler:
  3686  06A1                     
  3687                           	psect	text13
  3688  059A                     __ptext13:	
  3689 ;; *************** function _PIN_MANAGER_Initialize *****************
  3690 ;; Defined at:
  3691 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;		None
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;		None
  3696 ;; Return value:  Size  Location     Type
  3697 ;;                  1    wreg      void 
  3698 ;; Registers used:
  3699 ;;		wreg, status,2
  3700 ;; Tracked objects:
  3701 ;;		On entry : 0/0
  3702 ;;		On exit  : 0/0
  3703 ;;		Unchanged: 0/0
  3704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3705 ;;      Params:         0       0       0       0
  3706 ;;      Locals:         0       0       0       0
  3707 ;;      Temps:          0       0       0       0
  3708 ;;      Totals:         0       0       0       0
  3709 ;;Total ram usage:        0 bytes
  3710 ;; Hardware stack levels used: 1
  3711 ;; Hardware stack levels required when called: 7
  3712 ;; This function calls:
  3713 ;;		Nothing
  3714 ;; This function is called by:
  3715 ;;		_SYSTEM_Initialize
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719  059A                     _PIN_MANAGER_Initialize:	
  3720                           ;psect for function _PIN_MANAGER_Initialize
  3721                           
  3722                           
  3723                           ;incstack = 0
  3724                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3725  059A                     l1996:
  3726                           
  3727                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3728  059A  0022               	movlb	2	; select bank2
  3729  059B  018C               	clrf	12	;volatile
  3730                           
  3731                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  3732  059C  018E               	clrf	14	;volatile
  3733  059D                     __ccov31_end_blk0:
  3734  059D                     __ccov32_start_blk1:
  3735  059D                     l1998:
  3736                           
  3737                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x0F;
  3738  059D  300F               	movlw	15
  3739  059E  0021               	movlb	1	; select bank1
  3740  059F  008C               	movwf	12	;volatile
  3741  05A0                     __ccov32_end_blk1:
  3742  05A0                     __ccov33_start_blk2:
  3743  05A0                     l2000:
  3744                           
  3745                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x0C;
  3746  05A0  300C               	movlw	12
  3747  05A1  008E               	movwf	14	;volatile
  3748  05A2                     __ccov33_end_blk2:
  3749  05A2                     __ccov34_start_blk3:
  3750  05A2                     l2002:
  3751                           
  3752                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x08;
  3753  05A2  3008               	movlw	8
  3754  05A3  0023               	movlb	3	; select bank3
  3755  05A4  008E               	movwf	14	;volatile
  3756  05A5                     __ccov34_end_blk3:
  3757  05A5                     __ccov35_start_blk4:
  3758  05A5                     l2004:
  3759                           
  3760                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x05;
  3761  05A5  3005               	movlw	5
  3762  05A6  008C               	movwf	12	;volatile
  3763                           
  3764                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  3765  05A7  0024               	movlb	4	; select bank4
  3766  05A8  018C               	clrf	12	;volatile
  3767                           
  3768                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  3769  05A9  018E               	clrf	14	;volatile
  3770  05AA                     __ccov35_end_blk4:
  3771  05AA                     __ccov36_start_blk5:
  3772  05AA                     l2006:
  3773                           
  3774                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  3775  05AA  0021               	movlb	1	; select bank1
  3776  05AB  1795               	bsf	21,7	;volatile
  3777                           
  3778                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  3779  05AC  0022               	movlb	2	; select bank2
  3780  05AD  019D               	clrf	29	;volatile
  3781                           
  3782                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  3783  05AE  019E               	clrf	30	;volatile
  3784  05AF                     __ccov36_end_blk5:
  3785  05AF                     __ccov37_start_blk6:
  3786  05AF                     l92:
  3787  05AF  14F2               	bsf	__ccovbit6_6/(0+8),__ccovbit6_6& (0+7)	;volatile
  3788  05B0  0008               	return
  3789  05B1                     __end_of_PIN_MANAGER_Initialize:
  3790  05B1                     
  3791                           	psect	text14
  3792  0683                     __ptext14:	
  3793 ;; *************** function _OSCILLATOR_Initialize *****************
  3794 ;; Defined at:
  3795 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;		None
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;		None
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  1    wreg      void 
  3802 ;; Registers used:
  3803 ;;		wreg, status,2
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3809 ;;      Params:         0       0       0       0
  3810 ;;      Locals:         0       0       0       0
  3811 ;;      Temps:          0       0       0       0
  3812 ;;      Totals:         0       0       0       0
  3813 ;;Total ram usage:        0 bytes
  3814 ;; Hardware stack levels used: 1
  3815 ;; Hardware stack levels required when called: 7
  3816 ;; This function calls:
  3817 ;;		Nothing
  3818 ;; This function is called by:
  3819 ;;		_SYSTEM_Initialize
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823  0683                     _OSCILLATOR_Initialize:	
  3824                           ;psect for function _OSCILLATOR_Initialize
  3825                           
  3826                           
  3827                           ;incstack = 0
  3828                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3829  0683                     l2008:
  3830                           
  3831                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x78;
  3832  0683  3078               	movlw	120
  3833  0684  0021               	movlb	1	; select bank1
  3834  0685  0099               	movwf	25	;volatile
  3835  0686                     __ccov3_end_blk0:
  3836  0686                     __ccov4_start_blk1:
  3837  0686                     l2010:
  3838                           
  3839                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  3840  0686  0198               	clrf	24	;volatile
  3841  0687                     __ccov4_end_blk1:
  3842  0687                     __ccov5_start_blk2:
  3843  0687                     l2012:
  3844                           
  3845                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  3846  0687  0022               	movlb	2	; select bank2
  3847  0688  0196               	clrf	22	;volatile
  3848  0689                     __ccov5_end_blk2:
  3849  0689                     __ccov6_start_blk3:
  3850  0689                     l26:
  3851  0689  16F2               	bsf	__ccovbit3_2/(0+8),__ccovbit3_2& (0+7)	;volatile
  3852  068A  0008               	return
  3853  068B                     __end_of_OSCILLATOR_Initialize:
  3854  068B                     
  3855                           	psect	text15
  3856  067A                     __ptext15:	
  3857 ;; *************** function _ADC_Initialize *****************
  3858 ;; Defined at:
  3859 ;;		line 67 in file "mcc_generated_files/adc.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;		None
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  1    wreg      void 
  3866 ;; Registers used:
  3867 ;;		wreg, status,2
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3873 ;;      Params:         0       0       0       0
  3874 ;;      Locals:         0       0       0       0
  3875 ;;      Temps:          0       0       0       0
  3876 ;;      Totals:         0       0       0       0
  3877 ;;Total ram usage:        0 bytes
  3878 ;; Hardware stack levels used: 1
  3879 ;; Hardware stack levels required when called: 7
  3880 ;; This function calls:
  3881 ;;		Nothing
  3882 ;; This function is called by:
  3883 ;;		_SYSTEM_Initialize
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887  067A                     _ADC_Initialize:	
  3888                           ;psect for function _ADC_Initialize
  3889                           
  3890                           
  3891                           ;incstack = 0
  3892                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3893  067A                     l2028:
  3894                           
  3895                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x50;
  3896  067A  3050               	movlw	80
  3897  067B  0021               	movlb	1	; select bank1
  3898  067C  009E               	movwf	30	;volatile
  3899  067D                     __ccov9_end_blk0:
  3900  067D                     __ccov10_start_blk1:
  3901  067D                     l2030:
  3902                           
  3903                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  3904  067D  019B               	clrf	27	;volatile
  3905  067E                     __ccov10_end_blk1:
  3906  067E                     __ccov11_start_blk2:
  3907  067E                     l2032:
  3908                           
  3909                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  3910  067E  019C               	clrf	28	;volatile
  3911                           
  3912                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x1D;
  3913  067F  301D               	movlw	29
  3914  0680  009D               	movwf	29	;volatile
  3915  0681                     __ccov11_end_blk2:
  3916  0681                     __ccov12_start_blk3:
  3917  0681                     l46:
  3918  0681  15F2               	bsf	__ccovbit3_4/(0+8),__ccovbit3_4& (0+7)	;volatile
  3919  0682  0008               	return
  3920  0683                     __end_of_ADC_Initialize:
  3921  0683                     
  3922                           	psect	text16
  3923  034C                     __ptext16:	
  3924 ;; *************** function _hardware_work *****************
  3925 ;; Defined at:
  3926 ;;		line 566 in file "main.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;		None
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;		None
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  1    wreg      void 
  3933 ;; Registers used:
  3934 ;;		None
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3940 ;;      Params:         0       0       0       0
  3941 ;;      Locals:         0       0       0       0
  3942 ;;      Temps:          0       0       0       0
  3943 ;;      Totals:         0       0       0       0
  3944 ;;Total ram usage:        0 bytes
  3945 ;; Hardware stack levels used: 1
  3946 ;; Hardware stack levels required when called: 7
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		_main
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954  034C                     _hardware_work:	
  3955                           ;psect for function _hardware_work
  3956                           
  3957                           
  3958                           ;incstack = 0
  3959                           ; Regs used in _hardware_work: []
  3960  034C                     l1668:
  3961                           
  3962                           ;main.c: 567:     LATCbits.LATC0 = ff.bits.ALARM_ON;
  3963  034C  1879               	btfsc	_ff,0
  3964  034D  2B4F               	goto	u1031
  3965  034E  2B52               	goto	u1030
  3966  034F                     u1031:
  3967  034F  0022               	movlb	2	; select bank2
  3968  0350  140E               	bsf	14,0	;volatile
  3969  0351  2B54               	goto	u1044
  3970  0352                     u1030:
  3971  0352  0022               	movlb	2	; select bank2
  3972  0353  100E               	bcf	14,0	;volatile
  3973  0354                     u1044:
  3974                           
  3975                           ;main.c: 568:     LATCbits.LATC1 = ff.bits.MEAS_ON;
  3976  0354  1BFB               	btfsc	_ff+2,7
  3977  0355  2B57               	goto	u1051
  3978  0356  2B5A               	goto	u1050
  3979  0357                     u1051:
  3980  0357  0022               	movlb	2	; select bank2
  3981  0358  148E               	bsf	14,1	;volatile
  3982  0359  2B5C               	goto	u1064
  3983  035A                     u1050:
  3984  035A  0022               	movlb	2	; select bank2
  3985  035B  108E               	bcf	14,1	;volatile
  3986  035C                     u1064:
  3987                           
  3988                           ;main.c: 569:     LATCbits.LATC4 = ff.bits.RELE_CONTROL_ON;
  3989  035C  1B7A               	btfsc	_ff+1,6
  3990  035D  2B5F               	goto	u1071
  3991  035E  2B62               	goto	u1070
  3992  035F                     u1071:
  3993  035F  0022               	movlb	2	; select bank2
  3994  0360  160E               	bsf	14,4	;volatile
  3995  0361  2B64               	goto	u1084
  3996  0362                     u1070:
  3997  0362  0022               	movlb	2	; select bank2
  3998  0363  120E               	bcf	14,4	;volatile
  3999  0364                     u1084:
  4000                           
  4001                           ;main.c: 570:     LATCbits.LATC5 = ff.bits.RELE_POWER_ON;
  4002  0364  1AFA               	btfsc	_ff+1,5
  4003  0365  2B67               	goto	u1091
  4004  0366  2B6A               	goto	u1090
  4005  0367                     u1091:
  4006  0367  0022               	movlb	2	; select bank2
  4007  0368  168E               	bsf	14,5	;volatile
  4008  0369  2B6C               	goto	u1104
  4009  036A                     u1090:
  4010  036A  0022               	movlb	2	; select bank2
  4011  036B  128E               	bcf	14,5	;volatile
  4012  036C                     u1104:
  4013                           
  4014                           ;main.c: 571:     LATAbits.LATA4 = ff.bits.LED_ON;
  4015  036C  1B7B               	btfsc	_ff+2,6
  4016  036D  2B6F               	goto	u1111
  4017  036E  2B72               	goto	u1110
  4018  036F                     u1111:
  4019  036F  0022               	movlb	2	; select bank2
  4020  0370  160C               	bsf	12,4	;volatile
  4021  0371  2B74               	goto	u1124
  4022  0372                     u1110:
  4023  0372  0022               	movlb	2	; select bank2
  4024  0373  120C               	bcf	12,4	;volatile
  4025  0374                     u1124:
  4026                           
  4027                           ;main.c: 573:     if (ff.bits.TONE_ON) {
  4028  0374  1FFA               	btfss	_ff+1,7
  4029  0375  2B77               	goto	u1131
  4030  0376  2B78               	goto	u1130
  4031  0377                     u1131:
  4032  0377  2B7B               	goto	l469
  4033  0378                     __ccov301_end_blk0:
  4034  0378                     u1130:
  4035  0378                     __ccov302_start_blk1:
  4036  0378                     l1670:
  4037  0378  0020               	movlb	0	; select bank0
  4038  0379  1723               	bsf	__ccovbit1_152/(0+8),__ccovbit1_152& (0+7)	;volatile
  4039                           
  4040                           ;main.c: 574:         INTCONbits.TMR0IE = 1;
  4041  037A  168B               	bsf	11,5	;volatile
  4042  037B                     __ccov302_end_blk1:
  4043  037B                     __ccov303_start_blk2:
  4044  037B                     l469:	
  4045                           ;main.c: 575:     };
  4046                           
  4047                           
  4048                           ;main.c: 576:     if (ff.bits.TONE_OFF) {
  4049  037B  1C7B               	btfss	_ff+2,0
  4050  037C  2B7E               	goto	u1141
  4051  037D  2B7F               	goto	u1140
  4052  037E                     u1141:
  4053  037E  2B84               	goto	l473
  4054  037F                     __ccov303_end_blk2:
  4055  037F                     u1140:
  4056  037F                     __ccov304_start_blk3:
  4057  037F                     l1672:
  4058                           
  4059                           ;main.c: 577:         INTCONbits.TMR0IE = 0;
  4060  037F  128B               	bcf	11,5	;volatile
  4061  0380                     __ccov304_end_blk3:
  4062  0380                     __ccov305_start_blk4:
  4063  0380                     l471:	
  4064                           ;main.c: 578:         do { LATAbits.LATA5 = 0; } while(0);
  4065                           
  4066  0380  0020               	movlb	0	; select bank0
  4067  0381  16A3               	bsf	__ccovbit4_153/(0+8),__ccovbit4_153& (0+7)	;volatile
  4068  0382  0022               	movlb	2	; select bank2
  4069  0383  128C               	bcf	12,5	;volatile
  4070  0384                     __ccov305_end_blk4:
  4071  0384                     __ccov306_start_blk7:
  4072  0384                     l473:
  4073  0384  0020               	movlb	0	; select bank0
  4074  0385  1623               	bsf	__ccovbit7_154/(0+8),__ccovbit7_154& (0+7)	;volatile
  4075  0386  0008               	return
  4076  0387                     __end_of_hardware_work:
  4077  0387                     
  4078                           	psect	text17
  4079  0135                     __ptext17:	
  4080 ;; *************** function _get_wsp *****************
  4081 ;; Defined at:
  4082 ;;		line 591 in file "main.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;		None
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;  res             2    0[BANK0 ] unsigned int 
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		wreg, status,2, status,0, pclath, cstack
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4096 ;;      Params:         0       0       0       0
  4097 ;;      Locals:         0       2       0       0
  4098 ;;      Temps:          2       0       0       0
  4099 ;;      Totals:         2       2       0       0
  4100 ;;Total ram usage:        4 bytes
  4101 ;; Hardware stack levels used: 1
  4102 ;; Hardware stack levels required when called: 8
  4103 ;; This function calls:
  4104 ;;		_ADC_GetConversion
  4105 ;;		_clear_alarm
  4106 ;;		_start_alarm
  4107 ;; This function is called by:
  4108 ;;		_main
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112  0135                     _get_wsp:	
  4113                           ;psect for function _get_wsp
  4114                           
  4115                           
  4116                           ;incstack = 0
  4117                           ; Regs used in _get_wsp: [wreg+status,2+status,0+pclath+cstack]
  4118  0135                     l2600:
  4119                           
  4120                           ;main.c: 593:     if (ff.bits.ALLOW_MEASURE) {
  4121  0135  1E79               	btfss	_ff,4
  4122  0136  2938               	goto	u2701
  4123  0137  2939               	goto	u2700
  4124  0138                     u2701:
  4125  0138  2995               	goto	l497
  4126  0139                     __ccov310_end_blk0:
  4127  0139                     u2700:
  4128  0139                     __ccov311_start_blk1:
  4129  0139                     l484:	
  4130                           ;main.c: 595:         static signed char bad_measures_counter = 0;;main.c: 596:         
      +                          do { LATCbits.LATC1 = 1; } while(0);
  4131                           
  4132  0139  0022               	movlb	2	; select bank2
  4133  013A  148E               	bsf	14,1	;volatile
  4134  013B                     __ccov311_end_blk1:
  4135  013B                     __ccov312_start_blk3:
  4136  013B                     l486:	
  4137                           ;main.c: 597:         do { ANSELCbits.ANSC3 = 1; } while(0);
  4138                           
  4139  013B  0023               	movlb	3	; select bank3
  4140  013C  158E               	bsf	14,3	;volatile
  4141  013D                     __ccov312_end_blk3:
  4142  013D                     __ccov313_start_blk5:
  4143  013D                     l2602:
  4144                           
  4145                           ;main.c: 598:         _delay((unsigned long)((1)*(16000000/4000.0)));
  4146  013D  3006               	movlw	6
  4147  013E  00F7               	movwf	??_get_wsp
  4148  013F  3030               	movlw	48
  4149  0140                     u2827:
  4150  0140  0B89               	decfsz	9,f
  4151  0141  2940               	goto	u2827
  4152  0142  0BF7               	decfsz	??_get_wsp,f
  4153  0143  2940               	goto	u2827
  4154  0144  3200               	nop2
  4155  0145                     __ccov313_end_blk5:
  4156  0145                     __ccov314_start_blk6:
  4157  0145                     l2604:
  4158                           
  4159                           ;main.c: 599:         unsigned res = ADC_GetConversion(PIN_WSP_STATE);
  4160  0145  3007               	movlw	7
  4161  0146  3185  2522  3181   	fcall	_ADC_GetConversion
  4162  0149  00F7               	movwf	??_get_wsp
  4163  014A  01F8               	clrf	??_get_wsp+1
  4164  014B  0877               	movf	??_get_wsp,w
  4165  014C  0020               	movlb	0	; select bank0
  4166  014D  00D8               	movwf	get_wsp@res
  4167  014E  0878               	movf	??_get_wsp+1,w
  4168  014F  00D9               	movwf	get_wsp@res+1
  4169  0150                     __ccov314_end_blk6:
  4170  0150                     __ccov315_start_blk8:
  4171  0150                     l2606:
  4172  0150  0023               	movlb	3	; select bank3
  4173  0151  118E               	bcf	14,3	;volatile
  4174  0152                     __ccov315_end_blk8:
  4175  0152                     __ccov316_start_blk11:
  4176  0152                     l2608:
  4177  0152  0022               	movlb	2	; select bank2
  4178  0153  108E               	bcf	14,1	;volatile
  4179  0154                     __ccov316_end_blk11:
  4180  0154                     __ccov317_start_blk13:
  4181  0154                     l2610:
  4182                           
  4183                           ;main.c: 602:         if (res < BAD_WSP_VOLTAGE) {
  4184  0154  3000               	movlw	0
  4185  0155  0020               	movlb	0	; select bank0
  4186  0156  0259               	subwf	get_wsp@res+1,w
  4187  0157  3080               	movlw	128
  4188  0158  1903               	skipnz
  4189  0159  0258               	subwf	get_wsp@res,w
  4190  015A  1803               	skipnc
  4191  015B  295D               	goto	u2711
  4192  015C  295E               	goto	u2710
  4193  015D                     u2711:
  4194  015D  2964               	goto	l2614
  4195  015E                     __ccov317_end_blk13:
  4196  015E                     u2710:
  4197  015E                     __ccov318_start_blk14:
  4198  015E                     l2612:
  4199  015E  1523               	bsf	__ccovbit14_156/(0+8),__ccovbit14_156& (0+7)	;volatile
  4200                           
  4201                           ;main.c: 603:             bad_measures_counter++;
  4202  015F  3001               	movlw	1
  4203  0160  00F7               	movwf	??_get_wsp
  4204  0161  0877               	movf	??_get_wsp,w
  4205  0162  07CB               	addwf	get_wsp@bad_measures_counter,f
  4206                           
  4207                           ;main.c: 604:         } else {
  4208  0163  2973               	goto	l2618
  4209  0164                     __ccov318_end_blk14:
  4210  0164                     __ccov319_start_blk16:
  4211  0164                     l2614:
  4212  0164  14A3               	bsf	__ccovbit16_157/(0+8),__ccovbit16_157& (0+7)	;volatile
  4213                           
  4214                           ;main.c: 605:             if (res > GOOD_WSP_VOLTAGE) {
  4215  0165  3000               	movlw	0
  4216  0166  0259               	subwf	get_wsp@res+1,w
  4217  0167  308F               	movlw	143
  4218  0168  1903               	skipnz
  4219  0169  0258               	subwf	get_wsp@res,w
  4220  016A  1C03               	skipc
  4221  016B  296D               	goto	u2721
  4222  016C  296E               	goto	u2720
  4223  016D                     u2721:
  4224  016D  2973               	goto	l2618
  4225  016E                     __ccov319_end_blk16:
  4226  016E                     u2720:
  4227  016E                     __ccov320_start_blk17:
  4228  016E                     l2616:
  4229  016E  1423               	bsf	__ccovbit17_158/(0+8),__ccovbit17_158& (0+7)	;volatile
  4230                           
  4231                           ;main.c: 606:                 bad_measures_counter--;
  4232  016F  30FF               	movlw	255
  4233  0170  00F7               	movwf	??_get_wsp
  4234  0171  0877               	movf	??_get_wsp,w
  4235  0172  07CB               	addwf	get_wsp@bad_measures_counter,f
  4236  0173                     __ccov320_end_blk17:
  4237  0173                     __ccov321_start_blk20:
  4238  0173                     l2618:
  4239                           
  4240                           ;main.c: 609:         if (bad_measures_counter > WSP_MEAS_COUNT) {
  4241  0173  084B               	movf	get_wsp@bad_measures_counter,w
  4242  0174  3A80               	xorlw	128
  4243  0175  3E7B               	addlw	-133
  4244  0176  1C03               	skipc
  4245  0177  2979               	goto	u2731
  4246  0178  297A               	goto	u2730
  4247  0179                     u2731:
  4248  0179  2983               	goto	l2624
  4249  017A                     __ccov321_end_blk20:
  4250  017A                     u2730:
  4251  017A                     __ccov322_start_blk21:
  4252  017A                     l2620:
  4253                           
  4254                           ;main.c: 610:             start_alarm();
  4255  017A  3186  268B  3181   	fcall	_start_alarm
  4256  017D                     __ccov322_end_blk21:
  4257  017D                     __ccov323_start_blk22:
  4258  017D                     l2622:
  4259  017D  0020               	movlb	0	; select bank0
  4260  017E  17A2               	bsf	__ccovbit22_159/(0+8),__ccovbit22_159& (0+7)	;volatile
  4261                           
  4262                           ;main.c: 611:             bad_measures_counter = WSP_MEAS_COUNT;
  4263  017F  3004               	movlw	4
  4264  0180  00F7               	movwf	??_get_wsp
  4265  0181  0877               	movf	??_get_wsp,w
  4266  0182  00CB               	movwf	get_wsp@bad_measures_counter
  4267  0183                     __ccov323_end_blk22:
  4268  0183                     __ccov324_start_blk24:
  4269  0183                     l2624:
  4270                           
  4271                           ;main.c: 613:         if (bad_measures_counter < -WSP_MEAS_COUNT) {
  4272  0183  084B               	movf	get_wsp@bad_measures_counter,w
  4273  0184  3A80               	xorlw	128
  4274  0185  3E84               	addlw	132
  4275  0186  1803               	skipnc
  4276  0187  2989               	goto	u2741
  4277  0188  298A               	goto	u2740
  4278  0189                     u2741:
  4279  0189  2993               	goto	l2630
  4280  018A                     __ccov324_end_blk24:
  4281  018A                     u2740:
  4282  018A                     __ccov325_start_blk25:
  4283  018A                     l2626:
  4284                           
  4285                           ;main.c: 614:             clear_alarm();
  4286  018A  3186  26B8  3181   	fcall	_clear_alarm
  4287  018D                     __ccov325_end_blk25:
  4288  018D                     __ccov326_start_blk26:
  4289  018D                     l2628:
  4290  018D  0020               	movlb	0	; select bank0
  4291  018E  1722               	bsf	__ccovbit26_160/(0+8),__ccovbit26_160& (0+7)	;volatile
  4292                           
  4293                           ;main.c: 615:             bad_measures_counter = -WSP_MEAS_COUNT;
  4294  018F  30FC               	movlw	252
  4295  0190  00F7               	movwf	??_get_wsp
  4296  0191  0877               	movf	??_get_wsp,w
  4297  0192  00CB               	movwf	get_wsp@bad_measures_counter
  4298  0193                     __ccov326_end_blk26:
  4299  0193                     __ccov327_start_blk28:
  4300  0193                     l2630:
  4301  0193  16A2               	bsf	__ccovbit28_161/(0+8),__ccovbit28_161& (0+7)	;volatile
  4302                           
  4303                           ;main.c: 617:         ff.bits.ALLOW_MEASURE = 0;
  4304  0194  1279               	bcf	_ff,4
  4305  0195                     __ccov327_end_blk28:
  4306  0195                     __ccov328_start_blk30:
  4307  0195                     l497:
  4308  0195  0020               	movlb	0	; select bank0
  4309  0196  1622               	bsf	__ccovbit30_162/(0+8),__ccovbit30_162& (0+7)	;volatile
  4310  0197  0008               	return
  4311  0198                     __end_of_get_wsp:
  4312  0198                     
  4313                           	psect	text18
  4314  068B                     __ptext18:	
  4315 ;; *************** function _start_alarm *****************
  4316 ;; Defined at:
  4317 ;;		line 321 in file "main.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;		None
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;		None
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  1    wreg      void 
  4324 ;; Registers used:
  4325 ;;		status,2
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4331 ;;      Params:         0       0       0       0
  4332 ;;      Locals:         0       0       0       0
  4333 ;;      Temps:          0       0       0       0
  4334 ;;      Totals:         0       0       0       0
  4335 ;;Total ram usage:        0 bytes
  4336 ;; Hardware stack levels used: 1
  4337 ;; Hardware stack levels required when called: 7
  4338 ;; This function calls:
  4339 ;;		Nothing
  4340 ;; This function is called by:
  4341 ;;		_get_wsp
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345  068B                     _start_alarm:	
  4346                           ;psect for function _start_alarm
  4347                           
  4348                           
  4349                           ;incstack = 0
  4350                           ; Regs used in _start_alarm: [status,2]
  4351  068B                     l2588:
  4352                           
  4353                           ;main.c: 322:     ff.bits.ALARM_ON = 1;
  4354  068B  1479               	bsf	_ff,0
  4355                           
  4356                           ;main.c: 323:     ff.bits.ALARM_OFF = 0;
  4357  068C  10F9               	bcf	_ff,1
  4358                           
  4359                           ;main.c: 324:     ff.bits.MELODY_ON = 1;
  4360  068D  14FC               	bsf	_ff+3,1
  4361                           
  4362                           ;main.c: 325:     ff.bits.SIREN = 1;
  4363  068E  14FB               	bsf	_ff+2,1
  4364  068F                     __ccov182_end_blk0:
  4365  068F                     __ccov183_start_blk1:
  4366  068F                     l2590:
  4367                           
  4368                           ;main.c: 326:     sec_count=0;
  4369  068F  0020               	movlb	0	; select bank0
  4370  0690  01D2               	clrf	_sec_count
  4371  0691                     __ccov183_end_blk1:
  4372  0691                     __ccov184_start_blk2:
  4373  0691                     l381:
  4374  0691  172C               	bsf	__ccovbit2_80/(0+8),__ccovbit2_80& (0+7)	;volatile
  4375  0692  0008               	return
  4376  0693                     __end_of_start_alarm:
  4377  0693                     
  4378                           	psect	text19
  4379  06B8                     __ptext19:	
  4380 ;; *************** function _clear_alarm *****************
  4381 ;; Defined at:
  4382 ;;		line 329 in file "main.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;		None
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		None
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4396 ;;      Params:         0       0       0       0
  4397 ;;      Locals:         0       0       0       0
  4398 ;;      Temps:          0       0       0       0
  4399 ;;      Totals:         0       0       0       0
  4400 ;;Total ram usage:        0 bytes
  4401 ;; Hardware stack levels used: 1
  4402 ;; Hardware stack levels required when called: 7
  4403 ;; This function calls:
  4404 ;;		Nothing
  4405 ;; This function is called by:
  4406 ;;		_get_wsp
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410  06B8                     _clear_alarm:	
  4411                           ;psect for function _clear_alarm
  4412                           
  4413                           
  4414                           ;incstack = 0
  4415                           ; Regs used in _clear_alarm: []
  4416  06B8                     l2592:
  4417                           
  4418                           ;main.c: 330:     ff.bits.ALARM_ON = 0;
  4419  06B8  1079               	bcf	_ff,0
  4420                           
  4421                           ;main.c: 331:     ff.bits.ALARM_OFF = 1;
  4422  06B9  14F9               	bsf	_ff,1
  4423  06BA                     __ccov185_end_blk0:
  4424  06BA                     __ccov186_start_blk1:
  4425  06BA                     l384:
  4426  06BA  0020               	movlb	0	; select bank0
  4427  06BB  16AC               	bsf	__ccovbit1_81/(0+8),__ccovbit1_81& (0+7)	;volatile
  4428  06BC  0008               	return
  4429  06BD                     __end_of_clear_alarm:
  4430  06BD                     
  4431                           	psect	text20
  4432  0522                     __ptext20:	
  4433 ;; *************** function _ADC_GetConversion *****************
  4434 ;; Defined at:
  4435 ;;		line 112 in file "mcc_generated_files/adc.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;  channel         1    wreg     enum E2427
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  channel         1    3[COMMON] enum E2427
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  1    wreg      unsigned char 
  4442 ;; Registers used:
  4443 ;;		wreg, status,2, status,0
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4449 ;;      Params:         0       0       0       0
  4450 ;;      Locals:         1       0       0       0
  4451 ;;      Temps:          1       0       0       0
  4452 ;;      Totals:         2       0       0       0
  4453 ;;Total ram usage:        2 bytes
  4454 ;; Hardware stack levels used: 1
  4455 ;; Hardware stack levels required when called: 7
  4456 ;; This function calls:
  4457 ;;		Nothing
  4458 ;; This function is called by:
  4459 ;;		_get_wsp
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463  0522                     _ADC_GetConversion:	
  4464                           ;psect for function _ADC_GetConversion
  4465                           
  4466                           
  4467                           ;incstack = 0
  4468                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  4469                           ;ADC_GetConversion@channel stored from wreg
  4470  0522  00F6               	movwf	ADC_GetConversion@channel
  4471  0523                     l2576:
  4472                           
  4473                           ;mcc_generated_files/adc.c: 112: char ADC_GetConversion(adc_channel_t channel);mcc_gener
      +                          ated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = channel;
  4474  0523  0876               	movf	ADC_GetConversion@channel,w
  4475  0524  00F5               	movwf	??_ADC_GetConversion
  4476  0525  0DF5               	rlf	??_ADC_GetConversion,f
  4477  0526  0DF5               	rlf	??_ADC_GetConversion,f
  4478  0527  0021               	movlb	1	; select bank1
  4479  0528  081D               	movf	29,w	;volatile
  4480  0529  0675               	xorwf	??_ADC_GetConversion,w
  4481  052A  3983               	andlw	-125
  4482  052B  0675               	xorwf	??_ADC_GetConversion,w
  4483  052C  009D               	movwf	29	;volatile
  4484  052D                     __ccov22_end_blk0:
  4485  052D                     __ccov23_start_blk1:
  4486  052D                     l2578:
  4487                           
  4488                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  4489  052D  141D               	bsf	29,0	;volatile
  4490  052E                     __ccov23_end_blk1:
  4491  052E                     __ccov24_start_blk2:
  4492  052E                     l2580:
  4493                           
  4494                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  4495  052E  3006               	movlw	6
  4496  052F                     u2837:
  4497  052F  0B89               	decfsz	9,f
  4498  0530  2D2F               	goto	u2837
  4499  0531  3200               	nop2
  4500  0532                     __ccov24_end_blk2:
  4501  0532                     __ccov25_start_blk3:
  4502  0532                     l2582:
  4503                           
  4504                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  4505  0532  0021               	movlb	1	; select bank1
  4506  0533  149D               	bsf	29,1	;volatile
  4507  0534                     __ccov25_end_blk3:
  4508  0534                     __ccov26_start_blk5:
  4509  0534                     l61:	
  4510                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  4511                           
  4512                           
  4513                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  4514  0534  189D               	btfsc	29,1	;volatile
  4515  0535  2D37               	goto	u2681
  4516  0536  2D38               	goto	u2680
  4517  0537                     u2681:
  4518  0537  2D34               	goto	l61
  4519  0538                     __ccov26_end_blk5:
  4520  0538                     u2680:
  4521  0538                     __ccov27_start_blk7:
  4522  0538                     l2584:
  4523                           
  4524                           ;mcc_generated_files/adc.c: 132:     return (ADRESH);
  4525  0538  081C               	movf	28,w	;volatile
  4526  0539                     __ccov27_end_blk7:
  4527  0539                     __ccov28_start_blk9:
  4528  0539                     l64:
  4529  0539  1572               	bsf	__ccovbit9_5/(0+8),__ccovbit9_5& (0+7)	;volatile
  4530  053A  0008               	return
  4531  053B                     __end_of_ADC_GetConversion:
  4532  053B                     
  4533                           	psect	text21
  4534  0387                     __ptext21:	
  4535 ;; *************** function _get_jump *****************
  4536 ;; Defined at:
  4537 ;;		line 686 in file "main.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;		None
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;		None
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  1    wreg      void 
  4544 ;; Registers used:
  4545 ;;		wreg, status,2, status,0
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4551 ;;      Params:         0       0       0       0
  4552 ;;      Locals:         0       0       0       0
  4553 ;;      Temps:          1       0       0       0
  4554 ;;      Totals:         1       0       0       0
  4555 ;;Total ram usage:        1 bytes
  4556 ;; Hardware stack levels used: 1
  4557 ;; Hardware stack levels required when called: 7
  4558 ;; This function calls:
  4559 ;;		Nothing
  4560 ;; This function is called by:
  4561 ;;		_main
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565  0387                     _get_jump:	
  4566                           ;psect for function _get_jump
  4567                           
  4568                           
  4569                           ;incstack = 0
  4570                           ; Regs used in _get_jump: [wreg+status,2+status,0]
  4571  0387                     l2414:
  4572                           
  4573                           ;main.c: 688:     static signed char jump_counter;;main.c: 690:     if (ff.bits.ALLOW_JU
      +                          MP) {
  4574  0387  1F79               	btfss	_ff,6
  4575  0388  2B8A               	goto	u2461
  4576  0389  2B8B               	goto	u2460
  4577  038A                     u2461:
  4578  038A  2BBF               	goto	l531
  4579  038B                     __ccov348_end_blk0:
  4580  038B                     u2460:
  4581  038B                     __ccov349_start_blk1:
  4582  038B                     l522:	
  4583                           ;main.c: 692:         do { ANSELAbits.ANSA1 = 0; } while(0);
  4584                           
  4585  038B  0023               	movlb	3	; select bank3
  4586  038C  108C               	bcf	12,1	;volatile
  4587  038D                     __ccov349_end_blk1:
  4588  038D                     __ccov350_start_blk3:
  4589  038D                     l524:	
  4590                           ;main.c: 693:         do { TRISAbits.TRISA1 = 1; } while(0);
  4591                           
  4592  038D  0021               	movlb	1	; select bank1
  4593  038E  148C               	bsf	12,1	;volatile
  4594  038F                     __ccov350_end_blk3:
  4595  038F                     __ccov351_start_blk4:
  4596  038F                     l525:
  4597                           
  4598                           ;main.c: 694:         if (PORTAbits.RA1) jump_counter++;
  4599  038F  0020               	movlb	0	; select bank0
  4600  0390  1C8C               	btfss	12,1	;volatile
  4601  0391  2B93               	goto	u2471
  4602  0392  2B94               	goto	u2470
  4603  0393                     u2471:
  4604  0393  2B9A               	goto	l2418
  4605  0394                     __ccov351_end_blk4:
  4606  0394                     u2470:
  4607  0394                     __ccov352_start_blk5:
  4608  0394                     l2416:
  4609  0394  1621               	bsf	__ccovbit5_170/(0+8),__ccovbit5_170& (0+7)	;volatile
  4610  0395  3001               	movlw	1
  4611  0396  00F5               	movwf	??_get_jump
  4612  0397  0875               	movf	??_get_jump,w
  4613  0398  07C9               	addwf	get_jump@jump_counter,f
  4614  0399  2B9F               	goto	l2420
  4615  039A                     __ccov352_end_blk5:
  4616  039A                     __ccov353_start_blk7:
  4617  039A                     l2418:
  4618  039A  15A1               	bsf	__ccovbit7_171/(0+8),__ccovbit7_171& (0+7)	;volatile
  4619  039B  30FF               	movlw	255
  4620  039C  00F5               	movwf	??_get_jump
  4621  039D  0875               	movf	??_get_jump,w
  4622  039E  07C9               	addwf	get_jump@jump_counter,f
  4623  039F                     __ccov353_end_blk7:
  4624  039F                     __ccov354_start_blk9:
  4625  039F                     l2420:
  4626                           
  4627                           ;main.c: 703:         if (jump_counter > JUMP_MEAS_COUNT) {
  4628  039F  0849               	movf	get_jump@jump_counter,w
  4629  03A0  3A80               	xorlw	128
  4630  03A1  3E75               	addlw	-139
  4631  03A2  1C03               	skipc
  4632  03A3  2BA5               	goto	u2481
  4633  03A4  2BA6               	goto	u2480
  4634  03A5                     u2481:
  4635  03A5  2BAE               	goto	l2428
  4636  03A6                     __ccov354_end_blk9:
  4637  03A6                     u2480:
  4638  03A6                     __ccov355_start_blk10:
  4639  03A6                     l2422:
  4640                           
  4641                           ;main.c: 704:             jump_counter = JUMP_MEAS_COUNT;
  4642  03A6  300A               	movlw	10
  4643  03A7  00F5               	movwf	??_get_jump
  4644  03A8  0875               	movf	??_get_jump,w
  4645  03A9  00C9               	movwf	get_jump@jump_counter
  4646  03AA                     __ccov355_end_blk10:
  4647  03AA                     __ccov356_start_blk11:
  4648  03AA                     l2424:
  4649                           
  4650                           ;main.c: 705:             ff.bits.JUMP_LOW = 0;
  4651  03AA  13F9               	bcf	_ff,7
  4652  03AB                     __ccov356_end_blk11:
  4653  03AB                     __ccov357_start_blk12:
  4654  03AB                     l2426:
  4655  03AB  1521               	bsf	__ccovbit12_172/(0+8),__ccovbit12_172& (0+7)	;volatile
  4656                           
  4657                           ;main.c: 706:             ff.bits.JUMP_HIGH = 1;
  4658  03AC  147A               	bsf	_ff+1,0
  4659                           
  4660                           ;main.c: 707:         } else if (jump_counter<-JUMP_MEAS_COUNT) {
  4661  03AD  2BBD               	goto	l2436
  4662  03AE                     __ccov357_end_blk12:
  4663  03AE                     __ccov358_start_blk14:
  4664  03AE                     l2428:
  4665  03AE  14A1               	bsf	__ccovbit14_173/(0+8),__ccovbit14_173& (0+7)	;volatile
  4666  03AF  0849               	movf	get_jump@jump_counter,w
  4667  03B0  3A80               	xorlw	128
  4668  03B1  3E8A               	addlw	138
  4669  03B2  1803               	skipnc
  4670  03B3  2BB5               	goto	u2491
  4671  03B4  2BB6               	goto	u2490
  4672  03B5                     u2491:
  4673  03B5  2BBD               	goto	l2436
  4674  03B6                     __ccov358_end_blk14:
  4675  03B6                     u2490:
  4676  03B6                     __ccov359_start_blk15:
  4677  03B6                     l2430:
  4678                           
  4679                           ;main.c: 708:             jump_counter = -JUMP_MEAS_COUNT;
  4680  03B6  30F6               	movlw	246
  4681  03B7  00F5               	movwf	??_get_jump
  4682  03B8  0875               	movf	??_get_jump,w
  4683  03B9  00C9               	movwf	get_jump@jump_counter
  4684  03BA                     __ccov359_end_blk15:
  4685  03BA                     __ccov360_start_blk16:
  4686  03BA                     l2432:
  4687                           
  4688                           ;main.c: 709:             ff.bits.JUMP_LOW = 1;
  4689  03BA  17F9               	bsf	_ff,7
  4690  03BB                     __ccov360_end_blk16:
  4691  03BB                     __ccov361_start_blk17:
  4692  03BB                     l2434:
  4693  03BB  1421               	bsf	__ccovbit17_174/(0+8),__ccovbit17_174& (0+7)	;volatile
  4694                           
  4695                           ;main.c: 710:             ff.bits.JUMP_HIGH = 0;
  4696  03BC  107A               	bcf	_ff+1,0
  4697  03BD                     __ccov361_end_blk17:
  4698  03BD                     __ccov362_start_blk20:
  4699  03BD                     l2436:
  4700  03BD  17A0               	bsf	__ccovbit20_175/(0+8),__ccovbit20_175& (0+7)	;volatile
  4701                           
  4702                           ;main.c: 712:         ff.bits.ALLOW_JUMP = 0;
  4703  03BE  1379               	bcf	_ff,6
  4704  03BF                     __ccov362_end_blk20:
  4705  03BF                     __ccov363_start_blk22:
  4706  03BF                     l531:
  4707  03BF  0020               	movlb	0	; select bank0
  4708  03C0  1720               	bsf	__ccovbit22_176/(0+8),__ccovbit22_176& (0+7)	;volatile
  4709  03C1  0008               	return
  4710  03C2                     __end_of_get_jump:
  4711  03C2                     
  4712                           	psect	text22
  4713  01F7                     __ptext22:	
  4714 ;; *************** function _get_fun *****************
  4715 ;; Defined at:
  4716 ;;		line 621 in file "main.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;		None
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;		None
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      void 
  4723 ;; Registers used:
  4724 ;;		wreg, status,2, status,0
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4730 ;;      Params:         0       0       0       0
  4731 ;;      Locals:         0       0       0       0
  4732 ;;      Temps:          1       0       0       0
  4733 ;;      Totals:         1       0       0       0
  4734 ;;Total ram usage:        1 bytes
  4735 ;; Hardware stack levels used: 1
  4736 ;; Hardware stack levels required when called: 7
  4737 ;; This function calls:
  4738 ;;		Nothing
  4739 ;; This function is called by:
  4740 ;;		_main
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744  01F7                     _get_fun:	
  4745                           ;psect for function _get_fun
  4746                           
  4747                           
  4748                           ;incstack = 0
  4749                           ; Regs used in _get_fun: [wreg+status,2+status,0]
  4750  01F7                     l2380:
  4751                           
  4752                           ;main.c: 623:     if (ff.bits.ALLOW_FUN) {
  4753  01F7  1EF9               	btfss	_ff,5
  4754  01F8  29FA               	goto	u2421
  4755  01F9  29FB               	goto	u2420
  4756  01FA                     u2421:
  4757  01FA  2A3C               	goto	l516
  4758  01FB                     __ccov329_end_blk0:
  4759  01FB                     u2420:
  4760  01FB                     __ccov330_start_blk1:
  4761  01FB                     l503:	
  4762                           ;main.c: 625:         static signed char fun_counter;;main.c: 626:         do { LATCbits
      +                          .LATC1 = 1; } while(0);
  4763                           
  4764  01FB  0022               	movlb	2	; select bank2
  4765  01FC  148E               	bsf	14,1	;volatile
  4766  01FD                     __ccov330_end_blk1:
  4767  01FD                     __ccov331_start_blk3:
  4768  01FD                     l2382:
  4769                           
  4770                           ;main.c: 627:         _delay((unsigned long)((1)*(16000000/4000.0)));
  4771  01FD  3006               	movlw	6
  4772  01FE  00F5               	movwf	??_get_fun
  4773  01FF  3030               	movlw	48
  4774  0200                     u2847:
  4775  0200  0B89               	decfsz	9,f
  4776  0201  2A00               	goto	u2847
  4777  0202  0BF5               	decfsz	??_get_fun,f
  4778  0203  2A00               	goto	u2847
  4779  0204  3200               	nop2
  4780  0205                     __ccov331_end_blk3:
  4781  0205                     __ccov332_start_blk5:
  4782  0205                     l2384:
  4783  0205  0023               	movlb	3	; select bank3
  4784  0206  110E               	bcf	14,2	;volatile
  4785  0207                     __ccov332_end_blk5:
  4786  0207                     __ccov333_start_blk8:
  4787  0207                     l2386:
  4788  0207  0021               	movlb	1	; select bank1
  4789  0208  150E               	bsf	14,2	;volatile
  4790  0209                     __ccov333_end_blk8:
  4791  0209                     __ccov334_start_blk10:
  4792  0209                     l2388:
  4793                           
  4794                           ;main.c: 630:         if (PORTCbits.RC2) fun_counter--;
  4795  0209  0020               	movlb	0	; select bank0
  4796  020A  1D0E               	btfss	14,2	;volatile
  4797  020B  2A0D               	goto	u2431
  4798  020C  2A0E               	goto	u2430
  4799  020D                     u2431:
  4800  020D  2A14               	goto	l2392
  4801  020E                     __ccov334_end_blk10:
  4802  020E                     u2430:
  4803  020E                     __ccov335_start_blk11:
  4804  020E                     l2390:
  4805  020E  15A2               	bsf	__ccovbit11_163/(0+8),__ccovbit11_163& (0+7)	;volatile
  4806  020F  30FF               	movlw	255
  4807  0210  00F5               	movwf	??_get_fun
  4808  0211  0875               	movf	??_get_fun,w
  4809  0212  07CA               	addwf	get_fun@fun_counter,f
  4810  0213  2A19               	goto	l2394
  4811  0214                     __ccov335_end_blk11:
  4812  0214                     __ccov336_start_blk13:
  4813  0214                     l2392:
  4814  0214  1522               	bsf	__ccovbit13_164/(0+8),__ccovbit13_164& (0+7)	;volatile
  4815  0215  3001               	movlw	1
  4816  0216  00F5               	movwf	??_get_fun
  4817  0217  0875               	movf	??_get_fun,w
  4818  0218  07CA               	addwf	get_fun@fun_counter,f
  4819  0219                     __ccov336_end_blk13:
  4820  0219                     __ccov337_start_blk16:
  4821  0219                     l2394:
  4822  0219  0022               	movlb	2	; select bank2
  4823  021A  108E               	bcf	14,1	;volatile
  4824  021B                     __ccov337_end_blk16:
  4825  021B                     __ccov338_start_blk18:
  4826  021B                     l2396:
  4827                           
  4828                           ;main.c: 638:         if (fun_counter > FUN_MEAS_COUNT) {
  4829  021B  0020               	movlb	0	; select bank0
  4830  021C  084A               	movf	get_fun@fun_counter,w
  4831  021D  3A80               	xorlw	128
  4832  021E  3E75               	addlw	-139
  4833  021F  1C03               	skipc
  4834  0220  2A22               	goto	u2441
  4835  0221  2A23               	goto	u2440
  4836  0222                     u2441:
  4837  0222  2A2B               	goto	l2404
  4838  0223                     __ccov338_end_blk18:
  4839  0223                     u2440:
  4840  0223                     __ccov339_start_blk19:
  4841  0223                     l2398:
  4842                           
  4843                           ;main.c: 639:             fun_counter = FUN_MEAS_COUNT;
  4844  0223  300A               	movlw	10
  4845  0224  00F5               	movwf	??_get_fun
  4846  0225  0875               	movf	??_get_fun,w
  4847  0226  00CA               	movwf	get_fun@fun_counter
  4848  0227                     __ccov339_end_blk19:
  4849  0227                     __ccov340_start_blk20:
  4850  0227                     l2400:
  4851                           
  4852                           ;main.c: 640:             ff.bits.FUN_LOW = 0;
  4853  0227  11F9               	bcf	_ff,3
  4854  0228                     __ccov340_end_blk20:
  4855  0228                     __ccov341_start_blk21:
  4856  0228                     l2402:
  4857  0228  14A2               	bsf	__ccovbit21_165/(0+8),__ccovbit21_165& (0+7)	;volatile
  4858                           
  4859                           ;main.c: 641:             ff.bits.FUN_HIGH = 1;
  4860  0229  1579               	bsf	_ff,2
  4861                           
  4862                           ;main.c: 642:         } else if (fun_counter<-FUN_MEAS_COUNT) {
  4863  022A  2A3A               	goto	l2412
  4864  022B                     __ccov341_end_blk21:
  4865  022B                     __ccov342_start_blk23:
  4866  022B                     l2404:
  4867  022B  1422               	bsf	__ccovbit23_166/(0+8),__ccovbit23_166& (0+7)	;volatile
  4868  022C  084A               	movf	get_fun@fun_counter,w
  4869  022D  3A80               	xorlw	128
  4870  022E  3E8A               	addlw	138
  4871  022F  1803               	skipnc
  4872  0230  2A32               	goto	u2451
  4873  0231  2A33               	goto	u2450
  4874  0232                     u2451:
  4875  0232  2A3A               	goto	l2412
  4876  0233                     __ccov342_end_blk23:
  4877  0233                     u2450:
  4878  0233                     __ccov343_start_blk24:
  4879  0233                     l2406:
  4880                           
  4881                           ;main.c: 643:             fun_counter = -FUN_MEAS_COUNT;
  4882  0233  30F6               	movlw	246
  4883  0234  00F5               	movwf	??_get_fun
  4884  0235  0875               	movf	??_get_fun,w
  4885  0236  00CA               	movwf	get_fun@fun_counter
  4886  0237                     __ccov343_end_blk24:
  4887  0237                     __ccov344_start_blk25:
  4888  0237                     l2408:
  4889                           
  4890                           ;main.c: 644:             ff.bits.FUN_LOW = 1;
  4891  0237  15F9               	bsf	_ff,3
  4892  0238                     __ccov344_end_blk25:
  4893  0238                     __ccov345_start_blk26:
  4894  0238                     l2410:
  4895  0238  17A1               	bsf	__ccovbit26_167/(0+8),__ccovbit26_167& (0+7)	;volatile
  4896                           
  4897                           ;main.c: 645:             ff.bits.FUN_HIGH = 0;
  4898  0239  1179               	bcf	_ff,2
  4899  023A                     __ccov345_end_blk26:
  4900  023A                     __ccov346_start_blk29:
  4901  023A                     l2412:
  4902  023A  1721               	bsf	__ccovbit29_168/(0+8),__ccovbit29_168& (0+7)	;volatile
  4903                           
  4904                           ;main.c: 647:         ff.bits.ALLOW_FUN = 0;
  4905  023B  12F9               	bcf	_ff,5
  4906  023C                     __ccov346_end_blk29:
  4907  023C                     __ccov347_start_blk31:
  4908  023C                     l516:
  4909  023C  0020               	movlb	0	; select bank0
  4910  023D  16A1               	bsf	__ccovbit31_169/(0+8),__ccovbit31_169& (0+7)	;volatile
  4911  023E  0008               	return
  4912  023F                     __end_of_get_fun:
  4913  023F                     
  4914                           	psect	text23
  4915  023F                     __ptext23:	
  4916 ;; *************** function _fun_work *****************
  4917 ;; Defined at:
  4918 ;;		line 334 in file "main.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;		None
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;		None
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  1    wreg      void 
  4925 ;; Registers used:
  4926 ;;		wreg, status,2, status,0, pclath, cstack
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4932 ;;      Params:         0       0       0       0
  4933 ;;      Locals:         0       0       0       0
  4934 ;;      Temps:          1       0       0       0
  4935 ;;      Totals:         1       0       0       0
  4936 ;;Total ram usage:        1 bytes
  4937 ;; Hardware stack levels used: 1
  4938 ;; Hardware stack levels required when called: 9
  4939 ;; This function calls:
  4940 ;;		_close
  4941 ;;		_open
  4942 ;; This function is called by:
  4943 ;;		_main
  4944 ;; This function uses a non-reentrant model
  4945 ;;
  4946                           
  4947  023F                     _fun_work:	
  4948                           ;psect for function _fun_work
  4949                           
  4950                           
  4951                           ;incstack = 0
  4952                           ; Regs used in _fun_work: [wreg+status,2+status,0+pclath+cstack]
  4953  023F                     l2266:
  4954                           
  4955                           ;main.c: 335:     {;main.c: 336:         if (
  4956  023F  1DF9               	btfss	_ff,3
  4957  0240  2A42               	goto	u2101
  4958  0241  2A43               	goto	u2100
  4959  0242                     u2101:
  4960  0242  2A63               	goto	l2282
  4961  0243                     __ccov187_end_blk0:
  4962  0243                     u2100:
  4963  0243                     __ccov188_start_blk1:
  4964  0243                     l2268:
  4965  0243  0020               	movlb	0	; select bank0
  4966  0244  162C               	bsf	__ccovbit1_82/(0+8),__ccovbit1_82& (0+7)	;volatile
  4967  0245  1979               	btfsc	_ff,2
  4968  0246  2A48               	goto	u2111
  4969  0247  2A49               	goto	u2110
  4970  0248                     u2111:
  4971  0248  2A63               	goto	l2282
  4972  0249                     __ccov188_end_blk1:
  4973  0249                     u2110:
  4974  0249                     __ccov189_start_blk2:
  4975  0249                     l2270:
  4976  0249  15AC               	bsf	__ccovbit2_83/(0+8),__ccovbit2_83& (0+7)	;volatile
  4977  024A  1CF9               	btfss	_ff,1
  4978  024B  2A4D               	goto	u2121
  4979  024C  2A4E               	goto	u2120
  4980  024D                     u2121:
  4981  024D  2A63               	goto	l2282
  4982  024E                     __ccov189_end_blk2:
  4983  024E                     u2120:
  4984  024E                     __ccov190_start_blk3:
  4985  024E                     l2272:
  4986  024E  152C               	bsf	__ccovbit3_84/(0+8),__ccovbit3_84& (0+7)	;volatile
  4987  024F  1DFB               	btfss	_ff+2,3
  4988  0250  2A52               	goto	u2131
  4989  0251  2A53               	goto	u2130
  4990  0252                     u2131:
  4991  0252  2A63               	goto	l2282
  4992  0253                     __ccov190_end_blk3:
  4993  0253                     u2130:
  4994  0253                     __ccov191_start_blk4:
  4995  0253                     l2274:
  4996  0253  14AC               	bsf	__ccovbit4_85/(0+8),__ccovbit4_85& (0+7)	;volatile
  4997  0254  197A               	btfsc	_ff+1,2
  4998  0255  2A57               	goto	u2141
  4999  0256  2A58               	goto	u2140
  5000  0257                     u2141:
  5001  0257  2A63               	goto	l2282
  5002  0258                     __ccov191_end_blk4:
  5003  0258                     u2140:
  5004  0258                     __ccov192_start_blk5:
  5005  0258                     l2276:
  5006  0258  142C               	bsf	__ccovbit5_86/(0+8),__ccovbit5_86& (0+7)	;volatile
  5007  0259  18FA               	btfsc	_ff+1,1
  5008  025A  2A5C               	goto	u2151
  5009  025B  2A5D               	goto	u2150
  5010  025C                     u2151:
  5011  025C  2A63               	goto	l2282
  5012  025D                     __ccov192_end_blk5:
  5013  025D                     u2150:
  5014  025D                     __ccov193_start_blk6:
  5015  025D                     l2278:
  5016                           
  5017                           ;main.c: 342:                 !ff.bits.OPENING) {;main.c: 343:             beep_short_co
      +                          unt = 1;
  5018  025D  01FD               	clrf	_beep_short_count
  5019  025E  0AFD               	incf	_beep_short_count,f
  5020  025F                     __ccov193_end_blk6:
  5021  025F                     __ccov194_start_blk7:
  5022  025F                     l2280:
  5023  025F  17AB               	bsf	__ccovbit7_87/(0+8),__ccovbit7_87& (0+7)	;volatile
  5024                           
  5025                           ;main.c: 344:             open();
  5026  0260  3184  2490  3182   	fcall	_open
  5027  0263                     __ccov194_end_blk7:
  5028  0263                     __ccov195_start_blk9:
  5029  0263                     l2282:
  5030                           
  5031                           ;main.c: 346:         if (
  5032  0263  1D79               	btfss	_ff,2
  5033  0264  2A66               	goto	u2161
  5034  0265  2A67               	goto	u2160
  5035  0266                     u2161:
  5036  0266  2A84               	goto	l389
  5037  0267                     __ccov195_end_blk9:
  5038  0267                     u2160:
  5039  0267                     __ccov196_start_blk10:
  5040  0267                     l2284:
  5041  0267  0020               	movlb	0	; select bank0
  5042  0268  172B               	bsf	__ccovbit10_88/(0+8),__ccovbit10_88& (0+7)	;volatile
  5043  0269  1DFB               	btfss	_ff+2,3
  5044  026A  2A6C               	goto	u2171
  5045  026B  2A6D               	goto	u2170
  5046  026C                     u2171:
  5047  026C  2A84               	goto	l389
  5048  026D                     __ccov196_end_blk10:
  5049  026D                     u2170:
  5050  026D                     __ccov197_start_blk11:
  5051  026D                     l2286:
  5052  026D  16AB               	bsf	__ccovbit11_89/(0+8),__ccovbit11_89& (0+7)	;volatile
  5053  026E  19F9               	btfsc	_ff,3
  5054  026F  2A71               	goto	u2181
  5055  0270  2A72               	goto	u2180
  5056  0271                     u2181:
  5057  0271  2A84               	goto	l389
  5058  0272                     __ccov197_end_blk11:
  5059  0272                     u2180:
  5060  0272                     __ccov198_start_blk12:
  5061  0272                     l2288:
  5062  0272  162B               	bsf	__ccovbit12_90/(0+8),__ccovbit12_90& (0+7)	;volatile
  5063  0273  1A7A               	btfsc	_ff+1,4
  5064  0274  2A76               	goto	u2191
  5065  0275  2A77               	goto	u2190
  5066  0276                     u2191:
  5067  0276  2A84               	goto	l389
  5068  0277                     __ccov198_end_blk12:
  5069  0277                     u2190:
  5070  0277                     __ccov199_start_blk13:
  5071  0277                     l2290:
  5072  0277  15AB               	bsf	__ccovbit13_91/(0+8),__ccovbit13_91& (0+7)	;volatile
  5073  0278  19FA               	btfsc	_ff+1,3
  5074  0279  2A7B               	goto	u2201
  5075  027A  2A7C               	goto	u2200
  5076  027B                     u2201:
  5077  027B  2A84               	goto	l389
  5078  027C                     __ccov199_end_blk13:
  5079  027C                     u2200:
  5080  027C                     __ccov200_start_blk14:
  5081  027C                     l2292:
  5082                           
  5083                           ;main.c: 351:                 !ff.bits.CLOSING) {;main.c: 352:             beep_short_co
      +                          unt = 2;
  5084  027C  3002               	movlw	2
  5085  027D  00F6               	movwf	??_fun_work
  5086  027E  0876               	movf	??_fun_work,w
  5087  027F  00FD               	movwf	_beep_short_count
  5088  0280                     __ccov200_end_blk14:
  5089  0280                     __ccov201_start_blk15:
  5090  0280                     l2294:
  5091  0280  152B               	bsf	__ccovbit15_92/(0+8),__ccovbit15_92& (0+7)	;volatile
  5092                           
  5093                           ;main.c: 353:             close();
  5094  0281  3184  24B1  3182   	fcall	_close
  5095  0284                     __ccov201_end_blk15:
  5096  0284                     __ccov202_start_blk17:
  5097  0284                     l389:
  5098  0284  0020               	movlb	0	; select bank0
  5099  0285  14AB               	bsf	__ccovbit17_93/(0+8),__ccovbit17_93& (0+7)	;volatile
  5100  0286  0008               	return
  5101  0287                     __end_of_fun_work:
  5102  0287                     
  5103                           	psect	text24
  5104  0490                     __ptext24:	
  5105 ;; *************** function _open *****************
  5106 ;; Defined at:
  5107 ;;		line 265 in file "main.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;		None
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;		None
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  1    wreg      void 
  5114 ;; Registers used:
  5115 ;;		wreg, status,2, status,0, pclath, cstack
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5121 ;;      Params:         0       0       0       0
  5122 ;;      Locals:         0       0       0       0
  5123 ;;      Temps:          0       0       0       0
  5124 ;;      Totals:         0       0       0       0
  5125 ;;Total ram usage:        0 bytes
  5126 ;; Hardware stack levels used: 1
  5127 ;; Hardware stack levels required when called: 8
  5128 ;; This function calls:
  5129 ;;		_go_open
  5130 ;;		_go_open_alt
  5131 ;;		_rele_off
  5132 ;; This function is called by:
  5133 ;;		_fun_work
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137  0490                     _open:	
  5138                           ;psect for function _open
  5139                           
  5140                           
  5141                           ;incstack = 0
  5142                           ; Regs used in _open: [wreg+status,2+status,0+pclath+cstack]
  5143  0490                     l2200:
  5144                           
  5145                           ;main.c: 266:     if (ff.bits.CLOSING) {
  5146  0490  1DFA               	btfss	_ff+1,3
  5147  0491  2C93               	goto	u1981
  5148  0492  2C94               	goto	u1980
  5149  0493                     u1981:
  5150  0493  2C9A               	goto	l359
  5151  0494                     __ccov156_end_blk0:
  5152  0494                     u1980:
  5153  0494                     __ccov157_start_blk1:
  5154  0494                     l2202:
  5155  0494  0020               	movlb	0	; select bank0
  5156  0495  17AE               	bsf	__ccovbit1_63/(0+8),__ccovbit1_63& (0+7)	;volatile
  5157                           
  5158                           ;main.c: 267:         rele_off();
  5159  0496  3185  25B1  3184   	fcall	_rele_off
  5160                           
  5161                           ;main.c: 268:     } else {
  5162  0499  2CAE               	goto	l364
  5163  049A                     __ccov157_end_blk1:
  5164  049A                     __ccov158_start_blk2:
  5165  049A                     l359:
  5166                           
  5167                           ;main.c: 269:         if (ff.bits.NORMAL_WORK_MODE_ON) {
  5168  049A  1E7B               	btfss	_ff+2,4
  5169  049B  2C9D               	goto	u1991
  5170  049C  2C9E               	goto	u1990
  5171  049D                     u1991:
  5172  049D  2CA4               	goto	l361
  5173  049E                     __ccov158_end_blk2:
  5174  049E                     u1990:
  5175  049E                     __ccov159_start_blk3:
  5176  049E                     l2204:
  5177  049E  0020               	movlb	0	; select bank0
  5178  049F  172E               	bsf	__ccovbit3_64/(0+8),__ccovbit3_64& (0+7)	;volatile
  5179                           
  5180                           ;main.c: 270:             go_open();
  5181  04A0  3184  24D2  3184   	fcall	_go_open
  5182                           
  5183                           ;main.c: 271:         } else if (ff.bits.UNIVERSAL_VORK_MODE_ON) {
  5184  04A3  2CAE               	goto	l364
  5185  04A4                     __ccov159_end_blk3:
  5186  04A4                     __ccov160_start_blk4:
  5187  04A4                     l361:
  5188  04A4  0020               	movlb	0	; select bank0
  5189  04A5  16AE               	bsf	__ccovbit4_65/(0+8),__ccovbit4_65& (0+7)	;volatile
  5190  04A6  1EFB               	btfss	_ff+2,5
  5191  04A7  2CA9               	goto	u2001
  5192  04A8  2CAA               	goto	u2000
  5193  04A9                     u2001:
  5194  04A9  2CAE               	goto	l364
  5195  04AA                     __ccov160_end_blk4:
  5196  04AA                     u2000:
  5197  04AA                     __ccov161_start_blk5:
  5198  04AA                     l2206:
  5199  04AA  162E               	bsf	__ccovbit5_66/(0+8),__ccovbit5_66& (0+7)	;volatile
  5200                           
  5201                           ;main.c: 272:             go_open_alt();
  5202  04AB  3186  2606  3184   	fcall	_go_open_alt
  5203  04AE                     __ccov161_end_blk5:
  5204  04AE                     __ccov162_start_blk9:
  5205  04AE                     l364:
  5206  04AE  0020               	movlb	0	; select bank0
  5207  04AF  15AE               	bsf	__ccovbit9_67/(0+8),__ccovbit9_67& (0+7)	;volatile
  5208  04B0  0008               	return
  5209  04B1                     __end_of_open:
  5210  04B1                     
  5211                           	psect	text25
  5212  0606                     __ptext25:	
  5213 ;; *************** function _go_open_alt *****************
  5214 ;; Defined at:
  5215 ;;		line 228 in file "main.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;		None
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;		None
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  1    wreg      void 
  5222 ;; Registers used:
  5223 ;;		None
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5229 ;;      Params:         0       0       0       0
  5230 ;;      Locals:         0       0       0       0
  5231 ;;      Temps:          0       0       0       0
  5232 ;;      Totals:         0       0       0       0
  5233 ;;Total ram usage:        0 bytes
  5234 ;; Hardware stack levels used: 1
  5235 ;; Hardware stack levels required when called: 7
  5236 ;; This function calls:
  5237 ;;		Nothing
  5238 ;; This function is called by:
  5239 ;;		_open
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243  0606                     _go_open_alt:	
  5244                           ;psect for function _go_open_alt
  5245                           
  5246                           
  5247                           ;incstack = 0
  5248                           ; Regs used in _go_open_alt: []
  5249  0606                     l1386:
  5250                           
  5251                           ;main.c: 229:     if (!ff.bits.OPENED && ff.bits.MOVING_ALLOWED) {
  5252  0606  197A               	btfsc	_ff+1,2
  5253  0607  2E09               	goto	u281
  5254  0608  2E0A               	goto	u280
  5255  0609                     u281:
  5256  0609  2E15               	goto	l343
  5257  060A                     __ccov139_end_blk0:
  5258  060A                     u280:
  5259  060A                     __ccov140_start_blk1:
  5260  060A                     l1388:
  5261  060A  0020               	movlb	0	; select bank0
  5262  060B  1530               	bsf	__ccovbit1_52/(0+8),__ccovbit1_52& (0+7)	;volatile
  5263  060C  1DFB               	btfss	_ff+2,3
  5264  060D  2E0F               	goto	u291
  5265  060E  2E10               	goto	u290
  5266  060F                     u291:
  5267  060F  2E15               	goto	l343
  5268  0610                     __ccov140_end_blk1:
  5269  0610                     u290:
  5270  0610                     __ccov141_start_blk2:
  5271  0610                     l1390:
  5272  0610  14B0               	bsf	__ccovbit2_53/(0+8),__ccovbit2_53& (0+7)	;volatile
  5273                           
  5274                           ;main.c: 230:         ff.bits.CLOSED = 0;
  5275  0611  127A               	bcf	_ff+1,4
  5276                           
  5277                           ;main.c: 231:         ff.bits.OPENED = 1;
  5278  0612  157A               	bsf	_ff+1,2
  5279                           
  5280                           ;main.c: 233:         ff.bits.RELE_CONTROL_ON = 0;
  5281  0613  137A               	bcf	_ff+1,6
  5282                           
  5283                           ;main.c: 234:         ff.bits.RELE_POWER_ON = 0;
  5284  0614  12FA               	bcf	_ff+1,5
  5285  0615                     __ccov141_end_blk2:
  5286  0615                     __ccov142_start_blk4:
  5287  0615                     l343:
  5288  0615  0020               	movlb	0	; select bank0
  5289  0616  1430               	bsf	__ccovbit4_54/(0+8),__ccovbit4_54& (0+7)	;volatile
  5290  0617  0008               	return
  5291  0618                     __end_of_go_open_alt:
  5292  0618                     
  5293                           	psect	text26
  5294  04B1                     __ptext26:	
  5295 ;; *************** function _close *****************
  5296 ;; Defined at:
  5297 ;;		line 253 in file "main.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;		None
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;		None
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  1    wreg      void 
  5304 ;; Registers used:
  5305 ;;		wreg, status,2, status,0, pclath, cstack
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5311 ;;      Params:         0       0       0       0
  5312 ;;      Locals:         0       0       0       0
  5313 ;;      Temps:          0       0       0       0
  5314 ;;      Totals:         0       0       0       0
  5315 ;;Total ram usage:        0 bytes
  5316 ;; Hardware stack levels used: 1
  5317 ;; Hardware stack levels required when called: 8
  5318 ;; This function calls:
  5319 ;;		_go_close
  5320 ;;		_go_close_alt
  5321 ;;		_rele_off
  5322 ;; This function is called by:
  5323 ;;		_fun_work
  5324 ;;		_main
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328  04B1                     _close:	
  5329                           ;psect for function _close
  5330                           
  5331                           
  5332                           ;incstack = 0
  5333                           ; Regs used in _close: [wreg+status,2+status,0+pclath+cstack]
  5334  04B1                     l2192:
  5335                           
  5336                           ;main.c: 254:     if (ff.bits.OPENING) {
  5337  04B1  1CFA               	btfss	_ff+1,1
  5338  04B2  2CB4               	goto	u1951
  5339  04B3  2CB5               	goto	u1950
  5340  04B4                     u1951:
  5341  04B4  2CBB               	goto	l351
  5342  04B5                     __ccov149_end_blk0:
  5343  04B5                     u1950:
  5344  04B5                     __ccov150_start_blk1:
  5345  04B5                     l2194:
  5346  04B5  0020               	movlb	0	; select bank0
  5347  04B6  162F               	bsf	__ccovbit1_58/(0+8),__ccovbit1_58& (0+7)	;volatile
  5348                           
  5349                           ;main.c: 255:         rele_off();
  5350  04B7  3185  25B1  3184   	fcall	_rele_off
  5351                           
  5352                           ;main.c: 256:     } else {
  5353  04BA  2CCF               	goto	l356
  5354  04BB                     __ccov150_end_blk1:
  5355  04BB                     __ccov151_start_blk2:
  5356  04BB                     l351:
  5357                           
  5358                           ;main.c: 257:         if (ff.bits.NORMAL_WORK_MODE_ON) {
  5359  04BB  1E7B               	btfss	_ff+2,4
  5360  04BC  2CBE               	goto	u1961
  5361  04BD  2CBF               	goto	u1960
  5362  04BE                     u1961:
  5363  04BE  2CC5               	goto	l353
  5364  04BF                     __ccov151_end_blk2:
  5365  04BF                     u1960:
  5366  04BF                     __ccov152_start_blk3:
  5367  04BF                     l2196:
  5368  04BF  0020               	movlb	0	; select bank0
  5369  04C0  15AF               	bsf	__ccovbit3_59/(0+8),__ccovbit3_59& (0+7)	;volatile
  5370                           
  5371                           ;main.c: 258:             go_close();
  5372  04C1  3183  23EE  3184   	fcall	_go_close
  5373                           
  5374                           ;main.c: 259:         } else if (ff.bits.UNIVERSAL_VORK_MODE_ON) {
  5375  04C4  2CCF               	goto	l356
  5376  04C5                     __ccov152_end_blk3:
  5377  04C5                     __ccov153_start_blk4:
  5378  04C5                     l353:
  5379  04C5  0020               	movlb	0	; select bank0
  5380  04C6  152F               	bsf	__ccovbit4_60/(0+8),__ccovbit4_60& (0+7)	;volatile
  5381  04C7  1EFB               	btfss	_ff+2,5
  5382  04C8  2CCA               	goto	u1971
  5383  04C9  2CCB               	goto	u1970
  5384  04CA                     u1971:
  5385  04CA  2CCF               	goto	l356
  5386  04CB                     __ccov153_end_blk4:
  5387  04CB                     u1970:
  5388  04CB                     __ccov154_start_blk5:
  5389  04CB                     l2198:
  5390  04CB  14AF               	bsf	__ccovbit5_61/(0+8),__ccovbit5_61& (0+7)	;volatile
  5391                           
  5392                           ;main.c: 260:             go_close_alt();
  5393  04CC  3185  25C8  3184   	fcall	_go_close_alt
  5394  04CF                     __ccov154_end_blk5:
  5395  04CF                     __ccov155_start_blk9:
  5396  04CF                     l356:
  5397  04CF  0020               	movlb	0	; select bank0
  5398  04D0  142F               	bsf	__ccovbit9_62/(0+8),__ccovbit9_62& (0+7)	;volatile
  5399  04D1  0008               	return
  5400  04D2                     __end_of_close:
  5401  04D2                     
  5402                           	psect	text27
  5403  05B1                     __ptext27:	
  5404 ;; *************** function _rele_off *****************
  5405 ;; Defined at:
  5406 ;;		line 238 in file "main.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;		None
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;		None
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  1    wreg      void 
  5413 ;; Registers used:
  5414 ;;		wreg
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5420 ;;      Params:         0       0       0       0
  5421 ;;      Locals:         0       0       0       0
  5422 ;;      Temps:          1       0       0       0
  5423 ;;      Totals:         1       0       0       0
  5424 ;;Total ram usage:        1 bytes
  5425 ;; Hardware stack levels used: 1
  5426 ;; Hardware stack levels required when called: 7
  5427 ;; This function calls:
  5428 ;;		Nothing
  5429 ;; This function is called by:
  5430 ;;		_close
  5431 ;;		_open
  5432 ;;		_switch_wm
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436  05B1                     _rele_off:	
  5437                           ;psect for function _rele_off
  5438                           
  5439                           
  5440                           ;incstack = 0
  5441                           ; Regs used in _rele_off: [wreg]
  5442  05B1                     l2072:
  5443                           
  5444                           ;main.c: 239:     ff.bits.RELE_CONTROL_ON = 0;
  5445  05B1  137A               	bcf	_ff+1,6
  5446                           
  5447                           ;main.c: 240:     ff.bits.RELE_POWER_ON = 0;
  5448  05B2  12FA               	bcf	_ff+1,5
  5449                           
  5450                           ;main.c: 241:     ff.bits.CLOSING = 0;
  5451  05B3  11FA               	bcf	_ff+1,3
  5452                           
  5453                           ;main.c: 242:     ff.bits.OPENING = 0;
  5454  05B4  10FA               	bcf	_ff+1,1
  5455                           
  5456                           ;main.c: 243:     ff.bits.CLOSED = 0;
  5457  05B5  127A               	bcf	_ff+1,4
  5458                           
  5459                           ;main.c: 244:     if (ff.bits.UNIVERSAL_VORK_MODE_ON) {
  5460  05B6  1EFB               	btfss	_ff+2,5
  5461  05B7  2DB9               	goto	u1641
  5462  05B8  2DBA               	goto	u1640
  5463  05B9                     u1641:
  5464  05B9  2DBE               	goto	l346
  5465  05BA                     __ccov143_end_blk0:
  5466  05BA                     u1640:
  5467  05BA                     __ccov144_start_blk1:
  5468  05BA                     l2074:
  5469  05BA  0020               	movlb	0	; select bank0
  5470  05BB  17AF               	bsf	__ccovbit1_55/(0+8),__ccovbit1_55& (0+7)	;volatile
  5471                           
  5472                           ;main.c: 245:         ff.bits.OPENED = 1;
  5473  05BC  157A               	bsf	_ff+1,2
  5474                           
  5475                           ;main.c: 246:     } else {
  5476  05BD  2DC1               	goto	l347
  5477  05BE                     __ccov144_end_blk1:
  5478  05BE                     __ccov145_start_blk2:
  5479  05BE                     l346:
  5480  05BE  0020               	movlb	0	; select bank0
  5481  05BF  172F               	bsf	__ccovbit2_56/(0+8),__ccovbit2_56& (0+7)	;volatile
  5482                           
  5483                           ;main.c: 247:         ff.bits.OPENED = 0;
  5484  05C0  117A               	bcf	_ff+1,2
  5485  05C1                     __ccov145_end_blk2:
  5486  05C1                     __ccov146_start_blk3:
  5487  05C1                     l347:	
  5488                           ;main.c: 248:     }
  5489                           
  5490                           
  5491                           ;main.c: 249:     ff.bits.MOVING_ALLOWED = 0;
  5492  05C1  11FB               	bcf	_ff+2,3
  5493  05C2                     __ccov146_end_blk3:
  5494  05C2                     __ccov147_start_blk4:
  5495  05C2                     l2076:
  5496                           
  5497                           ;main.c: 250:     time_moving_wait = MOVING_WAIT_DELAY;
  5498  05C2  3002               	movlw	2
  5499  05C3  00F5               	movwf	??_rele_off
  5500  05C4  0875               	movf	??_rele_off,w
  5501  05C5  00D0               	movwf	_time_moving_wait
  5502  05C6                     __ccov147_end_blk4:
  5503  05C6                     __ccov148_start_blk5:
  5504  05C6                     l348:
  5505  05C6  16AF               	bsf	__ccovbit5_57/(0+8),__ccovbit5_57& (0+7)	;volatile
  5506  05C7  0008               	return
  5507  05C8                     __end_of_rele_off:
  5508  05C8                     
  5509                           	psect	text28
  5510  05C8                     __ptext28:	
  5511 ;; *************** function _go_close_alt *****************
  5512 ;; Defined at:
  5513 ;;		line 217 in file "main.c"
  5514 ;; Parameters:    Size  Location     Type
  5515 ;;		None
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;		None
  5518 ;; Return value:  Size  Location     Type
  5519 ;;                  1    wreg      void 
  5520 ;; Registers used:
  5521 ;;		None
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5527 ;;      Params:         0       0       0       0
  5528 ;;      Locals:         0       0       0       0
  5529 ;;      Temps:          0       0       0       0
  5530 ;;      Totals:         0       0       0       0
  5531 ;;Total ram usage:        0 bytes
  5532 ;; Hardware stack levels used: 1
  5533 ;; Hardware stack levels required when called: 7
  5534 ;; This function calls:
  5535 ;;		Nothing
  5536 ;; This function is called by:
  5537 ;;		_close
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541  05C8                     _go_close_alt:	
  5542                           ;psect for function _go_close_alt
  5543                           
  5544                           
  5545                           ;incstack = 0
  5546                           ; Regs used in _go_close_alt: []
  5547  05C8                     l1382:
  5548                           
  5549                           ;main.c: 219:     if ((!ff.bits.CLOSED && ff.bits.MOVING_ALLOWED) || ff.bits.ALARM_ON) {
  5550  05C8  1A7A               	btfsc	_ff+1,4
  5551  05C9  2DCB               	goto	u251
  5552  05CA  2DCC               	goto	u250
  5553  05CB                     u251:
  5554  05CB  2DD2               	goto	l338
  5555  05CC                     __ccov134_end_blk0:
  5556  05CC                     u250:
  5557  05CC                     __ccov135_start_blk1:
  5558  05CC                     l1384:
  5559  05CC  0020               	movlb	0	; select bank0
  5560  05CD  1730               	bsf	__ccovbit1_48/(0+8),__ccovbit1_48& (0+7)	;volatile
  5561  05CE  19FB               	btfsc	_ff+2,3
  5562  05CF  2DD1               	goto	u261
  5563  05D0  2DD2               	goto	u260
  5564  05D1                     u261:
  5565  05D1  2DD8               	goto	l336
  5566  05D2                     __ccov135_end_blk1:
  5567  05D2                     u260:
  5568  05D2                     __ccov136_start_blk2:
  5569  05D2                     l338:
  5570  05D2  0020               	movlb	0	; select bank0
  5571  05D3  16B0               	bsf	__ccovbit2_49/(0+8),__ccovbit2_49& (0+7)	;volatile
  5572  05D4  1C79               	btfss	_ff,0
  5573  05D5  2DD7               	goto	u271
  5574  05D6  2DD8               	goto	u270
  5575  05D7                     u271:
  5576  05D7  2DDD               	goto	l339
  5577  05D8                     __ccov136_end_blk2:
  5578  05D8                     u270:
  5579  05D8                     __ccov137_start_blk3:
  5580  05D8                     l336:
  5581  05D8  1630               	bsf	__ccovbit3_50/(0+8),__ccovbit3_50& (0+7)	;volatile
  5582                           
  5583                           ;main.c: 220:         ff.bits.OPENED = 0;
  5584  05D9  117A               	bcf	_ff+1,2
  5585                           
  5586                           ;main.c: 221:         ff.bits.CLOSED = 1;
  5587  05DA  167A               	bsf	_ff+1,4
  5588                           
  5589                           ;main.c: 223:         ff.bits.RELE_CONTROL_ON = 0;
  5590  05DB  137A               	bcf	_ff+1,6
  5591                           
  5592                           ;main.c: 224:         ff.bits.RELE_POWER_ON = 1;
  5593  05DC  16FA               	bsf	_ff+1,5
  5594  05DD                     __ccov137_end_blk3:
  5595  05DD                     __ccov138_start_blk5:
  5596  05DD                     l339:
  5597  05DD  15B0               	bsf	__ccovbit5_51/(0+8),__ccovbit5_51& (0+7)	;volatile
  5598  05DE  0008               	return
  5599  05DF                     __end_of_go_close_alt:
  5600  05DF                     
  5601                           	psect	text29
  5602  03EE                     __ptext29:	
  5603 ;; *************** function _go_close *****************
  5604 ;; Defined at:
  5605 ;;		line 160 in file "main.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;		None
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;		None
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      void 
  5612 ;; Registers used:
  5613 ;;		wreg
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5619 ;;      Params:         0       0       0       0
  5620 ;;      Locals:         0       0       0       0
  5621 ;;      Temps:          0       0       0       0
  5622 ;;      Totals:         0       0       0       0
  5623 ;;Total ram usage:        0 bytes
  5624 ;; Hardware stack levels used: 1
  5625 ;; Hardware stack levels required when called: 7
  5626 ;; This function calls:
  5627 ;;		Nothing
  5628 ;; This function is called by:
  5629 ;;		_close
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633  03EE                     _go_close:	
  5634                           ;psect for function _go_close
  5635                           
  5636                           
  5637                           ;incstack = 0
  5638                           ; Regs used in _go_close: [wreg]
  5639  03EE                     l2048:
  5640                           
  5641                           ;main.c: 162:     if (!ff.bits.CLOSING && !ff.bits.CLOSED && ff.bits.MOVING_ALLOWED) {
  5642  03EE  19FA               	btfsc	_ff+1,3
  5643  03EF  2BF1               	goto	u1581
  5644  03F0  2BF2               	goto	u1580
  5645  03F1                     u1581:
  5646  03F1  2C15               	goto	l323
  5647  03F2                     __ccov115_end_blk0:
  5648  03F2                     u1580:
  5649  03F2                     __ccov116_start_blk1:
  5650  03F2                     l2050:
  5651  03F2  0020               	movlb	0	; select bank0
  5652  03F3  1532               	bsf	__ccovbit1_36/(0+8),__ccovbit1_36& (0+7)	;volatile
  5653  03F4  1A7A               	btfsc	_ff+1,4
  5654  03F5  2BF7               	goto	u1591
  5655  03F6  2BF8               	goto	u1590
  5656  03F7                     u1591:
  5657  03F7  2C15               	goto	l323
  5658  03F8                     __ccov116_end_blk1:
  5659  03F8                     u1590:
  5660  03F8                     __ccov117_start_blk2:
  5661  03F8                     l2052:
  5662  03F8  14B2               	bsf	__ccovbit2_37/(0+8),__ccovbit2_37& (0+7)	;volatile
  5663  03F9  1DFB               	btfss	_ff+2,3
  5664  03FA  2BFC               	goto	u1601
  5665  03FB  2BFD               	goto	u1600
  5666  03FC                     u1601:
  5667  03FC  2C15               	goto	l323
  5668  03FD                     __ccov117_end_blk2:
  5669  03FD                     u1600:
  5670  03FD                     __ccov118_start_blk3:
  5671  03FD                     l2054:
  5672                           
  5673                           ;main.c: 163:         ff.bits.CLOSING = 1;
  5674  03FD  15FA               	bsf	_ff+1,3
  5675                           
  5676                           ;main.c: 164:         ff.bits.OPENED = 0;
  5677  03FE  117A               	bcf	_ff+1,2
  5678                           
  5679                           ;main.c: 165:         ff.bits.OPENING = 0;
  5680  03FF  10FA               	bcf	_ff+1,1
  5681                           
  5682                           ;main.c: 167:         ff.bits.RELE_POWER_ON = 0;
  5683  0400  12FA               	bcf	_ff+1,5
  5684                           
  5685                           ;main.c: 168:         ff.bits.RELE_CONTROL_ON = 1;
  5686  0401  177A               	bsf	_ff+1,6
  5687  0402                     __ccov118_end_blk3:
  5688  0402                     __ccov119_start_blk4:
  5689  0402                     l2056:
  5690  0402  1432               	bsf	__ccovbit4_38/(0+8),__ccovbit4_38& (0+7)	;volatile
  5691                           
  5692                           ;main.c: 170:         time_rele_control = RELE_GAP + RELE_POWER_WORK_DELAY + RELE_GAP;
  5693  0403  307C               	movlw	124
  5694  0404  00C3               	movwf	_time_rele_control
  5695  0405  3000               	movlw	0
  5696  0406  00C4               	movwf	_time_rele_control+1
  5697                           
  5698                           ;main.c: 171:         time_rele_power = RELE_POWER_WORK_DELAY;
  5699  0407  3078               	movlw	120
  5700  0408  00C5               	movwf	_time_rele_power
  5701  0409  3000               	movlw	0
  5702  040A  00C6               	movwf	_time_rele_power+1
  5703                           
  5704                           ;main.c: 172:         time_rele_gap = RELE_GAP;
  5705  040B  3002               	movlw	2
  5706  040C  00C1               	movwf	_time_rele_gap
  5707  040D  3000               	movlw	0
  5708  040E  00C2               	movwf	_time_rele_gap+1
  5709                           
  5710                           ;main.c: 174:         time_rotation = 0;
  5711  040F  3000               	movlw	0
  5712  0410  00B4               	movwf	_time_rotation
  5713  0411  3000               	movlw	0
  5714  0412  00B5               	movwf	_time_rotation+1
  5715  0413  3000               	movlw	0
  5716  0414  00B6               	movwf	_time_rotation+2
  5717  0415                     __ccov119_end_blk4:
  5718  0415                     __ccov120_start_blk6:
  5719  0415                     l323:
  5720  0415  0020               	movlb	0	; select bank0
  5721  0416  17B1               	bsf	__ccovbit6_39/(0+8),__ccovbit6_39& (0+7)	;volatile
  5722  0417  0008               	return
  5723  0418                     __end_of_go_close:
  5724  0418                     
  5725                           	psect	text30
  5726  00CC                     __ptext30:	
  5727 ;; *************** function _autorotation_work *****************
  5728 ;; Defined at:
  5729 ;;		line 378 in file "main.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;		None
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;		None
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  1    wreg      void 
  5736 ;; Registers used:
  5737 ;;		wreg, status,2, status,0, pclath, cstack
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5743 ;;      Params:         0       0       0       0
  5744 ;;      Locals:         0       0       0       0
  5745 ;;      Temps:          1       0       0       0
  5746 ;;      Totals:         1       0       0       0
  5747 ;;Total ram usage:        1 bytes
  5748 ;; Hardware stack levels used: 1
  5749 ;; Hardware stack levels required when called: 8
  5750 ;; This function calls:
  5751 ;;		_go_close_short
  5752 ;;		_go_open
  5753 ;; This function is called by:
  5754 ;;		_main
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757                           
  5758  00CC                     _autorotation_work:	
  5759                           ;psect for function _autorotation_work
  5760                           
  5761                           
  5762                           ;incstack = 0
  5763                           ; Regs used in _autorotation_work: [wreg+status,2+status,0+pclath+cstack]
  5764  00CC                     l2314:
  5765                           
  5766                           ;main.c: 379:     if ((time_rotation > AUTOROTATION_DELAY) &&
  5767  00CC  3000               	movlw	0
  5768  00CD  0020               	movlb	0	; select bank0
  5769  00CE  0236               	subwf	_time_rotation+2,w
  5770  00CF  1D03               	skipz
  5771  00D0  28D7               	goto	u2255
  5772  00D1  3075               	movlw	117
  5773  00D2  0235               	subwf	_time_rotation+1,w
  5774  00D3  1D03               	skipz
  5775  00D4  28D7               	goto	u2255
  5776  00D5  3001               	movlw	1
  5777  00D6  0234               	subwf	_time_rotation,w
  5778  00D7                     u2255:
  5779  00D7  1C03               	skipc
  5780  00D8  28DA               	goto	u2251
  5781  00D9  28DB               	goto	u2250
  5782  00DA                     u2251:
  5783  00DA  2901               	goto	l2332
  5784  00DB                     __ccov214_end_blk0:
  5785  00DB                     u2250:
  5786  00DB                     __ccov215_start_blk1:
  5787  00DB                     l2316:
  5788  00DB  152A               	bsf	__ccovbit1_100/(0+8),__ccovbit1_100& (0+7)	;volatile
  5789  00DC  1A7A               	btfsc	_ff+1,4
  5790  00DD  28DF               	goto	u2261
  5791  00DE  28E0               	goto	u2260
  5792  00DF                     u2261:
  5793  00DF  2901               	goto	l2332
  5794  00E0                     __ccov215_end_blk1:
  5795  00E0                     u2260:
  5796  00E0                     __ccov216_start_blk2:
  5797  00E0                     l2318:
  5798  00E0  14AA               	bsf	__ccovbit2_101/(0+8),__ccovbit2_101& (0+7)	;volatile
  5799  00E1  19FA               	btfsc	_ff+1,3
  5800  00E2  28E4               	goto	u2271
  5801  00E3  28E5               	goto	u2270
  5802  00E4                     u2271:
  5803  00E4  2901               	goto	l2332
  5804  00E5                     __ccov216_end_blk2:
  5805  00E5                     u2270:
  5806  00E5                     __ccov217_start_blk3:
  5807  00E5                     l2320:
  5808  00E5  142A               	bsf	__ccovbit3_102/(0+8),__ccovbit3_102& (0+7)	;volatile
  5809  00E6  1CF9               	btfss	_ff,1
  5810  00E7  28E9               	goto	u2281
  5811  00E8  28EA               	goto	u2280
  5812  00E9                     u2281:
  5813  00E9  2901               	goto	l2332
  5814  00EA                     __ccov217_end_blk3:
  5815  00EA                     u2280:
  5816  00EA                     __ccov218_start_blk4:
  5817  00EA                     l2322:
  5818  00EA  17A9               	bsf	__ccovbit4_103/(0+8),__ccovbit4_103& (0+7)	;volatile
  5819  00EB  1DFB               	btfss	_ff+2,3
  5820  00EC  28EE               	goto	u2291
  5821  00ED  28EF               	goto	u2290
  5822  00EE                     u2291:
  5823  00EE  2901               	goto	l2332
  5824  00EF                     __ccov218_end_blk4:
  5825  00EF                     u2290:
  5826  00EF                     __ccov219_start_blk5:
  5827  00EF                     l2324:
  5828  00EF  1729               	bsf	__ccovbit5_104/(0+8),__ccovbit5_104& (0+7)	;volatile
  5829  00F0  1E7B               	btfss	_ff+2,4
  5830  00F1  28F3               	goto	u2301
  5831  00F2  28F4               	goto	u2300
  5832  00F3                     u2301:
  5833  00F3  2901               	goto	l2332
  5834  00F4                     __ccov219_end_blk5:
  5835  00F4                     u2300:
  5836  00F4                     __ccov220_start_blk6:
  5837  00F4                     l2326:
  5838                           
  5839                           ;main.c: 385:             ) {;main.c: 386:               go_close_short();
  5840  00F4  3184  2418  3180   	fcall	_go_close_short
  5841  00F7                     __ccov220_end_blk6:
  5842  00F7                     __ccov221_start_blk7:
  5843  00F7                     l2328:
  5844                           
  5845                           ;main.c: 387:               beep_short_count=3;
  5846  00F7  3003               	movlw	3
  5847  00F8  00F5               	movwf	??_autorotation_work
  5848  00F9  0875               	movf	??_autorotation_work,w
  5849  00FA  00FD               	movwf	_beep_short_count
  5850  00FB                     __ccov221_end_blk7:
  5851  00FB                     __ccov222_start_blk8:
  5852  00FB                     l2330:
  5853  00FB  0020               	movlb	0	; select bank0
  5854  00FC  16A9               	bsf	__ccovbit8_105/(0+8),__ccovbit8_105& (0+7)	;volatile
  5855                           
  5856                           ;main.c: 388:               beep_long_count=3;
  5857  00FD  3003               	movlw	3
  5858  00FE  00F5               	movwf	??_autorotation_work
  5859  00FF  0875               	movf	??_autorotation_work,w
  5860  0100  00CE               	movwf	_beep_long_count
  5861  0101                     __ccov222_end_blk8:
  5862  0101                     __ccov223_start_blk10:
  5863  0101                     l2332:
  5864                           
  5865                           ;main.c: 391:     if ((time_rotation > (AUTOROTATION_DELAY + RELE_POWER_AUTOROTATION_DEL
      +                          AY + RELE_GAP * 2)) &&
  5866  0101  3000               	movlw	0
  5867  0102  0236               	subwf	_time_rotation+2,w
  5868  0103  1D03               	skipz
  5869  0104  290B               	goto	u2315
  5870  0105  3075               	movlw	117
  5871  0106  0235               	subwf	_time_rotation+1,w
  5872  0107  1D03               	skipz
  5873  0108  290B               	goto	u2315
  5874  0109  3014               	movlw	20
  5875  010A  0234               	subwf	_time_rotation,w
  5876  010B                     u2315:
  5877  010B  1C03               	skipc
  5878  010C  290E               	goto	u2311
  5879  010D  290F               	goto	u2310
  5880  010E                     u2311:
  5881  010E  2933               	goto	l402
  5882  010F                     __ccov223_end_blk10:
  5883  010F                     u2310:
  5884  010F                     __ccov224_start_blk11:
  5885  010F                     l2334:
  5886  010F  1629               	bsf	__ccovbit11_106/(0+8),__ccovbit11_106& (0+7)	;volatile
  5887  0110  1E7A               	btfss	_ff+1,4
  5888  0111  2913               	goto	u2321
  5889  0112  2914               	goto	u2320
  5890  0113                     u2321:
  5891  0113  2933               	goto	l402
  5892  0114                     __ccov224_end_blk11:
  5893  0114                     u2320:
  5894  0114                     __ccov225_start_blk12:
  5895  0114                     l2336:
  5896  0114  15A9               	bsf	__ccovbit12_107/(0+8),__ccovbit12_107& (0+7)	;volatile
  5897  0115  1DFA               	btfss	_ff+1,3
  5898  0116  2918               	goto	u2331
  5899  0117  2919               	goto	u2330
  5900  0118                     u2331:
  5901  0118  2933               	goto	l402
  5902  0119                     __ccov225_end_blk12:
  5903  0119                     u2330:
  5904  0119                     __ccov226_start_blk13:
  5905  0119                     l2338:
  5906  0119  1529               	bsf	__ccovbit13_108/(0+8),__ccovbit13_108& (0+7)	;volatile
  5907  011A  1CF9               	btfss	_ff,1
  5908  011B  291D               	goto	u2341
  5909  011C  291E               	goto	u2340
  5910  011D                     u2341:
  5911  011D  2933               	goto	l402
  5912  011E                     __ccov226_end_blk13:
  5913  011E                     u2340:
  5914  011E                     __ccov227_start_blk14:
  5915  011E                     l2340:
  5916  011E  14A9               	bsf	__ccovbit14_109/(0+8),__ccovbit14_109& (0+7)	;volatile
  5917  011F  1DFB               	btfss	_ff+2,3
  5918  0120  2922               	goto	u2351
  5919  0121  2923               	goto	u2350
  5920  0122                     u2351:
  5921  0122  2933               	goto	l402
  5922  0123                     __ccov227_end_blk14:
  5923  0123                     u2350:
  5924  0123                     __ccov228_start_blk15:
  5925  0123                     l2342:
  5926  0123  1429               	bsf	__ccovbit15_110/(0+8),__ccovbit15_110& (0+7)	;volatile
  5927  0124  1E7B               	btfss	_ff+2,4
  5928  0125  2927               	goto	u2361
  5929  0126  2928               	goto	u2360
  5930  0127                     u2361:
  5931  0127  2933               	goto	l402
  5932  0128                     __ccov228_end_blk15:
  5933  0128                     u2360:
  5934  0128                     __ccov229_start_blk16:
  5935  0128                     l2344:
  5936                           
  5937                           ;main.c: 397:             ) {;main.c: 398:         go_open();
  5938  0128  3184  24D2  3180   	fcall	_go_open
  5939  012B                     __ccov229_end_blk16:
  5940  012B                     __ccov230_start_blk17:
  5941  012B                     l2346:
  5942  012B  0020               	movlb	0	; select bank0
  5943  012C  17A8               	bsf	__ccovbit17_111/(0+8),__ccovbit17_111& (0+7)	;volatile
  5944                           
  5945                           ;main.c: 399:         time_rotation = 0;
  5946  012D  3000               	movlw	0
  5947  012E  00B4               	movwf	_time_rotation
  5948  012F  3000               	movlw	0
  5949  0130  00B5               	movwf	_time_rotation+1
  5950  0131  3000               	movlw	0
  5951  0132  00B6               	movwf	_time_rotation+2
  5952  0133                     __ccov230_end_blk17:
  5953  0133                     __ccov231_start_blk19:
  5954  0133                     l402:
  5955  0133  1728               	bsf	__ccovbit19_112/(0+8),__ccovbit19_112& (0+7)	;volatile
  5956  0134  0008               	return
  5957  0135                     __end_of_autorotation_work:
  5958  0135                     
  5959                           	psect	text31
  5960  04D2                     __ptext31:	
  5961 ;; *************** function _go_open *****************
  5962 ;; Defined at:
  5963 ;;		line 199 in file "main.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;		None
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;		None
  5968 ;; Return value:  Size  Location     Type
  5969 ;;                  1    wreg      void 
  5970 ;; Registers used:
  5971 ;;		wreg
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5977 ;;      Params:         0       0       0       0
  5978 ;;      Locals:         0       0       0       0
  5979 ;;      Temps:          0       0       0       0
  5980 ;;      Totals:         0       0       0       0
  5981 ;;Total ram usage:        0 bytes
  5982 ;; Hardware stack levels used: 1
  5983 ;; Hardware stack levels required when called: 7
  5984 ;; This function calls:
  5985 ;;		Nothing
  5986 ;; This function is called by:
  5987 ;;		_open
  5988 ;;		_autorotation_work
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992  04D2                     _go_open:	
  5993                           ;psect for function _go_open
  5994                           
  5995                           
  5996                           ;incstack = 0
  5997                           ; Regs used in _go_open: [wreg]
  5998  04D2                     l2058:
  5999                           
  6000                           ;main.c: 201:     if (!ff.bits.OPENED && !ff.bits.OPENING && ff.bits.MOVING_ALLOWED) {
  6001  04D2  197A               	btfsc	_ff+1,2
  6002  04D3  2CD5               	goto	u1611
  6003  04D4  2CD6               	goto	u1610
  6004  04D5                     u1611:
  6005  04D5  2CEC               	goto	l331
  6006  04D6                     __ccov127_end_blk0:
  6007  04D6                     u1610:
  6008  04D6                     __ccov128_start_blk1:
  6009  04D6                     l2060:
  6010  04D6  0020               	movlb	0	; select bank0
  6011  04D7  1531               	bsf	__ccovbit1_44/(0+8),__ccovbit1_44& (0+7)	;volatile
  6012  04D8  18FA               	btfsc	_ff+1,1
  6013  04D9  2CDB               	goto	u1621
  6014  04DA  2CDC               	goto	u1620
  6015  04DB                     u1621:
  6016  04DB  2CEC               	goto	l331
  6017  04DC                     __ccov128_end_blk1:
  6018  04DC                     u1620:
  6019  04DC                     __ccov129_start_blk2:
  6020  04DC                     l2062:
  6021  04DC  14B1               	bsf	__ccovbit2_45/(0+8),__ccovbit2_45& (0+7)	;volatile
  6022  04DD  1DFB               	btfss	_ff+2,3
  6023  04DE  2CE0               	goto	u1631
  6024  04DF  2CE1               	goto	u1630
  6025  04E0                     u1631:
  6026  04E0  2CEC               	goto	l331
  6027  04E1                     __ccov129_end_blk2:
  6028  04E1                     u1630:
  6029  04E1                     __ccov130_start_blk3:
  6030  04E1                     l2064:
  6031                           
  6032                           ;main.c: 202:         ff.bits.OPENING = 1;
  6033  04E1  14FA               	bsf	_ff+1,1
  6034                           
  6035                           ;main.c: 203:         ff.bits.CLOSED = 0;
  6036  04E2  127A               	bcf	_ff+1,4
  6037                           
  6038                           ;main.c: 204:         ff.bits.CLOSING = 0;
  6039  04E3  11FA               	bcf	_ff+1,3
  6040                           
  6041                           ;main.c: 207:         ff.bits.RELE_CONTROL_ON = 0;
  6042  04E4  137A               	bcf	_ff+1,6
  6043                           
  6044                           ;main.c: 208:         ff.bits.RELE_POWER_ON = 1;
  6045  04E5  16FA               	bsf	_ff+1,5
  6046  04E6                     __ccov130_end_blk3:
  6047  04E6                     __ccov131_start_blk4:
  6048  04E6                     l2066:
  6049                           
  6050                           ;main.c: 210:         time_rele_power = RELE_POWER_WORK_DELAY;
  6051  04E6  3078               	movlw	120
  6052  04E7  00C5               	movwf	_time_rele_power
  6053  04E8  3000               	movlw	0
  6054  04E9  00C6               	movwf	_time_rele_power+1
  6055  04EA                     __ccov131_end_blk4:
  6056  04EA                     __ccov132_start_blk5:
  6057  04EA                     l2068:
  6058  04EA  1431               	bsf	__ccovbit5_46/(0+8),__ccovbit5_46& (0+7)	;volatile
  6059                           
  6060                           ;main.c: 212:         ff.bits.AUTOROTATION_WORK = 0;
  6061  04EB  107C               	bcf	_ff+3,0
  6062  04EC                     __ccov132_end_blk5:
  6063  04EC                     __ccov133_start_blk8:
  6064  04EC                     l331:
  6065  04EC  0020               	movlb	0	; select bank0
  6066  04ED  17B0               	bsf	__ccovbit8_47/(0+8),__ccovbit8_47& (0+7)	;volatile
  6067  04EE  0008               	return
  6068  04EF                     __end_of_go_open:
  6069  04EF                     
  6070                           	psect	text32
  6071  0418                     __ptext32:	
  6072 ;; *************** function _go_close_short *****************
  6073 ;; Defined at:
  6074 ;;		line 179 in file "main.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;		None
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;		None
  6079 ;; Return value:  Size  Location     Type
  6080 ;;                  1    wreg      void 
  6081 ;; Registers used:
  6082 ;;		wreg
  6083 ;; Tracked objects:
  6084 ;;		On entry : 0/0
  6085 ;;		On exit  : 0/0
  6086 ;;		Unchanged: 0/0
  6087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6088 ;;      Params:         0       0       0       0
  6089 ;;      Locals:         0       0       0       0
  6090 ;;      Temps:          0       0       0       0
  6091 ;;      Totals:         0       0       0       0
  6092 ;;Total ram usage:        0 bytes
  6093 ;; Hardware stack levels used: 1
  6094 ;; Hardware stack levels required when called: 7
  6095 ;; This function calls:
  6096 ;;		Nothing
  6097 ;; This function is called by:
  6098 ;;		_autorotation_work
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102  0418                     _go_close_short:	
  6103                           ;psect for function _go_close_short
  6104                           
  6105                           
  6106                           ;incstack = 0
  6107                           ; Regs used in _go_close_short: [wreg]
  6108  0418                     l2182:
  6109                           
  6110                           ;main.c: 181:     if (!ff.bits.CLOSING && !ff.bits.CLOSED && ff.bits.MOVING_ALLOWED) {
  6111  0418  19FA               	btfsc	_ff+1,3
  6112  0419  2C1B               	goto	u1921
  6113  041A  2C1C               	goto	u1920
  6114  041B                     u1921:
  6115  041B  2C3F               	goto	l327
  6116  041C                     __ccov121_end_blk0:
  6117  041C                     u1920:
  6118  041C                     __ccov122_start_blk1:
  6119  041C                     l2184:
  6120  041C  0020               	movlb	0	; select bank0
  6121  041D  1731               	bsf	__ccovbit1_40/(0+8),__ccovbit1_40& (0+7)	;volatile
  6122  041E  1A7A               	btfsc	_ff+1,4
  6123  041F  2C21               	goto	u1931
  6124  0420  2C22               	goto	u1930
  6125  0421                     u1931:
  6126  0421  2C3F               	goto	l327
  6127  0422                     __ccov122_end_blk1:
  6128  0422                     u1930:
  6129  0422                     __ccov123_start_blk2:
  6130  0422                     l2186:
  6131  0422  16B1               	bsf	__ccovbit2_41/(0+8),__ccovbit2_41& (0+7)	;volatile
  6132  0423  1DFB               	btfss	_ff+2,3
  6133  0424  2C26               	goto	u1941
  6134  0425  2C27               	goto	u1940
  6135  0426                     u1941:
  6136  0426  2C3F               	goto	l327
  6137  0427                     __ccov123_end_blk2:
  6138  0427                     u1940:
  6139  0427                     __ccov124_start_blk3:
  6140  0427                     l2188:
  6141                           
  6142                           ;main.c: 182:         ff.bits.CLOSING = 1;
  6143  0427  15FA               	bsf	_ff+1,3
  6144                           
  6145                           ;main.c: 183:         ff.bits.OPENED = 0;
  6146  0428  117A               	bcf	_ff+1,2
  6147                           
  6148                           ;main.c: 184:         ff.bits.OPENING = 0;
  6149  0429  10FA               	bcf	_ff+1,1
  6150                           
  6151                           ;main.c: 186:         ff.bits.RELE_POWER_ON = 0;
  6152  042A  12FA               	bcf	_ff+1,5
  6153                           
  6154                           ;main.c: 187:         ff.bits.RELE_CONTROL_ON = 1;
  6155  042B  177A               	bsf	_ff+1,6
  6156  042C                     __ccov124_end_blk3:
  6157  042C                     __ccov125_start_blk4:
  6158  042C                     l2190:
  6159  042C  1631               	bsf	__ccovbit4_42/(0+8),__ccovbit4_42& (0+7)	;volatile
  6160                           
  6161                           ;main.c: 189:         time_rele_control = RELE_GAP + RELE_POWER_AUTOROTATION_DELAY + REL
      +                          E_GAP;
  6162  042D  3013               	movlw	19
  6163  042E  00C3               	movwf	_time_rele_control
  6164  042F  3000               	movlw	0
  6165  0430  00C4               	movwf	_time_rele_control+1
  6166                           
  6167                           ;main.c: 190:         time_rele_power = RELE_POWER_AUTOROTATION_DELAY;
  6168  0431  300F               	movlw	15
  6169  0432  00C5               	movwf	_time_rele_power
  6170  0433  3000               	movlw	0
  6171  0434  00C6               	movwf	_time_rele_power+1
  6172                           
  6173                           ;main.c: 191:         time_rele_gap = RELE_GAP;
  6174  0435  3002               	movlw	2
  6175  0436  00C1               	movwf	_time_rele_gap
  6176  0437  3000               	movlw	0
  6177  0438  00C2               	movwf	_time_rele_gap+1
  6178                           
  6179                           ;main.c: 193:         time_rotation = 0;
  6180  0439  3000               	movlw	0
  6181  043A  00B4               	movwf	_time_rotation
  6182  043B  3000               	movlw	0
  6183  043C  00B5               	movwf	_time_rotation+1
  6184  043D  3000               	movlw	0
  6185  043E  00B6               	movwf	_time_rotation+2
  6186  043F                     __ccov125_end_blk4:
  6187  043F                     __ccov126_start_blk6:
  6188  043F                     l327:
  6189  043F  0020               	movlb	0	; select bank0
  6190  0440  15B1               	bsf	__ccovbit6_43/(0+8),__ccovbit6_43& (0+7)	;volatile
  6191  0441  0008               	return
  6192  0442                     __end_of_go_close_short:
  6193  0442                     
  6194                           	psect	intentry
  6195  0004                     __pintentry:	
  6196 ;; *************** function _INTERRUPT_InterruptManager *****************
  6197 ;; Defined at:
  6198 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;		None
  6201 ;; Auto vars:     Size  Location     Type
  6202 ;;		None
  6203 ;; Return value:  Size  Location     Type
  6204 ;;                  1    wreg      void 
  6205 ;; Registers used:
  6206 ;;		wreg, status,2, status,0, pclath, cstack
  6207 ;; Tracked objects:
  6208 ;;		On entry : 0/0
  6209 ;;		On exit  : 0/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6212 ;;      Params:         0       0       0       0
  6213 ;;      Locals:         0       0       0       0
  6214 ;;      Temps:          0       0       0       0
  6215 ;;      Totals:         0       0       0       0
  6216 ;;Total ram usage:        0 bytes
  6217 ;; Hardware stack levels used: 1
  6218 ;; Hardware stack levels required when called: 6
  6219 ;; This function calls:
  6220 ;;		_TMR0_ISR
  6221 ;;		_TMR2_ISR
  6222 ;; This function is called by:
  6223 ;;		Interrupt level 1
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227  0004                     _INTERRUPT_InterruptManager:
  6228                           
  6229                           ;incstack = 0
  6230  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6231                           
  6232                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  6233  0005  3180               	pagesel	$
  6234  0006                     i1l2490:
  6235                           
  6236                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  6237  0006  1E8B               	btfss	11,5	;volatile
  6238  0007  2809               	goto	u250_21
  6239  0008  280A               	goto	u250_20
  6240  0009                     u250_21:
  6241  0009  2814               	goto	i1l110
  6242  000A                     u250_20:
  6243  000A                     __ccov39_end_blk0:
  6244  000A                     __ccov40_start_blk1:
  6245  000A                     i1l2492:
  6246  000A  1472               	bsf	__ccovbit1_7/(0+8),__ccovbit1_7& (0+7)	;volatile
  6247  000B  1D0B               	btfss	11,2	;volatile
  6248  000C  280E               	goto	u251_21
  6249  000D  280F               	goto	u251_20
  6250  000E                     u251_21:
  6251  000E  2814               	goto	i1l110
  6252  000F                     u251_20:
  6253  000F                     __ccov40_end_blk1:
  6254  000F                     __ccov41_start_blk2:
  6255  000F                     i1l2494:
  6256  000F  17F1               	bsf	__ccovbit2_8/(0+8),__ccovbit2_8& (0+7)	;volatile
  6257                           
  6258                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  6259  0010  3186  262A  3180   	fcall	_TMR0_ISR
  6260                           
  6261                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  6262  0013  282A               	goto	i1l116
  6263  0014                     __ccov41_end_blk2:
  6264  0014                     __ccov42_start_blk3:
  6265  0014                     i1l110:	
  6266                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  6267                           
  6268  0014  1771               	bsf	__ccovbit3_9/(0+8),__ccovbit3_9& (0+7)	;volatile
  6269  0015  1F0B               	btfss	11,6	;volatile
  6270  0016  2818               	goto	u252_21
  6271  0017  2819               	goto	u252_20
  6272  0018                     u252_21:
  6273  0018  282A               	goto	i1l116
  6274  0019                     u252_20:
  6275  0019                     __ccov42_end_blk3:
  6276  0019                     __ccov43_start_blk4:
  6277  0019                     i1l2496:
  6278                           
  6279                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  6280  0019  0021               	movlb	1	; select bank1
  6281  001A  1C91               	btfss	17,1	;volatile
  6282  001B  281D               	goto	u253_21
  6283  001C  281E               	goto	u253_20
  6284  001D                     u253_21:
  6285  001D  2829               	goto	i1l115
  6286  001E                     u253_20:
  6287  001E                     __ccov43_end_blk4:
  6288  001E                     __ccov44_start_blk5:
  6289  001E                     i1l2498:
  6290  001E  16F1               	bsf	__ccovbit5_10/(0+8),__ccovbit5_10& (0+7)	;volatile
  6291  001F  0020               	movlb	0	; select bank0
  6292  0020  1C91               	btfss	17,1	;volatile
  6293  0021  2823               	goto	u254_21
  6294  0022  2824               	goto	u254_20
  6295  0023                     u254_21:
  6296  0023  2829               	goto	i1l115
  6297  0024                     u254_20:
  6298  0024                     __ccov44_end_blk5:
  6299  0024                     __ccov45_start_blk6:
  6300  0024                     i1l2500:
  6301  0024  1671               	bsf	__ccovbit6_11/(0+8),__ccovbit6_11& (0+7)	;volatile
  6302                           
  6303                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
  6304  0025  3186  263C  3180   	fcall	_TMR2_ISR
  6305                           
  6306                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  6307  0028  282A               	goto	i1l116
  6308  0029                     __ccov45_end_blk6:
  6309  0029                     __ccov46_start_blk10:
  6310  0029                     i1l115:	
  6311                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  6312                           
  6313  0029  15F1               	bsf	__ccovbit10_12/(0+8),__ccovbit10_12& (0+7)	;volatile
  6314  002A                     __ccov46_end_blk10:
  6315  002A                     __ccov47_start_blk12:
  6316  002A                     i1l116:
  6317  002A  1571               	bsf	__ccovbit12_13/(0+8),__ccovbit12_13& (0+7)	;volatile
  6318  002B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6319  002C  0009               	retfie
  6320  002D                     __end_of_INTERRUPT_InterruptManager:
  6321  002D                     
  6322                           	psect	text34
  6323  063C                     __ptext34:	
  6324 ;; *************** function _TMR2_ISR *****************
  6325 ;; Defined at:
  6326 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;		None
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;		None
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  1    wreg      void 
  6333 ;; Registers used:
  6334 ;;		wreg, status,2, status,0, pclath, cstack
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6340 ;;      Params:         0       0       0       0
  6341 ;;      Locals:         0       0       0       0
  6342 ;;      Temps:          0       0       0       0
  6343 ;;      Totals:         0       0       0       0
  6344 ;;Total ram usage:        0 bytes
  6345 ;; Hardware stack levels used: 1
  6346 ;; Hardware stack levels required when called: 5
  6347 ;; This function calls:
  6348 ;;		Absolute function
  6349 ;;		_TMR2_DefaultInterruptHandler
  6350 ;;		_ms_tick
  6351 ;; This function is called by:
  6352 ;;		_INTERRUPT_InterruptManager
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356  063C                     _TMR2_ISR:	
  6357                           ;psect for function _TMR2_ISR
  6358                           
  6359                           
  6360                           ;incstack = 0
  6361                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  6362  063C                     i1l2260:
  6363                           
  6364                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
  6365  063C  0020               	movlb	0	; select bank0
  6366  063D  1091               	bcf	17,1	;volatile
  6367  063E                     __ccov65_end_blk0:
  6368  063E                     __ccov66_start_blk1:
  6369  063E                     i1l2262:
  6370                           
  6371                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
  6372  063E  0855               	movf	_TMR2_InterruptHandler,w
  6373  063F  0456               	iorwf	_TMR2_InterruptHandler+1,w
  6374  0640  1903               	btfsc	3,2
  6375  0641  2E43               	goto	u209_21
  6376  0642  2E44               	goto	u209_20
  6377  0643                     u209_21:
  6378  0643  2E4A               	goto	i1l156
  6379  0644                     __ccov66_end_blk1:
  6380  0644                     u209_20:
  6381  0644                     __ccov67_start_blk2:
  6382  0644                     i1l2264:
  6383  0644  17F0               	bsf	__ccovbit2_16/(0+8),__ccovbit2_16& (0+7)	;volatile
  6384                           
  6385                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
  6386  0645  0856               	movf	_TMR2_InterruptHandler+1,w
  6387  0646  008A               	movwf	10
  6388  0647  0855               	movf	_TMR2_InterruptHandler,w
  6389  0648  000A               	callw
  6390  0649  3186               	pagesel	$
  6391  064A                     __ccov67_end_blk2:
  6392  064A                     __ccov68_start_blk4:
  6393  064A                     i1l156:
  6394  064A  1770               	bsf	__ccovbit4_17/(0+8),__ccovbit4_17& (0+7)	;volatile
  6395  064B  0008               	return
  6396  064C                     __end_of_TMR2_ISR:
  6397  064C                     
  6398                           	psect	text35
  6399  06D0                     __ptext35:	
  6400 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  6401 ;; Defined at:
  6402 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;		None
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;		None
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  1    wreg      void 
  6409 ;; Registers used:
  6410 ;;		None
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6416 ;;      Params:         0       0       0       0
  6417 ;;      Locals:         0       0       0       0
  6418 ;;      Temps:          0       0       0       0
  6419 ;;      Totals:         0       0       0       0
  6420 ;;Total ram usage:        0 bytes
  6421 ;; Hardware stack levels used: 1
  6422 ;; This function calls:
  6423 ;;		Nothing
  6424 ;; This function is called by:
  6425 ;;		_TMR2_Initialize
  6426 ;;		_TMR2_ISR
  6427 ;; This function uses a non-reentrant model
  6428 ;;
  6429                           
  6430  06D0                     _TMR2_DefaultInterruptHandler:	
  6431                           ;psect for function _TMR2_DefaultInterruptHandler
  6432                           
  6433                           
  6434                           ;incstack = 0
  6435                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  6436  06D0                     i1l162:
  6437  06D0  1670               	bsf	__ccovbit0_19/(0+8),__ccovbit0_19& (0+7)	;volatile
  6438  06D1  0008               	return
  6439  06D2                     __end_of_TMR2_DefaultInterruptHandler:
  6440  06D2                     
  6441                           	psect	text36
  6442  02CA                     __ptext36:	
  6443 ;; *************** function _ms_tick *****************
  6444 ;; Defined at:
  6445 ;;		line 521 in file "main.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;		None
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;		None
  6450 ;; Return value:  Size  Location     Type
  6451 ;;                  1    wreg      void 
  6452 ;; Registers used:
  6453 ;;		wreg, status,2, status,0, pclath, cstack
  6454 ;; Tracked objects:
  6455 ;;		On entry : 0/0
  6456 ;;		On exit  : 0/0
  6457 ;;		Unchanged: 0/0
  6458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6459 ;;      Params:         0       0       0       0
  6460 ;;      Locals:         0       0       0       0
  6461 ;;      Temps:          0       0       0       0
  6462 ;;      Totals:         0       0       0       0
  6463 ;;Total ram usage:        0 bytes
  6464 ;; Hardware stack levels used: 1
  6465 ;; Hardware stack levels required when called: 4
  6466 ;; This function calls:
  6467 ;;		_ms_100_work
  6468 ;;		_ms_200_work
  6469 ;;		_sec_work
  6470 ;;		_stop_tone
  6471 ;; This function is called by:
  6472 ;;		_start_setup
  6473 ;;		_TMR2_ISR
  6474 ;; This function uses a non-reentrant model
  6475 ;;
  6476                           
  6477  02CA                     _ms_tick:	
  6478                           ;psect for function _ms_tick
  6479                           
  6480                           
  6481                           ;incstack = 0
  6482                           ; Regs used in _ms_tick: [wreg+status,2+status,0+pclath+cstack]
  6483  02CA                     i1l2214:
  6484                           
  6485                           ;main.c: 522:     static unsigned ms_count = 0;;main.c: 523:     static unsigned s_count
      +                           = 0;;main.c: 524:     ms_count++;
  6486  02CA  3001               	movlw	1
  6487  02CB  0020               	movlb	0	; select bank0
  6488  02CC  07B9               	addwf	ms_tick@ms_count,f
  6489  02CD  3000               	movlw	0
  6490  02CE  3DBA               	addwfc	ms_tick@ms_count+1,f
  6491  02CF                     __ccov282_end_blk0:
  6492  02CF                     __ccov283_start_blk1:
  6493  02CF                     i1l2216:
  6494                           
  6495                           ;main.c: 525:     if (time_tone > 0) {
  6496  02CF  083F               	movf	_time_tone,w
  6497  02D0  0440               	iorwf	_time_tone+1,w
  6498  02D1  1903               	btfsc	3,2
  6499  02D2  2AD4               	goto	u201_21
  6500  02D3  2AD5               	goto	u201_20
  6501  02D4                     u201_21:
  6502  02D4  2AE4               	goto	i1l2224
  6503  02D5                     __ccov283_end_blk1:
  6504  02D5                     u201_20:
  6505  02D5                     __ccov284_start_blk2:
  6506  02D5                     i1l2218:
  6507                           
  6508                           ;main.c: 526:         time_tone--;
  6509  02D5  3001               	movlw	1
  6510  02D6  02BF               	subwf	_time_tone,f
  6511  02D7  3000               	movlw	0
  6512  02D8  3BC0               	subwfb	_time_tone+1,f
  6513  02D9                     __ccov284_end_blk2:
  6514  02D9                     __ccov285_start_blk3:
  6515  02D9                     i1l2220:
  6516  02D9  16A4               	bsf	__ccovbit3_145/(0+8),__ccovbit3_145& (0+7)	;volatile
  6517                           
  6518                           ;main.c: 527:         if (time_tone == 0) {
  6519  02DA  083F               	movf	_time_tone,w
  6520  02DB  0440               	iorwf	_time_tone+1,w
  6521  02DC  1D03               	btfss	3,2
  6522  02DD  2ADF               	goto	u202_21
  6523  02DE  2AE0               	goto	u202_20
  6524  02DF                     u202_21:
  6525  02DF  2AE4               	goto	i1l2224
  6526  02E0                     __ccov285_end_blk3:
  6527  02E0                     u202_20:
  6528  02E0                     __ccov286_start_blk4:
  6529  02E0                     i1l2222:
  6530  02E0  1624               	bsf	__ccovbit4_146/(0+8),__ccovbit4_146& (0+7)	;volatile
  6531                           
  6532                           ;main.c: 528:             stop_tone();
  6533  02E1  3186  26A7  3182   	fcall	_stop_tone
  6534  02E4                     __ccov286_end_blk4:
  6535  02E4                     __ccov287_start_blk7:
  6536  02E4                     i1l2224:
  6537                           
  6538                           ;main.c: 532:     ff.bits.ALLOW_FUN = 1;
  6539  02E4  16F9               	bsf	_ff,5
  6540  02E5                     __ccov287_end_blk7:
  6541  02E5                     __ccov288_start_blk8:
  6542  02E5                     i1l2226:
  6543                           
  6544                           ;main.c: 533:     ff.bits.ALLOW_JUMP = 1;
  6545  02E5  1779               	bsf	_ff,6
  6546  02E6                     __ccov288_end_blk8:
  6547  02E6                     __ccov289_start_blk9:
  6548  02E6                     i1l2228:
  6549                           
  6550                           ;main.c: 535:     if (ms_count == 100) {
  6551  02E6  3064               	movlw	100
  6552  02E7  0020               	movlb	0	; select bank0
  6553  02E8  0639               	xorwf	ms_tick@ms_count,w
  6554  02E9  043A               	iorwf	ms_tick@ms_count+1,w
  6555  02EA  1D03               	btfss	3,2
  6556  02EB  2AED               	goto	u203_21
  6557  02EC  2AEE               	goto	u203_20
  6558  02ED                     u203_21:
  6559  02ED  2AFC               	goto	i1l2238
  6560  02EE                     __ccov289_end_blk9:
  6561  02EE                     u203_20:
  6562  02EE                     __ccov290_start_blk10:
  6563  02EE                     i1l2230:
  6564                           
  6565                           ;main.c: 536:         ms_100_work();
  6566  02EE  3186  265C  3182   	fcall	_ms_100_work
  6567  02F1                     __ccov290_end_blk10:
  6568  02F1                     __ccov291_start_blk11:
  6569  02F1                     i1l2232:
  6570                           
  6571                           ;main.c: 537:         ms_200_work();
  6572  02F1  3182  2287  3182   	fcall	_ms_200_work
  6573                           
  6574                           ;main.c: 538:         s_count++;
  6575  02F4  3001               	movlw	1
  6576  02F5  0020               	movlb	0	; select bank0
  6577  02F6  07B7               	addwf	ms_tick@s_count,f
  6578  02F7  3000               	movlw	0
  6579  02F8  3DB8               	addwfc	ms_tick@s_count+1,f
  6580  02F9                     __ccov291_end_blk11:
  6581  02F9                     __ccov292_start_blk12:
  6582  02F9                     i1l2234:
  6583  02F9  15A4               	bsf	__ccovbit12_147/(0+8),__ccovbit12_147& (0+7)	;volatile
  6584                           
  6585                           ;main.c: 539:         ms_count = 0;
  6586  02FA  01B9               	clrf	ms_tick@ms_count
  6587  02FB  01BA               	clrf	ms_tick@ms_count+1
  6588  02FC                     __ccov292_end_blk12:
  6589  02FC                     __ccov293_start_blk16:
  6590  02FC                     i1l2238:
  6591                           
  6592                           ;main.c: 547:     if (s_count == 10) {
  6593  02FC  300A               	movlw	10
  6594  02FD  0637               	xorwf	ms_tick@s_count,w
  6595  02FE  0438               	iorwf	ms_tick@s_count+1,w
  6596  02FF  1D03               	btfss	3,2
  6597  0300  2B02               	goto	u204_21
  6598  0301  2B03               	goto	u204_20
  6599  0302                     u204_21:
  6600  0302  2B0A               	goto	i1l462
  6601  0303                     __ccov293_end_blk16:
  6602  0303                     u204_20:
  6603  0303                     __ccov294_start_blk17:
  6604  0303                     i1l2240:
  6605                           
  6606                           ;main.c: 548:         sec_work();
  6607  0303  3180  204B  3182   	fcall	_sec_work
  6608  0306                     __ccov294_end_blk17:
  6609  0306                     __ccov295_start_blk18:
  6610  0306                     i1l2242:
  6611  0306  0020               	movlb	0	; select bank0
  6612  0307  1524               	bsf	__ccovbit18_148/(0+8),__ccovbit18_148& (0+7)	;volatile
  6613                           
  6614                           ;main.c: 549:         s_count = 0;
  6615  0308  01B7               	clrf	ms_tick@s_count
  6616  0309  01B8               	clrf	ms_tick@s_count+1
  6617  030A                     __ccov295_end_blk18:
  6618  030A                     __ccov296_start_blk20:
  6619  030A                     i1l462:
  6620  030A  14A4               	bsf	__ccovbit20_149/(0+8),__ccovbit20_149& (0+7)	;volatile
  6621  030B  0008               	return
  6622  030C                     __end_of_ms_tick:
  6623  030C                     
  6624                           	psect	text37
  6625  06A7                     __ptext37:	
  6626 ;; *************** function _stop_tone *****************
  6627 ;; Defined at:
  6628 ;;		line 128 in file "main.c"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;		None
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;		None
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  1    wreg      void 
  6635 ;; Registers used:
  6636 ;;		None
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6642 ;;      Params:         0       0       0       0
  6643 ;;      Locals:         0       0       0       0
  6644 ;;      Temps:          0       0       0       0
  6645 ;;      Totals:         0       0       0       0
  6646 ;;Total ram usage:        0 bytes
  6647 ;; Hardware stack levels used: 1
  6648 ;; This function calls:
  6649 ;;		Nothing
  6650 ;; This function is called by:
  6651 ;;		_ms_tick
  6652 ;; This function uses a non-reentrant model
  6653 ;;
  6654                           
  6655  06A7                     _stop_tone:	
  6656                           ;psect for function _stop_tone
  6657                           
  6658                           
  6659                           ;incstack = 0
  6660                           ; Regs used in _stop_tone: []
  6661  06A7                     i1l2046:
  6662                           
  6663                           ;main.c: 129:     ff.bits.ZUM_BUSY = 0;
  6664  06A7  117B               	bcf	_ff+2,2
  6665                           
  6666                           ;main.c: 130:     ff.bits.TONE_ON = 0;
  6667  06A8  13FA               	bcf	_ff+1,7
  6668                           
  6669                           ;main.c: 131:     ff.bits.TONE_OFF = 1;
  6670  06A9  147B               	bsf	_ff+2,0
  6671  06AA                     __ccov95_end_blk0:
  6672  06AA                     __ccov96_start_blk1:
  6673  06AA                     i1l304:
  6674  06AA  0020               	movlb	0	; select bank0
  6675  06AB  1633               	bsf	__ccovbit1_26/(0+8),__ccovbit1_26& (0+7)	;volatile
  6676  06AC  0008               	return
  6677  06AD                     __end_of_stop_tone:
  6678  06AD                     
  6679                           	psect	text38
  6680  004B                     __ptext38:	
  6681 ;; *************** function _sec_work *****************
  6682 ;; Defined at:
  6683 ;;		line 439 in file "main.c"
  6684 ;; Parameters:    Size  Location     Type
  6685 ;;		None
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;		None
  6688 ;; Return value:  Size  Location     Type
  6689 ;;                  1    wreg      void 
  6690 ;; Registers used:
  6691 ;;		wreg, status,2, status,0, pclath, cstack
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6697 ;;      Params:         0       0       0       0
  6698 ;;      Locals:         0       0       0       0
  6699 ;;      Temps:          1       0       0       0
  6700 ;;      Totals:         1       0       0       0
  6701 ;;Total ram usage:        1 bytes
  6702 ;; Hardware stack levels used: 1
  6703 ;; Hardware stack levels required when called: 1
  6704 ;; This function calls:
  6705 ;;		_minute_tick
  6706 ;;		_rele_tick
  6707 ;;		_sec_30_work
  6708 ;; This function is called by:
  6709 ;;		_ms_tick
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713  004B                     _sec_work:	
  6714                           ;psect for function _sec_work
  6715                           
  6716                           
  6717                           ;incstack = 0
  6718                           ; Regs used in _sec_work: [wreg+status,2+status,0+pclath+cstack]
  6719  004B                     i1l2078:
  6720                           
  6721                           ;main.c: 447:     sec_count++;
  6722  004B  3001               	movlw	1
  6723  004C  00F4               	movwf	??_sec_work
  6724  004D  0874               	movf	??_sec_work,w
  6725  004E  0020               	movlb	0	; select bank0
  6726  004F  07D2               	addwf	_sec_count,f
  6727  0050                     __ccov242_end_blk0:
  6728  0050                     __ccov243_start_blk1:
  6729  0050                     i1l2080:
  6730                           
  6731                           ;main.c: 448:     if (!ff.bits.MOVING_ALLOWED) {
  6732  0050  19FB               	btfsc	_ff+2,3
  6733  0051  2853               	goto	u165_21
  6734  0052  2854               	goto	u165_20
  6735  0053                     u165_21:
  6736  0053  285F               	goto	i1l416
  6737  0054                     __ccov243_end_blk1:
  6738  0054                     u165_20:
  6739  0054                     __ccov244_start_blk2:
  6740  0054                     i1l2082:
  6741                           
  6742                           ;main.c: 449:         if (time_moving_wait > 0) {
  6743  0054  0850               	movf	_time_moving_wait,w
  6744  0055  1903               	btfsc	3,2
  6745  0056  2858               	goto	u166_21
  6746  0057  2859               	goto	u166_20
  6747  0058                     u166_21:
  6748  0058  285D               	goto	i1l417
  6749  0059                     __ccov244_end_blk2:
  6750  0059                     u166_20:
  6751  0059                     __ccov245_start_blk3:
  6752  0059                     i1l2084:
  6753  0059  1727               	bsf	__ccovbit3_120/(0+8),__ccovbit3_120& (0+7)	;volatile
  6754                           
  6755                           ;main.c: 450:             time_moving_wait--;
  6756  005A  3001               	movlw	1
  6757  005B  02D0               	subwf	_time_moving_wait,f
  6758                           
  6759                           ;main.c: 451:         } else {
  6760  005C  285F               	goto	i1l416
  6761  005D                     __ccov245_end_blk3:
  6762  005D                     __ccov246_start_blk4:
  6763  005D                     i1l417:
  6764  005D  16A7               	bsf	__ccovbit4_121/(0+8),__ccovbit4_121& (0+7)	;volatile
  6765                           
  6766                           ;main.c: 452:             ff.bits.MOVING_ALLOWED = 1;
  6767  005E  15FB               	bsf	_ff+2,3
  6768  005F                     __ccov246_end_blk4:
  6769  005F                     __ccov247_start_blk6:
  6770  005F                     i1l416:	
  6771                           ;main.c: 454:     }
  6772                           
  6773                           
  6774                           ;main.c: 455:     if (ff.bits.NORMAL_WORK_MODE_ON) {
  6775  005F  1E7B               	btfss	_ff+2,4
  6776  0060  2862               	goto	u167_21
  6777  0061  2863               	goto	u167_20
  6778  0062                     u167_21:
  6779  0062  2876               	goto	i1l2092
  6780  0063                     __ccov247_end_blk6:
  6781  0063                     u167_20:
  6782  0063                     __ccov248_start_blk7:
  6783  0063                     i1l2086:
  6784                           
  6785                           ;main.c: 456:         if (ff.bits.OPENED){
  6786  0063  1D7A               	btfss	_ff+1,2
  6787  0064  2866               	goto	u168_21
  6788  0065  2867               	goto	u168_20
  6789  0066                     u168_21:
  6790  0066  2872               	goto	i1l2090
  6791  0067                     __ccov248_end_blk7:
  6792  0067                     u168_20:
  6793  0067                     __ccov249_start_blk8:
  6794  0067                     i1l2088:
  6795  0067  1627               	bsf	__ccovbit8_122/(0+8),__ccovbit8_122& (0+7)	;volatile
  6796                           
  6797                           ;main.c: 457:             time_rotation++;
  6798  0068  3001               	movlw	1
  6799  0069  07B4               	addwf	_time_rotation,f
  6800  006A  3000               	movlw	0
  6801  006B  1803               	skipnc
  6802  006C  3001               	movlw	1
  6803  006D  07B5               	addwf	_time_rotation+1,f
  6804  006E  3000               	movlw	0
  6805  006F  1803               	skipnc
  6806  0070  3001               	movlw	1
  6807  0071  07B6               	addwf	_time_rotation+2,f
  6808  0072                     __ccov249_end_blk8:
  6809  0072                     __ccov250_start_blk10:
  6810  0072                     i1l2090:
  6811  0072  15A7               	bsf	__ccovbit10_123/(0+8),__ccovbit10_123& (0+7)	;volatile
  6812                           
  6813                           ;main.c: 459:         rele_tick();
  6814  0073  3181  2198  3180   	fcall	_rele_tick
  6815  0076                     __ccov250_end_blk10:
  6816  0076                     __ccov251_start_blk12:
  6817  0076                     i1l2092:
  6818                           
  6819                           ;main.c: 462:     if (ff.bits.ALARM_ON) {
  6820  0076  1C79               	btfss	_ff,0
  6821  0077  2879               	goto	u169_21
  6822  0078  287A               	goto	u169_20
  6823  0079                     u169_21:
  6824  0079  289D               	goto	i1l421
  6825  007A                     __ccov251_end_blk12:
  6826  007A                     u169_20:
  6827  007A                     __ccov252_start_blk13:
  6828  007A                     i1l2094:
  6829                           
  6830                           ;main.c: 464:         if (sec_count == 30|| sec_count==60) {
  6831  007A  301E               	movlw	30
  6832  007B  0020               	movlb	0	; select bank0
  6833  007C  0652               	xorwf	_sec_count,w
  6834  007D  1903               	btfsc	3,2
  6835  007E  2880               	goto	u170_21
  6836  007F  2881               	goto	u170_20
  6837  0080                     u170_21:
  6838  0080  2888               	goto	i1l2098
  6839  0081                     __ccov252_end_blk13:
  6840  0081                     u170_20:
  6841  0081                     __ccov253_start_blk14:
  6842  0081                     i1l2096:
  6843  0081  1527               	bsf	__ccovbit14_124/(0+8),__ccovbit14_124& (0+7)	;volatile
  6844  0082  303C               	movlw	60
  6845  0083  0652               	xorwf	_sec_count,w
  6846  0084  1D03               	btfss	3,2
  6847  0085  2887               	goto	u171_21
  6848  0086  2888               	goto	u171_20
  6849  0087                     u171_21:
  6850  0087  288C               	goto	i1l2100
  6851  0088                     __ccov253_end_blk14:
  6852  0088                     u171_20:
  6853  0088                     __ccov254_start_blk16:
  6854  0088                     i1l2098:
  6855  0088  14A7               	bsf	__ccovbit16_125/(0+8),__ccovbit16_125& (0+7)	;volatile
  6856                           
  6857                           ;main.c: 465:             sec_30_work();
  6858  0089  3186  264C  3180   	fcall	_sec_30_work
  6859  008C                     __ccov254_end_blk16:
  6860  008C                     __ccov255_start_blk18:
  6861  008C                     i1l2100:
  6862  008C  0020               	movlb	0	; select bank0
  6863  008D  1427               	bsf	__ccovbit18_126/(0+8),__ccovbit18_126& (0+7)	;volatile
  6864                           
  6865                           ;main.c: 468:         ff.bits.LED_ON = !ff.bits.LED_ON;
  6866  008E  1003               	clrc
  6867  008F  1F7B               	btfss	_ff+2,6
  6868  0090  1403               	setc
  6869  0091  3000               	movlw	0
  6870  0092  3D09               	addwfc	9,w
  6871  0093  00F4               	movwf	??_sec_work
  6872  0094  0EF4               	swapf	??_sec_work,f
  6873  0095  0DF4               	rlf	??_sec_work,f
  6874  0096  0DF4               	rlf	??_sec_work,f
  6875  0097  087B               	movf	_ff+2,w
  6876  0098  0674               	xorwf	??_sec_work,w
  6877  0099  39BF               	andlw	-65
  6878  009A  0674               	xorwf	??_sec_work,w
  6879  009B  00FB               	movwf	_ff+2
  6880                           
  6881                           ;main.c: 470:     } else if (ff.bits.ALARM_OFF) {
  6882  009C  28BE               	goto	i1l2110
  6883  009D                     __ccov255_end_blk18:
  6884  009D                     __ccov256_start_blk19:
  6885  009D                     i1l421:
  6886  009D  0020               	movlb	0	; select bank0
  6887  009E  17A6               	bsf	__ccovbit19_127/(0+8),__ccovbit19_127& (0+7)	;volatile
  6888  009F  1CF9               	btfss	_ff,1
  6889  00A0  28A2               	goto	u172_21
  6890  00A1  28A3               	goto	u172_20
  6891  00A2                     u172_21:
  6892  00A2  28BE               	goto	i1l2110
  6893  00A3                     __ccov256_end_blk19:
  6894  00A3                     u172_20:
  6895  00A3                     __ccov257_start_blk20:
  6896  00A3                     i1l2102:
  6897                           
  6898                           ;main.c: 472:         static char iled;;main.c: 473:         iled++;
  6899  00A3  3001               	movlw	1
  6900  00A4  00F4               	movwf	??_sec_work
  6901  00A5  0874               	movf	??_sec_work,w
  6902  00A6  07CC               	addwf	sec_work@iled,f
  6903  00A7                     __ccov257_end_blk20:
  6904  00A7                     __ccov258_start_blk21:
  6905  00A7                     i1l2104:
  6906  00A7  1726               	bsf	__ccovbit21_128/(0+8),__ccovbit21_128& (0+7)	;volatile
  6907                           
  6908                           ;main.c: 474:         if (iled > 2) {
  6909  00A8  3003               	movlw	3
  6910  00A9  024C               	subwf	sec_work@iled,w
  6911  00AA  1C03               	skipc
  6912  00AB  28AD               	goto	u173_21
  6913  00AC  28AE               	goto	u173_20
  6914  00AD                     u173_21:
  6915  00AD  28BE               	goto	i1l2110
  6916  00AE                     __ccov258_end_blk21:
  6917  00AE                     u173_20:
  6918  00AE                     __ccov259_start_blk22:
  6919  00AE                     i1l2106:
  6920                           
  6921                           ;main.c: 475:             ff.bits.LED_ON = !ff.bits.LED_ON;
  6922  00AE  1003               	clrc
  6923  00AF  1F7B               	btfss	_ff+2,6
  6924  00B0  1403               	setc
  6925  00B1  3000               	movlw	0
  6926  00B2  3D09               	addwfc	9,w
  6927  00B3  00F4               	movwf	??_sec_work
  6928  00B4  0EF4               	swapf	??_sec_work,f
  6929  00B5  0DF4               	rlf	??_sec_work,f
  6930  00B6  0DF4               	rlf	??_sec_work,f
  6931  00B7  087B               	movf	_ff+2,w
  6932  00B8  0674               	xorwf	??_sec_work,w
  6933  00B9  39BF               	andlw	-65
  6934  00BA  0674               	xorwf	??_sec_work,w
  6935  00BB  00FB               	movwf	_ff+2
  6936  00BC                     __ccov259_end_blk22:
  6937  00BC                     __ccov260_start_blk23:
  6938  00BC                     i1l2108:
  6939  00BC  16A6               	bsf	__ccovbit23_129/(0+8),__ccovbit23_129& (0+7)	;volatile
  6940                           
  6941                           ;main.c: 476:             iled = 0;
  6942  00BD  01CC               	clrf	sec_work@iled
  6943  00BE                     __ccov260_end_blk23:
  6944  00BE                     __ccov261_start_blk27:
  6945  00BE                     i1l2110:
  6946                           
  6947                           ;main.c: 482:     if (sec_count == 60) {
  6948  00BE  303C               	movlw	60
  6949  00BF  0652               	xorwf	_sec_count,w
  6950  00C0  1D03               	btfss	3,2
  6951  00C1  28C3               	goto	u174_21
  6952  00C2  28C4               	goto	u174_20
  6953  00C3                     u174_21:
  6954  00C3  28CA               	goto	i1l431
  6955  00C4                     __ccov261_end_blk27:
  6956  00C4                     u174_20:
  6957  00C4                     __ccov262_start_blk28:
  6958  00C4                     i1l2112:
  6959                           
  6960                           ;main.c: 483:         minute_tick();
  6961  00C4  3185  2554  3180   	fcall	_minute_tick
  6962  00C7                     __ccov262_end_blk28:
  6963  00C7                     __ccov263_start_blk29:
  6964  00C7                     i1l2114:
  6965  00C7  0020               	movlb	0	; select bank0
  6966  00C8  1626               	bsf	__ccovbit29_130/(0+8),__ccovbit29_130& (0+7)	;volatile
  6967                           
  6968                           ;main.c: 484:         sec_count = 0;
  6969  00C9  01D2               	clrf	_sec_count
  6970  00CA                     __ccov263_end_blk29:
  6971  00CA                     __ccov264_start_blk31:
  6972  00CA                     i1l431:
  6973  00CA  15A6               	bsf	__ccovbit31_131/(0+8),__ccovbit31_131& (0+7)	;volatile
  6974  00CB  0008               	return
  6975  00CC                     __end_of_sec_work:
  6976  00CC                     
  6977                           	psect	text39
  6978  064C                     __ptext39:	
  6979 ;; *************** function _sec_30_work *****************
  6980 ;; Defined at:
  6981 ;;		line 431 in file "main.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;		None
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;		None
  6986 ;; Return value:  Size  Location     Type
  6987 ;;                  1    wreg      void 
  6988 ;; Registers used:
  6989 ;;		wreg
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6995 ;;      Params:         0       0       0       0
  6996 ;;      Locals:         0       0       0       0
  6997 ;;      Temps:          1       0       0       0
  6998 ;;      Totals:         1       0       0       0
  6999 ;;Total ram usage:        1 bytes
  7000 ;; Hardware stack levels used: 1
  7001 ;; This function calls:
  7002 ;;		Nothing
  7003 ;; This function is called by:
  7004 ;;		_sec_work
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008  064C                     _sec_30_work:	
  7009                           ;psect for function _sec_30_work
  7010                           
  7011                           
  7012                           ;incstack = 0
  7013                           ; Regs used in _sec_30_work: [wreg]
  7014  064C                     i1l1990:
  7015                           
  7016                           ;main.c: 432:     if (ff.bits.SIREN) {
  7017  064C  1CFB               	btfss	_ff+2,1
  7018  064D  2E4F               	goto	u157_21
  7019  064E  2E50               	goto	u157_20
  7020  064F                     u157_21:
  7021  064F  2E54               	goto	i1l1994
  7022  0650                     __ccov238_end_blk0:
  7023  0650                     u157_20:
  7024  0650                     __ccov239_start_blk1:
  7025  0650                     i1l1992:
  7026  0650  0020               	movlb	0	; select bank0
  7027  0651  14A8               	bsf	__ccovbit1_117/(0+8),__ccovbit1_117& (0+7)	;volatile
  7028                           
  7029                           ;main.c: 433:         ff.bits.SIREN = 0;
  7030  0652  10FB               	bcf	_ff+2,1
  7031                           
  7032                           ;main.c: 434:     } else {
  7033  0653  2E5A               	goto	i1l413
  7034  0654                     __ccov239_end_blk1:
  7035  0654                     __ccov240_start_blk3:
  7036  0654                     i1l1994:
  7037  0654  0020               	movlb	0	; select bank0
  7038  0655  1428               	bsf	__ccovbit3_118/(0+8),__ccovbit3_118& (0+7)	;volatile
  7039                           
  7040                           ;main.c: 435:         beep_short_count = 3;
  7041  0656  3003               	movlw	3
  7042  0657  00F3               	movwf	??_sec_30_work
  7043  0658  0873               	movf	??_sec_30_work,w
  7044  0659  00FD               	movwf	_beep_short_count
  7045  065A                     __ccov240_end_blk3:
  7046  065A                     __ccov241_start_blk5:
  7047  065A                     i1l413:
  7048  065A  17A7               	bsf	__ccovbit5_119/(0+8),__ccovbit5_119& (0+7)	;volatile
  7049  065B  0008               	return
  7050  065C                     __end_of_sec_30_work:
  7051  065C                     
  7052                           	psect	text40
  7053  0198                     __ptext40:	
  7054 ;; *************** function _rele_tick *****************
  7055 ;; Defined at:
  7056 ;;		line 277 in file "main.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;		None
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;		None
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  1    wreg      void 
  7063 ;; Registers used:
  7064 ;;		wreg, status,2, status,0
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7070 ;;      Params:         0       0       0       0
  7071 ;;      Locals:         0       0       0       0
  7072 ;;      Temps:          0       0       0       0
  7073 ;;      Totals:         0       0       0       0
  7074 ;;Total ram usage:        0 bytes
  7075 ;; Hardware stack levels used: 1
  7076 ;; This function calls:
  7077 ;;		Nothing
  7078 ;; This function is called by:
  7079 ;;		_sec_work
  7080 ;; This function uses a non-reentrant model
  7081 ;;
  7082                           
  7083  0198                     _rele_tick:	
  7084                           ;psect for function _rele_tick
  7085                           
  7086                           
  7087                           ;incstack = 0
  7088                           ; Regs used in _rele_tick: [wreg+status,2+status,0]
  7089  0198                     i1l1948:
  7090                           
  7091                           ;main.c: 279:     if (ff.bits.OPENING && ff.bits.CLOSING) {
  7092  0198  1CFA               	btfss	_ff+1,1
  7093  0199  299B               	goto	u145_21
  7094  019A  299C               	goto	u145_20
  7095  019B                     u145_21:
  7096  019B  29A3               	goto	i1l367
  7097  019C                     __ccov163_end_blk0:
  7098  019C                     u145_20:
  7099  019C                     __ccov164_start_blk1:
  7100  019C                     i1l1950:
  7101  019C  0020               	movlb	0	; select bank0
  7102  019D  152E               	bsf	__ccovbit1_68/(0+8),__ccovbit1_68& (0+7)	;volatile
  7103  019E  1DFA               	btfss	_ff+1,3
  7104  019F  29A1               	goto	u146_21
  7105  01A0  29A2               	goto	u146_20
  7106  01A1                     u146_21:
  7107  01A1  29A3               	goto	i1l367
  7108  01A2                     u146_20:
  7109  01A2  29F5               	goto	i1l368
  7110  01A3                     __ccov164_end_blk1:
  7111  01A3                     __ccov165_start_blk3:
  7112  01A3                     i1l367:	
  7113                           ;main.c: 281:     }
  7114                           
  7115                           
  7116                           ;main.c: 284:     if (ff.bits.OPENING) {
  7117  01A3  1CFA               	btfss	_ff+1,1
  7118  01A4  29A6               	goto	u147_21
  7119  01A5  29A7               	goto	u147_20
  7120  01A6                     u147_21:
  7121  01A6  29BE               	goto	i1l369
  7122  01A7                     __ccov165_end_blk3:
  7123  01A7                     u147_20:
  7124  01A7                     __ccov166_start_blk4:
  7125  01A7                     i1l1954:
  7126  01A7  0020               	movlb	0	; select bank0
  7127  01A8  14AE               	bsf	__ccovbit4_69/(0+8),__ccovbit4_69& (0+7)	;volatile
  7128                           
  7129                           ;main.c: 285:         if (time_rele_power > 0) {
  7130  01A9  0845               	movf	_time_rele_power,w
  7131  01AA  0446               	iorwf	_time_rele_power+1,w
  7132  01AB  1903               	btfsc	3,2
  7133  01AC  29AE               	goto	u148_21
  7134  01AD  29AF               	goto	u148_20
  7135  01AE                     u148_21:
  7136  01AE  29BE               	goto	i1l369
  7137  01AF                     __ccov166_end_blk4:
  7138  01AF                     u148_20:
  7139  01AF                     __ccov167_start_blk5:
  7140  01AF                     i1l1956:
  7141                           
  7142                           ;main.c: 286:             time_rele_power--;
  7143  01AF  3001               	movlw	1
  7144  01B0  02C5               	subwf	_time_rele_power,f
  7145  01B1  3000               	movlw	0
  7146  01B2  3BC6               	subwfb	_time_rele_power+1,f
  7147  01B3                     __ccov167_end_blk5:
  7148  01B3                     __ccov168_start_blk6:
  7149  01B3                     i1l1958:
  7150  01B3  142E               	bsf	__ccovbit6_70/(0+8),__ccovbit6_70& (0+7)	;volatile
  7151                           
  7152                           ;main.c: 287:             if (time_rele_power == 0) {
  7153  01B4  0845               	movf	_time_rele_power,w
  7154  01B5  0446               	iorwf	_time_rele_power+1,w
  7155  01B6  1D03               	btfss	3,2
  7156  01B7  29B9               	goto	u149_21
  7157  01B8  29BA               	goto	u149_20
  7158  01B9                     u149_21:
  7159  01B9  29BE               	goto	i1l369
  7160  01BA                     __ccov168_end_blk6:
  7161  01BA                     u149_20:
  7162  01BA                     __ccov169_start_blk7:
  7163  01BA                     i1l1960:
  7164  01BA  17AD               	bsf	__ccovbit7_71/(0+8),__ccovbit7_71& (0+7)	;volatile
  7165                           
  7166                           ;main.c: 288:                 ff.bits.RELE_POWER_ON = 0;
  7167  01BB  12FA               	bcf	_ff+1,5
  7168                           
  7169                           ;main.c: 289:                 ff.bits.OPENED = 1;
  7170  01BC  157A               	bsf	_ff+1,2
  7171                           
  7172                           ;main.c: 290:                 ff.bits.OPENING = 0;
  7173  01BD  10FA               	bcf	_ff+1,1
  7174  01BE                     __ccov169_end_blk7:
  7175  01BE                     __ccov170_start_blk10:
  7176  01BE                     i1l369:	
  7177                           ;main.c: 293:     }
  7178                           
  7179  01BE  0020               	movlb	0	; select bank0
  7180  01BF  172D               	bsf	__ccovbit10_72/(0+8),__ccovbit10_72& (0+7)	;volatile
  7181                           
  7182                           ;main.c: 296:     if (ff.bits.CLOSING) {
  7183  01C0  1DFA               	btfss	_ff+1,3
  7184  01C1  29C3               	goto	u150_21
  7185  01C2  29C4               	goto	u150_20
  7186  01C3                     u150_21:
  7187  01C3  29F5               	goto	i1l368
  7188  01C4                     __ccov170_end_blk10:
  7189  01C4                     u150_20:
  7190  01C4                     __ccov171_start_blk11:
  7191  01C4                     i1l1962:
  7192                           
  7193                           ;main.c: 298:         if (time_rele_gap == 0) {
  7194  01C4  0841               	movf	_time_rele_gap,w
  7195  01C5  0442               	iorwf	_time_rele_gap+1,w
  7196  01C6  1D03               	btfss	3,2
  7197  01C7  29C9               	goto	u151_21
  7198  01C8  29CA               	goto	u151_20
  7199  01C9                     u151_21:
  7200  01C9  29DA               	goto	i1l1970
  7201  01CA                     __ccov171_end_blk11:
  7202  01CA                     u151_20:
  7203  01CA                     __ccov172_start_blk12:
  7204  01CA                     i1l1964:
  7205                           
  7206                           ;main.c: 299:             if (time_rele_power > 0) {
  7207  01CA  0845               	movf	_time_rele_power,w
  7208  01CB  0446               	iorwf	_time_rele_power+1,w
  7209  01CC  1903               	btfsc	3,2
  7210  01CD  29CF               	goto	u152_21
  7211  01CE  29D0               	goto	u152_20
  7212  01CF                     u152_21:
  7213  01CF  29D7               	goto	i1l374
  7214  01D0                     __ccov172_end_blk12:
  7215  01D0                     u152_20:
  7216  01D0                     __ccov173_start_blk13:
  7217  01D0                     i1l1966:
  7218                           
  7219                           ;main.c: 300:                 ff.bits.RELE_POWER_ON = 1;
  7220  01D0  16FA               	bsf	_ff+1,5
  7221  01D1                     __ccov173_end_blk13:
  7222  01D1                     __ccov174_start_blk14:
  7223  01D1                     i1l1968:
  7224  01D1  16AD               	bsf	__ccovbit14_73/(0+8),__ccovbit14_73& (0+7)	;volatile
  7225                           
  7226                           ;main.c: 301:                 time_rele_power--;
  7227  01D2  3001               	movlw	1
  7228  01D3  02C5               	subwf	_time_rele_power,f
  7229  01D4  3000               	movlw	0
  7230  01D5  3BC6               	subwfb	_time_rele_power+1,f
  7231                           
  7232                           ;main.c: 302:             } else {
  7233  01D6  29DF               	goto	i1l1972
  7234  01D7                     __ccov174_end_blk14:
  7235  01D7                     __ccov175_start_blk15:
  7236  01D7                     i1l374:
  7237  01D7  162D               	bsf	__ccovbit15_74/(0+8),__ccovbit15_74& (0+7)	;volatile
  7238                           
  7239                           ;main.c: 303:                 ff.bits.RELE_POWER_ON = 0;
  7240  01D8  12FA               	bcf	_ff+1,5
  7241  01D9  29DF               	goto	i1l1972
  7242  01DA                     __ccov175_end_blk15:
  7243  01DA                     __ccov176_start_blk18:
  7244  01DA                     i1l1970:
  7245  01DA  15AD               	bsf	__ccovbit18_75/(0+8),__ccovbit18_75& (0+7)	;volatile
  7246                           
  7247                           ;main.c: 306:             time_rele_gap--;
  7248  01DB  3001               	movlw	1
  7249  01DC  02C1               	subwf	_time_rele_gap,f
  7250  01DD  3000               	movlw	0
  7251  01DE  3BC2               	subwfb	_time_rele_gap+1,f
  7252  01DF                     __ccov176_end_blk18:
  7253  01DF                     __ccov177_start_blk20:
  7254  01DF                     i1l1972:
  7255  01DF  152D               	bsf	__ccovbit20_76/(0+8),__ccovbit20_76& (0+7)	;volatile
  7256                           
  7257                           ;main.c: 309:         if (time_rele_control > 0) {
  7258  01E0  0843               	movf	_time_rele_control,w
  7259  01E1  0444               	iorwf	_time_rele_control+1,w
  7260  01E2  1903               	btfsc	3,2
  7261  01E3  29E5               	goto	u153_21
  7262  01E4  29E6               	goto	u153_20
  7263  01E5                     u153_21:
  7264  01E5  29F5               	goto	i1l368
  7265  01E6                     __ccov177_end_blk20:
  7266  01E6                     u153_20:
  7267  01E6                     __ccov178_start_blk21:
  7268  01E6                     i1l1974:
  7269                           
  7270                           ;main.c: 310:             time_rele_control--;
  7271  01E6  3001               	movlw	1
  7272  01E7  02C3               	subwf	_time_rele_control,f
  7273  01E8  3000               	movlw	0
  7274  01E9  3BC4               	subwfb	_time_rele_control+1,f
  7275  01EA                     __ccov178_end_blk21:
  7276  01EA                     __ccov179_start_blk22:
  7277  01EA                     i1l1976:
  7278  01EA  14AD               	bsf	__ccovbit22_77/(0+8),__ccovbit22_77& (0+7)	;volatile
  7279                           
  7280                           ;main.c: 311:             if (time_rele_control == 0) {
  7281  01EB  0843               	movf	_time_rele_control,w
  7282  01EC  0444               	iorwf	_time_rele_control+1,w
  7283  01ED  1D03               	btfss	3,2
  7284  01EE  29F0               	goto	u154_21
  7285  01EF  29F1               	goto	u154_20
  7286  01F0                     u154_21:
  7287  01F0  29F5               	goto	i1l368
  7288  01F1                     __ccov179_end_blk22:
  7289  01F1                     u154_20:
  7290  01F1                     __ccov180_start_blk23:
  7291  01F1                     i1l1978:
  7292  01F1  142D               	bsf	__ccovbit23_78/(0+8),__ccovbit23_78& (0+7)	;volatile
  7293                           
  7294                           ;main.c: 312:                 ff.bits.RELE_CONTROL_ON = 0;
  7295  01F2  137A               	bcf	_ff+1,6
  7296                           
  7297                           ;main.c: 313:                 ff.bits.CLOSED = 1;
  7298  01F3  167A               	bsf	_ff+1,4
  7299                           
  7300                           ;main.c: 314:                 ff.bits.CLOSING = 0;
  7301  01F4  11FA               	bcf	_ff+1,3
  7302  01F5                     __ccov180_end_blk23:
  7303  01F5                     __ccov181_start_blk27:
  7304  01F5                     i1l368:
  7305  01F5  17AC               	bsf	__ccovbit27_79/(0+8),__ccovbit27_79& (0+7)	;volatile
  7306  01F6  0008               	return
  7307  01F7                     __end_of_rele_tick:
  7308  01F7                     
  7309                           	psect	text41
  7310  0554                     __ptext41:	
  7311 ;; *************** function _minute_tick *****************
  7312 ;; Defined at:
  7313 ;;		line 410 in file "main.c"
  7314 ;; Parameters:    Size  Location     Type
  7315 ;;		None
  7316 ;; Auto vars:     Size  Location     Type
  7317 ;;		None
  7318 ;; Return value:  Size  Location     Type
  7319 ;;                  1    wreg      void 
  7320 ;; Registers used:
  7321 ;;		wreg, status,2, status,0
  7322 ;; Tracked objects:
  7323 ;;		On entry : 0/0
  7324 ;;		On exit  : 0/0
  7325 ;;		Unchanged: 0/0
  7326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7327 ;;      Params:         0       0       0       0
  7328 ;;      Locals:         0       0       0       0
  7329 ;;      Temps:          1       0       0       0
  7330 ;;      Totals:         1       0       0       0
  7331 ;;Total ram usage:        1 bytes
  7332 ;; Hardware stack levels used: 1
  7333 ;; This function calls:
  7334 ;;		Nothing
  7335 ;; This function is called by:
  7336 ;;		_sec_work
  7337 ;; This function uses a non-reentrant model
  7338 ;;
  7339                           
  7340  0554                     _minute_tick:	
  7341                           ;psect for function _minute_tick
  7342                           
  7343                           
  7344                           ;incstack = 0
  7345                           ; Regs used in _minute_tick: [wreg+status,2+status,0]
  7346  0554                     i1l1980:
  7347                           
  7348                           ;main.c: 414:     if (time_melody > 0) {
  7349  0554  0020               	movlb	0	; select bank0
  7350  0555  0851               	movf	_time_melody,w
  7351  0556  1903               	btfsc	3,2
  7352  0557  2D59               	goto	u155_21
  7353  0558  2D5A               	goto	u155_20
  7354  0559                     u155_21:
  7355  0559  2D5E               	goto	i1l1984
  7356  055A                     __ccov232_end_blk0:
  7357  055A                     u155_20:
  7358  055A                     __ccov233_start_blk1:
  7359  055A                     i1l1982:
  7360  055A  16A8               	bsf	__ccovbit1_113/(0+8),__ccovbit1_113& (0+7)	;volatile
  7361                           
  7362                           ;main.c: 415:        time_melody--;
  7363  055B  3001               	movlw	1
  7364  055C  02D1               	subwf	_time_melody,f
  7365                           
  7366                           ;main.c: 416:     } else {
  7367  055D  2D6A               	goto	i1l408
  7368  055E                     __ccov233_end_blk1:
  7369  055E                     __ccov234_start_blk3:
  7370  055E                     i1l1984:
  7371  055E  1628               	bsf	__ccovbit3_114/(0+8),__ccovbit3_114& (0+7)	;volatile
  7372                           
  7373                           ;main.c: 417:         if (time_melody == 0) {
  7374  055F  0851               	movf	_time_melody,w
  7375  0560  1D03               	btfss	3,2
  7376  0561  2D63               	goto	u156_21
  7377  0562  2D64               	goto	u156_20
  7378  0563                     u156_21:
  7379  0563  2D6A               	goto	i1l408
  7380  0564                     __ccov234_end_blk3:
  7381  0564                     u156_20:
  7382  0564                     __ccov235_start_blk4:
  7383  0564                     i1l1986:
  7384                           
  7385                           ;main.c: 418:             ff.bits.SIREN = 1;
  7386  0564  14FB               	bsf	_ff+2,1
  7387  0565                     __ccov235_end_blk4:
  7388  0565                     __ccov236_start_blk5:
  7389  0565                     i1l1988:
  7390  0565  15A8               	bsf	__ccovbit5_115/(0+8),__ccovbit5_115& (0+7)	;volatile
  7391                           
  7392                           ;main.c: 419:             time_melody = MELODY_REPEAT_DELAY;
  7393  0566  301E               	movlw	30
  7394  0567  00F3               	movwf	??_minute_tick
  7395  0568  0873               	movf	??_minute_tick,w
  7396  0569  00D1               	movwf	_time_melody
  7397  056A                     __ccov236_end_blk5:
  7398  056A                     __ccov237_start_blk8:
  7399  056A                     i1l408:
  7400  056A  1528               	bsf	__ccovbit8_116/(0+8),__ccovbit8_116& (0+7)	;volatile
  7401  056B  0008               	return
  7402  056C                     __end_of_minute_tick:
  7403  056C                     
  7404                           	psect	text42
  7405  0287                     __ptext42:	
  7406 ;; *************** function _ms_200_work *****************
  7407 ;; Defined at:
  7408 ;;		line 489 in file "main.c"
  7409 ;; Parameters:    Size  Location     Type
  7410 ;;		None
  7411 ;; Auto vars:     Size  Location     Type
  7412 ;;		None
  7413 ;; Return value:  Size  Location     Type
  7414 ;;                  1    wreg      void 
  7415 ;; Registers used:
  7416 ;;		wreg, status,2, status,0, pclath, cstack
  7417 ;; Tracked objects:
  7418 ;;		On entry : 0/0
  7419 ;;		On exit  : 0/0
  7420 ;;		Unchanged: 0/0
  7421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7422 ;;      Params:         0       0       0       0
  7423 ;;      Locals:         0       0       0       0
  7424 ;;      Temps:          0       0       0       0
  7425 ;;      Totals:         0       0       0       0
  7426 ;;Total ram usage:        0 bytes
  7427 ;; Hardware stack levels used: 1
  7428 ;; Hardware stack levels required when called: 3
  7429 ;; This function calls:
  7430 ;;		_beep_double
  7431 ;;		_beep_long
  7432 ;;		_beep_short
  7433 ;; This function is called by:
  7434 ;;		_ms_tick
  7435 ;; This function uses a non-reentrant model
  7436 ;;
  7437                           
  7438  0287                     _ms_200_work:	
  7439                           ;psect for function _ms_200_work
  7440                           
  7441                           
  7442                           ;incstack = 0
  7443                           ; Regs used in _ms_200_work: [wreg+status,2+status,0+pclath+cstack]
  7444  0287                     i1l2116:
  7445                           
  7446                           ;main.c: 490:     if (ff.bits.ALARM_ON) {
  7447  0287  1C79               	btfss	_ff,0
  7448  0288  2A8A               	goto	u175_21
  7449  0289  2A8B               	goto	u175_20
  7450  028A                     u175_21:
  7451  028A  2AA1               	goto	i1l434
  7452  028B                     __ccov265_end_blk0:
  7453  028B                     u175_20:
  7454  028B                     __ccov266_start_blk1:
  7455  028B                     i1l2118:
  7456  028B  0020               	movlb	0	; select bank0
  7457  028C  1526               	bsf	__ccovbit1_132/(0+8),__ccovbit1_132& (0+7)	;volatile
  7458                           
  7459                           ;main.c: 491:         if (ff.bits.SIREN) {
  7460  028D  1CFB               	btfss	_ff+2,1
  7461  028E  2A90               	goto	u176_21
  7462  028F  2A91               	goto	u176_20
  7463  0290                     u176_21:
  7464  0290  2A96               	goto	i1l2122
  7465  0291                     __ccov266_end_blk1:
  7466  0291                     u176_20:
  7467  0291                     __ccov267_start_blk2:
  7468  0291                     i1l2120:
  7469  0291  14A6               	bsf	__ccovbit2_133/(0+8),__ccovbit2_133& (0+7)	;volatile
  7470                           
  7471                           ;main.c: 492:             beep_double();
  7472  0292  3186  2618  3182   	fcall	_beep_double
  7473                           
  7474                           ;main.c: 493:         } else {
  7475  0295  2AC7               	goto	i1l444
  7476  0296                     __ccov267_end_blk2:
  7477  0296                     __ccov268_start_blk4:
  7478  0296                     i1l2122:
  7479  0296  1426               	bsf	__ccovbit4_134/(0+8),__ccovbit4_134& (0+7)	;volatile
  7480                           
  7481                           ;main.c: 494:             if (beep_short_count > 0) {
  7482  0297  087D               	movf	_beep_short_count,w
  7483  0298  1903               	btfsc	3,2
  7484  0299  2A9B               	goto	u177_21
  7485  029A  2A9C               	goto	u177_20
  7486  029B                     u177_21:
  7487  029B  2AC7               	goto	i1l444
  7488  029C                     __ccov268_end_blk4:
  7489  029C                     u177_20:
  7490  029C                     __ccov269_start_blk5:
  7491  029C                     i1l2124:
  7492  029C  17A5               	bsf	__ccovbit5_135/(0+8),__ccovbit5_135& (0+7)	;volatile
  7493                           
  7494                           ;main.c: 495:                 beep_short();
  7495  029D  3184  24EF  3182   	fcall	_beep_short
  7496  02A0  2AC7               	goto	i1l444
  7497  02A1                     __ccov269_end_blk5:
  7498  02A1                     __ccov270_start_blk8:
  7499  02A1                     i1l434:
  7500  02A1  0020               	movlb	0	; select bank0
  7501  02A2  1725               	bsf	__ccovbit8_136/(0+8),__ccovbit8_136& (0+7)	;volatile
  7502  02A3  1CF9               	btfss	_ff,1
  7503  02A4  2AA6               	goto	u178_21
  7504  02A5  2AA7               	goto	u178_20
  7505  02A6                     u178_21:
  7506  02A6  2AC7               	goto	i1l444
  7507  02A7                     __ccov270_end_blk8:
  7508  02A7                     u178_20:
  7509  02A7                     __ccov271_start_blk9:
  7510  02A7                     i1l2126:
  7511                           
  7512                           ;main.c: 501:         if ((beep_short_count > 0) && (beep_long_count > 0)) {
  7513  02A7  087D               	movf	_beep_short_count,w
  7514  02A8  1903               	btfsc	3,2
  7515  02A9  2AAB               	goto	u179_21
  7516  02AA  2AAC               	goto	u179_20
  7517  02AB                     u179_21:
  7518  02AB  2AB3               	goto	i1l2132
  7519  02AC                     __ccov271_end_blk9:
  7520  02AC                     u179_20:
  7521  02AC                     __ccov272_start_blk10:
  7522  02AC                     i1l2128:
  7523  02AC  16A5               	bsf	__ccovbit10_137/(0+8),__ccovbit10_137& (0+7)	;volatile
  7524  02AD  084E               	movf	_beep_long_count,w
  7525  02AE  1903               	btfsc	3,2
  7526  02AF  2AB1               	goto	u180_21
  7527  02B0  2AB2               	goto	u180_20
  7528  02B1                     u180_21:
  7529  02B1  2AB3               	goto	i1l2132
  7530  02B2                     u180_20:
  7531  02B2  2A91               	goto	i1l2120
  7532  02B3                     __ccov272_end_blk10:
  7533  02B3                     __ccov273_start_blk13:
  7534  02B3                     i1l2132:
  7535                           
  7536                           ;main.c: 504:             if (beep_short_count > 0) {
  7537  02B3  087D               	movf	_beep_short_count,w
  7538  02B4  1903               	btfsc	3,2
  7539  02B5  2AB7               	goto	u181_21
  7540  02B6  2AB8               	goto	u181_20
  7541  02B7                     u181_21:
  7542  02B7  2ABC               	goto	i1l2136
  7543  02B8                     __ccov273_end_blk13:
  7544  02B8                     u181_20:
  7545  02B8                     __ccov274_start_blk14:
  7546  02B8                     i1l2134:
  7547  02B8  1625               	bsf	__ccovbit14_138/(0+8),__ccovbit14_138& (0+7)	;volatile
  7548                           
  7549                           ;main.c: 505:                 beep_short();
  7550  02B9  3184  24EF  3182   	fcall	_beep_short
  7551  02BC                     __ccov274_end_blk14:
  7552  02BC                     __ccov275_start_blk16:
  7553  02BC                     i1l2136:
  7554  02BC  0020               	movlb	0	; select bank0
  7555  02BD  15A5               	bsf	__ccovbit16_139/(0+8),__ccovbit16_139& (0+7)	;volatile
  7556                           
  7557                           ;main.c: 507:             if (beep_long_count > 0) {
  7558  02BE  084E               	movf	_beep_long_count,w
  7559  02BF  1903               	btfsc	3,2
  7560  02C0  2AC2               	goto	u182_21
  7561  02C1  2AC3               	goto	u182_20
  7562  02C2                     u182_21:
  7563  02C2  2AC7               	goto	i1l444
  7564  02C3                     __ccov275_end_blk16:
  7565  02C3                     u182_20:
  7566  02C3                     __ccov276_start_blk17:
  7567  02C3                     i1l2138:
  7568  02C3  1525               	bsf	__ccovbit17_140/(0+8),__ccovbit17_140& (0+7)	;volatile
  7569                           
  7570                           ;main.c: 508:                 beep_long();
  7571  02C4  3185  253B  3182   	fcall	_beep_long
  7572  02C7                     __ccov276_end_blk17:
  7573  02C7                     __ccov277_start_blk22:
  7574  02C7                     i1l444:
  7575  02C7  0020               	movlb	0	; select bank0
  7576  02C8  14A5               	bsf	__ccovbit22_141/(0+8),__ccovbit22_141& (0+7)	;volatile
  7577  02C9  0008               	return
  7578  02CA                     __end_of_ms_200_work:
  7579  02CA                     
  7580                           	psect	text43
  7581  0618                     __ptext43:	
  7582 ;; *************** function _beep_double *****************
  7583 ;; Defined at:
  7584 ;;		line 152 in file "main.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;		None
  7587 ;; Auto vars:     Size  Location     Type
  7588 ;;		None
  7589 ;; Return value:  Size  Location     Type
  7590 ;;                  1    wreg      void 
  7591 ;; Registers used:
  7592 ;;		wreg, status,2, status,0, pclath, cstack
  7593 ;; Tracked objects:
  7594 ;;		On entry : 0/0
  7595 ;;		On exit  : 0/0
  7596 ;;		Unchanged: 0/0
  7597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7598 ;;      Params:         0       0       0       0
  7599 ;;      Locals:         0       0       0       0
  7600 ;;      Temps:          0       0       0       0
  7601 ;;      Totals:         0       0       0       0
  7602 ;;Total ram usage:        0 bytes
  7603 ;; Hardware stack levels used: 1
  7604 ;; Hardware stack levels required when called: 2
  7605 ;; This function calls:
  7606 ;;		_beep_long
  7607 ;;		_beep_short
  7608 ;; This function is called by:
  7609 ;;		_ms_200_work
  7610 ;; This function uses a non-reentrant model
  7611 ;;
  7612                           
  7613  0618                     _beep_double:	
  7614                           ;psect for function _beep_double
  7615                           
  7616                           
  7617                           ;incstack = 0
  7618                           ; Regs used in _beep_double: [wreg+status,2+status,0+pclath+cstack]
  7619  0618                     i1l1942:
  7620                           
  7621                           ;main.c: 153:     if (ff.bits.LAST_BEEP_LONG) {
  7622  0618  1D7C               	btfss	_ff+3,2
  7623  0619  2E1B               	goto	u144_21
  7624  061A  2E1C               	goto	u144_20
  7625  061B                     u144_21:
  7626  061B  2E22               	goto	i1l1946
  7627  061C                     __ccov111_end_blk0:
  7628  061C                     u144_20:
  7629  061C                     __ccov112_start_blk1:
  7630  061C                     i1l1944:
  7631  061C  0020               	movlb	0	; select bank0
  7632  061D  16B2               	bsf	__ccovbit1_33/(0+8),__ccovbit1_33& (0+7)	;volatile
  7633                           
  7634                           ;main.c: 154:         beep_short();
  7635  061E  3184  24EF  3186   	fcall	_beep_short
  7636                           
  7637                           ;main.c: 155:     } else {
  7638  0621  2E27               	goto	i1l319
  7639  0622                     __ccov112_end_blk1:
  7640  0622                     __ccov113_start_blk3:
  7641  0622                     i1l1946:
  7642  0622  0020               	movlb	0	; select bank0
  7643  0623  1632               	bsf	__ccovbit3_34/(0+8),__ccovbit3_34& (0+7)	;volatile
  7644                           
  7645                           ;main.c: 156:         beep_long();
  7646  0624  3185  253B  3186   	fcall	_beep_long
  7647  0627                     __ccov113_end_blk3:
  7648  0627                     __ccov114_start_blk5:
  7649  0627                     i1l319:
  7650  0627  0020               	movlb	0	; select bank0
  7651  0628  15B2               	bsf	__ccovbit5_35/(0+8),__ccovbit5_35& (0+7)	;volatile
  7652  0629  0008               	return
  7653  062A                     __end_of_beep_double:
  7654  062A                     
  7655                           	psect	text44
  7656  04EF                     __ptext44:	
  7657 ;; *************** function _beep_short *****************
  7658 ;; Defined at:
  7659 ;;		line 134 in file "main.c"
  7660 ;; Parameters:    Size  Location     Type
  7661 ;;		None
  7662 ;; Auto vars:     Size  Location     Type
  7663 ;;		None
  7664 ;; Return value:  Size  Location     Type
  7665 ;;                  1    wreg      void 
  7666 ;; Registers used:
  7667 ;;		wreg, status,2, status,0, pclath, cstack
  7668 ;; Tracked objects:
  7669 ;;		On entry : 0/0
  7670 ;;		On exit  : 0/0
  7671 ;;		Unchanged: 0/0
  7672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7673 ;;      Params:         0       0       0       0
  7674 ;;      Locals:         0       0       0       0
  7675 ;;      Temps:          0       0       0       0
  7676 ;;      Totals:         0       0       0       0
  7677 ;;Total ram usage:        0 bytes
  7678 ;; Hardware stack levels used: 1
  7679 ;; Hardware stack levels required when called: 1
  7680 ;; This function calls:
  7681 ;;		_start_tone
  7682 ;; This function is called by:
  7683 ;;		_beep_double
  7684 ;;		_ms_200_work
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688  04EF                     _beep_short:	
  7689                           ;psect for function _beep_short
  7690                           
  7691                           
  7692                           ;incstack = 0
  7693                           ; Regs used in _beep_short: [wreg+status,2+status,0+pclath+cstack]
  7694  04EF                     i1l1914:
  7695                           
  7696                           ;main.c: 135:     if (!ff.bits.ZUM_BUSY) {
  7697  04EF  197B               	btfsc	_ff+2,2
  7698  04F0  2CF2               	goto	u140_21
  7699  04F1  2CF3               	goto	u140_20
  7700  04F2                     u140_21:
  7701  04F2  2D06               	goto	i1l309
  7702  04F3                     __ccov97_end_blk0:
  7703  04F3                     u140_20:
  7704  04F3                     __ccov98_start_blk1:
  7705  04F3                     i1l1916:
  7706                           
  7707                           ;main.c: 136:         if (beep_short_count > 0) beep_short_count--;
  7708  04F3  087D               	movf	_beep_short_count,w
  7709  04F4  1903               	btfsc	3,2
  7710  04F5  2CF7               	goto	u141_21
  7711  04F6  2CF8               	goto	u141_20
  7712  04F7                     u141_21:
  7713  04F7  2CFC               	goto	i1l1920
  7714  04F8                     __ccov98_end_blk1:
  7715  04F8                     u141_20:
  7716  04F8                     __ccov99_start_blk2:
  7717  04F8                     i1l1918:
  7718  04F8  0020               	movlb	0	; select bank0
  7719  04F9  15B3               	bsf	__ccovbit2_27/(0+8),__ccovbit2_27& (0+7)	;volatile
  7720  04FA  3001               	movlw	1
  7721  04FB  02FD               	subwf	_beep_short_count,f
  7722  04FC                     __ccov99_end_blk2:
  7723  04FC                     __ccov100_start_blk4:
  7724  04FC                     i1l1920:
  7725                           
  7726                           ;main.c: 137:         time_tone = SHORT_ZUMMER_DELAY;
  7727  04FC  301E               	movlw	30
  7728  04FD  0020               	movlb	0	; select bank0
  7729  04FE  00BF               	movwf	_time_tone
  7730  04FF  3000               	movlw	0
  7731  0500  00C0               	movwf	_time_tone+1
  7732  0501                     __ccov100_end_blk4:
  7733  0501                     __ccov101_start_blk5:
  7734  0501                     i1l1922:
  7735                           
  7736                           ;main.c: 138:         ff.bits.LAST_BEEP_LONG = 0;
  7737  0501  117C               	bcf	_ff+3,2
  7738  0502                     __ccov101_end_blk5:
  7739  0502                     __ccov102_start_blk6:
  7740  0502                     i1l1924:
  7741  0502  1533               	bsf	__ccovbit6_28/(0+8),__ccovbit6_28& (0+7)	;volatile
  7742                           
  7743                           ;main.c: 139:         start_tone();
  7744  0503  3186  26AD  3184   	fcall	_start_tone
  7745  0506                     __ccov102_end_blk6:
  7746  0506                     __ccov103_start_blk8:
  7747  0506                     i1l309:
  7748  0506  0020               	movlb	0	; select bank0
  7749  0507  14B3               	bsf	__ccovbit8_29/(0+8),__ccovbit8_29& (0+7)	;volatile
  7750  0508  0008               	return
  7751  0509                     __end_of_beep_short:
  7752  0509                     
  7753                           	psect	text45
  7754  053B                     __ptext45:	
  7755 ;; *************** function _beep_long *****************
  7756 ;; Defined at:
  7757 ;;		line 143 in file "main.c"
  7758 ;; Parameters:    Size  Location     Type
  7759 ;;		None
  7760 ;; Auto vars:     Size  Location     Type
  7761 ;;		None
  7762 ;; Return value:  Size  Location     Type
  7763 ;;                  1    wreg      void 
  7764 ;; Registers used:
  7765 ;;		wreg, status,2, status,0, pclath, cstack
  7766 ;; Tracked objects:
  7767 ;;		On entry : 0/0
  7768 ;;		On exit  : 0/0
  7769 ;;		Unchanged: 0/0
  7770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7771 ;;      Params:         0       0       0       0
  7772 ;;      Locals:         0       0       0       0
  7773 ;;      Temps:          0       0       0       0
  7774 ;;      Totals:         0       0       0       0
  7775 ;;Total ram usage:        0 bytes
  7776 ;; Hardware stack levels used: 1
  7777 ;; Hardware stack levels required when called: 1
  7778 ;; This function calls:
  7779 ;;		_start_tone
  7780 ;; This function is called by:
  7781 ;;		_beep_double
  7782 ;;		_ms_200_work
  7783 ;; This function uses a non-reentrant model
  7784 ;;
  7785                           
  7786  053B                     _beep_long:	
  7787                           ;psect for function _beep_long
  7788                           
  7789                           
  7790                           ;incstack = 0
  7791                           ; Regs used in _beep_long: [wreg+status,2+status,0+pclath+cstack]
  7792  053B                     i1l1926:
  7793                           
  7794                           ;main.c: 144:     if (!ff.bits.ZUM_BUSY) {
  7795  053B  197B               	btfsc	_ff+2,2
  7796  053C  2D3E               	goto	u142_21
  7797  053D  2D3F               	goto	u142_20
  7798  053E                     u142_21:
  7799  053E  2D51               	goto	i1l314
  7800  053F                     __ccov104_end_blk0:
  7801  053F                     u142_20:
  7802  053F                     __ccov105_start_blk1:
  7803  053F                     i1l1928:
  7804                           
  7805                           ;main.c: 145:         if (beep_long_count > 0) beep_long_count--;
  7806  053F  0020               	movlb	0	; select bank0
  7807  0540  084E               	movf	_beep_long_count,w
  7808  0541  1903               	btfsc	3,2
  7809  0542  2D44               	goto	u143_21
  7810  0543  2D45               	goto	u143_20
  7811  0544                     u143_21:
  7812  0544  2D48               	goto	i1l1932
  7813  0545                     __ccov105_end_blk1:
  7814  0545                     u143_20:
  7815  0545                     __ccov106_start_blk2:
  7816  0545                     i1l1930:
  7817  0545  1433               	bsf	__ccovbit2_30/(0+8),__ccovbit2_30& (0+7)	;volatile
  7818  0546  3001               	movlw	1
  7819  0547  02CE               	subwf	_beep_long_count,f
  7820  0548                     __ccov106_end_blk2:
  7821  0548                     __ccov107_start_blk4:
  7822  0548                     i1l1932:
  7823                           
  7824                           ;main.c: 146:         time_tone = LONG_ZUMMER_DELAY;
  7825  0548  3082               	movlw	130
  7826  0549  00BF               	movwf	_time_tone
  7827  054A  3000               	movlw	0
  7828  054B  00C0               	movwf	_time_tone+1
  7829  054C                     __ccov107_end_blk4:
  7830  054C                     __ccov108_start_blk5:
  7831  054C                     i1l1934:
  7832                           
  7833                           ;main.c: 147:         ff.bits.LAST_BEEP_LONG = 1;
  7834  054C  157C               	bsf	_ff+3,2
  7835  054D                     __ccov108_end_blk5:
  7836  054D                     __ccov109_start_blk6:
  7837  054D                     i1l1936:
  7838  054D  17B2               	bsf	__ccovbit6_31/(0+8),__ccovbit6_31& (0+7)	;volatile
  7839                           
  7840                           ;main.c: 148:         start_tone();
  7841  054E  3186  26AD  3185   	fcall	_start_tone
  7842  0551                     __ccov109_end_blk6:
  7843  0551                     __ccov110_start_blk8:
  7844  0551                     i1l314:
  7845  0551  0020               	movlb	0	; select bank0
  7846  0552  1732               	bsf	__ccovbit8_32/(0+8),__ccovbit8_32& (0+7)	;volatile
  7847  0553  0008               	return
  7848  0554                     __end_of_beep_long:
  7849  0554                     
  7850                           	psect	text46
  7851  06AD                     __ptext46:	
  7852 ;; *************** function _start_tone *****************
  7853 ;; Defined at:
  7854 ;;		line 122 in file "main.c"
  7855 ;; Parameters:    Size  Location     Type
  7856 ;;		None
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;		None
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  1    wreg      void 
  7861 ;; Registers used:
  7862 ;;		None
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7868 ;;      Params:         0       0       0       0
  7869 ;;      Locals:         0       0       0       0
  7870 ;;      Temps:          0       0       0       0
  7871 ;;      Totals:         0       0       0       0
  7872 ;;Total ram usage:        0 bytes
  7873 ;; Hardware stack levels used: 1
  7874 ;; This function calls:
  7875 ;;		Nothing
  7876 ;; This function is called by:
  7877 ;;		_beep_short
  7878 ;;		_beep_long
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882  06AD                     _start_tone:	
  7883                           ;psect for function _start_tone
  7884                           
  7885                           
  7886                           ;incstack = 0
  7887                           ; Regs used in _start_tone: []
  7888  06AD                     i1l1912:
  7889                           
  7890                           ;main.c: 123:     ff.bits.ZUM_BUSY = 1;
  7891  06AD  157B               	bsf	_ff+2,2
  7892                           
  7893                           ;main.c: 124:     ff.bits.TONE_ON = 1;
  7894  06AE  17FA               	bsf	_ff+1,7
  7895                           
  7896                           ;main.c: 125:     ff.bits.TONE_OFF = 0;
  7897  06AF  107B               	bcf	_ff+2,0
  7898  06B0                     __ccov93_end_blk0:
  7899  06B0                     __ccov94_start_blk1:
  7900  06B0                     i1l301:
  7901  06B0  0020               	movlb	0	; select bank0
  7902  06B1  16B3               	bsf	__ccovbit1_25/(0+8),__ccovbit1_25& (0+7)	;volatile
  7903  06B2  0008               	return
  7904  06B3                     __end_of_start_tone:
  7905  06B3                     
  7906                           	psect	text47
  7907  065C                     __ptext47:	
  7908 ;; *************** function _ms_100_work *****************
  7909 ;; Defined at:
  7910 ;;		line 515 in file "main.c"
  7911 ;; Parameters:    Size  Location     Type
  7912 ;;		None
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;		None
  7915 ;; Return value:  Size  Location     Type
  7916 ;;                  1    wreg      void 
  7917 ;; Registers used:
  7918 ;;		None
  7919 ;; Tracked objects:
  7920 ;;		On entry : 0/0
  7921 ;;		On exit  : 0/0
  7922 ;;		Unchanged: 0/0
  7923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7924 ;;      Params:         0       0       0       0
  7925 ;;      Locals:         0       0       0       0
  7926 ;;      Temps:          0       0       0       0
  7927 ;;      Totals:         0       0       0       0
  7928 ;;Total ram usage:        0 bytes
  7929 ;; Hardware stack levels used: 1
  7930 ;; This function calls:
  7931 ;;		Nothing
  7932 ;; This function is called by:
  7933 ;;		_ms_tick
  7934 ;; This function uses a non-reentrant model
  7935 ;;
  7936                           
  7937  065C                     _ms_100_work:	
  7938                           ;psect for function _ms_100_work
  7939                           
  7940                           
  7941                           ;incstack = 0
  7942                           ; Regs used in _ms_100_work: []
  7943  065C                     i1l2140:
  7944                           
  7945                           ;main.c: 516:     if (ff.bits.NORMAL_WORK_MODE_ON || ff.bits.UNIVERSAL_VORK_MODE_ON) {
  7946  065C  1A7B               	btfsc	_ff+2,4
  7947  065D  2E5F               	goto	u183_21
  7948  065E  2E60               	goto	u183_20
  7949  065F                     u183_21:
  7950  065F  2E66               	goto	i1l449
  7951  0660                     __ccov278_end_blk0:
  7952  0660                     u183_20:
  7953  0660                     __ccov279_start_blk1:
  7954  0660                     i1l2142:
  7955  0660  0020               	movlb	0	; select bank0
  7956  0661  1425               	bsf	__ccovbit1_142/(0+8),__ccovbit1_142& (0+7)	;volatile
  7957  0662  1EFB               	btfss	_ff+2,5
  7958  0663  2E65               	goto	u184_21
  7959  0664  2E66               	goto	u184_20
  7960  0665                     u184_21:
  7961  0665  2E69               	goto	i1l450
  7962  0666                     __ccov279_end_blk1:
  7963  0666                     u184_20:
  7964  0666                     __ccov280_start_blk2:
  7965  0666                     i1l449:
  7966  0666  0020               	movlb	0	; select bank0
  7967  0667  17A4               	bsf	__ccovbit2_143/(0+8),__ccovbit2_143& (0+7)	;volatile
  7968                           
  7969                           ;main.c: 517:         ff.bits.ALLOW_MEASURE = 1;
  7970  0668  1679               	bsf	_ff,4
  7971  0669                     __ccov280_end_blk2:
  7972  0669                     __ccov281_start_blk4:
  7973  0669                     i1l450:
  7974  0669  1724               	bsf	__ccovbit4_144/(0+8),__ccovbit4_144& (0+7)	;volatile
  7975  066A  0008               	return
  7976  066B                     __end_of_ms_100_work:
  7977  066B                     
  7978                           	psect	text48
  7979  062A                     __ptext48:	
  7980 ;; *************** function _TMR0_ISR *****************
  7981 ;; Defined at:
  7982 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  7983 ;; Parameters:    Size  Location     Type
  7984 ;;		None
  7985 ;; Auto vars:     Size  Location     Type
  7986 ;;		None
  7987 ;; Return value:  Size  Location     Type
  7988 ;;                  1    wreg      void 
  7989 ;; Registers used:
  7990 ;;		wreg, status,2, status,0, pclath, cstack
  7991 ;; Tracked objects:
  7992 ;;		On entry : 0/0
  7993 ;;		On exit  : 0/0
  7994 ;;		Unchanged: 0/0
  7995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7996 ;;      Params:         0       0       0       0
  7997 ;;      Locals:         0       0       0       0
  7998 ;;      Temps:          0       0       0       0
  7999 ;;      Totals:         0       0       0       0
  8000 ;;Total ram usage:        0 bytes
  8001 ;; Hardware stack levels used: 1
  8002 ;; Hardware stack levels required when called: 1
  8003 ;; This function calls:
  8004 ;;		Absolute function
  8005 ;;		_TMR0_DefaultInterruptHandler
  8006 ;;		_zummer_switch
  8007 ;; This function is called by:
  8008 ;;		_INTERRUPT_InterruptManager
  8009 ;; This function uses a non-reentrant model
  8010 ;;
  8011                           
  8012  062A                     _TMR0_ISR:	
  8013                           ;psect for function _TMR0_ISR
  8014                           
  8015                           
  8016                           ;incstack = 0
  8017                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  8018  062A                     i1l2252:
  8019                           
  8020                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  8021  062A  110B               	bcf	11,2	;volatile
  8022  062B                     __ccov85_end_blk0:
  8023  062B                     __ccov86_start_blk1:
  8024  062B                     i1l2254:
  8025                           
  8026                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  8027  062B  0020               	movlb	0	; select bank0
  8028  062C  0857               	movf	_timer0ReloadVal,w	;volatile
  8029  062D  0095               	movwf	21	;volatile
  8030  062E                     __ccov86_end_blk1:
  8031  062E                     __ccov87_start_blk2:
  8032  062E                     i1l2256:
  8033                           
  8034                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  8035  062E  0853               	movf	_TMR0_InterruptHandler,w
  8036  062F  0454               	iorwf	_TMR0_InterruptHandler+1,w
  8037  0630  1903               	btfsc	3,2
  8038  0631  2E33               	goto	u208_21
  8039  0632  2E34               	goto	u208_20
  8040  0633                     u208_21:
  8041  0633  2E3A               	goto	i1l192
  8042  0634                     __ccov87_end_blk2:
  8043  0634                     u208_20:
  8044  0634                     __ccov88_start_blk3:
  8045  0634                     i1l2258:
  8046  0634  1570               	bsf	__ccovbit3_21/(0+8),__ccovbit3_21& (0+7)	;volatile
  8047                           
  8048                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  8049  0635  0854               	movf	_TMR0_InterruptHandler+1,w
  8050  0636  008A               	movwf	10
  8051  0637  0853               	movf	_TMR0_InterruptHandler,w
  8052  0638  000A               	callw
  8053  0639  3186               	pagesel	$
  8054  063A                     __ccov88_end_blk3:
  8055  063A                     __ccov89_start_blk5:
  8056  063A                     i1l192:
  8057  063A  14F0               	bsf	__ccovbit5_22/(0+8),__ccovbit5_22& (0+7)	;volatile
  8058  063B  0008               	return
  8059  063C                     __end_of_TMR0_ISR:
  8060  063C                     
  8061                           	psect	text49
  8062  06C1                     __ptext49:	
  8063 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  8064 ;; Defined at:
  8065 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  8066 ;; Parameters:    Size  Location     Type
  8067 ;;		None
  8068 ;; Auto vars:     Size  Location     Type
  8069 ;;		None
  8070 ;; Return value:  Size  Location     Type
  8071 ;;                  1    wreg      void 
  8072 ;; Registers used:
  8073 ;;		None
  8074 ;; Tracked objects:
  8075 ;;		On entry : 0/0
  8076 ;;		On exit  : 0/0
  8077 ;;		Unchanged: 0/0
  8078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8079 ;;      Params:         0       0       0       0
  8080 ;;      Locals:         0       0       0       0
  8081 ;;      Temps:          0       0       0       0
  8082 ;;      Totals:         0       0       0       0
  8083 ;;Total ram usage:        0 bytes
  8084 ;; Hardware stack levels used: 1
  8085 ;; This function calls:
  8086 ;;		Nothing
  8087 ;; This function is called by:
  8088 ;;		_TMR0_Initialize
  8089 ;;		_TMR0_ISR
  8090 ;; This function uses a non-reentrant model
  8091 ;;
  8092                           
  8093  06C1                     _TMR0_DefaultInterruptHandler:	
  8094                           ;psect for function _TMR0_DefaultInterruptHandler
  8095                           
  8096                           
  8097                           ;incstack = 0
  8098                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  8099  06C1                     i1l198:
  8100  06C1  0020               	movlb	0	; select bank0
  8101  06C2  1733               	bsf	__ccovbit0_24/(0+8),__ccovbit0_24& (0+7)	;volatile
  8102  06C3  0008               	return
  8103  06C4                     __end_of_TMR0_DefaultInterruptHandler:
  8104  06C4                     
  8105                           	psect	text50
  8106  066B                     __ptext50:	
  8107 ;; *************** function _zummer_switch *****************
  8108 ;; Defined at:
  8109 ;;		line 582 in file "main.c"
  8110 ;; Parameters:    Size  Location     Type
  8111 ;;		None
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;		None
  8114 ;; Return value:  Size  Location     Type
  8115 ;;                  1    wreg      void 
  8116 ;; Registers used:
  8117 ;;		status,0
  8118 ;; Tracked objects:
  8119 ;;		On entry : 0/0
  8120 ;;		On exit  : 0/0
  8121 ;;		Unchanged: 0/0
  8122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8123 ;;      Params:         0       0       0       0
  8124 ;;      Locals:         0       0       0       0
  8125 ;;      Temps:          0       0       0       0
  8126 ;;      Totals:         0       0       0       0
  8127 ;;Total ram usage:        0 bytes
  8128 ;; Hardware stack levels used: 1
  8129 ;; This function calls:
  8130 ;;		Nothing
  8131 ;; This function is called by:
  8132 ;;		_start_setup
  8133 ;;		_TMR0_ISR
  8134 ;; This function uses a non-reentrant model
  8135 ;;
  8136                           
  8137  066B                     _zummer_switch:	
  8138                           ;psect for function _zummer_switch
  8139                           
  8140  066B                     i1l476:	
  8141                           ;incstack = 0
  8142                           ; Regs used in _zummer_switch: [status,0]
  8143                           ;main.c: 587:     do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  8144                           
  8145  066B                     i1l2250:
  8146  066B  1003               	clrc
  8147  066C  0022               	movlb	2	; select bank2
  8148  066D  1E8C               	btfss	12,5	;volatile
  8149  066E  1403               	setc
  8150  066F  1803               	btfsc	3,0
  8151  0670  2E72               	goto	u206_21
  8152  0671  2E75               	goto	u206_20
  8153  0672                     u206_21:
  8154  0672  0022               	movlb	2	; select bank2
  8155  0673  168C               	bsf	12,5	;volatile
  8156  0674  2E77               	goto	u207_24
  8157  0675                     u206_20:
  8158  0675  0022               	movlb	2	; select bank2
  8159  0676  128C               	bcf	12,5	;volatile
  8160  0677                     __ccov308_end_blk1:
  8161  0677                     u207_24:
  8162  0677                     __ccov309_start_blk3:
  8163  0677                     i1l478:
  8164  0677  0020               	movlb	0	; select bank0
  8165  0678  15A3               	bsf	__ccovbit3_155/(0+8),__ccovbit3_155& (0+7)	;volatile
  8166  0679  0008               	return
  8167  067A                     __end_of_zummer_switch:
  8168  067A                     
  8169                           	psect	codecov_info_hdr
  8170  0000                     __pcodecov_info_hdr:	
  8171                           ;
  8172                           ; Code-coverage Info Header
  8173                           ;
  8174                           
  8175  0000  0010               	db	16	; SIZE
  8176  0001  00000001           	ddw	1	; VERSION
  8177  0005  0001               	db	1	; POINTSIZE
  8178  0006  0008               	db	8	; UNITSIZE
  8179  0007  0001               	db	1	; FLAGS=SET
  8180  0008  00000000           	ddw	0	; Reserved
  8181  000C  00000000           	ddw	0	; Reserved
  8182                           
  8183                           	psect	codecov_info
  8184  0000                     __pcodecov_info:	
  8185                           ;
  8186                           ; Code-coverage Info
  8187                           ;
  8188                           
  8189                           
  8190                           ; Function: SYSTEM_Initialize, coverage: 1,0
  8191  0000  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8192  0004  00000072           	ddw	__ccovbit1_1/(0+8)	; CC_ADDR
  8193  0008  00000001           	ddw	1	; NUM_POINTS
  8194  000C  00000006           	ddw	__ccovbit1_1& (0+7)	; OFFSET
  8195  0010  00000000           	ddw	0	; Reserved
  8196  0014  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8197  0018  00000002           	ddw	2	; NUM_RANGES
  8198  001C  000005F1           	ddw	__ccov2_start_blk1	; block 1 START_ADDR
  8199  0020  000005F3           	ddw	__end_of_SYSTEM_Initialize	; block 1 END_ADDR
  8200  0024  000005DF           	ddw	_SYSTEM_Initialize	; block 0 START_ADDR
  8201  0028  000005F1           	ddw	__ccov1_end_blk0	; block 0 END_ADDR
  8202                           
  8203                           ; Function: OSCILLATOR_Initialize, coverage: 3,2,1,0
  8204  002C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8205  0030  00000072           	ddw	__ccovbit3_2/(0+8)	; CC_ADDR
  8206  0034  00000001           	ddw	1	; NUM_POINTS
  8207  0038  00000005           	ddw	__ccovbit3_2& (0+7)	; OFFSET
  8208  003C  00000000           	ddw	0	; Reserved
  8209  0040  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8210  0044  00000004           	ddw	4	; NUM_RANGES
  8211  0048  00000689           	ddw	__ccov6_start_blk3	; block 3 START_ADDR
  8212  004C  0000068B           	ddw	__end_of_OSCILLATOR_Initialize	; block 3 END_ADDR
  8213  0050  00000687           	ddw	__ccov5_start_blk2	; block 2 START_ADDR
  8214  0054  00000689           	ddw	__ccov5_end_blk2	; block 2 END_ADDR
  8215  0058  00000686           	ddw	__ccov4_start_blk1	; block 1 START_ADDR
  8216  005C  00000687           	ddw	__ccov4_end_blk1	; block 1 END_ADDR
  8217  0060  00000683           	ddw	_OSCILLATOR_Initialize	; block 0 START_ADDR
  8218  0064  00000686           	ddw	__ccov3_end_blk0	; block 0 END_ADDR
  8219                           
  8220                           ; Function: WDT_Initialize, coverage: 1,0
  8221  0068  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8222  006C  00000072           	ddw	__ccovbit1_3/(0+8)	; CC_ADDR
  8223  0070  00000001           	ddw	1	; NUM_POINTS
  8224  0074  00000004           	ddw	__ccovbit1_3& (0+7)	; OFFSET
  8225  0078  00000000           	ddw	0	; Reserved
  8226  007C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8227  0080  00000002           	ddw	2	; NUM_RANGES
  8228  0084  000006B6           	ddw	__ccov8_start_blk1	; block 1 START_ADDR
  8229  0088  000006B8           	ddw	__end_of_WDT_Initialize	; block 1 END_ADDR
  8230  008C  000006B3           	ddw	_WDT_Initialize	; block 0 START_ADDR
  8231  0090  000006B6           	ddw	__ccov7_end_blk0	; block 0 END_ADDR
  8232                           
  8233                           ; Function: ADC_Initialize, coverage: 3,2,1,0
  8234  0094  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8235  0098  00000072           	ddw	__ccovbit3_4/(0+8)	; CC_ADDR
  8236  009C  00000001           	ddw	1	; NUM_POINTS
  8237  00A0  00000003           	ddw	__ccovbit3_4& (0+7)	; OFFSET
  8238  00A4  00000000           	ddw	0	; Reserved
  8239  00A8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8240  00AC  00000004           	ddw	4	; NUM_RANGES
  8241  00B0  00000681           	ddw	__ccov12_start_blk3	; block 3 START_ADDR
  8242  00B4  00000683           	ddw	__end_of_ADC_Initialize	; block 3 END_ADDR
  8243  00B8  0000067E           	ddw	__ccov11_start_blk2	; block 2 START_ADDR
  8244  00BC  00000681           	ddw	__ccov11_end_blk2	; block 2 END_ADDR
  8245  00C0  0000067D           	ddw	__ccov10_start_blk1	; block 1 START_ADDR
  8246  00C4  0000067E           	ddw	__ccov10_end_blk1	; block 1 END_ADDR
  8247  00C8  0000067A           	ddw	_ADC_Initialize	; block 0 START_ADDR
  8248  00CC  0000067D           	ddw	__ccov9_end_blk0	; block 0 END_ADDR
  8249                           
  8250                           ; Function: ADC_GetConversion, coverage: 9,7,5,3,2,1,0
  8251  00D0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8252  00D4  00000072           	ddw	__ccovbit9_5/(0+8)	; CC_ADDR
  8253  00D8  00000001           	ddw	1	; NUM_POINTS
  8254  00DC  00000002           	ddw	__ccovbit9_5& (0+7)	; OFFSET
  8255  00E0  00000000           	ddw	0	; Reserved
  8256  00E4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8257  00E8  00000007           	ddw	7	; NUM_RANGES
  8258  00EC  00000539           	ddw	__ccov28_start_blk9	; block 9 START_ADDR
  8259  00F0  0000053B           	ddw	__end_of_ADC_GetConversion	; block 9 END_ADDR
  8260  00F4  00000538           	ddw	__ccov27_start_blk7	; block 7 START_ADDR
  8261  00F8  00000539           	ddw	__ccov27_end_blk7	; block 7 END_ADDR
  8262  00FC  00000534           	ddw	__ccov26_start_blk5	; block 5 START_ADDR
  8263  0100  00000538           	ddw	__ccov26_end_blk5	; block 5 END_ADDR
  8264  0104  00000532           	ddw	__ccov25_start_blk3	; block 3 START_ADDR
  8265  0108  00000534           	ddw	__ccov25_end_blk3	; block 3 END_ADDR
  8266  010C  0000052E           	ddw	__ccov24_start_blk2	; block 2 START_ADDR
  8267  0110  00000532           	ddw	__ccov24_end_blk2	; block 2 END_ADDR
  8268  0114  0000052D           	ddw	__ccov23_start_blk1	; block 1 START_ADDR
  8269  0118  0000052E           	ddw	__ccov23_end_blk1	; block 1 END_ADDR
  8270  011C  00000522           	ddw	_ADC_GetConversion	; block 0 START_ADDR
  8271  0120  0000052D           	ddw	__ccov22_end_blk0	; block 0 END_ADDR
  8272                           
  8273                           ; Function: PIN_MANAGER_Initialize, coverage: 6,5,4,3,2,1,0
  8274  0124  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8275  0128  00000072           	ddw	__ccovbit6_6/(0+8)	; CC_ADDR
  8276  012C  00000001           	ddw	1	; NUM_POINTS
  8277  0130  00000001           	ddw	__ccovbit6_6& (0+7)	; OFFSET
  8278  0134  00000000           	ddw	0	; Reserved
  8279  0138  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8280  013C  00000007           	ddw	7	; NUM_RANGES
  8281  0140  000005AF           	ddw	__ccov37_start_blk6	; block 6 START_ADDR
  8282  0144  000005B1           	ddw	__end_of_PIN_MANAGER_Initialize	; block 6 END_ADDR
  8283  0148  000005AA           	ddw	__ccov36_start_blk5	; block 5 START_ADDR
  8284  014C  000005AF           	ddw	__ccov36_end_blk5	; block 5 END_ADDR
  8285  0150  000005A5           	ddw	__ccov35_start_blk4	; block 4 START_ADDR
  8286  0154  000005AA           	ddw	__ccov35_end_blk4	; block 4 END_ADDR
  8287  0158  000005A2           	ddw	__ccov34_start_blk3	; block 3 START_ADDR
  8288  015C  000005A5           	ddw	__ccov34_end_blk3	; block 3 END_ADDR
  8289  0160  000005A0           	ddw	__ccov33_start_blk2	; block 2 START_ADDR
  8290  0164  000005A2           	ddw	__ccov33_end_blk2	; block 2 END_ADDR
  8291  0168  0000059D           	ddw	__ccov32_start_blk1	; block 1 START_ADDR
  8292  016C  000005A0           	ddw	__ccov32_end_blk1	; block 1 END_ADDR
  8293  0170  0000059A           	ddw	_PIN_MANAGER_Initialize	; block 0 START_ADDR
  8294  0174  0000059D           	ddw	__ccov31_end_blk0	; block 0 END_ADDR
  8295                           
  8296                           ; Function: INTERRUPT_InterruptManager, coverage: 1,0
  8297  0178  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8298  017C  00000072           	ddw	__ccovbit1_7/(0+8)	; CC_ADDR
  8299  0180  00000001           	ddw	1	; NUM_POINTS
  8300  0184  00000000           	ddw	__ccovbit1_7& (0+7)	; OFFSET
  8301  0188  00000000           	ddw	0	; Reserved
  8302  018C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8303  0190  00000002           	ddw	2	; NUM_RANGES
  8304  0194  0000000A           	ddw	__ccov40_start_blk1	; block 1 START_ADDR
  8305  0198  0000000F           	ddw	__ccov40_end_blk1	; block 1 END_ADDR
  8306  019C  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8307  01A0  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8308                           
  8309                           ; Function: INTERRUPT_InterruptManager, coverage: 2,1,0
  8310  01A4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8311  01A8  00000071           	ddw	__ccovbit2_8/(0+8)	; CC_ADDR
  8312  01AC  00000001           	ddw	1	; NUM_POINTS
  8313  01B0  00000007           	ddw	__ccovbit2_8& (0+7)	; OFFSET
  8314  01B4  00000000           	ddw	0	; Reserved
  8315  01B8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8316  01BC  00000003           	ddw	3	; NUM_RANGES
  8317  01C0  0000000F           	ddw	__ccov41_start_blk2	; block 2 START_ADDR
  8318  01C4  00000014           	ddw	__ccov41_end_blk2	; block 2 END_ADDR
  8319  01C8  0000000A           	ddw	__ccov40_start_blk1	; block 1 START_ADDR
  8320  01CC  0000000F           	ddw	__ccov40_end_blk1	; block 1 END_ADDR
  8321  01D0  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8322  01D4  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8323                           
  8324                           ; Function: INTERRUPT_InterruptManager, coverage: 3,0
  8325  01D8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8326  01DC  00000071           	ddw	__ccovbit3_9/(0+8)	; CC_ADDR
  8327  01E0  00000001           	ddw	1	; NUM_POINTS
  8328  01E4  00000006           	ddw	__ccovbit3_9& (0+7)	; OFFSET
  8329  01E8  00000000           	ddw	0	; Reserved
  8330  01EC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8331  01F0  00000002           	ddw	2	; NUM_RANGES
  8332  01F4  00000014           	ddw	__ccov42_start_blk3	; block 3 START_ADDR
  8333  01F8  00000019           	ddw	__ccov42_end_blk3	; block 3 END_ADDR
  8334  01FC  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8335  0200  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8336                           
  8337                           ; Function: INTERRUPT_InterruptManager, coverage: 5,4,3,0
  8338  0204  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8339  0208  00000071           	ddw	__ccovbit5_10/(0+8)	; CC_ADDR
  8340  020C  00000001           	ddw	1	; NUM_POINTS
  8341  0210  00000005           	ddw	__ccovbit5_10& (0+7)	; OFFSET
  8342  0214  00000000           	ddw	0	; Reserved
  8343  0218  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8344  021C  00000004           	ddw	4	; NUM_RANGES
  8345  0220  0000001E           	ddw	__ccov44_start_blk5	; block 5 START_ADDR
  8346  0224  00000024           	ddw	__ccov44_end_blk5	; block 5 END_ADDR
  8347  0228  00000019           	ddw	__ccov43_start_blk4	; block 4 START_ADDR
  8348  022C  0000001E           	ddw	__ccov43_end_blk4	; block 4 END_ADDR
  8349  0230  00000014           	ddw	__ccov42_start_blk3	; block 3 START_ADDR
  8350  0234  00000019           	ddw	__ccov42_end_blk3	; block 3 END_ADDR
  8351  0238  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8352  023C  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8353                           
  8354                           ; Function: INTERRUPT_InterruptManager, coverage: 6,5,4,3,0
  8355  0240  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8356  0244  00000071           	ddw	__ccovbit6_11/(0+8)	; CC_ADDR
  8357  0248  00000001           	ddw	1	; NUM_POINTS
  8358  024C  00000004           	ddw	__ccovbit6_11& (0+7)	; OFFSET
  8359  0250  00000000           	ddw	0	; Reserved
  8360  0254  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8361  0258  00000005           	ddw	5	; NUM_RANGES
  8362  025C  00000024           	ddw	__ccov45_start_blk6	; block 6 START_ADDR
  8363  0260  00000029           	ddw	__ccov45_end_blk6	; block 6 END_ADDR
  8364  0264  0000001E           	ddw	__ccov44_start_blk5	; block 5 START_ADDR
  8365  0268  00000024           	ddw	__ccov44_end_blk5	; block 5 END_ADDR
  8366  026C  00000019           	ddw	__ccov43_start_blk4	; block 4 START_ADDR
  8367  0270  0000001E           	ddw	__ccov43_end_blk4	; block 4 END_ADDR
  8368  0274  00000014           	ddw	__ccov42_start_blk3	; block 3 START_ADDR
  8369  0278  00000019           	ddw	__ccov42_end_blk3	; block 3 END_ADDR
  8370  027C  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8371  0280  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8372                           
  8373                           ; Function: INTERRUPT_InterruptManager, coverage: 10,4,3,0
  8374  0284  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8375  0288  00000071           	ddw	__ccovbit10_12/(0+8)	; CC_ADDR
  8376  028C  00000001           	ddw	1	; NUM_POINTS
  8377  0290  00000003           	ddw	__ccovbit10_12& (0+7)	; OFFSET
  8378  0294  00000000           	ddw	0	; Reserved
  8379  0298  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8380  029C  00000004           	ddw	4	; NUM_RANGES
  8381  02A0  00000029           	ddw	__ccov46_start_blk10	; block 10 START_ADDR
  8382  02A4  0000002A           	ddw	__ccov46_end_blk10	; block 10 END_ADDR
  8383  02A8  00000019           	ddw	__ccov43_start_blk4	; block 4 START_ADDR
  8384  02AC  0000001E           	ddw	__ccov43_end_blk4	; block 4 END_ADDR
  8385  02B0  00000014           	ddw	__ccov42_start_blk3	; block 3 START_ADDR
  8386  02B4  00000019           	ddw	__ccov42_end_blk3	; block 3 END_ADDR
  8387  02B8  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8388  02BC  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8389                           
  8390                           ; Function: INTERRUPT_InterruptManager, coverage: 12,0
  8391  02C0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8392  02C4  00000071           	ddw	__ccovbit12_13/(0+8)	; CC_ADDR
  8393  02C8  00000001           	ddw	1	; NUM_POINTS
  8394  02CC  00000002           	ddw	__ccovbit12_13& (0+7)	; OFFSET
  8395  02D0  00000000           	ddw	0	; Reserved
  8396  02D4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8397  02D8  00000002           	ddw	2	; NUM_RANGES
  8398  02DC  0000002A           	ddw	__ccov47_start_blk12	; block 12 START_ADDR
  8399  02E0  0000002D           	ddw	__end_of_INTERRUPT_InterruptManager	; block 12 END_ADDR
  8400  02E4  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8401  02E8  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8402                           
  8403                           ; Function: TMR2_Initialize, coverage: 6,5,4,3,2,1,0
  8404  02EC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8405  02F0  00000071           	ddw	__ccovbit6_14/(0+8)	; CC_ADDR
  8406  02F4  00000001           	ddw	1	; NUM_POINTS
  8407  02F8  00000001           	ddw	__ccovbit6_14& (0+7)	; OFFSET
  8408  02FC  00000000           	ddw	0	; Reserved
  8409  0300  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8410  0304  00000007           	ddw	7	; NUM_RANGES
  8411  0308  00000604           	ddw	__ccov54_start_blk6	; block 6 START_ADDR
  8412  030C  00000606           	ddw	__end_of_TMR2_Initialize	; block 6 END_ADDR
  8413  0310  00000601           	ddw	__ccov53_start_blk5	; block 5 START_ADDR
  8414  0314  00000604           	ddw	__ccov53_end_blk5	; block 5 END_ADDR
  8415  0318  000005FA           	ddw	__ccov52_start_blk4	; block 4 START_ADDR
  8416  031C  00000601           	ddw	__ccov52_end_blk4	; block 4 END_ADDR
  8417  0320  000005F8           	ddw	__ccov51_start_blk3	; block 3 START_ADDR
  8418  0324  000005FA           	ddw	__ccov51_end_blk3	; block 3 END_ADDR
  8419  0328  000005F7           	ddw	__ccov50_start_blk2	; block 2 START_ADDR
  8420  032C  000005F8           	ddw	__ccov50_end_blk2	; block 2 END_ADDR
  8421  0330  000005F6           	ddw	__ccov49_start_blk1	; block 1 START_ADDR
  8422  0334  000005F7           	ddw	__ccov49_end_blk1	; block 1 END_ADDR
  8423  0338  000005F3           	ddw	_TMR2_Initialize	; block 0 START_ADDR
  8424  033C  000005F6           	ddw	__ccov48_end_blk0	; block 0 END_ADDR
  8425                           
  8426                           ; Function: TMR2_StartTimer, coverage: 1,0
  8427  0340  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8428  0344  00000071           	ddw	__ccovbit1_15/(0+8)	; CC_ADDR
  8429  0348  00000001           	ddw	1	; NUM_POINTS
  8430  034C  00000000           	ddw	__ccovbit1_15& (0+7)	; OFFSET
  8431  0350  00000000           	ddw	0	; Reserved
  8432  0354  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8433  0358  00000002           	ddw	2	; NUM_RANGES
  8434  035C  000006BF           	ddw	__ccov56_start_blk1	; block 1 START_ADDR
  8435  0360  000006C1           	ddw	__end_of_TMR2_StartTimer	; block 1 END_ADDR
  8436  0364  000006BD           	ddw	_TMR2_StartTimer	; block 0 START_ADDR
  8437  0368  000006BF           	ddw	__ccov55_end_blk0	; block 0 END_ADDR
  8438                           
  8439                           ; Function: TMR2_ISR, coverage: 2,1,0
  8440  036C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8441  0370  00000070           	ddw	__ccovbit2_16/(0+8)	; CC_ADDR
  8442  0374  00000001           	ddw	1	; NUM_POINTS
  8443  0378  00000007           	ddw	__ccovbit2_16& (0+7)	; OFFSET
  8444  037C  00000000           	ddw	0	; Reserved
  8445  0380  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8446  0384  00000003           	ddw	3	; NUM_RANGES
  8447  0388  00000644           	ddw	__ccov67_start_blk2	; block 2 START_ADDR
  8448  038C  0000064A           	ddw	__ccov67_end_blk2	; block 2 END_ADDR
  8449  0390  0000063E           	ddw	__ccov66_start_blk1	; block 1 START_ADDR
  8450  0394  00000644           	ddw	__ccov66_end_blk1	; block 1 END_ADDR
  8451  0398  0000063C           	ddw	_TMR2_ISR	; block 0 START_ADDR
  8452  039C  0000063E           	ddw	__ccov65_end_blk0	; block 0 END_ADDR
  8453                           
  8454                           ; Function: TMR2_ISR, coverage: 4,1,0
  8455  03A0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8456  03A4  00000070           	ddw	__ccovbit4_17/(0+8)	; CC_ADDR
  8457  03A8  00000001           	ddw	1	; NUM_POINTS
  8458  03AC  00000006           	ddw	__ccovbit4_17& (0+7)	; OFFSET
  8459  03B0  00000000           	ddw	0	; Reserved
  8460  03B4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8461  03B8  00000003           	ddw	3	; NUM_RANGES
  8462  03BC  0000064A           	ddw	__ccov68_start_blk4	; block 4 START_ADDR
  8463  03C0  0000064C           	ddw	__end_of_TMR2_ISR	; block 4 END_ADDR
  8464  03C4  0000063E           	ddw	__ccov66_start_blk1	; block 1 START_ADDR
  8465  03C8  00000644           	ddw	__ccov66_end_blk1	; block 1 END_ADDR
  8466  03CC  0000063C           	ddw	_TMR2_ISR	; block 0 START_ADDR
  8467  03D0  0000063E           	ddw	__ccov65_end_blk0	; block 0 END_ADDR
  8468                           
  8469                           ; Function: TMR2_SetInterruptHandler, coverage: 1,0
  8470  03D4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8471  03D8  00000070           	ddw	__ccovbit1_18/(0+8)	; CC_ADDR
  8472  03DC  00000001           	ddw	1	; NUM_POINTS
  8473  03E0  00000005           	ddw	__ccovbit1_18& (0+7)	; OFFSET
  8474  03E4  00000000           	ddw	0	; Reserved
  8475  03E8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8476  03EC  00000002           	ddw	2	; NUM_RANGES
  8477  03F0  00000698           	ddw	__ccov70_start_blk1	; block 1 START_ADDR
  8478  03F4  0000069A           	ddw	__end_of_TMR2_SetInterruptHandler	; block 1 END_ADDR
  8479  03F8  00000693           	ddw	_TMR2_SetInterruptHandler	; block 0 START_ADDR
  8480  03FC  00000698           	ddw	__ccov69_end_blk0	; block 0 END_ADDR
  8481                           
  8482                           ; Function: TMR2_DefaultInterruptHandler, coverage: 0
  8483  0400  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8484  0404  00000070           	ddw	__ccovbit0_19/(0+8)	; CC_ADDR
  8485  0408  00000001           	ddw	1	; NUM_POINTS
  8486  040C  00000004           	ddw	__ccovbit0_19& (0+7)	; OFFSET
  8487  0410  00000000           	ddw	0	; Reserved
  8488  0414  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8489  0418  00000001           	ddw	1	; NUM_RANGES
  8490  041C  000006D0           	ddw	_TMR2_DefaultInterruptHandler	; block 0 START_ADDR
  8491  0420  000006D2           	ddw	__end_of_TMR2_DefaultInterruptHandler	; block 0 END_ADDR
  8492                           
  8493                           ; Function: TMR0_Initialize, coverage: 6,5,4,3,2,1,0
  8494  0424  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8495  0428  00000070           	ddw	__ccovbit6_20/(0+8)	; CC_ADDR
  8496  042C  00000001           	ddw	1	; NUM_POINTS
  8497  0430  00000003           	ddw	__ccovbit6_20& (0+7)	; OFFSET
  8498  0434  00000000           	ddw	0	; Reserved
  8499  0438  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8500  043C  00000007           	ddw	7	; NUM_RANGES
  8501  0440  00000598           	ddw	__ccov78_start_blk6	; block 6 START_ADDR
  8502  0444  0000059A           	ddw	__end_of_TMR0_Initialize	; block 6 END_ADDR
  8503  0448  00000591           	ddw	__ccov77_start_blk5	; block 5 START_ADDR
  8504  044C  00000598           	ddw	__ccov77_end_blk5	; block 5 END_ADDR
  8505  0450  00000590           	ddw	__ccov76_start_blk4	; block 4 START_ADDR
  8506  0454  00000591           	ddw	__ccov76_end_blk4	; block 4 END_ADDR
  8507  0458  0000058F           	ddw	__ccov75_start_blk3	; block 3 START_ADDR
  8508  045C  00000590           	ddw	__ccov75_end_blk3	; block 3 END_ADDR
  8509  0460  0000058B           	ddw	__ccov74_start_blk2	; block 2 START_ADDR
  8510  0464  0000058F           	ddw	__ccov74_end_blk2	; block 2 END_ADDR
  8511  0468  00000588           	ddw	__ccov73_start_blk1	; block 1 START_ADDR
  8512  046C  0000058B           	ddw	__ccov73_end_blk1	; block 1 END_ADDR
  8513  0470  00000583           	ddw	_TMR0_Initialize	; block 0 START_ADDR
  8514  0474  00000588           	ddw	__ccov72_end_blk0	; block 0 END_ADDR
  8515                           
  8516                           ; Function: TMR0_ISR, coverage: 3,2,1,0
  8517  0478  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8518  047C  00000070           	ddw	__ccovbit3_21/(0+8)	; CC_ADDR
  8519  0480  00000001           	ddw	1	; NUM_POINTS
  8520  0484  00000002           	ddw	__ccovbit3_21& (0+7)	; OFFSET
  8521  0488  00000000           	ddw	0	; Reserved
  8522  048C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8523  0490  00000004           	ddw	4	; NUM_RANGES
  8524  0494  00000634           	ddw	__ccov88_start_blk3	; block 3 START_ADDR
  8525  0498  0000063A           	ddw	__ccov88_end_blk3	; block 3 END_ADDR
  8526  049C  0000062E           	ddw	__ccov87_start_blk2	; block 2 START_ADDR
  8527  04A0  00000634           	ddw	__ccov87_end_blk2	; block 2 END_ADDR
  8528  04A4  0000062B           	ddw	__ccov86_start_blk1	; block 1 START_ADDR
  8529  04A8  0000062E           	ddw	__ccov86_end_blk1	; block 1 END_ADDR
  8530  04AC  0000062A           	ddw	_TMR0_ISR	; block 0 START_ADDR
  8531  04B0  0000062B           	ddw	__ccov85_end_blk0	; block 0 END_ADDR
  8532                           
  8533                           ; Function: TMR0_ISR, coverage: 5,2,1,0
  8534  04B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8535  04B8  00000070           	ddw	__ccovbit5_22/(0+8)	; CC_ADDR
  8536  04BC  00000001           	ddw	1	; NUM_POINTS
  8537  04C0  00000001           	ddw	__ccovbit5_22& (0+7)	; OFFSET
  8538  04C4  00000000           	ddw	0	; Reserved
  8539  04C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8540  04CC  00000004           	ddw	4	; NUM_RANGES
  8541  04D0  0000063A           	ddw	__ccov89_start_blk5	; block 5 START_ADDR
  8542  04D4  0000063C           	ddw	__end_of_TMR0_ISR	; block 5 END_ADDR
  8543  04D8  0000062E           	ddw	__ccov87_start_blk2	; block 2 START_ADDR
  8544  04DC  00000634           	ddw	__ccov87_end_blk2	; block 2 END_ADDR
  8545  04E0  0000062B           	ddw	__ccov86_start_blk1	; block 1 START_ADDR
  8546  04E4  0000062E           	ddw	__ccov86_end_blk1	; block 1 END_ADDR
  8547  04E8  0000062A           	ddw	_TMR0_ISR	; block 0 START_ADDR
  8548  04EC  0000062B           	ddw	__ccov85_end_blk0	; block 0 END_ADDR
  8549                           
  8550                           ; Function: TMR0_SetInterruptHandler, coverage: 1,0
  8551  04F0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8552  04F4  00000070           	ddw	__ccovbit1_23/(0+8)	; CC_ADDR
  8553  04F8  00000001           	ddw	1	; NUM_POINTS
  8554  04FC  00000000           	ddw	__ccovbit1_23& (0+7)	; OFFSET
  8555  0500  00000000           	ddw	0	; Reserved
  8556  0504  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8557  0508  00000002           	ddw	2	; NUM_RANGES
  8558  050C  0000069F           	ddw	__ccov91_start_blk1	; block 1 START_ADDR
  8559  0510  000006A1           	ddw	__end_of_TMR0_SetInterruptHandler	; block 1 END_ADDR
  8560  0514  0000069A           	ddw	_TMR0_SetInterruptHandler	; block 0 START_ADDR
  8561  0518  0000069F           	ddw	__ccov90_end_blk0	; block 0 END_ADDR
  8562                           
  8563                           ; Function: TMR0_DefaultInterruptHandler, coverage: 0
  8564  051C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8565  0520  00000033           	ddw	__ccovbit0_24/(0+8)	; CC_ADDR
  8566  0524  00000001           	ddw	1	; NUM_POINTS
  8567  0528  00000006           	ddw	__ccovbit0_24& (0+7)	; OFFSET
  8568  052C  00000000           	ddw	0	; Reserved
  8569  0530  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8570  0534  00000001           	ddw	1	; NUM_RANGES
  8571  0538  000006C1           	ddw	_TMR0_DefaultInterruptHandler	; block 0 START_ADDR
  8572  053C  000006C4           	ddw	__end_of_TMR0_DefaultInterruptHandler	; block 0 END_ADDR
  8573                           
  8574                           ; Function: start_tone, coverage: 1,0
  8575  0540  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8576  0544  00000033           	ddw	__ccovbit1_25/(0+8)	; CC_ADDR
  8577  0548  00000001           	ddw	1	; NUM_POINTS
  8578  054C  00000005           	ddw	__ccovbit1_25& (0+7)	; OFFSET
  8579  0550  00000000           	ddw	0	; Reserved
  8580  0554  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8581  0558  00000002           	ddw	2	; NUM_RANGES
  8582  055C  000006B0           	ddw	__ccov94_start_blk1	; block 1 START_ADDR
  8583  0560  000006B3           	ddw	__end_of_start_tone	; block 1 END_ADDR
  8584  0564  000006AD           	ddw	_start_tone	; block 0 START_ADDR
  8585  0568  000006B0           	ddw	__ccov93_end_blk0	; block 0 END_ADDR
  8586                           
  8587                           ; Function: stop_tone, coverage: 1,0
  8588  056C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8589  0570  00000033           	ddw	__ccovbit1_26/(0+8)	; CC_ADDR
  8590  0574  00000001           	ddw	1	; NUM_POINTS
  8591  0578  00000004           	ddw	__ccovbit1_26& (0+7)	; OFFSET
  8592  057C  00000000           	ddw	0	; Reserved
  8593  0580  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8594  0584  00000002           	ddw	2	; NUM_RANGES
  8595  0588  000006AA           	ddw	__ccov96_start_blk1	; block 1 START_ADDR
  8596  058C  000006AD           	ddw	__end_of_stop_tone	; block 1 END_ADDR
  8597  0590  000006A7           	ddw	_stop_tone	; block 0 START_ADDR
  8598  0594  000006AA           	ddw	__ccov95_end_blk0	; block 0 END_ADDR
  8599                           
  8600                           ; Function: beep_short, coverage: 2,1,0
  8601  0598  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8602  059C  00000033           	ddw	__ccovbit2_27/(0+8)	; CC_ADDR
  8603  05A0  00000001           	ddw	1	; NUM_POINTS
  8604  05A4  00000003           	ddw	__ccovbit2_27& (0+7)	; OFFSET
  8605  05A8  00000000           	ddw	0	; Reserved
  8606  05AC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8607  05B0  00000003           	ddw	3	; NUM_RANGES
  8608  05B4  000004F8           	ddw	__ccov99_start_blk2	; block 2 START_ADDR
  8609  05B8  000004FC           	ddw	__ccov99_end_blk2	; block 2 END_ADDR
  8610  05BC  000004F3           	ddw	__ccov98_start_blk1	; block 1 START_ADDR
  8611  05C0  000004F8           	ddw	__ccov98_end_blk1	; block 1 END_ADDR
  8612  05C4  000004EF           	ddw	_beep_short	; block 0 START_ADDR
  8613  05C8  000004F3           	ddw	__ccov97_end_blk0	; block 0 END_ADDR
  8614                           
  8615                           ; Function: beep_short, coverage: 6,5,4,1,0
  8616  05CC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8617  05D0  00000033           	ddw	__ccovbit6_28/(0+8)	; CC_ADDR
  8618  05D4  00000001           	ddw	1	; NUM_POINTS
  8619  05D8  00000002           	ddw	__ccovbit6_28& (0+7)	; OFFSET
  8620  05DC  00000000           	ddw	0	; Reserved
  8621  05E0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8622  05E4  00000005           	ddw	5	; NUM_RANGES
  8623  05E8  00000502           	ddw	__ccov102_start_blk6	; block 6 START_ADDR
  8624  05EC  00000506           	ddw	__ccov102_end_blk6	; block 6 END_ADDR
  8625  05F0  00000501           	ddw	__ccov101_start_blk5	; block 5 START_ADDR
  8626  05F4  00000502           	ddw	__ccov101_end_blk5	; block 5 END_ADDR
  8627  05F8  000004FC           	ddw	__ccov100_start_blk4	; block 4 START_ADDR
  8628  05FC  00000501           	ddw	__ccov100_end_blk4	; block 4 END_ADDR
  8629  0600  000004F3           	ddw	__ccov98_start_blk1	; block 1 START_ADDR
  8630  0604  000004F8           	ddw	__ccov98_end_blk1	; block 1 END_ADDR
  8631  0608  000004EF           	ddw	_beep_short	; block 0 START_ADDR
  8632  060C  000004F3           	ddw	__ccov97_end_blk0	; block 0 END_ADDR
  8633                           
  8634                           ; Function: beep_short, coverage: 8,0
  8635  0610  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8636  0614  00000033           	ddw	__ccovbit8_29/(0+8)	; CC_ADDR
  8637  0618  00000001           	ddw	1	; NUM_POINTS
  8638  061C  00000001           	ddw	__ccovbit8_29& (0+7)	; OFFSET
  8639  0620  00000000           	ddw	0	; Reserved
  8640  0624  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8641  0628  00000002           	ddw	2	; NUM_RANGES
  8642  062C  00000506           	ddw	__ccov103_start_blk8	; block 8 START_ADDR
  8643  0630  00000509           	ddw	__end_of_beep_short	; block 8 END_ADDR
  8644  0634  000004EF           	ddw	_beep_short	; block 0 START_ADDR
  8645  0638  000004F3           	ddw	__ccov97_end_blk0	; block 0 END_ADDR
  8646                           
  8647                           ; Function: beep_long, coverage: 2,1,0
  8648  063C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8649  0640  00000033           	ddw	__ccovbit2_30/(0+8)	; CC_ADDR
  8650  0644  00000001           	ddw	1	; NUM_POINTS
  8651  0648  00000000           	ddw	__ccovbit2_30& (0+7)	; OFFSET
  8652  064C  00000000           	ddw	0	; Reserved
  8653  0650  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8654  0654  00000003           	ddw	3	; NUM_RANGES
  8655  0658  00000545           	ddw	__ccov106_start_blk2	; block 2 START_ADDR
  8656  065C  00000548           	ddw	__ccov106_end_blk2	; block 2 END_ADDR
  8657  0660  0000053F           	ddw	__ccov105_start_blk1	; block 1 START_ADDR
  8658  0664  00000545           	ddw	__ccov105_end_blk1	; block 1 END_ADDR
  8659  0668  0000053B           	ddw	_beep_long	; block 0 START_ADDR
  8660  066C  0000053F           	ddw	__ccov104_end_blk0	; block 0 END_ADDR
  8661                           
  8662                           ; Function: beep_long, coverage: 6,5,4,1,0
  8663  0670  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8664  0674  00000032           	ddw	__ccovbit6_31/(0+8)	; CC_ADDR
  8665  0678  00000001           	ddw	1	; NUM_POINTS
  8666  067C  00000007           	ddw	__ccovbit6_31& (0+7)	; OFFSET
  8667  0680  00000000           	ddw	0	; Reserved
  8668  0684  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8669  0688  00000005           	ddw	5	; NUM_RANGES
  8670  068C  0000054D           	ddw	__ccov109_start_blk6	; block 6 START_ADDR
  8671  0690  00000551           	ddw	__ccov109_end_blk6	; block 6 END_ADDR
  8672  0694  0000054C           	ddw	__ccov108_start_blk5	; block 5 START_ADDR
  8673  0698  0000054D           	ddw	__ccov108_end_blk5	; block 5 END_ADDR
  8674  069C  00000548           	ddw	__ccov107_start_blk4	; block 4 START_ADDR
  8675  06A0  0000054C           	ddw	__ccov107_end_blk4	; block 4 END_ADDR
  8676  06A4  0000053F           	ddw	__ccov105_start_blk1	; block 1 START_ADDR
  8677  06A8  00000545           	ddw	__ccov105_end_blk1	; block 1 END_ADDR
  8678  06AC  0000053B           	ddw	_beep_long	; block 0 START_ADDR
  8679  06B0  0000053F           	ddw	__ccov104_end_blk0	; block 0 END_ADDR
  8680                           
  8681                           ; Function: beep_long, coverage: 8,0
  8682  06B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8683  06B8  00000032           	ddw	__ccovbit8_32/(0+8)	; CC_ADDR
  8684  06BC  00000001           	ddw	1	; NUM_POINTS
  8685  06C0  00000006           	ddw	__ccovbit8_32& (0+7)	; OFFSET
  8686  06C4  00000000           	ddw	0	; Reserved
  8687  06C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8688  06CC  00000002           	ddw	2	; NUM_RANGES
  8689  06D0  00000551           	ddw	__ccov110_start_blk8	; block 8 START_ADDR
  8690  06D4  00000554           	ddw	__end_of_beep_long	; block 8 END_ADDR
  8691  06D8  0000053B           	ddw	_beep_long	; block 0 START_ADDR
  8692  06DC  0000053F           	ddw	__ccov104_end_blk0	; block 0 END_ADDR
  8693                           
  8694                           ; Function: beep_double, coverage: 1,0
  8695  06E0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8696  06E4  00000032           	ddw	__ccovbit1_33/(0+8)	; CC_ADDR
  8697  06E8  00000001           	ddw	1	; NUM_POINTS
  8698  06EC  00000005           	ddw	__ccovbit1_33& (0+7)	; OFFSET
  8699  06F0  00000000           	ddw	0	; Reserved
  8700  06F4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8701  06F8  00000002           	ddw	2	; NUM_RANGES
  8702  06FC  0000061C           	ddw	__ccov112_start_blk1	; block 1 START_ADDR
  8703  0700  00000622           	ddw	__ccov112_end_blk1	; block 1 END_ADDR
  8704  0704  00000618           	ddw	_beep_double	; block 0 START_ADDR
  8705  0708  0000061C           	ddw	__ccov111_end_blk0	; block 0 END_ADDR
  8706                           
  8707                           ; Function: beep_double, coverage: 3,0
  8708  070C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8709  0710  00000032           	ddw	__ccovbit3_34/(0+8)	; CC_ADDR
  8710  0714  00000001           	ddw	1	; NUM_POINTS
  8711  0718  00000004           	ddw	__ccovbit3_34& (0+7)	; OFFSET
  8712  071C  00000000           	ddw	0	; Reserved
  8713  0720  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8714  0724  00000002           	ddw	2	; NUM_RANGES
  8715  0728  00000622           	ddw	__ccov113_start_blk3	; block 3 START_ADDR
  8716  072C  00000627           	ddw	__ccov113_end_blk3	; block 3 END_ADDR
  8717  0730  00000618           	ddw	_beep_double	; block 0 START_ADDR
  8718  0734  0000061C           	ddw	__ccov111_end_blk0	; block 0 END_ADDR
  8719                           
  8720                           ; Function: beep_double, coverage: 5,0
  8721  0738  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8722  073C  00000032           	ddw	__ccovbit5_35/(0+8)	; CC_ADDR
  8723  0740  00000001           	ddw	1	; NUM_POINTS
  8724  0744  00000003           	ddw	__ccovbit5_35& (0+7)	; OFFSET
  8725  0748  00000000           	ddw	0	; Reserved
  8726  074C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8727  0750  00000002           	ddw	2	; NUM_RANGES
  8728  0754  00000627           	ddw	__ccov114_start_blk5	; block 5 START_ADDR
  8729  0758  0000062A           	ddw	__end_of_beep_double	; block 5 END_ADDR
  8730  075C  00000618           	ddw	_beep_double	; block 0 START_ADDR
  8731  0760  0000061C           	ddw	__ccov111_end_blk0	; block 0 END_ADDR
  8732                           
  8733                           ; Function: go_close, coverage: 1,0
  8734  0764  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8735  0768  00000032           	ddw	__ccovbit1_36/(0+8)	; CC_ADDR
  8736  076C  00000001           	ddw	1	; NUM_POINTS
  8737  0770  00000002           	ddw	__ccovbit1_36& (0+7)	; OFFSET
  8738  0774  00000000           	ddw	0	; Reserved
  8739  0778  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8740  077C  00000002           	ddw	2	; NUM_RANGES
  8741  0780  000003F2           	ddw	__ccov116_start_blk1	; block 1 START_ADDR
  8742  0784  000003F8           	ddw	__ccov116_end_blk1	; block 1 END_ADDR
  8743  0788  000003EE           	ddw	_go_close	; block 0 START_ADDR
  8744  078C  000003F2           	ddw	__ccov115_end_blk0	; block 0 END_ADDR
  8745                           
  8746                           ; Function: go_close, coverage: 2,1,0
  8747  0790  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8748  0794  00000032           	ddw	__ccovbit2_37/(0+8)	; CC_ADDR
  8749  0798  00000001           	ddw	1	; NUM_POINTS
  8750  079C  00000001           	ddw	__ccovbit2_37& (0+7)	; OFFSET
  8751  07A0  00000000           	ddw	0	; Reserved
  8752  07A4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8753  07A8  00000003           	ddw	3	; NUM_RANGES
  8754  07AC  000003F8           	ddw	__ccov117_start_blk2	; block 2 START_ADDR
  8755  07B0  000003FD           	ddw	__ccov117_end_blk2	; block 2 END_ADDR
  8756  07B4  000003F2           	ddw	__ccov116_start_blk1	; block 1 START_ADDR
  8757  07B8  000003F8           	ddw	__ccov116_end_blk1	; block 1 END_ADDR
  8758  07BC  000003EE           	ddw	_go_close	; block 0 START_ADDR
  8759  07C0  000003F2           	ddw	__ccov115_end_blk0	; block 0 END_ADDR
  8760                           
  8761                           ; Function: go_close, coverage: 4,3,2,1,0
  8762  07C4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8763  07C8  00000032           	ddw	__ccovbit4_38/(0+8)	; CC_ADDR
  8764  07CC  00000001           	ddw	1	; NUM_POINTS
  8765  07D0  00000000           	ddw	__ccovbit4_38& (0+7)	; OFFSET
  8766  07D4  00000000           	ddw	0	; Reserved
  8767  07D8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8768  07DC  00000005           	ddw	5	; NUM_RANGES
  8769  07E0  00000402           	ddw	__ccov119_start_blk4	; block 4 START_ADDR
  8770  07E4  00000415           	ddw	__ccov119_end_blk4	; block 4 END_ADDR
  8771  07E8  000003FD           	ddw	__ccov118_start_blk3	; block 3 START_ADDR
  8772  07EC  00000402           	ddw	__ccov118_end_blk3	; block 3 END_ADDR
  8773  07F0  000003F8           	ddw	__ccov117_start_blk2	; block 2 START_ADDR
  8774  07F4  000003FD           	ddw	__ccov117_end_blk2	; block 2 END_ADDR
  8775  07F8  000003F2           	ddw	__ccov116_start_blk1	; block 1 START_ADDR
  8776  07FC  000003F8           	ddw	__ccov116_end_blk1	; block 1 END_ADDR
  8777  0800  000003EE           	ddw	_go_close	; block 0 START_ADDR
  8778  0804  000003F2           	ddw	__ccov115_end_blk0	; block 0 END_ADDR
  8779                           
  8780                           ; Function: go_close, coverage: 6,0
  8781  0808  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8782  080C  00000031           	ddw	__ccovbit6_39/(0+8)	; CC_ADDR
  8783  0810  00000001           	ddw	1	; NUM_POINTS
  8784  0814  00000007           	ddw	__ccovbit6_39& (0+7)	; OFFSET
  8785  0818  00000000           	ddw	0	; Reserved
  8786  081C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8787  0820  00000002           	ddw	2	; NUM_RANGES
  8788  0824  00000415           	ddw	__ccov120_start_blk6	; block 6 START_ADDR
  8789  0828  00000418           	ddw	__end_of_go_close	; block 6 END_ADDR
  8790  082C  000003EE           	ddw	_go_close	; block 0 START_ADDR
  8791  0830  000003F2           	ddw	__ccov115_end_blk0	; block 0 END_ADDR
  8792                           
  8793                           ; Function: go_close_short, coverage: 1,0
  8794  0834  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8795  0838  00000031           	ddw	__ccovbit1_40/(0+8)	; CC_ADDR
  8796  083C  00000001           	ddw	1	; NUM_POINTS
  8797  0840  00000006           	ddw	__ccovbit1_40& (0+7)	; OFFSET
  8798  0844  00000000           	ddw	0	; Reserved
  8799  0848  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8800  084C  00000002           	ddw	2	; NUM_RANGES
  8801  0850  0000041C           	ddw	__ccov122_start_blk1	; block 1 START_ADDR
  8802  0854  00000422           	ddw	__ccov122_end_blk1	; block 1 END_ADDR
  8803  0858  00000418           	ddw	_go_close_short	; block 0 START_ADDR
  8804  085C  0000041C           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  8805                           
  8806                           ; Function: go_close_short, coverage: 2,1,0
  8807  0860  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8808  0864  00000031           	ddw	__ccovbit2_41/(0+8)	; CC_ADDR
  8809  0868  00000001           	ddw	1	; NUM_POINTS
  8810  086C  00000005           	ddw	__ccovbit2_41& (0+7)	; OFFSET
  8811  0870  00000000           	ddw	0	; Reserved
  8812  0874  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8813  0878  00000003           	ddw	3	; NUM_RANGES
  8814  087C  00000422           	ddw	__ccov123_start_blk2	; block 2 START_ADDR
  8815  0880  00000427           	ddw	__ccov123_end_blk2	; block 2 END_ADDR
  8816  0884  0000041C           	ddw	__ccov122_start_blk1	; block 1 START_ADDR
  8817  0888  00000422           	ddw	__ccov122_end_blk1	; block 1 END_ADDR
  8818  088C  00000418           	ddw	_go_close_short	; block 0 START_ADDR
  8819  0890  0000041C           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  8820                           
  8821                           ; Function: go_close_short, coverage: 4,3,2,1,0
  8822  0894  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8823  0898  00000031           	ddw	__ccovbit4_42/(0+8)	; CC_ADDR
  8824  089C  00000001           	ddw	1	; NUM_POINTS
  8825  08A0  00000004           	ddw	__ccovbit4_42& (0+7)	; OFFSET
  8826  08A4  00000000           	ddw	0	; Reserved
  8827  08A8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8828  08AC  00000005           	ddw	5	; NUM_RANGES
  8829  08B0  0000042C           	ddw	__ccov125_start_blk4	; block 4 START_ADDR
  8830  08B4  0000043F           	ddw	__ccov125_end_blk4	; block 4 END_ADDR
  8831  08B8  00000427           	ddw	__ccov124_start_blk3	; block 3 START_ADDR
  8832  08BC  0000042C           	ddw	__ccov124_end_blk3	; block 3 END_ADDR
  8833  08C0  00000422           	ddw	__ccov123_start_blk2	; block 2 START_ADDR
  8834  08C4  00000427           	ddw	__ccov123_end_blk2	; block 2 END_ADDR
  8835  08C8  0000041C           	ddw	__ccov122_start_blk1	; block 1 START_ADDR
  8836  08CC  00000422           	ddw	__ccov122_end_blk1	; block 1 END_ADDR
  8837  08D0  00000418           	ddw	_go_close_short	; block 0 START_ADDR
  8838  08D4  0000041C           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  8839                           
  8840                           ; Function: go_close_short, coverage: 6,0
  8841  08D8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8842  08DC  00000031           	ddw	__ccovbit6_43/(0+8)	; CC_ADDR
  8843  08E0  00000001           	ddw	1	; NUM_POINTS
  8844  08E4  00000003           	ddw	__ccovbit6_43& (0+7)	; OFFSET
  8845  08E8  00000000           	ddw	0	; Reserved
  8846  08EC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8847  08F0  00000002           	ddw	2	; NUM_RANGES
  8848  08F4  0000043F           	ddw	__ccov126_start_blk6	; block 6 START_ADDR
  8849  08F8  00000442           	ddw	__end_of_go_close_short	; block 6 END_ADDR
  8850  08FC  00000418           	ddw	_go_close_short	; block 0 START_ADDR
  8851  0900  0000041C           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  8852                           
  8853                           ; Function: go_open, coverage: 1,0
  8854  0904  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8855  0908  00000031           	ddw	__ccovbit1_44/(0+8)	; CC_ADDR
  8856  090C  00000001           	ddw	1	; NUM_POINTS
  8857  0910  00000002           	ddw	__ccovbit1_44& (0+7)	; OFFSET
  8858  0914  00000000           	ddw	0	; Reserved
  8859  0918  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8860  091C  00000002           	ddw	2	; NUM_RANGES
  8861  0920  000004D6           	ddw	__ccov128_start_blk1	; block 1 START_ADDR
  8862  0924  000004DC           	ddw	__ccov128_end_blk1	; block 1 END_ADDR
  8863  0928  000004D2           	ddw	_go_open	; block 0 START_ADDR
  8864  092C  000004D6           	ddw	__ccov127_end_blk0	; block 0 END_ADDR
  8865                           
  8866                           ; Function: go_open, coverage: 2,1,0
  8867  0930  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8868  0934  00000031           	ddw	__ccovbit2_45/(0+8)	; CC_ADDR
  8869  0938  00000001           	ddw	1	; NUM_POINTS
  8870  093C  00000001           	ddw	__ccovbit2_45& (0+7)	; OFFSET
  8871  0940  00000000           	ddw	0	; Reserved
  8872  0944  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8873  0948  00000003           	ddw	3	; NUM_RANGES
  8874  094C  000004DC           	ddw	__ccov129_start_blk2	; block 2 START_ADDR
  8875  0950  000004E1           	ddw	__ccov129_end_blk2	; block 2 END_ADDR
  8876  0954  000004D6           	ddw	__ccov128_start_blk1	; block 1 START_ADDR
  8877  0958  000004DC           	ddw	__ccov128_end_blk1	; block 1 END_ADDR
  8878  095C  000004D2           	ddw	_go_open	; block 0 START_ADDR
  8879  0960  000004D6           	ddw	__ccov127_end_blk0	; block 0 END_ADDR
  8880                           
  8881                           ; Function: go_open, coverage: 5,4,3,2,1,0
  8882  0964  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8883  0968  00000031           	ddw	__ccovbit5_46/(0+8)	; CC_ADDR
  8884  096C  00000001           	ddw	1	; NUM_POINTS
  8885  0970  00000000           	ddw	__ccovbit5_46& (0+7)	; OFFSET
  8886  0974  00000000           	ddw	0	; Reserved
  8887  0978  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8888  097C  00000006           	ddw	6	; NUM_RANGES
  8889  0980  000004EA           	ddw	__ccov132_start_blk5	; block 5 START_ADDR
  8890  0984  000004EC           	ddw	__ccov132_end_blk5	; block 5 END_ADDR
  8891  0988  000004E6           	ddw	__ccov131_start_blk4	; block 4 START_ADDR
  8892  098C  000004EA           	ddw	__ccov131_end_blk4	; block 4 END_ADDR
  8893  0990  000004E1           	ddw	__ccov130_start_blk3	; block 3 START_ADDR
  8894  0994  000004E6           	ddw	__ccov130_end_blk3	; block 3 END_ADDR
  8895  0998  000004DC           	ddw	__ccov129_start_blk2	; block 2 START_ADDR
  8896  099C  000004E1           	ddw	__ccov129_end_blk2	; block 2 END_ADDR
  8897  09A0  000004D6           	ddw	__ccov128_start_blk1	; block 1 START_ADDR
  8898  09A4  000004DC           	ddw	__ccov128_end_blk1	; block 1 END_ADDR
  8899  09A8  000004D2           	ddw	_go_open	; block 0 START_ADDR
  8900  09AC  000004D6           	ddw	__ccov127_end_blk0	; block 0 END_ADDR
  8901                           
  8902                           ; Function: go_open, coverage: 8,0
  8903  09B0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8904  09B4  00000030           	ddw	__ccovbit8_47/(0+8)	; CC_ADDR
  8905  09B8  00000001           	ddw	1	; NUM_POINTS
  8906  09BC  00000007           	ddw	__ccovbit8_47& (0+7)	; OFFSET
  8907  09C0  00000000           	ddw	0	; Reserved
  8908  09C4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8909  09C8  00000002           	ddw	2	; NUM_RANGES
  8910  09CC  000004EC           	ddw	__ccov133_start_blk8	; block 8 START_ADDR
  8911  09D0  000004EF           	ddw	__end_of_go_open	; block 8 END_ADDR
  8912  09D4  000004D2           	ddw	_go_open	; block 0 START_ADDR
  8913  09D8  000004D6           	ddw	__ccov127_end_blk0	; block 0 END_ADDR
  8914                           
  8915                           ; Function: go_close_alt, coverage: 1,0
  8916  09DC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8917  09E0  00000030           	ddw	__ccovbit1_48/(0+8)	; CC_ADDR
  8918  09E4  00000001           	ddw	1	; NUM_POINTS
  8919  09E8  00000006           	ddw	__ccovbit1_48& (0+7)	; OFFSET
  8920  09EC  00000000           	ddw	0	; Reserved
  8921  09F0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8922  09F4  00000002           	ddw	2	; NUM_RANGES
  8923  09F8  000005CC           	ddw	__ccov135_start_blk1	; block 1 START_ADDR
  8924  09FC  000005D2           	ddw	__ccov135_end_blk1	; block 1 END_ADDR
  8925  0A00  000005C8           	ddw	_go_close_alt	; block 0 START_ADDR
  8926  0A04  000005CC           	ddw	__ccov134_end_blk0	; block 0 END_ADDR
  8927                           
  8928                           ; Function: go_close_alt, coverage: 2,0
  8929  0A08  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8930  0A0C  00000030           	ddw	__ccovbit2_49/(0+8)	; CC_ADDR
  8931  0A10  00000001           	ddw	1	; NUM_POINTS
  8932  0A14  00000005           	ddw	__ccovbit2_49& (0+7)	; OFFSET
  8933  0A18  00000000           	ddw	0	; Reserved
  8934  0A1C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8935  0A20  00000002           	ddw	2	; NUM_RANGES
  8936  0A24  000005D2           	ddw	__ccov136_start_blk2	; block 2 START_ADDR
  8937  0A28  000005D8           	ddw	__ccov136_end_blk2	; block 2 END_ADDR
  8938  0A2C  000005C8           	ddw	_go_close_alt	; block 0 START_ADDR
  8939  0A30  000005CC           	ddw	__ccov134_end_blk0	; block 0 END_ADDR
  8940                           
  8941                           ; Function: go_close_alt, coverage: 3,0
  8942  0A34  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8943  0A38  00000030           	ddw	__ccovbit3_50/(0+8)	; CC_ADDR
  8944  0A3C  00000001           	ddw	1	; NUM_POINTS
  8945  0A40  00000004           	ddw	__ccovbit3_50& (0+7)	; OFFSET
  8946  0A44  00000000           	ddw	0	; Reserved
  8947  0A48  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8948  0A4C  00000002           	ddw	2	; NUM_RANGES
  8949  0A50  000005D8           	ddw	__ccov137_start_blk3	; block 3 START_ADDR
  8950  0A54  000005DD           	ddw	__ccov137_end_blk3	; block 3 END_ADDR
  8951  0A58  000005C8           	ddw	_go_close_alt	; block 0 START_ADDR
  8952  0A5C  000005CC           	ddw	__ccov134_end_blk0	; block 0 END_ADDR
  8953                           
  8954                           ; Function: go_close_alt, coverage: 5,0
  8955  0A60  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8956  0A64  00000030           	ddw	__ccovbit5_51/(0+8)	; CC_ADDR
  8957  0A68  00000001           	ddw	1	; NUM_POINTS
  8958  0A6C  00000003           	ddw	__ccovbit5_51& (0+7)	; OFFSET
  8959  0A70  00000000           	ddw	0	; Reserved
  8960  0A74  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8961  0A78  00000002           	ddw	2	; NUM_RANGES
  8962  0A7C  000005DD           	ddw	__ccov138_start_blk5	; block 5 START_ADDR
  8963  0A80  000005DF           	ddw	__end_of_go_close_alt	; block 5 END_ADDR
  8964  0A84  000005C8           	ddw	_go_close_alt	; block 0 START_ADDR
  8965  0A88  000005CC           	ddw	__ccov134_end_blk0	; block 0 END_ADDR
  8966                           
  8967                           ; Function: go_open_alt, coverage: 1,0
  8968  0A8C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8969  0A90  00000030           	ddw	__ccovbit1_52/(0+8)	; CC_ADDR
  8970  0A94  00000001           	ddw	1	; NUM_POINTS
  8971  0A98  00000002           	ddw	__ccovbit1_52& (0+7)	; OFFSET
  8972  0A9C  00000000           	ddw	0	; Reserved
  8973  0AA0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8974  0AA4  00000002           	ddw	2	; NUM_RANGES
  8975  0AA8  0000060A           	ddw	__ccov140_start_blk1	; block 1 START_ADDR
  8976  0AAC  00000610           	ddw	__ccov140_end_blk1	; block 1 END_ADDR
  8977  0AB0  00000606           	ddw	_go_open_alt	; block 0 START_ADDR
  8978  0AB4  0000060A           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  8979                           
  8980                           ; Function: go_open_alt, coverage: 2,1,0
  8981  0AB8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8982  0ABC  00000030           	ddw	__ccovbit2_53/(0+8)	; CC_ADDR
  8983  0AC0  00000001           	ddw	1	; NUM_POINTS
  8984  0AC4  00000001           	ddw	__ccovbit2_53& (0+7)	; OFFSET
  8985  0AC8  00000000           	ddw	0	; Reserved
  8986  0ACC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8987  0AD0  00000003           	ddw	3	; NUM_RANGES
  8988  0AD4  00000610           	ddw	__ccov141_start_blk2	; block 2 START_ADDR
  8989  0AD8  00000615           	ddw	__ccov141_end_blk2	; block 2 END_ADDR
  8990  0ADC  0000060A           	ddw	__ccov140_start_blk1	; block 1 START_ADDR
  8991  0AE0  00000610           	ddw	__ccov140_end_blk1	; block 1 END_ADDR
  8992  0AE4  00000606           	ddw	_go_open_alt	; block 0 START_ADDR
  8993  0AE8  0000060A           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  8994                           
  8995                           ; Function: go_open_alt, coverage: 4,0
  8996  0AEC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8997  0AF0  00000030           	ddw	__ccovbit4_54/(0+8)	; CC_ADDR
  8998  0AF4  00000001           	ddw	1	; NUM_POINTS
  8999  0AF8  00000000           	ddw	__ccovbit4_54& (0+7)	; OFFSET
  9000  0AFC  00000000           	ddw	0	; Reserved
  9001  0B00  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9002  0B04  00000002           	ddw	2	; NUM_RANGES
  9003  0B08  00000615           	ddw	__ccov142_start_blk4	; block 4 START_ADDR
  9004  0B0C  00000618           	ddw	__end_of_go_open_alt	; block 4 END_ADDR
  9005  0B10  00000606           	ddw	_go_open_alt	; block 0 START_ADDR
  9006  0B14  0000060A           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  9007                           
  9008                           ; Function: rele_off, coverage: 1,0
  9009  0B18  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9010  0B1C  0000002F           	ddw	__ccovbit1_55/(0+8)	; CC_ADDR
  9011  0B20  00000001           	ddw	1	; NUM_POINTS
  9012  0B24  00000007           	ddw	__ccovbit1_55& (0+7)	; OFFSET
  9013  0B28  00000000           	ddw	0	; Reserved
  9014  0B2C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9015  0B30  00000002           	ddw	2	; NUM_RANGES
  9016  0B34  000005BA           	ddw	__ccov144_start_blk1	; block 1 START_ADDR
  9017  0B38  000005BE           	ddw	__ccov144_end_blk1	; block 1 END_ADDR
  9018  0B3C  000005B1           	ddw	_rele_off	; block 0 START_ADDR
  9019  0B40  000005BA           	ddw	__ccov143_end_blk0	; block 0 END_ADDR
  9020                           
  9021                           ; Function: rele_off, coverage: 2,0
  9022  0B44  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9023  0B48  0000002F           	ddw	__ccovbit2_56/(0+8)	; CC_ADDR
  9024  0B4C  00000001           	ddw	1	; NUM_POINTS
  9025  0B50  00000006           	ddw	__ccovbit2_56& (0+7)	; OFFSET
  9026  0B54  00000000           	ddw	0	; Reserved
  9027  0B58  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9028  0B5C  00000002           	ddw	2	; NUM_RANGES
  9029  0B60  000005BE           	ddw	__ccov145_start_blk2	; block 2 START_ADDR
  9030  0B64  000005C1           	ddw	__ccov145_end_blk2	; block 2 END_ADDR
  9031  0B68  000005B1           	ddw	_rele_off	; block 0 START_ADDR
  9032  0B6C  000005BA           	ddw	__ccov143_end_blk0	; block 0 END_ADDR
  9033                           
  9034                           ; Function: rele_off, coverage: 5,4,3,0
  9035  0B70  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9036  0B74  0000002F           	ddw	__ccovbit5_57/(0+8)	; CC_ADDR
  9037  0B78  00000001           	ddw	1	; NUM_POINTS
  9038  0B7C  00000005           	ddw	__ccovbit5_57& (0+7)	; OFFSET
  9039  0B80  00000000           	ddw	0	; Reserved
  9040  0B84  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9041  0B88  00000004           	ddw	4	; NUM_RANGES
  9042  0B8C  000005C6           	ddw	__ccov148_start_blk5	; block 5 START_ADDR
  9043  0B90  000005C8           	ddw	__end_of_rele_off	; block 5 END_ADDR
  9044  0B94  000005C2           	ddw	__ccov147_start_blk4	; block 4 START_ADDR
  9045  0B98  000005C6           	ddw	__ccov147_end_blk4	; block 4 END_ADDR
  9046  0B9C  000005C1           	ddw	__ccov146_start_blk3	; block 3 START_ADDR
  9047  0BA0  000005C2           	ddw	__ccov146_end_blk3	; block 3 END_ADDR
  9048  0BA4  000005B1           	ddw	_rele_off	; block 0 START_ADDR
  9049  0BA8  000005BA           	ddw	__ccov143_end_blk0	; block 0 END_ADDR
  9050                           
  9051                           ; Function: close, coverage: 1,0
  9052  0BAC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9053  0BB0  0000002F           	ddw	__ccovbit1_58/(0+8)	; CC_ADDR
  9054  0BB4  00000001           	ddw	1	; NUM_POINTS
  9055  0BB8  00000004           	ddw	__ccovbit1_58& (0+7)	; OFFSET
  9056  0BBC  00000000           	ddw	0	; Reserved
  9057  0BC0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9058  0BC4  00000002           	ddw	2	; NUM_RANGES
  9059  0BC8  000004B5           	ddw	__ccov150_start_blk1	; block 1 START_ADDR
  9060  0BCC  000004BB           	ddw	__ccov150_end_blk1	; block 1 END_ADDR
  9061  0BD0  000004B1           	ddw	_close	; block 0 START_ADDR
  9062  0BD4  000004B5           	ddw	__ccov149_end_blk0	; block 0 END_ADDR
  9063                           
  9064                           ; Function: close, coverage: 3,2,0
  9065  0BD8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9066  0BDC  0000002F           	ddw	__ccovbit3_59/(0+8)	; CC_ADDR
  9067  0BE0  00000001           	ddw	1	; NUM_POINTS
  9068  0BE4  00000003           	ddw	__ccovbit3_59& (0+7)	; OFFSET
  9069  0BE8  00000000           	ddw	0	; Reserved
  9070  0BEC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9071  0BF0  00000003           	ddw	3	; NUM_RANGES
  9072  0BF4  000004BF           	ddw	__ccov152_start_blk3	; block 3 START_ADDR
  9073  0BF8  000004C5           	ddw	__ccov152_end_blk3	; block 3 END_ADDR
  9074  0BFC  000004BB           	ddw	__ccov151_start_blk2	; block 2 START_ADDR
  9075  0C00  000004BF           	ddw	__ccov151_end_blk2	; block 2 END_ADDR
  9076  0C04  000004B1           	ddw	_close	; block 0 START_ADDR
  9077  0C08  000004B5           	ddw	__ccov149_end_blk0	; block 0 END_ADDR
  9078                           
  9079                           ; Function: close, coverage: 4,2,0
  9080  0C0C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9081  0C10  0000002F           	ddw	__ccovbit4_60/(0+8)	; CC_ADDR
  9082  0C14  00000001           	ddw	1	; NUM_POINTS
  9083  0C18  00000002           	ddw	__ccovbit4_60& (0+7)	; OFFSET
  9084  0C1C  00000000           	ddw	0	; Reserved
  9085  0C20  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9086  0C24  00000003           	ddw	3	; NUM_RANGES
  9087  0C28  000004C5           	ddw	__ccov153_start_blk4	; block 4 START_ADDR
  9088  0C2C  000004CB           	ddw	__ccov153_end_blk4	; block 4 END_ADDR
  9089  0C30  000004BB           	ddw	__ccov151_start_blk2	; block 2 START_ADDR
  9090  0C34  000004BF           	ddw	__ccov151_end_blk2	; block 2 END_ADDR
  9091  0C38  000004B1           	ddw	_close	; block 0 START_ADDR
  9092  0C3C  000004B5           	ddw	__ccov149_end_blk0	; block 0 END_ADDR
  9093                           
  9094                           ; Function: close, coverage: 5,4,2,0
  9095  0C40  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9096  0C44  0000002F           	ddw	__ccovbit5_61/(0+8)	; CC_ADDR
  9097  0C48  00000001           	ddw	1	; NUM_POINTS
  9098  0C4C  00000001           	ddw	__ccovbit5_61& (0+7)	; OFFSET
  9099  0C50  00000000           	ddw	0	; Reserved
  9100  0C54  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9101  0C58  00000004           	ddw	4	; NUM_RANGES
  9102  0C5C  000004CB           	ddw	__ccov154_start_blk5	; block 5 START_ADDR
  9103  0C60  000004CF           	ddw	__ccov154_end_blk5	; block 5 END_ADDR
  9104  0C64  000004C5           	ddw	__ccov153_start_blk4	; block 4 START_ADDR
  9105  0C68  000004CB           	ddw	__ccov153_end_blk4	; block 4 END_ADDR
  9106  0C6C  000004BB           	ddw	__ccov151_start_blk2	; block 2 START_ADDR
  9107  0C70  000004BF           	ddw	__ccov151_end_blk2	; block 2 END_ADDR
  9108  0C74  000004B1           	ddw	_close	; block 0 START_ADDR
  9109  0C78  000004B5           	ddw	__ccov149_end_blk0	; block 0 END_ADDR
  9110                           
  9111                           ; Function: close, coverage: 9,0
  9112  0C7C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9113  0C80  0000002F           	ddw	__ccovbit9_62/(0+8)	; CC_ADDR
  9114  0C84  00000001           	ddw	1	; NUM_POINTS
  9115  0C88  00000000           	ddw	__ccovbit9_62& (0+7)	; OFFSET
  9116  0C8C  00000000           	ddw	0	; Reserved
  9117  0C90  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9118  0C94  00000002           	ddw	2	; NUM_RANGES
  9119  0C98  000004CF           	ddw	__ccov155_start_blk9	; block 9 START_ADDR
  9120  0C9C  000004D2           	ddw	__end_of_close	; block 9 END_ADDR
  9121  0CA0  000004B1           	ddw	_close	; block 0 START_ADDR
  9122  0CA4  000004B5           	ddw	__ccov149_end_blk0	; block 0 END_ADDR
  9123                           
  9124                           ; Function: open, coverage: 1,0
  9125  0CA8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9126  0CAC  0000002E           	ddw	__ccovbit1_63/(0+8)	; CC_ADDR
  9127  0CB0  00000001           	ddw	1	; NUM_POINTS
  9128  0CB4  00000007           	ddw	__ccovbit1_63& (0+7)	; OFFSET
  9129  0CB8  00000000           	ddw	0	; Reserved
  9130  0CBC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9131  0CC0  00000002           	ddw	2	; NUM_RANGES
  9132  0CC4  00000494           	ddw	__ccov157_start_blk1	; block 1 START_ADDR
  9133  0CC8  0000049A           	ddw	__ccov157_end_blk1	; block 1 END_ADDR
  9134  0CCC  00000490           	ddw	_open	; block 0 START_ADDR
  9135  0CD0  00000494           	ddw	__ccov156_end_blk0	; block 0 END_ADDR
  9136                           
  9137                           ; Function: open, coverage: 3,2,0
  9138  0CD4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9139  0CD8  0000002E           	ddw	__ccovbit3_64/(0+8)	; CC_ADDR
  9140  0CDC  00000001           	ddw	1	; NUM_POINTS
  9141  0CE0  00000006           	ddw	__ccovbit3_64& (0+7)	; OFFSET
  9142  0CE4  00000000           	ddw	0	; Reserved
  9143  0CE8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9144  0CEC  00000003           	ddw	3	; NUM_RANGES
  9145  0CF0  0000049E           	ddw	__ccov159_start_blk3	; block 3 START_ADDR
  9146  0CF4  000004A4           	ddw	__ccov159_end_blk3	; block 3 END_ADDR
  9147  0CF8  0000049A           	ddw	__ccov158_start_blk2	; block 2 START_ADDR
  9148  0CFC  0000049E           	ddw	__ccov158_end_blk2	; block 2 END_ADDR
  9149  0D00  00000490           	ddw	_open	; block 0 START_ADDR
  9150  0D04  00000494           	ddw	__ccov156_end_blk0	; block 0 END_ADDR
  9151                           
  9152                           ; Function: open, coverage: 4,2,0
  9153  0D08  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9154  0D0C  0000002E           	ddw	__ccovbit4_65/(0+8)	; CC_ADDR
  9155  0D10  00000001           	ddw	1	; NUM_POINTS
  9156  0D14  00000005           	ddw	__ccovbit4_65& (0+7)	; OFFSET
  9157  0D18  00000000           	ddw	0	; Reserved
  9158  0D1C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9159  0D20  00000003           	ddw	3	; NUM_RANGES
  9160  0D24  000004A4           	ddw	__ccov160_start_blk4	; block 4 START_ADDR
  9161  0D28  000004AA           	ddw	__ccov160_end_blk4	; block 4 END_ADDR
  9162  0D2C  0000049A           	ddw	__ccov158_start_blk2	; block 2 START_ADDR
  9163  0D30  0000049E           	ddw	__ccov158_end_blk2	; block 2 END_ADDR
  9164  0D34  00000490           	ddw	_open	; block 0 START_ADDR
  9165  0D38  00000494           	ddw	__ccov156_end_blk0	; block 0 END_ADDR
  9166                           
  9167                           ; Function: open, coverage: 5,4,2,0
  9168  0D3C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9169  0D40  0000002E           	ddw	__ccovbit5_66/(0+8)	; CC_ADDR
  9170  0D44  00000001           	ddw	1	; NUM_POINTS
  9171  0D48  00000004           	ddw	__ccovbit5_66& (0+7)	; OFFSET
  9172  0D4C  00000000           	ddw	0	; Reserved
  9173  0D50  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9174  0D54  00000004           	ddw	4	; NUM_RANGES
  9175  0D58  000004AA           	ddw	__ccov161_start_blk5	; block 5 START_ADDR
  9176  0D5C  000004AE           	ddw	__ccov161_end_blk5	; block 5 END_ADDR
  9177  0D60  000004A4           	ddw	__ccov160_start_blk4	; block 4 START_ADDR
  9178  0D64  000004AA           	ddw	__ccov160_end_blk4	; block 4 END_ADDR
  9179  0D68  0000049A           	ddw	__ccov158_start_blk2	; block 2 START_ADDR
  9180  0D6C  0000049E           	ddw	__ccov158_end_blk2	; block 2 END_ADDR
  9181  0D70  00000490           	ddw	_open	; block 0 START_ADDR
  9182  0D74  00000494           	ddw	__ccov156_end_blk0	; block 0 END_ADDR
  9183                           
  9184                           ; Function: open, coverage: 9,0
  9185  0D78  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9186  0D7C  0000002E           	ddw	__ccovbit9_67/(0+8)	; CC_ADDR
  9187  0D80  00000001           	ddw	1	; NUM_POINTS
  9188  0D84  00000003           	ddw	__ccovbit9_67& (0+7)	; OFFSET
  9189  0D88  00000000           	ddw	0	; Reserved
  9190  0D8C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9191  0D90  00000002           	ddw	2	; NUM_RANGES
  9192  0D94  000004AE           	ddw	__ccov162_start_blk9	; block 9 START_ADDR
  9193  0D98  000004B1           	ddw	__end_of_open	; block 9 END_ADDR
  9194  0D9C  00000490           	ddw	_open	; block 0 START_ADDR
  9195  0DA0  00000494           	ddw	__ccov156_end_blk0	; block 0 END_ADDR
  9196                           
  9197                           ; Function: rele_tick, coverage: 1,0
  9198  0DA4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9199  0DA8  0000002E           	ddw	__ccovbit1_68/(0+8)	; CC_ADDR
  9200  0DAC  00000001           	ddw	1	; NUM_POINTS
  9201  0DB0  00000002           	ddw	__ccovbit1_68& (0+7)	; OFFSET
  9202  0DB4  00000000           	ddw	0	; Reserved
  9203  0DB8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9204  0DBC  00000002           	ddw	2	; NUM_RANGES
  9205  0DC0  0000019C           	ddw	__ccov164_start_blk1	; block 1 START_ADDR
  9206  0DC4  000001A3           	ddw	__ccov164_end_blk1	; block 1 END_ADDR
  9207  0DC8  00000198           	ddw	_rele_tick	; block 0 START_ADDR
  9208  0DCC  0000019C           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  9209                           
  9210                           ; Function: rele_tick, coverage: 4,3,0
  9211  0DD0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9212  0DD4  0000002E           	ddw	__ccovbit4_69/(0+8)	; CC_ADDR
  9213  0DD8  00000001           	ddw	1	; NUM_POINTS
  9214  0DDC  00000001           	ddw	__ccovbit4_69& (0+7)	; OFFSET
  9215  0DE0  00000000           	ddw	0	; Reserved
  9216  0DE4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9217  0DE8  00000003           	ddw	3	; NUM_RANGES
  9218  0DEC  000001A7           	ddw	__ccov166_start_blk4	; block 4 START_ADDR
  9219  0DF0  000001AF           	ddw	__ccov166_end_blk4	; block 4 END_ADDR
  9220  0DF4  000001A3           	ddw	__ccov165_start_blk3	; block 3 START_ADDR
  9221  0DF8  000001A7           	ddw	__ccov165_end_blk3	; block 3 END_ADDR
  9222  0DFC  00000198           	ddw	_rele_tick	; block 0 START_ADDR
  9223  0E00  0000019C           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  9224                           
  9225                           ; Function: rele_tick, coverage: 6,5,4,3,0
  9226  0E04  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9227  0E08  0000002E           	ddw	__ccovbit6_70/(0+8)	; CC_ADDR
  9228  0E0C  00000001           	ddw	1	; NUM_POINTS
  9229  0E10  00000000           	ddw	__ccovbit6_70& (0+7)	; OFFSET
  9230  0E14  00000000           	ddw	0	; Reserved
  9231  0E18  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9232  0E1C  00000005           	ddw	5	; NUM_RANGES
  9233  0E20  000001B3           	ddw	__ccov168_start_blk6	; block 6 START_ADDR
  9234  0E24  000001BA           	ddw	__ccov168_end_blk6	; block 6 END_ADDR
  9235  0E28  000001AF           	ddw	__ccov167_start_blk5	; block 5 START_ADDR
  9236  0E2C  000001B3           	ddw	__ccov167_end_blk5	; block 5 END_ADDR
  9237  0E30  000001A7           	ddw	__ccov166_start_blk4	; block 4 START_ADDR
  9238  0E34  000001AF           	ddw	__ccov166_end_blk4	; block 4 END_ADDR
  9239  0E38  000001A3           	ddw	__ccov165_start_blk3	; block 3 START_ADDR
  9240  0E3C  000001A7           	ddw	__ccov165_end_blk3	; block 3 END_ADDR
  9241  0E40  00000198           	ddw	_rele_tick	; block 0 START_ADDR
  9242  0E44  0000019C           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  9243                           
  9244                           ; Function: rele_tick, coverage: 7,6,5,4,3,0
  9245  0E48  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9246  0E4C  0000002D           	ddw	__ccovbit7_71/(0+8)	; CC_ADDR
  9247  0E50  00000001           	ddw	1	; NUM_POINTS
  9248  0E54  00000007           	ddw	__ccovbit7_71& (0+7)	; OFFSET
  9249  0E58  00000000           	ddw	0	; Reserved
  9250  0E5C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9251  0E60  00000006           	ddw	6	; NUM_RANGES
  9252  0E64  000001BA           	ddw	__ccov169_start_blk7	; block 7 START_ADDR
  9253  0E68  000001BE           	ddw	__ccov169_end_blk7	; block 7 END_ADDR
  9254  0E6C  000001B3           	ddw	__ccov168_start_blk6	; block 6 START_ADDR
  9255  0E70  000001BA           	ddw	__ccov168_end_blk6	; block 6 END_ADDR
  9256  0E74  000001AF           	ddw	__ccov167_start_blk5	; block 5 START_ADDR
  9257  0E78  000001B3           	ddw	__ccov167_end_blk5	; block 5 END_ADDR
  9258  0E7C  000001A7           	ddw	__ccov166_start_blk4	; block 4 START_ADDR
  9259  0E80  000001AF           	ddw	__ccov166_end_blk4	; block 4 END_ADDR
  9260  0E84  000001A3           	ddw	__ccov165_start_blk3	; block 3 START_ADDR
  9261  0E88  000001A7           	ddw	__ccov165_end_blk3	; block 3 END_ADDR
  9262  0E8C  00000198           	ddw	_rele_tick	; block 0 START_ADDR
  9263  0E90  0000019C           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  9264                           
  9265                           ; Function: rele_tick, coverage: 10,3,0
  9266  0E94  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9267  0E98  0000002D           	ddw	__ccovbit10_72/(0+8)	; CC_ADDR
  9268  0E9C  00000001           	ddw	1	; NUM_POINTS
  9269  0EA0  00000006           	ddw	__ccovbit10_72& (0+7)	; OFFSET
  9270  0EA4  00000000           	ddw	0	; Reserved
  9271  0EA8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9272  0EAC  00000003           	ddw	3	; NUM_RANGES
  9273  0EB0  000001BE           	ddw	__ccov170_start_blk10	; block 10 START_ADDR
  9274  0EB4  000001C4           	ddw	__ccov170_end_blk10	; block 10 END_ADDR
  9275  0EB8  000001A3           	ddw	__ccov165_start_blk3	; block 3 START_ADDR
  9276  0EBC  000001A7           	ddw	__ccov165_end_blk3	; block 3 END_ADDR
  9277  0EC0  00000198           	ddw	_rele_tick	; block 0 START_ADDR
  9278  0EC4  0000019C           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  9279                           
  9280                           ; Function: rele_tick, coverage: 14,13,12,11,10,3,0
  9281  0EC8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9282  0ECC  0000002D           	ddw	__ccovbit14_73/(0+8)	; CC_ADDR
  9283  0ED0  00000001           	ddw	1	; NUM_POINTS
  9284  0ED4  00000005           	ddw	__ccovbit14_73& (0+7)	; OFFSET
  9285  0ED8  00000000           	ddw	0	; Reserved
  9286  0EDC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9287  0EE0  00000007           	ddw	7	; NUM_RANGES
  9288  0EE4  000001D1           	ddw	__ccov174_start_blk14	; block 14 START_ADDR
  9289  0EE8  000001D7           	ddw	__ccov174_end_blk14	; block 14 END_ADDR
  9290  0EEC  000001D0           	ddw	__ccov173_start_blk13	; block 13 START_ADDR
  9291  0EF0  000001D1           	ddw	__ccov173_end_blk13	; block 13 END_ADDR
  9292  0EF4  000001CA           	ddw	__ccov172_start_blk12	; block 12 START_ADDR
  9293  0EF8  000001D0           	ddw	__ccov172_end_blk12	; block 12 END_ADDR
  9294  0EFC  000001C4           	ddw	__ccov171_start_blk11	; block 11 START_ADDR
  9295  0F00  000001CA           	ddw	__ccov171_end_blk11	; block 11 END_ADDR
  9296  0F04  000001BE           	ddw	__ccov170_start_blk10	; block 10 START_ADDR
  9297  0F08  000001C4           	ddw	__ccov170_end_blk10	; block 10 END_ADDR
  9298  0F0C  000001A3           	ddw	__ccov165_start_blk3	; block 3 START_ADDR
  9299  0F10  000001A7           	ddw	__ccov165_end_blk3	; block 3 END_ADDR
  9300  0F14  00000198           	ddw	_rele_tick	; block 0 START_ADDR
  9301  0F18  0000019C           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  9302                           
  9303                           ; Function: rele_tick, coverage: 15,12,11,10,3,0
  9304  0F1C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9305  0F20  0000002D           	ddw	__ccovbit15_74/(0+8)	; CC_ADDR
  9306  0F24  00000001           	ddw	1	; NUM_POINTS
  9307  0F28  00000004           	ddw	__ccovbit15_74& (0+7)	; OFFSET
  9308  0F2C  00000000           	ddw	0	; Reserved
  9309  0F30  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9310  0F34  00000006           	ddw	6	; NUM_RANGES
  9311  0F38  000001D7           	ddw	__ccov175_start_blk15	; block 15 START_ADDR
  9312  0F3C  000001DA           	ddw	__ccov175_end_blk15	; block 15 END_ADDR
  9313  0F40  000001CA           	ddw	__ccov172_start_blk12	; block 12 START_ADDR
  9314  0F44  000001D0           	ddw	__ccov172_end_blk12	; block 12 END_ADDR
  9315  0F48  000001C4           	ddw	__ccov171_start_blk11	; block 11 START_ADDR
  9316  0F4C  000001CA           	ddw	__ccov171_end_blk11	; block 11 END_ADDR
  9317  0F50  000001BE           	ddw	__ccov170_start_blk10	; block 10 START_ADDR
  9318  0F54  000001C4           	ddw	__ccov170_end_blk10	; block 10 END_ADDR
  9319  0F58  000001A3           	ddw	__ccov165_start_blk3	; block 3 START_ADDR
  9320  0F5C  000001A7           	ddw	__ccov165_end_blk3	; block 3 END_ADDR
  9321  0F60  00000198           	ddw	_rele_tick	; block 0 START_ADDR
  9322  0F64  0000019C           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  9323                           
  9324                           ; Function: rele_tick, coverage: 18,11,10,3,0
  9325  0F68  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9326  0F6C  0000002D           	ddw	__ccovbit18_75/(0+8)	; CC_ADDR
  9327  0F70  00000001           	ddw	1	; NUM_POINTS
  9328  0F74  00000003           	ddw	__ccovbit18_75& (0+7)	; OFFSET
  9329  0F78  00000000           	ddw	0	; Reserved
  9330  0F7C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9331  0F80  00000005           	ddw	5	; NUM_RANGES
  9332  0F84  000001DA           	ddw	__ccov176_start_blk18	; block 18 START_ADDR
  9333  0F88  000001DF           	ddw	__ccov176_end_blk18	; block 18 END_ADDR
  9334  0F8C  000001C4           	ddw	__ccov171_start_blk11	; block 11 START_ADDR
  9335  0F90  000001CA           	ddw	__ccov171_end_blk11	; block 11 END_ADDR
  9336  0F94  000001BE           	ddw	__ccov170_start_blk10	; block 10 START_ADDR
  9337  0F98  000001C4           	ddw	__ccov170_end_blk10	; block 10 END_ADDR
  9338  0F9C  000001A3           	ddw	__ccov165_start_blk3	; block 3 START_ADDR
  9339  0FA0  000001A7           	ddw	__ccov165_end_blk3	; block 3 END_ADDR
  9340  0FA4  00000198           	ddw	_rele_tick	; block 0 START_ADDR
  9341  0FA8  0000019C           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  9342                           
  9343                           ; Function: rele_tick, coverage: 20,11,10,3,0
  9344  0FAC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9345  0FB0  0000002D           	ddw	__ccovbit20_76/(0+8)	; CC_ADDR
  9346  0FB4  00000001           	ddw	1	; NUM_POINTS
  9347  0FB8  00000002           	ddw	__ccovbit20_76& (0+7)	; OFFSET
  9348  0FBC  00000000           	ddw	0	; Reserved
  9349  0FC0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9350  0FC4  00000005           	ddw	5	; NUM_RANGES
  9351  0FC8  000001DF           	ddw	__ccov177_start_blk20	; block 20 START_ADDR
  9352  0FCC  000001E6           	ddw	__ccov177_end_blk20	; block 20 END_ADDR
  9353  0FD0  000001C4           	ddw	__ccov171_start_blk11	; block 11 START_ADDR
  9354  0FD4  000001CA           	ddw	__ccov171_end_blk11	; block 11 END_ADDR
  9355  0FD8  000001BE           	ddw	__ccov170_start_blk10	; block 10 START_ADDR
  9356  0FDC  000001C4           	ddw	__ccov170_end_blk10	; block 10 END_ADDR
  9357  0FE0  000001A3           	ddw	__ccov165_start_blk3	; block 3 START_ADDR
  9358  0FE4  000001A7           	ddw	__ccov165_end_blk3	; block 3 END_ADDR
  9359  0FE8  00000198           	ddw	_rele_tick	; block 0 START_ADDR
  9360  0FEC  0000019C           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  9361                           
  9362                           ; Function: rele_tick, coverage: 22,21,20,11,10,3,0
  9363  0FF0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9364  0FF4  0000002D           	ddw	__ccovbit22_77/(0+8)	; CC_ADDR
  9365  0FF8  00000001           	ddw	1	; NUM_POINTS
  9366  0FFC  00000001           	ddw	__ccovbit22_77& (0+7)	; OFFSET
  9367  1000  00000000           	ddw	0	; Reserved
  9368  1004  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9369  1008  00000007           	ddw	7	; NUM_RANGES
  9370  100C  000001EA           	ddw	__ccov179_start_blk22	; block 22 START_ADDR
  9371  1010  000001F1           	ddw	__ccov179_end_blk22	; block 22 END_ADDR
  9372  1014  000001E6           	ddw	__ccov178_start_blk21	; block 21 START_ADDR
  9373  1018  000001EA           	ddw	__ccov178_end_blk21	; block 21 END_ADDR
  9374  101C  000001DF           	ddw	__ccov177_start_blk20	; block 20 START_ADDR
  9375  1020  000001E6           	ddw	__ccov177_end_blk20	; block 20 END_ADDR
  9376  1024  000001C4           	ddw	__ccov171_start_blk11	; block 11 START_ADDR
  9377  1028  000001CA           	ddw	__ccov171_end_blk11	; block 11 END_ADDR
  9378  102C  000001BE           	ddw	__ccov170_start_blk10	; block 10 START_ADDR
  9379  1030  000001C4           	ddw	__ccov170_end_blk10	; block 10 END_ADDR
  9380  1034  000001A3           	ddw	__ccov165_start_blk3	; block 3 START_ADDR
  9381  1038  000001A7           	ddw	__ccov165_end_blk3	; block 3 END_ADDR
  9382  103C  00000198           	ddw	_rele_tick	; block 0 START_ADDR
  9383  1040  0000019C           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  9384                           
  9385                           ; Function: rele_tick, coverage: 23,22,21,20,11,10,3,0
  9386  1044  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9387  1048  0000002D           	ddw	__ccovbit23_78/(0+8)	; CC_ADDR
  9388  104C  00000001           	ddw	1	; NUM_POINTS
  9389  1050  00000000           	ddw	__ccovbit23_78& (0+7)	; OFFSET
  9390  1054  00000000           	ddw	0	; Reserved
  9391  1058  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9392  105C  00000008           	ddw	8	; NUM_RANGES
  9393  1060  000001F1           	ddw	__ccov180_start_blk23	; block 23 START_ADDR
  9394  1064  000001F5           	ddw	__ccov180_end_blk23	; block 23 END_ADDR
  9395  1068  000001EA           	ddw	__ccov179_start_blk22	; block 22 START_ADDR
  9396  106C  000001F1           	ddw	__ccov179_end_blk22	; block 22 END_ADDR
  9397  1070  000001E6           	ddw	__ccov178_start_blk21	; block 21 START_ADDR
  9398  1074  000001EA           	ddw	__ccov178_end_blk21	; block 21 END_ADDR
  9399  1078  000001DF           	ddw	__ccov177_start_blk20	; block 20 START_ADDR
  9400  107C  000001E6           	ddw	__ccov177_end_blk20	; block 20 END_ADDR
  9401  1080  000001C4           	ddw	__ccov171_start_blk11	; block 11 START_ADDR
  9402  1084  000001CA           	ddw	__ccov171_end_blk11	; block 11 END_ADDR
  9403  1088  000001BE           	ddw	__ccov170_start_blk10	; block 10 START_ADDR
  9404  108C  000001C4           	ddw	__ccov170_end_blk10	; block 10 END_ADDR
  9405  1090  000001A3           	ddw	__ccov165_start_blk3	; block 3 START_ADDR
  9406  1094  000001A7           	ddw	__ccov165_end_blk3	; block 3 END_ADDR
  9407  1098  00000198           	ddw	_rele_tick	; block 0 START_ADDR
  9408  109C  0000019C           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  9409                           
  9410                           ; Function: rele_tick, coverage: 27,0
  9411  10A0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9412  10A4  0000002C           	ddw	__ccovbit27_79/(0+8)	; CC_ADDR
  9413  10A8  00000001           	ddw	1	; NUM_POINTS
  9414  10AC  00000007           	ddw	__ccovbit27_79& (0+7)	; OFFSET
  9415  10B0  00000000           	ddw	0	; Reserved
  9416  10B4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9417  10B8  00000002           	ddw	2	; NUM_RANGES
  9418  10BC  000001F5           	ddw	__ccov181_start_blk27	; block 27 START_ADDR
  9419  10C0  000001F7           	ddw	__end_of_rele_tick	; block 27 END_ADDR
  9420  10C4  00000198           	ddw	_rele_tick	; block 0 START_ADDR
  9421  10C8  0000019C           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  9422                           
  9423                           ; Function: start_alarm, coverage: 2,1,0
  9424  10CC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9425  10D0  0000002C           	ddw	__ccovbit2_80/(0+8)	; CC_ADDR
  9426  10D4  00000001           	ddw	1	; NUM_POINTS
  9427  10D8  00000006           	ddw	__ccovbit2_80& (0+7)	; OFFSET
  9428  10DC  00000000           	ddw	0	; Reserved
  9429  10E0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9430  10E4  00000003           	ddw	3	; NUM_RANGES
  9431  10E8  00000691           	ddw	__ccov184_start_blk2	; block 2 START_ADDR
  9432  10EC  00000693           	ddw	__end_of_start_alarm	; block 2 END_ADDR
  9433  10F0  0000068F           	ddw	__ccov183_start_blk1	; block 1 START_ADDR
  9434  10F4  00000691           	ddw	__ccov183_end_blk1	; block 1 END_ADDR
  9435  10F8  0000068B           	ddw	_start_alarm	; block 0 START_ADDR
  9436  10FC  0000068F           	ddw	__ccov182_end_blk0	; block 0 END_ADDR
  9437                           
  9438                           ; Function: clear_alarm, coverage: 1,0
  9439  1100  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9440  1104  0000002C           	ddw	__ccovbit1_81/(0+8)	; CC_ADDR
  9441  1108  00000001           	ddw	1	; NUM_POINTS
  9442  110C  00000005           	ddw	__ccovbit1_81& (0+7)	; OFFSET
  9443  1110  00000000           	ddw	0	; Reserved
  9444  1114  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9445  1118  00000002           	ddw	2	; NUM_RANGES
  9446  111C  000006BA           	ddw	__ccov186_start_blk1	; block 1 START_ADDR
  9447  1120  000006BD           	ddw	__end_of_clear_alarm	; block 1 END_ADDR
  9448  1124  000006B8           	ddw	_clear_alarm	; block 0 START_ADDR
  9449  1128  000006BA           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9450                           
  9451                           ; Function: fun_work, coverage: 1,0
  9452  112C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9453  1130  0000002C           	ddw	__ccovbit1_82/(0+8)	; CC_ADDR
  9454  1134  00000001           	ddw	1	; NUM_POINTS
  9455  1138  00000004           	ddw	__ccovbit1_82& (0+7)	; OFFSET
  9456  113C  00000000           	ddw	0	; Reserved
  9457  1140  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9458  1144  00000002           	ddw	2	; NUM_RANGES
  9459  1148  00000243           	ddw	__ccov188_start_blk1	; block 1 START_ADDR
  9460  114C  00000249           	ddw	__ccov188_end_blk1	; block 1 END_ADDR
  9461  1150  0000023F           	ddw	_fun_work	; block 0 START_ADDR
  9462  1154  00000243           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9463                           
  9464                           ; Function: fun_work, coverage: 2,1,0
  9465  1158  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9466  115C  0000002C           	ddw	__ccovbit2_83/(0+8)	; CC_ADDR
  9467  1160  00000001           	ddw	1	; NUM_POINTS
  9468  1164  00000003           	ddw	__ccovbit2_83& (0+7)	; OFFSET
  9469  1168  00000000           	ddw	0	; Reserved
  9470  116C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9471  1170  00000003           	ddw	3	; NUM_RANGES
  9472  1174  00000249           	ddw	__ccov189_start_blk2	; block 2 START_ADDR
  9473  1178  0000024E           	ddw	__ccov189_end_blk2	; block 2 END_ADDR
  9474  117C  00000243           	ddw	__ccov188_start_blk1	; block 1 START_ADDR
  9475  1180  00000249           	ddw	__ccov188_end_blk1	; block 1 END_ADDR
  9476  1184  0000023F           	ddw	_fun_work	; block 0 START_ADDR
  9477  1188  00000243           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9478                           
  9479                           ; Function: fun_work, coverage: 3,2,1,0
  9480  118C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9481  1190  0000002C           	ddw	__ccovbit3_84/(0+8)	; CC_ADDR
  9482  1194  00000001           	ddw	1	; NUM_POINTS
  9483  1198  00000002           	ddw	__ccovbit3_84& (0+7)	; OFFSET
  9484  119C  00000000           	ddw	0	; Reserved
  9485  11A0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9486  11A4  00000004           	ddw	4	; NUM_RANGES
  9487  11A8  0000024E           	ddw	__ccov190_start_blk3	; block 3 START_ADDR
  9488  11AC  00000253           	ddw	__ccov190_end_blk3	; block 3 END_ADDR
  9489  11B0  00000249           	ddw	__ccov189_start_blk2	; block 2 START_ADDR
  9490  11B4  0000024E           	ddw	__ccov189_end_blk2	; block 2 END_ADDR
  9491  11B8  00000243           	ddw	__ccov188_start_blk1	; block 1 START_ADDR
  9492  11BC  00000249           	ddw	__ccov188_end_blk1	; block 1 END_ADDR
  9493  11C0  0000023F           	ddw	_fun_work	; block 0 START_ADDR
  9494  11C4  00000243           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9495                           
  9496                           ; Function: fun_work, coverage: 4,3,2,1,0
  9497  11C8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9498  11CC  0000002C           	ddw	__ccovbit4_85/(0+8)	; CC_ADDR
  9499  11D0  00000001           	ddw	1	; NUM_POINTS
  9500  11D4  00000001           	ddw	__ccovbit4_85& (0+7)	; OFFSET
  9501  11D8  00000000           	ddw	0	; Reserved
  9502  11DC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9503  11E0  00000005           	ddw	5	; NUM_RANGES
  9504  11E4  00000253           	ddw	__ccov191_start_blk4	; block 4 START_ADDR
  9505  11E8  00000258           	ddw	__ccov191_end_blk4	; block 4 END_ADDR
  9506  11EC  0000024E           	ddw	__ccov190_start_blk3	; block 3 START_ADDR
  9507  11F0  00000253           	ddw	__ccov190_end_blk3	; block 3 END_ADDR
  9508  11F4  00000249           	ddw	__ccov189_start_blk2	; block 2 START_ADDR
  9509  11F8  0000024E           	ddw	__ccov189_end_blk2	; block 2 END_ADDR
  9510  11FC  00000243           	ddw	__ccov188_start_blk1	; block 1 START_ADDR
  9511  1200  00000249           	ddw	__ccov188_end_blk1	; block 1 END_ADDR
  9512  1204  0000023F           	ddw	_fun_work	; block 0 START_ADDR
  9513  1208  00000243           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9514                           
  9515                           ; Function: fun_work, coverage: 5,4,3,2,1,0
  9516  120C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9517  1210  0000002C           	ddw	__ccovbit5_86/(0+8)	; CC_ADDR
  9518  1214  00000001           	ddw	1	; NUM_POINTS
  9519  1218  00000000           	ddw	__ccovbit5_86& (0+7)	; OFFSET
  9520  121C  00000000           	ddw	0	; Reserved
  9521  1220  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9522  1224  00000006           	ddw	6	; NUM_RANGES
  9523  1228  00000258           	ddw	__ccov192_start_blk5	; block 5 START_ADDR
  9524  122C  0000025D           	ddw	__ccov192_end_blk5	; block 5 END_ADDR
  9525  1230  00000253           	ddw	__ccov191_start_blk4	; block 4 START_ADDR
  9526  1234  00000258           	ddw	__ccov191_end_blk4	; block 4 END_ADDR
  9527  1238  0000024E           	ddw	__ccov190_start_blk3	; block 3 START_ADDR
  9528  123C  00000253           	ddw	__ccov190_end_blk3	; block 3 END_ADDR
  9529  1240  00000249           	ddw	__ccov189_start_blk2	; block 2 START_ADDR
  9530  1244  0000024E           	ddw	__ccov189_end_blk2	; block 2 END_ADDR
  9531  1248  00000243           	ddw	__ccov188_start_blk1	; block 1 START_ADDR
  9532  124C  00000249           	ddw	__ccov188_end_blk1	; block 1 END_ADDR
  9533  1250  0000023F           	ddw	_fun_work	; block 0 START_ADDR
  9534  1254  00000243           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9535                           
  9536                           ; Function: fun_work, coverage: 7,6,5,4,3,2,1,0
  9537  1258  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9538  125C  0000002B           	ddw	__ccovbit7_87/(0+8)	; CC_ADDR
  9539  1260  00000001           	ddw	1	; NUM_POINTS
  9540  1264  00000007           	ddw	__ccovbit7_87& (0+7)	; OFFSET
  9541  1268  00000000           	ddw	0	; Reserved
  9542  126C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9543  1270  00000008           	ddw	8	; NUM_RANGES
  9544  1274  0000025F           	ddw	__ccov194_start_blk7	; block 7 START_ADDR
  9545  1278  00000263           	ddw	__ccov194_end_blk7	; block 7 END_ADDR
  9546  127C  0000025D           	ddw	__ccov193_start_blk6	; block 6 START_ADDR
  9547  1280  0000025F           	ddw	__ccov193_end_blk6	; block 6 END_ADDR
  9548  1284  00000258           	ddw	__ccov192_start_blk5	; block 5 START_ADDR
  9549  1288  0000025D           	ddw	__ccov192_end_blk5	; block 5 END_ADDR
  9550  128C  00000253           	ddw	__ccov191_start_blk4	; block 4 START_ADDR
  9551  1290  00000258           	ddw	__ccov191_end_blk4	; block 4 END_ADDR
  9552  1294  0000024E           	ddw	__ccov190_start_blk3	; block 3 START_ADDR
  9553  1298  00000253           	ddw	__ccov190_end_blk3	; block 3 END_ADDR
  9554  129C  00000249           	ddw	__ccov189_start_blk2	; block 2 START_ADDR
  9555  12A0  0000024E           	ddw	__ccov189_end_blk2	; block 2 END_ADDR
  9556  12A4  00000243           	ddw	__ccov188_start_blk1	; block 1 START_ADDR
  9557  12A8  00000249           	ddw	__ccov188_end_blk1	; block 1 END_ADDR
  9558  12AC  0000023F           	ddw	_fun_work	; block 0 START_ADDR
  9559  12B0  00000243           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9560                           
  9561                           ; Function: fun_work, coverage: 10,9,0
  9562  12B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9563  12B8  0000002B           	ddw	__ccovbit10_88/(0+8)	; CC_ADDR
  9564  12BC  00000001           	ddw	1	; NUM_POINTS
  9565  12C0  00000006           	ddw	__ccovbit10_88& (0+7)	; OFFSET
  9566  12C4  00000000           	ddw	0	; Reserved
  9567  12C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9568  12CC  00000003           	ddw	3	; NUM_RANGES
  9569  12D0  00000267           	ddw	__ccov196_start_blk10	; block 10 START_ADDR
  9570  12D4  0000026D           	ddw	__ccov196_end_blk10	; block 10 END_ADDR
  9571  12D8  00000263           	ddw	__ccov195_start_blk9	; block 9 START_ADDR
  9572  12DC  00000267           	ddw	__ccov195_end_blk9	; block 9 END_ADDR
  9573  12E0  0000023F           	ddw	_fun_work	; block 0 START_ADDR
  9574  12E4  00000243           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9575                           
  9576                           ; Function: fun_work, coverage: 11,10,9,0
  9577  12E8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9578  12EC  0000002B           	ddw	__ccovbit11_89/(0+8)	; CC_ADDR
  9579  12F0  00000001           	ddw	1	; NUM_POINTS
  9580  12F4  00000005           	ddw	__ccovbit11_89& (0+7)	; OFFSET
  9581  12F8  00000000           	ddw	0	; Reserved
  9582  12FC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9583  1300  00000004           	ddw	4	; NUM_RANGES
  9584  1304  0000026D           	ddw	__ccov197_start_blk11	; block 11 START_ADDR
  9585  1308  00000272           	ddw	__ccov197_end_blk11	; block 11 END_ADDR
  9586  130C  00000267           	ddw	__ccov196_start_blk10	; block 10 START_ADDR
  9587  1310  0000026D           	ddw	__ccov196_end_blk10	; block 10 END_ADDR
  9588  1314  00000263           	ddw	__ccov195_start_blk9	; block 9 START_ADDR
  9589  1318  00000267           	ddw	__ccov195_end_blk9	; block 9 END_ADDR
  9590  131C  0000023F           	ddw	_fun_work	; block 0 START_ADDR
  9591  1320  00000243           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9592                           
  9593                           ; Function: fun_work, coverage: 12,11,10,9,0
  9594  1324  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9595  1328  0000002B           	ddw	__ccovbit12_90/(0+8)	; CC_ADDR
  9596  132C  00000001           	ddw	1	; NUM_POINTS
  9597  1330  00000004           	ddw	__ccovbit12_90& (0+7)	; OFFSET
  9598  1334  00000000           	ddw	0	; Reserved
  9599  1338  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9600  133C  00000005           	ddw	5	; NUM_RANGES
  9601  1340  00000272           	ddw	__ccov198_start_blk12	; block 12 START_ADDR
  9602  1344  00000277           	ddw	__ccov198_end_blk12	; block 12 END_ADDR
  9603  1348  0000026D           	ddw	__ccov197_start_blk11	; block 11 START_ADDR
  9604  134C  00000272           	ddw	__ccov197_end_blk11	; block 11 END_ADDR
  9605  1350  00000267           	ddw	__ccov196_start_blk10	; block 10 START_ADDR
  9606  1354  0000026D           	ddw	__ccov196_end_blk10	; block 10 END_ADDR
  9607  1358  00000263           	ddw	__ccov195_start_blk9	; block 9 START_ADDR
  9608  135C  00000267           	ddw	__ccov195_end_blk9	; block 9 END_ADDR
  9609  1360  0000023F           	ddw	_fun_work	; block 0 START_ADDR
  9610  1364  00000243           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9611                           
  9612                           ; Function: fun_work, coverage: 13,12,11,10,9,0
  9613  1368  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9614  136C  0000002B           	ddw	__ccovbit13_91/(0+8)	; CC_ADDR
  9615  1370  00000001           	ddw	1	; NUM_POINTS
  9616  1374  00000003           	ddw	__ccovbit13_91& (0+7)	; OFFSET
  9617  1378  00000000           	ddw	0	; Reserved
  9618  137C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9619  1380  00000006           	ddw	6	; NUM_RANGES
  9620  1384  00000277           	ddw	__ccov199_start_blk13	; block 13 START_ADDR
  9621  1388  0000027C           	ddw	__ccov199_end_blk13	; block 13 END_ADDR
  9622  138C  00000272           	ddw	__ccov198_start_blk12	; block 12 START_ADDR
  9623  1390  00000277           	ddw	__ccov198_end_blk12	; block 12 END_ADDR
  9624  1394  0000026D           	ddw	__ccov197_start_blk11	; block 11 START_ADDR
  9625  1398  00000272           	ddw	__ccov197_end_blk11	; block 11 END_ADDR
  9626  139C  00000267           	ddw	__ccov196_start_blk10	; block 10 START_ADDR
  9627  13A0  0000026D           	ddw	__ccov196_end_blk10	; block 10 END_ADDR
  9628  13A4  00000263           	ddw	__ccov195_start_blk9	; block 9 START_ADDR
  9629  13A8  00000267           	ddw	__ccov195_end_blk9	; block 9 END_ADDR
  9630  13AC  0000023F           	ddw	_fun_work	; block 0 START_ADDR
  9631  13B0  00000243           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9632                           
  9633                           ; Function: fun_work, coverage: 15,14,13,12,11,10,9,0
  9634  13B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9635  13B8  0000002B           	ddw	__ccovbit15_92/(0+8)	; CC_ADDR
  9636  13BC  00000001           	ddw	1	; NUM_POINTS
  9637  13C0  00000002           	ddw	__ccovbit15_92& (0+7)	; OFFSET
  9638  13C4  00000000           	ddw	0	; Reserved
  9639  13C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9640  13CC  00000008           	ddw	8	; NUM_RANGES
  9641  13D0  00000280           	ddw	__ccov201_start_blk15	; block 15 START_ADDR
  9642  13D4  00000284           	ddw	__ccov201_end_blk15	; block 15 END_ADDR
  9643  13D8  0000027C           	ddw	__ccov200_start_blk14	; block 14 START_ADDR
  9644  13DC  00000280           	ddw	__ccov200_end_blk14	; block 14 END_ADDR
  9645  13E0  00000277           	ddw	__ccov199_start_blk13	; block 13 START_ADDR
  9646  13E4  0000027C           	ddw	__ccov199_end_blk13	; block 13 END_ADDR
  9647  13E8  00000272           	ddw	__ccov198_start_blk12	; block 12 START_ADDR
  9648  13EC  00000277           	ddw	__ccov198_end_blk12	; block 12 END_ADDR
  9649  13F0  0000026D           	ddw	__ccov197_start_blk11	; block 11 START_ADDR
  9650  13F4  00000272           	ddw	__ccov197_end_blk11	; block 11 END_ADDR
  9651  13F8  00000267           	ddw	__ccov196_start_blk10	; block 10 START_ADDR
  9652  13FC  0000026D           	ddw	__ccov196_end_blk10	; block 10 END_ADDR
  9653  1400  00000263           	ddw	__ccov195_start_blk9	; block 9 START_ADDR
  9654  1404  00000267           	ddw	__ccov195_end_blk9	; block 9 END_ADDR
  9655  1408  0000023F           	ddw	_fun_work	; block 0 START_ADDR
  9656  140C  00000243           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9657                           
  9658                           ; Function: fun_work, coverage: 17,9,0
  9659  1410  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9660  1414  0000002B           	ddw	__ccovbit17_93/(0+8)	; CC_ADDR
  9661  1418  00000001           	ddw	1	; NUM_POINTS
  9662  141C  00000001           	ddw	__ccovbit17_93& (0+7)	; OFFSET
  9663  1420  00000000           	ddw	0	; Reserved
  9664  1424  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9665  1428  00000003           	ddw	3	; NUM_RANGES
  9666  142C  00000284           	ddw	__ccov202_start_blk17	; block 17 START_ADDR
  9667  1430  00000287           	ddw	__end_of_fun_work	; block 17 END_ADDR
  9668  1434  00000263           	ddw	__ccov195_start_blk9	; block 9 START_ADDR
  9669  1438  00000267           	ddw	__ccov195_end_blk9	; block 9 END_ADDR
  9670  143C  0000023F           	ddw	_fun_work	; block 0 START_ADDR
  9671  1440  00000243           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9672                           
  9673                           ; Function: switch_wm, coverage: 1,0
  9674  1444  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9675  1448  0000002B           	ddw	__ccovbit1_94/(0+8)	; CC_ADDR
  9676  144C  00000001           	ddw	1	; NUM_POINTS
  9677  1450  00000000           	ddw	__ccovbit1_94& (0+7)	; OFFSET
  9678  1454  00000000           	ddw	0	; Reserved
  9679  1458  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9680  145C  00000002           	ddw	2	; NUM_RANGES
  9681  1460  000003C6           	ddw	__ccov204_start_blk1	; block 1 START_ADDR
  9682  1464  000003CC           	ddw	__ccov204_end_blk1	; block 1 END_ADDR
  9683  1468  000003C2           	ddw	_switch_wm	; block 0 START_ADDR
  9684  146C  000003C6           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9685                           
  9686                           ; Function: switch_wm, coverage: 4,3,2,1,0
  9687  1470  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9688  1474  0000002A           	ddw	__ccovbit4_95/(0+8)	; CC_ADDR
  9689  1478  00000001           	ddw	1	; NUM_POINTS
  9690  147C  00000007           	ddw	__ccovbit4_95& (0+7)	; OFFSET
  9691  1480  00000000           	ddw	0	; Reserved
  9692  1484  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9693  1488  00000005           	ddw	5	; NUM_RANGES
  9694  148C  000003D1           	ddw	__ccov207_start_blk4	; block 4 START_ADDR
  9695  1490  000003D8           	ddw	__ccov207_end_blk4	; block 4 END_ADDR
  9696  1494  000003CE           	ddw	__ccov206_start_blk3	; block 3 START_ADDR
  9697  1498  000003D1           	ddw	__ccov206_end_blk3	; block 3 END_ADDR
  9698  149C  000003CC           	ddw	__ccov205_start_blk2	; block 2 START_ADDR
  9699  14A0  000003CE           	ddw	__ccov205_end_blk2	; block 2 END_ADDR
  9700  14A4  000003C6           	ddw	__ccov204_start_blk1	; block 1 START_ADDR
  9701  14A8  000003CC           	ddw	__ccov204_end_blk1	; block 1 END_ADDR
  9702  14AC  000003C2           	ddw	_switch_wm	; block 0 START_ADDR
  9703  14B0  000003C6           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9704                           
  9705                           ; Function: switch_wm, coverage: 6,0
  9706  14B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9707  14B8  0000002A           	ddw	__ccovbit6_96/(0+8)	; CC_ADDR
  9708  14BC  00000001           	ddw	1	; NUM_POINTS
  9709  14C0  00000006           	ddw	__ccovbit6_96& (0+7)	; OFFSET
  9710  14C4  00000000           	ddw	0	; Reserved
  9711  14C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9712  14CC  00000002           	ddw	2	; NUM_RANGES
  9713  14D0  000003D8           	ddw	__ccov208_start_blk6	; block 6 START_ADDR
  9714  14D4  000003DE           	ddw	__ccov208_end_blk6	; block 6 END_ADDR
  9715  14D8  000003C2           	ddw	_switch_wm	; block 0 START_ADDR
  9716  14DC  000003C6           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9717                           
  9718                           ; Function: switch_wm, coverage: 7,6,0
  9719  14E0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9720  14E4  0000002A           	ddw	__ccovbit7_97/(0+8)	; CC_ADDR
  9721  14E8  00000001           	ddw	1	; NUM_POINTS
  9722  14EC  00000005           	ddw	__ccovbit7_97& (0+7)	; OFFSET
  9723  14F0  00000000           	ddw	0	; Reserved
  9724  14F4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9725  14F8  00000003           	ddw	3	; NUM_RANGES
  9726  14FC  000003DE           	ddw	__ccov209_start_blk7	; block 7 START_ADDR
  9727  1500  000003E3           	ddw	__ccov209_end_blk7	; block 7 END_ADDR
  9728  1504  000003D8           	ddw	__ccov208_start_blk6	; block 6 START_ADDR
  9729  1508  000003DE           	ddw	__ccov208_end_blk6	; block 6 END_ADDR
  9730  150C  000003C2           	ddw	_switch_wm	; block 0 START_ADDR
  9731  1510  000003C6           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9732                           
  9733                           ; Function: switch_wm, coverage: 10,9,8,7,6,0
  9734  1514  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9735  1518  0000002A           	ddw	__ccovbit10_98/(0+8)	; CC_ADDR
  9736  151C  00000001           	ddw	1	; NUM_POINTS
  9737  1520  00000004           	ddw	__ccovbit10_98& (0+7)	; OFFSET
  9738  1524  00000000           	ddw	0	; Reserved
  9739  1528  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9740  152C  00000006           	ddw	6	; NUM_RANGES
  9741  1530  000003E8           	ddw	__ccov212_start_blk10	; block 10 START_ADDR
  9742  1534  000003EC           	ddw	__ccov212_end_blk10	; block 10 END_ADDR
  9743  1538  000003E5           	ddw	__ccov211_start_blk9	; block 9 START_ADDR
  9744  153C  000003E8           	ddw	__ccov211_end_blk9	; block 9 END_ADDR
  9745  1540  000003E3           	ddw	__ccov210_start_blk8	; block 8 START_ADDR
  9746  1544  000003E5           	ddw	__ccov210_end_blk8	; block 8 END_ADDR
  9747  1548  000003DE           	ddw	__ccov209_start_blk7	; block 7 START_ADDR
  9748  154C  000003E3           	ddw	__ccov209_end_blk7	; block 7 END_ADDR
  9749  1550  000003D8           	ddw	__ccov208_start_blk6	; block 6 START_ADDR
  9750  1554  000003DE           	ddw	__ccov208_end_blk6	; block 6 END_ADDR
  9751  1558  000003C2           	ddw	_switch_wm	; block 0 START_ADDR
  9752  155C  000003C6           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9753                           
  9754                           ; Function: switch_wm, coverage: 14,0
  9755  1560  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9756  1564  0000002A           	ddw	__ccovbit14_99/(0+8)	; CC_ADDR
  9757  1568  00000001           	ddw	1	; NUM_POINTS
  9758  156C  00000003           	ddw	__ccovbit14_99& (0+7)	; OFFSET
  9759  1570  00000000           	ddw	0	; Reserved
  9760  1574  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9761  1578  00000002           	ddw	2	; NUM_RANGES
  9762  157C  000003EC           	ddw	__ccov213_start_blk14	; block 14 START_ADDR
  9763  1580  000003EE           	ddw	__end_of_switch_wm	; block 14 END_ADDR
  9764  1584  000003C2           	ddw	_switch_wm	; block 0 START_ADDR
  9765  1588  000003C6           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9766                           
  9767                           ; Function: autorotation_work, coverage: 1,0
  9768  158C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9769  1590  0000002A           	ddw	__ccovbit1_100/(0+8)	; CC_ADDR
  9770  1594  00000001           	ddw	1	; NUM_POINTS
  9771  1598  00000002           	ddw	__ccovbit1_100& (0+7)	; OFFSET
  9772  159C  00000000           	ddw	0	; Reserved
  9773  15A0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9774  15A4  00000002           	ddw	2	; NUM_RANGES
  9775  15A8  000000DB           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
  9776  15AC  000000E0           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
  9777  15B0  000000CC           	ddw	_autorotation_work	; block 0 START_ADDR
  9778  15B4  000000DB           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9779                           
  9780                           ; Function: autorotation_work, coverage: 2,1,0
  9781  15B8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9782  15BC  0000002A           	ddw	__ccovbit2_101/(0+8)	; CC_ADDR
  9783  15C0  00000001           	ddw	1	; NUM_POINTS
  9784  15C4  00000001           	ddw	__ccovbit2_101& (0+7)	; OFFSET
  9785  15C8  00000000           	ddw	0	; Reserved
  9786  15CC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9787  15D0  00000003           	ddw	3	; NUM_RANGES
  9788  15D4  000000E0           	ddw	__ccov216_start_blk2	; block 2 START_ADDR
  9789  15D8  000000E5           	ddw	__ccov216_end_blk2	; block 2 END_ADDR
  9790  15DC  000000DB           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
  9791  15E0  000000E0           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
  9792  15E4  000000CC           	ddw	_autorotation_work	; block 0 START_ADDR
  9793  15E8  000000DB           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9794                           
  9795                           ; Function: autorotation_work, coverage: 3,2,1,0
  9796  15EC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9797  15F0  0000002A           	ddw	__ccovbit3_102/(0+8)	; CC_ADDR
  9798  15F4  00000001           	ddw	1	; NUM_POINTS
  9799  15F8  00000000           	ddw	__ccovbit3_102& (0+7)	; OFFSET
  9800  15FC  00000000           	ddw	0	; Reserved
  9801  1600  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9802  1604  00000004           	ddw	4	; NUM_RANGES
  9803  1608  000000E5           	ddw	__ccov217_start_blk3	; block 3 START_ADDR
  9804  160C  000000EA           	ddw	__ccov217_end_blk3	; block 3 END_ADDR
  9805  1610  000000E0           	ddw	__ccov216_start_blk2	; block 2 START_ADDR
  9806  1614  000000E5           	ddw	__ccov216_end_blk2	; block 2 END_ADDR
  9807  1618  000000DB           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
  9808  161C  000000E0           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
  9809  1620  000000CC           	ddw	_autorotation_work	; block 0 START_ADDR
  9810  1624  000000DB           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9811                           
  9812                           ; Function: autorotation_work, coverage: 4,3,2,1,0
  9813  1628  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9814  162C  00000029           	ddw	__ccovbit4_103/(0+8)	; CC_ADDR
  9815  1630  00000001           	ddw	1	; NUM_POINTS
  9816  1634  00000007           	ddw	__ccovbit4_103& (0+7)	; OFFSET
  9817  1638  00000000           	ddw	0	; Reserved
  9818  163C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9819  1640  00000005           	ddw	5	; NUM_RANGES
  9820  1644  000000EA           	ddw	__ccov218_start_blk4	; block 4 START_ADDR
  9821  1648  000000EF           	ddw	__ccov218_end_blk4	; block 4 END_ADDR
  9822  164C  000000E5           	ddw	__ccov217_start_blk3	; block 3 START_ADDR
  9823  1650  000000EA           	ddw	__ccov217_end_blk3	; block 3 END_ADDR
  9824  1654  000000E0           	ddw	__ccov216_start_blk2	; block 2 START_ADDR
  9825  1658  000000E5           	ddw	__ccov216_end_blk2	; block 2 END_ADDR
  9826  165C  000000DB           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
  9827  1660  000000E0           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
  9828  1664  000000CC           	ddw	_autorotation_work	; block 0 START_ADDR
  9829  1668  000000DB           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9830                           
  9831                           ; Function: autorotation_work, coverage: 5,4,3,2,1,0
  9832  166C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9833  1670  00000029           	ddw	__ccovbit5_104/(0+8)	; CC_ADDR
  9834  1674  00000001           	ddw	1	; NUM_POINTS
  9835  1678  00000006           	ddw	__ccovbit5_104& (0+7)	; OFFSET
  9836  167C  00000000           	ddw	0	; Reserved
  9837  1680  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9838  1684  00000006           	ddw	6	; NUM_RANGES
  9839  1688  000000EF           	ddw	__ccov219_start_blk5	; block 5 START_ADDR
  9840  168C  000000F4           	ddw	__ccov219_end_blk5	; block 5 END_ADDR
  9841  1690  000000EA           	ddw	__ccov218_start_blk4	; block 4 START_ADDR
  9842  1694  000000EF           	ddw	__ccov218_end_blk4	; block 4 END_ADDR
  9843  1698  000000E5           	ddw	__ccov217_start_blk3	; block 3 START_ADDR
  9844  169C  000000EA           	ddw	__ccov217_end_blk3	; block 3 END_ADDR
  9845  16A0  000000E0           	ddw	__ccov216_start_blk2	; block 2 START_ADDR
  9846  16A4  000000E5           	ddw	__ccov216_end_blk2	; block 2 END_ADDR
  9847  16A8  000000DB           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
  9848  16AC  000000E0           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
  9849  16B0  000000CC           	ddw	_autorotation_work	; block 0 START_ADDR
  9850  16B4  000000DB           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9851                           
  9852                           ; Function: autorotation_work, coverage: 8,7,6,5,4,3,2,1,0
  9853  16B8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9854  16BC  00000029           	ddw	__ccovbit8_105/(0+8)	; CC_ADDR
  9855  16C0  00000001           	ddw	1	; NUM_POINTS
  9856  16C4  00000005           	ddw	__ccovbit8_105& (0+7)	; OFFSET
  9857  16C8  00000000           	ddw	0	; Reserved
  9858  16CC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9859  16D0  00000009           	ddw	9	; NUM_RANGES
  9860  16D4  000000FB           	ddw	__ccov222_start_blk8	; block 8 START_ADDR
  9861  16D8  00000101           	ddw	__ccov222_end_blk8	; block 8 END_ADDR
  9862  16DC  000000F7           	ddw	__ccov221_start_blk7	; block 7 START_ADDR
  9863  16E0  000000FB           	ddw	__ccov221_end_blk7	; block 7 END_ADDR
  9864  16E4  000000F4           	ddw	__ccov220_start_blk6	; block 6 START_ADDR
  9865  16E8  000000F7           	ddw	__ccov220_end_blk6	; block 6 END_ADDR
  9866  16EC  000000EF           	ddw	__ccov219_start_blk5	; block 5 START_ADDR
  9867  16F0  000000F4           	ddw	__ccov219_end_blk5	; block 5 END_ADDR
  9868  16F4  000000EA           	ddw	__ccov218_start_blk4	; block 4 START_ADDR
  9869  16F8  000000EF           	ddw	__ccov218_end_blk4	; block 4 END_ADDR
  9870  16FC  000000E5           	ddw	__ccov217_start_blk3	; block 3 START_ADDR
  9871  1700  000000EA           	ddw	__ccov217_end_blk3	; block 3 END_ADDR
  9872  1704  000000E0           	ddw	__ccov216_start_blk2	; block 2 START_ADDR
  9873  1708  000000E5           	ddw	__ccov216_end_blk2	; block 2 END_ADDR
  9874  170C  000000DB           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
  9875  1710  000000E0           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
  9876  1714  000000CC           	ddw	_autorotation_work	; block 0 START_ADDR
  9877  1718  000000DB           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9878                           
  9879                           ; Function: autorotation_work, coverage: 11,10,0
  9880  171C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9881  1720  00000029           	ddw	__ccovbit11_106/(0+8)	; CC_ADDR
  9882  1724  00000001           	ddw	1	; NUM_POINTS
  9883  1728  00000004           	ddw	__ccovbit11_106& (0+7)	; OFFSET
  9884  172C  00000000           	ddw	0	; Reserved
  9885  1730  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9886  1734  00000003           	ddw	3	; NUM_RANGES
  9887  1738  0000010F           	ddw	__ccov224_start_blk11	; block 11 START_ADDR
  9888  173C  00000114           	ddw	__ccov224_end_blk11	; block 11 END_ADDR
  9889  1740  00000101           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9890  1744  0000010F           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9891  1748  000000CC           	ddw	_autorotation_work	; block 0 START_ADDR
  9892  174C  000000DB           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9893                           
  9894                           ; Function: autorotation_work, coverage: 12,11,10,0
  9895  1750  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9896  1754  00000029           	ddw	__ccovbit12_107/(0+8)	; CC_ADDR
  9897  1758  00000001           	ddw	1	; NUM_POINTS
  9898  175C  00000003           	ddw	__ccovbit12_107& (0+7)	; OFFSET
  9899  1760  00000000           	ddw	0	; Reserved
  9900  1764  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9901  1768  00000004           	ddw	4	; NUM_RANGES
  9902  176C  00000114           	ddw	__ccov225_start_blk12	; block 12 START_ADDR
  9903  1770  00000119           	ddw	__ccov225_end_blk12	; block 12 END_ADDR
  9904  1774  0000010F           	ddw	__ccov224_start_blk11	; block 11 START_ADDR
  9905  1778  00000114           	ddw	__ccov224_end_blk11	; block 11 END_ADDR
  9906  177C  00000101           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9907  1780  0000010F           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9908  1784  000000CC           	ddw	_autorotation_work	; block 0 START_ADDR
  9909  1788  000000DB           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9910                           
  9911                           ; Function: autorotation_work, coverage: 13,12,11,10,0
  9912  178C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9913  1790  00000029           	ddw	__ccovbit13_108/(0+8)	; CC_ADDR
  9914  1794  00000001           	ddw	1	; NUM_POINTS
  9915  1798  00000002           	ddw	__ccovbit13_108& (0+7)	; OFFSET
  9916  179C  00000000           	ddw	0	; Reserved
  9917  17A0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9918  17A4  00000005           	ddw	5	; NUM_RANGES
  9919  17A8  00000119           	ddw	__ccov226_start_blk13	; block 13 START_ADDR
  9920  17AC  0000011E           	ddw	__ccov226_end_blk13	; block 13 END_ADDR
  9921  17B0  00000114           	ddw	__ccov225_start_blk12	; block 12 START_ADDR
  9922  17B4  00000119           	ddw	__ccov225_end_blk12	; block 12 END_ADDR
  9923  17B8  0000010F           	ddw	__ccov224_start_blk11	; block 11 START_ADDR
  9924  17BC  00000114           	ddw	__ccov224_end_blk11	; block 11 END_ADDR
  9925  17C0  00000101           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9926  17C4  0000010F           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9927  17C8  000000CC           	ddw	_autorotation_work	; block 0 START_ADDR
  9928  17CC  000000DB           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9929                           
  9930                           ; Function: autorotation_work, coverage: 14,13,12,11,10,0
  9931  17D0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9932  17D4  00000029           	ddw	__ccovbit14_109/(0+8)	; CC_ADDR
  9933  17D8  00000001           	ddw	1	; NUM_POINTS
  9934  17DC  00000001           	ddw	__ccovbit14_109& (0+7)	; OFFSET
  9935  17E0  00000000           	ddw	0	; Reserved
  9936  17E4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9937  17E8  00000006           	ddw	6	; NUM_RANGES
  9938  17EC  0000011E           	ddw	__ccov227_start_blk14	; block 14 START_ADDR
  9939  17F0  00000123           	ddw	__ccov227_end_blk14	; block 14 END_ADDR
  9940  17F4  00000119           	ddw	__ccov226_start_blk13	; block 13 START_ADDR
  9941  17F8  0000011E           	ddw	__ccov226_end_blk13	; block 13 END_ADDR
  9942  17FC  00000114           	ddw	__ccov225_start_blk12	; block 12 START_ADDR
  9943  1800  00000119           	ddw	__ccov225_end_blk12	; block 12 END_ADDR
  9944  1804  0000010F           	ddw	__ccov224_start_blk11	; block 11 START_ADDR
  9945  1808  00000114           	ddw	__ccov224_end_blk11	; block 11 END_ADDR
  9946  180C  00000101           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9947  1810  0000010F           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9948  1814  000000CC           	ddw	_autorotation_work	; block 0 START_ADDR
  9949  1818  000000DB           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9950                           
  9951                           ; Function: autorotation_work, coverage: 15,14,13,12,11,10,0
  9952  181C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9953  1820  00000029           	ddw	__ccovbit15_110/(0+8)	; CC_ADDR
  9954  1824  00000001           	ddw	1	; NUM_POINTS
  9955  1828  00000000           	ddw	__ccovbit15_110& (0+7)	; OFFSET
  9956  182C  00000000           	ddw	0	; Reserved
  9957  1830  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9958  1834  00000007           	ddw	7	; NUM_RANGES
  9959  1838  00000123           	ddw	__ccov228_start_blk15	; block 15 START_ADDR
  9960  183C  00000128           	ddw	__ccov228_end_blk15	; block 15 END_ADDR
  9961  1840  0000011E           	ddw	__ccov227_start_blk14	; block 14 START_ADDR
  9962  1844  00000123           	ddw	__ccov227_end_blk14	; block 14 END_ADDR
  9963  1848  00000119           	ddw	__ccov226_start_blk13	; block 13 START_ADDR
  9964  184C  0000011E           	ddw	__ccov226_end_blk13	; block 13 END_ADDR
  9965  1850  00000114           	ddw	__ccov225_start_blk12	; block 12 START_ADDR
  9966  1854  00000119           	ddw	__ccov225_end_blk12	; block 12 END_ADDR
  9967  1858  0000010F           	ddw	__ccov224_start_blk11	; block 11 START_ADDR
  9968  185C  00000114           	ddw	__ccov224_end_blk11	; block 11 END_ADDR
  9969  1860  00000101           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9970  1864  0000010F           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9971  1868  000000CC           	ddw	_autorotation_work	; block 0 START_ADDR
  9972  186C  000000DB           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9973                           
  9974                           ; Function: autorotation_work, coverage: 17,16,15,14,13,12,11,10,0
  9975  1870  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9976  1874  00000028           	ddw	__ccovbit17_111/(0+8)	; CC_ADDR
  9977  1878  00000001           	ddw	1	; NUM_POINTS
  9978  187C  00000007           	ddw	__ccovbit17_111& (0+7)	; OFFSET
  9979  1880  00000000           	ddw	0	; Reserved
  9980  1884  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9981  1888  00000009           	ddw	9	; NUM_RANGES
  9982  188C  0000012B           	ddw	__ccov230_start_blk17	; block 17 START_ADDR
  9983  1890  00000133           	ddw	__ccov230_end_blk17	; block 17 END_ADDR
  9984  1894  00000128           	ddw	__ccov229_start_blk16	; block 16 START_ADDR
  9985  1898  0000012B           	ddw	__ccov229_end_blk16	; block 16 END_ADDR
  9986  189C  00000123           	ddw	__ccov228_start_blk15	; block 15 START_ADDR
  9987  18A0  00000128           	ddw	__ccov228_end_blk15	; block 15 END_ADDR
  9988  18A4  0000011E           	ddw	__ccov227_start_blk14	; block 14 START_ADDR
  9989  18A8  00000123           	ddw	__ccov227_end_blk14	; block 14 END_ADDR
  9990  18AC  00000119           	ddw	__ccov226_start_blk13	; block 13 START_ADDR
  9991  18B0  0000011E           	ddw	__ccov226_end_blk13	; block 13 END_ADDR
  9992  18B4  00000114           	ddw	__ccov225_start_blk12	; block 12 START_ADDR
  9993  18B8  00000119           	ddw	__ccov225_end_blk12	; block 12 END_ADDR
  9994  18BC  0000010F           	ddw	__ccov224_start_blk11	; block 11 START_ADDR
  9995  18C0  00000114           	ddw	__ccov224_end_blk11	; block 11 END_ADDR
  9996  18C4  00000101           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9997  18C8  0000010F           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9998  18CC  000000CC           	ddw	_autorotation_work	; block 0 START_ADDR
  9999  18D0  000000DB           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
 10000                           
 10001                           ; Function: autorotation_work, coverage: 19,10,0
 10002  18D4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10003  18D8  00000028           	ddw	__ccovbit19_112/(0+8)	; CC_ADDR
 10004  18DC  00000001           	ddw	1	; NUM_POINTS
 10005  18E0  00000006           	ddw	__ccovbit19_112& (0+7)	; OFFSET
 10006  18E4  00000000           	ddw	0	; Reserved
 10007  18E8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10008  18EC  00000003           	ddw	3	; NUM_RANGES
 10009  18F0  00000133           	ddw	__ccov231_start_blk19	; block 19 START_ADDR
 10010  18F4  00000135           	ddw	__end_of_autorotation_work	; block 19 END_ADDR
 10011  18F8  00000101           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
 10012  18FC  0000010F           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
 10013  1900  000000CC           	ddw	_autorotation_work	; block 0 START_ADDR
 10014  1904  000000DB           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
 10015                           
 10016                           ; Function: minute_tick, coverage: 1,0
 10017  1908  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10018  190C  00000028           	ddw	__ccovbit1_113/(0+8)	; CC_ADDR
 10019  1910  00000001           	ddw	1	; NUM_POINTS
 10020  1914  00000005           	ddw	__ccovbit1_113& (0+7)	; OFFSET
 10021  1918  00000000           	ddw	0	; Reserved
 10022  191C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10023  1920  00000002           	ddw	2	; NUM_RANGES
 10024  1924  0000055A           	ddw	__ccov233_start_blk1	; block 1 START_ADDR
 10025  1928  0000055E           	ddw	__ccov233_end_blk1	; block 1 END_ADDR
 10026  192C  00000554           	ddw	_minute_tick	; block 0 START_ADDR
 10027  1930  0000055A           	ddw	__ccov232_end_blk0	; block 0 END_ADDR
 10028                           
 10029                           ; Function: minute_tick, coverage: 3,0
 10030  1934  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10031  1938  00000028           	ddw	__ccovbit3_114/(0+8)	; CC_ADDR
 10032  193C  00000001           	ddw	1	; NUM_POINTS
 10033  1940  00000004           	ddw	__ccovbit3_114& (0+7)	; OFFSET
 10034  1944  00000000           	ddw	0	; Reserved
 10035  1948  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10036  194C  00000002           	ddw	2	; NUM_RANGES
 10037  1950  0000055E           	ddw	__ccov234_start_blk3	; block 3 START_ADDR
 10038  1954  00000564           	ddw	__ccov234_end_blk3	; block 3 END_ADDR
 10039  1958  00000554           	ddw	_minute_tick	; block 0 START_ADDR
 10040  195C  0000055A           	ddw	__ccov232_end_blk0	; block 0 END_ADDR
 10041                           
 10042                           ; Function: minute_tick, coverage: 5,4,3,0
 10043  1960  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10044  1964  00000028           	ddw	__ccovbit5_115/(0+8)	; CC_ADDR
 10045  1968  00000001           	ddw	1	; NUM_POINTS
 10046  196C  00000003           	ddw	__ccovbit5_115& (0+7)	; OFFSET
 10047  1970  00000000           	ddw	0	; Reserved
 10048  1974  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10049  1978  00000004           	ddw	4	; NUM_RANGES
 10050  197C  00000565           	ddw	__ccov236_start_blk5	; block 5 START_ADDR
 10051  1980  0000056A           	ddw	__ccov236_end_blk5	; block 5 END_ADDR
 10052  1984  00000564           	ddw	__ccov235_start_blk4	; block 4 START_ADDR
 10053  1988  00000565           	ddw	__ccov235_end_blk4	; block 4 END_ADDR
 10054  198C  0000055E           	ddw	__ccov234_start_blk3	; block 3 START_ADDR
 10055  1990  00000564           	ddw	__ccov234_end_blk3	; block 3 END_ADDR
 10056  1994  00000554           	ddw	_minute_tick	; block 0 START_ADDR
 10057  1998  0000055A           	ddw	__ccov232_end_blk0	; block 0 END_ADDR
 10058                           
 10059                           ; Function: minute_tick, coverage: 8,0
 10060  199C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10061  19A0  00000028           	ddw	__ccovbit8_116/(0+8)	; CC_ADDR
 10062  19A4  00000001           	ddw	1	; NUM_POINTS
 10063  19A8  00000002           	ddw	__ccovbit8_116& (0+7)	; OFFSET
 10064  19AC  00000000           	ddw	0	; Reserved
 10065  19B0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10066  19B4  00000002           	ddw	2	; NUM_RANGES
 10067  19B8  0000056A           	ddw	__ccov237_start_blk8	; block 8 START_ADDR
 10068  19BC  0000056C           	ddw	__end_of_minute_tick	; block 8 END_ADDR
 10069  19C0  00000554           	ddw	_minute_tick	; block 0 START_ADDR
 10070  19C4  0000055A           	ddw	__ccov232_end_blk0	; block 0 END_ADDR
 10071                           
 10072                           ; Function: sec_30_work, coverage: 1,0
 10073  19C8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10074  19CC  00000028           	ddw	__ccovbit1_117/(0+8)	; CC_ADDR
 10075  19D0  00000001           	ddw	1	; NUM_POINTS
 10076  19D4  00000001           	ddw	__ccovbit1_117& (0+7)	; OFFSET
 10077  19D8  00000000           	ddw	0	; Reserved
 10078  19DC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10079  19E0  00000002           	ddw	2	; NUM_RANGES
 10080  19E4  00000650           	ddw	__ccov239_start_blk1	; block 1 START_ADDR
 10081  19E8  00000654           	ddw	__ccov239_end_blk1	; block 1 END_ADDR
 10082  19EC  0000064C           	ddw	_sec_30_work	; block 0 START_ADDR
 10083  19F0  00000650           	ddw	__ccov238_end_blk0	; block 0 END_ADDR
 10084                           
 10085                           ; Function: sec_30_work, coverage: 3,0
 10086  19F4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10087  19F8  00000028           	ddw	__ccovbit3_118/(0+8)	; CC_ADDR
 10088  19FC  00000001           	ddw	1	; NUM_POINTS
 10089  1A00  00000000           	ddw	__ccovbit3_118& (0+7)	; OFFSET
 10090  1A04  00000000           	ddw	0	; Reserved
 10091  1A08  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10092  1A0C  00000002           	ddw	2	; NUM_RANGES
 10093  1A10  00000654           	ddw	__ccov240_start_blk3	; block 3 START_ADDR
 10094  1A14  0000065A           	ddw	__ccov240_end_blk3	; block 3 END_ADDR
 10095  1A18  0000064C           	ddw	_sec_30_work	; block 0 START_ADDR
 10096  1A1C  00000650           	ddw	__ccov238_end_blk0	; block 0 END_ADDR
 10097                           
 10098                           ; Function: sec_30_work, coverage: 5,0
 10099  1A20  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10100  1A24  00000027           	ddw	__ccovbit5_119/(0+8)	; CC_ADDR
 10101  1A28  00000001           	ddw	1	; NUM_POINTS
 10102  1A2C  00000007           	ddw	__ccovbit5_119& (0+7)	; OFFSET
 10103  1A30  00000000           	ddw	0	; Reserved
 10104  1A34  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10105  1A38  00000002           	ddw	2	; NUM_RANGES
 10106  1A3C  0000065A           	ddw	__ccov241_start_blk5	; block 5 START_ADDR
 10107  1A40  0000065C           	ddw	__end_of_sec_30_work	; block 5 END_ADDR
 10108  1A44  0000064C           	ddw	_sec_30_work	; block 0 START_ADDR
 10109  1A48  00000650           	ddw	__ccov238_end_blk0	; block 0 END_ADDR
 10110                           
 10111                           ; Function: sec_work, coverage: 3,2,1,0
 10112  1A4C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10113  1A50  00000027           	ddw	__ccovbit3_120/(0+8)	; CC_ADDR
 10114  1A54  00000001           	ddw	1	; NUM_POINTS
 10115  1A58  00000006           	ddw	__ccovbit3_120& (0+7)	; OFFSET
 10116  1A5C  00000000           	ddw	0	; Reserved
 10117  1A60  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10118  1A64  00000004           	ddw	4	; NUM_RANGES
 10119  1A68  00000059           	ddw	__ccov245_start_blk3	; block 3 START_ADDR
 10120  1A6C  0000005D           	ddw	__ccov245_end_blk3	; block 3 END_ADDR
 10121  1A70  00000054           	ddw	__ccov244_start_blk2	; block 2 START_ADDR
 10122  1A74  00000059           	ddw	__ccov244_end_blk2	; block 2 END_ADDR
 10123  1A78  00000050           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
 10124  1A7C  00000054           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
 10125  1A80  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10126  1A84  00000050           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
 10127                           
 10128                           ; Function: sec_work, coverage: 4,2,1,0
 10129  1A88  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10130  1A8C  00000027           	ddw	__ccovbit4_121/(0+8)	; CC_ADDR
 10131  1A90  00000001           	ddw	1	; NUM_POINTS
 10132  1A94  00000005           	ddw	__ccovbit4_121& (0+7)	; OFFSET
 10133  1A98  00000000           	ddw	0	; Reserved
 10134  1A9C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10135  1AA0  00000004           	ddw	4	; NUM_RANGES
 10136  1AA4  0000005D           	ddw	__ccov246_start_blk4	; block 4 START_ADDR
 10137  1AA8  0000005F           	ddw	__ccov246_end_blk4	; block 4 END_ADDR
 10138  1AAC  00000054           	ddw	__ccov244_start_blk2	; block 2 START_ADDR
 10139  1AB0  00000059           	ddw	__ccov244_end_blk2	; block 2 END_ADDR
 10140  1AB4  00000050           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
 10141  1AB8  00000054           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
 10142  1ABC  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10143  1AC0  00000050           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
 10144                           
 10145                           ; Function: sec_work, coverage: 8,7,6,1,0
 10146  1AC4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10147  1AC8  00000027           	ddw	__ccovbit8_122/(0+8)	; CC_ADDR
 10148  1ACC  00000001           	ddw	1	; NUM_POINTS
 10149  1AD0  00000004           	ddw	__ccovbit8_122& (0+7)	; OFFSET
 10150  1AD4  00000000           	ddw	0	; Reserved
 10151  1AD8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10152  1ADC  00000005           	ddw	5	; NUM_RANGES
 10153  1AE0  00000067           	ddw	__ccov249_start_blk8	; block 8 START_ADDR
 10154  1AE4  00000072           	ddw	__ccov249_end_blk8	; block 8 END_ADDR
 10155  1AE8  00000063           	ddw	__ccov248_start_blk7	; block 7 START_ADDR
 10156  1AEC  00000067           	ddw	__ccov248_end_blk7	; block 7 END_ADDR
 10157  1AF0  0000005F           	ddw	__ccov247_start_blk6	; block 6 START_ADDR
 10158  1AF4  00000063           	ddw	__ccov247_end_blk6	; block 6 END_ADDR
 10159  1AF8  00000050           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
 10160  1AFC  00000054           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
 10161  1B00  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10162  1B04  00000050           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
 10163                           
 10164                           ; Function: sec_work, coverage: 10,7,6,1,0
 10165  1B08  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10166  1B0C  00000027           	ddw	__ccovbit10_123/(0+8)	; CC_ADDR
 10167  1B10  00000001           	ddw	1	; NUM_POINTS
 10168  1B14  00000003           	ddw	__ccovbit10_123& (0+7)	; OFFSET
 10169  1B18  00000000           	ddw	0	; Reserved
 10170  1B1C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10171  1B20  00000005           	ddw	5	; NUM_RANGES
 10172  1B24  00000072           	ddw	__ccov250_start_blk10	; block 10 START_ADDR
 10173  1B28  00000076           	ddw	__ccov250_end_blk10	; block 10 END_ADDR
 10174  1B2C  00000063           	ddw	__ccov248_start_blk7	; block 7 START_ADDR
 10175  1B30  00000067           	ddw	__ccov248_end_blk7	; block 7 END_ADDR
 10176  1B34  0000005F           	ddw	__ccov247_start_blk6	; block 6 START_ADDR
 10177  1B38  00000063           	ddw	__ccov247_end_blk6	; block 6 END_ADDR
 10178  1B3C  00000050           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
 10179  1B40  00000054           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
 10180  1B44  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10181  1B48  00000050           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
 10182                           
 10183                           ; Function: sec_work, coverage: 14,13,12,6,1,0
 10184  1B4C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10185  1B50  00000027           	ddw	__ccovbit14_124/(0+8)	; CC_ADDR
 10186  1B54  00000001           	ddw	1	; NUM_POINTS
 10187  1B58  00000002           	ddw	__ccovbit14_124& (0+7)	; OFFSET
 10188  1B5C  00000000           	ddw	0	; Reserved
 10189  1B60  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10190  1B64  00000006           	ddw	6	; NUM_RANGES
 10191  1B68  00000081           	ddw	__ccov253_start_blk14	; block 14 START_ADDR
 10192  1B6C  00000088           	ddw	__ccov253_end_blk14	; block 14 END_ADDR
 10193  1B70  0000007A           	ddw	__ccov252_start_blk13	; block 13 START_ADDR
 10194  1B74  00000081           	ddw	__ccov252_end_blk13	; block 13 END_ADDR
 10195  1B78  00000076           	ddw	__ccov251_start_blk12	; block 12 START_ADDR
 10196  1B7C  0000007A           	ddw	__ccov251_end_blk12	; block 12 END_ADDR
 10197  1B80  0000005F           	ddw	__ccov247_start_blk6	; block 6 START_ADDR
 10198  1B84  00000063           	ddw	__ccov247_end_blk6	; block 6 END_ADDR
 10199  1B88  00000050           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
 10200  1B8C  00000054           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
 10201  1B90  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10202  1B94  00000050           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
 10203                           
 10204                           ; Function: sec_work, coverage: 16,13,12,6,1,0
 10205  1B98  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10206  1B9C  00000027           	ddw	__ccovbit16_125/(0+8)	; CC_ADDR
 10207  1BA0  00000001           	ddw	1	; NUM_POINTS
 10208  1BA4  00000001           	ddw	__ccovbit16_125& (0+7)	; OFFSET
 10209  1BA8  00000000           	ddw	0	; Reserved
 10210  1BAC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10211  1BB0  00000006           	ddw	6	; NUM_RANGES
 10212  1BB4  00000088           	ddw	__ccov254_start_blk16	; block 16 START_ADDR
 10213  1BB8  0000008C           	ddw	__ccov254_end_blk16	; block 16 END_ADDR
 10214  1BBC  0000007A           	ddw	__ccov252_start_blk13	; block 13 START_ADDR
 10215  1BC0  00000081           	ddw	__ccov252_end_blk13	; block 13 END_ADDR
 10216  1BC4  00000076           	ddw	__ccov251_start_blk12	; block 12 START_ADDR
 10217  1BC8  0000007A           	ddw	__ccov251_end_blk12	; block 12 END_ADDR
 10218  1BCC  0000005F           	ddw	__ccov247_start_blk6	; block 6 START_ADDR
 10219  1BD0  00000063           	ddw	__ccov247_end_blk6	; block 6 END_ADDR
 10220  1BD4  00000050           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
 10221  1BD8  00000054           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
 10222  1BDC  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10223  1BE0  00000050           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
 10224                           
 10225                           ; Function: sec_work, coverage: 18,13,12,6,1,0
 10226  1BE4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10227  1BE8  00000027           	ddw	__ccovbit18_126/(0+8)	; CC_ADDR
 10228  1BEC  00000001           	ddw	1	; NUM_POINTS
 10229  1BF0  00000000           	ddw	__ccovbit18_126& (0+7)	; OFFSET
 10230  1BF4  00000000           	ddw	0	; Reserved
 10231  1BF8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10232  1BFC  00000006           	ddw	6	; NUM_RANGES
 10233  1C00  0000008C           	ddw	__ccov255_start_blk18	; block 18 START_ADDR
 10234  1C04  0000009D           	ddw	__ccov255_end_blk18	; block 18 END_ADDR
 10235  1C08  0000007A           	ddw	__ccov252_start_blk13	; block 13 START_ADDR
 10236  1C0C  00000081           	ddw	__ccov252_end_blk13	; block 13 END_ADDR
 10237  1C10  00000076           	ddw	__ccov251_start_blk12	; block 12 START_ADDR
 10238  1C14  0000007A           	ddw	__ccov251_end_blk12	; block 12 END_ADDR
 10239  1C18  0000005F           	ddw	__ccov247_start_blk6	; block 6 START_ADDR
 10240  1C1C  00000063           	ddw	__ccov247_end_blk6	; block 6 END_ADDR
 10241  1C20  00000050           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
 10242  1C24  00000054           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
 10243  1C28  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10244  1C2C  00000050           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
 10245                           
 10246                           ; Function: sec_work, coverage: 19,12,6,1,0
 10247  1C30  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10248  1C34  00000026           	ddw	__ccovbit19_127/(0+8)	; CC_ADDR
 10249  1C38  00000001           	ddw	1	; NUM_POINTS
 10250  1C3C  00000007           	ddw	__ccovbit19_127& (0+7)	; OFFSET
 10251  1C40  00000000           	ddw	0	; Reserved
 10252  1C44  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10253  1C48  00000005           	ddw	5	; NUM_RANGES
 10254  1C4C  0000009D           	ddw	__ccov256_start_blk19	; block 19 START_ADDR
 10255  1C50  000000A3           	ddw	__ccov256_end_blk19	; block 19 END_ADDR
 10256  1C54  00000076           	ddw	__ccov251_start_blk12	; block 12 START_ADDR
 10257  1C58  0000007A           	ddw	__ccov251_end_blk12	; block 12 END_ADDR
 10258  1C5C  0000005F           	ddw	__ccov247_start_blk6	; block 6 START_ADDR
 10259  1C60  00000063           	ddw	__ccov247_end_blk6	; block 6 END_ADDR
 10260  1C64  00000050           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
 10261  1C68  00000054           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
 10262  1C6C  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10263  1C70  00000050           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
 10264                           
 10265                           ; Function: sec_work, coverage: 21,20,19,12,6,1,0
 10266  1C74  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10267  1C78  00000026           	ddw	__ccovbit21_128/(0+8)	; CC_ADDR
 10268  1C7C  00000001           	ddw	1	; NUM_POINTS
 10269  1C80  00000006           	ddw	__ccovbit21_128& (0+7)	; OFFSET
 10270  1C84  00000000           	ddw	0	; Reserved
 10271  1C88  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10272  1C8C  00000007           	ddw	7	; NUM_RANGES
 10273  1C90  000000A7           	ddw	__ccov258_start_blk21	; block 21 START_ADDR
 10274  1C94  000000AE           	ddw	__ccov258_end_blk21	; block 21 END_ADDR
 10275  1C98  000000A3           	ddw	__ccov257_start_blk20	; block 20 START_ADDR
 10276  1C9C  000000A7           	ddw	__ccov257_end_blk20	; block 20 END_ADDR
 10277  1CA0  0000009D           	ddw	__ccov256_start_blk19	; block 19 START_ADDR
 10278  1CA4  000000A3           	ddw	__ccov256_end_blk19	; block 19 END_ADDR
 10279  1CA8  00000076           	ddw	__ccov251_start_blk12	; block 12 START_ADDR
 10280  1CAC  0000007A           	ddw	__ccov251_end_blk12	; block 12 END_ADDR
 10281  1CB0  0000005F           	ddw	__ccov247_start_blk6	; block 6 START_ADDR
 10282  1CB4  00000063           	ddw	__ccov247_end_blk6	; block 6 END_ADDR
 10283  1CB8  00000050           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
 10284  1CBC  00000054           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
 10285  1CC0  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10286  1CC4  00000050           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
 10287                           
 10288                           ; Function: sec_work, coverage: 23,22,21,20,19,12,6,1,0
 10289  1CC8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10290  1CCC  00000026           	ddw	__ccovbit23_129/(0+8)	; CC_ADDR
 10291  1CD0  00000001           	ddw	1	; NUM_POINTS
 10292  1CD4  00000005           	ddw	__ccovbit23_129& (0+7)	; OFFSET
 10293  1CD8  00000000           	ddw	0	; Reserved
 10294  1CDC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10295  1CE0  00000009           	ddw	9	; NUM_RANGES
 10296  1CE4  000000BC           	ddw	__ccov260_start_blk23	; block 23 START_ADDR
 10297  1CE8  000000BE           	ddw	__ccov260_end_blk23	; block 23 END_ADDR
 10298  1CEC  000000AE           	ddw	__ccov259_start_blk22	; block 22 START_ADDR
 10299  1CF0  000000BC           	ddw	__ccov259_end_blk22	; block 22 END_ADDR
 10300  1CF4  000000A7           	ddw	__ccov258_start_blk21	; block 21 START_ADDR
 10301  1CF8  000000AE           	ddw	__ccov258_end_blk21	; block 21 END_ADDR
 10302  1CFC  000000A3           	ddw	__ccov257_start_blk20	; block 20 START_ADDR
 10303  1D00  000000A7           	ddw	__ccov257_end_blk20	; block 20 END_ADDR
 10304  1D04  0000009D           	ddw	__ccov256_start_blk19	; block 19 START_ADDR
 10305  1D08  000000A3           	ddw	__ccov256_end_blk19	; block 19 END_ADDR
 10306  1D0C  00000076           	ddw	__ccov251_start_blk12	; block 12 START_ADDR
 10307  1D10  0000007A           	ddw	__ccov251_end_blk12	; block 12 END_ADDR
 10308  1D14  0000005F           	ddw	__ccov247_start_blk6	; block 6 START_ADDR
 10309  1D18  00000063           	ddw	__ccov247_end_blk6	; block 6 END_ADDR
 10310  1D1C  00000050           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
 10311  1D20  00000054           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
 10312  1D24  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10313  1D28  00000050           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
 10314                           
 10315                           ; Function: sec_work, coverage: 29,28,27,12,6,1,0
 10316  1D2C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10317  1D30  00000026           	ddw	__ccovbit29_130/(0+8)	; CC_ADDR
 10318  1D34  00000001           	ddw	1	; NUM_POINTS
 10319  1D38  00000004           	ddw	__ccovbit29_130& (0+7)	; OFFSET
 10320  1D3C  00000000           	ddw	0	; Reserved
 10321  1D40  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10322  1D44  00000007           	ddw	7	; NUM_RANGES
 10323  1D48  000000C7           	ddw	__ccov263_start_blk29	; block 29 START_ADDR
 10324  1D4C  000000CA           	ddw	__ccov263_end_blk29	; block 29 END_ADDR
 10325  1D50  000000C4           	ddw	__ccov262_start_blk28	; block 28 START_ADDR
 10326  1D54  000000C7           	ddw	__ccov262_end_blk28	; block 28 END_ADDR
 10327  1D58  000000BE           	ddw	__ccov261_start_blk27	; block 27 START_ADDR
 10328  1D5C  000000C4           	ddw	__ccov261_end_blk27	; block 27 END_ADDR
 10329  1D60  00000076           	ddw	__ccov251_start_blk12	; block 12 START_ADDR
 10330  1D64  0000007A           	ddw	__ccov251_end_blk12	; block 12 END_ADDR
 10331  1D68  0000005F           	ddw	__ccov247_start_blk6	; block 6 START_ADDR
 10332  1D6C  00000063           	ddw	__ccov247_end_blk6	; block 6 END_ADDR
 10333  1D70  00000050           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
 10334  1D74  00000054           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
 10335  1D78  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10336  1D7C  00000050           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
 10337                           
 10338                           ; Function: sec_work, coverage: 31,27,12,6,1,0
 10339  1D80  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10340  1D84  00000026           	ddw	__ccovbit31_131/(0+8)	; CC_ADDR
 10341  1D88  00000001           	ddw	1	; NUM_POINTS
 10342  1D8C  00000003           	ddw	__ccovbit31_131& (0+7)	; OFFSET
 10343  1D90  00000000           	ddw	0	; Reserved
 10344  1D94  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10345  1D98  00000006           	ddw	6	; NUM_RANGES
 10346  1D9C  000000CA           	ddw	__ccov264_start_blk31	; block 31 START_ADDR
 10347  1DA0  000000CC           	ddw	__end_of_sec_work	; block 31 END_ADDR
 10348  1DA4  000000BE           	ddw	__ccov261_start_blk27	; block 27 START_ADDR
 10349  1DA8  000000C4           	ddw	__ccov261_end_blk27	; block 27 END_ADDR
 10350  1DAC  00000076           	ddw	__ccov251_start_blk12	; block 12 START_ADDR
 10351  1DB0  0000007A           	ddw	__ccov251_end_blk12	; block 12 END_ADDR
 10352  1DB4  0000005F           	ddw	__ccov247_start_blk6	; block 6 START_ADDR
 10353  1DB8  00000063           	ddw	__ccov247_end_blk6	; block 6 END_ADDR
 10354  1DBC  00000050           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
 10355  1DC0  00000054           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
 10356  1DC4  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10357  1DC8  00000050           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
 10358                           
 10359                           ; Function: ms_200_work, coverage: 1,0
 10360  1DCC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10361  1DD0  00000026           	ddw	__ccovbit1_132/(0+8)	; CC_ADDR
 10362  1DD4  00000001           	ddw	1	; NUM_POINTS
 10363  1DD8  00000002           	ddw	__ccovbit1_132& (0+7)	; OFFSET
 10364  1DDC  00000000           	ddw	0	; Reserved
 10365  1DE0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10366  1DE4  00000002           	ddw	2	; NUM_RANGES
 10367  1DE8  0000028B           	ddw	__ccov266_start_blk1	; block 1 START_ADDR
 10368  1DEC  00000291           	ddw	__ccov266_end_blk1	; block 1 END_ADDR
 10369  1DF0  00000287           	ddw	_ms_200_work	; block 0 START_ADDR
 10370  1DF4  0000028B           	ddw	__ccov265_end_blk0	; block 0 END_ADDR
 10371                           
 10372                           ; Function: ms_200_work, coverage: 2,0
 10373  1DF8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10374  1DFC  00000026           	ddw	__ccovbit2_133/(0+8)	; CC_ADDR
 10375  1E00  00000001           	ddw	1	; NUM_POINTS
 10376  1E04  00000001           	ddw	__ccovbit2_133& (0+7)	; OFFSET
 10377  1E08  00000000           	ddw	0	; Reserved
 10378  1E0C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10379  1E10  00000002           	ddw	2	; NUM_RANGES
 10380  1E14  00000291           	ddw	__ccov267_start_blk2	; block 2 START_ADDR
 10381  1E18  00000296           	ddw	__ccov267_end_blk2	; block 2 END_ADDR
 10382  1E1C  00000287           	ddw	_ms_200_work	; block 0 START_ADDR
 10383  1E20  0000028B           	ddw	__ccov265_end_blk0	; block 0 END_ADDR
 10384                           
 10385                           ; Function: ms_200_work, coverage: 4,1,0
 10386  1E24  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10387  1E28  00000026           	ddw	__ccovbit4_134/(0+8)	; CC_ADDR
 10388  1E2C  00000001           	ddw	1	; NUM_POINTS
 10389  1E30  00000000           	ddw	__ccovbit4_134& (0+7)	; OFFSET
 10390  1E34  00000000           	ddw	0	; Reserved
 10391  1E38  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10392  1E3C  00000003           	ddw	3	; NUM_RANGES
 10393  1E40  00000296           	ddw	__ccov268_start_blk4	; block 4 START_ADDR
 10394  1E44  0000029C           	ddw	__ccov268_end_blk4	; block 4 END_ADDR
 10395  1E48  0000028B           	ddw	__ccov266_start_blk1	; block 1 START_ADDR
 10396  1E4C  00000291           	ddw	__ccov266_end_blk1	; block 1 END_ADDR
 10397  1E50  00000287           	ddw	_ms_200_work	; block 0 START_ADDR
 10398  1E54  0000028B           	ddw	__ccov265_end_blk0	; block 0 END_ADDR
 10399                           
 10400                           ; Function: ms_200_work, coverage: 5,4,1,0
 10401  1E58  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10402  1E5C  00000025           	ddw	__ccovbit5_135/(0+8)	; CC_ADDR
 10403  1E60  00000001           	ddw	1	; NUM_POINTS
 10404  1E64  00000007           	ddw	__ccovbit5_135& (0+7)	; OFFSET
 10405  1E68  00000000           	ddw	0	; Reserved
 10406  1E6C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10407  1E70  00000004           	ddw	4	; NUM_RANGES
 10408  1E74  0000029C           	ddw	__ccov269_start_blk5	; block 5 START_ADDR
 10409  1E78  000002A1           	ddw	__ccov269_end_blk5	; block 5 END_ADDR
 10410  1E7C  00000296           	ddw	__ccov268_start_blk4	; block 4 START_ADDR
 10411  1E80  0000029C           	ddw	__ccov268_end_blk4	; block 4 END_ADDR
 10412  1E84  0000028B           	ddw	__ccov266_start_blk1	; block 1 START_ADDR
 10413  1E88  00000291           	ddw	__ccov266_end_blk1	; block 1 END_ADDR
 10414  1E8C  00000287           	ddw	_ms_200_work	; block 0 START_ADDR
 10415  1E90  0000028B           	ddw	__ccov265_end_blk0	; block 0 END_ADDR
 10416                           
 10417                           ; Function: ms_200_work, coverage: 8,0
 10418  1E94  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10419  1E98  00000025           	ddw	__ccovbit8_136/(0+8)	; CC_ADDR
 10420  1E9C  00000001           	ddw	1	; NUM_POINTS
 10421  1EA0  00000006           	ddw	__ccovbit8_136& (0+7)	; OFFSET
 10422  1EA4  00000000           	ddw	0	; Reserved
 10423  1EA8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10424  1EAC  00000002           	ddw	2	; NUM_RANGES
 10425  1EB0  000002A1           	ddw	__ccov270_start_blk8	; block 8 START_ADDR
 10426  1EB4  000002A7           	ddw	__ccov270_end_blk8	; block 8 END_ADDR
 10427  1EB8  00000287           	ddw	_ms_200_work	; block 0 START_ADDR
 10428  1EBC  0000028B           	ddw	__ccov265_end_blk0	; block 0 END_ADDR
 10429                           
 10430                           ; Function: ms_200_work, coverage: 10,9,8,0
 10431  1EC0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10432  1EC4  00000025           	ddw	__ccovbit10_137/(0+8)	; CC_ADDR
 10433  1EC8  00000001           	ddw	1	; NUM_POINTS
 10434  1ECC  00000005           	ddw	__ccovbit10_137& (0+7)	; OFFSET
 10435  1ED0  00000000           	ddw	0	; Reserved
 10436  1ED4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10437  1ED8  00000004           	ddw	4	; NUM_RANGES
 10438  1EDC  000002AC           	ddw	__ccov272_start_blk10	; block 10 START_ADDR
 10439  1EE0  000002B3           	ddw	__ccov272_end_blk10	; block 10 END_ADDR
 10440  1EE4  000002A7           	ddw	__ccov271_start_blk9	; block 9 START_ADDR
 10441  1EE8  000002AC           	ddw	__ccov271_end_blk9	; block 9 END_ADDR
 10442  1EEC  000002A1           	ddw	__ccov270_start_blk8	; block 8 START_ADDR
 10443  1EF0  000002A7           	ddw	__ccov270_end_blk8	; block 8 END_ADDR
 10444  1EF4  00000287           	ddw	_ms_200_work	; block 0 START_ADDR
 10445  1EF8  0000028B           	ddw	__ccov265_end_blk0	; block 0 END_ADDR
 10446                           
 10447                           ; Function: ms_200_work, coverage: 14,13,9,8,0
 10448  1EFC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10449  1F00  00000025           	ddw	__ccovbit14_138/(0+8)	; CC_ADDR
 10450  1F04  00000001           	ddw	1	; NUM_POINTS
 10451  1F08  00000004           	ddw	__ccovbit14_138& (0+7)	; OFFSET
 10452  1F0C  00000000           	ddw	0	; Reserved
 10453  1F10  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10454  1F14  00000005           	ddw	5	; NUM_RANGES
 10455  1F18  000002B8           	ddw	__ccov274_start_blk14	; block 14 START_ADDR
 10456  1F1C  000002BC           	ddw	__ccov274_end_blk14	; block 14 END_ADDR
 10457  1F20  000002B3           	ddw	__ccov273_start_blk13	; block 13 START_ADDR
 10458  1F24  000002B8           	ddw	__ccov273_end_blk13	; block 13 END_ADDR
 10459  1F28  000002A7           	ddw	__ccov271_start_blk9	; block 9 START_ADDR
 10460  1F2C  000002AC           	ddw	__ccov271_end_blk9	; block 9 END_ADDR
 10461  1F30  000002A1           	ddw	__ccov270_start_blk8	; block 8 START_ADDR
 10462  1F34  000002A7           	ddw	__ccov270_end_blk8	; block 8 END_ADDR
 10463  1F38  00000287           	ddw	_ms_200_work	; block 0 START_ADDR
 10464  1F3C  0000028B           	ddw	__ccov265_end_blk0	; block 0 END_ADDR
 10465                           
 10466                           ; Function: ms_200_work, coverage: 16,13,9,8,0
 10467  1F40  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10468  1F44  00000025           	ddw	__ccovbit16_139/(0+8)	; CC_ADDR
 10469  1F48  00000001           	ddw	1	; NUM_POINTS
 10470  1F4C  00000003           	ddw	__ccovbit16_139& (0+7)	; OFFSET
 10471  1F50  00000000           	ddw	0	; Reserved
 10472  1F54  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10473  1F58  00000005           	ddw	5	; NUM_RANGES
 10474  1F5C  000002BC           	ddw	__ccov275_start_blk16	; block 16 START_ADDR
 10475  1F60  000002C3           	ddw	__ccov275_end_blk16	; block 16 END_ADDR
 10476  1F64  000002B3           	ddw	__ccov273_start_blk13	; block 13 START_ADDR
 10477  1F68  000002B8           	ddw	__ccov273_end_blk13	; block 13 END_ADDR
 10478  1F6C  000002A7           	ddw	__ccov271_start_blk9	; block 9 START_ADDR
 10479  1F70  000002AC           	ddw	__ccov271_end_blk9	; block 9 END_ADDR
 10480  1F74  000002A1           	ddw	__ccov270_start_blk8	; block 8 START_ADDR
 10481  1F78  000002A7           	ddw	__ccov270_end_blk8	; block 8 END_ADDR
 10482  1F7C  00000287           	ddw	_ms_200_work	; block 0 START_ADDR
 10483  1F80  0000028B           	ddw	__ccov265_end_blk0	; block 0 END_ADDR
 10484                           
 10485                           ; Function: ms_200_work, coverage: 17,16,13,9,8,0
 10486  1F84  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10487  1F88  00000025           	ddw	__ccovbit17_140/(0+8)	; CC_ADDR
 10488  1F8C  00000001           	ddw	1	; NUM_POINTS
 10489  1F90  00000002           	ddw	__ccovbit17_140& (0+7)	; OFFSET
 10490  1F94  00000000           	ddw	0	; Reserved
 10491  1F98  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10492  1F9C  00000006           	ddw	6	; NUM_RANGES
 10493  1FA0  000002C3           	ddw	__ccov276_start_blk17	; block 17 START_ADDR
 10494  1FA4  000002C7           	ddw	__ccov276_end_blk17	; block 17 END_ADDR
 10495  1FA8  000002BC           	ddw	__ccov275_start_blk16	; block 16 START_ADDR
 10496  1FAC  000002C3           	ddw	__ccov275_end_blk16	; block 16 END_ADDR
 10497  1FB0  000002B3           	ddw	__ccov273_start_blk13	; block 13 START_ADDR
 10498  1FB4  000002B8           	ddw	__ccov273_end_blk13	; block 13 END_ADDR
 10499  1FB8  000002A7           	ddw	__ccov271_start_blk9	; block 9 START_ADDR
 10500  1FBC  000002AC           	ddw	__ccov271_end_blk9	; block 9 END_ADDR
 10501  1FC0  000002A1           	ddw	__ccov270_start_blk8	; block 8 START_ADDR
 10502  1FC4  000002A7           	ddw	__ccov270_end_blk8	; block 8 END_ADDR
 10503  1FC8  00000287           	ddw	_ms_200_work	; block 0 START_ADDR
 10504  1FCC  0000028B           	ddw	__ccov265_end_blk0	; block 0 END_ADDR
 10505                           
 10506                           ; Function: ms_200_work, coverage: 22,0
 10507  1FD0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10508  1FD4  00000025           	ddw	__ccovbit22_141/(0+8)	; CC_ADDR
 10509  1FD8  00000001           	ddw	1	; NUM_POINTS
 10510  1FDC  00000001           	ddw	__ccovbit22_141& (0+7)	; OFFSET
 10511  1FE0  00000000           	ddw	0	; Reserved
 10512  1FE4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10513  1FE8  00000002           	ddw	2	; NUM_RANGES
 10514  1FEC  000002C7           	ddw	__ccov277_start_blk22	; block 22 START_ADDR
 10515  1FF0  000002CA           	ddw	__end_of_ms_200_work	; block 22 END_ADDR
 10516  1FF4  00000287           	ddw	_ms_200_work	; block 0 START_ADDR
 10517  1FF8  0000028B           	ddw	__ccov265_end_blk0	; block 0 END_ADDR
 10518                           
 10519                           ; Function: ms_100_work, coverage: 1,0
 10520  1FFC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10521  2000  00000025           	ddw	__ccovbit1_142/(0+8)	; CC_ADDR
 10522  2004  00000001           	ddw	1	; NUM_POINTS
 10523  2008  00000000           	ddw	__ccovbit1_142& (0+7)	; OFFSET
 10524  200C  00000000           	ddw	0	; Reserved
 10525  2010  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10526  2014  00000002           	ddw	2	; NUM_RANGES
 10527  2018  00000660           	ddw	__ccov279_start_blk1	; block 1 START_ADDR
 10528  201C  00000666           	ddw	__ccov279_end_blk1	; block 1 END_ADDR
 10529  2020  0000065C           	ddw	_ms_100_work	; block 0 START_ADDR
 10530  2024  00000660           	ddw	__ccov278_end_blk0	; block 0 END_ADDR
 10531                           
 10532                           ; Function: ms_100_work, coverage: 2,0
 10533  2028  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10534  202C  00000024           	ddw	__ccovbit2_143/(0+8)	; CC_ADDR
 10535  2030  00000001           	ddw	1	; NUM_POINTS
 10536  2034  00000007           	ddw	__ccovbit2_143& (0+7)	; OFFSET
 10537  2038  00000000           	ddw	0	; Reserved
 10538  203C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10539  2040  00000002           	ddw	2	; NUM_RANGES
 10540  2044  00000666           	ddw	__ccov280_start_blk2	; block 2 START_ADDR
 10541  2048  00000669           	ddw	__ccov280_end_blk2	; block 2 END_ADDR
 10542  204C  0000065C           	ddw	_ms_100_work	; block 0 START_ADDR
 10543  2050  00000660           	ddw	__ccov278_end_blk0	; block 0 END_ADDR
 10544                           
 10545                           ; Function: ms_100_work, coverage: 4,0
 10546  2054  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10547  2058  00000024           	ddw	__ccovbit4_144/(0+8)	; CC_ADDR
 10548  205C  00000001           	ddw	1	; NUM_POINTS
 10549  2060  00000006           	ddw	__ccovbit4_144& (0+7)	; OFFSET
 10550  2064  00000000           	ddw	0	; Reserved
 10551  2068  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10552  206C  00000002           	ddw	2	; NUM_RANGES
 10553  2070  00000669           	ddw	__ccov281_start_blk4	; block 4 START_ADDR
 10554  2074  0000066B           	ddw	__end_of_ms_100_work	; block 4 END_ADDR
 10555  2078  0000065C           	ddw	_ms_100_work	; block 0 START_ADDR
 10556  207C  00000660           	ddw	__ccov278_end_blk0	; block 0 END_ADDR
 10557                           
 10558                           ; Function: ms_tick, coverage: 3,2,1,0
 10559  2080  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10560  2084  00000024           	ddw	__ccovbit3_145/(0+8)	; CC_ADDR
 10561  2088  00000001           	ddw	1	; NUM_POINTS
 10562  208C  00000005           	ddw	__ccovbit3_145& (0+7)	; OFFSET
 10563  2090  00000000           	ddw	0	; Reserved
 10564  2094  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10565  2098  00000004           	ddw	4	; NUM_RANGES
 10566  209C  000002D9           	ddw	__ccov285_start_blk3	; block 3 START_ADDR
 10567  20A0  000002E0           	ddw	__ccov285_end_blk3	; block 3 END_ADDR
 10568  20A4  000002D5           	ddw	__ccov284_start_blk2	; block 2 START_ADDR
 10569  20A8  000002D9           	ddw	__ccov284_end_blk2	; block 2 END_ADDR
 10570  20AC  000002CF           	ddw	__ccov283_start_blk1	; block 1 START_ADDR
 10571  20B0  000002D5           	ddw	__ccov283_end_blk1	; block 1 END_ADDR
 10572  20B4  000002CA           	ddw	_ms_tick	; block 0 START_ADDR
 10573  20B8  000002CF           	ddw	__ccov282_end_blk0	; block 0 END_ADDR
 10574                           
 10575                           ; Function: ms_tick, coverage: 4,3,2,1,0
 10576  20BC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10577  20C0  00000024           	ddw	__ccovbit4_146/(0+8)	; CC_ADDR
 10578  20C4  00000001           	ddw	1	; NUM_POINTS
 10579  20C8  00000004           	ddw	__ccovbit4_146& (0+7)	; OFFSET
 10580  20CC  00000000           	ddw	0	; Reserved
 10581  20D0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10582  20D4  00000005           	ddw	5	; NUM_RANGES
 10583  20D8  000002E0           	ddw	__ccov286_start_blk4	; block 4 START_ADDR
 10584  20DC  000002E4           	ddw	__ccov286_end_blk4	; block 4 END_ADDR
 10585  20E0  000002D9           	ddw	__ccov285_start_blk3	; block 3 START_ADDR
 10586  20E4  000002E0           	ddw	__ccov285_end_blk3	; block 3 END_ADDR
 10587  20E8  000002D5           	ddw	__ccov284_start_blk2	; block 2 START_ADDR
 10588  20EC  000002D9           	ddw	__ccov284_end_blk2	; block 2 END_ADDR
 10589  20F0  000002CF           	ddw	__ccov283_start_blk1	; block 1 START_ADDR
 10590  20F4  000002D5           	ddw	__ccov283_end_blk1	; block 1 END_ADDR
 10591  20F8  000002CA           	ddw	_ms_tick	; block 0 START_ADDR
 10592  20FC  000002CF           	ddw	__ccov282_end_blk0	; block 0 END_ADDR
 10593                           
 10594                           ; Function: ms_tick, coverage: 12,11,10,9,8,7,1,0
 10595  2100  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10596  2104  00000024           	ddw	__ccovbit12_147/(0+8)	; CC_ADDR
 10597  2108  00000001           	ddw	1	; NUM_POINTS
 10598  210C  00000003           	ddw	__ccovbit12_147& (0+7)	; OFFSET
 10599  2110  00000000           	ddw	0	; Reserved
 10600  2114  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10601  2118  00000008           	ddw	8	; NUM_RANGES
 10602  211C  000002F9           	ddw	__ccov292_start_blk12	; block 12 START_ADDR
 10603  2120  000002FC           	ddw	__ccov292_end_blk12	; block 12 END_ADDR
 10604  2124  000002F1           	ddw	__ccov291_start_blk11	; block 11 START_ADDR
 10605  2128  000002F9           	ddw	__ccov291_end_blk11	; block 11 END_ADDR
 10606  212C  000002EE           	ddw	__ccov290_start_blk10	; block 10 START_ADDR
 10607  2130  000002F1           	ddw	__ccov290_end_blk10	; block 10 END_ADDR
 10608  2134  000002E6           	ddw	__ccov289_start_blk9	; block 9 START_ADDR
 10609  2138  000002EE           	ddw	__ccov289_end_blk9	; block 9 END_ADDR
 10610  213C  000002E5           	ddw	__ccov288_start_blk8	; block 8 START_ADDR
 10611  2140  000002E6           	ddw	__ccov288_end_blk8	; block 8 END_ADDR
 10612  2144  000002E4           	ddw	__ccov287_start_blk7	; block 7 START_ADDR
 10613  2148  000002E5           	ddw	__ccov287_end_blk7	; block 7 END_ADDR
 10614  214C  000002CF           	ddw	__ccov283_start_blk1	; block 1 START_ADDR
 10615  2150  000002D5           	ddw	__ccov283_end_blk1	; block 1 END_ADDR
 10616  2154  000002CA           	ddw	_ms_tick	; block 0 START_ADDR
 10617  2158  000002CF           	ddw	__ccov282_end_blk0	; block 0 END_ADDR
 10618                           
 10619                           ; Function: ms_tick, coverage: 18,17,16,9,8,7,1,0
 10620  215C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10621  2160  00000024           	ddw	__ccovbit18_148/(0+8)	; CC_ADDR
 10622  2164  00000001           	ddw	1	; NUM_POINTS
 10623  2168  00000002           	ddw	__ccovbit18_148& (0+7)	; OFFSET
 10624  216C  00000000           	ddw	0	; Reserved
 10625  2170  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10626  2174  00000008           	ddw	8	; NUM_RANGES
 10627  2178  00000306           	ddw	__ccov295_start_blk18	; block 18 START_ADDR
 10628  217C  0000030A           	ddw	__ccov295_end_blk18	; block 18 END_ADDR
 10629  2180  00000303           	ddw	__ccov294_start_blk17	; block 17 START_ADDR
 10630  2184  00000306           	ddw	__ccov294_end_blk17	; block 17 END_ADDR
 10631  2188  000002FC           	ddw	__ccov293_start_blk16	; block 16 START_ADDR
 10632  218C  00000303           	ddw	__ccov293_end_blk16	; block 16 END_ADDR
 10633  2190  000002E6           	ddw	__ccov289_start_blk9	; block 9 START_ADDR
 10634  2194  000002EE           	ddw	__ccov289_end_blk9	; block 9 END_ADDR
 10635  2198  000002E5           	ddw	__ccov288_start_blk8	; block 8 START_ADDR
 10636  219C  000002E6           	ddw	__ccov288_end_blk8	; block 8 END_ADDR
 10637  21A0  000002E4           	ddw	__ccov287_start_blk7	; block 7 START_ADDR
 10638  21A4  000002E5           	ddw	__ccov287_end_blk7	; block 7 END_ADDR
 10639  21A8  000002CF           	ddw	__ccov283_start_blk1	; block 1 START_ADDR
 10640  21AC  000002D5           	ddw	__ccov283_end_blk1	; block 1 END_ADDR
 10641  21B0  000002CA           	ddw	_ms_tick	; block 0 START_ADDR
 10642  21B4  000002CF           	ddw	__ccov282_end_blk0	; block 0 END_ADDR
 10643                           
 10644                           ; Function: ms_tick, coverage: 20,16,9,8,7,1,0
 10645  21B8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10646  21BC  00000024           	ddw	__ccovbit20_149/(0+8)	; CC_ADDR
 10647  21C0  00000001           	ddw	1	; NUM_POINTS
 10648  21C4  00000001           	ddw	__ccovbit20_149& (0+7)	; OFFSET
 10649  21C8  00000000           	ddw	0	; Reserved
 10650  21CC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10651  21D0  00000007           	ddw	7	; NUM_RANGES
 10652  21D4  0000030A           	ddw	__ccov296_start_blk20	; block 20 START_ADDR
 10653  21D8  0000030C           	ddw	__end_of_ms_tick	; block 20 END_ADDR
 10654  21DC  000002FC           	ddw	__ccov293_start_blk16	; block 16 START_ADDR
 10655  21E0  00000303           	ddw	__ccov293_end_blk16	; block 16 END_ADDR
 10656  21E4  000002E6           	ddw	__ccov289_start_blk9	; block 9 START_ADDR
 10657  21E8  000002EE           	ddw	__ccov289_end_blk9	; block 9 END_ADDR
 10658  21EC  000002E5           	ddw	__ccov288_start_blk8	; block 8 START_ADDR
 10659  21F0  000002E6           	ddw	__ccov288_end_blk8	; block 8 END_ADDR
 10660  21F4  000002E4           	ddw	__ccov287_start_blk7	; block 7 START_ADDR
 10661  21F8  000002E5           	ddw	__ccov287_end_blk7	; block 7 END_ADDR
 10662  21FC  000002CF           	ddw	__ccov283_start_blk1	; block 1 START_ADDR
 10663  2200  000002D5           	ddw	__ccov283_end_blk1	; block 1 END_ADDR
 10664  2204  000002CA           	ddw	_ms_tick	; block 0 START_ADDR
 10665  2208  000002CF           	ddw	__ccov282_end_blk0	; block 0 END_ADDR
 10666                           
 10667                           ; Function: eeprom_set, coverage: 2,1,0
 10668  220C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10669  2210  00000024           	ddw	__ccovbit2_150/(0+8)	; CC_ADDR
 10670  2214  00000001           	ddw	1	; NUM_POINTS
 10671  2218  00000000           	ddw	__ccovbit2_150& (0+7)	; OFFSET
 10672  221C  00000000           	ddw	0	; Reserved
 10673  2220  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10674  2224  00000003           	ddw	3	; NUM_RANGES
 10675  2228  00000579           	ddw	__ccov299_start_blk2	; block 2 START_ADDR
 10676  222C  00000580           	ddw	__ccov299_end_blk2	; block 2 END_ADDR
 10677  2230  00000574           	ddw	__ccov298_start_blk1	; block 1 START_ADDR
 10678  2234  00000579           	ddw	__ccov298_end_blk1	; block 1 END_ADDR
 10679  2238  0000056C           	ddw	_eeprom_set	; block 0 START_ADDR
 10680  223C  00000574           	ddw	__ccov297_end_blk0	; block 0 END_ADDR
 10681                           
 10682                           ; Function: eeprom_set, coverage: 4,1,0
 10683  2240  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10684  2244  00000023           	ddw	__ccovbit4_151/(0+8)	; CC_ADDR
 10685  2248  00000001           	ddw	1	; NUM_POINTS
 10686  224C  00000007           	ddw	__ccovbit4_151& (0+7)	; OFFSET
 10687  2250  00000000           	ddw	0	; Reserved
 10688  2254  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10689  2258  00000003           	ddw	3	; NUM_RANGES
 10690  225C  00000580           	ddw	__ccov300_start_blk4	; block 4 START_ADDR
 10691  2260  00000583           	ddw	__end_of_eeprom_set	; block 4 END_ADDR
 10692  2264  00000574           	ddw	__ccov298_start_blk1	; block 1 START_ADDR
 10693  2268  00000579           	ddw	__ccov298_end_blk1	; block 1 END_ADDR
 10694  226C  0000056C           	ddw	_eeprom_set	; block 0 START_ADDR
 10695  2270  00000574           	ddw	__ccov297_end_blk0	; block 0 END_ADDR
 10696                           
 10697                           ; Function: hardware_work, coverage: 1,0
 10698  2274  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10699  2278  00000023           	ddw	__ccovbit1_152/(0+8)	; CC_ADDR
 10700  227C  00000001           	ddw	1	; NUM_POINTS
 10701  2280  00000006           	ddw	__ccovbit1_152& (0+7)	; OFFSET
 10702  2284  00000000           	ddw	0	; Reserved
 10703  2288  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10704  228C  00000002           	ddw	2	; NUM_RANGES
 10705  2290  00000378           	ddw	__ccov302_start_blk1	; block 1 START_ADDR
 10706  2294  0000037B           	ddw	__ccov302_end_blk1	; block 1 END_ADDR
 10707  2298  0000034C           	ddw	_hardware_work	; block 0 START_ADDR
 10708  229C  00000378           	ddw	__ccov301_end_blk0	; block 0 END_ADDR
 10709                           
 10710                           ; Function: hardware_work, coverage: 4,3,2,0
 10711  22A0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10712  22A4  00000023           	ddw	__ccovbit4_153/(0+8)	; CC_ADDR
 10713  22A8  00000001           	ddw	1	; NUM_POINTS
 10714  22AC  00000005           	ddw	__ccovbit4_153& (0+7)	; OFFSET
 10715  22B0  00000000           	ddw	0	; Reserved
 10716  22B4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10717  22B8  00000004           	ddw	4	; NUM_RANGES
 10718  22BC  00000380           	ddw	__ccov305_start_blk4	; block 4 START_ADDR
 10719  22C0  00000384           	ddw	__ccov305_end_blk4	; block 4 END_ADDR
 10720  22C4  0000037F           	ddw	__ccov304_start_blk3	; block 3 START_ADDR
 10721  22C8  00000380           	ddw	__ccov304_end_blk3	; block 3 END_ADDR
 10722  22CC  0000037B           	ddw	__ccov303_start_blk2	; block 2 START_ADDR
 10723  22D0  0000037F           	ddw	__ccov303_end_blk2	; block 2 END_ADDR
 10724  22D4  0000034C           	ddw	_hardware_work	; block 0 START_ADDR
 10725  22D8  00000378           	ddw	__ccov301_end_blk0	; block 0 END_ADDR
 10726                           
 10727                           ; Function: hardware_work, coverage: 7,2,0
 10728  22DC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10729  22E0  00000023           	ddw	__ccovbit7_154/(0+8)	; CC_ADDR
 10730  22E4  00000001           	ddw	1	; NUM_POINTS
 10731  22E8  00000004           	ddw	__ccovbit7_154& (0+7)	; OFFSET
 10732  22EC  00000000           	ddw	0	; Reserved
 10733  22F0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10734  22F4  00000003           	ddw	3	; NUM_RANGES
 10735  22F8  00000384           	ddw	__ccov306_start_blk7	; block 7 START_ADDR
 10736  22FC  00000387           	ddw	__end_of_hardware_work	; block 7 END_ADDR
 10737  2300  0000037B           	ddw	__ccov303_start_blk2	; block 2 START_ADDR
 10738  2304  0000037F           	ddw	__ccov303_end_blk2	; block 2 END_ADDR
 10739  2308  0000034C           	ddw	_hardware_work	; block 0 START_ADDR
 10740  230C  00000378           	ddw	__ccov301_end_blk0	; block 0 END_ADDR
 10741                           
 10742                           ; Function: zummer_switch, coverage: 3,1,0
 10743  2310  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10744  2314  00000023           	ddw	__ccovbit3_155/(0+8)	; CC_ADDR
 10745  2318  00000001           	ddw	1	; NUM_POINTS
 10746  231C  00000003           	ddw	__ccovbit3_155& (0+7)	; OFFSET
 10747  2320  00000000           	ddw	0	; Reserved
 10748  2324  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10749  2328  00000002           	ddw	2	; NUM_RANGES
 10750  232C  00000677           	ddw	__ccov309_start_blk3	; block 3 START_ADDR
 10751  2330  0000067A           	ddw	__end_of_zummer_switch	; block 3 END_ADDR
 10752  2334  0000066B           	ddw	_zummer_switch	; block 1 START_ADDR
 10753  2338  00000677           	ddw	__ccov308_end_blk1	; block 1 END_ADDR
 10754                           
 10755                           ; Function: get_wsp, coverage: 14,13,11,8,6,5,3,1,0
 10756  233C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10757  2340  00000023           	ddw	__ccovbit14_156/(0+8)	; CC_ADDR
 10758  2344  00000001           	ddw	1	; NUM_POINTS
 10759  2348  00000002           	ddw	__ccovbit14_156& (0+7)	; OFFSET
 10760  234C  00000000           	ddw	0	; Reserved
 10761  2350  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10762  2354  00000009           	ddw	9	; NUM_RANGES
 10763  2358  0000015E           	ddw	__ccov318_start_blk14	; block 14 START_ADDR
 10764  235C  00000164           	ddw	__ccov318_end_blk14	; block 14 END_ADDR
 10765  2360  00000154           	ddw	__ccov317_start_blk13	; block 13 START_ADDR
 10766  2364  0000015E           	ddw	__ccov317_end_blk13	; block 13 END_ADDR
 10767  2368  00000152           	ddw	__ccov316_start_blk11	; block 11 START_ADDR
 10768  236C  00000154           	ddw	__ccov316_end_blk11	; block 11 END_ADDR
 10769  2370  00000150           	ddw	__ccov315_start_blk8	; block 8 START_ADDR
 10770  2374  00000152           	ddw	__ccov315_end_blk8	; block 8 END_ADDR
 10771  2378  00000145           	ddw	__ccov314_start_blk6	; block 6 START_ADDR
 10772  237C  00000150           	ddw	__ccov314_end_blk6	; block 6 END_ADDR
 10773  2380  0000013D           	ddw	__ccov313_start_blk5	; block 5 START_ADDR
 10774  2384  00000145           	ddw	__ccov313_end_blk5	; block 5 END_ADDR
 10775  2388  0000013B           	ddw	__ccov312_start_blk3	; block 3 START_ADDR
 10776  238C  0000013D           	ddw	__ccov312_end_blk3	; block 3 END_ADDR
 10777  2390  00000139           	ddw	__ccov311_start_blk1	; block 1 START_ADDR
 10778  2394  0000013B           	ddw	__ccov311_end_blk1	; block 1 END_ADDR
 10779  2398  00000135           	ddw	_get_wsp	; block 0 START_ADDR
 10780  239C  00000139           	ddw	__ccov310_end_blk0	; block 0 END_ADDR
 10781                           
 10782                           ; Function: get_wsp, coverage: 16,13,11,8,6,5,3,1,0
 10783  23A0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10784  23A4  00000023           	ddw	__ccovbit16_157/(0+8)	; CC_ADDR
 10785  23A8  00000001           	ddw	1	; NUM_POINTS
 10786  23AC  00000001           	ddw	__ccovbit16_157& (0+7)	; OFFSET
 10787  23B0  00000000           	ddw	0	; Reserved
 10788  23B4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10789  23B8  00000009           	ddw	9	; NUM_RANGES
 10790  23BC  00000164           	ddw	__ccov319_start_blk16	; block 16 START_ADDR
 10791  23C0  0000016E           	ddw	__ccov319_end_blk16	; block 16 END_ADDR
 10792  23C4  00000154           	ddw	__ccov317_start_blk13	; block 13 START_ADDR
 10793  23C8  0000015E           	ddw	__ccov317_end_blk13	; block 13 END_ADDR
 10794  23CC  00000152           	ddw	__ccov316_start_blk11	; block 11 START_ADDR
 10795  23D0  00000154           	ddw	__ccov316_end_blk11	; block 11 END_ADDR
 10796  23D4  00000150           	ddw	__ccov315_start_blk8	; block 8 START_ADDR
 10797  23D8  00000152           	ddw	__ccov315_end_blk8	; block 8 END_ADDR
 10798  23DC  00000145           	ddw	__ccov314_start_blk6	; block 6 START_ADDR
 10799  23E0  00000150           	ddw	__ccov314_end_blk6	; block 6 END_ADDR
 10800  23E4  0000013D           	ddw	__ccov313_start_blk5	; block 5 START_ADDR
 10801  23E8  00000145           	ddw	__ccov313_end_blk5	; block 5 END_ADDR
 10802  23EC  0000013B           	ddw	__ccov312_start_blk3	; block 3 START_ADDR
 10803  23F0  0000013D           	ddw	__ccov312_end_blk3	; block 3 END_ADDR
 10804  23F4  00000139           	ddw	__ccov311_start_blk1	; block 1 START_ADDR
 10805  23F8  0000013B           	ddw	__ccov311_end_blk1	; block 1 END_ADDR
 10806  23FC  00000135           	ddw	_get_wsp	; block 0 START_ADDR
 10807  2400  00000139           	ddw	__ccov310_end_blk0	; block 0 END_ADDR
 10808                           
 10809                           ; Function: get_wsp, coverage: 17,16,13,11,8,6,5,3,1,0
 10810  2404  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10811  2408  00000023           	ddw	__ccovbit17_158/(0+8)	; CC_ADDR
 10812  240C  00000001           	ddw	1	; NUM_POINTS
 10813  2410  00000000           	ddw	__ccovbit17_158& (0+7)	; OFFSET
 10814  2414  00000000           	ddw	0	; Reserved
 10815  2418  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10816  241C  0000000A           	ddw	10	; NUM_RANGES
 10817  2420  0000016E           	ddw	__ccov320_start_blk17	; block 17 START_ADDR
 10818  2424  00000173           	ddw	__ccov320_end_blk17	; block 17 END_ADDR
 10819  2428  00000164           	ddw	__ccov319_start_blk16	; block 16 START_ADDR
 10820  242C  0000016E           	ddw	__ccov319_end_blk16	; block 16 END_ADDR
 10821  2430  00000154           	ddw	__ccov317_start_blk13	; block 13 START_ADDR
 10822  2434  0000015E           	ddw	__ccov317_end_blk13	; block 13 END_ADDR
 10823  2438  00000152           	ddw	__ccov316_start_blk11	; block 11 START_ADDR
 10824  243C  00000154           	ddw	__ccov316_end_blk11	; block 11 END_ADDR
 10825  2440  00000150           	ddw	__ccov315_start_blk8	; block 8 START_ADDR
 10826  2444  00000152           	ddw	__ccov315_end_blk8	; block 8 END_ADDR
 10827  2448  00000145           	ddw	__ccov314_start_blk6	; block 6 START_ADDR
 10828  244C  00000150           	ddw	__ccov314_end_blk6	; block 6 END_ADDR
 10829  2450  0000013D           	ddw	__ccov313_start_blk5	; block 5 START_ADDR
 10830  2454  00000145           	ddw	__ccov313_end_blk5	; block 5 END_ADDR
 10831  2458  0000013B           	ddw	__ccov312_start_blk3	; block 3 START_ADDR
 10832  245C  0000013D           	ddw	__ccov312_end_blk3	; block 3 END_ADDR
 10833  2460  00000139           	ddw	__ccov311_start_blk1	; block 1 START_ADDR
 10834  2464  0000013B           	ddw	__ccov311_end_blk1	; block 1 END_ADDR
 10835  2468  00000135           	ddw	_get_wsp	; block 0 START_ADDR
 10836  246C  00000139           	ddw	__ccov310_end_blk0	; block 0 END_ADDR
 10837                           
 10838                           ; Function: get_wsp, coverage: 22,21,20,13,11,8,6,5,3,1,0
 10839  2470  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10840  2474  00000022           	ddw	__ccovbit22_159/(0+8)	; CC_ADDR
 10841  2478  00000001           	ddw	1	; NUM_POINTS
 10842  247C  00000007           	ddw	__ccovbit22_159& (0+7)	; OFFSET
 10843  2480  00000000           	ddw	0	; Reserved
 10844  2484  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10845  2488  0000000B           	ddw	11	; NUM_RANGES
 10846  248C  0000017D           	ddw	__ccov323_start_blk22	; block 22 START_ADDR
 10847  2490  00000183           	ddw	__ccov323_end_blk22	; block 22 END_ADDR
 10848  2494  0000017A           	ddw	__ccov322_start_blk21	; block 21 START_ADDR
 10849  2498  0000017D           	ddw	__ccov322_end_blk21	; block 21 END_ADDR
 10850  249C  00000173           	ddw	__ccov321_start_blk20	; block 20 START_ADDR
 10851  24A0  0000017A           	ddw	__ccov321_end_blk20	; block 20 END_ADDR
 10852  24A4  00000154           	ddw	__ccov317_start_blk13	; block 13 START_ADDR
 10853  24A8  0000015E           	ddw	__ccov317_end_blk13	; block 13 END_ADDR
 10854  24AC  00000152           	ddw	__ccov316_start_blk11	; block 11 START_ADDR
 10855  24B0  00000154           	ddw	__ccov316_end_blk11	; block 11 END_ADDR
 10856  24B4  00000150           	ddw	__ccov315_start_blk8	; block 8 START_ADDR
 10857  24B8  00000152           	ddw	__ccov315_end_blk8	; block 8 END_ADDR
 10858  24BC  00000145           	ddw	__ccov314_start_blk6	; block 6 START_ADDR
 10859  24C0  00000150           	ddw	__ccov314_end_blk6	; block 6 END_ADDR
 10860  24C4  0000013D           	ddw	__ccov313_start_blk5	; block 5 START_ADDR
 10861  24C8  00000145           	ddw	__ccov313_end_blk5	; block 5 END_ADDR
 10862  24CC  0000013B           	ddw	__ccov312_start_blk3	; block 3 START_ADDR
 10863  24D0  0000013D           	ddw	__ccov312_end_blk3	; block 3 END_ADDR
 10864  24D4  00000139           	ddw	__ccov311_start_blk1	; block 1 START_ADDR
 10865  24D8  0000013B           	ddw	__ccov311_end_blk1	; block 1 END_ADDR
 10866  24DC  00000135           	ddw	_get_wsp	; block 0 START_ADDR
 10867  24E0  00000139           	ddw	__ccov310_end_blk0	; block 0 END_ADDR
 10868                           
 10869                           ; Function: get_wsp, coverage: 26,25,24,20,13,11,8,6,5,3,1,0
 10870  24E4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10871  24E8  00000022           	ddw	__ccovbit26_160/(0+8)	; CC_ADDR
 10872  24EC  00000001           	ddw	1	; NUM_POINTS
 10873  24F0  00000006           	ddw	__ccovbit26_160& (0+7)	; OFFSET
 10874  24F4  00000000           	ddw	0	; Reserved
 10875  24F8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10876  24FC  0000000C           	ddw	12	; NUM_RANGES
 10877  2500  0000018D           	ddw	__ccov326_start_blk26	; block 26 START_ADDR
 10878  2504  00000193           	ddw	__ccov326_end_blk26	; block 26 END_ADDR
 10879  2508  0000018A           	ddw	__ccov325_start_blk25	; block 25 START_ADDR
 10880  250C  0000018D           	ddw	__ccov325_end_blk25	; block 25 END_ADDR
 10881  2510  00000183           	ddw	__ccov324_start_blk24	; block 24 START_ADDR
 10882  2514  0000018A           	ddw	__ccov324_end_blk24	; block 24 END_ADDR
 10883  2518  00000173           	ddw	__ccov321_start_blk20	; block 20 START_ADDR
 10884  251C  0000017A           	ddw	__ccov321_end_blk20	; block 20 END_ADDR
 10885  2520  00000154           	ddw	__ccov317_start_blk13	; block 13 START_ADDR
 10886  2524  0000015E           	ddw	__ccov317_end_blk13	; block 13 END_ADDR
 10887  2528  00000152           	ddw	__ccov316_start_blk11	; block 11 START_ADDR
 10888  252C  00000154           	ddw	__ccov316_end_blk11	; block 11 END_ADDR
 10889  2530  00000150           	ddw	__ccov315_start_blk8	; block 8 START_ADDR
 10890  2534  00000152           	ddw	__ccov315_end_blk8	; block 8 END_ADDR
 10891  2538  00000145           	ddw	__ccov314_start_blk6	; block 6 START_ADDR
 10892  253C  00000150           	ddw	__ccov314_end_blk6	; block 6 END_ADDR
 10893  2540  0000013D           	ddw	__ccov313_start_blk5	; block 5 START_ADDR
 10894  2544  00000145           	ddw	__ccov313_end_blk5	; block 5 END_ADDR
 10895  2548  0000013B           	ddw	__ccov312_start_blk3	; block 3 START_ADDR
 10896  254C  0000013D           	ddw	__ccov312_end_blk3	; block 3 END_ADDR
 10897  2550  00000139           	ddw	__ccov311_start_blk1	; block 1 START_ADDR
 10898  2554  0000013B           	ddw	__ccov311_end_blk1	; block 1 END_ADDR
 10899  2558  00000135           	ddw	_get_wsp	; block 0 START_ADDR
 10900  255C  00000139           	ddw	__ccov310_end_blk0	; block 0 END_ADDR
 10901                           
 10902                           ; Function: get_wsp, coverage: 28,24,20,13,11,8,6,5,3,1,0
 10903  2560  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10904  2564  00000022           	ddw	__ccovbit28_161/(0+8)	; CC_ADDR
 10905  2568  00000001           	ddw	1	; NUM_POINTS
 10906  256C  00000005           	ddw	__ccovbit28_161& (0+7)	; OFFSET
 10907  2570  00000000           	ddw	0	; Reserved
 10908  2574  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10909  2578  0000000B           	ddw	11	; NUM_RANGES
 10910  257C  00000193           	ddw	__ccov327_start_blk28	; block 28 START_ADDR
 10911  2580  00000195           	ddw	__ccov327_end_blk28	; block 28 END_ADDR
 10912  2584  00000183           	ddw	__ccov324_start_blk24	; block 24 START_ADDR
 10913  2588  0000018A           	ddw	__ccov324_end_blk24	; block 24 END_ADDR
 10914  258C  00000173           	ddw	__ccov321_start_blk20	; block 20 START_ADDR
 10915  2590  0000017A           	ddw	__ccov321_end_blk20	; block 20 END_ADDR
 10916  2594  00000154           	ddw	__ccov317_start_blk13	; block 13 START_ADDR
 10917  2598  0000015E           	ddw	__ccov317_end_blk13	; block 13 END_ADDR
 10918  259C  00000152           	ddw	__ccov316_start_blk11	; block 11 START_ADDR
 10919  25A0  00000154           	ddw	__ccov316_end_blk11	; block 11 END_ADDR
 10920  25A4  00000150           	ddw	__ccov315_start_blk8	; block 8 START_ADDR
 10921  25A8  00000152           	ddw	__ccov315_end_blk8	; block 8 END_ADDR
 10922  25AC  00000145           	ddw	__ccov314_start_blk6	; block 6 START_ADDR
 10923  25B0  00000150           	ddw	__ccov314_end_blk6	; block 6 END_ADDR
 10924  25B4  0000013D           	ddw	__ccov313_start_blk5	; block 5 START_ADDR
 10925  25B8  00000145           	ddw	__ccov313_end_blk5	; block 5 END_ADDR
 10926  25BC  0000013B           	ddw	__ccov312_start_blk3	; block 3 START_ADDR
 10927  25C0  0000013D           	ddw	__ccov312_end_blk3	; block 3 END_ADDR
 10928  25C4  00000139           	ddw	__ccov311_start_blk1	; block 1 START_ADDR
 10929  25C8  0000013B           	ddw	__ccov311_end_blk1	; block 1 END_ADDR
 10930  25CC  00000135           	ddw	_get_wsp	; block 0 START_ADDR
 10931  25D0  00000139           	ddw	__ccov310_end_blk0	; block 0 END_ADDR
 10932                           
 10933                           ; Function: get_wsp, coverage: 30,0
 10934  25D4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10935  25D8  00000022           	ddw	__ccovbit30_162/(0+8)	; CC_ADDR
 10936  25DC  00000001           	ddw	1	; NUM_POINTS
 10937  25E0  00000004           	ddw	__ccovbit30_162& (0+7)	; OFFSET
 10938  25E4  00000000           	ddw	0	; Reserved
 10939  25E8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10940  25EC  00000002           	ddw	2	; NUM_RANGES
 10941  25F0  00000195           	ddw	__ccov328_start_blk30	; block 30 START_ADDR
 10942  25F4  00000198           	ddw	__end_of_get_wsp	; block 30 END_ADDR
 10943  25F8  00000135           	ddw	_get_wsp	; block 0 START_ADDR
 10944  25FC  00000139           	ddw	__ccov310_end_blk0	; block 0 END_ADDR
 10945                           
 10946                           ; Function: get_fun, coverage: 11,10,8,5,3,1,0
 10947  2600  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10948  2604  00000022           	ddw	__ccovbit11_163/(0+8)	; CC_ADDR
 10949  2608  00000001           	ddw	1	; NUM_POINTS
 10950  260C  00000003           	ddw	__ccovbit11_163& (0+7)	; OFFSET
 10951  2610  00000000           	ddw	0	; Reserved
 10952  2614  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10953  2618  00000007           	ddw	7	; NUM_RANGES
 10954  261C  0000020E           	ddw	__ccov335_start_blk11	; block 11 START_ADDR
 10955  2620  00000214           	ddw	__ccov335_end_blk11	; block 11 END_ADDR
 10956  2624  00000209           	ddw	__ccov334_start_blk10	; block 10 START_ADDR
 10957  2628  0000020E           	ddw	__ccov334_end_blk10	; block 10 END_ADDR
 10958  262C  00000207           	ddw	__ccov333_start_blk8	; block 8 START_ADDR
 10959  2630  00000209           	ddw	__ccov333_end_blk8	; block 8 END_ADDR
 10960  2634  00000205           	ddw	__ccov332_start_blk5	; block 5 START_ADDR
 10961  2638  00000207           	ddw	__ccov332_end_blk5	; block 5 END_ADDR
 10962  263C  000001FD           	ddw	__ccov331_start_blk3	; block 3 START_ADDR
 10963  2640  00000205           	ddw	__ccov331_end_blk3	; block 3 END_ADDR
 10964  2644  000001FB           	ddw	__ccov330_start_blk1	; block 1 START_ADDR
 10965  2648  000001FD           	ddw	__ccov330_end_blk1	; block 1 END_ADDR
 10966  264C  000001F7           	ddw	_get_fun	; block 0 START_ADDR
 10967  2650  000001FB           	ddw	__ccov329_end_blk0	; block 0 END_ADDR
 10968                           
 10969                           ; Function: get_fun, coverage: 13,10,8,5,3,1,0
 10970  2654  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10971  2658  00000022           	ddw	__ccovbit13_164/(0+8)	; CC_ADDR
 10972  265C  00000001           	ddw	1	; NUM_POINTS
 10973  2660  00000002           	ddw	__ccovbit13_164& (0+7)	; OFFSET
 10974  2664  00000000           	ddw	0	; Reserved
 10975  2668  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10976  266C  00000007           	ddw	7	; NUM_RANGES
 10977  2670  00000214           	ddw	__ccov336_start_blk13	; block 13 START_ADDR
 10978  2674  00000219           	ddw	__ccov336_end_blk13	; block 13 END_ADDR
 10979  2678  00000209           	ddw	__ccov334_start_blk10	; block 10 START_ADDR
 10980  267C  0000020E           	ddw	__ccov334_end_blk10	; block 10 END_ADDR
 10981  2680  00000207           	ddw	__ccov333_start_blk8	; block 8 START_ADDR
 10982  2684  00000209           	ddw	__ccov333_end_blk8	; block 8 END_ADDR
 10983  2688  00000205           	ddw	__ccov332_start_blk5	; block 5 START_ADDR
 10984  268C  00000207           	ddw	__ccov332_end_blk5	; block 5 END_ADDR
 10985  2690  000001FD           	ddw	__ccov331_start_blk3	; block 3 START_ADDR
 10986  2694  00000205           	ddw	__ccov331_end_blk3	; block 3 END_ADDR
 10987  2698  000001FB           	ddw	__ccov330_start_blk1	; block 1 START_ADDR
 10988  269C  000001FD           	ddw	__ccov330_end_blk1	; block 1 END_ADDR
 10989  26A0  000001F7           	ddw	_get_fun	; block 0 START_ADDR
 10990  26A4  000001FB           	ddw	__ccov329_end_blk0	; block 0 END_ADDR
 10991                           
 10992                           ; Function: get_fun, coverage: 21,20,19,18,16,10,8,5,3,1,0
 10993  26A8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10994  26AC  00000022           	ddw	__ccovbit21_165/(0+8)	; CC_ADDR
 10995  26B0  00000001           	ddw	1	; NUM_POINTS
 10996  26B4  00000001           	ddw	__ccovbit21_165& (0+7)	; OFFSET
 10997  26B8  00000000           	ddw	0	; Reserved
 10998  26BC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10999  26C0  0000000B           	ddw	11	; NUM_RANGES
 11000  26C4  00000228           	ddw	__ccov341_start_blk21	; block 21 START_ADDR
 11001  26C8  0000022B           	ddw	__ccov341_end_blk21	; block 21 END_ADDR
 11002  26CC  00000227           	ddw	__ccov340_start_blk20	; block 20 START_ADDR
 11003  26D0  00000228           	ddw	__ccov340_end_blk20	; block 20 END_ADDR
 11004  26D4  00000223           	ddw	__ccov339_start_blk19	; block 19 START_ADDR
 11005  26D8  00000227           	ddw	__ccov339_end_blk19	; block 19 END_ADDR
 11006  26DC  0000021B           	ddw	__ccov338_start_blk18	; block 18 START_ADDR
 11007  26E0  00000223           	ddw	__ccov338_end_blk18	; block 18 END_ADDR
 11008  26E4  00000219           	ddw	__ccov337_start_blk16	; block 16 START_ADDR
 11009  26E8  0000021B           	ddw	__ccov337_end_blk16	; block 16 END_ADDR
 11010  26EC  00000209           	ddw	__ccov334_start_blk10	; block 10 START_ADDR
 11011  26F0  0000020E           	ddw	__ccov334_end_blk10	; block 10 END_ADDR
 11012  26F4  00000207           	ddw	__ccov333_start_blk8	; block 8 START_ADDR
 11013  26F8  00000209           	ddw	__ccov333_end_blk8	; block 8 END_ADDR
 11014  26FC  00000205           	ddw	__ccov332_start_blk5	; block 5 START_ADDR
 11015  2700  00000207           	ddw	__ccov332_end_blk5	; block 5 END_ADDR
 11016  2704  000001FD           	ddw	__ccov331_start_blk3	; block 3 START_ADDR
 11017  2708  00000205           	ddw	__ccov331_end_blk3	; block 3 END_ADDR
 11018  270C  000001FB           	ddw	__ccov330_start_blk1	; block 1 START_ADDR
 11019  2710  000001FD           	ddw	__ccov330_end_blk1	; block 1 END_ADDR
 11020  2714  000001F7           	ddw	_get_fun	; block 0 START_ADDR
 11021  2718  000001FB           	ddw	__ccov329_end_blk0	; block 0 END_ADDR
 11022                           
 11023                           ; Function: get_fun, coverage: 23,18,16,10,8,5,3,1,0
 11024  271C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11025  2720  00000022           	ddw	__ccovbit23_166/(0+8)	; CC_ADDR
 11026  2724  00000001           	ddw	1	; NUM_POINTS
 11027  2728  00000000           	ddw	__ccovbit23_166& (0+7)	; OFFSET
 11028  272C  00000000           	ddw	0	; Reserved
 11029  2730  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11030  2734  00000009           	ddw	9	; NUM_RANGES
 11031  2738  0000022B           	ddw	__ccov342_start_blk23	; block 23 START_ADDR
 11032  273C  00000233           	ddw	__ccov342_end_blk23	; block 23 END_ADDR
 11033  2740  0000021B           	ddw	__ccov338_start_blk18	; block 18 START_ADDR
 11034  2744  00000223           	ddw	__ccov338_end_blk18	; block 18 END_ADDR
 11035  2748  00000219           	ddw	__ccov337_start_blk16	; block 16 START_ADDR
 11036  274C  0000021B           	ddw	__ccov337_end_blk16	; block 16 END_ADDR
 11037  2750  00000209           	ddw	__ccov334_start_blk10	; block 10 START_ADDR
 11038  2754  0000020E           	ddw	__ccov334_end_blk10	; block 10 END_ADDR
 11039  2758  00000207           	ddw	__ccov333_start_blk8	; block 8 START_ADDR
 11040  275C  00000209           	ddw	__ccov333_end_blk8	; block 8 END_ADDR
 11041  2760  00000205           	ddw	__ccov332_start_blk5	; block 5 START_ADDR
 11042  2764  00000207           	ddw	__ccov332_end_blk5	; block 5 END_ADDR
 11043  2768  000001FD           	ddw	__ccov331_start_blk3	; block 3 START_ADDR
 11044  276C  00000205           	ddw	__ccov331_end_blk3	; block 3 END_ADDR
 11045  2770  000001FB           	ddw	__ccov330_start_blk1	; block 1 START_ADDR
 11046  2774  000001FD           	ddw	__ccov330_end_blk1	; block 1 END_ADDR
 11047  2778  000001F7           	ddw	_get_fun	; block 0 START_ADDR
 11048  277C  000001FB           	ddw	__ccov329_end_blk0	; block 0 END_ADDR
 11049                           
 11050                           ; Function: get_fun, coverage: 26,25,24,23,18,16,10,8,5,3,1,0
 11051  2780  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11052  2784  00000021           	ddw	__ccovbit26_167/(0+8)	; CC_ADDR
 11053  2788  00000001           	ddw	1	; NUM_POINTS
 11054  278C  00000007           	ddw	__ccovbit26_167& (0+7)	; OFFSET
 11055  2790  00000000           	ddw	0	; Reserved
 11056  2794  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11057  2798  0000000C           	ddw	12	; NUM_RANGES
 11058  279C  00000238           	ddw	__ccov345_start_blk26	; block 26 START_ADDR
 11059  27A0  0000023A           	ddw	__ccov345_end_blk26	; block 26 END_ADDR
 11060  27A4  00000237           	ddw	__ccov344_start_blk25	; block 25 START_ADDR
 11061  27A8  00000238           	ddw	__ccov344_end_blk25	; block 25 END_ADDR
 11062  27AC  00000233           	ddw	__ccov343_start_blk24	; block 24 START_ADDR
 11063  27B0  00000237           	ddw	__ccov343_end_blk24	; block 24 END_ADDR
 11064  27B4  0000022B           	ddw	__ccov342_start_blk23	; block 23 START_ADDR
 11065  27B8  00000233           	ddw	__ccov342_end_blk23	; block 23 END_ADDR
 11066  27BC  0000021B           	ddw	__ccov338_start_blk18	; block 18 START_ADDR
 11067  27C0  00000223           	ddw	__ccov338_end_blk18	; block 18 END_ADDR
 11068  27C4  00000219           	ddw	__ccov337_start_blk16	; block 16 START_ADDR
 11069  27C8  0000021B           	ddw	__ccov337_end_blk16	; block 16 END_ADDR
 11070  27CC  00000209           	ddw	__ccov334_start_blk10	; block 10 START_ADDR
 11071  27D0  0000020E           	ddw	__ccov334_end_blk10	; block 10 END_ADDR
 11072  27D4  00000207           	ddw	__ccov333_start_blk8	; block 8 START_ADDR
 11073  27D8  00000209           	ddw	__ccov333_end_blk8	; block 8 END_ADDR
 11074  27DC  00000205           	ddw	__ccov332_start_blk5	; block 5 START_ADDR
 11075  27E0  00000207           	ddw	__ccov332_end_blk5	; block 5 END_ADDR
 11076  27E4  000001FD           	ddw	__ccov331_start_blk3	; block 3 START_ADDR
 11077  27E8  00000205           	ddw	__ccov331_end_blk3	; block 3 END_ADDR
 11078  27EC  000001FB           	ddw	__ccov330_start_blk1	; block 1 START_ADDR
 11079  27F0  000001FD           	ddw	__ccov330_end_blk1	; block 1 END_ADDR
 11080  27F4  000001F7           	ddw	_get_fun	; block 0 START_ADDR
 11081  27F8  000001FB           	ddw	__ccov329_end_blk0	; block 0 END_ADDR
 11082                           
 11083                           ; Function: get_fun, coverage: 29,18,16,10,8,5,3,1,0
 11084  27FC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11085  2800  00000021           	ddw	__ccovbit29_168/(0+8)	; CC_ADDR
 11086  2804  00000001           	ddw	1	; NUM_POINTS
 11087  2808  00000006           	ddw	__ccovbit29_168& (0+7)	; OFFSET
 11088  280C  00000000           	ddw	0	; Reserved
 11089  2810  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11090  2814  00000009           	ddw	9	; NUM_RANGES
 11091  2818  0000023A           	ddw	__ccov346_start_blk29	; block 29 START_ADDR
 11092  281C  0000023C           	ddw	__ccov346_end_blk29	; block 29 END_ADDR
 11093  2820  0000021B           	ddw	__ccov338_start_blk18	; block 18 START_ADDR
 11094  2824  00000223           	ddw	__ccov338_end_blk18	; block 18 END_ADDR
 11095  2828  00000219           	ddw	__ccov337_start_blk16	; block 16 START_ADDR
 11096  282C  0000021B           	ddw	__ccov337_end_blk16	; block 16 END_ADDR
 11097  2830  00000209           	ddw	__ccov334_start_blk10	; block 10 START_ADDR
 11098  2834  0000020E           	ddw	__ccov334_end_blk10	; block 10 END_ADDR
 11099  2838  00000207           	ddw	__ccov333_start_blk8	; block 8 START_ADDR
 11100  283C  00000209           	ddw	__ccov333_end_blk8	; block 8 END_ADDR
 11101  2840  00000205           	ddw	__ccov332_start_blk5	; block 5 START_ADDR
 11102  2844  00000207           	ddw	__ccov332_end_blk5	; block 5 END_ADDR
 11103  2848  000001FD           	ddw	__ccov331_start_blk3	; block 3 START_ADDR
 11104  284C  00000205           	ddw	__ccov331_end_blk3	; block 3 END_ADDR
 11105  2850  000001FB           	ddw	__ccov330_start_blk1	; block 1 START_ADDR
 11106  2854  000001FD           	ddw	__ccov330_end_blk1	; block 1 END_ADDR
 11107  2858  000001F7           	ddw	_get_fun	; block 0 START_ADDR
 11108  285C  000001FB           	ddw	__ccov329_end_blk0	; block 0 END_ADDR
 11109                           
 11110                           ; Function: get_fun, coverage: 31,0
 11111  2860  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11112  2864  00000021           	ddw	__ccovbit31_169/(0+8)	; CC_ADDR
 11113  2868  00000001           	ddw	1	; NUM_POINTS
 11114  286C  00000005           	ddw	__ccovbit31_169& (0+7)	; OFFSET
 11115  2870  00000000           	ddw	0	; Reserved
 11116  2874  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11117  2878  00000002           	ddw	2	; NUM_RANGES
 11118  287C  0000023C           	ddw	__ccov347_start_blk31	; block 31 START_ADDR
 11119  2880  0000023F           	ddw	__end_of_get_fun	; block 31 END_ADDR
 11120  2884  000001F7           	ddw	_get_fun	; block 0 START_ADDR
 11121  2888  000001FB           	ddw	__ccov329_end_blk0	; block 0 END_ADDR
 11122                           
 11123                           ; Function: get_jump, coverage: 5,4,3,1,0
 11124  288C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11125  2890  00000021           	ddw	__ccovbit5_170/(0+8)	; CC_ADDR
 11126  2894  00000001           	ddw	1	; NUM_POINTS
 11127  2898  00000004           	ddw	__ccovbit5_170& (0+7)	; OFFSET
 11128  289C  00000000           	ddw	0	; Reserved
 11129  28A0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11130  28A4  00000005           	ddw	5	; NUM_RANGES
 11131  28A8  00000394           	ddw	__ccov352_start_blk5	; block 5 START_ADDR
 11132  28AC  0000039A           	ddw	__ccov352_end_blk5	; block 5 END_ADDR
 11133  28B0  0000038F           	ddw	__ccov351_start_blk4	; block 4 START_ADDR
 11134  28B4  00000394           	ddw	__ccov351_end_blk4	; block 4 END_ADDR
 11135  28B8  0000038D           	ddw	__ccov350_start_blk3	; block 3 START_ADDR
 11136  28BC  0000038F           	ddw	__ccov350_end_blk3	; block 3 END_ADDR
 11137  28C0  0000038B           	ddw	__ccov349_start_blk1	; block 1 START_ADDR
 11138  28C4  0000038D           	ddw	__ccov349_end_blk1	; block 1 END_ADDR
 11139  28C8  00000387           	ddw	_get_jump	; block 0 START_ADDR
 11140  28CC  0000038B           	ddw	__ccov348_end_blk0	; block 0 END_ADDR
 11141                           
 11142                           ; Function: get_jump, coverage: 7,4,3,1,0
 11143  28D0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11144  28D4  00000021           	ddw	__ccovbit7_171/(0+8)	; CC_ADDR
 11145  28D8  00000001           	ddw	1	; NUM_POINTS
 11146  28DC  00000003           	ddw	__ccovbit7_171& (0+7)	; OFFSET
 11147  28E0  00000000           	ddw	0	; Reserved
 11148  28E4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11149  28E8  00000005           	ddw	5	; NUM_RANGES
 11150  28EC  0000039A           	ddw	__ccov353_start_blk7	; block 7 START_ADDR
 11151  28F0  0000039F           	ddw	__ccov353_end_blk7	; block 7 END_ADDR
 11152  28F4  0000038F           	ddw	__ccov351_start_blk4	; block 4 START_ADDR
 11153  28F8  00000394           	ddw	__ccov351_end_blk4	; block 4 END_ADDR
 11154  28FC  0000038D           	ddw	__ccov350_start_blk3	; block 3 START_ADDR
 11155  2900  0000038F           	ddw	__ccov350_end_blk3	; block 3 END_ADDR
 11156  2904  0000038B           	ddw	__ccov349_start_blk1	; block 1 START_ADDR
 11157  2908  0000038D           	ddw	__ccov349_end_blk1	; block 1 END_ADDR
 11158  290C  00000387           	ddw	_get_jump	; block 0 START_ADDR
 11159  2910  0000038B           	ddw	__ccov348_end_blk0	; block 0 END_ADDR
 11160                           
 11161                           ; Function: get_jump, coverage: 12,11,10,9,4,3,1,0
 11162  2914  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11163  2918  00000021           	ddw	__ccovbit12_172/(0+8)	; CC_ADDR
 11164  291C  00000001           	ddw	1	; NUM_POINTS
 11165  2920  00000002           	ddw	__ccovbit12_172& (0+7)	; OFFSET
 11166  2924  00000000           	ddw	0	; Reserved
 11167  2928  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11168  292C  00000008           	ddw	8	; NUM_RANGES
 11169  2930  000003AB           	ddw	__ccov357_start_blk12	; block 12 START_ADDR
 11170  2934  000003AE           	ddw	__ccov357_end_blk12	; block 12 END_ADDR
 11171  2938  000003AA           	ddw	__ccov356_start_blk11	; block 11 START_ADDR
 11172  293C  000003AB           	ddw	__ccov356_end_blk11	; block 11 END_ADDR
 11173  2940  000003A6           	ddw	__ccov355_start_blk10	; block 10 START_ADDR
 11174  2944  000003AA           	ddw	__ccov355_end_blk10	; block 10 END_ADDR
 11175  2948  0000039F           	ddw	__ccov354_start_blk9	; block 9 START_ADDR
 11176  294C  000003A6           	ddw	__ccov354_end_blk9	; block 9 END_ADDR
 11177  2950  0000038F           	ddw	__ccov351_start_blk4	; block 4 START_ADDR
 11178  2954  00000394           	ddw	__ccov351_end_blk4	; block 4 END_ADDR
 11179  2958  0000038D           	ddw	__ccov350_start_blk3	; block 3 START_ADDR
 11180  295C  0000038F           	ddw	__ccov350_end_blk3	; block 3 END_ADDR
 11181  2960  0000038B           	ddw	__ccov349_start_blk1	; block 1 START_ADDR
 11182  2964  0000038D           	ddw	__ccov349_end_blk1	; block 1 END_ADDR
 11183  2968  00000387           	ddw	_get_jump	; block 0 START_ADDR
 11184  296C  0000038B           	ddw	__ccov348_end_blk0	; block 0 END_ADDR
 11185                           
 11186                           ; Function: get_jump, coverage: 14,9,4,3,1,0
 11187  2970  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11188  2974  00000021           	ddw	__ccovbit14_173/(0+8)	; CC_ADDR
 11189  2978  00000001           	ddw	1	; NUM_POINTS
 11190  297C  00000001           	ddw	__ccovbit14_173& (0+7)	; OFFSET
 11191  2980  00000000           	ddw	0	; Reserved
 11192  2984  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11193  2988  00000006           	ddw	6	; NUM_RANGES
 11194  298C  000003AE           	ddw	__ccov358_start_blk14	; block 14 START_ADDR
 11195  2990  000003B6           	ddw	__ccov358_end_blk14	; block 14 END_ADDR
 11196  2994  0000039F           	ddw	__ccov354_start_blk9	; block 9 START_ADDR
 11197  2998  000003A6           	ddw	__ccov354_end_blk9	; block 9 END_ADDR
 11198  299C  0000038F           	ddw	__ccov351_start_blk4	; block 4 START_ADDR
 11199  29A0  00000394           	ddw	__ccov351_end_blk4	; block 4 END_ADDR
 11200  29A4  0000038D           	ddw	__ccov350_start_blk3	; block 3 START_ADDR
 11201  29A8  0000038F           	ddw	__ccov350_end_blk3	; block 3 END_ADDR
 11202  29AC  0000038B           	ddw	__ccov349_start_blk1	; block 1 START_ADDR
 11203  29B0  0000038D           	ddw	__ccov349_end_blk1	; block 1 END_ADDR
 11204  29B4  00000387           	ddw	_get_jump	; block 0 START_ADDR
 11205  29B8  0000038B           	ddw	__ccov348_end_blk0	; block 0 END_ADDR
 11206                           
 11207                           ; Function: get_jump, coverage: 17,16,15,14,9,4,3,1,0
 11208  29BC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11209  29C0  00000021           	ddw	__ccovbit17_174/(0+8)	; CC_ADDR
 11210  29C4  00000001           	ddw	1	; NUM_POINTS
 11211  29C8  00000000           	ddw	__ccovbit17_174& (0+7)	; OFFSET
 11212  29CC  00000000           	ddw	0	; Reserved
 11213  29D0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11214  29D4  00000009           	ddw	9	; NUM_RANGES
 11215  29D8  000003BB           	ddw	__ccov361_start_blk17	; block 17 START_ADDR
 11216  29DC  000003BD           	ddw	__ccov361_end_blk17	; block 17 END_ADDR
 11217  29E0  000003BA           	ddw	__ccov360_start_blk16	; block 16 START_ADDR
 11218  29E4  000003BB           	ddw	__ccov360_end_blk16	; block 16 END_ADDR
 11219  29E8  000003B6           	ddw	__ccov359_start_blk15	; block 15 START_ADDR
 11220  29EC  000003BA           	ddw	__ccov359_end_blk15	; block 15 END_ADDR
 11221  29F0  000003AE           	ddw	__ccov358_start_blk14	; block 14 START_ADDR
 11222  29F4  000003B6           	ddw	__ccov358_end_blk14	; block 14 END_ADDR
 11223  29F8  0000039F           	ddw	__ccov354_start_blk9	; block 9 START_ADDR
 11224  29FC  000003A6           	ddw	__ccov354_end_blk9	; block 9 END_ADDR
 11225  2A00  0000038F           	ddw	__ccov351_start_blk4	; block 4 START_ADDR
 11226  2A04  00000394           	ddw	__ccov351_end_blk4	; block 4 END_ADDR
 11227  2A08  0000038D           	ddw	__ccov350_start_blk3	; block 3 START_ADDR
 11228  2A0C  0000038F           	ddw	__ccov350_end_blk3	; block 3 END_ADDR
 11229  2A10  0000038B           	ddw	__ccov349_start_blk1	; block 1 START_ADDR
 11230  2A14  0000038D           	ddw	__ccov349_end_blk1	; block 1 END_ADDR
 11231  2A18  00000387           	ddw	_get_jump	; block 0 START_ADDR
 11232  2A1C  0000038B           	ddw	__ccov348_end_blk0	; block 0 END_ADDR
 11233                           
 11234                           ; Function: get_jump, coverage: 20,9,4,3,1,0
 11235  2A20  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11236  2A24  00000020           	ddw	__ccovbit20_175/(0+8)	; CC_ADDR
 11237  2A28  00000001           	ddw	1	; NUM_POINTS
 11238  2A2C  00000007           	ddw	__ccovbit20_175& (0+7)	; OFFSET
 11239  2A30  00000000           	ddw	0	; Reserved
 11240  2A34  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11241  2A38  00000006           	ddw	6	; NUM_RANGES
 11242  2A3C  000003BD           	ddw	__ccov362_start_blk20	; block 20 START_ADDR
 11243  2A40  000003BF           	ddw	__ccov362_end_blk20	; block 20 END_ADDR
 11244  2A44  0000039F           	ddw	__ccov354_start_blk9	; block 9 START_ADDR
 11245  2A48  000003A6           	ddw	__ccov354_end_blk9	; block 9 END_ADDR
 11246  2A4C  0000038F           	ddw	__ccov351_start_blk4	; block 4 START_ADDR
 11247  2A50  00000394           	ddw	__ccov351_end_blk4	; block 4 END_ADDR
 11248  2A54  0000038D           	ddw	__ccov350_start_blk3	; block 3 START_ADDR
 11249  2A58  0000038F           	ddw	__ccov350_end_blk3	; block 3 END_ADDR
 11250  2A5C  0000038B           	ddw	__ccov349_start_blk1	; block 1 START_ADDR
 11251  2A60  0000038D           	ddw	__ccov349_end_blk1	; block 1 END_ADDR
 11252  2A64  00000387           	ddw	_get_jump	; block 0 START_ADDR
 11253  2A68  0000038B           	ddw	__ccov348_end_blk0	; block 0 END_ADDR
 11254                           
 11255                           ; Function: get_jump, coverage: 22,0
 11256  2A6C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11257  2A70  00000020           	ddw	__ccovbit22_176/(0+8)	; CC_ADDR
 11258  2A74  00000001           	ddw	1	; NUM_POINTS
 11259  2A78  00000006           	ddw	__ccovbit22_176& (0+7)	; OFFSET
 11260  2A7C  00000000           	ddw	0	; Reserved
 11261  2A80  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11262  2A84  00000002           	ddw	2	; NUM_RANGES
 11263  2A88  000003BF           	ddw	__ccov363_start_blk22	; block 22 START_ADDR
 11264  2A8C  000003C2           	ddw	__end_of_get_jump	; block 22 END_ADDR
 11265  2A90  00000387           	ddw	_get_jump	; block 0 START_ADDR
 11266  2A94  0000038B           	ddw	__ccov348_end_blk0	; block 0 END_ADDR
 11267                           
 11268                           ; Function: start_setup, coverage: 31,30,29,28,27,26,25,24,23,22,21,18,15,12,9,6,4,3,2,1
      +                          ,0
 11269  2A98  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11270  2A9C  00000020           	ddw	__ccovbit31_177/(0+8)	; CC_ADDR
 11271  2AA0  00000001           	ddw	1	; NUM_POINTS
 11272  2AA4  00000005           	ddw	__ccovbit31_177& (0+7)	; OFFSET
 11273  2AA8  00000000           	ddw	0	; Reserved
 11274  2AAC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11275  2AB0  00000015           	ddw	21	; NUM_RANGES
 11276  2AB4  0000034A           	ddw	__ccov384_start_blk31	; block 31 START_ADDR
 11277  2AB8  0000034C           	ddw	__end_of_start_setup	; block 31 END_ADDR
 11278  2ABC  00000349           	ddw	__ccov383_start_blk30	; block 30 START_ADDR
 11279  2AC0  0000034A           	ddw	__ccov383_end_blk30	; block 30 END_ADDR
 11280  2AC4  00000347           	ddw	__ccov382_start_blk29	; block 29 START_ADDR
 11281  2AC8  00000349           	ddw	__ccov382_end_blk29	; block 29 END_ADDR
 11282  2ACC  00000345           	ddw	__ccov381_start_blk28	; block 28 START_ADDR
 11283  2AD0  00000347           	ddw	__ccov381_end_blk28	; block 28 END_ADDR
 11284  2AD4  00000344           	ddw	__ccov380_start_blk27	; block 27 START_ADDR
 11285  2AD8  00000345           	ddw	__ccov380_end_blk27	; block 27 END_ADDR
 11286  2ADC  00000342           	ddw	__ccov379_start_blk26	; block 26 START_ADDR
 11287  2AE0  00000344           	ddw	__ccov379_end_blk26	; block 26 END_ADDR
 11288  2AE4  00000340           	ddw	__ccov378_start_blk25	; block 25 START_ADDR
 11289  2AE8  00000342           	ddw	__ccov378_end_blk25	; block 25 END_ADDR
 11290  2AEC  0000033E           	ddw	__ccov377_start_blk24	; block 24 START_ADDR
 11291  2AF0  00000340           	ddw	__ccov377_end_blk24	; block 24 END_ADDR
 11292  2AF4  0000033C           	ddw	__ccov376_start_blk23	; block 23 START_ADDR
 11293  2AF8  0000033E           	ddw	__ccov376_end_blk23	; block 23 END_ADDR
 11294  2AFC  00000335           	ddw	__ccov375_start_blk22	; block 22 START_ADDR
 11295  2B00  0000033C           	ddw	__ccov375_end_blk22	; block 22 END_ADDR
 11296  2B04  00000334           	ddw	__ccov374_start_blk21	; block 21 START_ADDR
 11297  2B08  00000335           	ddw	__ccov374_end_blk21	; block 21 END_ADDR
 11298  2B0C  00000333           	ddw	__ccov373_start_blk18	; block 18 START_ADDR
 11299  2B10  00000334           	ddw	__ccov373_end_blk18	; block 18 END_ADDR
 11300  2B14  00000332           	ddw	__ccov372_start_blk15	; block 15 START_ADDR
 11301  2B18  00000333           	ddw	__ccov372_end_blk15	; block 15 END_ADDR
 11302  2B1C  00000331           	ddw	__ccov371_start_blk12	; block 12 START_ADDR
 11303  2B20  00000332           	ddw	__ccov371_end_blk12	; block 12 END_ADDR
 11304  2B24  00000330           	ddw	__ccov370_start_blk9	; block 9 START_ADDR
 11305  2B28  00000331           	ddw	__ccov370_end_blk9	; block 9 END_ADDR
 11306  2B2C  0000032E           	ddw	__ccov369_start_blk6	; block 6 START_ADDR
 11307  2B30  00000330           	ddw	__ccov369_end_blk6	; block 6 END_ADDR
 11308  2B34  00000325           	ddw	__ccov368_start_blk4	; block 4 START_ADDR
 11309  2B38  0000032E           	ddw	__ccov368_end_blk4	; block 4 END_ADDR
 11310  2B3C  00000322           	ddw	__ccov367_start_blk3	; block 3 START_ADDR
 11311  2B40  00000325           	ddw	__ccov367_end_blk3	; block 3 END_ADDR
 11312  2B44  00000310           	ddw	__ccov366_start_blk2	; block 2 START_ADDR
 11313  2B48  00000322           	ddw	__ccov366_end_blk2	; block 2 END_ADDR
 11314  2B4C  0000030F           	ddw	__ccov365_start_blk1	; block 1 START_ADDR
 11315  2B50  00000310           	ddw	__ccov365_end_blk1	; block 1 END_ADDR
 11316  2B54  0000030C           	ddw	_start_setup	; block 0 START_ADDR
 11317  2B58  0000030F           	ddw	__ccov364_end_blk0	; block 0 END_ADDR
 11318                           
 11319                           ; Function: main, coverage: 4,3,2,1,0
 11320  2B5C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11321  2B60  00000020           	ddw	__ccovbit4_178/(0+8)	; CC_ADDR
 11322  2B64  00000001           	ddw	1	; NUM_POINTS
 11323  2B68  00000004           	ddw	__ccovbit4_178& (0+7)	; OFFSET
 11324  2B6C  00000000           	ddw	0	; Reserved
 11325  2B70  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11326  2B74  00000005           	ddw	5	; NUM_RANGES
 11327  2B78  0000044D           	ddw	__ccov389_start_blk4	; block 4 START_ADDR
 11328  2B7C  00000462           	ddw	__ccov389_end_blk4	; block 4 END_ADDR
 11329  2B80  00000449           	ddw	__ccov388_start_blk3	; block 3 START_ADDR
 11330  2B84  0000044D           	ddw	__ccov388_end_blk3	; block 3 END_ADDR
 11331  2B88  00000446           	ddw	__ccov387_start_blk2	; block 2 START_ADDR
 11332  2B8C  00000449           	ddw	__ccov387_end_blk2	; block 2 END_ADDR
 11333  2B90  00000445           	ddw	__ccov386_start_blk1	; block 1 START_ADDR
 11334  2B94  00000446           	ddw	__ccov386_end_blk1	; block 1 END_ADDR
 11335  2B98  00000442           	ddw	_main	; block 0 START_ADDR
 11336  2B9C  00000445           	ddw	__ccov385_end_blk0	; block 0 END_ADDR
 11337                           
 11338                           ; Function: main, coverage: 6,3,2,1,0
 11339  2BA0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11340  2BA4  00000020           	ddw	__ccovbit6_179/(0+8)	; CC_ADDR
 11341  2BA8  00000001           	ddw	1	; NUM_POINTS
 11342  2BAC  00000003           	ddw	__ccovbit6_179& (0+7)	; OFFSET
 11343  2BB0  00000000           	ddw	0	; Reserved
 11344  2BB4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11345  2BB8  00000005           	ddw	5	; NUM_RANGES
 11346  2BBC  00000462           	ddw	__ccov390_start_blk6	; block 6 START_ADDR
 11347  2BC0  00000468           	ddw	__ccov390_end_blk6	; block 6 END_ADDR
 11348  2BC4  00000449           	ddw	__ccov388_start_blk3	; block 3 START_ADDR
 11349  2BC8  0000044D           	ddw	__ccov388_end_blk3	; block 3 END_ADDR
 11350  2BCC  00000446           	ddw	__ccov387_start_blk2	; block 2 START_ADDR
 11351  2BD0  00000449           	ddw	__ccov387_end_blk2	; block 2 END_ADDR
 11352  2BD4  00000445           	ddw	__ccov386_start_blk1	; block 1 START_ADDR
 11353  2BD8  00000446           	ddw	__ccov386_end_blk1	; block 1 END_ADDR
 11354  2BDC  00000442           	ddw	_main	; block 0 START_ADDR
 11355  2BE0  00000445           	ddw	__ccov385_end_blk0	; block 0 END_ADDR
 11356                           
 11357                           ; Function: EEPROM_WriteByte, coverage: 9,8,7,6,5,4,3,2,0
 11358  2BE4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11359  2BE8  00000020           	ddw	__ccovbit9_180/(0+8)	; CC_ADDR
 11360  2BEC  00000001           	ddw	1	; NUM_POINTS
 11361  2BF0  00000002           	ddw	__ccovbit9_180& (0+7)	; OFFSET
 11362  2BF4  00000000           	ddw	0	; Reserved
 11363  2BF8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11364  2BFC  00000008           	ddw	8	; NUM_RANGES
 11365  2C00  0000048D           	ddw	__ccov399_start_blk9	; block 9 START_ADDR
 11366  2C04  00000490           	ddw	__end_of_EEPROM_WriteByte	; block 9 END_ADDR
 11367  2C08  0000048B           	ddw	__ccov398_start_blk8	; block 8 START_ADDR
 11368  2C0C  0000048D           	ddw	__ccov398_end_blk8	; block 8 END_ADDR
 11369  2C10  00000485           	ddw	__ccov397_start_blk7	; block 7 START_ADDR
 11370  2C14  0000048B           	ddw	__ccov397_end_blk7	; block 7 END_ADDR
 11371  2C18  00000484           	ddw	__ccov396_start_blk6	; block 6 START_ADDR
 11372  2C1C  00000485           	ddw	__ccov396_end_blk6	; block 6 END_ADDR
 11373  2C20  0000047F           	ddw	__ccov395_start_blk5	; block 5 START_ADDR
 11374  2C24  00000484           	ddw	__ccov395_end_blk5	; block 5 END_ADDR
 11375  2C28  00000475           	ddw	__ccov394_start_blk4	; block 4 START_ADDR
 11376  2C2C  0000047F           	ddw	__ccov394_end_blk4	; block 4 END_ADDR
 11377  2C30  00000470           	ddw	__ccov393_start_blk3	; block 3 START_ADDR
 11378  2C34  00000475           	ddw	__ccov393_end_blk3	; block 3 END_ADDR
 11379  2C38  0000046A           	ddw	_EEPROM_WriteByte	; block 2 START_ADDR
 11380  2C3C  00000470           	ddw	__ccov392_end_blk2	; block 2 END_ADDR
 11381                           
 11382                           ; Function: EEPROM_ReadByte, coverage: 3,2,0
 11383  2C40  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11384  2C44  00000020           	ddw	__ccovbit3_181/(0+8)	; CC_ADDR
 11385  2C48  00000001           	ddw	1	; NUM_POINTS
 11386  2C4C  00000001           	ddw	__ccovbit3_181& (0+7)	; OFFSET
 11387  2C50  00000000           	ddw	0	; Reserved
 11388  2C54  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11389  2C58  00000002           	ddw	2	; NUM_RANGES
 11390  2C5C  0000050F           	ddw	__ccov402_start_blk3	; block 3 START_ADDR
 11391  2C60  00000516           	ddw	__ccov402_end_blk3	; block 3 END_ADDR
 11392  2C64  00000509           	ddw	_EEPROM_ReadByte	; block 2 START_ADDR
 11393  2C68  0000050F           	ddw	__ccov401_end_blk2	; block 2 END_ADDR
 11394                           
 11395                           ; Function: EEPROM_ReadByte, coverage: 8,6,5,3,2,0
 11396  2C6C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11397  2C70  00000020           	ddw	__ccovbit8_182/(0+8)	; CC_ADDR
 11398  2C74  00000001           	ddw	1	; NUM_POINTS
 11399  2C78  00000000           	ddw	__ccovbit8_182& (0+7)	; OFFSET
 11400  2C7C  00000000           	ddw	0	; Reserved
 11401  2C80  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11402  2C84  00000005           	ddw	5	; NUM_RANGES
 11403  2C88  0000051F           	ddw	__ccov405_start_blk8	; block 8 START_ADDR
 11404  2C8C  00000522           	ddw	__end_of_EEPROM_ReadByte	; block 8 END_ADDR
 11405  2C90  0000051D           	ddw	__ccov404_start_blk6	; block 6 START_ADDR
 11406  2C94  0000051F           	ddw	__ccov404_end_blk6	; block 6 END_ADDR
 11407  2C98  00000516           	ddw	__ccov403_start_blk5	; block 5 START_ADDR
 11408  2C9C  0000051D           	ddw	__ccov403_end_blk5	; block 5 END_ADDR
 11409  2CA0  0000050F           	ddw	__ccov402_start_blk3	; block 3 START_ADDR
 11410  2CA4  00000516           	ddw	__ccov402_end_blk3	; block 3 END_ADDR
 11411  2CA8  00000509           	ddw	_EEPROM_ReadByte	; block 2 START_ADDR
 11412  2CAC  0000050F           	ddw	__ccov401_end_blk2	; block 2 END_ADDR
 11413  007E                     btemp	set	126	;btemp
 11414  007E                     int$flags	set	126
 11415  007E                     wtemp0	set	126
 11416                           
 11417                           	psect	idloc
 11418                           
 11419                           ;Config register IDLOC0 @ 0x8000
 11420                           ;	unspecified, using default values
 11421  8000                     	org	32768
 11422  8000  3FFF               	dw	16383
 11423                           
 11424                           ;Config register IDLOC1 @ 0x8001
 11425                           ;	unspecified, using default values
 11426  8001                     	org	32769
 11427  8001  3FFF               	dw	16383
 11428                           
 11429                           ;Config register IDLOC2 @ 0x8002
 11430                           ;	unspecified, using default values
 11431  8002                     	org	32770
 11432  8002  3FFF               	dw	16383
 11433                           
 11434                           ;Config register IDLOC3 @ 0x8003
 11435                           ;	unspecified, using default values
 11436  8003                     	org	32771
 11437  8003  3FFF               	dw	16383
 11438                           
 11439                           	psect	config
 11440                           
 11441                           ;Config register CONFIG1 @ 0x8007
 11442                           ;	Oscillator Selection
 11443                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11444                           ;	Watchdog Timer Enable
 11445                           ;	WDTE = ON, WDT enabled
 11446                           ;	Power-up Timer Enable
 11447                           ;	PWRTE = ON, PWRT enabled
 11448                           ;	MCLR Pin Function Select
 11449                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11450                           ;	Flash Program Memory Code Protection
 11451                           ;	CP = OFF, Program memory code protection is disabled
 11452                           ;	Data Memory Code Protection
 11453                           ;	CPD = OFF, Data memory code protection is disabled
 11454                           ;	Brown-out Reset Enable
 11455                           ;	BOREN = ON, Brown-out Reset enabled
 11456                           ;	Clock Out Enable
 11457                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11458                           ;	Internal/External Switchover
 11459                           ;	IESO = ON, Internal/External Switchover mode is enabled
 11460                           ;	Fail-Safe Clock Monitor Enable
 11461                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 11462  8007                     	org	32775
 11463  8007  3FDC               	dw	16348
 11464                           
 11465                           ;Config register CONFIG2 @ 0x8008
 11466                           ;	Flash Memory Self-Write Protection
 11467                           ;	WRT = OFF, Write protection off
 11468                           ;	PLL Enable
 11469                           ;	PLLEN = OFF, 4x PLL disabled
 11470                           ;	Stack Overflow/Underflow Reset Enable
 11471                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11472                           ;	Brown-out Reset Voltage Selection
 11473                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11474                           ;	Low-Voltage Programming Enable
 11475                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 11476  8008                     	org	32776
 11477  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    24
    Data        0
    BSS         36
    Persistent  37
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      14
    BANK0            80      2      58
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> zummer_switch(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> zummer_switch(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ms_tick(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ms_tick(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_get_wsp
    _switch_wm->_rele_off
    _eeprom_set->_EEPROM_WriteByte
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _get_wsp->_ADC_GetConversion
    _open->_rele_off
    _close->_rele_off

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _ms_tick->_sec_work
    _sec_work->_minute_tick
    _sec_work->_sec_30_work

Critical Paths under _main in BANK0

    _main->_get_wsp
    _start_setup->_eeprom_set

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1549
                  _autorotation_work
                              _close
                           _fun_work
                            _get_fun
                           _get_jump
                            _get_wsp
                      _hardware_work
                        _start_setup
                          _switch_wm
 ---------------------------------------------------------------------------------
 (1) _switch_wm                                            1     1      0       0
                                              3 COMMON     1     1      0
                           _rele_off
 ---------------------------------------------------------------------------------
 (1) _start_setup                                          0     0      0    1453
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                         _eeprom_set
 ---------------------------------------------------------------------------------
 (2) _eeprom_set                                           2     2      0     757
                                              0 BANK0      2     2      0
                    _EEPROM_ReadByte
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_WriteByte                                     4     3      1     692
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _EEPROM_ReadByte                                      3     3      0      31
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     348
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      1     1      0     174
                                              4 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hardware_work                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_wsp                                              4     4      0      96
                                              4 COMMON     2     2      0
                                              0 BANK0      2     2      0
                  _ADC_GetConversion
                        _clear_alarm
                        _start_alarm
 ---------------------------------------------------------------------------------
 (2) _start_alarm                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clear_alarm                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    2     2      0      31
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_jump                                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_fun                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _fun_work                                             1     1      0       0
                                              3 COMMON     1     1      0
                              _close
                               _open
 ---------------------------------------------------------------------------------
 (2) _open                                                 0     0      0       0
                            _go_open
                        _go_open_alt
                           _rele_off
 ---------------------------------------------------------------------------------
 (3) _go_open_alt                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _close                                                0     0      0       0
                           _go_close
                       _go_close_alt
                           _rele_off
 ---------------------------------------------------------------------------------
 (2) _rele_off                                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _go_close_alt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _go_close                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _autorotation_work                                    1     1      0       0
                                              2 COMMON     1     1      0
                     _go_close_short
                            _go_open
 ---------------------------------------------------------------------------------
 (3) _go_open                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_close_short                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                            _ms_tick *
 ---------------------------------------------------------------------------------
 (7) _ms_tick                                              0     0      0       0
                        _ms_100_work
                        _ms_200_work
                           _sec_work
                          _stop_tone
 ---------------------------------------------------------------------------------
 (8) _stop_tone                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _sec_work                                             1     1      0       0
                                              1 COMMON     1     1      0
                        _minute_tick
                          _rele_tick
                        _sec_30_work
 ---------------------------------------------------------------------------------
 (9) _sec_30_work                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _rele_tick                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _minute_tick                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _ms_200_work                                          0     0      0       0
                        _beep_double
                          _beep_long
                         _beep_short
 ---------------------------------------------------------------------------------
 (9) _beep_double                                          0     0      0       0
                          _beep_long
                         _beep_short
 ---------------------------------------------------------------------------------
 (9) _beep_short                                           0     0      0       0
                         _start_tone
 ---------------------------------------------------------------------------------
 (9) _beep_long                                            0     0      0       0
                         _start_tone
 ---------------------------------------------------------------------------------
 (10) _start_tone                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ms_100_work                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _zummer_switch *
 ---------------------------------------------------------------------------------
 (7) _zummer_switch                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _autorotation_work
     _go_close_short
     _go_open
   _close
     _go_close
     _go_close_alt
     _rele_off
   _fun_work
     _close
     _open
       _go_open
       _go_open_alt
       _rele_off
   _get_fun
   _get_jump
   _get_wsp
     _ADC_GetConversion
     _clear_alarm
     _start_alarm
   _hardware_work
   _start_setup
     _SYSTEM_Initialize
       _ADC_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR2_Initialize
         _TMR2_SetInterruptHandler
       _WDT_Initialize
     _TMR0_SetInterruptHandler
     _TMR2_SetInterruptHandler
     _TMR2_StartTimer
     _eeprom_set
       _EEPROM_ReadByte
       _EEPROM_WriteByte
   _switch_wm
     _rele_off

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _zummer_switch *
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _ms_tick *
       _ms_100_work
       _ms_200_work
         _beep_double
           _beep_long
             _start_tone
           _beep_short
             _start_tone
         _beep_long
         _beep_short
       _sec_work
         _minute_tick
         _rele_tick
         _sec_30_work
       _stop_tone

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      48       4        0.0%
BITBANK0            50      0      14       5       25.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      3A       6       72.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      48      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon May 30 10:38:51 2022

                       __ccov116_end_blk1 03F8                         __ccov140_end_blk1 0610  
                       __ccov204_end_blk1 03CC                         __ccov124_end_blk3 042C  
                       __ccov300_end_blk4 0583                         __ccov108_end_blk5 054D  
                       __ccov132_end_blk5 04EC                         __ccov220_end_blk6 00F7  
                      __ccov212_end_blk10 03EC                       __ccov111_start_blk0 0618  
                     __ccov103_start_blk8 0506                        __pcodecov_info_hdr 0000  
        __end_of_TMR2_SetInterruptHandler 069A                        get_fun@fun_counter 004A  
                       __ccov301_end_blk0 0378                         __ccov117_end_blk2 03FD  
                       __ccov141_end_blk2 0615                         __ccov205_end_blk2 03CE  
                       __ccov125_end_blk4 043F                         __ccov109_end_blk6 0551  
                       __ccov221_end_blk7 00FB                         __ccov133_end_blk8 04EF  
                                      l23 05F1                                        l26 0689  
                                      l61 0534                                        l29 06B6  
                                      l46 0681                                        l64 0539  
                                      l92 05AF                                        _RD 0CA8  
                                      _WR 0CA9                             ?_go_close_alt 0073  
                                      _ff 0079                 __end_of_autorotation_work 0135  
                         _timer0ReloadVal 0057                         __ccov214_end_blk0 00DB  
                       __ccov134_end_blk0 05CC                         __ccov310_end_blk0 0139  
                       __ccov150_end_blk1 04BB                         __ccov302_end_blk1 037B  
                       __ccov118_end_blk3 0402                         __ccov206_end_blk3 03D1  
                       __ccov142_end_blk4 0618                         __ccov126_end_blk6 0442  
                       __ccov222_end_blk8 0101                        __ccov213_end_blk14 03EE  
                     __ccov389_start_blk4 044D                       __ccov397_start_blk7 0485  
                                     l140 06BF                                       l137 0604  
                                     l402 0133                                       l331 04EC  
                                     l323 0415                                       l327 043F  
                                     l351 04BB                                       l343 0615  
                                     l503 01FB                                       l159 0698  
                                     l336 05D8                                       l353 04C5  
                                     l361 04A4                                       l338 05D2  
                                     l346 05BE                                       l522 038B  
                                     l339 05DD                                       l347 05C1  
                                     l531 03BF                                       l195 069F  
                                     l179 0598                                       l348 05C6  
                                     l356 04CF                                       l364 04AE  
                                     l516 023C                                       l524 038D  
                                     l525 038F                                       l381 0691  
                                     l359 049A                                       l471 0380  
                                     l551 0445                                       l384 06BA  
                                     l392 03D8                                       l473 0384  
                                     l545 0335                                       l466 0580  
                                     l546 034A                                       l484 0139  
                                     l389 0284                                       l469 037B  
                                     l581 050A                                       l397 03EC  
                                     l486 013B                                       l575 046B  
                                     l584 051F                                       l497 0195  
                                     l577 0470                                       l578 048D  
                                     _GIE 005F                                       u250 05CC  
                             _start_alarm 068B                                       u251 05CB  
                                     u260 05D2                                       u261 05D1  
                                     u270 05D8                                       _PR2 001B  
                                     u271 05D7                                       u280 060A  
                                     u281 0609                                       u290 0610  
                                     u291 060F                      __ccov334_start_blk10 0209  
                    __ccov174_start_blk14 01D1                      __ccov318_start_blk14 015E  
                    __ccov342_start_blk23 022B                      __ccov254_start_blk16 0088  
                    __ccov326_start_blk26 018D                      __ccov262_start_blk28 00C4  
                       __ccov127_end_blk0 04D6                         __ccov143_end_blk0 05BA  
                       __ccov215_end_blk1 00E0                         __ccov135_end_blk1 05D2  
                       __ccov311_end_blk1 013B                         __ccov151_end_blk2 04BF  
                       __ccov303_end_blk2 037F                         __ccov119_end_blk4 0415  
                       __ccov207_end_blk4 03D8                               _start_setup 030C  
                            ?_go_open_alt 0073                           _TMR2_Initialize 05F3  
                      __ccov22_start_blk0 0522                                       wreg 0009  
                       __ccov232_end_blk0 055A                         __ccov128_end_blk1 04DC  
                       __ccov144_end_blk1 05BE                         __ccov216_end_blk2 00E5  
                       __ccov136_end_blk2 05D8                         __ccov240_end_blk3 065A  
                       __ccov152_end_blk3 04C5                         __ccov312_end_blk3 013D  
                       __ccov304_end_blk3 0380                         __ccov160_end_blk4 04AA  
                       __ccov208_end_blk6 03DE                        __ccov230_end_blk17 0133  
                            ?_sec_30_work 0073                       __ccov104_start_blk0 053B  
                     __ccov112_start_blk1 061C                       __ccov120_start_blk6 0415  
                                    l2000 05A0                                      l2010 0686  
                                    l2002 05A2                                      l2012 0687  
                                    l2004 05A5                                      l2020 05F7  
                                    l2030 067D                                      l2006 05AA  
                                    l2022 05F8                                      l2014 06B3  
                                    l2200 0490                                      l2032 067E  
                                    l2008 0683                                      l2040 058F  
                                    l2024 05FA                                      l2016 05F3  
                                    l2050 03F2                                      l2202 0494  
                                    l2042 0590                                      l2034 0583  
                                    l2026 0601                                      l2018 05F6  
                                    l2060 04D6                                      l2052 03F8  
                                    l2204 049E                                      l2028 067A  
                                    l2044 0591                                      l2036 0588  
                                    l2300 03CC                                      l2062 04DC  
                                    l2054 03FD                                      l2206 04AA  
                                    l2038 058B                                      l2310 03E5  
                                    l2302 03CE                                      l2064 04E1  
                                    l2320 00E5                                      l2056 0402  
                                    l2048 03EE                                      l2072 05B1  
                                    l2400 0227                                      l2312 03E8  
                                    l2304 03D1                                      l2066 04E6  
                                    l2058 04D2                                      l2330 00FB  
                                    l2322 00EA                                      l2314 00CC  
                                    l2074 05BA                                      l2410 0238  
                                    l2402 0228                                      l2306 03DE  
                                    l2068 04EA                                      l2340 011E  
                                    l2324 00EF                                      l2316 00DB  
                                    l2332 0101                                      l2076 05C2  
                                    l2412 023A                                      l2404 022B  
                                    l2420 039F                                      l2180 06BD  
                                    l2308 03E3                                      l2190 042C  
                                    l2182 0418                                      l2342 0123  
                                    l2334 010F                                      l2326 00F4  
                                    l2318 00E0                                      l1382 05C8  
                                    l1390 0610                                      l2270 0249  
                                    l2406 0233                                      l2430 03B6  
                                    l2422 03A6                                      l2414 0387  
                                    l2166 05DF                                      l2184 041C  
                                    l2344 0128                                      l2336 0114  
                                    l2328 00F7                                      l1384 05CC  
                                    l2192 04B1                                      l2280 025F  
                                    l2272 024E                                      l2408 0237  
                                    l2432 03BA                                      l2424 03AA  
                                    l2416 0394                                      l2600 0135  
                                    l2186 0422                                      l2346 012B  
                                    l2338 0119                                      l2194 04B5  
                                    l1386 0606                                      l2290 0277  
                                    l2274 0253                                      l2282 0263  
                                    l2266 023F                                      l2434 03BB  
                                    l2426 03AB                                      l2418 039A  
                                    l2610 0154                                      l2602 013D  
                                    l2188 0427                                      l2196 04BF  
                                    l1388 060A                                      l2292 027C  
                                    l2284 0267                                      l2276 0258  
                                    l2268 0243                                      l2380 01F7  
                                    l2436 03BD                                      l2428 03AE  
                                    l2620 017A                                      l2612 015E  
                                    l2604 0145                                      l2198 04CB  
                                    l2294 0280                                      l2286 026D  
                                    l2278 025D                                      l2390 020E  
                                    l2382 01FD                                      l2630 0193  
                                    l2622 017D                                      l2614 0164  
                                    l2606 0150                                      l1670 0378  
                                    l2288 0272                                      l2392 0214  
                                    l2384 0205                                      l2624 0183  
                                    l2616 016E                                      l2608 0152  
                                    l1672 037F                                      l2560 051D  
                                    l2640 0325                                      l2632 030C  
                                    l2296 03C2                                      l2394 0219  
                                    l2386 0207                                      l2626 018A  
                                    l2618 0173                                      l2554 050A  
                                    l2570 0484                                      l2650 0333  
                                    l2642 032E                                      l2634 030F  
                                    l2298 03C6                                      l2396 021B  
                                    l2388 0209                                      l2580 052E  
                                    l2628 018D                                      l1668 034C  
                                    l1940 069A                                      l2556 050F  
                                    l2572 0485                                      l2564 046B  
                                    l2660 0342                                      l2652 0334  
                                    l2644 0330                                      l2636 0310  
                                    l2398 0223                                      l2582 0532  
                                    l2590 068F                                      l2558 0516  
                                    l2574 048B                                      l2566 0475  
                                    l2662 0344                                      l2654 033C  
                                    l2646 0331                                      l2638 0322  
                                    l2584 0538                                      l2576 0523  
                                    l2592 06B8                                      l2568 047F  
                                    l2664 0345                                      l2656 033E  
                                    l2648 0332                                      l2578 052D  
                                    l1938 0693                                      l2594 056C  
                                    l2666 0347                                      l2658 0340  
                                    l2690 044D                                      l2588 068B  
                                    l2596 0574                                      l2668 0349  
                                    l2692 0462                                      l2684 0442  
                                    l2598 0579                                      l2686 0446  
                                    l2688 0449                                      l1996 059A  
                                    l1998 059D                         __ccov233_end_blk1 055E  
                       __ccov129_end_blk2 04E1                         __ccov145_end_blk2 05C1  
                       __ccov401_end_blk2 050F                         __ccov217_end_blk3 00EA  
                       __ccov137_end_blk3 05DD                         __ccov153_end_blk4 04CB  
                       __ccov305_end_blk4 0384                         __ccov241_end_blk5 065C  
                       __ccov161_end_blk5 04AE                         __ccov313_end_blk5 0145  
                       __ccov209_end_blk7 03E3                                      u1110 0372  
                                    u1030 0352                                      u1111 036F  
                                    u1031 034F                                      u2000 04AA  
                                    u1104 036C                                      u2001 04A9  
                                    u1130 0378                                      u1050 035A  
                                    u1131 0377                                      u1051 0357  
                                    u2100 0243                                      u1140 037F  
                                    u1124 0374                                      u1044 0354  
                                    u2101 0242                                      u1141 037E  
                                    u2110 0249                                      u1070 0362  
                                    u2111 0248                                      u1071 035F  
                                    u2200 027C                                      u2120 024E  
                                    u1064 035C                                      u2201 027B  
                                    u2121 024D                                      u2130 0253  
                                    u1090 036A                                      u2210 03C6  
                                    u2131 0252                                      u1091 0367  
                                    u2211 03C5                                      u2300 00F4  
                                    u2140 0258                                      u1084 0364  
                                    u2220 03CC                                      u2301 00F3  
                                    u2141 0257                                      u2221 03CB  
                                    _LATA 010C                                      u2310 010F  
                                    u2150 025D                                      u2230 03DE  
                                    u2311 010E                                      u2151 025C  
                                    u2231 03DD                                      _LATC 010E  
                                    u2320 0114                                      u1600 03FD  
                                    u2160 0267                                      u2240 03E3  
                                    u2321 0113                                      u1601 03FC  
                                    u2161 0266                                      u2241 03E2  
                                    u1610 04D6                                      u2330 0119  
                                    u2250 00DB                                      u2170 026D  
                                    u1611 04D5                                      u2331 0118  
                                    u2315 010B                                      u2251 00DA  
                                    u2171 026C                                      u1620 04DC  
                                    u2340 011E                                      u2260 00E0  
                                    u2180 0272                                      u2420 01FB  
                                    u1621 04DB                                      u2341 011D  
                                    u2261 00DF                                      u2181 0271  
                                    u2421 01FA                                      u1630 04E1  
                                    u2350 0123                                      u2270 00E5  
                                    u2190 0277                                      u2430 020E  
                                    u1631 04E0                                      u2351 0122  
                                    u2271 00E4                                      u2255 00D7  
                                    u2191 0276                                      u2431 020D  
                                    u2360 0128                                      u2280 00EA  
                                    u1640 05BA                                      u2440 0223  
                                    u2361 0127                                      u2281 00E9  
                                    u1641 05B9                                      u2441 0222  
                                    u2290 00EF                                      u2450 0233  
                                    u2291 00EE                                      u2451 0232  
                                    u1580 03F2                                      u2460 038B  
                                    u2700 0139                                      u2620 050F  
                                    u1581 03F1                                      u2461 038A  
                                    u2701 0138                                      u2621 050E  
                                    u1590 03F8                                      u2470 0394  
                                    u2710 015E                                      u2630 0516  
                                    u1591 03F7                                      u2471 0393  
                                    u2711 015D                                      u2631 0515  
                                    u1920 041C                                      u2480 03A6  
                                    u2720 016E                                      u2640 0470  
                                    u1921 041B                                      u2481 03A5  
                                    u2721 016D                                      u2641 046F  
                                    u1930 0422                                      u2490 03B6  
                                    u2730 017A                                      u1931 0421  
                                    u2491 03B5                                      u2731 0179  
                                    u1940 0427                                      u2740 018A  
                                    u2660 048A                                      u1941 0426  
                                    u2741 0189                                      u2661 0488  
                                    u1950 04B5                                      u2750 044D  
                                    u1951 04B4                                      u2655 0474  
                                    u2751 044C                                      u1960 04BF  
                                    u2680 0538                                      u1961 04BE  
                                    u2681 0537                                      u1970 04CB  
                                    u2674 048B                                      u2690 0579  
                                    u1971 04CA                                      u2827 0140  
                                    u2691 0578                                      u1980 0494  
                                    u1981 0493                                      u2837 052F  
                                    u1990 049E                                      u1991 049D  
                                    u2847 0200                                      _TMR0 0015  
                                    _TMR2 001A                                      _WREN 0CAA  
                                    _WPUA 020C                                      _WPUC 020E  
                       __ccov242_end_blk0 0050                         __ccov330_end_blk1 01FD  
                       __ccov234_end_blk3 0564                         __ccov146_end_blk3 05C2  
                       __ccov402_end_blk3 0516                         __ccov218_end_blk4 00EF  
                       __ccov138_end_blk5 05DF                         __ccov154_end_blk5 04CF  
                       __ccov314_end_blk6 0150                                      _main 0442  
                       __ccov306_end_blk7 0387                         __ccov162_end_blk9 04B1  
                      __ccov223_end_blk10 010F                                      _open 0490  
                      __ccov231_end_blk19 0135                       __ccov398_start_blk8 048B  
                                    fsr0h 0005                                      indf0 0000  
                                    fsr0l 0004                      EEPROM_WriteByte@addr 0078  
                                    btemp 007E                           ?_go_close_short 0073  
                                    start 002D                         __ccov163_end_blk0 019C  
                       __ccov139_end_blk0 060A                         __ccov243_end_blk1 0054  
                       __ccov331_end_blk3 0205                         __ccov235_end_blk4 0565  
                       __ccov147_end_blk4 05C6                         __ccov219_end_blk5 00F4  
                       __ccov403_end_blk5 051D                         __ccov315_end_blk8 0152  
                       __ccov155_end_blk9 04D2                        __ccov31_start_blk0 059A  
                      __ccov23_start_blk1 052D                         __ccov156_end_blk0 0494  
                       __ccov308_end_blk1 0677                         __ccov164_end_blk1 01A3  
                       __ccov244_end_blk2 0059                         __ccov236_end_blk5 056A  
                       __ccov148_end_blk5 05C8                         __ccov332_end_blk5 0207  
                       __ccov404_end_blk6 051F                        __ccov224_end_blk11 0114  
                      __ccov320_end_blk17 0173                       __ccov121_start_blk0 0418  
                     __ccov105_start_blk1 053F                       __ccov113_start_blk3 0622  
                          ??_go_close_alt 0075                      __ccov200_start_blk14 027C  
                       __ccov149_end_blk0 04B5                         __ccov157_end_blk1 049A  
                       __ccov309_end_blk3 067A                         __ccov165_end_blk3 01A7  
                       __ccov245_end_blk3 005D                         __ccov237_end_blk8 056C  
                       __ccov333_end_blk8 0209                         __ccov405_end_blk8 0522  
                 __end_of_TMR0_Initialize 059A            ??_TMR0_DefaultInterruptHandler 0073  
           __end_of_OSCILLATOR_Initialize 068B                                     ?_main 0073  
                       __ccov238_end_blk0 0650                         __ccov182_end_blk0 068F  
                       __ccov158_end_blk2 049E                         __ccov190_end_blk3 0253  
                       __ccov350_end_blk3 038F                         __ccov166_end_blk4 01AF  
                       __ccov246_end_blk4 005F                         __ccov270_end_blk8 02A7  
                                   _EEADR 0191                                     ?_open 0073  
                      __ccov225_end_blk12 0119                        __ccov321_end_blk20 017A  
                     __ccov399_start_blk9 048D                              __ccovbit0_24 019E  
                            __ccovbit0_19 0384                              __ccovbit1_15 0388  
                            __ccovbit1_23 0380                              __ccovbit1_40 018E  
                            __ccovbit1_25 019D                              __ccovbit1_33 0195  
                            __ccovbit1_18 0385                              __ccovbit1_26 019C  
                            __ccovbit1_36 0192                              __ccovbit1_44 018A  
                            __ccovbit1_52 0182                              __ccovbit2_30 0198  
                            __ccovbit1_55 017F                              __ccovbit1_63 0177  
                            __ccovbit2_16 0387                              __ccovbit1_48 0186  
                            __ccovbit2_41 018D                              __ccovbit1_81 0165  
                            __ccovbit1_58 017C                              __ccovbit1_82 0164  
                            __ccovbit2_27 019B                              __ccovbit1_68 0172  
                            __ccovbit3_21 0382                              __ccovbit2_37 0191  
                            __ccovbit2_45 0189                              __ccovbit2_53 0181  
                            __ccovbit1_94 0158                              __ccovbit2_56 017E  
                            __ccovbit2_80 0166                              __ccovbit2_49 0185  
                            __ccovbit3_34 0194                              __ccovbit3_50 0184  
                            __ccovbit2_83 0163                                     _T2CON 001C  
                            __ccovbit3_64 0176                              __ccovbit4_17 0386  
                            __ccovbit5_10 038D                              __ccovbit4_42 018C  
                            __ccovbit3_59 017B                              __ccovbit4_60 017A  
                            __ccovbit3_84 0162                              __ccovbit5_22 0381  
                            __ccovbit4_38 0190                              __ccovbit4_54 0180  
                            __ccovbit4_65 0175                              __ccovbit6_11 038C  
                            __ccovbit5_35 0193                              __ccovbit5_51 0183  
                            __ccovbit6_20 0383                              __ccovbit5_61 0179  
                            __ccovbit4_69 0171                              __ccovbit4_85 0161  
                            __ccovbit6_14 0389                              __ccovbit5_46 0188  
                            __ccovbit6_31 0197                              __ccovbit4_95 0157  
                            __ccovbit5_57 017D                              __ccovbit5_66 0174  
                            __ccovbit6_43 018B                              __ccovbit6_28 019A  
                            __ccovbit6_70 0170                              __ccovbit5_86 0160  
                            __ccovbit6_39 018F                              __ccovbit7_71 016F  
                            __ccovbit8_32 0196                              __ccovbit6_96 0156  
                        __end_of_RELE_GAP 06D6                              __ccovbit8_29 0199  
                            __ccovbit8_47 0187                              __ccovbit7_87 015F  
                            __ccovbit7_97 0155                              __ccovbit9_62 0178  
                            __ccovbit9_67 0173                                     i1l110 0014  
                                   i1l115 0029                                     i1l116 002A  
                                   i1l301 06B0                                     i1l304 06AA  
                                   i1l314 0551                                     i1l162 06D0  
                                   i1l156 064A                                     i1l309 0506  
                                   i1l413 065A                                     i1l421 009D  
                                   i1l319 0627                                     i1l431 00CA  
                                   i1l192 063A                                     i1l408 056A  
                                   i1l416 005F                                     i1l417 005D  
                                   i1l450 0669                                     i1l434 02A1  
                                   i1l444 02C7                                     i1l198 06C1  
                                   i1l374 01D7                                     i1l462 030A  
                                   i1l367 01A3                                     i1l368 01F5  
                                   i1l449 0666                                     i1l369 01BE  
                                   i1l476 066B                                     i1l478 0677  
                    __ccov335_start_blk11 020E                      __ccov175_start_blk15 01D7  
                    __ccov343_start_blk24 0233                      __ccov319_start_blk16 0164  
                    __ccov255_start_blk18 008C                      __ccov327_start_blk28 0193  
                    __ccov263_start_blk29 00C7                                     _TRISA 008C  
                                   _TRISC 008E                           ??_hardware_work 0075  
                       __ccov239_end_blk1 0654                         __ccov183_end_blk1 0691  
                       __ccov159_end_blk3 04A4                         __ccov191_end_blk4 0258  
                       __ccov351_end_blk4 0394                         __ccov167_end_blk5 01B3  
                       __ccov247_end_blk6 0063                         __ccov271_end_blk9 02AC  
               ?_TMR0_SetInterruptHandler 0075                        __ccov40_start_blk1 000A  
                      __ccov32_start_blk1 059D                        __ccov24_start_blk2 052E  
                        __end_of_TMR0_ISR 063C                           __end_of_get_fun 023F  
                        __end_of_TMR2_ISR 064C                           __end_of_get_wsp 0198  
                         __end_of_go_open 04EF                         __ccov280_end_blk2 0669  
                       __ccov184_end_blk2 0693                         __ccov192_end_blk5 025D  
                       __ccov352_end_blk5 039A                         __ccov168_end_blk6 01BA  
                       __ccov248_end_blk7 0067                        __ccov170_end_blk10 01C4  
                      __ccov250_end_blk10 0076                        __ccov226_end_blk13 011E  
                      __ccov322_end_blk21 017D                                     _close 04B1  
                          _WDT_Initialize 06B3                       __ccov122_start_blk1 041C  
                     __ccov106_start_blk2 0545                       __ccov130_start_blk3 04E1  
                     __ccov114_start_blk5 0627                       __ccov210_start_blk8 03E3  
                         __end_of_ms_tick 030C                         __ccov265_end_blk0 028B  
                       __ccov329_end_blk0 01FB                         __ccov185_end_blk0 06BA  
                       __ccov281_end_blk4 066B                         __ccov193_end_blk6 025F  
                       __ccov169_end_blk7 01BE                         __ccov353_end_blk7 039F  
                       __ccov249_end_blk8 0072                            __pbitbssCOMMON 0380  
                      _SHORT_ZUMMER_DELAY 06DD                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                       __ccov282_end_blk0 02CF                         __ccov266_end_blk1 0291  
                       __ccov186_end_blk1 06BD                         __ccov194_end_blk7 0263  
                       __ccov354_end_blk9 03A6                         __ccov370_end_blk9 0331  
                      __ccov171_end_blk11 01CA                        __ccov251_end_blk12 007A  
                      __ccov227_end_blk14 0123                        __ccov323_end_blk22 0183  
                         _TMR2_StartTimer 06BD                            __pcodecov_info 0000  
                       __ccov187_end_blk0 0243                         __ccov283_end_blk1 02D5  
                       __ccov267_end_blk2 0296                         __ccov195_end_blk9 0267  
                      __ccov41_start_blk2 000F                        __ccov33_start_blk2 05A0  
                      __ccov25_start_blk3 0532                           __initialization 002F  
                          eeprom_set@vers 0059                         __ccov348_end_blk0 038B  
                       __ccov364_end_blk0 030F                         __ccov188_end_blk1 0249  
                       __ccov284_end_blk2 02D9                         __ccov268_end_blk4 029C  
                            __end_of_main 046A                        __ccov316_end_blk11 0154  
                      __ccov172_end_blk12 01D0                        __ccov340_end_blk20 0228  
                      __ccov252_end_blk13 0081                        __ccov180_end_blk23 01F5  
                      __ccov260_end_blk23 00BE                        __ccov228_end_blk15 0128  
                      __ccov324_end_blk24 018A                              __end_of_open 04B1  
                     __ccov115_start_blk0 03EE                       __ccov203_start_blk0 03C2  
                     __ccov123_start_blk2 0422                       __ccov107_start_blk4 0548  
                     __ccov131_start_blk4 04E6                       __ccov211_start_blk9 03E5  
                    __ccov201_start_blk15 0280                         __ccov349_end_blk1 038D  
                       __ccov365_end_blk1 0310                         __ccov189_end_blk2 024E  
                       __ccov285_end_blk3 02E0                         __ccov269_end_blk5 02A1  
                 __end_of_TMR2_Initialize 0606               ?_INTERRUPT_InterruptManager 0073  
                _TMR2_SetInterruptHandler 0693                                    ??_main 0079  
                                  ??_open 0076                         __ccov278_end_blk0 0660  
                       __ccov366_end_blk2 0322                         __ccov286_end_blk4 02E4  
                       __ccov390_end_blk6 0468                        __ccov173_end_blk13 01D1  
                      __ccov341_end_blk21 022B                        __ccov317_end_blk13 015E  
                      __ccov253_end_blk14 0088                        __ccov229_end_blk16 012B  
                      __ccov325_end_blk25 018D                        __ccov181_end_blk27 01F7  
                      __ccov261_end_blk27 00C4                              ?_minute_tick 0073  
                    __ccov272_start_blk10 02AC                      __ccov336_start_blk13 0214  
                    __ccov328_start_blk30 0195                      __ccov264_start_blk31 00CA  
                    __ccov360_start_blk16 03BA                      __ccov344_start_blk25 0237  
                    __ccov176_start_blk18 01DA                      __ccov256_start_blk19 009D  
                       __ccov279_end_blk1 0666                         __ccov367_end_blk3 0325  
                       __ccov287_end_blk7 02E5                    __end_of_WDT_Initialize 06B8  
                      __ccov50_start_blk2 05F7                        __ccov42_start_blk3 0014  
                      __ccov34_start_blk3 05A2                        __ccov26_start_blk5 0534  
                       __ccov392_end_blk2 0470                         __ccov368_end_blk4 032E  
                       __ccov288_end_blk8 02E6                                    ?_close 0073  
                                  _ADCON0 009D                                    _ADCON1 009E  
                      __ccov334_end_blk10 020E                        __ccov174_end_blk14 01D7  
                      __ccov318_end_blk14 0164                        __ccov342_end_blk23 0233  
                      __ccov254_end_blk16 008C                        __ccov326_end_blk26 0193  
                      __ccov262_end_blk28 00C7                             __ccovbit10_12 038B  
                           __ccovbit10_72 016E                             __ccovbit12_13 038A  
                           __ccovbit10_88 015E                             __ccovbit10_98 0154  
                           __ccovbit11_89 015D                             __ccovbit12_90 015C  
                           __ccovbit20_76 016A                                    _ADRESH 009C  
                           __ccovbit13_91 015B                                    _ADRESL 009B  
                     __ccov116_start_blk1 03F2                       __ccov140_start_blk1 060A  
                     __ccov204_start_blk1 03C6                       __ccov124_start_blk3 0427  
                     __ccov300_start_blk4 0580                       __ccov108_start_blk5 054C  
                     __ccov132_start_blk5 04EA                             __ccovbit14_73 016D  
                     __ccov220_start_blk6 00F4                                    _EEDATA 0193  
                           __ccovbit22_77 0169                             __ccovbit15_74 016C  
                           __ccovbit14_99 0153                             __ccovbit15_92 015A  
                           __ccovbit23_78 0168                                    _EECON2 0196  
                           __ccovbit17_93 0159                             __ccovbit18_75 016B  
                           __ccovbit27_79 0167                                    _ANSELA 018C  
                                  _ANSELC 018E                             __ccovbit1_100 0152  
                           __ccovbit1_113 0145                             __ccovbit1_132 0132  
                           __ccovbit1_117 0141                             __ccovbit1_142 0128  
                           __ccovbit1_152 011E                             __ccovbit2_101 0151  
                           __ccovbit2_133 0131                             __ccovbit2_150 0120  
                           __ccovbit2_143 0127                             __ccovbit3_102 0150  
                           __ccovbit3_120 013E                             __ccovbit3_114 0144  
                           __ccovbit3_118 0140                             __ccovbit3_145 0125  
                                  _BORCON 0116                             __ccovbit3_155 011B  
                           __ccovbit3_181 0101                             __ccovbit4_103 014F  
                           __ccovbit4_121 013D                             __ccovbit4_134 0130  
                           __ccovbit4_151 011F                             __ccovbit4_144 0126  
                           __ccovbit4_153 011D                             __ccovbit4_146 0124  
                           __ccovbit5_104 014E                             __ccovbit4_178 0104  
                           __ccovbit5_115 0143                             __ccovbit5_119 013F  
                           __ccovbit5_135 012F                             __ccovbit5_170 010C  
                           __ccovbit6_179 0103                             __ccovbit7_154 011C  
                           __ccovbit7_171 010B                             __ccovbit8_105 014D  
                           __ccovbit8_122 013C                             __ccovbit8_116 0142  
                           __ccovbit8_136 012E                             __ccovbit8_182 0100  
                           __ccovbit9_180 0102                                    i1l2100 008C  
                                  i1l2102 00A3                                    i1l2110 00BE  
                                  i1l2120 0291                                    i1l2112 00C4  
                                  i1l2104 00A7                                    i1l2122 0296  
                                  i1l2114 00C7                                    i1l2106 00AE  
                                  i1l2140 065C                                    i1l2132 02B3  
                                  i1l2124 029C                                    i1l2116 0287  
                                  i1l2108 00BC                                    i1l2220 02D9  
                                  i1l2142 0660                                    i1l2134 02B8  
                                  i1l2126 02A7                                    i1l2118 028B  
                                  i1l2046 06A7                                    i1l2230 02EE  
                                  i1l2222 02E0                                    i1l2214 02CA  
                                  i1l2136 02BC                                    i1l2128 02AC  
                                  i1l2080 0050                                    i1l2240 0303  
                                  i1l2232 02F1                                    i1l2224 02E4  
                                  i1l2216 02CF                                    i1l2250 066B  
                                  i1l2138 02C3                                    i1l2090 0072  
                                  i1l2082 0054                                    i1l2242 0306  
                                  i1l2234 02F9                                    i1l2226 02E5  
                                  i1l2218 02D5                                    i1l2252 062A  
                                  i1l2092 0076                                    i1l2084 0059  
                                  i1l2228 02E6                                    i1l2260 063C  
                                  i1l2500 0024                                    i1l2254 062B  
                                  i1l2094 007A                                    i1l2086 0063  
                                  i1l2078 004B                                    i1l2238 02FC  
                                  i1l2262 063E                         __ccov297_end_blk0 0574  
                       __ccov385_end_blk0 0445                                    i1l2256 062E  
                                  i1l2096 0081                                    i1l2088 0067  
                                  u201_20 02D5                                    i1l2264 0644  
                                  u201_21 02D4                         __ccov393_end_blk3 0475  
                                  i1l2258 0634                                    i1l2098 0088  
                       __ccov369_end_blk6 0330                         __ccov289_end_blk9 02EE  
                                  i1l1912 06AD                                    i1l1920 04FC  
                                  u202_20 02E0                                    u202_21 02DF  
                                  i1l1930 0545                                    i1l1922 0501  
                                  i1l1914 04EF                                    i1l2490 0006  
                                  i1l1932 0548                                    i1l1924 0502  
                                  i1l1916 04F3                                    i1l2492 000A  
                                  i1l1934 054C                                    i1l1926 053B  
                                  i1l1918 04F8                                    i1l1942 0618  
                                  i1l1950 019C                                    i1l2494 000F  
                                  i1l1936 054D                                    i1l1928 053F  
                                  i1l1944 061C                                    i1l1960 01BA  
                                  u203_20 02EE                                    i1l2496 0019  
                                  u203_21 02ED                                    i1l1946 0622  
                                  i1l1970 01DA                                    i1l1962 01C4  
                                  i1l1954 01A7                                    i1l2498 001E  
                                  i1l1980 0554                                    i1l1972 01DF  
                                  i1l1964 01CA                                    i1l1956 01AF  
                                  i1l1948 0198                                    i1l1982 055A  
                                  i1l1974 01E6                                    i1l1966 01D0  
                                  i1l1958 01B3                                    i1l1990 064C  
                                  u140_20 04F3                                    i1l1984 055E  
                                  i1l1976 01EA                                    i1l1968 01D1  
                                  i1l1992 0650                                    u204_20 0303  
                                  u140_21 04F2                                    u204_21 0302  
                                  i1l1986 0564                                    i1l1978 01F1  
                                  i1l1994 0654                                    i1l1988 0565  
                                  u141_20 04F8                                    u141_21 04F7  
                                  u206_20 0675                                    u142_20 053F  
                                  u150_20 01C4                                    u206_21 0672  
                                  u142_21 053E                                    u150_21 01C3  
                                  u143_20 0545                                    u151_20 01CA  
                                  u143_21 0544                                    u151_21 01C9  
                                  u207_24 0677                                    u208_20 0634  
                                  u144_20 061C                                    u152_20 01D0  
                                  u208_21 0633                                    u144_21 061B  
                                  u152_21 01CF                                    u153_20 01E6  
                                  u145_20 019C                                    u209_20 0644  
                                  u153_21 01E5                                    u145_21 019B  
                                  u209_21 0643                                    u154_20 01F1  
                                  u146_20 01A2                                    u170_20 0081  
                                  u250_20 000A                                    u154_21 01F0  
                                  u146_21 01A1                                    u170_21 0080  
                                  u250_21 0009                                    u155_20 055A  
                                  u147_20 01A7                                    u171_20 0088  
                                  u251_20 000F                                    u155_21 0559  
                                  u147_21 01A6                                    u171_21 0087  
                                  u251_21 000E                                    u180_20 02B2  
                                  u156_20 0564                                    u148_20 01AF  
                                  u172_20 00A3                                    u252_20 0019  
                                  u180_21 02B1                                    u156_21 0563  
                                  u148_21 01AE                                    u172_21 00A2  
                                  u252_21 0018                                    u181_20 02B8  
                                  u149_20 01BA                                    u157_20 0650  
                                  u173_20 00AE                                    u165_20 0054  
                                  u253_20 001E                                    u181_21 02B7  
                                  u149_21 01B9                                    u157_21 064F  
                                  u173_21 00AD                                    u165_21 0053  
                                  u253_21 001D                                    u182_20 02C3  
                                  u174_20 00C4                                    u166_20 0059  
                                  u254_20 0024                                    u182_21 02C2  
                                  u174_21 00C3                                    u166_21 0058  
                                  u254_21 0023                                    u183_20 0660  
                                  u175_20 028B                                    u167_20 0063  
                                  u183_21 065F                                    u175_21 028A  
                                  u167_21 0062                                    u184_20 0666  
                                  u176_20 0291                                    u168_20 0067  
                                  u184_21 0665                                    u176_21 0290  
                                  u168_21 0066                                    u177_20 029C  
                                  u169_20 007A                                    u177_21 029B  
                                  u169_21 0079                                    u178_20 02A7  
                                  u178_21 02A6                          __ccov10_end_blk1 067E  
                                  u179_20 02AC                                    u179_21 02AB  
                        _GOOD_WSP_VOLTAGE 06C4                                    _OSCCON 0099  
                                  _WDTCON 0097                         __ccov298_end_blk1 0579  
                       __ccov386_end_blk1 0446                         __ccov394_end_blk4 047F  
                      __ccov335_end_blk11 0214                        __ccov175_end_blk15 01DA  
                      __ccov343_end_blk24 0237                        __ccov319_end_blk16 016E  
                      __ccov255_end_blk18 009D                        __ccov327_end_blk28 0195  
                      __ccov263_end_blk29 00CA                          __ccov11_end_blk2 0681  
                       __ccov299_end_blk2 0580                         __ccov387_end_blk2 0449  
                       __ccov395_end_blk5 0484                          __ccov12_end_blk3 0683  
                      __ccov51_start_blk3 05F8                        __ccov43_start_blk4 0019  
                      __ccov35_start_blk4 05A5                        __ccov27_start_blk7 0538  
                        __end_of_get_jump 03C2                          __end_of_go_close 0418  
                       __ccov388_end_blk3 044D                         __ccov396_end_blk6 0485  
                      __ccov272_end_blk10 02B3                        __ccov336_end_blk13 0219  
                      __ccov328_end_blk30 0198                        __ccov264_end_blk31 00CC  
                      __ccov360_end_blk16 03BB                        __ccov344_end_blk25 0238  
                      __ccov176_end_blk18 01DF                        __ccov256_end_blk19 00A3  
                     __ccov301_start_blk0 034C                       __ccov117_start_blk2 03F8  
                     __ccov141_start_blk2 0610                       __ccov205_start_blk2 03CC  
                     __ccov125_start_blk4 042C                       __ccov109_start_blk6 054D  
                     __ccov221_start_blk7 00F7                       __ccov133_start_blk8 04EC  
             __end_of_MELODY_REPEAT_DELAY 06D3                      __ccov202_start_blk17 0284  
                        ?_TMR0_Initialize 0073                         __ccov389_end_blk4 0462  
                       __ccov397_end_blk7 048B                         ??_EEPROM_ReadByte 0075  
                        __end_of_fun_work 0287                          __ccov22_end_blk0 052D  
                __end_of_EEPROM_WriteByte 0490                          __end_of_sec_work 00CC  
                               ??_get_fun 0075                          __end_of_rele_off 05C8  
                               ??_get_wsp 0077                         __ccov398_end_blk8 048D  
                               ??_go_open 0075                        __ccov177_end_blk20 01E6  
                      __ccov257_end_blk20 00A7                        __ccov273_end_blk13 02B8  
                      __ccov337_end_blk16 021B                        __ccov361_end_blk17 03BD  
                      __ccov345_end_blk26 023A                          __ccov31_end_blk0 059D  
                        __ccov23_end_blk1 052E             __end_of_RELE_POWER_WORK_DELAY 06D8  
                    __ccov177_start_blk20 01DF                      __ccov257_start_blk20 00A3  
                    __ccov273_start_blk13 02B3                      __ccov337_start_blk16 0219  
                    __ccov361_start_blk17 03BB                      __ccov345_start_blk26 0238  
                       __ccov399_end_blk9 0490                                 ??_ms_tick 0075  
                         ?_WDT_Initialize 0073                          __ccov40_end_blk1 000F  
                        __ccov32_end_blk1 05A0                          __ccov24_end_blk2 0532  
                      __ccov52_start_blk4 05FA                        __ccov44_start_blk5 001E  
                      __ccov36_start_blk5 05AA                        __ccov28_start_blk9 0539  
                  EEPROM_WriteByte@status 0397                  ADC_GetConversion@channel 0076  
                   _HIGH_WATER_RESISTANSE 06CC                   __end_of_TMR2_StartTimer 06C1  
TMR0_SetInterruptHandler@InterruptHandler 0075  TMR2_SetInterruptHandler@InterruptHandler 0075  
                      __ccov290_end_blk10 02F1                        __ccov362_end_blk20 03BF  
                      __ccov178_end_blk21 01EA                        __ccov258_end_blk21 00AE  
                      __ccov274_end_blk14 02BC                        __ccov338_end_blk18 0223  
                      __ccov346_end_blk29 023C                          __ccov41_end_blk2 0014  
                        __ccov33_end_blk2 05A2                          __ccov25_end_blk3 0534  
                     __ccov214_start_blk0 00CC                       __ccov134_start_blk0 05C8  
                     __ccov310_start_blk0 0135                       __ccov150_start_blk1 04B5  
                     __ccov302_start_blk1 0378                       __ccov118_start_blk3 03FD  
                     __ccov206_start_blk3 03CE                       __ccov142_start_blk4 0615  
                     __ccov126_start_blk6 043F                       __ccov222_start_blk8 00FB  
                    __end_of_go_close_alt 05DF                         _SYSTEM_Initialize 05DF  
                        __ccov50_end_blk2 05F8                          __ccov42_end_blk3 0019  
                        __ccov34_end_blk3 05A5                          __ccov26_end_blk5 0538  
                 __end_of__initialization 0047                        _AUTOROTATION_DELAY 06C8  
                      ?_SYSTEM_Initialize 0073                        __ccov355_end_blk10 03AA  
                      __ccov291_end_blk11 02F9                        __ccov371_end_blk12 0332  
                      __ccov179_end_blk22 01F1                        __ccov259_end_blk22 00BC  
                      __ccov363_end_blk22 03C2                        __ccov347_end_blk31 023F  
                      __ccov275_end_blk16 02C3                        __ccov339_end_blk19 0227  
                        __ccov51_end_blk3 05FA                          __ccov43_end_blk4 001E  
                        __ccov35_end_blk4 05AA                          __ccov27_end_blk7 0539  
                           _UP_RESISTANSE 06CA                          __ccov52_end_blk4 0601  
                        __ccov44_end_blk5 0024                          __ccov36_end_blk5 05AF  
                      __ccov53_start_blk5 0601                        __ccov45_start_blk6 0024  
                        __ccov28_end_blk9 053B                        __ccov37_start_blk6 05AF  
                          __pcstackCOMMON 0073                       ??_SYSTEM_Initialize 0078  
                   __end_of_zummer_switch 067A                                 ?_TMR0_ISR 0073  
                      __ccov196_end_blk10 026D                        __ccov356_end_blk11 03AB  
                      __ccov292_end_blk12 02FC                        __ccov372_end_blk15 0333  
                      __ccov276_end_blk17 02C7                        __ccov380_end_blk27 0345  
                               ?_TMR2_ISR 0073                             __end_of_close 04D2  
                        __ccov53_end_blk5 0604                          __ccov45_end_blk6 0029  
                        __ccov37_end_blk6 05B1                       __ccov127_start_blk0 04D2  
                     __ccov143_start_blk0 05B1                       __ccov215_start_blk1 00DB  
                     __ccov135_start_blk1 05CC                       __ccov311_start_blk1 0139  
                     __ccov151_start_blk2 04BB                       __ccov303_start_blk2 037B  
                     __ccov119_start_blk4 0402                       __ccov207_start_blk4 03D1  
                        ?_TMR2_Initialize 0073                          __ccov70_end_blk1 069A  
                        __ccov54_end_blk6 0606                              ?_start_alarm 0073  
             get_wsp@bad_measures_counter 004B                        __ccov197_end_blk11 0272  
                      __ccov357_end_blk12 03AE                        __ccov277_end_blk22 02CA  
                      __ccov293_end_blk16 0303                        __ccov373_end_blk18 0334  
                      __ccov381_end_blk28 0347                          __ccov71_end_blk0 06D2  
                        __ccov39_end_blk0 000A                          __ccov55_end_blk0 06BF  
                          _OPTION_REGbits 0095                              ?_start_setup 0073  
                    __ccov290_start_blk10 02EE                      __ccov362_start_blk20 03BD  
                    __ccov178_start_blk21 01E6                      __ccov258_start_blk21 00A7  
                    __ccov274_start_blk14 02B8                      __ccov338_start_blk18 021B  
                    __ccov346_start_blk29 023A                          __ccov72_end_blk0 0588  
                        __ccov48_end_blk0 05F6                          __ccov56_end_blk1 06C1  
                      __ccov70_start_blk1 0698                        __ccov54_start_blk6 0604  
                                 ??_close 0076                           __ccov1_end_blk0 05F1  
                              _beep_short 04EF                 __end_of_SYSTEM_Initialize 05F3  
                        ??_go_close_short 0075                        __ccov198_end_blk12 0277  
                      __ccov374_end_blk21 0335                        __ccov358_end_blk14 03B6  
                      __ccov294_end_blk17 0306                        __ccov382_end_blk29 0349  
                        __ccov65_end_blk0 063E                          __ccov73_end_blk1 058B  
                        __ccov49_end_blk1 05F7                       __ccov232_start_blk0 0554  
                     __ccov128_start_blk1 04D6                       __ccov144_start_blk1 05BA  
                     __ccov216_start_blk2 00E0                       __ccov136_start_blk2 05D2  
                     __ccov240_start_blk3 0654                       __ccov152_start_blk3 04BF  
                     __ccov312_start_blk3 013B                       __ccov304_start_blk3 037F  
                     __ccov160_start_blk4 04A4                       __ccov208_start_blk6 03D8  
                              __pbssBANK0 0034                           __ccov2_end_blk1 05F3  
                        __ccov90_end_blk0 069F                          __ccov66_end_blk1 0644  
                        __ccov74_end_blk2 058F                           __ccov3_end_blk0 0686  
                      __ccov199_end_blk13 027C                        __ccov383_end_blk30 034A  
                      __ccov375_end_blk22 033C                        __ccov359_end_blk15 03BA  
                      __ccov295_end_blk18 030A                          __ccov91_end_blk1 06A1  
                        __ccov67_end_blk2 064A                          __ccov75_end_blk3 0590  
                         __ccov4_end_blk1 0687                                __pmaintext 0442  
                        __ccov92_end_blk0 06C4                        __ccov71_start_blk0 06D0  
                      __ccov39_start_blk0 0004                        __ccov55_start_blk0 06BD  
                        __ccov68_end_blk4 064C                          __ccov76_end_blk4 0591  
        __end_of_TMR0_SetInterruptHandler 06A1                           __ccov5_end_blk2 0689  
                              ??_TMR0_ISR 0073                                ??_TMR2_ISR 0075  
                         _time_rele_power 0045                        __ccov296_end_blk20 030C  
                      __ccov384_end_blk31 034C                        __ccov376_end_blk23 033E  
                              __pintentry 0004                          __ccov85_end_blk0 062B  
                        __ccov93_end_blk0 06B0                          __ccov69_end_blk0 0698  
                        __ccov77_end_blk5 0598                       __ccov233_start_blk1 055A  
                     __ccov129_start_blk2 04DC                       __ccov145_start_blk2 05BE  
                     __ccov401_start_blk2 0509                       __ccov217_start_blk3 00E5  
                     __ccov137_start_blk3 05D8                       __ccov153_start_blk4 04C5  
                     __ccov305_start_blk4 0380                       __ccov241_start_blk5 065A  
                     __ccov161_start_blk5 04AA                       __ccov313_start_blk5 013D  
                     __ccov209_start_blk7 03DE                            __ccovbit10_123 013B  
                          __ccovbit10_137 012D                            __ccovbit11_106 014C  
                          __ccovbit11_163 0113                            __ccovbit12_107 014B  
                          __ccovbit12_147 0123                            __ccovbit12_172 010A  
                          __ccovbit20_149 0121                            __ccovbit20_175 0107  
                          __ccovbit13_108 014A                            __ccovbit21_128 0136  
                          __ccovbit13_164 0112                            __ccovbit21_165 0111  
                          __ccovbit14_124 013A                            __ccovbit14_109 0149  
                          __ccovbit22_141 0129                            __ccovbit14_138 012C  
                          __ccovbit30_162 0114                            __ccovbit14_156 011A  
                          __ccovbit14_173 0109                            __ccovbit15_110 0148  
                          __ccovbit22_159 0117                            __ccovbit22_176 0106  
                    __ccov212_start_blk10 03E8                            __ccovbit31_131 0133  
                          __ccovbit23_129 0135                            __ccovbit23_166 0110  
                          __ccovbit31_169 010D                            __ccovbit31_177 0105  
                          __ccovbit16_125 0139                            __ccovbit16_139 012B  
                          __ccovbit16_157 0119                            __ccovbit17_111 0147  
                          __ccovbit17_140 012A                            __ccovbit17_158 0118  
                          __ccovbit17_174 0108                            __ccovbit18_126 0138  
                          __ccovbit26_160 0116                            __ccovbit18_148 0122  
                          __ccovbit26_167 010F                            __ccovbit19_112 0146  
                          __ccovbit19_127 0137                           __ccov6_end_blk3 068B  
                          __ccovbit28_161 0115                            __ccovbit29_130 0134  
                          __ccovbit29_168 010E                                   _APFCON0 011D  
                                 _APFCON1 011E                          __ccov86_end_blk1 062E  
                        __ccov94_end_blk1 06B3                          __ccov78_end_blk6 059A  
                       _time_rele_control 0043                           __ccov7_end_blk0 06B6  
                      __ccov377_end_blk24 0340                          __ccov95_end_blk0 06AA  
                        __ccov87_end_blk2 0634                                _eeprom_set 056C  
                    __ccov355_start_blk10 03A6                      __ccov291_start_blk11 02F1  
                    __ccov371_start_blk12 0331                      __ccov179_start_blk22 01EA  
                    __ccov259_start_blk22 00AE                      __ccov363_start_blk22 03BF  
                    __ccov347_start_blk31 023C                      __ccov275_start_blk16 02BC  
                    __ccov339_start_blk19 0223                           __ccov8_end_blk1 06B8  
                                 _OSCTUNE 0098                          __ccov96_end_blk1 06AD  
                        __ccov88_end_blk3 063A                        __ccov72_start_blk0 0583  
                      __ccov48_start_blk0 05F3                        __ccov56_start_blk1 06BF  
                       __end_of_beep_long 0554                           __ccov9_end_blk0 067D  
                        ?_TMR2_StartTimer 0073                                 ?_get_jump 0073  
                      __ccov378_end_blk25 0342                                 ?_go_close 0073  
                        __ccov97_end_blk0 04F3                          __ccov89_end_blk5 063C  
                     __ccov242_start_blk0 004B                       __ccov330_start_blk1 01FB  
                     __ccov234_start_blk3 055E                       __ccov146_start_blk3 05C1  
                     __ccov402_start_blk3 050F                       __ccov218_start_blk4 00EA  
                     __ccov138_start_blk5 05DD                       __ccov154_start_blk5 04CB  
                     __ccov314_start_blk6 0145                       __ccov306_start_blk7 0384  
                     __ccov162_start_blk9 04AE                          __ccov98_end_blk1 04F8  
                               ?_fun_work 0073                         __ccov1_start_blk0 05DF  
                      __ccov379_end_blk26 0344                                 ?_sec_work 0073  
                        __ccov99_end_blk2 04FC                                 ?_rele_off 0073  
                    _ADC_InterruptHandler 0047                ??_TMR2_SetInterruptHandler 0077  
                      __ccov65_start_blk0 063C                        __ccov73_start_blk1 0588  
                      __ccov49_start_blk1 05F6                             ??_beep_double 0073  
   __end_of_RELE_POWER_AUTOROTATION_DELAY 06D7             _RELE_POWER_AUTOROTATION_DELAY 06D6  
                     __ccov163_start_blk0 0198                       __ccov139_start_blk0 0606  
                     __ccov243_start_blk1 0050                       __ccov331_start_blk3 01FD  
                     __ccov235_start_blk4 0564                       __ccov147_start_blk4 05C2  
                     __ccov219_start_blk5 00EF                       __ccov403_start_blk5 0516  
                     __ccov315_start_blk8 0150                       __ccov155_start_blk9 04CF  
                    __ccov213_start_blk14 03EC                  __end_of_GOOD_WSP_VOLTAGE 06C6  
                                 __ptext1 03C2                                   __ptext2 030C  
                                 __ptext3 056C                                   __ptext4 046A  
                                 __ptext5 0509                                   __ptext6 06BD  
                                 __ptext7 05DF                                   __ptext8 06B3  
                                 __ptext9 05F3                                   _get_fun 01F7  
                                 _get_wsp 0135                                   _go_open 04D2  
                       __ccov2_start_blk1 05F1                     _OSCILLATOR_Initialize 0683  
                               _T2CONbits 001C                      __ccov196_start_blk10 0267  
                    __ccov356_start_blk11 03AA                      __ccov292_start_blk12 02F9  
                    __ccov372_start_blk15 0332                      __ccov276_start_blk17 02C3  
                    __ccov380_start_blk27 0344                  ??_PIN_MANAGER_Initialize 0075  
                                 _ms_tick 02CA                     __end_of_hardware_work 0387  
                      __ccov90_start_blk0 069A                        __ccov66_start_blk1 063E  
                      __ccov74_start_blk2 058B                               ?_beep_short 0073  
                                 clrloop0 06A2                                ??_get_jump 0075  
                              ??_go_close 0075                         __end_of_rele_tick 01F7  
                    end_of_initialization 0047                       __ccov156_start_blk0 0490  
                     __ccov308_start_blk1 066B                       __ccov164_start_blk1 019C  
                     __ccov244_start_blk2 0054                       __ccov236_start_blk5 0565  
                     __ccov148_start_blk5 05C6                       __ccov332_start_blk5 0205  
                     __ccov404_start_blk6 051D                                ??_fun_work 0076  
                       __ccov3_start_blk0 0683                           _EEPROM_ReadByte 0509  
                              ??_sec_work 0074                                ??_rele_off 0075  
                           ??_clear_alarm 0075                             ??_ms_100_work 0073  
                      __ccov91_start_blk1 069F                        __ccov67_start_blk2 0644  
                      __ccov75_start_blk3 058F                             ??_ms_200_work 0073  
                          _FUN_MEAS_COUNT 06D9                       __ccov149_start_blk0 04B1  
                     __ccov157_start_blk1 0494                       __ccov309_start_blk3 0677  
                     __ccov165_start_blk3 01A3                       __ccov245_start_blk3 0059  
                     __ccov237_start_blk8 056A                       __ccov333_start_blk8 0207  
                     __ccov405_start_blk8 051F                              _go_close_alt 05C8  
                    __ccov230_start_blk17 012B                          ??_WDT_Initialize 0075  
            __end_of_LOW_WATER_RESISTANSE 06D0                  _TMR0_SetInterruptHandler 069A  
                               _PORTAbits 000C                                 _PORTCbits 000E  
                       ?_EEPROM_WriteByte 0075                         __end_of_stop_tone 06AD  
                     __end_of_beep_double 062A                         __end_of_switch_wm 03EE  
                       __ccov4_start_blk1 0686                               ?_eeprom_set 0073  
                      ??_EEPROM_WriteByte 0076                      __ccov197_start_blk11 026D  
                    __ccov357_start_blk12 03AB                      __ccov277_start_blk22 02C7  
                    __ccov293_start_blk16 02FC                      __ccov373_start_blk18 0333  
                    __ccov381_start_blk28 0345                                 _TRISAbits 008C  
                               _TRISCbits 008E                        __ccov92_start_blk0 06C1  
                      __ccov68_start_blk4 064A                        __ccov76_start_blk4 0590  
                     __ccov238_start_blk0 064C                       __ccov182_start_blk0 068B  
                     __ccov158_start_blk2 049A                       __ccov190_start_blk3 024E  
                     __ccov350_start_blk3 038D                       __ccov166_start_blk4 01A7  
                     __ccov246_start_blk4 005D                       __ccov270_start_blk8 02A1  
                      EEPROM_WriteByte@dt 0075                                _start_tone 06AD  
                       __ccov5_start_blk2 0687                                get_wsp@res 0058  
                  __end_of_FUN_MEAS_COUNT 06DA                        __ccov85_start_blk0 062A  
                      __ccov93_start_blk0 06AD                        __ccov69_start_blk0 0693  
                      __ccov77_start_blk5 0591      __end_of_TMR2_DefaultInterruptHandler 06D2  
            _TMR2_DefaultInterruptHandler 06D0                               __ccovbit1_1 0396  
                             __ccovbit1_3 0394                               __ccovbit1_7 0390  
                             __ccovbit3_2 0395                               __ccovbit3_4 0393  
                             __ccovbit2_8 038F                               __ccovbit3_9 038E  
                             __ccovbit6_6 0391                               __ccovbit9_5 0392  
                     __end_of_clear_alarm 06BD                       __ccov239_start_blk1 0650  
                     __ccov183_start_blk1 068F                       __ccov159_start_blk3 049E  
                     __ccov191_start_blk4 0253                       __ccov351_start_blk4 038F  
                     __ccov167_start_blk5 01AF                       __ccov247_start_blk6 005F  
                     __ccov271_start_blk9 02A7                      __ccov223_start_blk10 0101  
                    __ccov231_start_blk19 0133                            _ADC_Initialize 067A  
                  ?_OSCILLATOR_Initialize 0073                             __pbitbssBANK0 0100  
                     __end_of_ms_100_work 066B                       __end_of_ms_200_work 02CA  
                       __ccov6_start_blk3 0689                             ??_go_open_alt 0075  
                     start_initialization 002F                      __ccov198_start_blk12 0272  
                    __ccov374_start_blk21 0334                      __ccov358_start_blk14 03AE  
                    __ccov294_start_blk17 0303                      __ccov382_start_blk29 0347  
                       __ccov46_end_blk10 002A                     _RELE_POWER_WORK_DELAY 06D7  
                           ??_sec_30_work 0073                        __ccov86_start_blk1 062B  
                      __ccov94_start_blk1 06B0                        __ccov78_start_blk6 0598  
                 __end_of_EEPROM_ReadByte 0522                       __ccov280_start_blk2 0666  
                     __ccov184_start_blk2 0691                       __ccov192_start_blk5 0258  
                     __ccov352_start_blk5 0394                       __ccov168_start_blk6 01B3  
                     __ccov248_start_blk7 0063                         __ccov47_end_blk12 002D  
                       __ccov7_start_blk0 06B3                       __ccov46_start_blk10 0029  
                        _beep_short_count 007D                        __ccov95_start_blk0 06A7  
                      __ccov87_start_blk2 062E                               _beep_double 0618  
                  __end_of_ADC_Initialize 0683                       __ccov265_start_blk0 0287  
                     __ccov329_start_blk0 01F7                       __ccov185_start_blk0 06B8  
                     __ccov281_start_blk4 0669                       __ccov193_start_blk6 025D  
                     __ccov169_start_blk7 01BA                       __ccov353_start_blk7 039A  
                     __ccov249_start_blk8 0067             ?_TMR2_DefaultInterruptHandler 0073  
                    __ccov224_start_blk11 010F                      __ccov320_start_blk17 016E  
                       __ccov8_start_blk1 06B6                         _AUTOROTATION_DAYS 06DB  
                             __pbssCOMMON 0079                                 ___latbits 0001  
                           __pcstackBANK0 0058                      __ccov199_start_blk13 0277  
                    __ccov383_start_blk30 0349                      __ccov375_start_blk22 0335  
                    __ccov359_start_blk15 03B6                      __ccov295_start_blk18 0306  
                      __ccov96_start_blk1 06AA                        __ccov88_start_blk3 0634  
                     __end_of_go_open_alt 0618                              sec_work@iled 004C  
                             ?_start_tone 0073                       __ccov282_start_blk0 02CA  
                     __ccov266_start_blk1 028B                       __ccov186_start_blk1 06BA  
                     __ccov194_start_blk7 025F                       __ccov354_start_blk9 039F  
                     __ccov370_start_blk9 0330                                 _beep_long 053B  
                     __end_of_sec_30_work 065C                      _LOW_WATER_RESISTANSE 06CE  
                   _TMR0_InterruptHandler 0053                                 __pnvBANK0 0053  
                       __ccov9_start_blk0 067A                               _clear_alarm 06B8  
                  _PIN_MANAGER_Initialize 059A                       __ccov47_start_blk12 002A  
                             _ms_100_work 065C                        __ccov97_start_blk0 04EF  
                      __ccov89_start_blk5 063A                               _ms_200_work 0287  
                         ?_ADC_Initialize 0073                       __ccov187_start_blk0 023F  
                     __ccov283_start_blk1 02CF                       __ccov267_start_blk2 0291  
                     __ccov195_start_blk9 0263              ??_INTERRUPT_InterruptManager 0075  
                    __ccov225_start_blk12 0114                      __ccov321_start_blk20 0173  
               __end_of_AUTOROTATION_DAYS 06DC                                  ?_get_fun 0073  
                                ?_get_wsp 0073                                  ?_go_open 0073  
                           ??_minute_tick 0073                                  ?_ms_tick 0073  
                    __ccov296_start_blk20 030A                      __ccov384_start_blk31 034A  
                    __ccov376_start_blk23 033C                              ??_beep_short 0073  
                          _WSP_MEAS_COUNT 06DA                        __ccov98_start_blk1 04F3  
                        ?_EEPROM_ReadByte 0073                                 _sec_count 0052  
                     __ccov348_start_blk0 0387                       __ccov364_start_blk0 030C  
                     __ccov188_start_blk1 0243                       __ccov284_start_blk2 02D5  
                     __ccov268_start_blk4 0296                         ??_TMR0_Initialize 0077  
                              ?_beep_long 0073                                  _LATAbits 010C  
                                _LATCbits 010E                                 _rele_tick 0198  
                               clear_ram0 06A1                                  _PIE1bits 0091  
                                _RELE_GAP 06D5                ??_TMR0_SetInterruptHandler 0077  
                                _PIR1bits 0011                                 _time_meas 004F  
                        _time_moving_wait 0050                                  _TMR0_ISR 062A  
                               _time_tone 003F                        __ccov99_start_blk2 04F8  
                                _TMR2_ISR 063C                             _zummer_switch 066B  
                      __end_of_beep_short 0509                       __ccov349_start_blk1 038B  
                     __ccov365_start_blk1 030F                       __ccov189_start_blk2 0249  
                     __ccov285_start_blk3 02D9                       __ccov269_start_blk5 029C  
                         _beep_long_count 004E                                _ADCON0bits 009D  
                    __ccov170_start_blk10 01BE                      __ccov250_start_blk10 0072  
                    __ccov226_start_blk13 0119                      __ccov322_start_blk21 017A  
                            ??_eeprom_set 0058            ??_TMR2_DefaultInterruptHandler 0073  
                             _go_open_alt 0606                 ?_TMR2_SetInterruptHandler 0075  
                  __end_of_WSP_MEAS_COUNT 06DB                                 _stop_tone 06A7  
                               _switch_wm 03C2                      __ccov377_start_blk24 033E  
                             _sec_30_work 064C                           ms_tick@ms_count 0039  
                     __end_of_minute_tick 056C                       __ccov278_start_blk0 065C  
                     __ccov366_start_blk2 0310                       __ccov286_start_blk4 02E0  
                     __ccov390_start_blk6 0462                         _beep_double_count 004D  
                       ??_TMR2_Initialize 0077                                ?_rele_tick 0073  
                   __end_of_UP_RESISTANSE 06CC                       _MELODY_REPEAT_DELAY 06D2  
                       _ADC_GetConversion 0522                           _JUMP_MEAS_COUNT 06D8  
                      __end_of_eeprom_set 0583                            ?_zummer_switch 0073  
                 ??_OSCILLATOR_Initialize 0075                        ?_ADC_GetConversion 0073  
                     __ccov279_start_blk1 0660                       __ccov367_start_blk3 0322  
                     __ccov287_start_blk7 02E4                             ??_start_alarm 0075  
              __end_of_SHORT_ZUMMER_DELAY 06DE                      __ccov171_start_blk11 01C4  
                    __ccov251_start_blk12 0076                      __ccov227_start_blk14 011E  
                    __ccov323_start_blk22 017D                                _ANSELAbits 018C  
                              _ANSELCbits 018E                       ??_ADC_GetConversion 0075  
                           ??_start_setup 0079                                ?_stop_tone 0073  
                           _time_rele_gap 0041                                ?_switch_wm 0073  
                    __ccov378_start_blk25 0340                                  __ptext10 0693  
                                __ptext11 0583                                  __ptext20 0522  
                                __ptext12 069A                                  __ptext21 0387  
                                __ptext13 059A                                  __ptext30 00CC  
                                __ptext22 01F7                                  __ptext14 0683  
                                __ptext31 04D2                                  __ptext23 023F  
                                __ptext15 067A                                  __ptext40 0198  
                                __ptext32 0418                                  __ptext24 0490  
                                __ptext16 034C                                  __ptext41 0554  
                                __ptext25 0606                                  __ptext17 0135  
                                __ptext50 066B                                  __ptext42 0287  
                                __ptext34 063C                                  __ptext26 04B1  
                                __ptext18 068B                                  __ptext43 0618  
                                __ptext35 06D0                                  __ptext27 05B1  
                                __ptext19 06B8                                  __ptext44 04EF  
                                __ptext36 02CA                                  __ptext28 05C8  
                                __ptext45 053B                                  __ptext37 06A7  
                                __ptext29 03EE                                  __ptext46 06AD  
                                __ptext38 004B                                  __ptext47 065C  
                                __ptext39 064C                                  __ptext48 062A  
                                __ptext49 06C1                                  _get_jump 0387  
                                _go_close 03EE                           _BAD_WSP_VOLTAGE 06C6  
                     __ccov392_start_blk2 046A                       __ccov368_start_blk4 0325  
                     __ccov288_start_blk8 02E5                             _time_rotation 0034  
                             ??_beep_long 0073                                  _fun_work 023F  
    __end_of_TMR0_DefaultInterruptHandler 06C4              _TMR0_DefaultInterruptHandler 06C1  
                                _sec_work 004B                 __end_of_ADC_GetConversion 053B  
                                _rele_off 05B1                         _MOVING_WAIT_DELAY 06D3  
                            ?_beep_double 0073                                  int$flags 007E  
                       ??_TMR2_StartTimer 0075        __end_of_INTERRUPT_InterruptManager 002D  
              _INTERRUPT_InterruptManager 0004                       __ccov297_start_blk0 056C  
                     __ccov385_start_blk0 0442                       __ccov393_start_blk3 0470  
                     __ccov369_start_blk6 032E                       __ccov289_start_blk9 02E6  
                          ms_tick@s_count 0037                      __ccov316_start_blk11 0152  
                    __ccov172_start_blk12 01CA                      __ccov340_start_blk20 0227  
                    __ccov252_start_blk13 007A                      __ccov180_start_blk23 01F1  
                    __ccov260_start_blk23 00BC                      __ccov228_start_blk15 0123  
                    __ccov324_start_blk24 0183                      get_jump@jump_counter 0049  
                             _minute_tick 0554                                _INTCONbits 000B  
                      __ccov10_start_blk1 067D             __end_of_HIGH_WATER_RESISTANSE 06CE  
                          __pstringtext10 06D5                            __pstringtext11 06D6  
                          __pstringtext12 06D7                            __pstringtext13 06D8  
                          __pstringtext14 06D9                            __pstringtext15 06DA  
                          __pstringtext16 06DB                            __pstringtext17 06DC  
                          __pstringtext18 06DD                       __ccov100_start_blk4 04FC  
                    __ccov379_start_blk26 0342                             _hardware_work 034C  
                     __end_of_start_alarm 0693                       __end_of_start_setup 034C  
                                intlevel1 0000                              ??_start_tone 0073  
                     __ccov298_start_blk1 0574                       __ccov386_start_blk1 0445  
                     __ccov394_start_blk4 0475                   __end_of_JUMP_MEAS_COUNT 06D9  
                 ?_PIN_MANAGER_Initialize 0073                               ??_rele_tick 0073  
               __end_of_MOVING_WAIT_DELAY 06D4                         _LONG_ZUMMER_DELAY 06DC  
                     EEPROM_ReadByte@addr 0077                        __ccov11_start_blk2 067E  
                        ??_ADC_Initialize 0075                              ?_clear_alarm 0073  
                          _go_close_short 0418             ?_TMR0_DefaultInterruptHandler 0073  
                         ??_zummer_switch 0073                         __ccov100_end_blk4 0501  
                      __ccov200_end_blk14 0280                       __ccov101_start_blk5 0501  
                            ?_ms_100_work 0073                              ?_ms_200_work 0073  
                       __ccov101_end_blk5 0502                         __ccov102_end_blk6 0506  
                       __ccov110_end_blk8 0554                             __pstringtext1 06C4  
                           __pstringtext2 06C6                             __pstringtext3 06C8  
                           __pstringtext4 06CA                             __pstringtext5 06D2  
                           __pstringtext6 06D3                             __pstringtext7 06D4  
                           __pstringtext8 06CC                             __pstringtext9 06CE  
                      __ccov201_end_blk15 0284                       __ccov299_start_blk2 0579  
                     __ccov387_start_blk2 0446                       __ccov395_start_blk5 047F  
                      __end_of_start_tone 06B3                                _OPTION_REG 0095  
                       _time_zummer_short 003D                      __ccov173_start_blk13 01D0  
                    __ccov341_start_blk21 0228                      __ccov317_start_blk13 0154  
                    __ccov253_start_blk14 0081                      __ccov229_start_blk16 0128  
                    __ccov325_start_blk25 018A                      __ccov181_start_blk27 01F5  
                    __ccov261_start_blk27 00BE       __end_of_FRIMWARE_VERSION_EEPROM_ADR 06D5  
             _FRIMWARE_VERSION_EEPROM_ADR 06D4                               _time_melody 0051  
                       _autorotation_work 00CC                         __ccov111_end_blk0 061C  
                       __ccov103_end_blk8 0509                           _TMR0_Initialize 0583  
              __end_of_AUTOROTATION_DELAY 06CA                        __ccov12_start_blk3 0681  
                 __end_of_BAD_WSP_VOLTAGE 06C8                        ?_autorotation_work 0073  
                             ??_stop_tone 0073                               ??_switch_wm 0076  
                       __ccov104_end_blk0 053F                         __ccov112_end_blk1 0622  
                          ?_hardware_work 0073                         __ccov120_end_blk6 0418  
                      __ccov202_end_blk17 0287                       __ccov102_start_blk6 0502  
                     __ccov110_start_blk8 0551                         __ccov121_end_blk0 041C  
                       __ccov105_end_blk1 0545                         __ccov113_end_blk3 0627  
                        _time_zummer_long 003B            __end_of_PIN_MANAGER_Initialize 05B1  
                     ??_autorotation_work 0075                 __end_of_LONG_ZUMMER_DELAY 06DD  
                        _EEPROM_WriteByte 046A                         __ccov122_end_blk1 0422  
                       __ccov106_end_blk2 0548                         __ccov130_end_blk3 04E6  
                       __ccov114_end_blk5 062A                         __ccov210_end_blk8 03E5  
                     __ccov388_start_blk3 0449                       __ccov396_start_blk6 0484  
                  __end_of_go_close_short 0442                     _TMR2_InterruptHandler 0055  
                       __ccov115_end_blk0 03F2                         __ccov203_end_blk0 03C6  
                       __ccov123_end_blk2 0427                         __ccov107_end_blk4 054C  
                       __ccov131_end_blk4 04EA                         __ccov211_end_blk9 03E8  
