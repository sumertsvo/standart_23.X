

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue May 17 18:29:45 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1823
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    22                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cinit,global,class=CODE,merge=1,delta=2
    24                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    25                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	clrtext,global,class=CODE,delta=2
    27                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    28                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    29                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    30                           	psect	text1,local,class=CODE,merge=1,delta=2
    31                           	psect	text2,local,class=CODE,merge=1,delta=2
    32                           	psect	text3,local,class=CODE,merge=1,delta=2
    33                           	psect	text4,local,class=CODE,merge=1,delta=2
    34                           	psect	text5,local,class=CODE,merge=1,delta=2
    35                           	psect	text6,local,class=CODE,merge=1,delta=2
    36                           	psect	text7,local,class=CODE,merge=1,delta=2
    37                           	psect	text8,local,class=CODE,merge=1,delta=2
    38                           	psect	text9,local,class=CODE,merge=1,delta=2
    39                           	psect	text10,local,class=CODE,merge=1,delta=2
    40                           	psect	text11,local,class=CODE,merge=1,delta=2
    41                           	psect	text12,local,class=CODE,merge=1,delta=2
    42                           	psect	text13,local,class=CODE,merge=1,delta=2
    43                           	psect	text14,local,class=CODE,merge=1,delta=2
    44                           	psect	text15,local,class=CODE,merge=1,delta=2
    45                           	psect	text16,local,class=CODE,merge=1,delta=2
    46                           	psect	text17,local,class=CODE,merge=1,delta=2
    47                           	psect	text18,local,class=CODE,merge=1,delta=2
    48                           	psect	text19,local,class=CODE,merge=1,delta=2
    49                           	psect	text20,local,class=CODE,merge=1,delta=2
    50                           	psect	text21,local,class=CODE,merge=1,delta=2
    51                           	psect	text22,local,class=CODE,merge=1,delta=2
    52                           	psect	text23,local,class=CODE,merge=1,delta=2
    53                           	psect	text24,local,class=CODE,merge=1,delta=2
    54                           	psect	text25,local,class=CODE,merge=1,delta=2
    55                           	psect	text26,local,class=CODE,merge=1,delta=2
    56                           	psect	text27,local,class=CODE,merge=1,delta=2
    57                           	psect	text28,local,class=CODE,merge=1,delta=2
    58                           	psect	text29,local,class=CODE,merge=1,delta=2
    59                           	psect	text30,local,class=CODE,merge=1,delta=2
    60                           	psect	intentry,global,class=CODE,delta=2
    61                           	psect	text32,local,class=CODE,merge=1,delta=2
    62                           	psect	text33,local,class=CODE,merge=1,delta=2
    63                           	psect	text34,local,class=CODE,merge=1,delta=2
    64                           	psect	text35,local,class=CODE,merge=1,delta=2
    65                           	psect	text36,local,class=CODE,merge=1,delta=2
    66                           	psect	text37,local,class=CODE,merge=1,delta=2
    67                           	psect	text38,local,class=CODE,merge=1,delta=2
    68                           	psect	text39,local,class=CODE,merge=1,delta=2
    69                           	psect	text40,local,class=CODE,merge=1,delta=2
    70                           	psect	text41,local,class=CODE,merge=1,delta=2
    71                           	psect	text42,local,class=CODE,merge=1,delta=2
    72                           	psect	text43,local,class=CODE,merge=1,delta=2
    73                           	psect	text44,local,class=CODE,merge=1,delta=2
    74                           	psect	text45,local,class=CODE,merge=1,delta=2
    75                           	psect	text46,local,class=CODE,merge=1,delta=2
    76                           	psect	text47,local,class=CODE,merge=1,delta=2
    77                           	psect	text48,local,class=CODE,merge=1,delta=2
    78                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    79                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    80                           	dabs	1,0x7E,2
    81  0000                     
    82                           ; Version 2.40
    83                           ; Generated 17/11/2021 GMT
    84                           ; 
    85                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution. Publication is not required when
    99                           ;        this file is used in an embedded application.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC16F1823 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000E                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  008C                     	;# 
   145  008E                     	;# 
   146  0091                     	;# 
   147  0092                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0097                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009B                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  010C                     	;# 
   160  010E                     	;# 
   161  0111                     	;# 
   162  0112                     	;# 
   163  0113                     	;# 
   164  0114                     	;# 
   165  0115                     	;# 
   166  0116                     	;# 
   167  0117                     	;# 
   168  0118                     	;# 
   169  0119                     	;# 
   170  011A                     	;# 
   171  011B                     	;# 
   172  011D                     	;# 
   173  011D                     	;# 
   174  018C                     	;# 
   175  018E                     	;# 
   176  0191                     	;# 
   177  0191                     	;# 
   178  0192                     	;# 
   179  0193                     	;# 
   180  0193                     	;# 
   181  0193                     	;# 
   182  0194                     	;# 
   183  0195                     	;# 
   184  0196                     	;# 
   185  0199                     	;# 
   186  019A                     	;# 
   187  019B                     	;# 
   188  019B                     	;# 
   189  019B                     	;# 
   190  019B                     	;# 
   191  019C                     	;# 
   192  019C                     	;# 
   193  019D                     	;# 
   194  019E                     	;# 
   195  019F                     	;# 
   196  020C                     	;# 
   197  020E                     	;# 
   198  0211                     	;# 
   199  0211                     	;# 
   200  0212                     	;# 
   201  0212                     	;# 
   202  0213                     	;# 
   203  0213                     	;# 
   204  0214                     	;# 
   205  0214                     	;# 
   206  0215                     	;# 
   207  0215                     	;# 
   208  0215                     	;# 
   209  0216                     	;# 
   210  0216                     	;# 
   211  0217                     	;# 
   212  0217                     	;# 
   213  0291                     	;# 
   214  0291                     	;# 
   215  0292                     	;# 
   216  0293                     	;# 
   217  0294                     	;# 
   218  0295                     	;# 
   219  0295                     	;# 
   220  0296                     	;# 
   221  0391                     	;# 
   222  0392                     	;# 
   223  0393                     	;# 
   224  039A                     	;# 
   225  039C                     	;# 
   226  039D                     	;# 
   227  039E                     	;# 
   228  039F                     	;# 
   229  0FE4                     	;# 
   230  0FE5                     	;# 
   231  0FE6                     	;# 
   232  0FE7                     	;# 
   233  0FE8                     	;# 
   234  0FE9                     	;# 
   235  0FEA                     	;# 
   236  0FEB                     	;# 
   237  0FED                     	;# 
   238  0FEE                     	;# 
   239  0FEF                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0008                     	;# 
   249  0009                     	;# 
   250  000A                     	;# 
   251  000B                     	;# 
   252  000C                     	;# 
   253  000E                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  008C                     	;# 
   268  008E                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  010C                     	;# 
   283  010E                     	;# 
   284  0111                     	;# 
   285  0112                     	;# 
   286  0113                     	;# 
   287  0114                     	;# 
   288  0115                     	;# 
   289  0116                     	;# 
   290  0117                     	;# 
   291  0118                     	;# 
   292  0119                     	;# 
   293  011A                     	;# 
   294  011B                     	;# 
   295  011D                     	;# 
   296  011D                     	;# 
   297  018C                     	;# 
   298  018E                     	;# 
   299  0191                     	;# 
   300  0191                     	;# 
   301  0192                     	;# 
   302  0193                     	;# 
   303  0193                     	;# 
   304  0193                     	;# 
   305  0194                     	;# 
   306  0195                     	;# 
   307  0196                     	;# 
   308  0199                     	;# 
   309  019A                     	;# 
   310  019B                     	;# 
   311  019B                     	;# 
   312  019B                     	;# 
   313  019B                     	;# 
   314  019C                     	;# 
   315  019C                     	;# 
   316  019D                     	;# 
   317  019E                     	;# 
   318  019F                     	;# 
   319  020C                     	;# 
   320  020E                     	;# 
   321  0211                     	;# 
   322  0211                     	;# 
   323  0212                     	;# 
   324  0212                     	;# 
   325  0213                     	;# 
   326  0213                     	;# 
   327  0214                     	;# 
   328  0214                     	;# 
   329  0215                     	;# 
   330  0215                     	;# 
   331  0215                     	;# 
   332  0216                     	;# 
   333  0216                     	;# 
   334  0217                     	;# 
   335  0217                     	;# 
   336  0291                     	;# 
   337  0291                     	;# 
   338  0292                     	;# 
   339  0293                     	;# 
   340  0294                     	;# 
   341  0295                     	;# 
   342  0295                     	;# 
   343  0296                     	;# 
   344  0391                     	;# 
   345  0392                     	;# 
   346  0393                     	;# 
   347  039A                     	;# 
   348  039C                     	;# 
   349  039D                     	;# 
   350  039E                     	;# 
   351  039F                     	;# 
   352  0FE4                     	;# 
   353  0FE5                     	;# 
   354  0FE6                     	;# 
   355  0FE7                     	;# 
   356  0FE8                     	;# 
   357  0FE9                     	;# 
   358  0FEA                     	;# 
   359  0FEB                     	;# 
   360  0FED                     	;# 
   361  0FEE                     	;# 
   362  0FEF                     	;# 
   363  0000                     	;# 
   364  0001                     	;# 
   365  0002                     	;# 
   366  0003                     	;# 
   367  0004                     	;# 
   368  0005                     	;# 
   369  0006                     	;# 
   370  0007                     	;# 
   371  0008                     	;# 
   372  0009                     	;# 
   373  000A                     	;# 
   374  000B                     	;# 
   375  000C                     	;# 
   376  000E                     	;# 
   377  0011                     	;# 
   378  0012                     	;# 
   379  0015                     	;# 
   380  0016                     	;# 
   381  0016                     	;# 
   382  0017                     	;# 
   383  0018                     	;# 
   384  0019                     	;# 
   385  001A                     	;# 
   386  001B                     	;# 
   387  001C                     	;# 
   388  001E                     	;# 
   389  001F                     	;# 
   390  008C                     	;# 
   391  008E                     	;# 
   392  0091                     	;# 
   393  0092                     	;# 
   394  0095                     	;# 
   395  0096                     	;# 
   396  0097                     	;# 
   397  0098                     	;# 
   398  0099                     	;# 
   399  009A                     	;# 
   400  009B                     	;# 
   401  009B                     	;# 
   402  009C                     	;# 
   403  009D                     	;# 
   404  009E                     	;# 
   405  010C                     	;# 
   406  010E                     	;# 
   407  0111                     	;# 
   408  0112                     	;# 
   409  0113                     	;# 
   410  0114                     	;# 
   411  0115                     	;# 
   412  0116                     	;# 
   413  0117                     	;# 
   414  0118                     	;# 
   415  0119                     	;# 
   416  011A                     	;# 
   417  011B                     	;# 
   418  011D                     	;# 
   419  011D                     	;# 
   420  018C                     	;# 
   421  018E                     	;# 
   422  0191                     	;# 
   423  0191                     	;# 
   424  0192                     	;# 
   425  0193                     	;# 
   426  0193                     	;# 
   427  0193                     	;# 
   428  0194                     	;# 
   429  0195                     	;# 
   430  0196                     	;# 
   431  0199                     	;# 
   432  019A                     	;# 
   433  019B                     	;# 
   434  019B                     	;# 
   435  019B                     	;# 
   436  019B                     	;# 
   437  019C                     	;# 
   438  019C                     	;# 
   439  019D                     	;# 
   440  019E                     	;# 
   441  019F                     	;# 
   442  020C                     	;# 
   443  020E                     	;# 
   444  0211                     	;# 
   445  0211                     	;# 
   446  0212                     	;# 
   447  0212                     	;# 
   448  0213                     	;# 
   449  0213                     	;# 
   450  0214                     	;# 
   451  0214                     	;# 
   452  0215                     	;# 
   453  0215                     	;# 
   454  0215                     	;# 
   455  0216                     	;# 
   456  0216                     	;# 
   457  0217                     	;# 
   458  0217                     	;# 
   459  0291                     	;# 
   460  0291                     	;# 
   461  0292                     	;# 
   462  0293                     	;# 
   463  0294                     	;# 
   464  0295                     	;# 
   465  0295                     	;# 
   466  0296                     	;# 
   467  0391                     	;# 
   468  0392                     	;# 
   469  0393                     	;# 
   470  039A                     	;# 
   471  039C                     	;# 
   472  039D                     	;# 
   473  039E                     	;# 
   474  039F                     	;# 
   475  0FE4                     	;# 
   476  0FE5                     	;# 
   477  0FE6                     	;# 
   478  0FE7                     	;# 
   479  0FE8                     	;# 
   480  0FE9                     	;# 
   481  0FEA                     	;# 
   482  0FEB                     	;# 
   483  0FED                     	;# 
   484  0FEE                     	;# 
   485  0FEF                     	;# 
   486  0000                     	;# 
   487  0001                     	;# 
   488  0002                     	;# 
   489  0003                     	;# 
   490  0004                     	;# 
   491  0005                     	;# 
   492  0006                     	;# 
   493  0007                     	;# 
   494  0008                     	;# 
   495  0009                     	;# 
   496  000A                     	;# 
   497  000B                     	;# 
   498  000C                     	;# 
   499  000E                     	;# 
   500  0011                     	;# 
   501  0012                     	;# 
   502  0015                     	;# 
   503  0016                     	;# 
   504  0016                     	;# 
   505  0017                     	;# 
   506  0018                     	;# 
   507  0019                     	;# 
   508  001A                     	;# 
   509  001B                     	;# 
   510  001C                     	;# 
   511  001E                     	;# 
   512  001F                     	;# 
   513  008C                     	;# 
   514  008E                     	;# 
   515  0091                     	;# 
   516  0092                     	;# 
   517  0095                     	;# 
   518  0096                     	;# 
   519  0097                     	;# 
   520  0098                     	;# 
   521  0099                     	;# 
   522  009A                     	;# 
   523  009B                     	;# 
   524  009B                     	;# 
   525  009C                     	;# 
   526  009D                     	;# 
   527  009E                     	;# 
   528  010C                     	;# 
   529  010E                     	;# 
   530  0111                     	;# 
   531  0112                     	;# 
   532  0113                     	;# 
   533  0114                     	;# 
   534  0115                     	;# 
   535  0116                     	;# 
   536  0117                     	;# 
   537  0118                     	;# 
   538  0119                     	;# 
   539  011A                     	;# 
   540  011B                     	;# 
   541  011D                     	;# 
   542  011D                     	;# 
   543  018C                     	;# 
   544  018E                     	;# 
   545  0191                     	;# 
   546  0191                     	;# 
   547  0192                     	;# 
   548  0193                     	;# 
   549  0193                     	;# 
   550  0193                     	;# 
   551  0194                     	;# 
   552  0195                     	;# 
   553  0196                     	;# 
   554  0199                     	;# 
   555  019A                     	;# 
   556  019B                     	;# 
   557  019B                     	;# 
   558  019B                     	;# 
   559  019B                     	;# 
   560  019C                     	;# 
   561  019C                     	;# 
   562  019D                     	;# 
   563  019E                     	;# 
   564  019F                     	;# 
   565  020C                     	;# 
   566  020E                     	;# 
   567  0211                     	;# 
   568  0211                     	;# 
   569  0212                     	;# 
   570  0212                     	;# 
   571  0213                     	;# 
   572  0213                     	;# 
   573  0214                     	;# 
   574  0214                     	;# 
   575  0215                     	;# 
   576  0215                     	;# 
   577  0215                     	;# 
   578  0216                     	;# 
   579  0216                     	;# 
   580  0217                     	;# 
   581  0217                     	;# 
   582  0291                     	;# 
   583  0291                     	;# 
   584  0292                     	;# 
   585  0293                     	;# 
   586  0294                     	;# 
   587  0295                     	;# 
   588  0295                     	;# 
   589  0296                     	;# 
   590  0391                     	;# 
   591  0392                     	;# 
   592  0393                     	;# 
   593  039A                     	;# 
   594  039C                     	;# 
   595  039D                     	;# 
   596  039E                     	;# 
   597  039F                     	;# 
   598  0FE4                     	;# 
   599  0FE5                     	;# 
   600  0FE6                     	;# 
   601  0FE7                     	;# 
   602  0FE8                     	;# 
   603  0FE9                     	;# 
   604  0FEA                     	;# 
   605  0FEB                     	;# 
   606  0FED                     	;# 
   607  0FEE                     	;# 
   608  0FEF                     	;# 
   609  0000                     	;# 
   610  0001                     	;# 
   611  0002                     	;# 
   612  0003                     	;# 
   613  0004                     	;# 
   614  0005                     	;# 
   615  0006                     	;# 
   616  0007                     	;# 
   617  0008                     	;# 
   618  0009                     	;# 
   619  000A                     	;# 
   620  000B                     	;# 
   621  000C                     	;# 
   622  000E                     	;# 
   623  0011                     	;# 
   624  0012                     	;# 
   625  0015                     	;# 
   626  0016                     	;# 
   627  0016                     	;# 
   628  0017                     	;# 
   629  0018                     	;# 
   630  0019                     	;# 
   631  001A                     	;# 
   632  001B                     	;# 
   633  001C                     	;# 
   634  001E                     	;# 
   635  001F                     	;# 
   636  008C                     	;# 
   637  008E                     	;# 
   638  0091                     	;# 
   639  0092                     	;# 
   640  0095                     	;# 
   641  0096                     	;# 
   642  0097                     	;# 
   643  0098                     	;# 
   644  0099                     	;# 
   645  009A                     	;# 
   646  009B                     	;# 
   647  009B                     	;# 
   648  009C                     	;# 
   649  009D                     	;# 
   650  009E                     	;# 
   651  010C                     	;# 
   652  010E                     	;# 
   653  0111                     	;# 
   654  0112                     	;# 
   655  0113                     	;# 
   656  0114                     	;# 
   657  0115                     	;# 
   658  0116                     	;# 
   659  0117                     	;# 
   660  0118                     	;# 
   661  0119                     	;# 
   662  011A                     	;# 
   663  011B                     	;# 
   664  011D                     	;# 
   665  011D                     	;# 
   666  018C                     	;# 
   667  018E                     	;# 
   668  0191                     	;# 
   669  0191                     	;# 
   670  0192                     	;# 
   671  0193                     	;# 
   672  0193                     	;# 
   673  0193                     	;# 
   674  0194                     	;# 
   675  0195                     	;# 
   676  0196                     	;# 
   677  0199                     	;# 
   678  019A                     	;# 
   679  019B                     	;# 
   680  019B                     	;# 
   681  019B                     	;# 
   682  019B                     	;# 
   683  019C                     	;# 
   684  019C                     	;# 
   685  019D                     	;# 
   686  019E                     	;# 
   687  019F                     	;# 
   688  020C                     	;# 
   689  020E                     	;# 
   690  0211                     	;# 
   691  0211                     	;# 
   692  0212                     	;# 
   693  0212                     	;# 
   694  0213                     	;# 
   695  0213                     	;# 
   696  0214                     	;# 
   697  0214                     	;# 
   698  0215                     	;# 
   699  0215                     	;# 
   700  0215                     	;# 
   701  0216                     	;# 
   702  0216                     	;# 
   703  0217                     	;# 
   704  0217                     	;# 
   705  0291                     	;# 
   706  0291                     	;# 
   707  0292                     	;# 
   708  0293                     	;# 
   709  0294                     	;# 
   710  0295                     	;# 
   711  0295                     	;# 
   712  0296                     	;# 
   713  0391                     	;# 
   714  0392                     	;# 
   715  0393                     	;# 
   716  039A                     	;# 
   717  039C                     	;# 
   718  039D                     	;# 
   719  039E                     	;# 
   720  039F                     	;# 
   721  0FE4                     	;# 
   722  0FE5                     	;# 
   723  0FE6                     	;# 
   724  0FE7                     	;# 
   725  0FE8                     	;# 
   726  0FE9                     	;# 
   727  0FEA                     	;# 
   728  0FEB                     	;# 
   729  0FED                     	;# 
   730  0FEE                     	;# 
   731  0FEF                     	;# 
   732  0000                     	;# 
   733  0001                     	;# 
   734  0002                     	;# 
   735  0003                     	;# 
   736  0004                     	;# 
   737  0005                     	;# 
   738  0006                     	;# 
   739  0007                     	;# 
   740  0008                     	;# 
   741  0009                     	;# 
   742  000A                     	;# 
   743  000B                     	;# 
   744  000C                     	;# 
   745  000E                     	;# 
   746  0011                     	;# 
   747  0012                     	;# 
   748  0015                     	;# 
   749  0016                     	;# 
   750  0016                     	;# 
   751  0017                     	;# 
   752  0018                     	;# 
   753  0019                     	;# 
   754  001A                     	;# 
   755  001B                     	;# 
   756  001C                     	;# 
   757  001E                     	;# 
   758  001F                     	;# 
   759  008C                     	;# 
   760  008E                     	;# 
   761  0091                     	;# 
   762  0092                     	;# 
   763  0095                     	;# 
   764  0096                     	;# 
   765  0097                     	;# 
   766  0098                     	;# 
   767  0099                     	;# 
   768  009A                     	;# 
   769  009B                     	;# 
   770  009B                     	;# 
   771  009C                     	;# 
   772  009D                     	;# 
   773  009E                     	;# 
   774  010C                     	;# 
   775  010E                     	;# 
   776  0111                     	;# 
   777  0112                     	;# 
   778  0113                     	;# 
   779  0114                     	;# 
   780  0115                     	;# 
   781  0116                     	;# 
   782  0117                     	;# 
   783  0118                     	;# 
   784  0119                     	;# 
   785  011A                     	;# 
   786  011B                     	;# 
   787  011D                     	;# 
   788  011D                     	;# 
   789  018C                     	;# 
   790  018E                     	;# 
   791  0191                     	;# 
   792  0191                     	;# 
   793  0192                     	;# 
   794  0193                     	;# 
   795  0193                     	;# 
   796  0193                     	;# 
   797  0194                     	;# 
   798  0195                     	;# 
   799  0196                     	;# 
   800  0199                     	;# 
   801  019A                     	;# 
   802  019B                     	;# 
   803  019B                     	;# 
   804  019B                     	;# 
   805  019B                     	;# 
   806  019C                     	;# 
   807  019C                     	;# 
   808  019D                     	;# 
   809  019E                     	;# 
   810  019F                     	;# 
   811  020C                     	;# 
   812  020E                     	;# 
   813  0211                     	;# 
   814  0211                     	;# 
   815  0212                     	;# 
   816  0212                     	;# 
   817  0213                     	;# 
   818  0213                     	;# 
   819  0214                     	;# 
   820  0214                     	;# 
   821  0215                     	;# 
   822  0215                     	;# 
   823  0215                     	;# 
   824  0216                     	;# 
   825  0216                     	;# 
   826  0217                     	;# 
   827  0217                     	;# 
   828  0291                     	;# 
   829  0291                     	;# 
   830  0292                     	;# 
   831  0293                     	;# 
   832  0294                     	;# 
   833  0295                     	;# 
   834  0295                     	;# 
   835  0296                     	;# 
   836  0391                     	;# 
   837  0392                     	;# 
   838  0393                     	;# 
   839  039A                     	;# 
   840  039C                     	;# 
   841  039D                     	;# 
   842  039E                     	;# 
   843  039F                     	;# 
   844  0FE4                     	;# 
   845  0FE5                     	;# 
   846  0FE6                     	;# 
   847  0FE7                     	;# 
   848  0FE8                     	;# 
   849  0FE9                     	;# 
   850  0FEA                     	;# 
   851  0FEB                     	;# 
   852  0FED                     	;# 
   853  0FEE                     	;# 
   854  0FEF                     	;# 
   855  0000                     	;# 
   856  0001                     	;# 
   857  0002                     	;# 
   858  0003                     	;# 
   859  0004                     	;# 
   860  0005                     	;# 
   861  0006                     	;# 
   862  0007                     	;# 
   863  0008                     	;# 
   864  0009                     	;# 
   865  000A                     	;# 
   866  000B                     	;# 
   867  000C                     	;# 
   868  000E                     	;# 
   869  0011                     	;# 
   870  0012                     	;# 
   871  0015                     	;# 
   872  0016                     	;# 
   873  0016                     	;# 
   874  0017                     	;# 
   875  0018                     	;# 
   876  0019                     	;# 
   877  001A                     	;# 
   878  001B                     	;# 
   879  001C                     	;# 
   880  001E                     	;# 
   881  001F                     	;# 
   882  008C                     	;# 
   883  008E                     	;# 
   884  0091                     	;# 
   885  0092                     	;# 
   886  0095                     	;# 
   887  0096                     	;# 
   888  0097                     	;# 
   889  0098                     	;# 
   890  0099                     	;# 
   891  009A                     	;# 
   892  009B                     	;# 
   893  009B                     	;# 
   894  009C                     	;# 
   895  009D                     	;# 
   896  009E                     	;# 
   897  010C                     	;# 
   898  010E                     	;# 
   899  0111                     	;# 
   900  0112                     	;# 
   901  0113                     	;# 
   902  0114                     	;# 
   903  0115                     	;# 
   904  0116                     	;# 
   905  0117                     	;# 
   906  0118                     	;# 
   907  0119                     	;# 
   908  011A                     	;# 
   909  011B                     	;# 
   910  011D                     	;# 
   911  011D                     	;# 
   912  018C                     	;# 
   913  018E                     	;# 
   914  0191                     	;# 
   915  0191                     	;# 
   916  0192                     	;# 
   917  0193                     	;# 
   918  0193                     	;# 
   919  0193                     	;# 
   920  0194                     	;# 
   921  0195                     	;# 
   922  0196                     	;# 
   923  0199                     	;# 
   924  019A                     	;# 
   925  019B                     	;# 
   926  019B                     	;# 
   927  019B                     	;# 
   928  019B                     	;# 
   929  019C                     	;# 
   930  019C                     	;# 
   931  019D                     	;# 
   932  019E                     	;# 
   933  019F                     	;# 
   934  020C                     	;# 
   935  020E                     	;# 
   936  0211                     	;# 
   937  0211                     	;# 
   938  0212                     	;# 
   939  0212                     	;# 
   940  0213                     	;# 
   941  0213                     	;# 
   942  0214                     	;# 
   943  0214                     	;# 
   944  0215                     	;# 
   945  0215                     	;# 
   946  0215                     	;# 
   947  0216                     	;# 
   948  0216                     	;# 
   949  0217                     	;# 
   950  0217                     	;# 
   951  0291                     	;# 
   952  0291                     	;# 
   953  0292                     	;# 
   954  0293                     	;# 
   955  0294                     	;# 
   956  0295                     	;# 
   957  0295                     	;# 
   958  0296                     	;# 
   959  0391                     	;# 
   960  0392                     	;# 
   961  0393                     	;# 
   962  039A                     	;# 
   963  039C                     	;# 
   964  039D                     	;# 
   965  039E                     	;# 
   966  039F                     	;# 
   967  0FE4                     	;# 
   968  0FE5                     	;# 
   969  0FE6                     	;# 
   970  0FE7                     	;# 
   971  0FE8                     	;# 
   972  0FE9                     	;# 
   973  0FEA                     	;# 
   974  0FEB                     	;# 
   975  0FED                     	;# 
   976  0FEE                     	;# 
   977  0FEF                     	;# 
   978  0000                     	;# 
   979  0001                     	;# 
   980  0002                     	;# 
   981  0003                     	;# 
   982  0004                     	;# 
   983  0005                     	;# 
   984  0006                     	;# 
   985  0007                     	;# 
   986  0008                     	;# 
   987  0009                     	;# 
   988  000A                     	;# 
   989  000B                     	;# 
   990  000C                     	;# 
   991  000E                     	;# 
   992  0011                     	;# 
   993  0012                     	;# 
   994  0015                     	;# 
   995  0016                     	;# 
   996  0016                     	;# 
   997  0017                     	;# 
   998  0018                     	;# 
   999  0019                     	;# 
  1000  001A                     	;# 
  1001  001B                     	;# 
  1002  001C                     	;# 
  1003  001E                     	;# 
  1004  001F                     	;# 
  1005  008C                     	;# 
  1006  008E                     	;# 
  1007  0091                     	;# 
  1008  0092                     	;# 
  1009  0095                     	;# 
  1010  0096                     	;# 
  1011  0097                     	;# 
  1012  0098                     	;# 
  1013  0099                     	;# 
  1014  009A                     	;# 
  1015  009B                     	;# 
  1016  009B                     	;# 
  1017  009C                     	;# 
  1018  009D                     	;# 
  1019  009E                     	;# 
  1020  010C                     	;# 
  1021  010E                     	;# 
  1022  0111                     	;# 
  1023  0112                     	;# 
  1024  0113                     	;# 
  1025  0114                     	;# 
  1026  0115                     	;# 
  1027  0116                     	;# 
  1028  0117                     	;# 
  1029  0118                     	;# 
  1030  0119                     	;# 
  1031  011A                     	;# 
  1032  011B                     	;# 
  1033  011D                     	;# 
  1034  011D                     	;# 
  1035  018C                     	;# 
  1036  018E                     	;# 
  1037  0191                     	;# 
  1038  0191                     	;# 
  1039  0192                     	;# 
  1040  0193                     	;# 
  1041  0193                     	;# 
  1042  0193                     	;# 
  1043  0194                     	;# 
  1044  0195                     	;# 
  1045  0196                     	;# 
  1046  0199                     	;# 
  1047  019A                     	;# 
  1048  019B                     	;# 
  1049  019B                     	;# 
  1050  019B                     	;# 
  1051  019B                     	;# 
  1052  019C                     	;# 
  1053  019C                     	;# 
  1054  019D                     	;# 
  1055  019E                     	;# 
  1056  019F                     	;# 
  1057  020C                     	;# 
  1058  020E                     	;# 
  1059  0211                     	;# 
  1060  0211                     	;# 
  1061  0212                     	;# 
  1062  0212                     	;# 
  1063  0213                     	;# 
  1064  0213                     	;# 
  1065  0214                     	;# 
  1066  0214                     	;# 
  1067  0215                     	;# 
  1068  0215                     	;# 
  1069  0215                     	;# 
  1070  0216                     	;# 
  1071  0216                     	;# 
  1072  0217                     	;# 
  1073  0217                     	;# 
  1074  0291                     	;# 
  1075  0291                     	;# 
  1076  0292                     	;# 
  1077  0293                     	;# 
  1078  0294                     	;# 
  1079  0295                     	;# 
  1080  0295                     	;# 
  1081  0296                     	;# 
  1082  0391                     	;# 
  1083  0392                     	;# 
  1084  0393                     	;# 
  1085  039A                     	;# 
  1086  039C                     	;# 
  1087  039D                     	;# 
  1088  039E                     	;# 
  1089  039F                     	;# 
  1090  0FE4                     	;# 
  1091  0FE5                     	;# 
  1092  0FE6                     	;# 
  1093  0FE7                     	;# 
  1094  0FE8                     	;# 
  1095  0FE9                     	;# 
  1096  0FEA                     	;# 
  1097  0FEB                     	;# 
  1098  0FED                     	;# 
  1099  0FEE                     	;# 
  1100  0FEF                     	;# 
  1101  0000                     	;# 
  1102  0001                     	;# 
  1103  0002                     	;# 
  1104  0003                     	;# 
  1105  0004                     	;# 
  1106  0005                     	;# 
  1107  0006                     	;# 
  1108  0007                     	;# 
  1109  0008                     	;# 
  1110  0009                     	;# 
  1111  000A                     	;# 
  1112  000B                     	;# 
  1113  000C                     	;# 
  1114  000E                     	;# 
  1115  0011                     	;# 
  1116  0012                     	;# 
  1117  0015                     	;# 
  1118  0016                     	;# 
  1119  0016                     	;# 
  1120  0017                     	;# 
  1121  0018                     	;# 
  1122  0019                     	;# 
  1123  001A                     	;# 
  1124  001B                     	;# 
  1125  001C                     	;# 
  1126  001E                     	;# 
  1127  001F                     	;# 
  1128  008C                     	;# 
  1129  008E                     	;# 
  1130  0091                     	;# 
  1131  0092                     	;# 
  1132  0095                     	;# 
  1133  0096                     	;# 
  1134  0097                     	;# 
  1135  0098                     	;# 
  1136  0099                     	;# 
  1137  009A                     	;# 
  1138  009B                     	;# 
  1139  009B                     	;# 
  1140  009C                     	;# 
  1141  009D                     	;# 
  1142  009E                     	;# 
  1143  010C                     	;# 
  1144  010E                     	;# 
  1145  0111                     	;# 
  1146  0112                     	;# 
  1147  0113                     	;# 
  1148  0114                     	;# 
  1149  0115                     	;# 
  1150  0116                     	;# 
  1151  0117                     	;# 
  1152  0118                     	;# 
  1153  0119                     	;# 
  1154  011A                     	;# 
  1155  011B                     	;# 
  1156  011D                     	;# 
  1157  011D                     	;# 
  1158  018C                     	;# 
  1159  018E                     	;# 
  1160  0191                     	;# 
  1161  0191                     	;# 
  1162  0192                     	;# 
  1163  0193                     	;# 
  1164  0193                     	;# 
  1165  0193                     	;# 
  1166  0194                     	;# 
  1167  0195                     	;# 
  1168  0196                     	;# 
  1169  0199                     	;# 
  1170  019A                     	;# 
  1171  019B                     	;# 
  1172  019B                     	;# 
  1173  019B                     	;# 
  1174  019B                     	;# 
  1175  019C                     	;# 
  1176  019C                     	;# 
  1177  019D                     	;# 
  1178  019E                     	;# 
  1179  019F                     	;# 
  1180  020C                     	;# 
  1181  020E                     	;# 
  1182  0211                     	;# 
  1183  0211                     	;# 
  1184  0212                     	;# 
  1185  0212                     	;# 
  1186  0213                     	;# 
  1187  0213                     	;# 
  1188  0214                     	;# 
  1189  0214                     	;# 
  1190  0215                     	;# 
  1191  0215                     	;# 
  1192  0215                     	;# 
  1193  0216                     	;# 
  1194  0216                     	;# 
  1195  0217                     	;# 
  1196  0217                     	;# 
  1197  0291                     	;# 
  1198  0291                     	;# 
  1199  0292                     	;# 
  1200  0293                     	;# 
  1201  0294                     	;# 
  1202  0295                     	;# 
  1203  0295                     	;# 
  1204  0296                     	;# 
  1205  0391                     	;# 
  1206  0392                     	;# 
  1207  0393                     	;# 
  1208  039A                     	;# 
  1209  039C                     	;# 
  1210  039D                     	;# 
  1211  039E                     	;# 
  1212  039F                     	;# 
  1213  0FE4                     	;# 
  1214  0FE5                     	;# 
  1215  0FE6                     	;# 
  1216  0FE7                     	;# 
  1217  0FE8                     	;# 
  1218  0FE9                     	;# 
  1219  0FEA                     	;# 
  1220  0FEB                     	;# 
  1221  0FED                     	;# 
  1222  0FEE                     	;# 
  1223  0FEF                     	;# 
  1224                           
  1225                           	psect	stringtext1
  1226  0538                     __pstringtext1:
  1227  0538                     _GOOD_WSP_VOLTAGE:
  1228  0538  348E               	retlw	142
  1229  0539  3400               	retlw	0
  1230  053A                     __end_of_GOOD_WSP_VOLTAGE:
  1231                           
  1232                           	psect	stringtext2
  1233  053A                     __pstringtext2:
  1234  053A                     _BAD_WSP_VOLTAGE:
  1235  053A  3480               	retlw	128
  1236  053B  3400               	retlw	0
  1237  053C                     __end_of_BAD_WSP_VOLTAGE:
  1238                           
  1239                           	psect	stringtext3
  1240  053C                     __pstringtext3:
  1241  053C                     _AUTOROTATION_DELAY:
  1242  053C  3400               	retlw	0
  1243  053D  3475               	retlw	117
  1244  053E                     __end_of_AUTOROTATION_DELAY:
  1245                           
  1246                           	psect	stringtext4
  1247  053E                     __pstringtext4:
  1248  053E                     _UP_RESISTANSE:
  1249  053E  3420               	retlw	32
  1250  053F  344E               	retlw	78
  1251  0540                     __end_of_UP_RESISTANSE:
  1252                           
  1253                           	psect	stringtext5
  1254  0544                     __pstringtext5:
  1255  0544                     _MELODY_REPEAT_DELAY:
  1256  0544  3403               	retlw	3
  1257  0545                     __end_of_MELODY_REPEAT_DELAY:
  1258                           
  1259                           	psect	stringtext6
  1260  0545                     __pstringtext6:
  1261  0545                     _RELE_POWER_AUTOROTATION_DELAY:
  1262  0545  3405               	retlw	5
  1263  0546                     __end_of_RELE_POWER_AUTOROTATION_DELAY:
  1264                           
  1265                           	psect	stringtext7
  1266  0546                     __pstringtext7:
  1267  0546                     _MOVING_WAIT_DELAY:
  1268  0546  3402               	retlw	2
  1269  0547                     __end_of_MOVING_WAIT_DELAY:
  1270                           
  1271                           	psect	stringtext8
  1272  0547                     __pstringtext8:
  1273  0547                     _FRIMWARE_VERSION_EEPROM_ADR:
  1274  0547  3401               	retlw	1
  1275  0548                     __end_of_FRIMWARE_VERSION_EEPROM_ADR:
  1276                           
  1277                           	psect	stringtext9
  1278  0540                     __pstringtext9:
  1279  0540                     _HIGH_WATER_RESISTANSE:
  1280  0540  34A8               	retlw	168
  1281  0541  3461               	retlw	97
  1282  0542                     __end_of_HIGH_WATER_RESISTANSE:
  1283                           
  1284                           	psect	stringtext10
  1285  0542                     __pstringtext10:
  1286  0542                     _LOW_WATER_RESISTANSE:
  1287  0542  3420               	retlw	32
  1288  0543  344E               	retlw	78
  1289  0544                     __end_of_LOW_WATER_RESISTANSE:
  1290                           
  1291                           	psect	stringtext11
  1292  0548                     __pstringtext11:
  1293  0548                     _RELE_GAP:
  1294  0548  3402               	retlw	2
  1295  0549                     __end_of_RELE_GAP:
  1296                           
  1297                           	psect	stringtext12
  1298  0549                     __pstringtext12:
  1299  0549                     _RELE_POWER_WORK_DELAY:
  1300  0549  340F               	retlw	15
  1301  054A                     __end_of_RELE_POWER_WORK_DELAY:
  1302                           
  1303                           	psect	stringtext13
  1304  054A                     __pstringtext13:
  1305  054A                     _JUMP_MEAS_COUNT:
  1306  054A  340A               	retlw	10
  1307  054B                     __end_of_JUMP_MEAS_COUNT:
  1308                           
  1309                           	psect	stringtext14
  1310  054B                     __pstringtext14:
  1311  054B                     _FUN_MEAS_COUNT:
  1312  054B  340A               	retlw	10
  1313  054C                     __end_of_FUN_MEAS_COUNT:
  1314                           
  1315                           	psect	stringtext15
  1316  054C                     __pstringtext15:
  1317  054C                     _WSP_MEAS_COUNT:
  1318  054C  3404               	retlw	4
  1319  054D                     __end_of_WSP_MEAS_COUNT:
  1320                           
  1321                           	psect	stringtext16
  1322  054D                     __pstringtext16:
  1323  054D                     _AUTOROTATION_DAYS:
  1324  054D  340E               	retlw	14
  1325  054E                     __end_of_AUTOROTATION_DAYS:
  1326                           
  1327                           	psect	stringtext17
  1328  054E                     __pstringtext17:
  1329  054E                     _LONG_ZUMMER_DELAY:
  1330  054E  3482               	retlw	130
  1331  054F                     __end_of_LONG_ZUMMER_DELAY:
  1332                           
  1333                           	psect	stringtext18
  1334  054F                     __pstringtext18:
  1335  054F                     _SHORT_ZUMMER_DELAY:
  1336  054F  341E               	retlw	30
  1337  0550                     __end_of_SHORT_ZUMMER_DELAY:
  1338                           
  1339                           	psect	nvBANK0
  1340  003F                     __pnvBANK0:
  1341  003F                     _TMR0_InterruptHandler:
  1342  003F                     	ds	2
  1343  0041                     _TMR2_InterruptHandler:
  1344  0041                     	ds	2
  1345  0043                     _timer0ReloadVal:
  1346  0043                     	ds	1
  1347  000C                     _PORTAbits	set	12
  1348  000E                     _PORTCbits	set	14
  1349  0015                     _TMR0	set	21
  1350  001C                     _T2CONbits	set	28
  1351  001C                     _T2CON	set	28
  1352  001A                     _TMR2	set	26
  1353  001B                     _PR2	set	27
  1354  0011                     _PIR1bits	set	17
  1355  000B                     _INTCONbits	set	11
  1356  005F                     _GIE	set	95
  1357  008C                     _TRISAbits	set	140
  1358  008E                     _TRISCbits	set	142
  1359  0095                     _OPTION_REG	set	149
  1360  0091                     _PIE1bits	set	145
  1361  0095                     _OPTION_REGbits	set	149
  1362  008E                     _TRISC	set	142
  1363  008C                     _TRISA	set	140
  1364  009D                     _ADCON0bits	set	157
  1365  009D                     _ADCON0	set	157
  1366  009C                     _ADRESH	set	156
  1367  009B                     _ADRESL	set	155
  1368  009E                     _ADCON1	set	158
  1369  0097                     _WDTCON	set	151
  1370  0098                     _OSCTUNE	set	152
  1371  0099                     _OSCCON	set	153
  1372  010C                     _LATAbits	set	268
  1373  010E                     _LATCbits	set	270
  1374  011D                     _APFCON	set	285
  1375  010E                     _LATC	set	270
  1376  010C                     _LATA	set	268
  1377  0116                     _BORCON	set	278
  1378  0191                     _EEADR	set	401
  1379  0196                     _EECON2	set	406
  1380  0193                     _EEDATA	set	403
  1381  018C                     _ANSELAbits	set	396
  1382  018E                     _ANSELCbits	set	398
  1383  018C                     _ANSELA	set	396
  1384  018E                     _ANSELC	set	398
  1385  0CA8                     _RD	set	3240
  1386  0CAA                     _WREN	set	3242
  1387  0CA9                     _WR	set	3241
  1388  020E                     _WPUC	set	526
  1389  020C                     _WPUA	set	524
  1390                           
  1391                           	psect	cinit
  1392  0027                     start_initialization:	
  1393                           ; #config settings
  1394                           
  1395  0027                     __initialization:
  1396                           
  1397                           ; Clear objects allocated to COMMON
  1398  0027  01F7               	clrf	__pbssCOMMON& (0+127)
  1399  0028  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1400  0029  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1401  002A  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  1402  002B  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
  1403                           
  1404                           ; Clear objects allocated to BANK0
  1405  002C  3020               	movlw	low __pbssBANK0
  1406  002D  0084               	movwf	4
  1407  002E  3000               	movlw	high __pbssBANK0
  1408  002F  0085               	movwf	5
  1409  0030  301F               	movlw	31
  1410  0031  3185  250F  3180   	fcall	clear_ram0
  1411  0034                     end_of_initialization:	
  1412                           ;End of C runtime variable initialization code
  1413                           
  1414  0034                     __end_of__initialization:
  1415  0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1416  0035  0020               	movlb	0
  1417  0036  2B4E               	ljmp	_main	;jump to C main() function
  1418                           
  1419                           	psect	bssCOMMON
  1420  0077                     __pbssCOMMON:
  1421  0077                     _ff:
  1422  0077                     	ds	4
  1423  007B                     _beep_short_count:
  1424  007B                     	ds	1
  1425                           
  1426                           	psect	bssBANK0
  1427  0020                     __pbssBANK0:
  1428  0020                     _time_rotation:
  1429  0020                     	ds	3
  1430  0023                     ms_tick@s_count:
  1431  0023                     	ds	2
  1432  0025                     ms_tick@ms_count:
  1433  0025                     	ds	2
  1434  0027                     _time_zummer_long:
  1435  0027                     	ds	2
  1436  0029                     _time_zummer_short:
  1437  0029                     	ds	2
  1438  002B                     _time_tone:
  1439  002B                     	ds	2
  1440  002D                     _time_rele_gap:
  1441  002D                     	ds	2
  1442  002F                     _time_rele_control:
  1443  002F                     	ds	2
  1444  0031                     _time_rele_power:
  1445  0031                     	ds	2
  1446  0033                     _ADC_InterruptHandler:
  1447  0033                     	ds	2
  1448  0035                     get_jump@jump_counter:
  1449  0035                     	ds	1
  1450  0036                     get_fun@fun_counter:
  1451  0036                     	ds	1
  1452  0037                     get_wsp@bad_measures_counter:
  1453  0037                     	ds	1
  1454  0038                     sec_work@iled:
  1455  0038                     	ds	1
  1456  0039                     sec_work@sec_count:
  1457  0039                     	ds	1
  1458  003A                     _beep_double_count:
  1459  003A                     	ds	1
  1460  003B                     _beep_long_count:
  1461  003B                     	ds	1
  1462  003C                     _time_meas:
  1463  003C                     	ds	1
  1464  003D                     _time_moving_wait:
  1465  003D                     	ds	1
  1466  003E                     _time_melody:
  1467  003E                     	ds	1
  1468                           
  1469                           	psect	clrtext
  1470  050F                     clear_ram0:	
  1471                           ;	Called with FSR0 containing the base address, and
  1472                           ;	WREG with the size to clear
  1473                           
  1474  050F  0064               	clrwdt	;clear the watchdog before getting into this loop
  1475  0510                     clrloop0:
  1476  0510  0180               	clrf	0	;clear RAM location pointed to by FSR
  1477  0511  3101               	addfsr 0,1
  1478  0512  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1479  0513  2D10               	goto	clrloop0	;have we reached the end yet?
  1480  0514  3400               	retlw	0	;all done for this memory range, return
  1481                           
  1482                           	psect	cstackCOMMON
  1483  0070                     __pcstackCOMMON:
  1484  0070                     ?_PIN_MANAGER_Initialize:
  1485  0070                     ?_OSCILLATOR_Initialize:	
  1486                           ; 1 bytes @ 0x0
  1487                           
  1488  0070                     ?_WDT_Initialize:	
  1489                           ; 1 bytes @ 0x0
  1490                           
  1491  0070                     ?_TMR2_Initialize:	
  1492                           ; 1 bytes @ 0x0
  1493                           
  1494  0070                     ?_ADC_Initialize:	
  1495                           ; 1 bytes @ 0x0
  1496                           
  1497  0070                     ?_TMR0_Initialize:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500  0070                     ?_TMR0_ISR:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503  0070                     ??_TMR0_ISR:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506  0070                     ?_TMR2_ISR:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509  0070                     ?_TMR2_DefaultInterruptHandler:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512  0070                     ??_TMR2_DefaultInterruptHandler:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515  0070                     ?_TMR0_DefaultInterruptHandler:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0070                     ??_TMR0_DefaultInterruptHandler:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0070                     ?_EEPROM_ReadByte:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0070                     ?_SYSTEM_Initialize:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0070                     ?_ADC_GetConversion:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0070                     ?_INTERRUPT_InterruptManager:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0070                     ?_TMR2_StartTimer:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0070                     ?_start_tone:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0070                     ??_start_tone:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ?_stop_tone:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ??_stop_tone:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ?_beep_short:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ??_beep_short:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ?_beep_long:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ??_beep_long:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0070                     ?_beep_double:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0070                     ??_beep_double:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566  0070                     ?_go_close:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ?_go_open:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0070                     ?_go_close_alt:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0070                     ?_go_open_alt:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578  0070                     ?_rele_off:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0070                     ?_close:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0070                     ?_open:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0070                     ?_rele_tick:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0070                     ??_rele_tick:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0070                     ?_start_alarm:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596  0070                     ?_clear_alarm:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599  0070                     ?_fun_work:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602  0070                     ?_switch_wm:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605  0070                     ?_minute_tick:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608  0070                     ??_minute_tick:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611  0070                     ?_sec_30_work:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614  0070                     ??_sec_30_work:	
  1615                           ; 1 bytes @ 0x0
  1616                           
  1617  0070                     ?_sec_work:	
  1618                           ; 1 bytes @ 0x0
  1619                           
  1620  0070                     ?_ms_200_work:	
  1621                           ; 1 bytes @ 0x0
  1622                           
  1623  0070                     ??_ms_200_work:	
  1624                           ; 1 bytes @ 0x0
  1625                           
  1626  0070                     ?_ms_100_work:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629  0070                     ??_ms_100_work:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632  0070                     ?_ms_tick:	
  1633                           ; 1 bytes @ 0x0
  1634                           
  1635  0070                     ?_eeprom_set:	
  1636                           ; 1 bytes @ 0x0
  1637                           
  1638  0070                     ?_hardware_work:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641  0070                     ?_zummer_switch:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644  0070                     ??_zummer_switch:	
  1645                           ; 1 bytes @ 0x0
  1646                           
  1647  0070                     ?_get_wsp:	
  1648                           ; 1 bytes @ 0x0
  1649                           
  1650  0070                     ?_get_fun:	
  1651                           ; 1 bytes @ 0x0
  1652                           
  1653  0070                     ?_get_jump:	
  1654                           ; 1 bytes @ 0x0
  1655                           
  1656  0070                     ?_start_setup:	
  1657                           ; 1 bytes @ 0x0
  1658                           
  1659  0070                     ?_main:	
  1660                           ; 1 bytes @ 0x0
  1661                           
  1662                           
  1663                           ; 1 bytes @ 0x0
  1664  0070                     	ds	1
  1665  0071                     ??_sec_work:
  1666                           
  1667                           ; 1 bytes @ 0x1
  1668  0071                     	ds	1
  1669  0072                     ??_PIN_MANAGER_Initialize:
  1670  0072                     ??_OSCILLATOR_Initialize:	
  1671                           ; 1 bytes @ 0x2
  1672                           
  1673  0072                     ??_WDT_Initialize:	
  1674                           ; 1 bytes @ 0x2
  1675                           
  1676  0072                     ??_ADC_Initialize:	
  1677                           ; 1 bytes @ 0x2
  1678                           
  1679  0072                     ??_TMR2_ISR:	
  1680                           ; 1 bytes @ 0x2
  1681                           
  1682  0072                     ?_TMR2_SetInterruptHandler:	
  1683                           ; 1 bytes @ 0x2
  1684                           
  1685  0072                     ?_TMR0_SetInterruptHandler:	
  1686                           ; 1 bytes @ 0x2
  1687                           
  1688  0072                     ??_EEPROM_ReadByte:	
  1689                           ; 1 bytes @ 0x2
  1690                           
  1691  0072                     ?_EEPROM_WriteByte:	
  1692                           ; 1 bytes @ 0x2
  1693                           
  1694  0072                     ??_ADC_GetConversion:	
  1695                           ; 1 bytes @ 0x2
  1696                           
  1697  0072                     ??_INTERRUPT_InterruptManager:	
  1698                           ; 1 bytes @ 0x2
  1699                           
  1700  0072                     ??_TMR2_StartTimer:	
  1701                           ; 1 bytes @ 0x2
  1702                           
  1703  0072                     ??_go_close:	
  1704                           ; 1 bytes @ 0x2
  1705                           
  1706  0072                     ??_go_open:	
  1707                           ; 1 bytes @ 0x2
  1708                           
  1709  0072                     ??_go_close_alt:	
  1710                           ; 1 bytes @ 0x2
  1711                           
  1712  0072                     ??_go_open_alt:	
  1713                           ; 1 bytes @ 0x2
  1714                           
  1715  0072                     ??_rele_off:	
  1716                           ; 1 bytes @ 0x2
  1717                           
  1718  0072                     ??_start_alarm:	
  1719                           ; 1 bytes @ 0x2
  1720                           
  1721  0072                     ??_clear_alarm:	
  1722                           ; 1 bytes @ 0x2
  1723                           
  1724  0072                     ??_ms_tick:	
  1725                           ; 1 bytes @ 0x2
  1726                           
  1727  0072                     ??_hardware_work:	
  1728                           ; 1 bytes @ 0x2
  1729                           
  1730  0072                     ??_get_fun:	
  1731                           ; 1 bytes @ 0x2
  1732                           
  1733  0072                     ??_get_jump:	
  1734                           ; 1 bytes @ 0x2
  1735                           
  1736  0072                     EEPROM_WriteByte@dt:	
  1737                           ; 1 bytes @ 0x2
  1738                           
  1739  0072                     TMR2_SetInterruptHandler@InterruptHandler:	
  1740                           ; 1 bytes @ 0x2
  1741                           
  1742  0072                     TMR0_SetInterruptHandler@InterruptHandler:	
  1743                           ; 2 bytes @ 0x2
  1744                           
  1745                           
  1746                           ; 2 bytes @ 0x2
  1747  0072                     	ds	1
  1748  0073                     ??_EEPROM_WriteByte:
  1749  0073                     ??_close:	
  1750                           ; 1 bytes @ 0x3
  1751                           
  1752  0073                     ??_open:	
  1753                           ; 1 bytes @ 0x3
  1754                           
  1755  0073                     ??_fun_work:	
  1756                           ; 1 bytes @ 0x3
  1757                           
  1758  0073                     ??_switch_wm:	
  1759                           ; 1 bytes @ 0x3
  1760                           
  1761  0073                     ADC_GetConversion@channel:	
  1762                           ; 1 bytes @ 0x3
  1763                           
  1764                           
  1765                           ; 1 bytes @ 0x3
  1766  0073                     	ds	1
  1767  0074                     ??_TMR2_Initialize:
  1768  0074                     ??_TMR0_Initialize:	
  1769                           ; 1 bytes @ 0x4
  1770                           
  1771  0074                     ??_TMR2_SetInterruptHandler:	
  1772                           ; 1 bytes @ 0x4
  1773                           
  1774  0074                     ??_TMR0_SetInterruptHandler:	
  1775                           ; 1 bytes @ 0x4
  1776                           
  1777  0074                     ??_get_wsp:	
  1778                           ; 1 bytes @ 0x4
  1779                           
  1780  0074                     EEPROM_ReadByte@addr:	
  1781                           ; 1 bytes @ 0x4
  1782                           
  1783                           
  1784                           ; 1 bytes @ 0x4
  1785  0074                     	ds	1
  1786  0075                     ??_SYSTEM_Initialize:
  1787  0075                     EEPROM_WriteByte@addr:	
  1788                           ; 1 bytes @ 0x5
  1789                           
  1790                           
  1791                           ; 1 bytes @ 0x5
  1792  0075                     	ds	1
  1793  0076                     EEPROM_WriteByte@status:
  1794                           
  1795                           ; 1 bytes @ 0x6
  1796  0076                     	ds	1
  1797  0077                     ??_start_setup:
  1798  0077                     ??_main:	
  1799                           ; 1 bytes @ 0x7
  1800                           
  1801                           
  1802                           	psect	cstackBANK0
  1803  0044                     __pcstackBANK0:	
  1804                           ; 1 bytes @ 0x7
  1805                           
  1806  0044                     ??_eeprom_set:
  1807  0044                     get_wsp@res:	
  1808                           ; 1 bytes @ 0x0
  1809                           
  1810                           
  1811                           ; 2 bytes @ 0x0
  1812  0044                     	ds	1
  1813  0045                     eeprom_set@vers:
  1814                           
  1815                           ; 1 bytes @ 0x1
  1816  0045                     	ds	1
  1817                           
  1818                           	psect	maintext
  1819  034E                     __pmaintext:	
  1820 ;;
  1821 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1822 ;;
  1823 ;; *************** function _main *****************
  1824 ;; Defined at:
  1825 ;;		line 800 in file "main.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;		None
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, status,2, status,0, pclath, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : B1F/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMMON   BANK0   BANK1
  1839 ;;      Params:         0       0       0
  1840 ;;      Locals:         0       0       0
  1841 ;;      Temps:          0       0       0
  1842 ;;      Totals:         0       0       0
  1843 ;;Total ram usage:        0 bytes
  1844 ;; Hardware stack levels required when called: 11
  1845 ;; This function calls:
  1846 ;;		_close
  1847 ;;		_fun_work
  1848 ;;		_get_fun
  1849 ;;		_get_jump
  1850 ;;		_get_wsp
  1851 ;;		_hardware_work
  1852 ;;		_start_setup
  1853 ;;		_switch_wm
  1854 ;; This function is called by:
  1855 ;;		Startup code after reset
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859  034E                     _main:	
  1860                           ;psect for function _main
  1861                           
  1862  034E                     l2647:	
  1863                           ;incstack = 0
  1864                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1865                           
  1866                           
  1867                           ;main.c: 802:     start_setup();
  1868  034E  3181  2197  3183   	fcall	_start_setup
  1869  0351                     l544:	
  1870                           ;main.c: 805:     while (1) {
  1871                           
  1872  0351  0064               	clrwdt	;# 
  1873  0352                     l2649:
  1874                           
  1875                           ;main.c: 809:         hardware_work();
  1876  0352  3182  224A  3183   	fcall	_hardware_work
  1877  0355                     l2651:
  1878                           
  1879                           ;main.c: 813:         if (!ff.bits.ALARM_ON) {
  1880  0355  1877               	btfsc	_ff,0
  1881  0356  2B58               	goto	u2481
  1882  0357  2B59               	goto	u2480
  1883  0358                     u2481:
  1884  0358  2B69               	goto	l2655
  1885  0359                     u2480:
  1886  0359                     l2653:
  1887                           
  1888                           ;main.c: 815:             get_jump();
  1889  0359  3182  227E  3183   	fcall	_get_jump
  1890                           
  1891                           ;main.c: 816:             switch_wm();
  1892  035C  3183  2307  3183   	fcall	_switch_wm
  1893                           
  1894                           ;main.c: 818:             get_fun();
  1895  035F  3181  2157  3183   	fcall	_get_fun
  1896                           
  1897                           ;main.c: 819:             fun_work();
  1898  0362  3182  22B1  3183   	fcall	_fun_work
  1899                           
  1900                           ;main.c: 821:             get_wsp();
  1901  0365  3180  20AA  3183   	fcall	_get_wsp
  1902                           
  1903                           ;main.c: 825:         } else {
  1904  0368  2B51               	goto	l544
  1905  0369                     l2655:
  1906                           
  1907                           ;main.c: 826:             close();
  1908  0369  3183  23B6  3183   	fcall	_close
  1909  036C  2B51               	goto	l544
  1910  036D  2826               	ljmp	start
  1911  036E                     __end_of_main:
  1912                           
  1913                           	psect	text1
  1914  0307                     __ptext1:	
  1915 ;; *************** function _switch_wm *****************
  1916 ;; Defined at:
  1917 ;;		line 335 in file "main.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;		None
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;		None
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  1    wreg      void 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0, pclath, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1
  1931 ;;      Params:         0       0       0
  1932 ;;      Locals:         0       0       0
  1933 ;;      Temps:          1       0       0
  1934 ;;      Totals:         1       0       0
  1935 ;;Total ram usage:        1 bytes
  1936 ;; Hardware stack levels used: 1
  1937 ;; Hardware stack levels required when called: 8
  1938 ;; This function calls:
  1939 ;;		_rele_off
  1940 ;; This function is called by:
  1941 ;;		_main
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945  0307                     _switch_wm:	
  1946                           ;psect for function _switch_wm
  1947                           
  1948  0307                     l2261:	
  1949                           ;incstack = 0
  1950                           ; Regs used in _switch_wm: [wreg+status,2+status,0+pclath+cstack]
  1951                           
  1952                           
  1953                           ;main.c: 336:     if (ff.bits.JUMP_LOW) {
  1954  0307  1FF7               	btfss	_ff,7
  1955  0308  2B0A               	goto	u2021
  1956  0309  2B0B               	goto	u2020
  1957  030A                     u2021:
  1958  030A  2B1A               	goto	l384
  1959  030B                     u2020:
  1960  030B                     l2263:
  1961                           
  1962                           ;main.c: 337:         if (!ff.bits.UNIVERSAL_VORK_MODE_ON) {
  1963  030B  18FA               	btfsc	_ff+3,1
  1964  030C  2B0E               	goto	u2031
  1965  030D  2B0F               	goto	u2030
  1966  030E                     u2031:
  1967  030E  2B2A               	goto	l389
  1968  030F                     u2030:
  1969  030F                     l2265:
  1970                           
  1971                           ;main.c: 338:             ff.bits.NORMAL_WORK_MODE_ON = 0;
  1972  030F  107A               	bcf	_ff+3,0
  1973                           
  1974                           ;main.c: 339:             ff.bits.UNIVERSAL_VORK_MODE_ON = 1;
  1975  0310  14FA               	bsf	_ff+3,1
  1976  0311                     l2267:
  1977                           
  1978                           ;main.c: 340:             rele_off();
  1979  0311  3184  245E  3183   	fcall	_rele_off
  1980  0314                     l2269:
  1981                           
  1982                           ;main.c: 342:             beep_long_count = 2;
  1983  0314  3002               	movlw	2
  1984  0315  00F3               	movwf	??_switch_wm
  1985  0316  0873               	movf	??_switch_wm,w
  1986  0317  0020               	movlb	0	; select bank0
  1987  0318  00BB               	movwf	_beep_long_count
  1988  0319  2B2A               	goto	l389
  1989  031A                     l384:
  1990  031A  1C78               	btfss	_ff+1,0
  1991  031B  2B1D               	goto	u2041
  1992  031C  2B1E               	goto	u2040
  1993  031D                     u2041:
  1994  031D  2B2A               	goto	l389
  1995  031E                     u2040:
  1996  031E                     l2271:
  1997                           
  1998                           ;main.c: 345:         if (!ff.bits.NORMAL_WORK_MODE_ON) {
  1999  031E  187A               	btfsc	_ff+3,0
  2000  031F  2B21               	goto	u2051
  2001  0320  2B22               	goto	u2050
  2002  0321                     u2051:
  2003  0321  2B2A               	goto	l389
  2004  0322                     u2050:
  2005  0322                     l2273:
  2006                           
  2007                           ;main.c: 346:             ff.bits.NORMAL_WORK_MODE_ON = 1;
  2008  0322  147A               	bsf	_ff+3,0
  2009                           
  2010                           ;main.c: 347:             ff.bits.UNIVERSAL_VORK_MODE_ON = 0;
  2011  0323  10FA               	bcf	_ff+3,1
  2012  0324                     l2275:
  2013                           
  2014                           ;main.c: 348:             rele_off();
  2015  0324  3184  245E  3183   	fcall	_rele_off
  2016  0327                     l2277:
  2017                           
  2018                           ;main.c: 350:             beep_long_count = 1;
  2019  0327  0020               	movlb	0	; select bank0
  2020  0328  01BB               	clrf	_beep_long_count
  2021  0329  0ABB               	incf	_beep_long_count,f
  2022  032A                     l389:
  2023  032A  0008               	return
  2024  032B                     __end_of_switch_wm:
  2025                           
  2026                           	psect	text2
  2027  0197                     __ptext2:	
  2028 ;; *************** function _start_setup *****************
  2029 ;; Defined at:
  2030 ;;		line 720 in file "main.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;		None
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;		None
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  1    wreg      void 
  2037 ;; Registers used:
  2038 ;;		wreg, status,2, status,0, pclath, cstack
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMMON   BANK0   BANK1
  2044 ;;      Params:         0       0       0
  2045 ;;      Locals:         0       0       0
  2046 ;;      Temps:          0       0       0
  2047 ;;      Totals:         0       0       0
  2048 ;;Total ram usage:        0 bytes
  2049 ;; Hardware stack levels used: 1
  2050 ;; Hardware stack levels required when called: 10
  2051 ;; This function calls:
  2052 ;;		_SYSTEM_Initialize
  2053 ;;		_TMR0_SetInterruptHandler
  2054 ;;		_TMR2_SetInterruptHandler
  2055 ;;		_TMR2_StartTimer
  2056 ;;		_eeprom_set
  2057 ;; This function is called by:
  2058 ;;		_main
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062  0197                     _start_setup:	
  2063                           ;psect for function _start_setup
  2064                           
  2065  0197                     l2595:	
  2066                           ;incstack = 0
  2067                           ; Regs used in _start_setup: [wreg+status,2+status,0+pclath+cstack]
  2068                           
  2069                           
  2070                           ;main.c: 722:     SYSTEM_Initialize();
  2071  0197  3184  244B  3181   	fcall	_SYSTEM_Initialize
  2072  019A                     l2597:
  2073                           
  2074                           ;main.c: 723:     (INTCONbits.GIE = 1);
  2075  019A  178B               	bsf	11,7	;volatile
  2076  019B                     l2599:
  2077                           
  2078                           ;main.c: 724:     (INTCONbits.PEIE = 1);
  2079  019B  170B               	bsf	11,6	;volatile
  2080                           
  2081                           ;main.c: 727:     eeprom_set();
  2082  019C  3184  2423  3181   	fcall	_eeprom_set
  2083                           
  2084                           ;main.c: 729:     TMR0_SetInterruptHandler(zummer_switch);
  2085  019F  30D2               	movlw	low _zummer_switch
  2086  01A0  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2087  01A1  3004               	movlw	high _zummer_switch
  2088  01A2  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2089  01A3  3185  251B  3181   	fcall	_TMR0_SetInterruptHandler
  2090                           
  2091                           ;main.c: 730:     TMR2_SetInterruptHandler(ms_tick);
  2092  01A6  30D6               	movlw	low _ms_tick
  2093  01A7  00F2               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2094  01A8  3001               	movlw	high _ms_tick
  2095  01A9  00F3               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2096  01AA  3185  2515  3181   	fcall	_TMR2_SetInterruptHandler
  2097  01AD                     l2601:
  2098                           
  2099                           ;main.c: 731:     TMR2_StartTimer();
  2100  01AD  3185  2532  3181   	fcall	_TMR2_StartTimer
  2101  01B0                     l2603:
  2102                           
  2103                           ;main.c: 748:     INTCONbits.TMR0IE = 0;
  2104  01B0  128B               	bcf	11,5	;volatile
  2105                           
  2106                           ;main.c: 749:     ff.value = 0;
  2107  01B1  3000               	movlw	0
  2108  01B2  00FA               	movwf	_ff+3
  2109  01B3  3000               	movlw	0
  2110  01B4  00F9               	movwf	_ff+2
  2111  01B5  3000               	movlw	0
  2112  01B6  00F8               	movwf	_ff+1
  2113  01B7  3000               	movlw	0
  2114  01B8  00F7               	movwf	_ff
  2115  01B9                     l2605:
  2116  01B9  0022               	movlb	2	; select bank2
  2117  01BA  128E               	bcf	14,5	;volatile
  2118  01BB                     l2607:
  2119  01BB  120E               	bcf	14,4	;volatile
  2120  01BC                     l2609:
  2121  01BC  100E               	bcf	14,0	;volatile
  2122  01BD                     l2611:
  2123  01BD  108E               	bcf	14,1	;volatile
  2124  01BE                     l2613:
  2125  01BE  128C               	bcf	12,5	;volatile
  2126  01BF                     l2615:
  2127  01BF  120C               	bcf	12,4	;volatile
  2128  01C0                     l538:
  2129                           
  2130                           ;main.c: 758:     time_rotation = 0;
  2131  01C0  3000               	movlw	0
  2132  01C1  0020               	movlb	0	; select bank0
  2133  01C2  00A0               	movwf	_time_rotation
  2134  01C3  3000               	movlw	0
  2135  01C4  00A1               	movwf	_time_rotation+1
  2136  01C5  3000               	movlw	0
  2137  01C6  00A2               	movwf	_time_rotation+2
  2138  01C7                     l2617:
  2139                           
  2140                           ;main.c: 759:     time_rele_power = 0;
  2141  01C7  01B1               	clrf	_time_rele_power
  2142  01C8  01B2               	clrf	_time_rele_power+1
  2143  01C9                     l2619:
  2144                           
  2145                           ;main.c: 760:     time_rele_control = 0;
  2146  01C9  01AF               	clrf	_time_rele_control
  2147  01CA  01B0               	clrf	_time_rele_control+1
  2148  01CB                     l2621:
  2149                           
  2150                           ;main.c: 761:     time_rele_gap = 0;
  2151  01CB  01AD               	clrf	_time_rele_gap
  2152  01CC  01AE               	clrf	_time_rele_gap+1
  2153  01CD                     l2623:
  2154                           
  2155                           ;main.c: 762:     time_tone = 0;
  2156  01CD  01AB               	clrf	_time_tone
  2157  01CE  01AC               	clrf	_time_tone+1
  2158  01CF                     l2625:
  2159                           
  2160                           ;main.c: 767:     time_melody = 0;
  2161  01CF  01BE               	clrf	_time_melody
  2162  01D0                     l2627:
  2163                           
  2164                           ;main.c: 768:     time_zummer_short = 0;
  2165  01D0  01A9               	clrf	_time_zummer_short
  2166  01D1  01AA               	clrf	_time_zummer_short+1
  2167  01D2                     l2629:
  2168                           
  2169                           ;main.c: 769:     time_zummer_long = 0;
  2170  01D2  01A7               	clrf	_time_zummer_long
  2171  01D3  01A8               	clrf	_time_zummer_long+1
  2172  01D4                     l2631:
  2173                           
  2174                           ;main.c: 772:     time_meas = 0;
  2175  01D4  01BC               	clrf	_time_meas
  2176  01D5                     l539:
  2177  01D5  0008               	return
  2178  01D6                     __end_of_start_setup:
  2179                           
  2180                           	psect	text3
  2181  0423                     __ptext3:	
  2182 ;; *************** function _eeprom_set *****************
  2183 ;; Defined at:
  2184 ;;		line 528 in file "main.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;		None
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  vers            1    1[BANK0 ] unsigned char 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0, pclath, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1
  2198 ;;      Params:         0       0       0
  2199 ;;      Locals:         0       1       0
  2200 ;;      Temps:          0       1       0
  2201 ;;      Totals:         0       2       0
  2202 ;;Total ram usage:        2 bytes
  2203 ;; Hardware stack levels used: 1
  2204 ;; Hardware stack levels required when called: 8
  2205 ;; This function calls:
  2206 ;;		_EEPROM_ReadByte
  2207 ;;		_EEPROM_WriteByte
  2208 ;; This function is called by:
  2209 ;;		_start_setup
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213  0423                     _eeprom_set:	
  2214                           ;psect for function _eeprom_set
  2215                           
  2216  0423                     l2557:	
  2217                           ;incstack = 0
  2218                           ; Regs used in _eeprom_set: [wreg+status,2+status,0+pclath+cstack]
  2219                           
  2220                           
  2221                           ;main.c: 529:     char vers = EEPROM_ReadByte(FRIMWARE_VERSION_EEPROM_ADR);
  2222  0423  3001               	movlw	1
  2223  0424  3184  2437  3184   	fcall	_EEPROM_ReadByte
  2224  0427  0020               	movlb	0	; select bank0
  2225  0428  00C4               	movwf	??_eeprom_set
  2226  0429  0844               	movf	??_eeprom_set,w
  2227  042A  00C5               	movwf	eeprom_set@vers
  2228  042B                     l2559:
  2229                           
  2230                           ;main.c: 530:     if (vers == 0xFF) {
  2231  042B  0A45               	incf	eeprom_set@vers,w
  2232  042C  1D03               	btfss	3,2
  2233  042D  2C2F               	goto	u2421
  2234  042E  2C30               	goto	u2420
  2235  042F                     u2421:
  2236  042F  2C36               	goto	l459
  2237  0430                     u2420:
  2238  0430                     l2561:
  2239                           
  2240                           ;main.c: 531:         EEPROM_WriteByte(FRIMWARE_VERSION_EEPROM_ADR, 1);
  2241  0430  01F2               	clrf	EEPROM_WriteByte@dt
  2242  0431  0AF2               	incf	EEPROM_WriteByte@dt,f
  2243  0432  3001               	movlw	1
  2244  0433  3183  232B  3184   	fcall	_EEPROM_WriteByte
  2245  0436                     l459:
  2246  0436  0008               	return
  2247  0437                     __end_of_eeprom_set:
  2248                           
  2249                           	psect	text4
  2250  032B                     __ptext4:	
  2251 ;; *************** function _EEPROM_WriteByte *****************
  2252 ;; Defined at:
  2253 ;;		line 6 in file "eeprom.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  addr            1    wreg     unsigned char 
  2256 ;;  dt              1    2[COMMON] unsigned char 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  addr            1    5[COMMON] unsigned char 
  2259 ;;  status          1    6[COMMON] unsigned char 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      void 
  2262 ;; Registers used:
  2263 ;;		wreg, status,2
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMMON   BANK0   BANK1
  2269 ;;      Params:         1       0       0
  2270 ;;      Locals:         2       0       0
  2271 ;;      Temps:          2       0       0
  2272 ;;      Totals:         5       0       0
  2273 ;;Total ram usage:        5 bytes
  2274 ;; Hardware stack levels used: 1
  2275 ;; Hardware stack levels required when called: 7
  2276 ;; This function calls:
  2277 ;;		Nothing
  2278 ;; This function is called by:
  2279 ;;		_eeprom_set
  2280 ;;		_EEPROM_WriteWord
  2281 ;;		_EEPROM_Writeint24
  2282 ;;		_EEPROM_WriteString
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286  032B                     _EEPROM_WriteByte:	
  2287                           ;psect for function _EEPROM_WriteByte
  2288                           
  2289                           
  2290                           ;incstack = 0
  2291                           ; Regs used in _EEPROM_WriteByte: [wreg+status,2]
  2292                           ;EEPROM_WriteByte@addr stored from wreg
  2293  032B  00F5               	movwf	EEPROM_WriteByte@addr
  2294  032C                     l2519:
  2295  032C                     l566:	
  2296                           ;eeprom.c: 7:     unsigned char status;;eeprom.c: 8:     while (WR);
  2297                           
  2298  032C  0023               	movlb	3	; select bank3
  2299  032D  1895               	btfsc	21,1	;volsfr
  2300  032E  2B30               	goto	u2381
  2301  032F  2B31               	goto	u2380
  2302  0330                     u2381:
  2303  0330  2B2C               	goto	l566
  2304  0331                     u2380:
  2305  0331                     l2521:
  2306                           
  2307                           ;eeprom.c: 9:     status = GIE;
  2308  0331  3000               	movlw	0
  2309  0332  1B8B               	btfsc	11,7	;volatile
  2310  0333  3001               	movlw	1
  2311  0334  00F6               	movwf	EEPROM_WriteByte@status
  2312  0335                     l2523:
  2313                           
  2314                           ;eeprom.c: 10:     GIE = 0;
  2315  0335  138B               	bcf	11,7	;volatile
  2316  0336                     l2525:
  2317                           
  2318                           ;eeprom.c: 11:     EEADR = addr;
  2319  0336  0875               	movf	EEPROM_WriteByte@addr,w
  2320  0337  00F3               	movwf	??_EEPROM_WriteByte
  2321  0338  01F4               	clrf	??_EEPROM_WriteByte+1
  2322  0339  0873               	movf	??_EEPROM_WriteByte,w
  2323  033A  0091               	movwf	17	;volatile
  2324  033B  0874               	movf	??_EEPROM_WriteByte+1,w
  2325  033C  0092               	movwf	18	;volatile
  2326  033D                     l2527:
  2327                           
  2328                           ;eeprom.c: 12:     EEDATA = dt;
  2329  033D  0872               	movf	EEPROM_WriteByte@dt,w
  2330  033E  0093               	movwf	19	;volatile
  2331  033F                     l2529:
  2332                           
  2333                           ;eeprom.c: 13:     WREN = 1;
  2334  033F  1515               	bsf	21,2	;volsfr
  2335  0340                     l2531:
  2336                           
  2337                           ;eeprom.c: 14:     EECON2 = 0x55;
  2338  0340  3055               	movlw	85
  2339  0341  0096               	movwf	22	;volsfr
  2340  0342                     l2533:
  2341                           
  2342                           ;eeprom.c: 15:     EECON2 = 0xAA;
  2343  0342  30AA               	movlw	170
  2344  0343  0096               	movwf	22	;volsfr
  2345  0344                     l2535:
  2346                           
  2347                           ;eeprom.c: 16:     WR = 1;
  2348  0344  1495               	bsf	21,1	;volsfr
  2349  0345                     l2537:
  2350                           
  2351                           ;eeprom.c: 17:     GIE = status;
  2352  0345  1876               	btfsc	EEPROM_WriteByte@status,0
  2353  0346  2B48               	goto	u2391
  2354  0347  2B4A               	goto	u2390
  2355  0348                     u2391:
  2356  0348  178B               	bsf	11,7	;volatile
  2357  0349  2B4B               	goto	u2404
  2358  034A                     u2390:
  2359  034A  138B               	bcf	11,7	;volatile
  2360  034B                     u2404:
  2361  034B                     l2539:
  2362                           
  2363                           ;eeprom.c: 18:     WREN = 0;
  2364  034B  0023               	movlb	3	; select bank3
  2365  034C  1115               	bcf	21,2	;volsfr
  2366  034D                     l569:
  2367  034D  0008               	return
  2368  034E                     __end_of_EEPROM_WriteByte:
  2369                           
  2370                           	psect	text5
  2371  0437                     __ptext5:	
  2372 ;; *************** function _EEPROM_ReadByte *****************
  2373 ;; Defined at:
  2374 ;;		line 21 in file "eeprom.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  addr            1    wreg     unsigned char 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  addr            1    4[COMMON] unsigned char 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      unsigned char 
  2381 ;; Registers used:
  2382 ;;		wreg
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMMON   BANK0   BANK1
  2388 ;;      Params:         0       0       0
  2389 ;;      Locals:         1       0       0
  2390 ;;      Temps:          2       0       0
  2391 ;;      Totals:         3       0       0
  2392 ;;Total ram usage:        3 bytes
  2393 ;; Hardware stack levels used: 1
  2394 ;; Hardware stack levels required when called: 7
  2395 ;; This function calls:
  2396 ;;		Nothing
  2397 ;; This function is called by:
  2398 ;;		_eeprom_set
  2399 ;;		_EEPROM_ReadWord
  2400 ;;		_EEPROM_Readint24
  2401 ;;		_EEPROM_ReadString
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405  0437                     _EEPROM_ReadByte:	
  2406                           ;psect for function _EEPROM_ReadByte
  2407                           
  2408                           
  2409                           ;incstack = 0
  2410                           ; Regs used in _EEPROM_ReadByte: [wreg]
  2411                           ;EEPROM_ReadByte@addr stored from wreg
  2412  0437  00F4               	movwf	EEPROM_ReadByte@addr
  2413  0438                     l2509:
  2414  0438                     l572:	
  2415                           ;eeprom.c: 22:     while (RD || WR);
  2416                           
  2417  0438  0023               	movlb	3	; select bank3
  2418  0439  1815               	btfsc	21,0	;volsfr
  2419  043A  2C3C               	goto	u2361
  2420  043B  2C3D               	goto	u2360
  2421  043C                     u2361:
  2422  043C  2C38               	goto	l572
  2423  043D                     u2360:
  2424  043D                     l2511:
  2425  043D  1895               	btfsc	21,1	;volsfr
  2426  043E  2C40               	goto	u2371
  2427  043F  2C41               	goto	u2370
  2428  0440                     u2371:
  2429  0440  2C38               	goto	l572
  2430  0441                     u2370:
  2431  0441                     l2513:
  2432                           
  2433                           ;eeprom.c: 23:     EEADR = addr;
  2434  0441  0874               	movf	EEPROM_ReadByte@addr,w
  2435  0442  00F2               	movwf	??_EEPROM_ReadByte
  2436  0443  01F3               	clrf	??_EEPROM_ReadByte+1
  2437  0444  0872               	movf	??_EEPROM_ReadByte,w
  2438  0445  0091               	movwf	17	;volatile
  2439  0446  0873               	movf	??_EEPROM_ReadByte+1,w
  2440  0447  0092               	movwf	18	;volatile
  2441  0448                     l2515:
  2442                           
  2443                           ;eeprom.c: 24:     RD = 1;
  2444  0448  1415               	bsf	21,0	;volsfr
  2445                           
  2446                           ;eeprom.c: 25:     return EEDATA;
  2447  0449  0813               	movf	19,w	;volatile
  2448  044A                     l575:
  2449  044A  0008               	return
  2450  044B                     __end_of_EEPROM_ReadByte:
  2451                           
  2452                           	psect	text6
  2453  0532                     __ptext6:	
  2454 ;; *************** function _TMR2_StartTimer *****************
  2455 ;; Defined at:
  2456 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;		None
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;		None
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		None
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMMON   BANK0   BANK1
  2470 ;;      Params:         0       0       0
  2471 ;;      Locals:         0       0       0
  2472 ;;      Temps:          0       0       0
  2473 ;;      Totals:         0       0       0
  2474 ;;Total ram usage:        0 bytes
  2475 ;; Hardware stack levels used: 1
  2476 ;; Hardware stack levels required when called: 7
  2477 ;; This function calls:
  2478 ;;		Nothing
  2479 ;; This function is called by:
  2480 ;;		_start_setup
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484  0532                     _TMR2_StartTimer:	
  2485                           ;psect for function _TMR2_StartTimer
  2486                           
  2487  0532                     l2161:	
  2488                           ;incstack = 0
  2489                           ; Regs used in _TMR2_StartTimer: []
  2490                           
  2491                           
  2492                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  2493  0532  0020               	movlb	0	; select bank0
  2494  0533  151C               	bsf	28,2	;volatile
  2495  0534                     l138:
  2496  0534  0008               	return
  2497  0535                     __end_of_TMR2_StartTimer:
  2498                           
  2499                           	psect	text7
  2500  044B                     __ptext7:	
  2501 ;; *************** function _SYSTEM_Initialize *****************
  2502 ;; Defined at:
  2503 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;		None
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;		None
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  1    wreg      void 
  2510 ;; Registers used:
  2511 ;;		wreg, status,2, status,0, pclath, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMMON   BANK0   BANK1
  2517 ;;      Params:         0       0       0
  2518 ;;      Locals:         0       0       0
  2519 ;;      Temps:          0       0       0
  2520 ;;      Totals:         0       0       0
  2521 ;;Total ram usage:        0 bytes
  2522 ;; Hardware stack levels used: 1
  2523 ;; Hardware stack levels required when called: 9
  2524 ;; This function calls:
  2525 ;;		_ADC_Initialize
  2526 ;;		_OSCILLATOR_Initialize
  2527 ;;		_PIN_MANAGER_Initialize
  2528 ;;		_TMR0_Initialize
  2529 ;;		_TMR2_Initialize
  2530 ;;		_WDT_Initialize
  2531 ;; This function is called by:
  2532 ;;		_start_setup
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536  044B                     _SYSTEM_Initialize:	
  2537                           ;psect for function _SYSTEM_Initialize
  2538                           
  2539  044B                     l2147:	
  2540                           ;incstack = 0
  2541                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2542                           
  2543                           
  2544                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2545  044B  3183  23E4  3184   	fcall	_PIN_MANAGER_Initialize
  2546                           
  2547                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2548  044E  3185  2508  3184   	fcall	_OSCILLATOR_Initialize
  2549                           
  2550                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2551  0451  3185  2526  3184   	fcall	_WDT_Initialize
  2552                           
  2553                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  2554  0454  3184  2484  3184   	fcall	_TMR2_Initialize
  2555                           
  2556                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2557  0457  3185  2500  3184   	fcall	_ADC_Initialize
  2558                           
  2559                           ;mcc_generated_files/mcc.c: 58:     TMR0_Initialize();
  2560  045A  3183  23CE  3184   	fcall	_TMR0_Initialize
  2561  045D                     l23:
  2562  045D  0008               	return
  2563  045E                     __end_of_SYSTEM_Initialize:
  2564                           
  2565                           	psect	text8
  2566  0526                     __ptext8:	
  2567 ;; *************** function _WDT_Initialize *****************
  2568 ;; Defined at:
  2569 ;;		line 71 in file "mcc_generated_files/mcc.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;		None
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;		None
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  1    wreg      void 
  2576 ;; Registers used:
  2577 ;;		wreg
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMMON   BANK0   BANK1
  2583 ;;      Params:         0       0       0
  2584 ;;      Locals:         0       0       0
  2585 ;;      Temps:          0       0       0
  2586 ;;      Totals:         0       0       0
  2587 ;;Total ram usage:        0 bytes
  2588 ;; Hardware stack levels used: 1
  2589 ;; Hardware stack levels required when called: 7
  2590 ;; This function calls:
  2591 ;;		Nothing
  2592 ;; This function is called by:
  2593 ;;		_SYSTEM_Initialize
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597  0526                     _WDT_Initialize:	
  2598                           ;psect for function _WDT_Initialize
  2599                           
  2600  0526                     l1985:	
  2601                           ;incstack = 0
  2602                           ; Regs used in _WDT_Initialize: [wreg]
  2603                           
  2604                           
  2605                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x0A;
  2606  0526  300A               	movlw	10
  2607  0527  0021               	movlb	1	; select bank1
  2608  0528  0097               	movwf	23	;volatile
  2609  0529                     l29:
  2610  0529  0008               	return
  2611  052A                     __end_of_WDT_Initialize:
  2612                           
  2613                           	psect	text9
  2614  0484                     __ptext9:	
  2615 ;; *************** function _TMR2_Initialize *****************
  2616 ;; Defined at:
  2617 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;		None
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;		None
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		wreg, status,2, status,0, pclath, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMMON   BANK0   BANK1
  2631 ;;      Params:         0       0       0
  2632 ;;      Locals:         0       0       0
  2633 ;;      Temps:          0       0       0
  2634 ;;      Totals:         0       0       0
  2635 ;;Total ram usage:        0 bytes
  2636 ;; Hardware stack levels used: 1
  2637 ;; Hardware stack levels required when called: 8
  2638 ;; This function calls:
  2639 ;;		_TMR2_SetInterruptHandler
  2640 ;; This function is called by:
  2641 ;;		_SYSTEM_Initialize
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645  0484                     _TMR2_Initialize:	
  2646                           ;psect for function _TMR2_Initialize
  2647                           
  2648  0484                     l1987:	
  2649                           ;incstack = 0
  2650                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2651                           
  2652                           
  2653                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x63;
  2654  0484  3063               	movlw	99
  2655  0485  0020               	movlb	0	; select bank0
  2656  0486  009B               	movwf	27	;volatile
  2657  0487                     l1989:
  2658                           
  2659                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  2660  0487  019A               	clrf	26	;volatile
  2661  0488                     l1991:
  2662                           
  2663                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  2664  0488  1091               	bcf	17,1	;volatile
  2665  0489                     l1993:
  2666                           
  2667                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  2668  0489  0021               	movlb	1	; select bank1
  2669  048A  1491               	bsf	17,1	;volatile
  2670  048B                     l1995:
  2671                           
  2672                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  2673  048B  3050               	movlw	low _TMR2_DefaultInterruptHandler
  2674  048C  00F2               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2675  048D  3005               	movlw	high _TMR2_DefaultInterruptHandler
  2676  048E  00F3               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2677  048F  3185  2515  3184   	fcall	_TMR2_SetInterruptHandler
  2678  0492                     l1997:
  2679                           
  2680                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x4D;
  2681  0492  304D               	movlw	77
  2682  0493  0020               	movlb	0	; select bank0
  2683  0494  009C               	movwf	28	;volatile
  2684  0495                     l135:
  2685  0495  0008               	return
  2686  0496                     __end_of_TMR2_Initialize:
  2687                           
  2688                           	psect	text10
  2689  0515                     __ptext10:	
  2690 ;; *************** function _TMR2_SetInterruptHandler *****************
  2691 ;; Defined at:
  2692 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  2695 ;;		 -> ms_tick(1), TMR2_DefaultInterruptHandler(1), 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;		None
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  1    wreg      void 
  2700 ;; Registers used:
  2701 ;;		wreg
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMMON   BANK0   BANK1
  2707 ;;      Params:         2       0       0
  2708 ;;      Locals:         0       0       0
  2709 ;;      Temps:          0       0       0
  2710 ;;      Totals:         2       0       0
  2711 ;;Total ram usage:        2 bytes
  2712 ;; Hardware stack levels used: 1
  2713 ;; Hardware stack levels required when called: 7
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_TMR2_Initialize
  2718 ;;		_start_setup
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722  0515                     _TMR2_SetInterruptHandler:	
  2723                           ;psect for function _TMR2_SetInterruptHandler
  2724                           
  2725  0515                     l1911:	
  2726                           ;incstack = 0
  2727                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2728                           
  2729                           
  2730                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
  2731  0515  0873               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2732  0516  0020               	movlb	0	; select bank0
  2733  0517  00C2               	movwf	_TMR2_InterruptHandler+1
  2734  0518  0872               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2735  0519  00C1               	movwf	_TMR2_InterruptHandler
  2736  051A                     l157:
  2737  051A  0008               	return
  2738  051B                     __end_of_TMR2_SetInterruptHandler:
  2739                           
  2740                           	psect	text11
  2741  03CE                     __ptext11:	
  2742 ;; *************** function _TMR0_Initialize *****************
  2743 ;; Defined at:
  2744 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;		None
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;		None
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0, pclath, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMMON   BANK0   BANK1
  2758 ;;      Params:         0       0       0
  2759 ;;      Locals:         0       0       0
  2760 ;;      Temps:          1       0       0
  2761 ;;      Totals:         1       0       0
  2762 ;;Total ram usage:        1 bytes
  2763 ;; Hardware stack levels used: 1
  2764 ;; Hardware stack levels required when called: 8
  2765 ;; This function calls:
  2766 ;;		_TMR0_SetInterruptHandler
  2767 ;; This function is called by:
  2768 ;;		_SYSTEM_Initialize
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772  03CE                     _TMR0_Initialize:	
  2773                           ;psect for function _TMR0_Initialize
  2774                           
  2775  03CE                     l2005:	
  2776                           ;incstack = 0
  2777                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2778                           
  2779                           
  2780                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD1 
      +                          & 0x3F));
  2781  03CE  0021               	movlb	1	; select bank1
  2782  03CF  0815               	movf	21,w	;volatile
  2783  03D0  39C0               	andlw	192
  2784  03D1  3811               	iorlw	17
  2785  03D2  0095               	movwf	21	;volatile
  2786  03D3                     l2007:
  2787                           
  2788                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x83;
  2789  03D3  3083               	movlw	131
  2790  03D4  0020               	movlb	0	; select bank0
  2791  03D5  0095               	movwf	21	;volatile
  2792  03D6                     l2009:
  2793                           
  2794                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 131;
  2795  03D6  3083               	movlw	131
  2796  03D7  00F4               	movwf	??_TMR0_Initialize
  2797  03D8  0874               	movf	??_TMR0_Initialize,w
  2798  03D9  00C3               	movwf	_timer0ReloadVal	;volatile
  2799  03DA                     l2011:
  2800                           
  2801                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  2802  03DA  110B               	bcf	11,2	;volatile
  2803  03DB                     l2013:
  2804                           
  2805                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  2806  03DB  168B               	bsf	11,5	;volatile
  2807  03DC                     l2015:
  2808                           
  2809                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2810  03DC  3051               	movlw	low _TMR0_DefaultInterruptHandler
  2811  03DD  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2812  03DE  3005               	movlw	high _TMR0_DefaultInterruptHandler
  2813  03DF  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2814  03E0  3185  251B  3183   	fcall	_TMR0_SetInterruptHandler
  2815  03E3                     l177:
  2816  03E3  0008               	return
  2817  03E4                     __end_of_TMR0_Initialize:
  2818                           
  2819                           	psect	text12
  2820  051B                     __ptext12:	
  2821 ;; *************** function _TMR0_SetInterruptHandler *****************
  2822 ;; Defined at:
  2823 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  2826 ;;		 -> zummer_switch(1), TMR0_DefaultInterruptHandler(1), 
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;		None
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  1    wreg      void 
  2831 ;; Registers used:
  2832 ;;		wreg
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/0
  2835 ;;		On exit  : 0/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMMON   BANK0   BANK1
  2838 ;;      Params:         2       0       0
  2839 ;;      Locals:         0       0       0
  2840 ;;      Temps:          0       0       0
  2841 ;;      Totals:         2       0       0
  2842 ;;Total ram usage:        2 bytes
  2843 ;; Hardware stack levels used: 1
  2844 ;; Hardware stack levels required when called: 7
  2845 ;; This function calls:
  2846 ;;		Nothing
  2847 ;; This function is called by:
  2848 ;;		_TMR0_Initialize
  2849 ;;		_start_setup
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853  051B                     _TMR0_SetInterruptHandler:	
  2854                           ;psect for function _TMR0_SetInterruptHandler
  2855                           
  2856  051B                     l1913:	
  2857                           ;incstack = 0
  2858                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2859                           
  2860                           
  2861                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  2862  051B  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2863  051C  0020               	movlb	0	; select bank0
  2864  051D  00C0               	movwf	_TMR0_InterruptHandler+1
  2865  051E  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2866  051F  00BF               	movwf	_TMR0_InterruptHandler
  2867  0520                     l193:
  2868  0520  0008               	return
  2869  0521                     __end_of_TMR0_SetInterruptHandler:
  2870                           
  2871                           	psect	text13
  2872  03E4                     __ptext13:	
  2873 ;; *************** function _PIN_MANAGER_Initialize *****************
  2874 ;; Defined at:
  2875 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg, status,2
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMMON   BANK0   BANK1
  2889 ;;      Params:         0       0       0
  2890 ;;      Locals:         0       0       0
  2891 ;;      Temps:          0       0       0
  2892 ;;      Totals:         0       0       0
  2893 ;;Total ram usage:        0 bytes
  2894 ;; Hardware stack levels used: 1
  2895 ;; Hardware stack levels required when called: 7
  2896 ;; This function calls:
  2897 ;;		Nothing
  2898 ;; This function is called by:
  2899 ;;		_SYSTEM_Initialize
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903  03E4                     _PIN_MANAGER_Initialize:	
  2904                           ;psect for function _PIN_MANAGER_Initialize
  2905                           
  2906  03E4                     l1967:	
  2907                           ;incstack = 0
  2908                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2909                           
  2910                           
  2911                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2912  03E4  0022               	movlb	2	; select bank2
  2913  03E5  018C               	clrf	12	;volatile
  2914                           
  2915                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  2916  03E6  018E               	clrf	14	;volatile
  2917  03E7                     l1969:
  2918                           
  2919                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x0F;
  2920  03E7  300F               	movlw	15
  2921  03E8  0021               	movlb	1	; select bank1
  2922  03E9  008C               	movwf	12	;volatile
  2923  03EA                     l1971:
  2924                           
  2925                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x0C;
  2926  03EA  300C               	movlw	12
  2927  03EB  008E               	movwf	14	;volatile
  2928  03EC                     l1973:
  2929                           
  2930                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x08;
  2931  03EC  3008               	movlw	8
  2932  03ED  0023               	movlb	3	; select bank3
  2933  03EE  008E               	movwf	14	;volatile
  2934  03EF                     l1975:
  2935                           
  2936                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x05;
  2937  03EF  3005               	movlw	5
  2938  03F0  008C               	movwf	12	;volatile
  2939                           
  2940                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  2941  03F1  0024               	movlb	4	; select bank4
  2942  03F2  018C               	clrf	12	;volatile
  2943                           
  2944                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  2945  03F3  018E               	clrf	14	;volatile
  2946  03F4                     l1977:
  2947                           
  2948                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2949  03F4  0021               	movlb	1	; select bank1
  2950  03F5  1795               	bsf	21,7	;volatile
  2951                           
  2952                           ;mcc_generated_files/pin_manager.c: 86:     APFCON = 0x00;
  2953  03F6  0022               	movlb	2	; select bank2
  2954  03F7  019D               	clrf	29	;volatile
  2955  03F8                     l90:
  2956  03F8  0008               	return
  2957  03F9                     __end_of_PIN_MANAGER_Initialize:
  2958                           
  2959                           	psect	text14
  2960  0508                     __ptext14:	
  2961 ;; *************** function _OSCILLATOR_Initialize *****************
  2962 ;; Defined at:
  2963 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;		None
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;		None
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1    wreg      void 
  2970 ;; Registers used:
  2971 ;;		wreg, status,2
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMMON   BANK0   BANK1
  2977 ;;      Params:         0       0       0
  2978 ;;      Locals:         0       0       0
  2979 ;;      Temps:          0       0       0
  2980 ;;      Totals:         0       0       0
  2981 ;;Total ram usage:        0 bytes
  2982 ;; Hardware stack levels used: 1
  2983 ;; Hardware stack levels required when called: 7
  2984 ;; This function calls:
  2985 ;;		Nothing
  2986 ;; This function is called by:
  2987 ;;		_SYSTEM_Initialize
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991  0508                     _OSCILLATOR_Initialize:	
  2992                           ;psect for function _OSCILLATOR_Initialize
  2993                           
  2994  0508                     l1979:	
  2995                           ;incstack = 0
  2996                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2997                           
  2998                           
  2999                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x78;
  3000  0508  3078               	movlw	120
  3001  0509  0021               	movlb	1	; select bank1
  3002  050A  0099               	movwf	25	;volatile
  3003  050B                     l1981:
  3004                           
  3005                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  3006  050B  0198               	clrf	24	;volatile
  3007  050C                     l1983:
  3008                           
  3009                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  3010  050C  0022               	movlb	2	; select bank2
  3011  050D  0196               	clrf	22	;volatile
  3012  050E                     l26:
  3013  050E  0008               	return
  3014  050F                     __end_of_OSCILLATOR_Initialize:
  3015                           
  3016                           	psect	text15
  3017  0500                     __ptext15:	
  3018 ;; *************** function _ADC_Initialize *****************
  3019 ;; Defined at:
  3020 ;;		line 67 in file "mcc_generated_files/adc.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;		None
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;		None
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  1    wreg      void 
  3027 ;; Registers used:
  3028 ;;		wreg, status,2
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMMON   BANK0   BANK1
  3034 ;;      Params:         0       0       0
  3035 ;;      Locals:         0       0       0
  3036 ;;      Temps:          0       0       0
  3037 ;;      Totals:         0       0       0
  3038 ;;Total ram usage:        0 bytes
  3039 ;; Hardware stack levels used: 1
  3040 ;; Hardware stack levels required when called: 7
  3041 ;; This function calls:
  3042 ;;		Nothing
  3043 ;; This function is called by:
  3044 ;;		_SYSTEM_Initialize
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048  0500                     _ADC_Initialize:	
  3049                           ;psect for function _ADC_Initialize
  3050                           
  3051  0500                     l1999:	
  3052                           ;incstack = 0
  3053                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3054                           
  3055                           
  3056                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x50;
  3057  0500  3050               	movlw	80
  3058  0501  0021               	movlb	1	; select bank1
  3059  0502  009E               	movwf	30	;volatile
  3060  0503                     l2001:
  3061                           
  3062                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  3063  0503  019B               	clrf	27	;volatile
  3064  0504                     l2003:
  3065                           
  3066                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  3067  0504  019C               	clrf	28	;volatile
  3068                           
  3069                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x1D;
  3070  0505  301D               	movlw	29
  3071  0506  009D               	movwf	29	;volatile
  3072  0507                     l46:
  3073  0507  0008               	return
  3074  0508                     __end_of_ADC_Initialize:
  3075                           
  3076                           	psect	text16
  3077  024A                     __ptext16:	
  3078 ;; *************** function _hardware_work *****************
  3079 ;; Defined at:
  3080 ;;		line 536 in file "main.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;		None
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		None
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMMON   BANK0   BANK1
  3094 ;;      Params:         0       0       0
  3095 ;;      Locals:         0       0       0
  3096 ;;      Temps:          0       0       0
  3097 ;;      Totals:         0       0       0
  3098 ;;Total ram usage:        0 bytes
  3099 ;; Hardware stack levels used: 1
  3100 ;; Hardware stack levels required when called: 7
  3101 ;; This function calls:
  3102 ;;		Nothing
  3103 ;; This function is called by:
  3104 ;;		_main
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108  024A                     _hardware_work:	
  3109                           ;psect for function _hardware_work
  3110                           
  3111  024A                     l1617:	
  3112                           ;incstack = 0
  3113                           ; Regs used in _hardware_work: []
  3114                           
  3115                           
  3116                           ;main.c: 537:     LATCbits.LATC0 = ff.bits.ALARM_ON;
  3117  024A  1877               	btfsc	_ff,0
  3118  024B  2A4D               	goto	u851
  3119  024C  2A50               	goto	u850
  3120  024D                     u851:
  3121  024D  0022               	movlb	2	; select bank2
  3122  024E  140E               	bsf	14,0	;volatile
  3123  024F  2A52               	goto	u864
  3124  0250                     u850:
  3125  0250  0022               	movlb	2	; select bank2
  3126  0251  100E               	bcf	14,0	;volatile
  3127  0252                     u864:
  3128                           
  3129                           ;main.c: 538:     LATCbits.LATC1 = ff.bits.MEAS_ON;
  3130  0252  1A7A               	btfsc	_ff+3,4
  3131  0253  2A55               	goto	u871
  3132  0254  2A58               	goto	u870
  3133  0255                     u871:
  3134  0255  0022               	movlb	2	; select bank2
  3135  0256  148E               	bsf	14,1	;volatile
  3136  0257  2A5A               	goto	u884
  3137  0258                     u870:
  3138  0258  0022               	movlb	2	; select bank2
  3139  0259  108E               	bcf	14,1	;volatile
  3140  025A                     u884:
  3141                           
  3142                           ;main.c: 539:     LATCbits.LATC4 = ff.bits.RELE_CONTROL_ON;
  3143  025A  1B78               	btfsc	_ff+1,6
  3144  025B  2A5D               	goto	u891
  3145  025C  2A60               	goto	u890
  3146  025D                     u891:
  3147  025D  0022               	movlb	2	; select bank2
  3148  025E  160E               	bsf	14,4	;volatile
  3149  025F  2A62               	goto	u904
  3150  0260                     u890:
  3151  0260  0022               	movlb	2	; select bank2
  3152  0261  120E               	bcf	14,4	;volatile
  3153  0262                     u904:
  3154                           
  3155                           ;main.c: 540:     LATCbits.LATC5 = ff.bits.RELE_POWER_ON;
  3156  0262  1AF8               	btfsc	_ff+1,5
  3157  0263  2A65               	goto	u911
  3158  0264  2A68               	goto	u910
  3159  0265                     u911:
  3160  0265  0022               	movlb	2	; select bank2
  3161  0266  168E               	bsf	14,5	;volatile
  3162  0267  2A6A               	goto	u924
  3163  0268                     u910:
  3164  0268  0022               	movlb	2	; select bank2
  3165  0269  128E               	bcf	14,5	;volatile
  3166  026A                     u924:
  3167                           
  3168                           ;main.c: 541:     LATAbits.LATA4 = ff.bits.LED_ON;
  3169  026A  197A               	btfsc	_ff+3,2
  3170  026B  2A6D               	goto	u931
  3171  026C  2A70               	goto	u930
  3172  026D                     u931:
  3173  026D  0022               	movlb	2	; select bank2
  3174  026E  160C               	bsf	12,4	;volatile
  3175  026F  2A72               	goto	u944
  3176  0270                     u930:
  3177  0270  0022               	movlb	2	; select bank2
  3178  0271  120C               	bcf	12,4	;volatile
  3179  0272                     u944:
  3180                           
  3181                           ;main.c: 543:     if (ff.bits.TONE_ON) {
  3182  0272  1CF9               	btfss	_ff+2,1
  3183  0273  2A75               	goto	u951
  3184  0274  2A76               	goto	u950
  3185  0275                     u951:
  3186  0275  2A77               	goto	l462
  3187  0276                     u950:
  3188  0276                     l1619:
  3189                           
  3190                           ;main.c: 544:         INTCONbits.TMR0IE = 1;
  3191  0276  168B               	bsf	11,5	;volatile
  3192  0277                     l462:	
  3193                           ;main.c: 545:     };
  3194                           
  3195                           
  3196                           ;main.c: 546:     if (ff.bits.TONE_OFF) {
  3197  0277  1D79               	btfss	_ff+2,2
  3198  0278  2A7A               	goto	u961
  3199  0279  2A7B               	goto	u960
  3200  027A                     u961:
  3201  027A  2A7D               	goto	l466
  3202  027B                     u960:
  3203  027B                     l1621:
  3204                           
  3205                           ;main.c: 547:         INTCONbits.TMR0IE = 0;
  3206  027B  128B               	bcf	11,5	;volatile
  3207  027C                     l464:	
  3208                           ;main.c: 548:         do { LATAbits.LATA5 = 0; } while(0);
  3209                           
  3210  027C  128C               	bcf	12,5	;volatile
  3211  027D                     l466:
  3212  027D  0008               	return
  3213  027E                     __end_of_hardware_work:
  3214                           
  3215                           	psect	text17
  3216  00AA                     __ptext17:	
  3217 ;; *************** function _get_wsp *****************
  3218 ;; Defined at:
  3219 ;;		line 561 in file "main.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;		None
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;  res             2    0[BANK0 ] unsigned int 
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  1    wreg      void 
  3226 ;; Registers used:
  3227 ;;		wreg, status,2, status,0, pclath, cstack
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMMON   BANK0   BANK1
  3233 ;;      Params:         0       0       0
  3234 ;;      Locals:         0       2       0
  3235 ;;      Temps:          2       0       0
  3236 ;;      Totals:         2       2       0
  3237 ;;Total ram usage:        4 bytes
  3238 ;; Hardware stack levels used: 1
  3239 ;; Hardware stack levels required when called: 8
  3240 ;; This function calls:
  3241 ;;		_ADC_GetConversion
  3242 ;;		_clear_alarm
  3243 ;;		_start_alarm
  3244 ;; This function is called by:
  3245 ;;		_main
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249  00AA                     _get_wsp:	
  3250                           ;psect for function _get_wsp
  3251                           
  3252  00AA                     l2563:	
  3253                           ;incstack = 0
  3254                           ; Regs used in _get_wsp: [wreg+status,2+status,0+pclath+cstack]
  3255                           
  3256                           
  3257                           ;main.c: 563:     if (ff.bits.ALLOW_MEASURE) {
  3258  00AA  1E77               	btfss	_ff,4
  3259  00AB  28AD               	goto	u2431
  3260  00AC  28AE               	goto	u2430
  3261  00AD                     u2431:
  3262  00AD  2904               	goto	l490
  3263  00AE                     u2430:
  3264  00AE                     l477:	
  3265                           ;main.c: 565:         static signed char bad_measures_counter = 0;;main.c: 566:         
      +                          do { LATCbits.LATC1 = 1; } while(0);
  3266                           
  3267  00AE  0022               	movlb	2	; select bank2
  3268  00AF  148E               	bsf	14,1	;volatile
  3269  00B0                     l479:	
  3270                           ;main.c: 567:         do { ANSELCbits.ANSC3 = 1; } while(0);
  3271                           
  3272  00B0  0023               	movlb	3	; select bank3
  3273  00B1  158E               	bsf	14,3	;volatile
  3274  00B2                     l2565:
  3275                           
  3276                           ;main.c: 568:         _delay((unsigned long)((1)*(16000000/4000.0)));
  3277  00B2  3006               	movlw	6
  3278  00B3  00F4               	movwf	??_get_wsp
  3279  00B4  3030               	movlw	48
  3280  00B5                     u2557:
  3281  00B5  0B89               	decfsz	9,f
  3282  00B6  28B5               	goto	u2557
  3283  00B7  0BF4               	decfsz	??_get_wsp,f
  3284  00B8  28B5               	goto	u2557
  3285  00B9  3200               	nop2
  3286  00BA                     l2567:
  3287                           
  3288                           ;main.c: 569:         unsigned res = ADC_GetConversion(PIN_WSP_STATE);
  3289  00BA  3007               	movlw	7
  3290  00BB  3183  236E  3180   	fcall	_ADC_GetConversion
  3291  00BE  00F4               	movwf	??_get_wsp
  3292  00BF  01F5               	clrf	??_get_wsp+1
  3293  00C0  0874               	movf	??_get_wsp,w
  3294  00C1  0020               	movlb	0	; select bank0
  3295  00C2  00C4               	movwf	get_wsp@res
  3296  00C3  0875               	movf	??_get_wsp+1,w
  3297  00C4  00C5               	movwf	get_wsp@res+1
  3298  00C5                     l2569:
  3299  00C5  0023               	movlb	3	; select bank3
  3300  00C6  118E               	bcf	14,3	;volatile
  3301  00C7                     l2571:
  3302  00C7  0022               	movlb	2	; select bank2
  3303  00C8  108E               	bcf	14,1	;volatile
  3304  00C9                     l2573:
  3305                           
  3306                           ;main.c: 572:         if (res < BAD_WSP_VOLTAGE) {
  3307  00C9  3000               	movlw	0
  3308  00CA  0020               	movlb	0	; select bank0
  3309  00CB  0245               	subwf	get_wsp@res+1,w
  3310  00CC  3080               	movlw	128
  3311  00CD  1903               	skipnz
  3312  00CE  0244               	subwf	get_wsp@res,w
  3313  00CF  1803               	skipnc
  3314  00D0  28D2               	goto	u2441
  3315  00D1  28D3               	goto	u2440
  3316  00D2                     u2441:
  3317  00D2  28D8               	goto	l2577
  3318  00D3                     u2440:
  3319  00D3                     l2575:
  3320                           
  3321                           ;main.c: 573:             bad_measures_counter++;
  3322  00D3  3001               	movlw	1
  3323  00D4  00F4               	movwf	??_get_wsp
  3324  00D5  0874               	movf	??_get_wsp,w
  3325  00D6  07B7               	addwf	get_wsp@bad_measures_counter,f
  3326                           
  3327                           ;main.c: 574:         } else {
  3328  00D7  28E5               	goto	l2581
  3329  00D8                     l2577:
  3330                           
  3331                           ;main.c: 575:             if (res > GOOD_WSP_VOLTAGE) {
  3332  00D8  3000               	movlw	0
  3333  00D9  0245               	subwf	get_wsp@res+1,w
  3334  00DA  308F               	movlw	143
  3335  00DB  1903               	skipnz
  3336  00DC  0244               	subwf	get_wsp@res,w
  3337  00DD  1C03               	skipc
  3338  00DE  28E0               	goto	u2451
  3339  00DF  28E1               	goto	u2450
  3340  00E0                     u2451:
  3341  00E0  28E5               	goto	l2581
  3342  00E1                     u2450:
  3343  00E1                     l2579:
  3344                           
  3345                           ;main.c: 576:                 bad_measures_counter--;
  3346  00E1  30FF               	movlw	255
  3347  00E2  00F4               	movwf	??_get_wsp
  3348  00E3  0874               	movf	??_get_wsp,w
  3349  00E4  07B7               	addwf	get_wsp@bad_measures_counter,f
  3350  00E5                     l2581:
  3351                           
  3352                           ;main.c: 579:         if (bad_measures_counter > WSP_MEAS_COUNT) {
  3353  00E5  0837               	movf	get_wsp@bad_measures_counter,w
  3354  00E6  3A80               	xorlw	128
  3355  00E7  3E7B               	addlw	-133
  3356  00E8  1C03               	skipc
  3357  00E9  28EB               	goto	u2461
  3358  00EA  28EC               	goto	u2460
  3359  00EB                     u2461:
  3360  00EB  28F4               	goto	l2587
  3361  00EC                     u2460:
  3362  00EC                     l2583:
  3363                           
  3364                           ;main.c: 580:             start_alarm();
  3365  00EC  3185  2521  3180   	fcall	_start_alarm
  3366  00EF                     l2585:
  3367                           
  3368                           ;main.c: 581:             bad_measures_counter = WSP_MEAS_COUNT;
  3369  00EF  3004               	movlw	4
  3370  00F0  00F4               	movwf	??_get_wsp
  3371  00F1  0874               	movf	??_get_wsp,w
  3372  00F2  0020               	movlb	0	; select bank0
  3373  00F3  00B7               	movwf	get_wsp@bad_measures_counter
  3374  00F4                     l2587:
  3375                           
  3376                           ;main.c: 583:         if (bad_measures_counter < -WSP_MEAS_COUNT) {
  3377  00F4  0837               	movf	get_wsp@bad_measures_counter,w
  3378  00F5  3A80               	xorlw	128
  3379  00F6  3E84               	addlw	132
  3380  00F7  1803               	skipnc
  3381  00F8  28FA               	goto	u2471
  3382  00F9  28FB               	goto	u2470
  3383  00FA                     u2471:
  3384  00FA  2903               	goto	l2593
  3385  00FB                     u2470:
  3386  00FB                     l2589:
  3387                           
  3388                           ;main.c: 584:             clear_alarm();
  3389  00FB  3185  2535  3180   	fcall	_clear_alarm
  3390  00FE                     l2591:
  3391                           
  3392                           ;main.c: 585:             bad_measures_counter = -WSP_MEAS_COUNT;
  3393  00FE  30FC               	movlw	252
  3394  00FF  00F4               	movwf	??_get_wsp
  3395  0100  0874               	movf	??_get_wsp,w
  3396  0101  0020               	movlb	0	; select bank0
  3397  0102  00B7               	movwf	get_wsp@bad_measures_counter
  3398  0103                     l2593:
  3399                           
  3400                           ;main.c: 587:         ff.bits.ALLOW_MEASURE = 0;
  3401  0103  1277               	bcf	_ff,4
  3402  0104                     l490:
  3403  0104  0008               	return
  3404  0105                     __end_of_get_wsp:
  3405                           
  3406                           	psect	text18
  3407  0521                     __ptext18:	
  3408 ;; *************** function _start_alarm *****************
  3409 ;; Defined at:
  3410 ;;		line 301 in file "main.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;		None
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;		None
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		None
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1
  3424 ;;      Params:         0       0       0
  3425 ;;      Locals:         0       0       0
  3426 ;;      Temps:          0       0       0
  3427 ;;      Totals:         0       0       0
  3428 ;;Total ram usage:        0 bytes
  3429 ;; Hardware stack levels used: 1
  3430 ;; Hardware stack levels required when called: 7
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_get_wsp
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438  0521                     _start_alarm:	
  3439                           ;psect for function _start_alarm
  3440                           
  3441  0521                     l2553:	
  3442                           ;incstack = 0
  3443                           ; Regs used in _start_alarm: []
  3444                           
  3445                           
  3446                           ;main.c: 302:     ff.bits.ALARM_ON = 1;
  3447  0521  1477               	bsf	_ff,0
  3448                           
  3449                           ;main.c: 303:     ff.bits.ALARM_OFF = 0;
  3450  0522  10F7               	bcf	_ff,1
  3451                           
  3452                           ;main.c: 304:     ff.bits.MELODY_ON = 1;
  3453  0523  177A               	bsf	_ff+3,6
  3454                           
  3455                           ;main.c: 305:     ff.bits.SIREN = 1;
  3456  0524  15F9               	bsf	_ff+2,3
  3457  0525                     l373:
  3458  0525  0008               	return
  3459  0526                     __end_of_start_alarm:
  3460                           
  3461                           	psect	text19
  3462  0535                     __ptext19:	
  3463 ;; *************** function _clear_alarm *****************
  3464 ;; Defined at:
  3465 ;;		line 308 in file "main.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;		None
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;		None
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  1    wreg      void 
  3472 ;; Registers used:
  3473 ;;		None
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMMON   BANK0   BANK1
  3479 ;;      Params:         0       0       0
  3480 ;;      Locals:         0       0       0
  3481 ;;      Temps:          0       0       0
  3482 ;;      Totals:         0       0       0
  3483 ;;Total ram usage:        0 bytes
  3484 ;; Hardware stack levels used: 1
  3485 ;; Hardware stack levels required when called: 7
  3486 ;; This function calls:
  3487 ;;		Nothing
  3488 ;; This function is called by:
  3489 ;;		_get_wsp
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493  0535                     _clear_alarm:	
  3494                           ;psect for function _clear_alarm
  3495                           
  3496  0535                     l2555:	
  3497                           ;incstack = 0
  3498                           ; Regs used in _clear_alarm: []
  3499                           
  3500                           
  3501                           ;main.c: 309:     ff.bits.ALARM_ON = 0;
  3502  0535  1077               	bcf	_ff,0
  3503                           
  3504                           ;main.c: 310:     ff.bits.ALARM_OFF = 1;
  3505  0536  14F7               	bsf	_ff,1
  3506  0537                     l376:
  3507  0537  0008               	return
  3508  0538                     __end_of_clear_alarm:
  3509                           
  3510                           	psect	text20
  3511  036E                     __ptext20:	
  3512 ;; *************** function _ADC_GetConversion *****************
  3513 ;; Defined at:
  3514 ;;		line 112 in file "mcc_generated_files/adc.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;  channel         1    wreg     enum E2178
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;  channel         1    3[COMMON] enum E2178
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      unsigned char 
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMMON   BANK0   BANK1
  3528 ;;      Params:         0       0       0
  3529 ;;      Locals:         1       0       0
  3530 ;;      Temps:          1       0       0
  3531 ;;      Totals:         2       0       0
  3532 ;;Total ram usage:        2 bytes
  3533 ;; Hardware stack levels used: 1
  3534 ;; Hardware stack levels required when called: 7
  3535 ;; This function calls:
  3536 ;;		Nothing
  3537 ;; This function is called by:
  3538 ;;		_get_wsp
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542  036E                     _ADC_GetConversion:	
  3543                           ;psect for function _ADC_GetConversion
  3544                           
  3545                           
  3546                           ;incstack = 0
  3547                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3548                           ;ADC_GetConversion@channel stored from wreg
  3549  036E  00F3               	movwf	ADC_GetConversion@channel
  3550  036F                     l2541:
  3551                           
  3552                           ;mcc_generated_files/adc.c: 112: char ADC_GetConversion(adc_channel_t channel);mcc_gener
      +                          ated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = channel;
  3553  036F  0873               	movf	ADC_GetConversion@channel,w
  3554  0370  00F2               	movwf	??_ADC_GetConversion
  3555  0371  0DF2               	rlf	??_ADC_GetConversion,f
  3556  0372  0DF2               	rlf	??_ADC_GetConversion,f
  3557  0373  0021               	movlb	1	; select bank1
  3558  0374  081D               	movf	29,w	;volatile
  3559  0375  0672               	xorwf	??_ADC_GetConversion,w
  3560  0376  3983               	andlw	-125
  3561  0377  0672               	xorwf	??_ADC_GetConversion,w
  3562  0378  009D               	movwf	29	;volatile
  3563  0379                     l2543:
  3564                           
  3565                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  3566  0379  141D               	bsf	29,0	;volatile
  3567  037A                     l2545:
  3568                           
  3569                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  3570  037A  3006               	movlw	6
  3571  037B                     u2567:
  3572  037B  0B89               	decfsz	9,f
  3573  037C  2B7B               	goto	u2567
  3574  037D  3200               	nop2
  3575  037E                     l2547:
  3576                           
  3577                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  3578  037E  0021               	movlb	1	; select bank1
  3579  037F  149D               	bsf	29,1	;volatile
  3580  0380                     l61:	
  3581                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  3582                           
  3583                           
  3584                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  3585  0380  189D               	btfsc	29,1	;volatile
  3586  0381  2B83               	goto	u2411
  3587  0382  2B84               	goto	u2410
  3588  0383                     u2411:
  3589  0383  2B80               	goto	l61
  3590  0384                     u2410:
  3591  0384                     l2549:
  3592                           
  3593                           ;mcc_generated_files/adc.c: 132:     return (ADRESH);
  3594  0384  081C               	movf	28,w	;volatile
  3595  0385                     l64:
  3596  0385  0008               	return
  3597  0386                     __end_of_ADC_GetConversion:
  3598                           
  3599                           	psect	text21
  3600  027E                     __ptext21:	
  3601 ;; *************** function _get_jump *****************
  3602 ;; Defined at:
  3603 ;;		line 656 in file "main.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;		None
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;		None
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  1    wreg      void 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2, status,0
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMMON   BANK0   BANK1
  3617 ;;      Params:         0       0       0
  3618 ;;      Locals:         0       0       0
  3619 ;;      Temps:          1       0       0
  3620 ;;      Totals:         1       0       0
  3621 ;;Total ram usage:        1 bytes
  3622 ;; Hardware stack levels used: 1
  3623 ;; Hardware stack levels required when called: 7
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_main
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631  027E                     _get_jump:	
  3632                           ;psect for function _get_jump
  3633                           
  3634  027E                     l2345:	
  3635                           ;incstack = 0
  3636                           ; Regs used in _get_jump: [wreg+status,2+status,0]
  3637                           
  3638                           
  3639                           ;main.c: 658:     static signed char jump_counter;;main.c: 660:     if (ff.bits.ALLOW_JU
      +                          MP) {
  3640  027E  1F77               	btfss	_ff,6
  3641  027F  2A81               	goto	u2151
  3642  0280  2A82               	goto	u2150
  3643  0281                     u2151:
  3644  0281  2AB0               	goto	l524
  3645  0282                     u2150:
  3646  0282                     l515:	
  3647                           ;main.c: 662:         do { ANSELAbits.ANSA1 = 0; } while(0);
  3648                           
  3649  0282  0023               	movlb	3	; select bank3
  3650  0283  108C               	bcf	12,1	;volatile
  3651  0284                     l517:	
  3652                           ;main.c: 663:         do { TRISAbits.TRISA1 = 1; } while(0);
  3653                           
  3654  0284  0021               	movlb	1	; select bank1
  3655  0285  148C               	bsf	12,1	;volatile
  3656  0286                     l518:
  3657                           
  3658                           ;main.c: 664:         if (PORTAbits.RA1) jump_counter++;
  3659  0286  0020               	movlb	0	; select bank0
  3660  0287  1C8C               	btfss	12,1	;volatile
  3661  0288  2A8A               	goto	u2161
  3662  0289  2A8B               	goto	u2160
  3663  028A                     u2161:
  3664  028A  2A90               	goto	l2349
  3665  028B                     u2160:
  3666  028B                     l2347:
  3667  028B  3001               	movlw	1
  3668  028C  00F2               	movwf	??_get_jump
  3669  028D  0872               	movf	??_get_jump,w
  3670  028E  07B5               	addwf	get_jump@jump_counter,f
  3671  028F  2A94               	goto	l2351
  3672  0290                     l2349:
  3673  0290  30FF               	movlw	255
  3674  0291  00F2               	movwf	??_get_jump
  3675  0292  0872               	movf	??_get_jump,w
  3676  0293  07B5               	addwf	get_jump@jump_counter,f
  3677  0294                     l2351:
  3678                           
  3679                           ;main.c: 673:         if (jump_counter > JUMP_MEAS_COUNT) {
  3680  0294  0835               	movf	get_jump@jump_counter,w
  3681  0295  3A80               	xorlw	128
  3682  0296  3E75               	addlw	-139
  3683  0297  1C03               	skipc
  3684  0298  2A9A               	goto	u2171
  3685  0299  2A9B               	goto	u2170
  3686  029A                     u2171:
  3687  029A  2AA2               	goto	l2359
  3688  029B                     u2170:
  3689  029B                     l2353:
  3690                           
  3691                           ;main.c: 674:             jump_counter = JUMP_MEAS_COUNT;
  3692  029B  300A               	movlw	10
  3693  029C  00F2               	movwf	??_get_jump
  3694  029D  0872               	movf	??_get_jump,w
  3695  029E  00B5               	movwf	get_jump@jump_counter
  3696  029F                     l2355:
  3697                           
  3698                           ;main.c: 675:             ff.bits.JUMP_LOW = 0;
  3699  029F  13F7               	bcf	_ff,7
  3700  02A0                     l2357:
  3701                           
  3702                           ;main.c: 676:             ff.bits.JUMP_HIGH = 1;
  3703  02A0  1478               	bsf	_ff+1,0
  3704                           
  3705                           ;main.c: 677:         } else if (jump_counter<-JUMP_MEAS_COUNT) {
  3706  02A1  2AAF               	goto	l2367
  3707  02A2                     l2359:
  3708  02A2  0835               	movf	get_jump@jump_counter,w
  3709  02A3  3A80               	xorlw	128
  3710  02A4  3E8A               	addlw	138
  3711  02A5  1803               	skipnc
  3712  02A6  2AA8               	goto	u2181
  3713  02A7  2AA9               	goto	u2180
  3714  02A8                     u2181:
  3715  02A8  2AAF               	goto	l2367
  3716  02A9                     u2180:
  3717  02A9                     l2361:
  3718                           
  3719                           ;main.c: 678:             jump_counter = -JUMP_MEAS_COUNT;
  3720  02A9  30F6               	movlw	246
  3721  02AA  00F2               	movwf	??_get_jump
  3722  02AB  0872               	movf	??_get_jump,w
  3723  02AC  00B5               	movwf	get_jump@jump_counter
  3724  02AD                     l2363:
  3725                           
  3726                           ;main.c: 679:             ff.bits.JUMP_LOW = 1;
  3727  02AD  17F7               	bsf	_ff,7
  3728  02AE                     l2365:
  3729                           
  3730                           ;main.c: 680:             ff.bits.JUMP_HIGH = 0;
  3731  02AE  1078               	bcf	_ff+1,0
  3732  02AF                     l2367:
  3733                           
  3734                           ;main.c: 682:         ff.bits.ALLOW_JUMP = 0;
  3735  02AF  1377               	bcf	_ff,6
  3736  02B0                     l524:
  3737  02B0  0008               	return
  3738  02B1                     __end_of_get_jump:
  3739                           
  3740                           	psect	text22
  3741  0157                     __ptext22:	
  3742 ;; *************** function _get_fun *****************
  3743 ;; Defined at:
  3744 ;;		line 591 in file "main.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;		None
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;		None
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  1    wreg      void 
  3751 ;; Registers used:
  3752 ;;		wreg, status,2, status,0
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMMON   BANK0   BANK1
  3758 ;;      Params:         0       0       0
  3759 ;;      Locals:         0       0       0
  3760 ;;      Temps:          1       0       0
  3761 ;;      Totals:         1       0       0
  3762 ;;Total ram usage:        1 bytes
  3763 ;; Hardware stack levels used: 1
  3764 ;; Hardware stack levels required when called: 7
  3765 ;; This function calls:
  3766 ;;		Nothing
  3767 ;; This function is called by:
  3768 ;;		_main
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772  0157                     _get_fun:	
  3773                           ;psect for function _get_fun
  3774                           
  3775  0157                     l2311:	
  3776                           ;incstack = 0
  3777                           ; Regs used in _get_fun: [wreg+status,2+status,0]
  3778                           
  3779                           
  3780                           ;main.c: 593:     if (ff.bits.ALLOW_FUN) {
  3781  0157  1EF7               	btfss	_ff,5
  3782  0158  295A               	goto	u2111
  3783  0159  295B               	goto	u2110
  3784  015A                     u2111:
  3785  015A  2996               	goto	l509
  3786  015B                     u2110:
  3787  015B                     l496:	
  3788                           ;main.c: 595:         static signed char fun_counter;;main.c: 596:         do { LATCbits
      +                          .LATC1 = 1; } while(0);
  3789                           
  3790  015B  0022               	movlb	2	; select bank2
  3791  015C  148E               	bsf	14,1	;volatile
  3792  015D                     l2313:
  3793                           
  3794                           ;main.c: 597:         _delay((unsigned long)((1)*(16000000/4000.0)));
  3795  015D  3006               	movlw	6
  3796  015E  00F2               	movwf	??_get_fun
  3797  015F  3030               	movlw	48
  3798  0160                     u2577:
  3799  0160  0B89               	decfsz	9,f
  3800  0161  2960               	goto	u2577
  3801  0162  0BF2               	decfsz	??_get_fun,f
  3802  0163  2960               	goto	u2577
  3803  0164  3200               	nop2
  3804  0165                     l2315:
  3805  0165  0023               	movlb	3	; select bank3
  3806  0166  110E               	bcf	14,2	;volatile
  3807  0167                     l2317:
  3808  0167  0021               	movlb	1	; select bank1
  3809  0168  150E               	bsf	14,2	;volatile
  3810  0169                     l2319:
  3811                           
  3812                           ;main.c: 600:         if (PORTCbits.RC2) fun_counter--;
  3813  0169  0020               	movlb	0	; select bank0
  3814  016A  1D0E               	btfss	14,2	;volatile
  3815  016B  296D               	goto	u2121
  3816  016C  296E               	goto	u2120
  3817  016D                     u2121:
  3818  016D  2973               	goto	l2323
  3819  016E                     u2120:
  3820  016E                     l2321:
  3821  016E  30FF               	movlw	255
  3822  016F  00F2               	movwf	??_get_fun
  3823  0170  0872               	movf	??_get_fun,w
  3824  0171  07B6               	addwf	get_fun@fun_counter,f
  3825  0172  2977               	goto	l2325
  3826  0173                     l2323:
  3827  0173  3001               	movlw	1
  3828  0174  00F2               	movwf	??_get_fun
  3829  0175  0872               	movf	??_get_fun,w
  3830  0176  07B6               	addwf	get_fun@fun_counter,f
  3831  0177                     l2325:
  3832  0177  0022               	movlb	2	; select bank2
  3833  0178  108E               	bcf	14,1	;volatile
  3834  0179                     l2327:
  3835                           
  3836                           ;main.c: 608:         if (fun_counter > FUN_MEAS_COUNT) {
  3837  0179  0020               	movlb	0	; select bank0
  3838  017A  0836               	movf	get_fun@fun_counter,w
  3839  017B  3A80               	xorlw	128
  3840  017C  3E75               	addlw	-139
  3841  017D  1C03               	skipc
  3842  017E  2980               	goto	u2131
  3843  017F  2981               	goto	u2130
  3844  0180                     u2131:
  3845  0180  2988               	goto	l2335
  3846  0181                     u2130:
  3847  0181                     l2329:
  3848                           
  3849                           ;main.c: 609:             fun_counter = FUN_MEAS_COUNT;
  3850  0181  300A               	movlw	10
  3851  0182  00F2               	movwf	??_get_fun
  3852  0183  0872               	movf	??_get_fun,w
  3853  0184  00B6               	movwf	get_fun@fun_counter
  3854  0185                     l2331:
  3855                           
  3856                           ;main.c: 610:             ff.bits.FUN_LOW = 0;
  3857  0185  11F7               	bcf	_ff,3
  3858  0186                     l2333:
  3859                           
  3860                           ;main.c: 611:             ff.bits.FUN_HIGH = 1;
  3861  0186  1577               	bsf	_ff,2
  3862                           
  3863                           ;main.c: 612:         } else if (fun_counter<-FUN_MEAS_COUNT) {
  3864  0187  2995               	goto	l2343
  3865  0188                     l2335:
  3866  0188  0836               	movf	get_fun@fun_counter,w
  3867  0189  3A80               	xorlw	128
  3868  018A  3E8A               	addlw	138
  3869  018B  1803               	skipnc
  3870  018C  298E               	goto	u2141
  3871  018D  298F               	goto	u2140
  3872  018E                     u2141:
  3873  018E  2995               	goto	l2343
  3874  018F                     u2140:
  3875  018F                     l2337:
  3876                           
  3877                           ;main.c: 613:             fun_counter = -FUN_MEAS_COUNT;
  3878  018F  30F6               	movlw	246
  3879  0190  00F2               	movwf	??_get_fun
  3880  0191  0872               	movf	??_get_fun,w
  3881  0192  00B6               	movwf	get_fun@fun_counter
  3882  0193                     l2339:
  3883                           
  3884                           ;main.c: 614:             ff.bits.FUN_LOW = 1;
  3885  0193  15F7               	bsf	_ff,3
  3886  0194                     l2341:
  3887                           
  3888                           ;main.c: 615:             ff.bits.FUN_HIGH = 0;
  3889  0194  1177               	bcf	_ff,2
  3890  0195                     l2343:
  3891                           
  3892                           ;main.c: 617:         ff.bits.ALLOW_FUN = 0;
  3893  0195  12F7               	bcf	_ff,5
  3894  0196                     l509:
  3895  0196  0008               	return
  3896  0197                     __end_of_get_fun:
  3897                           
  3898                           	psect	text23
  3899  02B1                     __ptext23:	
  3900 ;; *************** function _fun_work *****************
  3901 ;; Defined at:
  3902 ;;		line 313 in file "main.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;		None
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		wreg, status,2, status,0, pclath, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMMON   BANK0   BANK1
  3916 ;;      Params:         0       0       0
  3917 ;;      Locals:         0       0       0
  3918 ;;      Temps:          1       0       0
  3919 ;;      Totals:         1       0       0
  3920 ;;Total ram usage:        1 bytes
  3921 ;; Hardware stack levels used: 1
  3922 ;; Hardware stack levels required when called: 9
  3923 ;; This function calls:
  3924 ;;		_close
  3925 ;;		_open
  3926 ;; This function is called by:
  3927 ;;		_main
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931  02B1                     _fun_work:	
  3932                           ;psect for function _fun_work
  3933                           
  3934  02B1                     l2235:	
  3935                           ;incstack = 0
  3936                           ; Regs used in _fun_work: [wreg+status,2+status,0+pclath+cstack]
  3937                           
  3938                           
  3939                           ;main.c: 314:     {;main.c: 315:         if (
  3940  02B1  1DF7               	btfss	_ff,3
  3941  02B2  2AB4               	goto	u1931
  3942  02B3  2AB5               	goto	u1930
  3943  02B4                     u1931:
  3944  02B4  2ACA               	goto	l2249
  3945  02B5                     u1930:
  3946  02B5                     l2237:
  3947  02B5  1977               	btfsc	_ff,2
  3948  02B6  2AB8               	goto	u1941
  3949  02B7  2AB9               	goto	u1940
  3950  02B8                     u1941:
  3951  02B8  2ACA               	goto	l2249
  3952  02B9                     u1940:
  3953  02B9                     l2239:
  3954  02B9  1CF7               	btfss	_ff,1
  3955  02BA  2ABC               	goto	u1951
  3956  02BB  2ABD               	goto	u1950
  3957  02BC                     u1951:
  3958  02BC  2ACA               	goto	l2249
  3959  02BD                     u1950:
  3960  02BD                     l2241:
  3961  02BD  1978               	btfsc	_ff+1,2
  3962  02BE  2AC0               	goto	u1961
  3963  02BF  2AC1               	goto	u1960
  3964  02C0                     u1961:
  3965  02C0  2ACA               	goto	l2249
  3966  02C1                     u1960:
  3967  02C1                     l2243:
  3968  02C1  18F8               	btfsc	_ff+1,1
  3969  02C2  2AC4               	goto	u1971
  3970  02C3  2AC5               	goto	u1970
  3971  02C4                     u1971:
  3972  02C4  2ACA               	goto	l2249
  3973  02C5                     u1970:
  3974  02C5                     l2245:
  3975                           
  3976                           ;main.c: 320:                 !ff.bits.OPENING) {;main.c: 321:             beep_short_co
      +                          unt = 1;
  3977  02C5  01FB               	clrf	_beep_short_count
  3978  02C6  0AFB               	incf	_beep_short_count,f
  3979  02C7                     l2247:
  3980                           
  3981                           ;main.c: 322:             open();
  3982  02C7  3183  2386  3182   	fcall	_open
  3983  02CA                     l2249:
  3984                           
  3985                           ;main.c: 324:         if (
  3986  02CA  1D77               	btfss	_ff,2
  3987  02CB  2ACD               	goto	u1981
  3988  02CC  2ACE               	goto	u1980
  3989  02CD                     u1981:
  3990  02CD  2AE1               	goto	l381
  3991  02CE                     u1980:
  3992  02CE                     l2251:
  3993  02CE  19F7               	btfsc	_ff,3
  3994  02CF  2AD1               	goto	u1991
  3995  02D0  2AD2               	goto	u1990
  3996  02D1                     u1991:
  3997  02D1  2AE1               	goto	l381
  3998  02D2                     u1990:
  3999  02D2                     l2253:
  4000  02D2  1A78               	btfsc	_ff+1,4
  4001  02D3  2AD5               	goto	u2001
  4002  02D4  2AD6               	goto	u2000
  4003  02D5                     u2001:
  4004  02D5  2AE1               	goto	l381
  4005  02D6                     u2000:
  4006  02D6                     l2255:
  4007  02D6  19F8               	btfsc	_ff+1,3
  4008  02D7  2AD9               	goto	u2011
  4009  02D8  2ADA               	goto	u2010
  4010  02D9                     u2011:
  4011  02D9  2AE1               	goto	l381
  4012  02DA                     u2010:
  4013  02DA                     l2257:
  4014                           
  4015                           ;main.c: 328:                 !ff.bits.CLOSING) {;main.c: 329:             beep_short_co
      +                          unt = 2;
  4016  02DA  3002               	movlw	2
  4017  02DB  00F3               	movwf	??_fun_work
  4018  02DC  0873               	movf	??_fun_work,w
  4019  02DD  00FB               	movwf	_beep_short_count
  4020  02DE                     l2259:
  4021                           
  4022                           ;main.c: 330:             close();
  4023  02DE  3183  23B6  3182   	fcall	_close
  4024  02E1                     l381:
  4025  02E1  0008               	return
  4026  02E2                     __end_of_fun_work:
  4027                           
  4028                           	psect	text24
  4029  0386                     __ptext24:	
  4030 ;; *************** function _open *****************
  4031 ;; Defined at:
  4032 ;;		line 245 in file "main.c"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;		None
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;		None
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  1    wreg      void 
  4039 ;; Registers used:
  4040 ;;		wreg, status,2, status,0, pclath, cstack
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMMON   BANK0   BANK1
  4046 ;;      Params:         0       0       0
  4047 ;;      Locals:         0       0       0
  4048 ;;      Temps:          0       0       0
  4049 ;;      Totals:         0       0       0
  4050 ;;Total ram usage:        0 bytes
  4051 ;; Hardware stack levels used: 1
  4052 ;; Hardware stack levels required when called: 8
  4053 ;; This function calls:
  4054 ;;		_go_open
  4055 ;;		_go_open_alt
  4056 ;;		_rele_off
  4057 ;; This function is called by:
  4058 ;;		_fun_work
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062  0386                     _open:	
  4063                           ;psect for function _open
  4064                           
  4065  0386                     l2171:	
  4066                           ;incstack = 0
  4067                           ; Regs used in _open: [wreg+status,2+status,0+pclath+cstack]
  4068                           
  4069                           
  4070                           ;main.c: 246:     if (ff.bits.CLOSING) {
  4071  0386  1DF8               	btfss	_ff+1,3
  4072  0387  2B89               	goto	u1811
  4073  0388  2B8A               	goto	u1810
  4074  0389                     u1811:
  4075  0389  2B8E               	goto	l351
  4076  038A                     u1810:
  4077  038A                     l2173:
  4078                           
  4079                           ;main.c: 247:         rele_off();
  4080  038A  3184  245E  3183   	fcall	_rele_off
  4081                           
  4082                           ;main.c: 248:     } else {
  4083  038D  2B9D               	goto	l356
  4084  038E                     l351:
  4085                           
  4086                           ;main.c: 249:         if (ff.bits.NORMAL_WORK_MODE_ON) {
  4087  038E  1C7A               	btfss	_ff+3,0
  4088  038F  2B91               	goto	u1821
  4089  0390  2B92               	goto	u1820
  4090  0391                     u1821:
  4091  0391  2B96               	goto	l353
  4092  0392                     u1820:
  4093  0392                     l2175:
  4094                           
  4095                           ;main.c: 250:             go_open();
  4096  0392  3183  239E  3183   	fcall	_go_open
  4097                           
  4098                           ;main.c: 251:         } else if (ff.bits.UNIVERSAL_VORK_MODE_ON) {
  4099  0395  2B9D               	goto	l356
  4100  0396                     l353:
  4101  0396  1CFA               	btfss	_ff+3,1
  4102  0397  2B99               	goto	u1831
  4103  0398  2B9A               	goto	u1830
  4104  0399                     u1831:
  4105  0399  2B9D               	goto	l356
  4106  039A                     u1830:
  4107  039A                     l2177:
  4108                           
  4109                           ;main.c: 252:             go_open_alt();
  4110  039A  3184  24C5  3183   	fcall	_go_open_alt
  4111  039D                     l356:
  4112  039D  0008               	return
  4113  039E                     __end_of_open:
  4114                           
  4115                           	psect	text25
  4116  04C5                     __ptext25:	
  4117 ;; *************** function _go_open_alt *****************
  4118 ;; Defined at:
  4119 ;;		line 208 in file "main.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;		None
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;		None
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  1    wreg      void 
  4126 ;; Registers used:
  4127 ;;		None
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMMON   BANK0   BANK1
  4133 ;;      Params:         0       0       0
  4134 ;;      Locals:         0       0       0
  4135 ;;      Temps:          0       0       0
  4136 ;;      Totals:         0       0       0
  4137 ;;Total ram usage:        0 bytes
  4138 ;; Hardware stack levels used: 1
  4139 ;; Hardware stack levels required when called: 7
  4140 ;; This function calls:
  4141 ;;		Nothing
  4142 ;; This function is called by:
  4143 ;;		_open
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147  04C5                     _go_open_alt:	
  4148                           ;psect for function _go_open_alt
  4149                           
  4150  04C5                     l1375:	
  4151                           ;incstack = 0
  4152                           ; Regs used in _go_open_alt: []
  4153                           
  4154                           
  4155                           ;main.c: 209:     if (!ff.bits.OPENED && ff.bits.MOVING_ALLOWED) {
  4156  04C5  1978               	btfsc	_ff+1,2
  4157  04C6  2CC8               	goto	u281
  4158  04C7  2CC9               	goto	u280
  4159  04C8                     u281:
  4160  04C8  2CD1               	goto	l335
  4161  04C9                     u280:
  4162  04C9                     l1377:
  4163  04C9  1FF9               	btfss	_ff+2,7
  4164  04CA  2CCC               	goto	u291
  4165  04CB  2CCD               	goto	u290
  4166  04CC                     u291:
  4167  04CC  2CD1               	goto	l335
  4168  04CD                     u290:
  4169  04CD                     l1379:
  4170                           
  4171                           ;main.c: 210:         ff.bits.CLOSED = 0;
  4172  04CD  1278               	bcf	_ff+1,4
  4173                           
  4174                           ;main.c: 211:         ff.bits.OPENED = 1;
  4175  04CE  1578               	bsf	_ff+1,2
  4176                           
  4177                           ;main.c: 213:         ff.bits.RELE_CONTROL_ON = 0;
  4178  04CF  1378               	bcf	_ff+1,6
  4179                           
  4180                           ;main.c: 214:         ff.bits.RELE_POWER_ON = 0;
  4181  04D0  12F8               	bcf	_ff+1,5
  4182  04D1                     l335:
  4183  04D1  0008               	return
  4184  04D2                     __end_of_go_open_alt:
  4185                           
  4186                           	psect	text26
  4187  039E                     __ptext26:	
  4188 ;; *************** function _go_open *****************
  4189 ;; Defined at:
  4190 ;;		line 179 in file "main.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;		None
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;		None
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  1    wreg      void 
  4197 ;; Registers used:
  4198 ;;		wreg
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMMON   BANK0   BANK1
  4204 ;;      Params:         0       0       0
  4205 ;;      Locals:         0       0       0
  4206 ;;      Temps:          0       0       0
  4207 ;;      Totals:         0       0       0
  4208 ;;Total ram usage:        0 bytes
  4209 ;; Hardware stack levels used: 1
  4210 ;; Hardware stack levels required when called: 7
  4211 ;; This function calls:
  4212 ;;		Nothing
  4213 ;; This function is called by:
  4214 ;;		_open
  4215 ;;		_autorotation_work
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219  039E                     _go_open:	
  4220                           ;psect for function _go_open
  4221                           
  4222  039E                     l2029:	
  4223                           ;incstack = 0
  4224                           ; Regs used in _go_open: [wreg]
  4225                           
  4226                           
  4227                           ;main.c: 181:     if (!ff.bits.OPENED && !ff.bits.OPENING && ff.bits.MOVING_ALLOWED) {
  4228  039E  1978               	btfsc	_ff+1,2
  4229  039F  2BA1               	goto	u1481
  4230  03A0  2BA2               	goto	u1480
  4231  03A1                     u1481:
  4232  03A1  2BB5               	goto	l323
  4233  03A2                     u1480:
  4234  03A2                     l2031:
  4235  03A2  18F8               	btfsc	_ff+1,1
  4236  03A3  2BA5               	goto	u1491
  4237  03A4  2BA6               	goto	u1490
  4238  03A5                     u1491:
  4239  03A5  2BB5               	goto	l323
  4240  03A6                     u1490:
  4241  03A6                     l2033:
  4242  03A6  1FF9               	btfss	_ff+2,7
  4243  03A7  2BA9               	goto	u1501
  4244  03A8  2BAA               	goto	u1500
  4245  03A9                     u1501:
  4246  03A9  2BB5               	goto	l323
  4247  03AA                     u1500:
  4248  03AA                     l2035:
  4249                           
  4250                           ;main.c: 182:         ff.bits.OPENING = 1;
  4251  03AA  14F8               	bsf	_ff+1,1
  4252                           
  4253                           ;main.c: 183:         ff.bits.CLOSED = 0;
  4254  03AB  1278               	bcf	_ff+1,4
  4255                           
  4256                           ;main.c: 184:         ff.bits.CLOSING = 0;
  4257  03AC  11F8               	bcf	_ff+1,3
  4258                           
  4259                           ;main.c: 187:         ff.bits.RELE_CONTROL_ON = 0;
  4260  03AD  1378               	bcf	_ff+1,6
  4261                           
  4262                           ;main.c: 188:         ff.bits.RELE_POWER_ON = 1;
  4263  03AE  16F8               	bsf	_ff+1,5
  4264  03AF                     l2037:
  4265                           
  4266                           ;main.c: 190:         time_rele_power = RELE_POWER_WORK_DELAY;
  4267  03AF  300F               	movlw	15
  4268  03B0  0020               	movlb	0	; select bank0
  4269  03B1  00B1               	movwf	_time_rele_power
  4270  03B2  3000               	movlw	0
  4271  03B3  00B2               	movwf	_time_rele_power+1
  4272  03B4                     l2039:
  4273                           
  4274                           ;main.c: 192:         ff.bits.AUTOROTATION_WORK = 0;
  4275  03B4  12FA               	bcf	_ff+3,5
  4276  03B5                     l323:
  4277  03B5  0008               	return
  4278  03B6                     __end_of_go_open:
  4279                           
  4280                           	psect	text27
  4281  03B6                     __ptext27:	
  4282 ;; *************** function _close *****************
  4283 ;; Defined at:
  4284 ;;		line 233 in file "main.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;		None
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;		None
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      void 
  4291 ;; Registers used:
  4292 ;;		wreg, status,2, status,0, pclath, cstack
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMMON   BANK0   BANK1
  4298 ;;      Params:         0       0       0
  4299 ;;      Locals:         0       0       0
  4300 ;;      Temps:          0       0       0
  4301 ;;      Totals:         0       0       0
  4302 ;;Total ram usage:        0 bytes
  4303 ;; Hardware stack levels used: 1
  4304 ;; Hardware stack levels required when called: 8
  4305 ;; This function calls:
  4306 ;;		_go_close
  4307 ;;		_go_close_alt
  4308 ;;		_rele_off
  4309 ;; This function is called by:
  4310 ;;		_fun_work
  4311 ;;		_main
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315  03B6                     _close:	
  4316                           ;psect for function _close
  4317                           
  4318  03B6                     l2163:	
  4319                           ;incstack = 0
  4320                           ; Regs used in _close: [wreg+status,2+status,0+pclath+cstack]
  4321                           
  4322                           
  4323                           ;main.c: 234:     if (ff.bits.OPENING) {
  4324  03B6  1CF8               	btfss	_ff+1,1
  4325  03B7  2BB9               	goto	u1781
  4326  03B8  2BBA               	goto	u1780
  4327  03B9                     u1781:
  4328  03B9  2BBE               	goto	l343
  4329  03BA                     u1780:
  4330  03BA                     l2165:
  4331                           
  4332                           ;main.c: 235:         rele_off();
  4333  03BA  3184  245E  3183   	fcall	_rele_off
  4334                           
  4335                           ;main.c: 236:     } else {
  4336  03BD  2BCD               	goto	l348
  4337  03BE                     l343:
  4338                           
  4339                           ;main.c: 237:         if (ff.bits.NORMAL_WORK_MODE_ON) {
  4340  03BE  1C7A               	btfss	_ff+3,0
  4341  03BF  2BC1               	goto	u1791
  4342  03C0  2BC2               	goto	u1790
  4343  03C1                     u1791:
  4344  03C1  2BC6               	goto	l345
  4345  03C2                     u1790:
  4346  03C2                     l2167:
  4347                           
  4348                           ;main.c: 238:             go_close();
  4349  03C2  3182  22E2  3183   	fcall	_go_close
  4350                           
  4351                           ;main.c: 239:         } else if (ff.bits.UNIVERSAL_VORK_MODE_ON) {
  4352  03C5  2BCD               	goto	l348
  4353  03C6                     l345:
  4354  03C6  1CFA               	btfss	_ff+3,1
  4355  03C7  2BC9               	goto	u1801
  4356  03C8  2BCA               	goto	u1800
  4357  03C9                     u1801:
  4358  03C9  2BCD               	goto	l348
  4359  03CA                     u1800:
  4360  03CA                     l2169:
  4361                           
  4362                           ;main.c: 240:             go_close_alt();
  4363  03CA  3184  2496  3183   	fcall	_go_close_alt
  4364  03CD                     l348:
  4365  03CD  0008               	return
  4366  03CE                     __end_of_close:
  4367                           
  4368                           	psect	text28
  4369  045E                     __ptext28:	
  4370 ;; *************** function _rele_off *****************
  4371 ;; Defined at:
  4372 ;;		line 218 in file "main.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;		None
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;		None
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  1    wreg      void 
  4379 ;; Registers used:
  4380 ;;		wreg
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMMON   BANK0   BANK1
  4386 ;;      Params:         0       0       0
  4387 ;;      Locals:         0       0       0
  4388 ;;      Temps:          1       0       0
  4389 ;;      Totals:         1       0       0
  4390 ;;Total ram usage:        1 bytes
  4391 ;; Hardware stack levels used: 1
  4392 ;; Hardware stack levels required when called: 7
  4393 ;; This function calls:
  4394 ;;		Nothing
  4395 ;; This function is called by:
  4396 ;;		_close
  4397 ;;		_open
  4398 ;;		_switch_wm
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402  045E                     _rele_off:	
  4403                           ;psect for function _rele_off
  4404                           
  4405  045E                     l2043:	
  4406                           ;incstack = 0
  4407                           ; Regs used in _rele_off: [wreg]
  4408                           
  4409                           
  4410                           ;main.c: 219:     ff.bits.RELE_CONTROL_ON = 0;
  4411  045E  1378               	bcf	_ff+1,6
  4412                           
  4413                           ;main.c: 220:     ff.bits.RELE_POWER_ON = 0;
  4414  045F  12F8               	bcf	_ff+1,5
  4415                           
  4416                           ;main.c: 221:     ff.bits.CLOSING = 0;
  4417  0460  11F8               	bcf	_ff+1,3
  4418                           
  4419                           ;main.c: 222:     ff.bits.OPENING = 0;
  4420  0461  10F8               	bcf	_ff+1,1
  4421                           
  4422                           ;main.c: 223:     ff.bits.CLOSED = 0;
  4423  0462  1278               	bcf	_ff+1,4
  4424                           
  4425                           ;main.c: 224:     if (ff.bits.UNIVERSAL_VORK_MODE_ON) {
  4426  0463  1CFA               	btfss	_ff+3,1
  4427  0464  2C66               	goto	u1511
  4428  0465  2C67               	goto	u1510
  4429  0466                     u1511:
  4430  0466  2C69               	goto	l338
  4431  0467                     u1510:
  4432  0467                     l2045:
  4433                           
  4434                           ;main.c: 225:         ff.bits.OPENED = 1;
  4435  0467  1578               	bsf	_ff+1,2
  4436                           
  4437                           ;main.c: 226:     } else {
  4438  0468  2C6A               	goto	l339
  4439  0469                     l338:
  4440                           
  4441                           ;main.c: 227:         ff.bits.OPENED = 0;
  4442  0469  1178               	bcf	_ff+1,2
  4443  046A                     l339:	
  4444                           ;main.c: 228:     }
  4445                           
  4446                           
  4447                           ;main.c: 229:     ff.bits.MOVING_ALLOWED = 0;
  4448  046A  13F9               	bcf	_ff+2,7
  4449  046B                     l2047:
  4450                           
  4451                           ;main.c: 230:     time_moving_wait = MOVING_WAIT_DELAY;
  4452  046B  3002               	movlw	2
  4453  046C  00F2               	movwf	??_rele_off
  4454  046D  0872               	movf	??_rele_off,w
  4455  046E  0020               	movlb	0	; select bank0
  4456  046F  00BD               	movwf	_time_moving_wait
  4457  0470                     l340:
  4458  0470  0008               	return
  4459  0471                     __end_of_rele_off:
  4460                           
  4461                           	psect	text29
  4462  0496                     __ptext29:	
  4463 ;; *************** function _go_close_alt *****************
  4464 ;; Defined at:
  4465 ;;		line 197 in file "main.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;		None
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;		None
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  1    wreg      void 
  4472 ;; Registers used:
  4473 ;;		None
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMMON   BANK0   BANK1
  4479 ;;      Params:         0       0       0
  4480 ;;      Locals:         0       0       0
  4481 ;;      Temps:          0       0       0
  4482 ;;      Totals:         0       0       0
  4483 ;;Total ram usage:        0 bytes
  4484 ;; Hardware stack levels used: 1
  4485 ;; Hardware stack levels required when called: 7
  4486 ;; This function calls:
  4487 ;;		Nothing
  4488 ;; This function is called by:
  4489 ;;		_close
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493  0496                     _go_close_alt:	
  4494                           ;psect for function _go_close_alt
  4495                           
  4496  0496                     l1371:	
  4497                           ;incstack = 0
  4498                           ; Regs used in _go_close_alt: []
  4499                           
  4500                           
  4501                           ;main.c: 199:     if ((!ff.bits.CLOSED && ff.bits.MOVING_ALLOWED) || ff.bits.ALARM_ON) {
  4502  0496  1A78               	btfsc	_ff+1,4
  4503  0497  2C99               	goto	u251
  4504  0498  2C9A               	goto	u250
  4505  0499                     u251:
  4506  0499  2C9E               	goto	l330
  4507  049A                     u250:
  4508  049A                     l1373:
  4509  049A  1BF9               	btfsc	_ff+2,7
  4510  049B  2C9D               	goto	u261
  4511  049C  2C9E               	goto	u260
  4512  049D                     u261:
  4513  049D  2CA2               	goto	l328
  4514  049E                     u260:
  4515  049E                     l330:
  4516  049E  1C77               	btfss	_ff,0
  4517  049F  2CA1               	goto	u271
  4518  04A0  2CA2               	goto	u270
  4519  04A1                     u271:
  4520  04A1  2CA6               	goto	l331
  4521  04A2                     u270:
  4522  04A2                     l328:
  4523                           
  4524                           ;main.c: 200:         ff.bits.OPENED = 0;
  4525  04A2  1178               	bcf	_ff+1,2
  4526                           
  4527                           ;main.c: 201:         ff.bits.CLOSED = 1;
  4528  04A3  1678               	bsf	_ff+1,4
  4529                           
  4530                           ;main.c: 203:         ff.bits.RELE_CONTROL_ON = 0;
  4531  04A4  1378               	bcf	_ff+1,6
  4532                           
  4533                           ;main.c: 204:         ff.bits.RELE_POWER_ON = 1;
  4534  04A5  16F8               	bsf	_ff+1,5
  4535  04A6                     l331:
  4536  04A6  0008               	return
  4537  04A7                     __end_of_go_close_alt:
  4538                           
  4539                           	psect	text30
  4540  02E2                     __ptext30:	
  4541 ;; *************** function _go_close *****************
  4542 ;; Defined at:
  4543 ;;		line 160 in file "main.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;		None
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;		None
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  1    wreg      void 
  4550 ;; Registers used:
  4551 ;;		wreg
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMMON   BANK0   BANK1
  4557 ;;      Params:         0       0       0
  4558 ;;      Locals:         0       0       0
  4559 ;;      Temps:          0       0       0
  4560 ;;      Totals:         0       0       0
  4561 ;;Total ram usage:        0 bytes
  4562 ;; Hardware stack levels used: 1
  4563 ;; Hardware stack levels required when called: 7
  4564 ;; This function calls:
  4565 ;;		Nothing
  4566 ;; This function is called by:
  4567 ;;		_close
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571  02E2                     _go_close:	
  4572                           ;psect for function _go_close
  4573                           
  4574  02E2                     l2019:	
  4575                           ;incstack = 0
  4576                           ; Regs used in _go_close: [wreg]
  4577                           
  4578                           
  4579                           ;main.c: 162:     if (!ff.bits.CLOSING && !ff.bits.CLOSED && ff.bits.MOVING_ALLOWED) {
  4580  02E2  19F8               	btfsc	_ff+1,3
  4581  02E3  2AE5               	goto	u1451
  4582  02E4  2AE6               	goto	u1450
  4583  02E5                     u1451:
  4584  02E5  2B06               	goto	l319
  4585  02E6                     u1450:
  4586  02E6                     l2021:
  4587  02E6  1A78               	btfsc	_ff+1,4
  4588  02E7  2AE9               	goto	u1461
  4589  02E8  2AEA               	goto	u1460
  4590  02E9                     u1461:
  4591  02E9  2B06               	goto	l319
  4592  02EA                     u1460:
  4593  02EA                     l2023:
  4594  02EA  1FF9               	btfss	_ff+2,7
  4595  02EB  2AED               	goto	u1471
  4596  02EC  2AEE               	goto	u1470
  4597  02ED                     u1471:
  4598  02ED  2B06               	goto	l319
  4599  02EE                     u1470:
  4600  02EE                     l2025:
  4601                           
  4602                           ;main.c: 163:         ff.bits.CLOSING = 1;
  4603  02EE  15F8               	bsf	_ff+1,3
  4604                           
  4605                           ;main.c: 164:         ff.bits.OPENED = 0;
  4606  02EF  1178               	bcf	_ff+1,2
  4607                           
  4608                           ;main.c: 165:         ff.bits.OPENING = 0;
  4609  02F0  10F8               	bcf	_ff+1,1
  4610                           
  4611                           ;main.c: 167:         ff.bits.RELE_POWER_ON = 0;
  4612  02F1  12F8               	bcf	_ff+1,5
  4613                           
  4614                           ;main.c: 168:         ff.bits.RELE_CONTROL_ON = 1;
  4615  02F2  1778               	bsf	_ff+1,6
  4616  02F3                     l2027:
  4617                           
  4618                           ;main.c: 170:         time_rele_control = RELE_GAP + RELE_POWER_WORK_DELAY + RELE_GAP;
  4619  02F3  3013               	movlw	19
  4620  02F4  0020               	movlb	0	; select bank0
  4621  02F5  00AF               	movwf	_time_rele_control
  4622  02F6  3000               	movlw	0
  4623  02F7  00B0               	movwf	_time_rele_control+1
  4624                           
  4625                           ;main.c: 171:         time_rele_power = RELE_POWER_WORK_DELAY;
  4626  02F8  300F               	movlw	15
  4627  02F9  00B1               	movwf	_time_rele_power
  4628  02FA  3000               	movlw	0
  4629  02FB  00B2               	movwf	_time_rele_power+1
  4630                           
  4631                           ;main.c: 172:         time_rele_gap = RELE_GAP;
  4632  02FC  3002               	movlw	2
  4633  02FD  00AD               	movwf	_time_rele_gap
  4634  02FE  3000               	movlw	0
  4635  02FF  00AE               	movwf	_time_rele_gap+1
  4636                           
  4637                           ;main.c: 174:         time_rotation = 0;
  4638  0300  3000               	movlw	0
  4639  0301  00A0               	movwf	_time_rotation
  4640  0302  3000               	movlw	0
  4641  0303  00A1               	movwf	_time_rotation+1
  4642  0304  3000               	movlw	0
  4643  0305  00A2               	movwf	_time_rotation+2
  4644  0306                     l319:
  4645  0306  0008               	return
  4646  0307                     __end_of_go_close:
  4647                           
  4648                           	psect	intentry
  4649  0004                     __pintentry:	
  4650 ;; *************** function _INTERRUPT_InterruptManager *****************
  4651 ;; Defined at:
  4652 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;		None
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;		None
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  1    wreg      void 
  4659 ;; Registers used:
  4660 ;;		wreg, status,2, status,0, pclath, cstack
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMMON   BANK0   BANK1
  4666 ;;      Params:         0       0       0
  4667 ;;      Locals:         0       0       0
  4668 ;;      Temps:          0       0       0
  4669 ;;      Totals:         0       0       0
  4670 ;;Total ram usage:        0 bytes
  4671 ;; Hardware stack levels used: 1
  4672 ;; Hardware stack levels required when called: 6
  4673 ;; This function calls:
  4674 ;;		_TMR0_ISR
  4675 ;;		_TMR2_ISR
  4676 ;; This function is called by:
  4677 ;;		Interrupt level 1
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681  0004                     _INTERRUPT_InterruptManager:
  4682                           
  4683                           ;incstack = 0
  4684  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4685                           
  4686                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  4687  0005  3180               	pagesel	$
  4688  0006                     i1l2421:
  4689                           
  4690                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4691  0006  1E8B               	btfss	11,5	;volatile
  4692  0007  2809               	goto	u219_21
  4693  0008  280A               	goto	u219_20
  4694  0009                     u219_21:
  4695  0009  2812               	goto	i1l108
  4696  000A                     u219_20:
  4697  000A                     i1l2423:
  4698  000A  1D0B               	btfss	11,2	;volatile
  4699  000B  280D               	goto	u220_21
  4700  000C  280E               	goto	u220_20
  4701  000D                     u220_21:
  4702  000D  2812               	goto	i1l108
  4703  000E                     u220_20:
  4704  000E                     i1l2425:
  4705                           
  4706                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  4707  000E  3184  24A7  3180   	fcall	_TMR0_ISR
  4708                           
  4709                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  4710  0011  2824               	goto	i1l114
  4711  0012                     i1l108:	
  4712                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  4713                           
  4714  0012  1F0B               	btfss	11,6	;volatile
  4715  0013  2815               	goto	u221_21
  4716  0014  2816               	goto	u221_20
  4717  0015                     u221_21:
  4718  0015  2824               	goto	i1l114
  4719  0016                     u221_20:
  4720  0016                     i1l2427:
  4721                           
  4722                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  4723  0016  0021               	movlb	1	; select bank1
  4724  0017  1C91               	btfss	17,1	;volatile
  4725  0018  281A               	goto	u222_21
  4726  0019  281B               	goto	u222_20
  4727  001A                     u222_21:
  4728  001A  2824               	goto	i1l113
  4729  001B                     u222_20:
  4730  001B                     i1l2429:
  4731  001B  0020               	movlb	0	; select bank0
  4732  001C  1C91               	btfss	17,1	;volatile
  4733  001D  281F               	goto	u223_21
  4734  001E  2820               	goto	u223_20
  4735  001F                     u223_21:
  4736  001F  2824               	goto	i1l113
  4737  0020                     u223_20:
  4738  0020                     i1l2431:
  4739                           
  4740                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
  4741  0020  3184  24B7  3180   	fcall	_TMR2_ISR
  4742                           
  4743                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4744  0023  2824               	goto	i1l114
  4745  0024                     i1l113:	
  4746                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  4747                           
  4748  0024                     i1l114:
  4749  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4750  0025  0009               	retfie
  4751  0026                     __end_of_INTERRUPT_InterruptManager:
  4752                           
  4753                           	psect	text32
  4754  04B7                     __ptext32:	
  4755 ;; *************** function _TMR2_ISR *****************
  4756 ;; Defined at:
  4757 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;		None
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;		None
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  1    wreg      void 
  4764 ;; Registers used:
  4765 ;;		wreg, status,2, status,0, pclath, cstack
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMMON   BANK0   BANK1
  4771 ;;      Params:         0       0       0
  4772 ;;      Locals:         0       0       0
  4773 ;;      Temps:          0       0       0
  4774 ;;      Totals:         0       0       0
  4775 ;;Total ram usage:        0 bytes
  4776 ;; Hardware stack levels used: 1
  4777 ;; Hardware stack levels required when called: 5
  4778 ;; This function calls:
  4779 ;;		Absolute function
  4780 ;;		_TMR2_DefaultInterruptHandler
  4781 ;;		_ms_tick
  4782 ;; This function is called by:
  4783 ;;		_INTERRUPT_InterruptManager
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787  04B7                     _TMR2_ISR:	
  4788                           ;psect for function _TMR2_ISR
  4789                           
  4790  04B7                     i1l2229:	
  4791                           ;incstack = 0
  4792                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  4793                           
  4794                           
  4795                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
  4796  04B7  0020               	movlb	0	; select bank0
  4797  04B8  1091               	bcf	17,1	;volatile
  4798  04B9                     i1l2231:
  4799                           
  4800                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
  4801  04B9  0841               	movf	_TMR2_InterruptHandler,w
  4802  04BA  0442               	iorwf	_TMR2_InterruptHandler+1,w
  4803  04BB  1903               	btfsc	3,2
  4804  04BC  2CBE               	goto	u192_21
  4805  04BD  2CBF               	goto	u192_20
  4806  04BE                     u192_21:
  4807  04BE  2CC4               	goto	i1l154
  4808  04BF                     u192_20:
  4809  04BF                     i1l2233:
  4810                           
  4811                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
  4812  04BF  0842               	movf	_TMR2_InterruptHandler+1,w
  4813  04C0  008A               	movwf	10
  4814  04C1  0841               	movf	_TMR2_InterruptHandler,w
  4815  04C2  000A               	callw
  4816  04C3  3184               	pagesel	$
  4817  04C4                     i1l154:
  4818  04C4  0008               	return
  4819  04C5                     __end_of_TMR2_ISR:
  4820                           
  4821                           	psect	text33
  4822  0550                     __ptext33:	
  4823 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4824 ;; Defined at:
  4825 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  4826 ;; Parameters:    Size  Location     Type
  4827 ;;		None
  4828 ;; Auto vars:     Size  Location     Type
  4829 ;;		None
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  1    wreg      void 
  4832 ;; Registers used:
  4833 ;;		None
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMMON   BANK0   BANK1
  4839 ;;      Params:         0       0       0
  4840 ;;      Locals:         0       0       0
  4841 ;;      Temps:          0       0       0
  4842 ;;      Totals:         0       0       0
  4843 ;;Total ram usage:        0 bytes
  4844 ;; Hardware stack levels used: 1
  4845 ;; This function calls:
  4846 ;;		Nothing
  4847 ;; This function is called by:
  4848 ;;		_TMR2_Initialize
  4849 ;;		_TMR2_ISR
  4850 ;; This function uses a non-reentrant model
  4851 ;;
  4852                           
  4853  0550                     _TMR2_DefaultInterruptHandler:	
  4854                           ;psect for function _TMR2_DefaultInterruptHandler
  4855                           
  4856  0550                     i1l160:	
  4857                           ;incstack = 0
  4858                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  4859                           
  4860  0550  0008               	return
  4861  0551                     __end_of_TMR2_DefaultInterruptHandler:
  4862                           
  4863                           	psect	text34
  4864  01D6                     __ptext34:	
  4865 ;; *************** function _ms_tick *****************
  4866 ;; Defined at:
  4867 ;;		line 491 in file "main.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;		None
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;		None
  4872 ;; Return value:  Size  Location     Type
  4873 ;;                  1    wreg      void 
  4874 ;; Registers used:
  4875 ;;		wreg, status,2, status,0, pclath, cstack
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMMON   BANK0   BANK1
  4881 ;;      Params:         0       0       0
  4882 ;;      Locals:         0       0       0
  4883 ;;      Temps:          0       0       0
  4884 ;;      Totals:         0       0       0
  4885 ;;Total ram usage:        0 bytes
  4886 ;; Hardware stack levels used: 1
  4887 ;; Hardware stack levels required when called: 4
  4888 ;; This function calls:
  4889 ;;		_ms_100_work
  4890 ;;		_ms_200_work
  4891 ;;		_sec_work
  4892 ;;		_stop_tone
  4893 ;; This function is called by:
  4894 ;;		_start_setup
  4895 ;;		_TMR2_ISR
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899  01D6                     _ms_tick:	
  4900                           ;psect for function _ms_tick
  4901                           
  4902  01D6                     i1l2183:	
  4903                           ;incstack = 0
  4904                           ; Regs used in _ms_tick: [wreg+status,2+status,0+pclath+cstack]
  4905                           
  4906                           
  4907                           ;main.c: 492:     static unsigned ms_count = 0;;main.c: 493:     static unsigned s_count
      +                           = 0;;main.c: 494:     ms_count++;
  4908  01D6  3001               	movlw	1
  4909  01D7  0020               	movlb	0	; select bank0
  4910  01D8  07A5               	addwf	ms_tick@ms_count,f
  4911  01D9  3000               	movlw	0
  4912  01DA  3DA6               	addwfc	ms_tick@ms_count+1,f
  4913  01DB                     i1l2185:
  4914                           
  4915                           ;main.c: 495:     if (time_tone > 0) {
  4916  01DB  082B               	movf	_time_tone,w
  4917  01DC  042C               	iorwf	_time_tone+1,w
  4918  01DD  1903               	btfsc	3,2
  4919  01DE  29E0               	goto	u184_21
  4920  01DF  29E1               	goto	u184_20
  4921  01E0                     u184_21:
  4922  01E0  29EE               	goto	i1l2193
  4923  01E1                     u184_20:
  4924  01E1                     i1l2187:
  4925                           
  4926                           ;main.c: 496:         time_tone--;
  4927  01E1  3001               	movlw	1
  4928  01E2  02AB               	subwf	_time_tone,f
  4929  01E3  3000               	movlw	0
  4930  01E4  3BAC               	subwfb	_time_tone+1,f
  4931  01E5                     i1l2189:
  4932                           
  4933                           ;main.c: 497:         if (time_tone == 0) {
  4934  01E5  082B               	movf	_time_tone,w
  4935  01E6  042C               	iorwf	_time_tone+1,w
  4936  01E7  1D03               	btfss	3,2
  4937  01E8  29EA               	goto	u185_21
  4938  01E9  29EB               	goto	u185_20
  4939  01EA                     u185_21:
  4940  01EA  29EE               	goto	i1l2193
  4941  01EB                     u185_20:
  4942  01EB                     i1l2191:
  4943                           
  4944                           ;main.c: 498:             stop_tone();
  4945  01EB  3185  252A  3181   	fcall	_stop_tone
  4946  01EE                     i1l2193:
  4947                           
  4948                           ;main.c: 502:     ff.bits.ALLOW_FUN = 1;
  4949  01EE  16F7               	bsf	_ff,5
  4950  01EF                     i1l2195:
  4951                           
  4952                           ;main.c: 503:     ff.bits.ALLOW_JUMP = 1;
  4953  01EF  1777               	bsf	_ff,6
  4954  01F0                     i1l2197:
  4955                           
  4956                           ;main.c: 505:     if (ms_count == 100) {
  4957  01F0  3064               	movlw	100
  4958  01F1  0020               	movlb	0	; select bank0
  4959  01F2  0625               	xorwf	ms_tick@ms_count,w
  4960  01F3  0426               	iorwf	ms_tick@ms_count+1,w
  4961  01F4  1D03               	btfss	3,2
  4962  01F5  29F7               	goto	u186_21
  4963  01F6  29F8               	goto	u186_20
  4964  01F7                     u186_21:
  4965  01F7  2A05               	goto	i1l2207
  4966  01F8                     u186_20:
  4967  01F8                     i1l2199:
  4968                           
  4969                           ;main.c: 506:         ms_100_work();
  4970  01F8  3184  24F6  3181   	fcall	_ms_100_work
  4971  01FB                     i1l2201:
  4972                           
  4973                           ;main.c: 507:         ms_200_work();
  4974  01FB  3182  2213  3181   	fcall	_ms_200_work
  4975                           
  4976                           ;main.c: 508:         s_count++;
  4977  01FE  3001               	movlw	1
  4978  01FF  0020               	movlb	0	; select bank0
  4979  0200  07A3               	addwf	ms_tick@s_count,f
  4980  0201  3000               	movlw	0
  4981  0202  3DA4               	addwfc	ms_tick@s_count+1,f
  4982  0203                     i1l2203:
  4983                           
  4984                           ;main.c: 509:         ms_count = 0;
  4985  0203  01A5               	clrf	ms_tick@ms_count
  4986  0204  01A6               	clrf	ms_tick@ms_count+1
  4987  0205                     i1l2207:
  4988                           
  4989                           ;main.c: 517:     if (s_count == 10) {
  4990  0205  300A               	movlw	10
  4991  0206  0623               	xorwf	ms_tick@s_count,w
  4992  0207  0424               	iorwf	ms_tick@s_count+1,w
  4993  0208  1D03               	btfss	3,2
  4994  0209  2A0B               	goto	u187_21
  4995  020A  2A0C               	goto	u187_20
  4996  020B                     u187_21:
  4997  020B  2A12               	goto	i1l455
  4998  020C                     u187_20:
  4999  020C                     i1l2209:
  5000                           
  5001                           ;main.c: 518:         sec_work();
  5002  020C  3180  2037  3181   	fcall	_sec_work
  5003  020F                     i1l2211:
  5004                           
  5005                           ;main.c: 519:         s_count = 0;
  5006  020F  0020               	movlb	0	; select bank0
  5007  0210  01A3               	clrf	ms_tick@s_count
  5008  0211  01A4               	clrf	ms_tick@s_count+1
  5009  0212                     i1l455:
  5010  0212  0008               	return
  5011  0213                     __end_of_ms_tick:
  5012                           
  5013                           	psect	text35
  5014  052A                     __ptext35:	
  5015 ;; *************** function _stop_tone *****************
  5016 ;; Defined at:
  5017 ;;		line 128 in file "main.c"
  5018 ;; Parameters:    Size  Location     Type
  5019 ;;		None
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;		None
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  1    wreg      void 
  5024 ;; Registers used:
  5025 ;;		None
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMMON   BANK0   BANK1
  5031 ;;      Params:         0       0       0
  5032 ;;      Locals:         0       0       0
  5033 ;;      Temps:          0       0       0
  5034 ;;      Totals:         0       0       0
  5035 ;;Total ram usage:        0 bytes
  5036 ;; Hardware stack levels used: 1
  5037 ;; This function calls:
  5038 ;;		Nothing
  5039 ;; This function is called by:
  5040 ;;		_ms_tick
  5041 ;; This function uses a non-reentrant model
  5042 ;;
  5043                           
  5044  052A                     _stop_tone:	
  5045                           ;psect for function _stop_tone
  5046                           
  5047  052A                     i1l2017:	
  5048                           ;incstack = 0
  5049                           ; Regs used in _stop_tone: []
  5050                           
  5051                           
  5052                           ;main.c: 129:     ff.bits.ZUM_BUSY = 0;
  5053  052A  1279               	bcf	_ff+2,4
  5054                           
  5055                           ;main.c: 130:     ff.bits.TONE_ON = 0;
  5056  052B  10F9               	bcf	_ff+2,1
  5057                           
  5058                           ;main.c: 131:     ff.bits.TONE_OFF = 1;
  5059  052C  1579               	bsf	_ff+2,2
  5060  052D                     i1l300:
  5061  052D  0008               	return
  5062  052E                     __end_of_stop_tone:
  5063                           
  5064                           	psect	text36
  5065  0037                     __ptext36:	
  5066 ;; *************** function _sec_work *****************
  5067 ;; Defined at:
  5068 ;;		line 411 in file "main.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;		None
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;		None
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  1    wreg      void 
  5075 ;; Registers used:
  5076 ;;		wreg, status,2, status,0, pclath, cstack
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMMON   BANK0   BANK1
  5082 ;;      Params:         0       0       0
  5083 ;;      Locals:         0       0       0
  5084 ;;      Temps:          1       0       0
  5085 ;;      Totals:         1       0       0
  5086 ;;Total ram usage:        1 bytes
  5087 ;; Hardware stack levels used: 1
  5088 ;; Hardware stack levels required when called: 1
  5089 ;; This function calls:
  5090 ;;		_minute_tick
  5091 ;;		_rele_tick
  5092 ;;		_sec_30_work
  5093 ;; This function is called by:
  5094 ;;		_ms_tick
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098  0037                     _sec_work:	
  5099                           ;psect for function _sec_work
  5100                           
  5101  0037                     i1l2049:	
  5102                           ;incstack = 0
  5103                           ; Regs used in _sec_work: [wreg+status,2+status,0+pclath+cstack]
  5104                           
  5105                           
  5106                           ;main.c: 417:     static char sec_count = 0;;main.c: 419:     sec_count++;
  5107  0037  3001               	movlw	1
  5108  0038  00F1               	movwf	??_sec_work
  5109  0039  0871               	movf	??_sec_work,w
  5110  003A  0020               	movlb	0	; select bank0
  5111  003B  07B9               	addwf	sec_work@sec_count,f
  5112  003C                     i1l2051:
  5113                           
  5114                           ;main.c: 420:     if (!ff.bits.MOVING_ALLOWED) {
  5115  003C  1BF9               	btfsc	_ff+2,7
  5116  003D  283F               	goto	u152_21
  5117  003E  2840               	goto	u152_20
  5118  003F                     u152_21:
  5119  003F  2849               	goto	i1l409
  5120  0040                     u152_20:
  5121  0040                     i1l2053:
  5122                           
  5123                           ;main.c: 421:         if (time_moving_wait > 0) {
  5124  0040  083D               	movf	_time_moving_wait,w
  5125  0041  1903               	btfsc	3,2
  5126  0042  2844               	goto	u153_21
  5127  0043  2845               	goto	u153_20
  5128  0044                     u153_21:
  5129  0044  2848               	goto	i1l410
  5130  0045                     u153_20:
  5131  0045                     i1l2055:
  5132                           
  5133                           ;main.c: 422:             time_moving_wait--;
  5134  0045  3001               	movlw	1
  5135  0046  02BD               	subwf	_time_moving_wait,f
  5136                           
  5137                           ;main.c: 423:         } else {
  5138  0047  2849               	goto	i1l409
  5139  0048                     i1l410:
  5140                           
  5141                           ;main.c: 424:             ff.bits.MOVING_ALLOWED = 1;
  5142  0048  17F9               	bsf	_ff+2,7
  5143  0049                     i1l409:	
  5144                           ;main.c: 426:     }
  5145                           
  5146                           
  5147                           ;main.c: 427:     if (ff.bits.NORMAL_WORK_MODE_ON) {
  5148  0049  1C7A               	btfss	_ff+3,0
  5149  004A  284C               	goto	u154_21
  5150  004B  284D               	goto	u154_20
  5151  004C                     u154_21:
  5152  004C  285E               	goto	i1l2063
  5153  004D                     u154_20:
  5154  004D                     i1l2057:
  5155                           
  5156                           ;main.c: 428:         if (ff.bits.OPENED) time_rotation++;
  5157  004D  1D78               	btfss	_ff+1,2
  5158  004E  2850               	goto	u155_21
  5159  004F  2851               	goto	u155_20
  5160  0050                     u155_21:
  5161  0050  285B               	goto	i1l2061
  5162  0051                     u155_20:
  5163  0051                     i1l2059:
  5164  0051  3001               	movlw	1
  5165  0052  07A0               	addwf	_time_rotation,f
  5166  0053  3000               	movlw	0
  5167  0054  1803               	skipnc
  5168  0055  3001               	movlw	1
  5169  0056  07A1               	addwf	_time_rotation+1,f
  5170  0057  3000               	movlw	0
  5171  0058  1803               	skipnc
  5172  0059  3001               	movlw	1
  5173  005A  07A2               	addwf	_time_rotation+2,f
  5174  005B                     i1l2061:
  5175                           
  5176                           ;main.c: 429:         rele_tick();
  5177  005B  3181  2105  3180   	fcall	_rele_tick
  5178  005E                     i1l2063:
  5179                           
  5180                           ;main.c: 432:     if (ff.bits.ALARM_ON) {
  5181  005E  1C77               	btfss	_ff,0
  5182  005F  2861               	goto	u156_21
  5183  0060  2862               	goto	u156_20
  5184  0061                     u156_21:
  5185  0061  2880               	goto	i1l414
  5186  0062                     u156_20:
  5187  0062                     i1l2065:
  5188                           
  5189                           ;main.c: 434:         if (sec_count == 30|| sec_count==60) {
  5190  0062  301E               	movlw	30
  5191  0063  0020               	movlb	0	; select bank0
  5192  0064  0639               	xorwf	sec_work@sec_count,w
  5193  0065  1903               	btfsc	3,2
  5194  0066  2868               	goto	u157_21
  5195  0067  2869               	goto	u157_20
  5196  0068                     u157_21:
  5197  0068  286F               	goto	i1l2069
  5198  0069                     u157_20:
  5199  0069                     i1l2067:
  5200  0069  303C               	movlw	60
  5201  006A  0639               	xorwf	sec_work@sec_count,w
  5202  006B  1D03               	btfss	3,2
  5203  006C  286E               	goto	u158_21
  5204  006D  286F               	goto	u158_20
  5205  006E                     u158_21:
  5206  006E  2872               	goto	i1l2071
  5207  006F                     u158_20:
  5208  006F                     i1l2069:
  5209                           
  5210                           ;main.c: 435:             sec_30_work();
  5211  006F  3184  24EB  3180   	fcall	_sec_30_work
  5212  0072                     i1l2071:
  5213                           
  5214                           ;main.c: 438:         ff.bits.LED_ON = !ff.bits.LED_ON;
  5215  0072  1003               	clrc
  5216  0073  1D7A               	btfss	_ff+3,2
  5217  0074  1403               	setc
  5218  0075  3000               	movlw	0
  5219  0076  3D09               	addwfc	9,w
  5220  0077  00F1               	movwf	??_sec_work
  5221  0078  0DF1               	rlf	??_sec_work,f
  5222  0079  0DF1               	rlf	??_sec_work,f
  5223  007A  087A               	movf	_ff+3,w
  5224  007B  0671               	xorwf	??_sec_work,w
  5225  007C  39FB               	andlw	-5
  5226  007D  0671               	xorwf	??_sec_work,w
  5227  007E  00FA               	movwf	_ff+3
  5228                           
  5229                           ;main.c: 440:     } else if (ff.bits.ALARM_OFF) {
  5230  007F  289D               	goto	i1l2081
  5231  0080                     i1l414:
  5232  0080  1CF7               	btfss	_ff,1
  5233  0081  2883               	goto	u159_21
  5234  0082  2884               	goto	u159_20
  5235  0083                     u159_21:
  5236  0083  289D               	goto	i1l2081
  5237  0084                     u159_20:
  5238  0084                     i1l2073:
  5239                           
  5240                           ;main.c: 442:         static char iled;;main.c: 443:         iled++;
  5241  0084  3001               	movlw	1
  5242  0085  00F1               	movwf	??_sec_work
  5243  0086  0871               	movf	??_sec_work,w
  5244  0087  0020               	movlb	0	; select bank0
  5245  0088  07B8               	addwf	sec_work@iled,f
  5246  0089                     i1l2075:
  5247                           
  5248                           ;main.c: 444:         if (iled > 2) {
  5249  0089  3003               	movlw	3
  5250  008A  0238               	subwf	sec_work@iled,w
  5251  008B  1C03               	skipc
  5252  008C  288E               	goto	u160_21
  5253  008D  288F               	goto	u160_20
  5254  008E                     u160_21:
  5255  008E  289D               	goto	i1l2081
  5256  008F                     u160_20:
  5257  008F                     i1l2077:
  5258                           
  5259                           ;main.c: 445:             ff.bits.LED_ON = !ff.bits.LED_ON;
  5260  008F  1003               	clrc
  5261  0090  1D7A               	btfss	_ff+3,2
  5262  0091  1403               	setc
  5263  0092  3000               	movlw	0
  5264  0093  3D09               	addwfc	9,w
  5265  0094  00F1               	movwf	??_sec_work
  5266  0095  0DF1               	rlf	??_sec_work,f
  5267  0096  0DF1               	rlf	??_sec_work,f
  5268  0097  087A               	movf	_ff+3,w
  5269  0098  0671               	xorwf	??_sec_work,w
  5270  0099  39FB               	andlw	-5
  5271  009A  0671               	xorwf	??_sec_work,w
  5272  009B  00FA               	movwf	_ff+3
  5273  009C                     i1l2079:
  5274                           
  5275                           ;main.c: 446:             iled = 0;
  5276  009C  01B8               	clrf	sec_work@iled
  5277  009D                     i1l2081:
  5278                           
  5279                           ;main.c: 452:     if (sec_count == 60) {
  5280  009D  303C               	movlw	60
  5281  009E  0020               	movlb	0	; select bank0
  5282  009F  0639               	xorwf	sec_work@sec_count,w
  5283  00A0  1D03               	btfss	3,2
  5284  00A1  28A3               	goto	u161_21
  5285  00A2  28A4               	goto	u161_20
  5286  00A3                     u161_21:
  5287  00A3  28A9               	goto	i1l424
  5288  00A4                     u161_20:
  5289  00A4                     i1l2083:
  5290                           
  5291                           ;main.c: 453:         minute_tick();
  5292  00A4  3184  2471  3180   	fcall	_minute_tick
  5293  00A7                     i1l2085:
  5294                           
  5295                           ;main.c: 454:         sec_count = 0;
  5296  00A7  0020               	movlb	0	; select bank0
  5297  00A8  01B9               	clrf	sec_work@sec_count
  5298  00A9                     i1l424:
  5299  00A9  0008               	return
  5300  00AA                     __end_of_sec_work:
  5301                           
  5302                           	psect	text37
  5303  04EB                     __ptext37:	
  5304 ;; *************** function _sec_30_work *****************
  5305 ;; Defined at:
  5306 ;;		line 403 in file "main.c"
  5307 ;; Parameters:    Size  Location     Type
  5308 ;;		None
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;		None
  5311 ;; Return value:  Size  Location     Type
  5312 ;;                  1    wreg      void 
  5313 ;; Registers used:
  5314 ;;		wreg
  5315 ;; Tracked objects:
  5316 ;;		On entry : 0/0
  5317 ;;		On exit  : 0/0
  5318 ;;		Unchanged: 0/0
  5319 ;; Data sizes:     COMMON   BANK0   BANK1
  5320 ;;      Params:         0       0       0
  5321 ;;      Locals:         0       0       0
  5322 ;;      Temps:          1       0       0
  5323 ;;      Totals:         1       0       0
  5324 ;;Total ram usage:        1 bytes
  5325 ;; Hardware stack levels used: 1
  5326 ;; This function calls:
  5327 ;;		Nothing
  5328 ;; This function is called by:
  5329 ;;		_sec_work
  5330 ;; This function uses a non-reentrant model
  5331 ;;
  5332                           
  5333  04EB                     _sec_30_work:	
  5334                           ;psect for function _sec_30_work
  5335                           
  5336  04EB                     i1l1961:	
  5337                           ;incstack = 0
  5338                           ; Regs used in _sec_30_work: [wreg]
  5339                           
  5340                           
  5341                           ;main.c: 404:     if (ff.bits.SIREN) {
  5342  04EB  1DF9               	btfss	_ff+2,3
  5343  04EC  2CEE               	goto	u144_21
  5344  04ED  2CEF               	goto	u144_20
  5345  04EE                     u144_21:
  5346  04EE  2CF1               	goto	i1l1965
  5347  04EF                     u144_20:
  5348  04EF                     i1l1963:
  5349                           
  5350                           ;main.c: 405:         ff.bits.SIREN = 0;
  5351  04EF  11F9               	bcf	_ff+2,3
  5352                           
  5353                           ;main.c: 406:     } else {
  5354  04F0  2CF5               	goto	i1l404
  5355  04F1                     i1l1965:
  5356                           
  5357                           ;main.c: 407:         beep_short_count = 3;
  5358  04F1  3003               	movlw	3
  5359  04F2  00F0               	movwf	??_sec_30_work
  5360  04F3  0870               	movf	??_sec_30_work,w
  5361  04F4  00FB               	movwf	_beep_short_count
  5362  04F5                     i1l404:
  5363  04F5  0008               	return
  5364  04F6                     __end_of_sec_30_work:
  5365                           
  5366                           	psect	text38
  5367  0105                     __ptext38:	
  5368 ;; *************** function _rele_tick *****************
  5369 ;; Defined at:
  5370 ;;		line 257 in file "main.c"
  5371 ;; Parameters:    Size  Location     Type
  5372 ;;		None
  5373 ;; Auto vars:     Size  Location     Type
  5374 ;;		None
  5375 ;; Return value:  Size  Location     Type
  5376 ;;                  1    wreg      void 
  5377 ;; Registers used:
  5378 ;;		wreg, status,2, status,0
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : 0/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMMON   BANK0   BANK1
  5384 ;;      Params:         0       0       0
  5385 ;;      Locals:         0       0       0
  5386 ;;      Temps:          0       0       0
  5387 ;;      Totals:         0       0       0
  5388 ;;Total ram usage:        0 bytes
  5389 ;; Hardware stack levels used: 1
  5390 ;; This function calls:
  5391 ;;		Nothing
  5392 ;; This function is called by:
  5393 ;;		_sec_work
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397  0105                     _rele_tick:	
  5398                           ;psect for function _rele_tick
  5399                           
  5400  0105                     i1l1921:	
  5401                           ;incstack = 0
  5402                           ; Regs used in _rele_tick: [wreg+status,2+status,0]
  5403                           
  5404                           
  5405                           ;main.c: 259:     if (ff.bits.OPENING && ff.bits.CLOSING) {
  5406  0105  1CF8               	btfss	_ff+1,1
  5407  0106  2908               	goto	u132_21
  5408  0107  2909               	goto	u132_20
  5409  0108                     u132_21:
  5410  0108  290E               	goto	i1l359
  5411  0109                     u132_20:
  5412  0109                     i1l1923:
  5413  0109  1DF8               	btfss	_ff+1,3
  5414  010A  290C               	goto	u133_21
  5415  010B  290D               	goto	u133_20
  5416  010C                     u133_21:
  5417  010C  290E               	goto	i1l359
  5418  010D                     u133_20:
  5419  010D  2956               	goto	i1l360
  5420  010E                     i1l359:	
  5421                           ;main.c: 261:     }
  5422                           
  5423                           
  5424                           ;main.c: 264:     if (ff.bits.OPENING) {
  5425  010E  1CF8               	btfss	_ff+1,1
  5426  010F  2911               	goto	u134_21
  5427  0110  2912               	goto	u134_20
  5428  0111                     u134_21:
  5429  0111  2926               	goto	i1l361
  5430  0112                     u134_20:
  5431  0112                     i1l1927:
  5432                           
  5433                           ;main.c: 265:         if (time_rele_power > 0) {
  5434  0112  0020               	movlb	0	; select bank0
  5435  0113  0831               	movf	_time_rele_power,w
  5436  0114  0432               	iorwf	_time_rele_power+1,w
  5437  0115  1903               	btfsc	3,2
  5438  0116  2918               	goto	u135_21
  5439  0117  2919               	goto	u135_20
  5440  0118                     u135_21:
  5441  0118  2926               	goto	i1l361
  5442  0119                     u135_20:
  5443  0119                     i1l1929:
  5444                           
  5445                           ;main.c: 266:             time_rele_power--;
  5446  0119  3001               	movlw	1
  5447  011A  02B1               	subwf	_time_rele_power,f
  5448  011B  3000               	movlw	0
  5449  011C  3BB2               	subwfb	_time_rele_power+1,f
  5450  011D                     i1l1931:
  5451                           
  5452                           ;main.c: 267:             if (time_rele_power == 0) {
  5453  011D  0831               	movf	_time_rele_power,w
  5454  011E  0432               	iorwf	_time_rele_power+1,w
  5455  011F  1D03               	btfss	3,2
  5456  0120  2922               	goto	u136_21
  5457  0121  2923               	goto	u136_20
  5458  0122                     u136_21:
  5459  0122  2926               	goto	i1l361
  5460  0123                     u136_20:
  5461  0123                     i1l1933:
  5462                           
  5463                           ;main.c: 268:                 ff.bits.RELE_POWER_ON = 0;
  5464  0123  12F8               	bcf	_ff+1,5
  5465                           
  5466                           ;main.c: 269:                 ff.bits.OPENED = 1;
  5467  0124  1578               	bsf	_ff+1,2
  5468                           
  5469                           ;main.c: 270:                 ff.bits.OPENING = 0;
  5470  0125  10F8               	bcf	_ff+1,1
  5471  0126                     i1l361:	
  5472                           ;main.c: 273:     }
  5473                           
  5474                           
  5475                           ;main.c: 276:     if (ff.bits.CLOSING) {
  5476  0126  1DF8               	btfss	_ff+1,3
  5477  0127  2929               	goto	u137_21
  5478  0128  292A               	goto	u137_20
  5479  0129                     u137_21:
  5480  0129  2956               	goto	i1l360
  5481  012A                     u137_20:
  5482  012A                     i1l1935:
  5483                           
  5484                           ;main.c: 278:         if (time_rele_gap == 0) {
  5485  012A  0020               	movlb	0	; select bank0
  5486  012B  082D               	movf	_time_rele_gap,w
  5487  012C  042E               	iorwf	_time_rele_gap+1,w
  5488  012D  1D03               	btfss	3,2
  5489  012E  2930               	goto	u138_21
  5490  012F  2931               	goto	u138_20
  5491  0130                     u138_21:
  5492  0130  293F               	goto	i1l1943
  5493  0131                     u138_20:
  5494  0131                     i1l1937:
  5495                           
  5496                           ;main.c: 279:             if (time_rele_power > 0) {
  5497  0131  0831               	movf	_time_rele_power,w
  5498  0132  0432               	iorwf	_time_rele_power+1,w
  5499  0133  1903               	btfsc	3,2
  5500  0134  2936               	goto	u139_21
  5501  0135  2937               	goto	u139_20
  5502  0136                     u139_21:
  5503  0136  293D               	goto	i1l366
  5504  0137                     u139_20:
  5505  0137                     i1l1939:
  5506                           
  5507                           ;main.c: 280:                 ff.bits.RELE_POWER_ON = 1;
  5508  0137  16F8               	bsf	_ff+1,5
  5509  0138                     i1l1941:
  5510                           
  5511                           ;main.c: 281:                 time_rele_power--;
  5512  0138  3001               	movlw	1
  5513  0139  02B1               	subwf	_time_rele_power,f
  5514  013A  3000               	movlw	0
  5515  013B  3BB2               	subwfb	_time_rele_power+1,f
  5516                           
  5517                           ;main.c: 282:             } else {
  5518  013C  2943               	goto	i1l1945
  5519  013D                     i1l366:
  5520                           
  5521                           ;main.c: 283:                 ff.bits.RELE_POWER_ON = 0;
  5522  013D  12F8               	bcf	_ff+1,5
  5523  013E  2943               	goto	i1l1945
  5524  013F                     i1l1943:
  5525                           
  5526                           ;main.c: 286:             time_rele_gap--;
  5527  013F  3001               	movlw	1
  5528  0140  02AD               	subwf	_time_rele_gap,f
  5529  0141  3000               	movlw	0
  5530  0142  3BAE               	subwfb	_time_rele_gap+1,f
  5531  0143                     i1l1945:
  5532                           
  5533                           ;main.c: 289:         if (time_rele_control > 0) {
  5534  0143  082F               	movf	_time_rele_control,w
  5535  0144  0430               	iorwf	_time_rele_control+1,w
  5536  0145  1903               	btfsc	3,2
  5537  0146  2948               	goto	u140_21
  5538  0147  2949               	goto	u140_20
  5539  0148                     u140_21:
  5540  0148  2956               	goto	i1l360
  5541  0149                     u140_20:
  5542  0149                     i1l1947:
  5543                           
  5544                           ;main.c: 290:             time_rele_control--;
  5545  0149  3001               	movlw	1
  5546  014A  02AF               	subwf	_time_rele_control,f
  5547  014B  3000               	movlw	0
  5548  014C  3BB0               	subwfb	_time_rele_control+1,f
  5549  014D                     i1l1949:
  5550                           
  5551                           ;main.c: 291:             if (time_rele_control == 0) {
  5552  014D  082F               	movf	_time_rele_control,w
  5553  014E  0430               	iorwf	_time_rele_control+1,w
  5554  014F  1D03               	btfss	3,2
  5555  0150  2952               	goto	u141_21
  5556  0151  2953               	goto	u141_20
  5557  0152                     u141_21:
  5558  0152  2956               	goto	i1l360
  5559  0153                     u141_20:
  5560  0153                     i1l1951:
  5561                           
  5562                           ;main.c: 292:                 ff.bits.RELE_CONTROL_ON = 0;
  5563  0153  1378               	bcf	_ff+1,6
  5564                           
  5565                           ;main.c: 293:                 ff.bits.CLOSED = 1;
  5566  0154  1678               	bsf	_ff+1,4
  5567                           
  5568                           ;main.c: 294:                 ff.bits.CLOSING = 0;
  5569  0155  11F8               	bcf	_ff+1,3
  5570  0156                     i1l360:
  5571  0156  0008               	return
  5572  0157                     __end_of_rele_tick:
  5573                           
  5574                           	psect	text39
  5575  0471                     __ptext39:	
  5576 ;; *************** function _minute_tick *****************
  5577 ;; Defined at:
  5578 ;;		line 383 in file "main.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;		None
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;		None
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  1    wreg      void 
  5585 ;; Registers used:
  5586 ;;		wreg, status,2, status,0
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMMON   BANK0   BANK1
  5592 ;;      Params:         0       0       0
  5593 ;;      Locals:         0       0       0
  5594 ;;      Temps:          1       0       0
  5595 ;;      Totals:         1       0       0
  5596 ;;Total ram usage:        1 bytes
  5597 ;; Hardware stack levels used: 1
  5598 ;; This function calls:
  5599 ;;		Nothing
  5600 ;; This function is called by:
  5601 ;;		_sec_work
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605  0471                     _minute_tick:	
  5606                           ;psect for function _minute_tick
  5607                           
  5608  0471                     i1l1953:	
  5609                           ;incstack = 0
  5610                           ; Regs used in _minute_tick: [wreg+status,2+status,0]
  5611                           
  5612                           
  5613                           ;main.c: 387:     if (time_melody > 0) {
  5614  0471  0020               	movlb	0	; select bank0
  5615  0472  083E               	movf	_time_melody,w
  5616  0473  1903               	btfsc	3,2
  5617  0474  2C76               	goto	u142_21
  5618  0475  2C77               	goto	u142_20
  5619  0476                     u142_21:
  5620  0476  2C83               	goto	i1l399
  5621  0477                     u142_20:
  5622  0477                     i1l1955:
  5623                           
  5624                           ;main.c: 388:         time_melody--;
  5625  0477  3001               	movlw	1
  5626  0478  02BE               	subwf	_time_melody,f
  5627                           
  5628                           ;main.c: 389:         if (time_melody == 0) {
  5629  0479  083E               	movf	_time_melody,w
  5630  047A  1D03               	btfss	3,2
  5631  047B  2C7D               	goto	u143_21
  5632  047C  2C7E               	goto	u143_20
  5633  047D                     u143_21:
  5634  047D  2C83               	goto	i1l399
  5635  047E                     u143_20:
  5636  047E                     i1l1957:
  5637                           
  5638                           ;main.c: 390:             ff.bits.SIREN = 1;
  5639  047E  15F9               	bsf	_ff+2,3
  5640  047F                     i1l1959:
  5641                           
  5642                           ;main.c: 391:             time_melody = MELODY_REPEAT_DELAY;
  5643  047F  3003               	movlw	3
  5644  0480  00F0               	movwf	??_minute_tick
  5645  0481  0870               	movf	??_minute_tick,w
  5646  0482  00BE               	movwf	_time_melody
  5647  0483                     i1l399:
  5648  0483  0008               	return
  5649  0484                     __end_of_minute_tick:
  5650                           
  5651                           	psect	text40
  5652  0213                     __ptext40:	
  5653 ;; *************** function _ms_200_work *****************
  5654 ;; Defined at:
  5655 ;;		line 459 in file "main.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;		None
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;		None
  5660 ;; Return value:  Size  Location     Type
  5661 ;;                  1    wreg      void 
  5662 ;; Registers used:
  5663 ;;		wreg, status,2, status,0, pclath, cstack
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMMON   BANK0   BANK1
  5669 ;;      Params:         0       0       0
  5670 ;;      Locals:         0       0       0
  5671 ;;      Temps:          0       0       0
  5672 ;;      Totals:         0       0       0
  5673 ;;Total ram usage:        0 bytes
  5674 ;; Hardware stack levels used: 1
  5675 ;; Hardware stack levels required when called: 3
  5676 ;; This function calls:
  5677 ;;		_beep_double
  5678 ;;		_beep_long
  5679 ;;		_beep_short
  5680 ;; This function is called by:
  5681 ;;		_ms_tick
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685  0213                     _ms_200_work:	
  5686                           ;psect for function _ms_200_work
  5687                           
  5688  0213                     i1l2087:	
  5689                           ;incstack = 0
  5690                           ; Regs used in _ms_200_work: [wreg+status,2+status,0+pclath+cstack]
  5691                           
  5692                           
  5693                           ;main.c: 460:     if (ff.bits.ALARM_ON) {
  5694  0213  1C77               	btfss	_ff,0
  5695  0214  2A16               	goto	u162_21
  5696  0215  2A17               	goto	u162_20
  5697  0216                     u162_21:
  5698  0216  2A28               	goto	i1l427
  5699  0217                     u162_20:
  5700  0217                     i1l2089:
  5701                           
  5702                           ;main.c: 461:         if (ff.bits.SIREN) {
  5703  0217  1DF9               	btfss	_ff+2,3
  5704  0218  2A1A               	goto	u163_21
  5705  0219  2A1B               	goto	u163_20
  5706  021A                     u163_21:
  5707  021A  2A1F               	goto	i1l2093
  5708  021B                     u163_20:
  5709  021B                     i1l2091:
  5710                           
  5711                           ;main.c: 462:             beep_double();
  5712  021B  3184  24DF  3182   	fcall	_beep_double
  5713                           
  5714                           ;main.c: 463:         } else {
  5715  021E  2A49               	goto	i1l437
  5716  021F                     i1l2093:
  5717                           
  5718                           ;main.c: 464:             if (beep_short_count > 0) {
  5719  021F  087B               	movf	_beep_short_count,w
  5720  0220  1903               	btfsc	3,2
  5721  0221  2A23               	goto	u164_21
  5722  0222  2A24               	goto	u164_20
  5723  0223                     u164_21:
  5724  0223  2A49               	goto	i1l437
  5725  0224                     u164_20:
  5726  0224                     i1l2095:
  5727                           
  5728                           ;main.c: 465:                 beep_short();
  5729  0224  3183  23F9  3182   	fcall	_beep_short
  5730  0227  2A49               	goto	i1l437
  5731  0228                     i1l427:
  5732  0228  1CF7               	btfss	_ff,1
  5733  0229  2A2B               	goto	u165_21
  5734  022A  2A2C               	goto	u165_20
  5735  022B                     u165_21:
  5736  022B  2A49               	goto	i1l437
  5737  022C                     u165_20:
  5738  022C                     i1l2097:
  5739                           
  5740                           ;main.c: 471:         if ((beep_short_count > 0) && (beep_long_count > 0)) {
  5741  022C  087B               	movf	_beep_short_count,w
  5742  022D  1903               	btfsc	3,2
  5743  022E  2A30               	goto	u166_21
  5744  022F  2A31               	goto	u166_20
  5745  0230                     u166_21:
  5746  0230  2A38               	goto	i1l2103
  5747  0231                     u166_20:
  5748  0231                     i1l2099:
  5749  0231  0020               	movlb	0	; select bank0
  5750  0232  083B               	movf	_beep_long_count,w
  5751  0233  1903               	btfsc	3,2
  5752  0234  2A36               	goto	u167_21
  5753  0235  2A37               	goto	u167_20
  5754  0236                     u167_21:
  5755  0236  2A38               	goto	i1l2103
  5756  0237                     u167_20:
  5757  0237  2A1B               	goto	i1l2091
  5758  0238                     i1l2103:
  5759                           
  5760                           ;main.c: 474:             if (beep_short_count > 0) {
  5761  0238  087B               	movf	_beep_short_count,w
  5762  0239  1903               	btfsc	3,2
  5763  023A  2A3C               	goto	u168_21
  5764  023B  2A3D               	goto	u168_20
  5765  023C                     u168_21:
  5766  023C  2A40               	goto	i1l2107
  5767  023D                     u168_20:
  5768  023D                     i1l2105:
  5769                           
  5770                           ;main.c: 475:                 beep_short();
  5771  023D  3183  23F9  3182   	fcall	_beep_short
  5772  0240                     i1l2107:
  5773                           
  5774                           ;main.c: 477:             if (beep_long_count > 0) {
  5775  0240  0020               	movlb	0	; select bank0
  5776  0241  083B               	movf	_beep_long_count,w
  5777  0242  1903               	btfsc	3,2
  5778  0243  2A45               	goto	u169_21
  5779  0244  2A46               	goto	u169_20
  5780  0245                     u169_21:
  5781  0245  2A49               	goto	i1l437
  5782  0246                     u169_20:
  5783  0246                     i1l2109:
  5784                           
  5785                           ;main.c: 478:                 beep_long();
  5786  0246  3184  240E  3182   	fcall	_beep_long
  5787  0249                     i1l437:
  5788  0249  0008               	return
  5789  024A                     __end_of_ms_200_work:
  5790                           
  5791                           	psect	text41
  5792  04DF                     __ptext41:	
  5793 ;; *************** function _beep_double *****************
  5794 ;; Defined at:
  5795 ;;		line 152 in file "main.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;		None
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;		None
  5800 ;; Return value:  Size  Location     Type
  5801 ;;                  1    wreg      void 
  5802 ;; Registers used:
  5803 ;;		wreg, status,2, status,0, pclath, cstack
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMMON   BANK0   BANK1
  5809 ;;      Params:         0       0       0
  5810 ;;      Locals:         0       0       0
  5811 ;;      Temps:          0       0       0
  5812 ;;      Totals:         0       0       0
  5813 ;;Total ram usage:        0 bytes
  5814 ;; Hardware stack levels used: 1
  5815 ;; Hardware stack levels required when called: 2
  5816 ;; This function calls:
  5817 ;;		_beep_long
  5818 ;;		_beep_short
  5819 ;; This function is called by:
  5820 ;;		_ms_200_work
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824  04DF                     _beep_double:	
  5825                           ;psect for function _beep_double
  5826                           
  5827  04DF                     i1l1915:	
  5828                           ;incstack = 0
  5829                           ; Regs used in _beep_double: [wreg+status,2+status,0+pclath+cstack]
  5830                           
  5831                           
  5832                           ;main.c: 153:     if (ff.bits.LAST_BEEP_LONG) {
  5833  04DF  1FFA               	btfss	_ff+3,7
  5834  04E0  2CE2               	goto	u131_21
  5835  04E1  2CE3               	goto	u131_20
  5836  04E2                     u131_21:
  5837  04E2  2CE7               	goto	i1l1919
  5838  04E3                     u131_20:
  5839  04E3                     i1l1917:
  5840                           
  5841                           ;main.c: 154:         beep_short();
  5842  04E3  3183  23F9  3184   	fcall	_beep_short
  5843                           
  5844                           ;main.c: 155:     } else {
  5845  04E6  2CEA               	goto	i1l315
  5846  04E7                     i1l1919:
  5847                           
  5848                           ;main.c: 156:         beep_long();
  5849  04E7  3184  240E  3184   	fcall	_beep_long
  5850  04EA                     i1l315:
  5851  04EA  0008               	return
  5852  04EB                     __end_of_beep_double:
  5853                           
  5854                           	psect	text42
  5855  03F9                     __ptext42:	
  5856 ;; *************** function _beep_short *****************
  5857 ;; Defined at:
  5858 ;;		line 134 in file "main.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;		None
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;		None
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  1    wreg      void 
  5865 ;; Registers used:
  5866 ;;		wreg, status,2, status,0, pclath, cstack
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMMON   BANK0   BANK1
  5872 ;;      Params:         0       0       0
  5873 ;;      Locals:         0       0       0
  5874 ;;      Temps:          0       0       0
  5875 ;;      Totals:         0       0       0
  5876 ;;Total ram usage:        0 bytes
  5877 ;; Hardware stack levels used: 1
  5878 ;; Hardware stack levels required when called: 1
  5879 ;; This function calls:
  5880 ;;		_start_tone
  5881 ;; This function is called by:
  5882 ;;		_beep_double
  5883 ;;		_ms_200_work
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887  03F9                     _beep_short:	
  5888                           ;psect for function _beep_short
  5889                           
  5890  03F9                     i1l1887:	
  5891                           ;incstack = 0
  5892                           ; Regs used in _beep_short: [wreg+status,2+status,0+pclath+cstack]
  5893                           
  5894                           
  5895                           ;main.c: 135:     if (!ff.bits.ZUM_BUSY) {
  5896  03F9  1A79               	btfsc	_ff+2,4
  5897  03FA  2BFC               	goto	u127_21
  5898  03FB  2BFD               	goto	u127_20
  5899  03FC                     u127_21:
  5900  03FC  2C0D               	goto	i1l305
  5901  03FD                     u127_20:
  5902  03FD                     i1l1889:
  5903                           
  5904                           ;main.c: 136:         if (beep_short_count > 0) beep_short_count--;
  5905  03FD  087B               	movf	_beep_short_count,w
  5906  03FE  1903               	btfsc	3,2
  5907  03FF  2C01               	goto	u128_21
  5908  0400  2C02               	goto	u128_20
  5909  0401                     u128_21:
  5910  0401  2C04               	goto	i1l1893
  5911  0402                     u128_20:
  5912  0402                     i1l1891:
  5913  0402  3001               	movlw	1
  5914  0403  02FB               	subwf	_beep_short_count,f
  5915  0404                     i1l1893:
  5916                           
  5917                           ;main.c: 137:         time_tone = SHORT_ZUMMER_DELAY;
  5918  0404  301E               	movlw	30
  5919  0405  0020               	movlb	0	; select bank0
  5920  0406  00AB               	movwf	_time_tone
  5921  0407  3000               	movlw	0
  5922  0408  00AC               	movwf	_time_tone+1
  5923  0409                     i1l1895:
  5924                           
  5925                           ;main.c: 138:         ff.bits.LAST_BEEP_LONG = 0;
  5926  0409  13FA               	bcf	_ff+3,7
  5927  040A                     i1l1897:
  5928                           
  5929                           ;main.c: 139:         start_tone();
  5930  040A  3185  252E  3183   	fcall	_start_tone
  5931  040D                     i1l305:
  5932  040D  0008               	return
  5933  040E                     __end_of_beep_short:
  5934                           
  5935                           	psect	text43
  5936  040E                     __ptext43:	
  5937 ;; *************** function _beep_long *****************
  5938 ;; Defined at:
  5939 ;;		line 143 in file "main.c"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;		None
  5942 ;; Auto vars:     Size  Location     Type
  5943 ;;		None
  5944 ;; Return value:  Size  Location     Type
  5945 ;;                  1    wreg      void 
  5946 ;; Registers used:
  5947 ;;		wreg, status,2, status,0, pclath, cstack
  5948 ;; Tracked objects:
  5949 ;;		On entry : 0/0
  5950 ;;		On exit  : 0/0
  5951 ;;		Unchanged: 0/0
  5952 ;; Data sizes:     COMMON   BANK0   BANK1
  5953 ;;      Params:         0       0       0
  5954 ;;      Locals:         0       0       0
  5955 ;;      Temps:          0       0       0
  5956 ;;      Totals:         0       0       0
  5957 ;;Total ram usage:        0 bytes
  5958 ;; Hardware stack levels used: 1
  5959 ;; Hardware stack levels required when called: 1
  5960 ;; This function calls:
  5961 ;;		_start_tone
  5962 ;; This function is called by:
  5963 ;;		_beep_double
  5964 ;;		_ms_200_work
  5965 ;; This function uses a non-reentrant model
  5966 ;;
  5967                           
  5968  040E                     _beep_long:	
  5969                           ;psect for function _beep_long
  5970                           
  5971  040E                     i1l1899:	
  5972                           ;incstack = 0
  5973                           ; Regs used in _beep_long: [wreg+status,2+status,0+pclath+cstack]
  5974                           
  5975                           
  5976                           ;main.c: 144:     if (!ff.bits.ZUM_BUSY) {
  5977  040E  1A79               	btfsc	_ff+2,4
  5978  040F  2C11               	goto	u129_21
  5979  0410  2C12               	goto	u129_20
  5980  0411                     u129_21:
  5981  0411  2C22               	goto	i1l310
  5982  0412                     u129_20:
  5983  0412                     i1l1901:
  5984                           
  5985                           ;main.c: 145:         if (beep_long_count > 0) beep_long_count--;
  5986  0412  0020               	movlb	0	; select bank0
  5987  0413  083B               	movf	_beep_long_count,w
  5988  0414  1903               	btfsc	3,2
  5989  0415  2C17               	goto	u130_21
  5990  0416  2C18               	goto	u130_20
  5991  0417                     u130_21:
  5992  0417  2C1A               	goto	i1l1905
  5993  0418                     u130_20:
  5994  0418                     i1l1903:
  5995  0418  3001               	movlw	1
  5996  0419  02BB               	subwf	_beep_long_count,f
  5997  041A                     i1l1905:
  5998                           
  5999                           ;main.c: 146:         time_tone = LONG_ZUMMER_DELAY;
  6000  041A  3082               	movlw	130
  6001  041B  00AB               	movwf	_time_tone
  6002  041C  3000               	movlw	0
  6003  041D  00AC               	movwf	_time_tone+1
  6004  041E                     i1l1907:
  6005                           
  6006                           ;main.c: 147:         ff.bits.LAST_BEEP_LONG = 1;
  6007  041E  17FA               	bsf	_ff+3,7
  6008  041F                     i1l1909:
  6009                           
  6010                           ;main.c: 148:         start_tone();
  6011  041F  3185  252E  3184   	fcall	_start_tone
  6012  0422                     i1l310:
  6013  0422  0008               	return
  6014  0423                     __end_of_beep_long:
  6015                           
  6016                           	psect	text44
  6017  052E                     __ptext44:	
  6018 ;; *************** function _start_tone *****************
  6019 ;; Defined at:
  6020 ;;		line 122 in file "main.c"
  6021 ;; Parameters:    Size  Location     Type
  6022 ;;		None
  6023 ;; Auto vars:     Size  Location     Type
  6024 ;;		None
  6025 ;; Return value:  Size  Location     Type
  6026 ;;                  1    wreg      void 
  6027 ;; Registers used:
  6028 ;;		None
  6029 ;; Tracked objects:
  6030 ;;		On entry : 0/0
  6031 ;;		On exit  : 0/0
  6032 ;;		Unchanged: 0/0
  6033 ;; Data sizes:     COMMON   BANK0   BANK1
  6034 ;;      Params:         0       0       0
  6035 ;;      Locals:         0       0       0
  6036 ;;      Temps:          0       0       0
  6037 ;;      Totals:         0       0       0
  6038 ;;Total ram usage:        0 bytes
  6039 ;; Hardware stack levels used: 1
  6040 ;; This function calls:
  6041 ;;		Nothing
  6042 ;; This function is called by:
  6043 ;;		_beep_short
  6044 ;;		_beep_long
  6045 ;; This function uses a non-reentrant model
  6046 ;;
  6047                           
  6048  052E                     _start_tone:	
  6049                           ;psect for function _start_tone
  6050                           
  6051  052E                     i1l1885:	
  6052                           ;incstack = 0
  6053                           ; Regs used in _start_tone: []
  6054                           
  6055                           
  6056                           ;main.c: 123:     ff.bits.ZUM_BUSY = 1;
  6057  052E  1679               	bsf	_ff+2,4
  6058                           
  6059                           ;main.c: 124:     ff.bits.TONE_ON = 1;
  6060  052F  14F9               	bsf	_ff+2,1
  6061                           
  6062                           ;main.c: 125:     ff.bits.TONE_OFF = 0;
  6063  0530  1179               	bcf	_ff+2,2
  6064  0531                     i1l297:
  6065  0531  0008               	return
  6066  0532                     __end_of_start_tone:
  6067                           
  6068                           	psect	text45
  6069  04F6                     __ptext45:	
  6070 ;; *************** function _ms_100_work *****************
  6071 ;; Defined at:
  6072 ;;		line 485 in file "main.c"
  6073 ;; Parameters:    Size  Location     Type
  6074 ;;		None
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;		None
  6077 ;; Return value:  Size  Location     Type
  6078 ;;                  1    wreg      void 
  6079 ;; Registers used:
  6080 ;;		None
  6081 ;; Tracked objects:
  6082 ;;		On entry : 0/0
  6083 ;;		On exit  : 0/0
  6084 ;;		Unchanged: 0/0
  6085 ;; Data sizes:     COMMON   BANK0   BANK1
  6086 ;;      Params:         0       0       0
  6087 ;;      Locals:         0       0       0
  6088 ;;      Temps:          0       0       0
  6089 ;;      Totals:         0       0       0
  6090 ;;Total ram usage:        0 bytes
  6091 ;; Hardware stack levels used: 1
  6092 ;; This function calls:
  6093 ;;		Nothing
  6094 ;; This function is called by:
  6095 ;;		_ms_tick
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099  04F6                     _ms_100_work:	
  6100                           ;psect for function _ms_100_work
  6101                           
  6102  04F6                     i1l2111:	
  6103                           ;incstack = 0
  6104                           ; Regs used in _ms_100_work: []
  6105                           
  6106                           
  6107                           ;main.c: 486:     if (ff.bits.NORMAL_WORK_MODE_ON || ff.bits.UNIVERSAL_VORK_MODE_ON) {
  6108  04F6  187A               	btfsc	_ff+3,0
  6109  04F7  2CF9               	goto	u170_21
  6110  04F8  2CFA               	goto	u170_20
  6111  04F9                     u170_21:
  6112  04F9  2CFE               	goto	i1l442
  6113  04FA                     u170_20:
  6114  04FA                     i1l2113:
  6115  04FA  1CFA               	btfss	_ff+3,1
  6116  04FB  2CFD               	goto	u171_21
  6117  04FC  2CFE               	goto	u171_20
  6118  04FD                     u171_21:
  6119  04FD  2CFF               	goto	i1l443
  6120  04FE                     u171_20:
  6121  04FE                     i1l442:
  6122                           
  6123                           ;main.c: 487:         ff.bits.ALLOW_MEASURE = 1;
  6124  04FE  1677               	bsf	_ff,4
  6125  04FF                     i1l443:
  6126  04FF  0008               	return
  6127  0500                     __end_of_ms_100_work:
  6128                           
  6129                           	psect	text46
  6130  04A7                     __ptext46:	
  6131 ;; *************** function _TMR0_ISR *****************
  6132 ;; Defined at:
  6133 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  6134 ;; Parameters:    Size  Location     Type
  6135 ;;		None
  6136 ;; Auto vars:     Size  Location     Type
  6137 ;;		None
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  1    wreg      void 
  6140 ;; Registers used:
  6141 ;;		wreg, status,2, status,0, pclath, cstack
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMMON   BANK0   BANK1
  6147 ;;      Params:         0       0       0
  6148 ;;      Locals:         0       0       0
  6149 ;;      Temps:          0       0       0
  6150 ;;      Totals:         0       0       0
  6151 ;;Total ram usage:        0 bytes
  6152 ;; Hardware stack levels used: 1
  6153 ;; Hardware stack levels required when called: 1
  6154 ;; This function calls:
  6155 ;;		Absolute function
  6156 ;;		_TMR0_DefaultInterruptHandler
  6157 ;;		_zummer_switch
  6158 ;; This function is called by:
  6159 ;;		_INTERRUPT_InterruptManager
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163  04A7                     _TMR0_ISR:	
  6164                           ;psect for function _TMR0_ISR
  6165                           
  6166  04A7                     i1l2221:	
  6167                           ;incstack = 0
  6168                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  6169                           
  6170                           
  6171                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  6172  04A7  110B               	bcf	11,2	;volatile
  6173  04A8                     i1l2223:
  6174                           
  6175                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  6176  04A8  0020               	movlb	0	; select bank0
  6177  04A9  0843               	movf	_timer0ReloadVal,w	;volatile
  6178  04AA  0095               	movwf	21	;volatile
  6179  04AB                     i1l2225:
  6180                           
  6181                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  6182  04AB  083F               	movf	_TMR0_InterruptHandler,w
  6183  04AC  0440               	iorwf	_TMR0_InterruptHandler+1,w
  6184  04AD  1903               	btfsc	3,2
  6185  04AE  2CB0               	goto	u191_21
  6186  04AF  2CB1               	goto	u191_20
  6187  04B0                     u191_21:
  6188  04B0  2CB6               	goto	i1l190
  6189  04B1                     u191_20:
  6190  04B1                     i1l2227:
  6191                           
  6192                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  6193  04B1  0840               	movf	_TMR0_InterruptHandler+1,w
  6194  04B2  008A               	movwf	10
  6195  04B3  083F               	movf	_TMR0_InterruptHandler,w
  6196  04B4  000A               	callw
  6197  04B5  3184               	pagesel	$
  6198  04B6                     i1l190:
  6199  04B6  0008               	return
  6200  04B7                     __end_of_TMR0_ISR:
  6201                           
  6202                           	psect	text47
  6203  0551                     __ptext47:	
  6204 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6205 ;; Defined at:
  6206 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;		None
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;		None
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  1    wreg      void 
  6213 ;; Registers used:
  6214 ;;		None
  6215 ;; Tracked objects:
  6216 ;;		On entry : 0/0
  6217 ;;		On exit  : 0/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMMON   BANK0   BANK1
  6220 ;;      Params:         0       0       0
  6221 ;;      Locals:         0       0       0
  6222 ;;      Temps:          0       0       0
  6223 ;;      Totals:         0       0       0
  6224 ;;Total ram usage:        0 bytes
  6225 ;; Hardware stack levels used: 1
  6226 ;; This function calls:
  6227 ;;		Nothing
  6228 ;; This function is called by:
  6229 ;;		_TMR0_Initialize
  6230 ;;		_TMR0_ISR
  6231 ;; This function uses a non-reentrant model
  6232 ;;
  6233                           
  6234  0551                     _TMR0_DefaultInterruptHandler:	
  6235                           ;psect for function _TMR0_DefaultInterruptHandler
  6236                           
  6237  0551                     i1l196:	
  6238                           ;incstack = 0
  6239                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  6240                           
  6241  0551  0008               	return
  6242  0552                     __end_of_TMR0_DefaultInterruptHandler:
  6243                           
  6244                           	psect	text48
  6245  04D2                     __ptext48:	
  6246 ;; *************** function _zummer_switch *****************
  6247 ;; Defined at:
  6248 ;;		line 552 in file "main.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;		None
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;		None
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  1    wreg      void 
  6255 ;; Registers used:
  6256 ;;		status,0
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMMON   BANK0   BANK1
  6262 ;;      Params:         0       0       0
  6263 ;;      Locals:         0       0       0
  6264 ;;      Temps:          0       0       0
  6265 ;;      Totals:         0       0       0
  6266 ;;Total ram usage:        0 bytes
  6267 ;; Hardware stack levels used: 1
  6268 ;; This function calls:
  6269 ;;		Nothing
  6270 ;; This function is called by:
  6271 ;;		_start_setup
  6272 ;;		_TMR0_ISR
  6273 ;; This function uses a non-reentrant model
  6274 ;;
  6275                           
  6276  04D2                     _zummer_switch:	
  6277                           ;psect for function _zummer_switch
  6278                           
  6279  04D2                     i1l469:	
  6280                           ;incstack = 0
  6281                           ; Regs used in _zummer_switch: [status,0]
  6282                           ;main.c: 557:     do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  6283                           
  6284  04D2                     i1l2219:
  6285  04D2  1003               	clrc
  6286  04D3  0022               	movlb	2	; select bank2
  6287  04D4  1E8C               	btfss	12,5	;volatile
  6288  04D5  1403               	setc
  6289  04D6  1803               	btfsc	3,0
  6290  04D7  2CD9               	goto	u189_21
  6291  04D8  2CDC               	goto	u189_20
  6292  04D9                     u189_21:
  6293  04D9  0022               	movlb	2	; select bank2
  6294  04DA  168C               	bsf	12,5	;volatile
  6295  04DB  2CDE               	goto	u190_24
  6296  04DC                     u189_20:
  6297  04DC  0022               	movlb	2	; select bank2
  6298  04DD  128C               	bcf	12,5	;volatile
  6299  04DE                     u190_24:
  6300  04DE                     i1l471:
  6301  04DE  0008               	return
  6302  04DF                     __end_of_zummer_switch:
  6303  007E                     btemp	set	126	;btemp
  6304  007E                     int$flags	set	126
  6305  007E                     wtemp0	set	126
  6306                           
  6307                           	psect	idloc
  6308                           
  6309                           ;Config register IDLOC0 @ 0x8000
  6310                           ;	unspecified, using default values
  6311  8000                     	org	32768
  6312  8000  3FFF               	dw	16383
  6313                           
  6314                           ;Config register IDLOC1 @ 0x8001
  6315                           ;	unspecified, using default values
  6316  8001                     	org	32769
  6317  8001  3FFF               	dw	16383
  6318                           
  6319                           ;Config register IDLOC2 @ 0x8002
  6320                           ;	unspecified, using default values
  6321  8002                     	org	32770
  6322  8002  3FFF               	dw	16383
  6323                           
  6324                           ;Config register IDLOC3 @ 0x8003
  6325                           ;	unspecified, using default values
  6326  8003                     	org	32771
  6327  8003  3FFF               	dw	16383
  6328                           
  6329                           	psect	config
  6330                           
  6331                           ;Config register CONFIG1 @ 0x8007
  6332                           ;	Oscillator Selection
  6333                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6334                           ;	Watchdog Timer Enable
  6335                           ;	WDTE = ON, WDT enabled
  6336                           ;	Power-up Timer Enable
  6337                           ;	PWRTE = ON, PWRT enabled
  6338                           ;	MCLR Pin Function Select
  6339                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6340                           ;	Flash Program Memory Code Protection
  6341                           ;	CP = OFF, Program memory code protection is disabled
  6342                           ;	Data Memory Code Protection
  6343                           ;	CPD = OFF, Data memory code protection is disabled
  6344                           ;	Brown-out Reset Enable
  6345                           ;	BOREN = ON, Brown-out Reset enabled
  6346                           ;	Clock Out Enable
  6347                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6348                           ;	Internal/External Switchover
  6349                           ;	IESO = ON, Internal/External Switchover mode is enabled
  6350                           ;	Fail-Safe Clock Monitor Enable
  6351                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6352  8007                     	org	32775
  6353  8007  3FDC               	dw	16348
  6354                           
  6355                           ;Config register CONFIG2 @ 0x8008
  6356                           ;	Flash Memory Self-Write Protection
  6357                           ;	WRT = OFF, Write protection off
  6358                           ;	PLL Enable
  6359                           ;	PLLEN = OFF, 4x PLL disabled
  6360                           ;	Stack Overflow/Underflow Reset Enable
  6361                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6362                           ;	Brown-out Reset Voltage Selection
  6363                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6364                           ;	Low-Voltage Programming Enable
  6365                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  6366  8008                     	org	32776
  6367  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    24
    Data        0
    BSS         36
    Persistent  37
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80      2      38
    BANK1            32      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> zummer_switch(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> zummer_switch(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ms_tick(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ms_tick(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _switch_wm->_rele_off
    _eeprom_set->_EEPROM_WriteByte
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _get_wsp->_ADC_GetConversion
    _open->_rele_off
    _close->_rele_off

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _ms_tick->_sec_work
    _sec_work->_minute_tick
    _sec_work->_sec_30_work

Critical Paths under _main in BANK0

    _main->_get_wsp
    _start_setup->_eeprom_set

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1583
                              _close
                           _fun_work
                            _get_fun
                           _get_jump
                            _get_wsp
                      _hardware_work
                        _start_setup
                          _switch_wm
 ---------------------------------------------------------------------------------
 (1) _switch_wm                                            1     1      0       0
                                              3 COMMON     1     1      0
                           _rele_off
 ---------------------------------------------------------------------------------
 (1) _start_setup                                          0     0      0    1487
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                         _eeprom_set
 ---------------------------------------------------------------------------------
 (2) _eeprom_set                                           2     2      0     791
                                              0 BANK0      2     2      0
                    _EEPROM_ReadByte
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_WriteByte                                     5     4      1     726
                                              2 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (3) _EEPROM_ReadByte                                      3     3      0      31
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     348
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      1     1      0     174
                                              4 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hardware_work                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_wsp                                              4     4      0      96
                                              4 COMMON     2     2      0
                                              0 BANK0      2     2      0
                  _ADC_GetConversion
                        _clear_alarm
                        _start_alarm
 ---------------------------------------------------------------------------------
 (2) _start_alarm                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clear_alarm                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    2     2      0      31
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_jump                                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_fun                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _fun_work                                             1     1      0       0
                                              3 COMMON     1     1      0
                              _close
                               _open
 ---------------------------------------------------------------------------------
 (2) _open                                                 0     0      0       0
                            _go_open
                        _go_open_alt
                           _rele_off
 ---------------------------------------------------------------------------------
 (3) _go_open_alt                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _go_open                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _close                                                0     0      0       0
                           _go_close
                       _go_close_alt
                           _rele_off
 ---------------------------------------------------------------------------------
 (2) _rele_off                                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _go_close_alt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _go_close                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                            _ms_tick *
 ---------------------------------------------------------------------------------
 (7) _ms_tick                                              0     0      0       0
                        _ms_100_work
                        _ms_200_work
                           _sec_work
                          _stop_tone
 ---------------------------------------------------------------------------------
 (8) _stop_tone                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _sec_work                                             1     1      0       0
                                              1 COMMON     1     1      0
                        _minute_tick
                          _rele_tick
                        _sec_30_work
 ---------------------------------------------------------------------------------
 (9) _sec_30_work                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _rele_tick                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _minute_tick                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _ms_200_work                                          0     0      0       0
                        _beep_double
                          _beep_long
                         _beep_short
 ---------------------------------------------------------------------------------
 (9) _beep_double                                          0     0      0       0
                          _beep_long
                         _beep_short
 ---------------------------------------------------------------------------------
 (9) _beep_short                                           0     0      0       0
                         _start_tone
 ---------------------------------------------------------------------------------
 (9) _beep_long                                            0     0      0       0
                         _start_tone
 ---------------------------------------------------------------------------------
 (10) _start_tone                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ms_100_work                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _zummer_switch *
 ---------------------------------------------------------------------------------
 (7) _zummer_switch                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _close
     _go_close
     _go_close_alt
     _rele_off
   _fun_work
     _close
     _open
       _go_open
       _go_open_alt
       _rele_off
   _get_fun
   _get_jump
   _get_wsp
     _ADC_GetConversion
     _clear_alarm
     _start_alarm
   _hardware_work
   _start_setup
     _SYSTEM_Initialize
       _ADC_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR2_Initialize
         _TMR2_SetInterruptHandler
       _WDT_Initialize
     _TMR0_SetInterruptHandler
     _TMR2_SetInterruptHandler
     _TMR2_StartTimer
     _eeprom_set
       _EEPROM_ReadByte
       _EEPROM_WriteByte
   _switch_wm
     _rele_off

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _zummer_switch *
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _ms_tick *
       _ms_100_work
       _ms_200_work
         _beep_double
           _beep_long
             _start_tone
           _beep_short
             _start_tone
         _beep_long
         _beep_short
       _sec_work
         _minute_tick
         _rele_tick
         _sec_30_work
       _stop_tone

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      32       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      26       6       47.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      32       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue May 17 18:29:45 2022

        __end_of_TMR2_SetInterruptHandler 051B                        get_fun@fun_counter 0036  
                                      l23 045D                                        l26 050E  
                                      l61 0380                                        l29 0529  
                                      l46 0507                                        l64 0385  
                                      l90 03F8                                        _RD 0CA8  
                                      _WR 0CA9                             ?_go_close_alt 0070  
                                      _ff 0077                           _timer0ReloadVal 0043  
                                     l135 0495                                       l330 049E  
                                     l138 0534                                       l331 04A6  
                                     l323 03B5                                       l340 0470  
                                     l157 051A                                       l319 0306  
                                     l343 03BE                                       l335 04D1  
                                     l351 038E                                       l328 04A2  
                                     l345 03C6                                       l353 0396  
                                     l193 0520                                       l177 03E3  
                                     l338 0469                                       l339 046A  
                                     l515 0282                                       l348 03CD  
                                     l356 039D                                       l524 02B0  
                                     l381 02E1                                       l509 0196  
                                     l517 0284                                       l373 0525  
                                     l518 0286                                       l462 0277  
                                     l376 0537                                       l464 027C  
                                     l384 031A                                       l544 0351  
                                     l490 0104                                       l466 027D  
                                     l538 01C0                                       l459 0436  
                                     l539 01D5                                       l572 0438  
                                     l477 00AE                                       l389 032A  
                                     l566 032C                                       l479 00B0  
                                     l575 044A                                       l496 015B  
                                     l569 034D                                       _GIE 005F  
                                     u250 049A                               _start_alarm 0521  
                                     u251 0499                                       u260 049E  
                                     u261 049D                                       u270 04A2  
                                     _PR2 001B                                       u271 04A1  
                                     u280 04C9                                       u281 04C8  
                                     u290 04CD                                       u291 04CC  
                                     u910 0268                                       u911 0265  
                                     u904 0262                                       u930 0270  
                                     u850 0250                                       u931 026D  
                                     u851 024D                                       u924 026A  
                                     u950 0276                                       u870 0258  
                                     u951 0275                                       u871 0255  
                                     u960 027B                                       u944 0272  
                                     u864 0252                                       u961 027A  
                                     u890 0260                                       u891 025D  
                                     u884 025A                               _start_setup 0197  
                            ?_go_open_alt 0070                           _TMR2_Initialize 0484  
                                     wreg 0009                              ?_sec_30_work 0070  
                                    l2001 0503                                      l2003 0504  
                                    l2011 03DA                                      l2021 02E6  
                                    l2013 03DB                                      l2005 03CE  
                                    l2023 02EA                                      l2031 03A2  
                                    l2015 03DC                                      l2007 03D3  
                                    l2025 02EE                                      l2033 03A6  
                                    l2009 03D6                                      l2027 02F3  
                                    l2019 02E2                                      l2043 045E  
                                    l2035 03AA                                      l2045 0467  
                                    l2037 03AF                                      l2029 039E  
                                    l2047 046B                                      l2039 03B4  
                                    l2311 0157                                      l2241 02BD  
                                    l2321 016E                                      l2313 015D  
                                    l2161 0532                                      l1371 0496  
                                    l2163 03B6                                      l2171 0386  
                                    l2251 02CE                                      l2243 02C1  
                                    l2235 02B1                                      l2331 0185  
                                    l2323 0173                                      l2315 0165  
                                    l2147 044B                                      l1373 049A  
                                    l2165 03BA                                      l2173 038A  
                                    l2253 02D2                                      l2245 02C5  
                                    l2237 02B5                                      l2341 0194  
                                    l2333 0186                                      l2325 0177  
                                    l2317 0167                                      l1621 027B  
                                    l2261 0307                                      l2167 03C2  
                                    l1375 04C5                                      l2175 0392  
                                    l2255 02D6                                      l2247 02C7  
                                    l2239 02B9                                      l2343 0195  
                                    l2335 0188                                      l2327 0179  
                                    l2319 0169                                      l2351 0294  
                                    l2511 043D                                      l2271 031E  
                                    l2263 030B                                      l2169 03CA  
                                    l1377 04C9                                      l2177 039A  
                                    l2257 02DA                                      l2249 02CA  
                                    l2337 018F                                      l2329 0181  
                                    l2361 02A9                                      l2353 029B  
                                    l2345 027E                                      l1617 024A  
                                    l2513 0441                                      l2521 0331  
                                    l2601 01AD                                      l2273 0322  
                                    l2265 030F                                      l1379 04CD  
                                    l2259 02DE                                      l2339 0193  
                                    l2363 02AD                                      l2355 029F  
                                    l2347 028B                                      l1619 0276  
                                    l2515 0448                                      l2531 0340  
                                    l2523 0335                                      l2611 01BD  
                                    l2603 01B0                                      l2275 0324  
                                    l2267 0311                                      l2365 02AE  
                                    l2357 02A0                                      l2349 0290  
                                    l2541 036F                                      l2509 0438  
                                    l2533 0342                                      l2525 0336  
                                    l2621 01CB                                      l2613 01BE  
                                    l2605 01B9                                      l2277 0327  
                                    l2269 0314                                      l2367 02AF  
                                    l2359 02A2                                      l2543 0379  
                                    l1911 0515                                      l2535 0344  
                                    l2527 033D                                      l2519 032C  
                                    l2631 01D4                                      l2623 01CD  
                                    l2615 01BF                                      l2607 01BB  
                                    l2545 037A                                      l2553 0521  
                                    l1913 051B                                      l2537 0345  
                                    l2529 033F                                      l2561 0430  
                                    l2625 01CF                                      l2617 01C7  
                                    l2609 01BC                                      l2547 037E  
                                    l2555 0535                                      l2571 00C7  
                                    l2563 00AA                                      l2539 034B  
                                    l2627 01D0                                      l2619 01C9  
                                    l2651 0355                                      l2549 0384  
                                    l2581 00E5                                      l2573 00C9  
                                    l2565 00B2                                      l2557 0423  
                                    l2629 01D2                                      l2653 0359  
                                    l2591 00FE                                      l2583 00EC  
                                    l2575 00D3                                      l2567 00BA  
                                    l2559 042B                                      l2655 0369  
                                    l2647 034E                                      l2593 0103  
                                    l2585 00EF                                      l2577 00D8  
                                    l2569 00C5                                      l2649 0352  
                                    l2587 00F4                                      l2579 00E1  
                                    l1971 03EA                                      l2595 0197  
                                    l2589 00FB                                      l1981 050B  
                                    l1973 03EC                                      l2597 019A  
                                    l1983 050C                                      l1975 03EF  
                                    l1967 03E4                                      l1991 0488  
                                    l2599 019B                                      l1977 03F4  
                                    l1969 03E7                                      l1993 0489  
                                    l1985 0526                                      l1979 0508  
                                    l1995 048B                                      l1987 0484  
                                    l1997 0492                                      l1989 0487  
                                    l1999 0500                                      u2000 02D6  
                                    u2001 02D5                                      u2010 02DA  
                                    u2011 02D9                                      u2020 030B  
                                    u2021 030A                                      u2110 015B  
                                    u2030 030F                                      u2111 015A  
                                    u2031 030E                                      u2120 016E  
                                    u2040 031E                                      u2121 016D  
                                    u2041 031D                                      u2130 0181  
                                    u2050 0322                                      u2131 0180  
                                    u2051 0321                                      u1500 03AA  
                                    u2140 018F                                      u1501 03A9  
                                    u2141 018E                                      _LATA 010C  
                                    u1510 0467                                      u2150 0282  
                                    u1511 0466                                      u2151 0281  
                                    _LATC 010E                                      u2160 028B  
                                    u2161 028A                                      u1450 02E6  
                                    u2170 029B                                      u2410 0384  
                                    u1451 02E5                                      u2171 029A  
                                    u2411 0383                                      u1460 02EA  
                                    u2180 02A9                                      u2404 034B  
                                    u2420 0430                                      u1461 02E9  
                                    u2181 02A8                                      u2421 042F  
                                    u1470 02EE                                      u2430 00AE  
                                    u1471 02ED                                      u2431 00AD  
                                    u1800 03CA                                      u1480 03A2  
                                    u2440 00D3                                      u2360 043D  
                                    u1801 03C9                                      u1481 03A1  
                                    u2441 00D2                                      u2361 043C  
                                    u1490 03A6                                      u1810 038A  
                                    u2450 00E1                                      u2370 0441  
                                    u1491 03A5                                      u1811 0389  
                                    u2451 00E0                                      u2371 0440  
                                    u1820 0392                                      u2460 00EC  
                                    u2380 0331                                      u1821 0391  
                                    u2461 00EB                                      u2381 0330  
                                    u1830 039A                                      u2470 00FB  
                                    u2390 034A                                      u1831 0399  
                                    u2471 00FA                                      u2391 0348  
                                    u2480 0359                                      u2481 0358  
                                    u1930 02B5                                      u1931 02B4  
                                    u1780 03BA                                      u1940 02B9  
                                    u1781 03B9                                      u1941 02B8  
                                    u2557 00B5                                      u1790 03C2  
                                    u1950 02BD                                      u1791 03C1  
                                    u1951 02BC                                      u2567 037B  
                                    u1960 02C1                                      u1961 02C0  
                                    u2577 0160                                      u1970 02C5  
                                    u1971 02C4                                      u1980 02CE  
                                    u1981 02CD                                      u1990 02D2  
                                    u1991 02D1                                      _TMR0 0015  
                                    _TMR2 001A                                      _WREN 0CAA  
                                    _WPUA 020C                                      _WPUC 020E  
                                    _main 034E                                      _open 0386  
                                    fsr0h 0005                                      indf0 0000  
                                    fsr0l 0004                      EEPROM_WriteByte@addr 0075  
                                    btemp 007E                                      start 0026  
                          ??_go_close_alt 0072                   __end_of_TMR0_Initialize 03E4  
          ??_TMR0_DefaultInterruptHandler 0070             __end_of_OSCILLATOR_Initialize 050F  
                                   ?_main 0070                                     _EEADR 0191  
                                   ?_open 0070                                     _T2CON 001C  
                        __end_of_RELE_GAP 0549                                     i1l113 0024  
                                   i1l114 0024                                     i1l300 052D  
                                   i1l108 0012                                     i1l310 0422  
                                   i1l160 0550                                     i1l305 040D  
                                   i1l410 0048                                     i1l154 04C4  
                                   i1l315 04EA                                     i1l404 04F5  
                                   i1l190 04B6                                     i1l414 0080  
                                   i1l360 0156                                     i1l424 00A9  
                                   i1l361 0126                                     i1l409 0049  
                                   i1l442 04FE                                     i1l443 04FF  
                                   i1l427 0228                                     i1l196 0551  
                                   i1l437 0249                                     i1l366 013D  
                                   i1l471 04DE                                     i1l359 010E  
                                   i1l455 0212                                     i1l297 0531  
                                   i1l469 04D2                                     i1l399 0483  
                                   _TRISA 008C                                     _TRISC 008E  
                         ??_hardware_work 0072                 ?_TMR0_SetInterruptHandler 0072  
                        __end_of_TMR0_ISR 04B7                           __end_of_get_fun 0197  
                        __end_of_TMR2_ISR 04C5                           __end_of_get_wsp 0105  
                         __end_of_go_open 03B6                                     _close 03B6  
                          _WDT_Initialize 0526                           __end_of_ms_tick 0213  
                      _SHORT_ZUMMER_DELAY 054F                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         _TMR2_StartTimer 0532                           __initialization 0027  
                          eeprom_set@vers 0045                              __end_of_main 036E  
                            __end_of_open 039E                   __end_of_TMR2_Initialize 0496  
             ?_INTERRUPT_InterruptManager 0070                  _TMR2_SetInterruptHandler 0515  
                                  ??_main 0077                                    ??_open 0073  
                            ?_minute_tick 0070                    __end_of_WDT_Initialize 052A  
                                  ?_close 0070                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _EEDATA 0193  
                                  _EECON2 0196                                    _APFCON 011D  
                                  _ANSELA 018C                                    _ANSELC 018E  
                                  _BORCON 0116                                    i1l2111 04F6  
                                  i1l2103 0238                                    i1l2113 04FA  
                                  i1l2105 023D                                    i1l2017 052A  
                                  i1l2201 01FB                                    i1l2107 0240  
                                  i1l2051 003C                                    i1l2211 020F  
                                  i1l2203 0203                                    i1l2221 04A7  
                                  i1l2109 0246                                    i1l2061 005B  
                                  i1l2053 0040                                    i1l2223 04A8  
                                  i1l2071 0072                                    i1l2063 005E  
                                  i1l2055 0045                                    i1l2207 0205  
                                  i1l2231 04B9                                    i1l2225 04AB  
                                  i1l2073 0084                                    i1l2081 009D  
                                  i1l2065 0062                                    i1l2057 004D  
                                  i1l2049 0037                                    i1l2209 020C  
                                  i1l2233 04BF                                    i1l2219 04D2  
                                  i1l2227 04B1                                    i1l2091 021B  
                                  i1l2083 00A4                                    i1l2075 0089  
                                  i1l2067 0069                                    i1l2059 0051  
                                  i1l2093 021F                                    i1l2085 00A7  
                                  i1l2077 008F                                    i1l2069 006F  
                                  i1l2229 04B7                                    i1l2421 0006  
                                  i1l2095 0224                                    i1l2087 0213  
                                  i1l2079 009C                                    i1l2191 01EB  
                                  i1l2183 01D6                                    i1l2431 0020  
                                  i1l2423 000A                                    i1l2097 022C  
                                  i1l2089 0217                                    i1l2193 01EE  
                                  i1l2185 01DB                                    i1l2425 000E  
                                  i1l2099 0231                                    i1l2195 01EF  
                                  i1l2187 01E1                                    i1l2427 0016  
                                  i1l1901 0412                                    i1l2197 01F0  
                                  i1l2189 01E5                                    i1l2429 001B  
                                  i1l1903 0418                                    i1l2199 01F8  
                                  u130_20 0418                                    i1l1905 041A  
                                  u130_21 0417                                    i1l1921 0105  
                                  i1l1907 041E                                    i1l1915 04DF  
                                  i1l1931 011D                                    i1l1923 0109  
                                  i1l1909 041F                                    i1l1917 04E3  
                                  i1l1941 0138                                    i1l1933 0123  
                                  i1l1919 04E7                                    i1l1951 0153  
                                  i1l1943 013F                                    i1l1935 012A  
                                  i1l1927 0112                                    u131_20 04E3  
                                  u131_21 04E2                                    i1l1953 0471  
                                  i1l1945 0143                                    i1l1937 0131  
                                  i1l1929 0119                                    i1l1961 04EB  
                                  i1l1891 0402                                    i1l1955 0477  
                                  i1l1947 0149                                    i1l1939 0137  
                                  i1l1963 04EF                                    i1l1885 052E  
                                  i1l1893 0404                                    i1l1957 047E  
                                  i1l1949 014D                                    i1l1965 04F1  
                                  i1l1895 0409                                    i1l1887 03F9  
                                  i1l1959 047F                                    u140_20 0149  
                                  u132_20 0109                                    u220_20 000E  
                                  i1l1897 040A                                    i1l1889 03FD  
                                  u140_21 0148                                    u132_21 0108  
                                  u220_21 000D                                    i1l1899 040E  
                                  u141_20 0153                                    u133_20 010D  
                                  u221_20 0016                                    u141_21 0152  
                                  u133_21 010C                                    u221_21 0015  
                                  u142_20 0477                                    u134_20 0112  
                                  u222_20 001B                                    u142_21 0476  
                                  u134_21 0111                                    u222_21 001A  
                                  u127_20 03FD                                    u143_20 047E  
                                  u135_20 0119                                    u223_20 0020  
                                  u127_21 03FC                                    u143_21 047D  
                                  u135_21 0118                                    u223_21 001F  
                                  u128_20 0402                                    u136_20 0123  
                                  u144_20 04EF                                    u160_20 008F  
                                  u152_20 0040                                    u128_21 0401  
                                  u136_21 0122                                    u144_21 04EE  
                                  u160_21 008E                                    u152_21 003F  
                                  u129_20 0412                                    u137_20 012A  
                                  u161_20 00A4                                    u153_20 0045  
                                  u129_21 0411                                    u137_21 0129  
                                  u161_21 00A3                                    u153_21 0044  
                                  u170_20 04FA                                    u162_20 0217  
                                  u138_20 0131                                    u154_20 004D  
                                  u170_21 04F9                                    u162_21 0216  
                                  u138_21 0130                                    u154_21 004C  
                                  u171_20 04FE                                    u163_20 021B  
                                  u139_20 0137                                    u155_20 0051  
                                  u219_20 000A                                    u171_21 04FD  
                                  u163_21 021A                                    u139_21 0136  
                                  u155_21 0050                                    u219_21 0009  
                                  u164_20 0224                                    u156_20 0062  
                                  u164_21 0223                                    u156_21 0061  
                                  u165_20 022C                                    u157_20 0069  
                                  u165_21 022B                                    u157_21 0068  
                                  u166_20 0231                                    u158_20 006F  
                                  u166_21 0230                                    u158_21 006E  
                                  u190_24 04DE                                    u191_20 04B1  
                                  u167_20 0237                                    u159_20 0084  
                                  u191_21 04B0                                    u167_21 0236  
                                  u159_21 0083                                    u168_20 023D  
                                  u184_20 01E1                                    u192_20 04BF  
                                  u168_21 023C                                    u184_21 01E0  
                                  u192_21 04BE                                    u169_20 0246  
                                  u185_20 01EB                                    u169_21 0245  
                                  u185_21 01EA                                    u186_20 01F8  
                                  u186_21 01F7                                    u187_20 020C  
                                  u187_21 020B                                    u189_20 04DC  
                                  u189_21 04D9                          _GOOD_WSP_VOLTAGE 0538  
                                  _OSCCON 0099                                    _WDTCON 0097  
                        __end_of_get_jump 02B1                          __end_of_go_close 0307  
             __end_of_MELODY_REPEAT_DELAY 0545                          ?_TMR0_Initialize 0070  
                       ??_EEPROM_ReadByte 0072                          __end_of_fun_work 02E2  
                __end_of_EEPROM_WriteByte 034E                          __end_of_sec_work 00AA  
                               ??_get_fun 0072                          __end_of_rele_off 0471  
                               ??_get_wsp 0074                                 ??_go_open 0072  
           __end_of_RELE_POWER_WORK_DELAY 054A                                 ??_ms_tick 0072  
                         ?_WDT_Initialize 0070                    EEPROM_WriteByte@status 0076  
                ADC_GetConversion@channel 0073                     _HIGH_WATER_RESISTANSE 0540  
                 __end_of_TMR2_StartTimer 0535  TMR0_SetInterruptHandler@InterruptHandler 0072  
TMR2_SetInterruptHandler@InterruptHandler 0072                      __end_of_go_close_alt 04A7  
                       _SYSTEM_Initialize 044B                   __end_of__initialization 0034  
                      _AUTOROTATION_DELAY 053C                        ?_SYSTEM_Initialize 0070  
                           _UP_RESISTANSE 053E                            __pcstackCOMMON 0070  
                     ??_SYSTEM_Initialize 0075                     __end_of_zummer_switch 04DF  
                               ?_TMR0_ISR 0070                                 ?_TMR2_ISR 0070  
                           __end_of_close 03CE                          ?_TMR2_Initialize 0070  
                            ?_start_alarm 0070               get_wsp@bad_measures_counter 0037  
                          _OPTION_REGbits 0095                              ?_start_setup 0070  
                                 ??_close 0073                                _beep_short 03F9  
               __end_of_SYSTEM_Initialize 045E                                __pbssBANK0 0020  
                              __pmaintext 034E          __end_of_TMR0_SetInterruptHandler 0521  
                              ??_TMR0_ISR 0070                                ??_TMR2_ISR 0072  
                         _time_rele_power 0031                                __pintentry 0004  
                       _time_rele_control 002F                                _eeprom_set 0423  
                                 _OSCTUNE 0098                         __end_of_beep_long 0423  
                        ?_TMR2_StartTimer 0070                                 ?_get_jump 0070  
                               ?_go_close 0070                                 ?_fun_work 0070  
                               ?_sec_work 0070                                 ?_rele_off 0070  
                    _ADC_InterruptHandler 0033                ??_TMR2_SetInterruptHandler 0074  
                           ??_beep_double 0070     __end_of_RELE_POWER_AUTOROTATION_DELAY 0546  
           _RELE_POWER_AUTOROTATION_DELAY 0545                  __end_of_GOOD_WSP_VOLTAGE 053A  
                                 __ptext1 0307                                   __ptext2 0197  
                                 __ptext3 0423                                   __ptext4 032B  
                                 __ptext5 0437                                   __ptext6 0532  
                                 __ptext7 044B                                   __ptext8 0526  
                                 __ptext9 0484                                   _get_fun 0157  
                                 _get_wsp 00AA                                   _go_open 039E  
                   _OSCILLATOR_Initialize 0508                                 _T2CONbits 001C  
                ??_PIN_MANAGER_Initialize 0072                                   _ms_tick 01D6  
                   __end_of_hardware_work 027E                               ?_beep_short 0070  
                                 clrloop0 0510                                ??_get_jump 0072  
                              ??_go_close 0072                         __end_of_rele_tick 0157  
                    end_of_initialization 0034                                ??_fun_work 0073  
                         _EEPROM_ReadByte 0437                                ??_sec_work 0071  
                              ??_rele_off 0072                             ??_clear_alarm 0072  
                           ??_ms_100_work 0070                             ??_ms_200_work 0070  
                          _FUN_MEAS_COUNT 054B                              _go_close_alt 0496  
                        ??_WDT_Initialize 0072              __end_of_LOW_WATER_RESISTANSE 0544  
                _TMR0_SetInterruptHandler 051B                                 _PORTAbits 000C  
                               _PORTCbits 000E                         ?_EEPROM_WriteByte 0072  
                       __end_of_stop_tone 052E                       __end_of_beep_double 04EB  
                       __end_of_switch_wm 032B                               ?_eeprom_set 0070  
                      ??_EEPROM_WriteByte 0073                                 _TRISAbits 008C  
                               _TRISCbits 008E                        EEPROM_WriteByte@dt 0072  
                              _start_tone 052E                                get_wsp@res 0044  
                  __end_of_FUN_MEAS_COUNT 054C      __end_of_TMR2_DefaultInterruptHandler 0551  
            _TMR2_DefaultInterruptHandler 0550                       __end_of_clear_alarm 0538  
                          _ADC_Initialize 0500                    ?_OSCILLATOR_Initialize 0070  
                     __end_of_ms_100_work 0500                       __end_of_ms_200_work 024A  
                           ??_go_open_alt 0072                       start_initialization 0027  
                   _RELE_POWER_WORK_DELAY 0549                             ??_sec_30_work 0070  
                 __end_of_EEPROM_ReadByte 044B                          _beep_short_count 007B  
                             _beep_double 04DF                    __end_of_ADC_Initialize 0508  
           ?_TMR2_DefaultInterruptHandler 0070                         _AUTOROTATION_DAYS 054D  
                             __pbssCOMMON 0077                                 ___latbits 0000  
                           __pcstackBANK0 0044                       __end_of_go_open_alt 04D2  
                            sec_work@iled 0038                               ?_start_tone 0070  
                               _beep_long 040E                       __end_of_sec_30_work 04F6  
                    _LOW_WATER_RESISTANSE 0542                     _TMR0_InterruptHandler 003F  
                               __pnvBANK0 003F                               _clear_alarm 0535  
                  _PIN_MANAGER_Initialize 03E4                               _ms_100_work 04F6  
                             _ms_200_work 0213                           ?_ADC_Initialize 0070  
            ??_INTERRUPT_InterruptManager 0072                 __end_of_AUTOROTATION_DAYS 054E  
                                ?_get_fun 0070                                  ?_get_wsp 0070  
                                ?_go_open 0070                             ??_minute_tick 0070  
                                ?_ms_tick 0070                         sec_work@sec_count 0039  
                            ??_beep_short 0070                            _WSP_MEAS_COUNT 054C  
                        ?_EEPROM_ReadByte 0070                         ??_TMR0_Initialize 0074  
                              ?_beep_long 0070                                  _LATAbits 010C  
                                _LATCbits 010E                                 _rele_tick 0105  
                               clear_ram0 050F                                  _PIE1bits 0091  
                                _RELE_GAP 0548                ??_TMR0_SetInterruptHandler 0074  
                                _PIR1bits 0011                                 _time_meas 003C  
                        _time_moving_wait 003D                                  _TMR0_ISR 04A7  
                               _time_tone 002B                                  _TMR2_ISR 04B7  
                           _zummer_switch 04D2                        __end_of_beep_short 040E  
                         _beep_long_count 003B                                _ADCON0bits 009D  
                            ??_eeprom_set 0044            ??_TMR2_DefaultInterruptHandler 0070  
                             _go_open_alt 04C5                 ?_TMR2_SetInterruptHandler 0072  
                  __end_of_WSP_MEAS_COUNT 054D                                 _stop_tone 052A  
                               _switch_wm 0307                               _sec_30_work 04EB  
                         ms_tick@ms_count 0025                       __end_of_minute_tick 0484  
                       _beep_double_count 003A                         ??_TMR2_Initialize 0074  
                              ?_rele_tick 0070                     __end_of_UP_RESISTANSE 0540  
                     _MELODY_REPEAT_DELAY 0544                         _ADC_GetConversion 036E  
                         _JUMP_MEAS_COUNT 054A                        __end_of_eeprom_set 0437  
                          ?_zummer_switch 0070                   ??_OSCILLATOR_Initialize 0072  
                      ?_ADC_GetConversion 0070                             ??_start_alarm 0072  
              __end_of_SHORT_ZUMMER_DELAY 0550                                _ANSELAbits 018C  
                              _ANSELCbits 018E                       ??_ADC_GetConversion 0072  
                           ??_start_setup 0077                                ?_stop_tone 0070  
                           _time_rele_gap 002D                                ?_switch_wm 0070  
                                __ptext10 0515                                  __ptext11 03CE  
                                __ptext20 036E                                  __ptext12 051B  
                                __ptext21 027E                                  __ptext13 03E4  
                                __ptext30 02E2                                  __ptext22 0157  
                                __ptext14 0508                                  __ptext23 02B1  
                                __ptext15 0500                                  __ptext40 0213  
                                __ptext32 04B7                                  __ptext24 0386  
                                __ptext16 024A                                  __ptext41 04DF  
                                __ptext33 0550                                  __ptext25 04C5  
                                __ptext17 00AA                                  __ptext42 03F9  
                                __ptext34 01D6                                  __ptext26 039E  
                                __ptext18 0521                                  __ptext43 040E  
                                __ptext35 052A                                  __ptext27 03B6  
                                __ptext19 0535                                  __ptext44 052E  
                                __ptext36 0037                                  __ptext28 045E  
                                __ptext45 04F6                                  __ptext37 04EB  
                                __ptext29 0496                                  __ptext46 04A7  
                                __ptext38 0105                                  __ptext47 0551  
                                __ptext39 0471                                  __ptext48 04D2  
                                _get_jump 027E                                  _go_close 02E2  
                         _BAD_WSP_VOLTAGE 053A                             _time_rotation 0020  
                             ??_beep_long 0070                                  _fun_work 02B1  
    __end_of_TMR0_DefaultInterruptHandler 0552              _TMR0_DefaultInterruptHandler 0551  
                                _sec_work 0037                 __end_of_ADC_GetConversion 0386  
                                _rele_off 045E                         _MOVING_WAIT_DELAY 0546  
                            ?_beep_double 0070                                  int$flags 007E  
                       ??_TMR2_StartTimer 0072        __end_of_INTERRUPT_InterruptManager 0026  
              _INTERRUPT_InterruptManager 0004                            ms_tick@s_count 0023  
                    get_jump@jump_counter 0035                               _minute_tick 0471  
                              _INTCONbits 000B             __end_of_HIGH_WATER_RESISTANSE 0542  
                          __pstringtext10 0542                            __pstringtext11 0548  
                          __pstringtext12 0549                            __pstringtext13 054A  
                          __pstringtext14 054B                            __pstringtext15 054C  
                          __pstringtext16 054D                            __pstringtext17 054E  
                          __pstringtext18 054F                             _hardware_work 024A  
                     __end_of_start_alarm 0526                       __end_of_start_setup 01D6  
                                intlevel1 0000                              ??_start_tone 0070  
                 __end_of_JUMP_MEAS_COUNT 054B                   ?_PIN_MANAGER_Initialize 0070  
                             ??_rele_tick 0070                 __end_of_MOVING_WAIT_DELAY 0547  
                       _LONG_ZUMMER_DELAY 054E                       EEPROM_ReadByte@addr 0074  
                        ??_ADC_Initialize 0072                              ?_clear_alarm 0070  
           ?_TMR0_DefaultInterruptHandler 0070                           ??_zummer_switch 0070  
                            ?_ms_100_work 0070                              ?_ms_200_work 0070  
                           __pstringtext1 0538                             __pstringtext2 053A  
                           __pstringtext3 053C                             __pstringtext4 053E  
                           __pstringtext5 0544                             __pstringtext6 0545  
                           __pstringtext7 0546                             __pstringtext8 0547  
                           __pstringtext9 0540                        __end_of_start_tone 0532  
                              _OPTION_REG 0095                         _time_zummer_short 0029  
     __end_of_FRIMWARE_VERSION_EEPROM_ADR 0548               _FRIMWARE_VERSION_EEPROM_ADR 0547  
                             _time_melody 003E                           _TMR0_Initialize 03CE  
              __end_of_AUTOROTATION_DELAY 053E                   __end_of_BAD_WSP_VOLTAGE 053C  
                             ??_stop_tone 0070                               ??_switch_wm 0073  
                          ?_hardware_work 0070                          _time_zummer_long 0027  
          __end_of_PIN_MANAGER_Initialize 03F9                 __end_of_LONG_ZUMMER_DELAY 054F  
                        _EEPROM_WriteByte 032B                     _TMR2_InterruptHandler 0041  
