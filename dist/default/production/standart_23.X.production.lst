

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Apr 26 10:09:18 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1823
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.40
    47                           ; Generated 17/11/2021 GMT
    48                           ; 
    49                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F1823 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000E                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  008C                     	;# 
   109  008E                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  010C                     	;# 
   124  010E                     	;# 
   125  0111                     	;# 
   126  0112                     	;# 
   127  0113                     	;# 
   128  0114                     	;# 
   129  0115                     	;# 
   130  0116                     	;# 
   131  0117                     	;# 
   132  0118                     	;# 
   133  0119                     	;# 
   134  011A                     	;# 
   135  011B                     	;# 
   136  011D                     	;# 
   137  011D                     	;# 
   138  018C                     	;# 
   139  018E                     	;# 
   140  0191                     	;# 
   141  0191                     	;# 
   142  0192                     	;# 
   143  0193                     	;# 
   144  0193                     	;# 
   145  0193                     	;# 
   146  0194                     	;# 
   147  0195                     	;# 
   148  0196                     	;# 
   149  0199                     	;# 
   150  019A                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019C                     	;# 
   156  019C                     	;# 
   157  019D                     	;# 
   158  019E                     	;# 
   159  019F                     	;# 
   160  020C                     	;# 
   161  020E                     	;# 
   162  0211                     	;# 
   163  0211                     	;# 
   164  0212                     	;# 
   165  0212                     	;# 
   166  0213                     	;# 
   167  0213                     	;# 
   168  0214                     	;# 
   169  0214                     	;# 
   170  0215                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0216                     	;# 
   174  0216                     	;# 
   175  0217                     	;# 
   176  0217                     	;# 
   177  0291                     	;# 
   178  0291                     	;# 
   179  0292                     	;# 
   180  0293                     	;# 
   181  0294                     	;# 
   182  0295                     	;# 
   183  0295                     	;# 
   184  0296                     	;# 
   185  0391                     	;# 
   186  0392                     	;# 
   187  0393                     	;# 
   188  039A                     	;# 
   189  039C                     	;# 
   190  039D                     	;# 
   191  039E                     	;# 
   192  039F                     	;# 
   193  0FE4                     	;# 
   194  0FE5                     	;# 
   195  0FE6                     	;# 
   196  0FE7                     	;# 
   197  0FE8                     	;# 
   198  0FE9                     	;# 
   199  0FEA                     	;# 
   200  0FEB                     	;# 
   201  0FED                     	;# 
   202  0FEE                     	;# 
   203  0FEF                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000E                     	;# 
   218  0011                     	;# 
   219  0012                     	;# 
   220  0015                     	;# 
   221  0016                     	;# 
   222  0016                     	;# 
   223  0017                     	;# 
   224  0018                     	;# 
   225  0019                     	;# 
   226  001A                     	;# 
   227  001B                     	;# 
   228  001C                     	;# 
   229  001E                     	;# 
   230  001F                     	;# 
   231  008C                     	;# 
   232  008E                     	;# 
   233  0091                     	;# 
   234  0092                     	;# 
   235  0095                     	;# 
   236  0096                     	;# 
   237  0097                     	;# 
   238  0098                     	;# 
   239  0099                     	;# 
   240  009A                     	;# 
   241  009B                     	;# 
   242  009B                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  010C                     	;# 
   247  010E                     	;# 
   248  0111                     	;# 
   249  0112                     	;# 
   250  0113                     	;# 
   251  0114                     	;# 
   252  0115                     	;# 
   253  0116                     	;# 
   254  0117                     	;# 
   255  0118                     	;# 
   256  0119                     	;# 
   257  011A                     	;# 
   258  011B                     	;# 
   259  011D                     	;# 
   260  011D                     	;# 
   261  018C                     	;# 
   262  018E                     	;# 
   263  0191                     	;# 
   264  0191                     	;# 
   265  0192                     	;# 
   266  0193                     	;# 
   267  0193                     	;# 
   268  0193                     	;# 
   269  0194                     	;# 
   270  0195                     	;# 
   271  0196                     	;# 
   272  0199                     	;# 
   273  019A                     	;# 
   274  019B                     	;# 
   275  019B                     	;# 
   276  019B                     	;# 
   277  019B                     	;# 
   278  019C                     	;# 
   279  019C                     	;# 
   280  019D                     	;# 
   281  019E                     	;# 
   282  019F                     	;# 
   283  020C                     	;# 
   284  020E                     	;# 
   285  0211                     	;# 
   286  0211                     	;# 
   287  0212                     	;# 
   288  0212                     	;# 
   289  0213                     	;# 
   290  0213                     	;# 
   291  0214                     	;# 
   292  0214                     	;# 
   293  0215                     	;# 
   294  0215                     	;# 
   295  0215                     	;# 
   296  0216                     	;# 
   297  0216                     	;# 
   298  0217                     	;# 
   299  0217                     	;# 
   300  0291                     	;# 
   301  0291                     	;# 
   302  0292                     	;# 
   303  0293                     	;# 
   304  0294                     	;# 
   305  0295                     	;# 
   306  0295                     	;# 
   307  0296                     	;# 
   308  0391                     	;# 
   309  0392                     	;# 
   310  0393                     	;# 
   311  039A                     	;# 
   312  039C                     	;# 
   313  039D                     	;# 
   314  039E                     	;# 
   315  039F                     	;# 
   316  0FE4                     	;# 
   317  0FE5                     	;# 
   318  0FE6                     	;# 
   319  0FE7                     	;# 
   320  0FE8                     	;# 
   321  0FE9                     	;# 
   322  0FEA                     	;# 
   323  0FEB                     	;# 
   324  0FED                     	;# 
   325  0FEE                     	;# 
   326  0FEF                     	;# 
   327  0000                     	;# 
   328  0001                     	;# 
   329  0002                     	;# 
   330  0003                     	;# 
   331  0004                     	;# 
   332  0005                     	;# 
   333  0006                     	;# 
   334  0007                     	;# 
   335  0008                     	;# 
   336  0009                     	;# 
   337  000A                     	;# 
   338  000B                     	;# 
   339  000C                     	;# 
   340  000E                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0015                     	;# 
   344  0016                     	;# 
   345  0016                     	;# 
   346  0017                     	;# 
   347  0018                     	;# 
   348  0019                     	;# 
   349  001A                     	;# 
   350  001B                     	;# 
   351  001C                     	;# 
   352  001E                     	;# 
   353  001F                     	;# 
   354  008C                     	;# 
   355  008E                     	;# 
   356  0091                     	;# 
   357  0092                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  010C                     	;# 
   370  010E                     	;# 
   371  0111                     	;# 
   372  0112                     	;# 
   373  0113                     	;# 
   374  0114                     	;# 
   375  0115                     	;# 
   376  0116                     	;# 
   377  0117                     	;# 
   378  0118                     	;# 
   379  0119                     	;# 
   380  011A                     	;# 
   381  011B                     	;# 
   382  011D                     	;# 
   383  011D                     	;# 
   384  018C                     	;# 
   385  018E                     	;# 
   386  0191                     	;# 
   387  0191                     	;# 
   388  0192                     	;# 
   389  0193                     	;# 
   390  0193                     	;# 
   391  0193                     	;# 
   392  0194                     	;# 
   393  0195                     	;# 
   394  0196                     	;# 
   395  0199                     	;# 
   396  019A                     	;# 
   397  019B                     	;# 
   398  019B                     	;# 
   399  019B                     	;# 
   400  019B                     	;# 
   401  019C                     	;# 
   402  019C                     	;# 
   403  019D                     	;# 
   404  019E                     	;# 
   405  019F                     	;# 
   406  020C                     	;# 
   407  020E                     	;# 
   408  0211                     	;# 
   409  0211                     	;# 
   410  0212                     	;# 
   411  0212                     	;# 
   412  0213                     	;# 
   413  0213                     	;# 
   414  0214                     	;# 
   415  0214                     	;# 
   416  0215                     	;# 
   417  0215                     	;# 
   418  0215                     	;# 
   419  0216                     	;# 
   420  0216                     	;# 
   421  0217                     	;# 
   422  0217                     	;# 
   423  0291                     	;# 
   424  0291                     	;# 
   425  0292                     	;# 
   426  0293                     	;# 
   427  0294                     	;# 
   428  0295                     	;# 
   429  0295                     	;# 
   430  0296                     	;# 
   431  0391                     	;# 
   432  0392                     	;# 
   433  0393                     	;# 
   434  039A                     	;# 
   435  039C                     	;# 
   436  039D                     	;# 
   437  039E                     	;# 
   438  039F                     	;# 
   439  0FE4                     	;# 
   440  0FE5                     	;# 
   441  0FE6                     	;# 
   442  0FE7                     	;# 
   443  0FE8                     	;# 
   444  0FE9                     	;# 
   445  0FEA                     	;# 
   446  0FEB                     	;# 
   447  0FED                     	;# 
   448  0FEE                     	;# 
   449  0FEF                     	;# 
   450  0000                     	;# 
   451  0001                     	;# 
   452  0002                     	;# 
   453  0003                     	;# 
   454  0004                     	;# 
   455  0005                     	;# 
   456  0006                     	;# 
   457  0007                     	;# 
   458  0008                     	;# 
   459  0009                     	;# 
   460  000A                     	;# 
   461  000B                     	;# 
   462  000C                     	;# 
   463  000E                     	;# 
   464  0011                     	;# 
   465  0012                     	;# 
   466  0015                     	;# 
   467  0016                     	;# 
   468  0016                     	;# 
   469  0017                     	;# 
   470  0018                     	;# 
   471  0019                     	;# 
   472  001A                     	;# 
   473  001B                     	;# 
   474  001C                     	;# 
   475  001E                     	;# 
   476  001F                     	;# 
   477  008C                     	;# 
   478  008E                     	;# 
   479  0091                     	;# 
   480  0092                     	;# 
   481  0095                     	;# 
   482  0096                     	;# 
   483  0097                     	;# 
   484  0098                     	;# 
   485  0099                     	;# 
   486  009A                     	;# 
   487  009B                     	;# 
   488  009B                     	;# 
   489  009C                     	;# 
   490  009D                     	;# 
   491  009E                     	;# 
   492  010C                     	;# 
   493  010E                     	;# 
   494  0111                     	;# 
   495  0112                     	;# 
   496  0113                     	;# 
   497  0114                     	;# 
   498  0115                     	;# 
   499  0116                     	;# 
   500  0117                     	;# 
   501  0118                     	;# 
   502  0119                     	;# 
   503  011A                     	;# 
   504  011B                     	;# 
   505  011D                     	;# 
   506  011D                     	;# 
   507  018C                     	;# 
   508  018E                     	;# 
   509  0191                     	;# 
   510  0191                     	;# 
   511  0192                     	;# 
   512  0193                     	;# 
   513  0193                     	;# 
   514  0193                     	;# 
   515  0194                     	;# 
   516  0195                     	;# 
   517  0196                     	;# 
   518  0199                     	;# 
   519  019A                     	;# 
   520  019B                     	;# 
   521  019B                     	;# 
   522  019B                     	;# 
   523  019B                     	;# 
   524  019C                     	;# 
   525  019C                     	;# 
   526  019D                     	;# 
   527  019E                     	;# 
   528  019F                     	;# 
   529  020C                     	;# 
   530  020E                     	;# 
   531  0211                     	;# 
   532  0211                     	;# 
   533  0212                     	;# 
   534  0212                     	;# 
   535  0213                     	;# 
   536  0213                     	;# 
   537  0214                     	;# 
   538  0214                     	;# 
   539  0215                     	;# 
   540  0215                     	;# 
   541  0215                     	;# 
   542  0216                     	;# 
   543  0216                     	;# 
   544  0217                     	;# 
   545  0217                     	;# 
   546  0291                     	;# 
   547  0291                     	;# 
   548  0292                     	;# 
   549  0293                     	;# 
   550  0294                     	;# 
   551  0295                     	;# 
   552  0295                     	;# 
   553  0296                     	;# 
   554  0391                     	;# 
   555  0392                     	;# 
   556  0393                     	;# 
   557  039A                     	;# 
   558  039C                     	;# 
   559  039D                     	;# 
   560  039E                     	;# 
   561  039F                     	;# 
   562  0FE4                     	;# 
   563  0FE5                     	;# 
   564  0FE6                     	;# 
   565  0FE7                     	;# 
   566  0FE8                     	;# 
   567  0FE9                     	;# 
   568  0FEA                     	;# 
   569  0FEB                     	;# 
   570  0FED                     	;# 
   571  0FEE                     	;# 
   572  0FEF                     	;# 
   573  0000                     	;# 
   574  0001                     	;# 
   575  0002                     	;# 
   576  0003                     	;# 
   577  0004                     	;# 
   578  0005                     	;# 
   579  0006                     	;# 
   580  0007                     	;# 
   581  0008                     	;# 
   582  0009                     	;# 
   583  000A                     	;# 
   584  000B                     	;# 
   585  000C                     	;# 
   586  000E                     	;# 
   587  0011                     	;# 
   588  0012                     	;# 
   589  0015                     	;# 
   590  0016                     	;# 
   591  0016                     	;# 
   592  0017                     	;# 
   593  0018                     	;# 
   594  0019                     	;# 
   595  001A                     	;# 
   596  001B                     	;# 
   597  001C                     	;# 
   598  001E                     	;# 
   599  001F                     	;# 
   600  008C                     	;# 
   601  008E                     	;# 
   602  0091                     	;# 
   603  0092                     	;# 
   604  0095                     	;# 
   605  0096                     	;# 
   606  0097                     	;# 
   607  0098                     	;# 
   608  0099                     	;# 
   609  009A                     	;# 
   610  009B                     	;# 
   611  009B                     	;# 
   612  009C                     	;# 
   613  009D                     	;# 
   614  009E                     	;# 
   615  010C                     	;# 
   616  010E                     	;# 
   617  0111                     	;# 
   618  0112                     	;# 
   619  0113                     	;# 
   620  0114                     	;# 
   621  0115                     	;# 
   622  0116                     	;# 
   623  0117                     	;# 
   624  0118                     	;# 
   625  0119                     	;# 
   626  011A                     	;# 
   627  011B                     	;# 
   628  011D                     	;# 
   629  011D                     	;# 
   630  018C                     	;# 
   631  018E                     	;# 
   632  0191                     	;# 
   633  0191                     	;# 
   634  0192                     	;# 
   635  0193                     	;# 
   636  0193                     	;# 
   637  0193                     	;# 
   638  0194                     	;# 
   639  0195                     	;# 
   640  0196                     	;# 
   641  0199                     	;# 
   642  019A                     	;# 
   643  019B                     	;# 
   644  019B                     	;# 
   645  019B                     	;# 
   646  019B                     	;# 
   647  019C                     	;# 
   648  019C                     	;# 
   649  019D                     	;# 
   650  019E                     	;# 
   651  019F                     	;# 
   652  020C                     	;# 
   653  020E                     	;# 
   654  0211                     	;# 
   655  0211                     	;# 
   656  0212                     	;# 
   657  0212                     	;# 
   658  0213                     	;# 
   659  0213                     	;# 
   660  0214                     	;# 
   661  0214                     	;# 
   662  0215                     	;# 
   663  0215                     	;# 
   664  0215                     	;# 
   665  0216                     	;# 
   666  0216                     	;# 
   667  0217                     	;# 
   668  0217                     	;# 
   669  0291                     	;# 
   670  0291                     	;# 
   671  0292                     	;# 
   672  0293                     	;# 
   673  0294                     	;# 
   674  0295                     	;# 
   675  0295                     	;# 
   676  0296                     	;# 
   677  0391                     	;# 
   678  0392                     	;# 
   679  0393                     	;# 
   680  039A                     	;# 
   681  039C                     	;# 
   682  039D                     	;# 
   683  039E                     	;# 
   684  039F                     	;# 
   685  0FE4                     	;# 
   686  0FE5                     	;# 
   687  0FE6                     	;# 
   688  0FE7                     	;# 
   689  0FE8                     	;# 
   690  0FE9                     	;# 
   691  0FEA                     	;# 
   692  0FEB                     	;# 
   693  0FED                     	;# 
   694  0FEE                     	;# 
   695  0FEF                     	;# 
   696  0000                     	;# 
   697  0001                     	;# 
   698  0002                     	;# 
   699  0003                     	;# 
   700  0004                     	;# 
   701  0005                     	;# 
   702  0006                     	;# 
   703  0007                     	;# 
   704  0008                     	;# 
   705  0009                     	;# 
   706  000A                     	;# 
   707  000B                     	;# 
   708  000C                     	;# 
   709  000E                     	;# 
   710  0011                     	;# 
   711  0012                     	;# 
   712  0015                     	;# 
   713  0016                     	;# 
   714  0016                     	;# 
   715  0017                     	;# 
   716  0018                     	;# 
   717  0019                     	;# 
   718  001A                     	;# 
   719  001B                     	;# 
   720  001C                     	;# 
   721  001E                     	;# 
   722  001F                     	;# 
   723  008C                     	;# 
   724  008E                     	;# 
   725  0091                     	;# 
   726  0092                     	;# 
   727  0095                     	;# 
   728  0096                     	;# 
   729  0097                     	;# 
   730  0098                     	;# 
   731  0099                     	;# 
   732  009A                     	;# 
   733  009B                     	;# 
   734  009B                     	;# 
   735  009C                     	;# 
   736  009D                     	;# 
   737  009E                     	;# 
   738  010C                     	;# 
   739  010E                     	;# 
   740  0111                     	;# 
   741  0112                     	;# 
   742  0113                     	;# 
   743  0114                     	;# 
   744  0115                     	;# 
   745  0116                     	;# 
   746  0117                     	;# 
   747  0118                     	;# 
   748  0119                     	;# 
   749  011A                     	;# 
   750  011B                     	;# 
   751  011D                     	;# 
   752  011D                     	;# 
   753  018C                     	;# 
   754  018E                     	;# 
   755  0191                     	;# 
   756  0191                     	;# 
   757  0192                     	;# 
   758  0193                     	;# 
   759  0193                     	;# 
   760  0193                     	;# 
   761  0194                     	;# 
   762  0195                     	;# 
   763  0196                     	;# 
   764  0199                     	;# 
   765  019A                     	;# 
   766  019B                     	;# 
   767  019B                     	;# 
   768  019B                     	;# 
   769  019B                     	;# 
   770  019C                     	;# 
   771  019C                     	;# 
   772  019D                     	;# 
   773  019E                     	;# 
   774  019F                     	;# 
   775  020C                     	;# 
   776  020E                     	;# 
   777  0211                     	;# 
   778  0211                     	;# 
   779  0212                     	;# 
   780  0212                     	;# 
   781  0213                     	;# 
   782  0213                     	;# 
   783  0214                     	;# 
   784  0214                     	;# 
   785  0215                     	;# 
   786  0215                     	;# 
   787  0215                     	;# 
   788  0216                     	;# 
   789  0216                     	;# 
   790  0217                     	;# 
   791  0217                     	;# 
   792  0291                     	;# 
   793  0291                     	;# 
   794  0292                     	;# 
   795  0293                     	;# 
   796  0294                     	;# 
   797  0295                     	;# 
   798  0295                     	;# 
   799  0296                     	;# 
   800  0391                     	;# 
   801  0392                     	;# 
   802  0393                     	;# 
   803  039A                     	;# 
   804  039C                     	;# 
   805  039D                     	;# 
   806  039E                     	;# 
   807  039F                     	;# 
   808  0FE4                     	;# 
   809  0FE5                     	;# 
   810  0FE6                     	;# 
   811  0FE7                     	;# 
   812  0FE8                     	;# 
   813  0FE9                     	;# 
   814  0FEA                     	;# 
   815  0FEB                     	;# 
   816  0FED                     	;# 
   817  0FEE                     	;# 
   818  0FEF                     	;# 
   819  0000                     	;# 
   820  0001                     	;# 
   821  0002                     	;# 
   822  0003                     	;# 
   823  0004                     	;# 
   824  0005                     	;# 
   825  0006                     	;# 
   826  0007                     	;# 
   827  0008                     	;# 
   828  0009                     	;# 
   829  000A                     	;# 
   830  000B                     	;# 
   831  000C                     	;# 
   832  000E                     	;# 
   833  0011                     	;# 
   834  0012                     	;# 
   835  0015                     	;# 
   836  0016                     	;# 
   837  0016                     	;# 
   838  0017                     	;# 
   839  0018                     	;# 
   840  0019                     	;# 
   841  001A                     	;# 
   842  001B                     	;# 
   843  001C                     	;# 
   844  001E                     	;# 
   845  001F                     	;# 
   846  008C                     	;# 
   847  008E                     	;# 
   848  0091                     	;# 
   849  0092                     	;# 
   850  0095                     	;# 
   851  0096                     	;# 
   852  0097                     	;# 
   853  0098                     	;# 
   854  0099                     	;# 
   855  009A                     	;# 
   856  009B                     	;# 
   857  009B                     	;# 
   858  009C                     	;# 
   859  009D                     	;# 
   860  009E                     	;# 
   861  010C                     	;# 
   862  010E                     	;# 
   863  0111                     	;# 
   864  0112                     	;# 
   865  0113                     	;# 
   866  0114                     	;# 
   867  0115                     	;# 
   868  0116                     	;# 
   869  0117                     	;# 
   870  0118                     	;# 
   871  0119                     	;# 
   872  011A                     	;# 
   873  011B                     	;# 
   874  011D                     	;# 
   875  011D                     	;# 
   876  018C                     	;# 
   877  018E                     	;# 
   878  0191                     	;# 
   879  0191                     	;# 
   880  0192                     	;# 
   881  0193                     	;# 
   882  0193                     	;# 
   883  0193                     	;# 
   884  0194                     	;# 
   885  0195                     	;# 
   886  0196                     	;# 
   887  0199                     	;# 
   888  019A                     	;# 
   889  019B                     	;# 
   890  019B                     	;# 
   891  019B                     	;# 
   892  019B                     	;# 
   893  019C                     	;# 
   894  019C                     	;# 
   895  019D                     	;# 
   896  019E                     	;# 
   897  019F                     	;# 
   898  020C                     	;# 
   899  020E                     	;# 
   900  0211                     	;# 
   901  0211                     	;# 
   902  0212                     	;# 
   903  0212                     	;# 
   904  0213                     	;# 
   905  0213                     	;# 
   906  0214                     	;# 
   907  0214                     	;# 
   908  0215                     	;# 
   909  0215                     	;# 
   910  0215                     	;# 
   911  0216                     	;# 
   912  0216                     	;# 
   913  0217                     	;# 
   914  0217                     	;# 
   915  0291                     	;# 
   916  0291                     	;# 
   917  0292                     	;# 
   918  0293                     	;# 
   919  0294                     	;# 
   920  0295                     	;# 
   921  0295                     	;# 
   922  0296                     	;# 
   923  0391                     	;# 
   924  0392                     	;# 
   925  0393                     	;# 
   926  039A                     	;# 
   927  039C                     	;# 
   928  039D                     	;# 
   929  039E                     	;# 
   930  039F                     	;# 
   931  0FE4                     	;# 
   932  0FE5                     	;# 
   933  0FE6                     	;# 
   934  0FE7                     	;# 
   935  0FE8                     	;# 
   936  0FE9                     	;# 
   937  0FEA                     	;# 
   938  0FEB                     	;# 
   939  0FED                     	;# 
   940  0FEE                     	;# 
   941  0FEF                     	;# 
   942  0000                     	;# 
   943  0001                     	;# 
   944  0002                     	;# 
   945  0003                     	;# 
   946  0004                     	;# 
   947  0005                     	;# 
   948  0006                     	;# 
   949  0007                     	;# 
   950  0008                     	;# 
   951  0009                     	;# 
   952  000A                     	;# 
   953  000B                     	;# 
   954  000C                     	;# 
   955  000E                     	;# 
   956  0011                     	;# 
   957  0012                     	;# 
   958  0015                     	;# 
   959  0016                     	;# 
   960  0016                     	;# 
   961  0017                     	;# 
   962  0018                     	;# 
   963  0019                     	;# 
   964  001A                     	;# 
   965  001B                     	;# 
   966  001C                     	;# 
   967  001E                     	;# 
   968  001F                     	;# 
   969  008C                     	;# 
   970  008E                     	;# 
   971  0091                     	;# 
   972  0092                     	;# 
   973  0095                     	;# 
   974  0096                     	;# 
   975  0097                     	;# 
   976  0098                     	;# 
   977  0099                     	;# 
   978  009A                     	;# 
   979  009B                     	;# 
   980  009B                     	;# 
   981  009C                     	;# 
   982  009D                     	;# 
   983  009E                     	;# 
   984  010C                     	;# 
   985  010E                     	;# 
   986  0111                     	;# 
   987  0112                     	;# 
   988  0113                     	;# 
   989  0114                     	;# 
   990  0115                     	;# 
   991  0116                     	;# 
   992  0117                     	;# 
   993  0118                     	;# 
   994  0119                     	;# 
   995  011A                     	;# 
   996  011B                     	;# 
   997  011D                     	;# 
   998  011D                     	;# 
   999  018C                     	;# 
  1000  018E                     	;# 
  1001  0191                     	;# 
  1002  0191                     	;# 
  1003  0192                     	;# 
  1004  0193                     	;# 
  1005  0193                     	;# 
  1006  0193                     	;# 
  1007  0194                     	;# 
  1008  0195                     	;# 
  1009  0196                     	;# 
  1010  0199                     	;# 
  1011  019A                     	;# 
  1012  019B                     	;# 
  1013  019B                     	;# 
  1014  019B                     	;# 
  1015  019B                     	;# 
  1016  019C                     	;# 
  1017  019C                     	;# 
  1018  019D                     	;# 
  1019  019E                     	;# 
  1020  019F                     	;# 
  1021  020C                     	;# 
  1022  020E                     	;# 
  1023  0211                     	;# 
  1024  0211                     	;# 
  1025  0212                     	;# 
  1026  0212                     	;# 
  1027  0213                     	;# 
  1028  0213                     	;# 
  1029  0214                     	;# 
  1030  0214                     	;# 
  1031  0215                     	;# 
  1032  0215                     	;# 
  1033  0215                     	;# 
  1034  0216                     	;# 
  1035  0216                     	;# 
  1036  0217                     	;# 
  1037  0217                     	;# 
  1038  0291                     	;# 
  1039  0291                     	;# 
  1040  0292                     	;# 
  1041  0293                     	;# 
  1042  0294                     	;# 
  1043  0295                     	;# 
  1044  0295                     	;# 
  1045  0296                     	;# 
  1046  0391                     	;# 
  1047  0392                     	;# 
  1048  0393                     	;# 
  1049  039A                     	;# 
  1050  039C                     	;# 
  1051  039D                     	;# 
  1052  039E                     	;# 
  1053  039F                     	;# 
  1054  0FE4                     	;# 
  1055  0FE5                     	;# 
  1056  0FE6                     	;# 
  1057  0FE7                     	;# 
  1058  0FE8                     	;# 
  1059  0FE9                     	;# 
  1060  0FEA                     	;# 
  1061  0FEB                     	;# 
  1062  0FED                     	;# 
  1063  0FEE                     	;# 
  1064  0FEF                     	;# 
  1065                           
  1066                           	psect	stringtext1
  1067  028A                     __pstringtext1:
  1068  028A                     _BAD_VALUE:
  1069  028A  3420               	retlw	32
  1070  028B  34A1               	retlw	161
  1071  028C  3407               	retlw	7
  1072  028D  3400               	retlw	0
  1073  028E                     __end_of_BAD_VALUE:
  1074                           
  1075                           	psect	stringtext2
  1076  028E                     __pstringtext2:
  1077  028E                     _ROTATION_TIME:
  1078  028E  34B4               	retlw	180
  1079  028F  3400               	retlw	0
  1080  0290  3400               	retlw	0
  1081  0291  3400               	retlw	0
  1082  0292                     __end_of_ROTATION_TIME:
  1083                           
  1084                           	psect	nvBANK0
  1085  002C                     __pnvBANK0:
  1086  002C                     _TMR0_InterruptHandler:
  1087  002C                     	ds	2
  1088  002E                     _TMR2_InterruptHandler:
  1089  002E                     	ds	2
  1090  0030                     _timer0ReloadVal:
  1091  0030                     	ds	1
  1092  000C                     _PORTAbits	set	12
  1093  000E                     _PORTCbits	set	14
  1094  0015                     _TMR0	set	21
  1095  001C                     _T2CONbits	set	28
  1096  001C                     _T2CON	set	28
  1097  001A                     _TMR2	set	26
  1098  001B                     _PR2	set	27
  1099  0011                     _PIR1bits	set	17
  1100  000B                     _INTCONbits	set	11
  1101  008C                     _TRISAbits	set	140
  1102  0095                     _OPTION_REG	set	149
  1103  0091                     _PIE1bits	set	145
  1104  0095                     _OPTION_REGbits	set	149
  1105  008E                     _TRISC	set	142
  1106  008C                     _TRISA	set	140
  1107  009D                     _ADCON0bits	set	157
  1108  009D                     _ADCON0	set	157
  1109  009C                     _ADRESH	set	156
  1110  009B                     _ADRESL	set	155
  1111  009E                     _ADCON1	set	158
  1112  0097                     _WDTCON	set	151
  1113  0098                     _OSCTUNE	set	152
  1114  0099                     _OSCCON	set	153
  1115  010C                     _LATAbits	set	268
  1116  010E                     _LATCbits	set	270
  1117  011D                     _APFCON	set	285
  1118  010E                     _LATC	set	270
  1119  010C                     _LATA	set	268
  1120  0116                     _BORCON	set	278
  1121  018C                     _ANSELA	set	396
  1122  018E                     _ANSELC	set	398
  1123  020E                     _WPUC	set	526
  1124  020C                     _WPUA	set	524
  1125                           
  1126                           	psect	cinit
  1127  0027                     start_initialization:	
  1128                           ; #config settings
  1129                           
  1130  0027                     __initialization:
  1131                           
  1132                           ; Clear objects allocated to COMMON
  1133  0027  01F8               	clrf	__pbssCOMMON& (0+127)
  1134  0028  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1135  0029  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1136  002A  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1137  002B  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1138  002C  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  1139                           
  1140                           ; Clear objects allocated to BANK0
  1141  002D  0020               	movlb	0	; select bank0
  1142  002E  01A0               	clrf	__pbssBANK0& (0+127)
  1143  002F  01A1               	clrf	(__pbssBANK0+1)& (0+127)
  1144  0030  01A2               	clrf	(__pbssBANK0+2)& (0+127)
  1145  0031  01A3               	clrf	(__pbssBANK0+3)& (0+127)
  1146  0032  01A4               	clrf	(__pbssBANK0+4)& (0+127)
  1147  0033  01A5               	clrf	(__pbssBANK0+5)& (0+127)
  1148  0034  01A6               	clrf	(__pbssBANK0+6)& (0+127)
  1149  0035  01A7               	clrf	(__pbssBANK0+7)& (0+127)
  1150  0036  01A8               	clrf	(__pbssBANK0+8)& (0+127)
  1151  0037  01A9               	clrf	(__pbssBANK0+9)& (0+127)
  1152  0038  01AA               	clrf	(__pbssBANK0+10)& (0+127)
  1153  0039  01AB               	clrf	(__pbssBANK0+11)& (0+127)
  1154  003A                     end_of_initialization:	
  1155                           ;End of C runtime variable initialization code
  1156                           
  1157  003A                     __end_of__initialization:
  1158  003A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1159  003B  0020               	movlb	0
  1160  003C  283D               	ljmp	_main	;jump to C main() function
  1161                           
  1162                           	psect	bssCOMMON
  1163  0078                     __pbssCOMMON:
  1164  0078                     switch_wm@jmp:
  1165  0078                     	ds	1
  1166  0079                     Sec_tick_work@iled:
  1167  0079                     	ds	1
  1168  007A                     get_measure@measures:
  1169  007A                     	ds	1
  1170  007B                     _ledd:
  1171  007B                     	ds	1
  1172  007C                     _zumm:
  1173  007C                     	ds	1
  1174  007D                     _FLAGS:
  1175  007D                     	ds	1
  1176                           
  1177                           	psect	bssBANK0
  1178  0020                     __pbssBANK0:
  1179  0020                     _time_s:
  1180  0020                     	ds	4
  1181  0024                     _result:
  1182  0024                     	ds	2
  1183  0026                     TMR2_ISR@CountCallBack:
  1184  0026                     	ds	2
  1185  0028                     _ADC_InterruptHandler:
  1186  0028                     	ds	2
  1187  002A                     _rcon:
  1188  002A                     	ds	1
  1189  002B                     _watt:
  1190  002B                     	ds	1
  1191                           
  1192                           	psect	cstackCOMMON
  1193  0070                     __pcstackCOMMON:
  1194  0070                     ?_PIN_MANAGER_Initialize:
  1195  0070                     ?_OSCILLATOR_Initialize:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198  0070                     ?_WDT_Initialize:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201  0070                     ?_TMR2_Initialize:	
  1202                           ; 1 bytes @ 0x0
  1203                           
  1204  0070                     ?_TMR0_Initialize:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207  0070                     ?_ADC_Initialize:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210  0070                     ?_TMR0_ISR:	
  1211                           ; 1 bytes @ 0x0
  1212                           
  1213  0070                     ??_TMR0_ISR:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216  0070                     ?_TMR2_ISR:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219  0070                     ?_TMR2_DefaultInterruptHandler:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222  0070                     ??_TMR2_DefaultInterruptHandler:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225  0070                     ?_TMR2_CallBack:	
  1226                           ; 1 bytes @ 0x0
  1227                           
  1228  0070                     ?_TMR0_DefaultInterruptHandler:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231  0070                     ??_TMR0_DefaultInterruptHandler:	
  1232                           ; 1 bytes @ 0x0
  1233                           
  1234  0070                     ?_SYSTEM_Initialize:	
  1235                           ; 1 bytes @ 0x0
  1236                           
  1237  0070                     ?_INTERRUPT_InterruptManager:	
  1238                           ; 1 bytes @ 0x0
  1239                           
  1240  0070                     ?_TMR2_StartTimer:	
  1241                           ; 1 bytes @ 0x0
  1242                           
  1243  0070                     ?_toggle_tone:	
  1244                           ; 1 bytes @ 0x0
  1245                           
  1246  0070                     ??_toggle_tone:	
  1247                           ; 1 bytes @ 0x0
  1248                           
  1249  0070                     ?_go_close:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252  0070                     ?_go_close_alt:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255  0070                     ?_go_open:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258  0070                     ?_get_measure:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261  0070                     ?_Sec_tick_work:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264  0070                     ?_povorot:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267  0070                     ?_fun_work:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270  0070                     ?_switch_wm:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273  0070                     ?_switch_zum:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276  0070                     ??_switch_zum:	
  1277                           ; 1 bytes @ 0x0
  1278                           
  1279  0070                     ?_main:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282  0070                     ??i1_start_alarm:	
  1283                           ; 1 bytes @ 0x0
  1284                           
  1285  0070                     ?_ADC_GetConversion:	
  1286                           ; 1 bytes @ 0x0
  1287                           
  1288  0070                     ?_start_alarm:	
  1289                           ; 2 bytes @ 0x0
  1290                           
  1291  0070                     ?i1_start_alarm:	
  1292                           ; 2 bytes @ 0x0
  1293                           
  1294                           
  1295                           ; 2 bytes @ 0x0
  1296  0070                     	ds	2
  1297  0072                     ??_ADC_GetConversion:
  1298                           
  1299                           ; 1 bytes @ 0x2
  1300  0072                     	ds	1
  1301  0073                     ADC_GetConversion@channel:
  1302                           
  1303                           ; 1 bytes @ 0x3
  1304  0073                     	ds	1
  1305  0074                     ??_get_measure:
  1306                           
  1307                           ; 1 bytes @ 0x4
  1308  0074                     	ds	1
  1309  0075                     get_measure@res:
  1310                           
  1311                           ; 2 bytes @ 0x5
  1312  0075                     	ds	2
  1313  0077                     ??_Sec_tick_work:
  1314                           
  1315                           ; 1 bytes @ 0x7
  1316  0077                     	ds	1
  1317  0078                     ??_TMR2_ISR:
  1318  0078                     ??_TMR2_CallBack:	
  1319                           ; 1 bytes @ 0x8
  1320                           
  1321  0078                     ??_INTERRUPT_InterruptManager:	
  1322                           ; 1 bytes @ 0x8
  1323                           
  1324                           
  1325                           	psect	cstackBANK0
  1326  0031                     __pcstackBANK0:	
  1327                           ; 1 bytes @ 0x8
  1328                           
  1329  0031                     ??_PIN_MANAGER_Initialize:
  1330  0031                     ??_OSCILLATOR_Initialize:	
  1331                           ; 1 bytes @ 0x0
  1332                           
  1333  0031                     ??_WDT_Initialize:	
  1334                           ; 1 bytes @ 0x0
  1335                           
  1336  0031                     ??_ADC_Initialize:	
  1337                           ; 1 bytes @ 0x0
  1338                           
  1339  0031                     ?_TMR2_SetInterruptHandler:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342  0031                     ?_TMR0_SetInterruptHandler:	
  1343                           ; 1 bytes @ 0x0
  1344                           
  1345  0031                     ??_TMR2_StartTimer:	
  1346                           ; 1 bytes @ 0x0
  1347                           
  1348  0031                     ??_start_alarm:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351  0031                     ??_go_close:	
  1352                           ; 1 bytes @ 0x0
  1353                           
  1354  0031                     ??_go_close_alt:	
  1355                           ; 1 bytes @ 0x0
  1356                           
  1357  0031                     ??_go_open:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0031                     ??_switch_wm:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0031                     TMR2_SetInterruptHandler@InterruptHandler:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366  0031                     TMR0_SetInterruptHandler@InterruptHandler:	
  1367                           ; 2 bytes @ 0x0
  1368                           
  1369                           
  1370                           ; 2 bytes @ 0x0
  1371  0031                     	ds	1
  1372  0032                     go_close@i:
  1373                           
  1374                           ; 1 bytes @ 0x1
  1375  0032                     	ds	1
  1376  0033                     ??_TMR2_Initialize:
  1377  0033                     ??_TMR0_Initialize:	
  1378                           ; 1 bytes @ 0x2
  1379                           
  1380  0033                     ??_TMR2_SetInterruptHandler:	
  1381                           ; 1 bytes @ 0x2
  1382                           
  1383  0033                     ??_TMR0_SetInterruptHandler:	
  1384                           ; 1 bytes @ 0x2
  1385                           
  1386  0033                     ??_povorot:	
  1387                           ; 1 bytes @ 0x2
  1388                           
  1389  0033                     ??_fun_work:	
  1390                           ; 1 bytes @ 0x2
  1391                           
  1392                           
  1393                           ; 1 bytes @ 0x2
  1394  0033                     	ds	1
  1395  0034                     ??_SYSTEM_Initialize:
  1396  0034                     ??_main:	
  1397                           ; 1 bytes @ 0x3
  1398                           
  1399                           
  1400                           ; 1 bytes @ 0x3
  1401  0034                     	ds	1
  1402                           
  1403                           	psect	maintext
  1404  003D                     __pmaintext:	
  1405 ;;
  1406 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1407 ;;
  1408 ;; *************** function _main *****************
  1409 ;; Defined at:
  1410 ;;		line 173 in file "main.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;		None
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;		None
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  1    wreg      void 
  1417 ;; Registers used:
  1418 ;;		wreg, status,2, status,0, pclath, cstack
  1419 ;; Tracked objects:
  1420 ;;		On entry : B1F/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMMON   BANK0   BANK1
  1424 ;;      Params:         0       0       0
  1425 ;;      Locals:         0       0       0
  1426 ;;      Temps:          0       1       0
  1427 ;;      Totals:         0       1       0
  1428 ;;Total ram usage:        1 bytes
  1429 ;; Hardware stack levels required when called: 9
  1430 ;; This function calls:
  1431 ;;		_SYSTEM_Initialize
  1432 ;;		_TMR0_SetInterruptHandler
  1433 ;;		_TMR2_SetInterruptHandler
  1434 ;;		_TMR2_StartTimer
  1435 ;;		_fun_work
  1436 ;;		_go_close
  1437 ;;		_go_close_alt
  1438 ;;		_povorot
  1439 ;;		_start_alarm
  1440 ;;		_switch_wm
  1441 ;; This function is called by:
  1442 ;;		Startup code after reset
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446  003D                     _main:	
  1447                           ;psect for function _main
  1448                           
  1449  003D                     l1485:	
  1450                           ;incstack = 0
  1451                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1452                           
  1453                           
  1454                           ;main.c: 175:     SYSTEM_Initialize();
  1455  003D  3181  21FA  3180   	fcall	_SYSTEM_Initialize
  1456  0040                     l1487:
  1457                           
  1458                           ;main.c: 179:     (INTCONbits.GIE = 1);
  1459  0040  178B               	bsf	11,7	;volatile
  1460  0041                     l1489:
  1461                           
  1462                           ;main.c: 182:     (INTCONbits.PEIE = 1);
  1463  0041  170B               	bsf	11,6	;volatile
  1464                           
  1465                           ;main.c: 190:     TMR0_SetInterruptHandler(switch_zum);
  1466  0042  3031               	movlw	low _switch_zum
  1467  0043  0020               	movlb	0	; select bank0
  1468  0044  00B1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1469  0045  3002               	movlw	high _switch_zum
  1470  0046  00B2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1471  0047  3182  227A  3180   	fcall	_TMR0_SetInterruptHandler
  1472                           
  1473                           ;main.c: 192:     TMR2_SetInterruptHandler(Sec_tick_work);
  1474  004A  30C8               	movlw	low _Sec_tick_work
  1475  004B  0020               	movlb	0	; select bank0
  1476  004C  00B1               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  1477  004D  3000               	movlw	high _Sec_tick_work
  1478  004E  00B2               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  1479  004F  3182  2274  3180   	fcall	_TMR2_SetInterruptHandler
  1480  0052                     l1491:
  1481                           
  1482                           ;main.c: 194:     TMR2_StartTimer();
  1483  0052  3182  2296  3180   	fcall	_TMR2_StartTimer
  1484  0055                     l1493:
  1485  0055  0022               	movlb	2	; select bank2
  1486  0056  100E               	bcf	14,0	;volatile
  1487  0057                     l1495:
  1488                           
  1489                           ;main.c: 197:     INTCONbits.TMR0IE = 0;
  1490  0057  128B               	bcf	11,5	;volatile
  1491  0058                     l1497:
  1492                           
  1493                           ;main.c: 198:     FLAGS.value = 0;
  1494  0058  01FD               	clrf	_FLAGS
  1495  0059                     l1499:
  1496                           
  1497                           ;main.c: 201:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1498  0059  300D               	movlw	13
  1499  005A  0020               	movlb	0	; select bank0
  1500  005B  00B4               	movwf	??_main
  1501  005C  30FB               	movlw	251
  1502  005D                     u817:
  1503  005D  0B89               	decfsz	9,f
  1504  005E  285D               	goto	u817
  1505  005F  0BB4               	decfsz	??_main,f
  1506  0060  285D               	goto	u817
  1507  0061  3200               	nop2
  1508  0062                     l1501:
  1509                           
  1510                           ;main.c: 204:         if (FLAGS.bits.ALARM) {
  1511  0062  1C7D               	btfss	_FLAGS,0
  1512  0063  2865               	goto	u781
  1513  0064  2866               	goto	u780
  1514  0065                     u781:
  1515  0065  2878               	goto	l1511
  1516  0066                     u780:
  1517  0066                     l1503:
  1518                           
  1519                           ;main.c: 205:             if (FLAGS.bits.WORK_MODE) {
  1520  0066  1CFD               	btfss	_FLAGS,1
  1521  0067  2869               	goto	u791
  1522  0068  286A               	goto	u790
  1523  0069                     u791:
  1524  0069  2871               	goto	l1507
  1525  006A                     u790:
  1526  006A                     l1505:
  1527                           
  1528                           ;main.c: 206:                 go_close_alt();
  1529  006A  3182  226E  3180   	fcall	_go_close_alt
  1530                           
  1531                           ;main.c: 207:                 start_alarm();
  1532  006D  3182  2280  3180   	fcall	_start_alarm
  1533                           
  1534                           ;main.c: 208:             } else {
  1535  0070  2881               	goto	l1513
  1536  0071                     l1507:
  1537                           
  1538                           ;main.c: 209:                 go_close();
  1539  0071  3180  208B  3180   	fcall	_go_close
  1540  0074                     l1509:
  1541                           
  1542                           ;main.c: 210:                 start_alarm();
  1543  0074  3182  2280  3180   	fcall	_start_alarm
  1544  0077  2881               	goto	l1513
  1545  0078                     l1511:
  1546                           
  1547                           ;main.c: 213:             fun_work();
  1548  0078  3181  218D  3180   	fcall	_fun_work
  1549                           
  1550                           ;main.c: 214:             povorot();
  1551  007B  3181  2100  3180   	fcall	_povorot
  1552                           
  1553                           ;main.c: 215:             switch_wm();
  1554  007E  3181  2132  3180   	fcall	_switch_wm
  1555  0081                     l1513:
  1556                           
  1557                           ;main.c: 218:         if (result>0)
  1558  0081  0020               	movlb	0	; select bank0
  1559  0082  0824               	movf	_result,w
  1560  0083  0425               	iorwf	_result+1,w
  1561  0084  1903               	btfsc	3,2
  1562  0085  2887               	goto	u801
  1563  0086  2888               	goto	u800
  1564  0087                     u801:
  1565  0087  2859               	goto	l1499
  1566  0088                     u800:
  1567  0088                     l1515:
  1568  0088  0064               	clrwdt	;# 
  1569  0089  2859               	goto	l1499
  1570  008A  2826               	ljmp	start
  1571  008B                     __end_of_main:
  1572                           
  1573                           	psect	text1
  1574  0132                     __ptext1:	
  1575 ;; *************** function _switch_wm *****************
  1576 ;; Defined at:
  1577 ;;		line 151 in file "main.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;		None
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;		None
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      void 
  1584 ;; Registers used:
  1585 ;;		wreg, status,2, status,0
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMMON   BANK0   BANK1
  1591 ;;      Params:         0       0       0
  1592 ;;      Locals:         0       0       0
  1593 ;;      Temps:          0       1       0
  1594 ;;      Totals:         0       1       0
  1595 ;;Total ram usage:        1 bytes
  1596 ;; Hardware stack levels used: 1
  1597 ;; Hardware stack levels required when called: 6
  1598 ;; This function calls:
  1599 ;;		Nothing
  1600 ;; This function is called by:
  1601 ;;		_main
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605  0132                     _switch_wm:	
  1606                           ;psect for function _switch_wm
  1607                           
  1608  0132                     l1459:	
  1609                           ;incstack = 0
  1610                           ; Regs used in _switch_wm: [wreg+status,2+status,0]
  1611                           
  1612                           
  1613                           ;main.c: 152:     static char jmp;;main.c: 154:     if (PORTAbits.RA1) {
  1614  0132  0020               	movlb	0	; select bank0
  1615  0133  1C8C               	btfss	12,1	;volatile
  1616  0134  2936               	goto	u671
  1617  0135  2937               	goto	u670
  1618  0136                     u671:
  1619  0136  293C               	goto	l1463
  1620  0137                     u670:
  1621  0137                     l1461:
  1622                           
  1623                           ;main.c: 155:         jmp++;
  1624  0137  3001               	movlw	1
  1625  0138  00B1               	movwf	??_switch_wm
  1626  0139  0831               	movf	??_switch_wm,w
  1627  013A  07F8               	addwf	switch_wm@jmp,f
  1628                           
  1629                           ;main.c: 156:     } else {
  1630  013B  293E               	goto	l1465
  1631  013C                     l1463:
  1632                           
  1633                           ;main.c: 157:         jmp--;
  1634  013C  3001               	movlw	1
  1635  013D  02F8               	subwf	switch_wm@jmp,f
  1636  013E                     l1465:
  1637                           
  1638                           ;main.c: 159:     if (jmp > 10) {
  1639  013E  300B               	movlw	11
  1640  013F  0278               	subwf	switch_wm@jmp,w
  1641  0140  1C03               	skipc
  1642  0141  2943               	goto	u681
  1643  0142  2944               	goto	u680
  1644  0143                     u681:
  1645  0143  294C               	goto	l329
  1646  0144                     u680:
  1647  0144                     l1467:
  1648                           
  1649                           ;main.c: 160:         FLAGS.bits.JUMP = 1;
  1650  0144  167D               	bsf	_FLAGS,4
  1651                           
  1652                           ;main.c: 161:         FLAGS.bits.WORK_MODE = FLAGS.bits.JUMP;
  1653  0145  1A7D               	btfsc	_FLAGS,4
  1654  0146  2948               	goto	u691
  1655  0147  294A               	goto	u690
  1656  0148                     u691:
  1657  0148  14FD               	bsf	_FLAGS,1
  1658  0149  294B               	goto	u704
  1659  014A                     u690:
  1660  014A  10FD               	bcf	_FLAGS,1
  1661  014B                     u704:
  1662                           
  1663                           ;main.c: 162:     } else if (jmp < -10) {
  1664  014B  2953               	goto	l332
  1665  014C                     l329:
  1666                           
  1667                           ;main.c: 163:         FLAGS.bits.JUMP = 0;
  1668  014C  127D               	bcf	_FLAGS,4
  1669                           
  1670                           ;main.c: 164:         FLAGS.bits.WORK_MODE = FLAGS.bits.JUMP;
  1671  014D  1A7D               	btfsc	_FLAGS,4
  1672  014E  2950               	goto	u711
  1673  014F  2952               	goto	u710
  1674  0150                     u711:
  1675  0150  14FD               	bsf	_FLAGS,1
  1676  0151  2953               	goto	u724
  1677  0152                     u710:
  1678  0152  10FD               	bcf	_FLAGS,1
  1679  0153                     u724:
  1680  0153                     l332:
  1681  0153  0008               	return
  1682  0154                     __end_of_switch_wm:
  1683                           
  1684                           	psect	text2
  1685  0280                     __ptext2:	
  1686 ;; *************** function _start_alarm *****************
  1687 ;; Defined at:
  1688 ;;		line 33 in file "main.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;		None
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;		None
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  2  248[None  ] int 
  1695 ;; Registers used:
  1696 ;;		None
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMMON   BANK0   BANK1
  1702 ;;      Params:         0       0       0
  1703 ;;      Locals:         0       0       0
  1704 ;;      Temps:          0       0       0
  1705 ;;      Totals:         0       0       0
  1706 ;;Total ram usage:        0 bytes
  1707 ;; Hardware stack levels used: 1
  1708 ;; Hardware stack levels required when called: 6
  1709 ;; This function calls:
  1710 ;;		Nothing
  1711 ;; This function is called by:
  1712 ;;		_main
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716  0280                     _start_alarm:	
  1717                           ;psect for function _start_alarm
  1718                           
  1719  0280                     l1427:	
  1720                           ;incstack = 0
  1721                           ; Regs used in _start_alarm: []
  1722                           
  1723                           
  1724                           ;main.c: 34:     FLAGS.bits.ALARM = 1;
  1725  0280  147D               	bsf	_FLAGS,0
  1726  0281                     l249:	
  1727                           ;main.c: 35:     do { LATCbits.LATC0 = 1; } while(0);
  1728                           
  1729  0281  0022               	movlb	2	; select bank2
  1730  0282  140E               	bsf	14,0	;volatile
  1731  0283                     l250:
  1732                           
  1733                           ;main.c: 36:     INTCONbits.TMR0IE = 1;
  1734  0283  168B               	bsf	11,5	;volatile
  1735  0284                     l251:
  1736  0284  0008               	return
  1737  0285                     __end_of_start_alarm:
  1738                           
  1739                           	psect	text3
  1740  0100                     __ptext3:	
  1741 ;; *************** function _povorot *****************
  1742 ;; Defined at:
  1743 ;;		line 122 in file "main.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;		None
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;		None
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0, pclath, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMMON   BANK0   BANK1
  1757 ;;      Params:         0       0       0
  1758 ;;      Locals:         0       0       0
  1759 ;;      Temps:          0       1       0
  1760 ;;      Totals:         0       1       0
  1761 ;;Total ram usage:        1 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; Hardware stack levels required when called: 7
  1764 ;; This function calls:
  1765 ;;		_go_close
  1766 ;;		_go_open
  1767 ;; This function is called by:
  1768 ;;		_main
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772  0100                     _povorot:	
  1773                           ;psect for function _povorot
  1774                           
  1775  0100                     l1435:	
  1776                           ;incstack = 0
  1777                           ; Regs used in _povorot: [wreg+status,2+status,0+pclath+cstack]
  1778                           
  1779                           
  1780                           ;main.c: 123:     if (
  1781  0100  0020               	movlb	0	; select bank0
  1782  0101  1BA3               	btfsc	_time_s+3,7
  1783  0102  2911               	goto	u611
  1784  0103  0823               	movf	_time_s+3,w
  1785  0104  1D03               	btfss	3,2
  1786  0105  2912               	goto	u610
  1787  0106  0822               	movf	_time_s+2,w
  1788  0107  1D03               	btfss	3,2
  1789  0108  2912               	goto	u610
  1790  0109  0821               	movf	_time_s+1,w
  1791  010A  1D03               	btfss	3,2
  1792  010B  2912               	goto	u610
  1793  010C  30B5               	movlw	181
  1794  010D  0220               	subwf	_time_s,w
  1795  010E  1C03               	btfss	3,0
  1796  010F  2911               	goto	u611
  1797  0110  2912               	goto	u610
  1798  0111                     u611:
  1799  0111  2931               	goto	l315
  1800  0112                     u610:
  1801  0112                     l1437:
  1802  0112  1D7D               	btfss	_FLAGS,2
  1803  0113  2915               	goto	u621
  1804  0114  2916               	goto	u620
  1805  0115                     u621:
  1806  0115  2931               	goto	l315
  1807  0116                     u620:
  1808  0116                     l1439:
  1809  0116  1CFD               	btfss	_FLAGS,1
  1810  0117  2919               	goto	u631
  1811  0118  291A               	goto	u630
  1812  0119                     u631:
  1813  0119  2931               	goto	l315
  1814  011A                     u630:
  1815  011A                     l1441:
  1816                           
  1817                           ;main.c: 128:             ) {;main.c: 129:         go_open();
  1818  011A  3181  21BB  3181   	fcall	_go_open
  1819  011D                     l1443:
  1820                           
  1821                           ;main.c: 130:         _delay((unsigned long)((5)*(4000000/4000.0)));
  1822  011D  3007               	movlw	7
  1823  011E  0020               	movlb	0	; select bank0
  1824  011F  00B3               	movwf	??_povorot
  1825  0120  307D               	movlw	125
  1826  0121                     u827:
  1827  0121  0B89               	decfsz	9,f
  1828  0122  2921               	goto	u827
  1829  0123  0BB3               	decfsz	??_povorot,f
  1830  0124  2921               	goto	u827
  1831  0125                     l1445:
  1832                           
  1833                           ;main.c: 131:         go_close();
  1834  0125  3180  208B  3181   	fcall	_go_close
  1835                           
  1836                           ;main.c: 132:         time_s = 0;
  1837  0128  3000               	movlw	0
  1838  0129  0020               	movlb	0	; select bank0
  1839  012A  00A3               	movwf	_time_s+3
  1840  012B  3000               	movlw	0
  1841  012C  00A2               	movwf	_time_s+2
  1842  012D  3000               	movlw	0
  1843  012E  00A1               	movwf	_time_s+1
  1844  012F  3000               	movlw	0
  1845  0130  00A0               	movwf	_time_s
  1846  0131                     l315:
  1847  0131  0008               	return
  1848  0132                     __end_of_povorot:
  1849                           
  1850                           	psect	text4
  1851  026E                     __ptext4:	
  1852 ;; *************** function _go_close_alt *****************
  1853 ;; Defined at:
  1854 ;;		line 61 in file "main.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;		None
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;		None
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      void 
  1861 ;; Registers used:
  1862 ;;		status,2
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMMON   BANK0   BANK1
  1868 ;;      Params:         0       0       0
  1869 ;;      Locals:         0       0       0
  1870 ;;      Temps:          0       0       0
  1871 ;;      Totals:         0       0       0
  1872 ;;Total ram usage:        0 bytes
  1873 ;; Hardware stack levels used: 1
  1874 ;; Hardware stack levels required when called: 6
  1875 ;; This function calls:
  1876 ;;		Nothing
  1877 ;; This function is called by:
  1878 ;;		_main
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882  026E                     _go_close_alt:	
  1883                           ;psect for function _go_close_alt
  1884                           
  1885  026E                     l1429:	
  1886                           ;incstack = 0
  1887                           ; Regs used in _go_close_alt: [status,2]
  1888                           
  1889                           
  1890                           ;main.c: 62:     watt = 0;
  1891  026E  0020               	movlb	0	; select bank0
  1892  026F  01AB               	clrf	_watt
  1893  0270                     l1431:
  1894                           
  1895                           ;main.c: 63:     FLAGS.bits.FUN_OLD = 0;
  1896  0270  117D               	bcf	_FLAGS,2
  1897  0271                     l1433:
  1898  0271  0022               	movlb	2	; select bank2
  1899  0272  168E               	bsf	14,5	;volatile
  1900  0273                     l275:
  1901  0273  0008               	return
  1902  0274                     __end_of_go_close_alt:
  1903                           
  1904                           	psect	text5
  1905  018D                     __ptext5:	
  1906 ;; *************** function _fun_work *****************
  1907 ;; Defined at:
  1908 ;;		line 136 in file "main.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;		None
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;		None
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      void 
  1915 ;; Registers used:
  1916 ;;		wreg, status,2, status,0, pclath, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1
  1922 ;;      Params:         0       0       0
  1923 ;;      Locals:         0       0       0
  1924 ;;      Temps:          0       0       0
  1925 ;;      Totals:         0       0       0
  1926 ;;Total ram usage:        0 bytes
  1927 ;; Hardware stack levels used: 1
  1928 ;; Hardware stack levels required when called: 7
  1929 ;; This function calls:
  1930 ;;		_go_close
  1931 ;;		_go_open
  1932 ;; This function is called by:
  1933 ;;		_main
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937  018D                     _fun_work:	
  1938                           ;psect for function _fun_work
  1939                           
  1940  018D                     l1447:	
  1941                           ;incstack = 0
  1942                           ; Regs used in _fun_work: [wreg+status,2+status,0+pclath+cstack]
  1943                           
  1944                           
  1945                           ;main.c: 137:     if (FLAGS.bits.FUN_OLD)
  1946  018D  1D7D               	btfss	_FLAGS,2
  1947  018E  2990               	goto	u641
  1948  018F  2991               	goto	u640
  1949  0190                     u641:
  1950  0190  299B               	goto	l318
  1951  0191                     u640:
  1952  0191                     l1449:
  1953                           
  1954                           ;main.c: 138:     {;main.c: 139:         if (PORTCbits.RC2 == 0) {
  1955  0191  0020               	movlb	0	; select bank0
  1956  0192  190E               	btfsc	14,2	;volatile
  1957  0193  2995               	goto	u651
  1958  0194  2996               	goto	u650
  1959  0195                     u651:
  1960  0195  29A4               	goto	l322
  1961  0196                     u650:
  1962  0196                     l1451:
  1963                           
  1964                           ;main.c: 140:             go_close();
  1965  0196  3180  208B  3181   	fcall	_go_close
  1966  0199                     l1453:
  1967                           
  1968                           ;main.c: 141:             FLAGS.bits.FUN_OLD = 0;
  1969  0199  117D               	bcf	_FLAGS,2
  1970  019A  29A4               	goto	l322
  1971  019B                     l318:
  1972                           
  1973                           ;main.c: 144:         if (PORTCbits.RC2 == 1) {
  1974  019B  0020               	movlb	0	; select bank0
  1975  019C  1D0E               	btfss	14,2	;volatile
  1976  019D  299F               	goto	u661
  1977  019E  29A0               	goto	u660
  1978  019F                     u661:
  1979  019F  29A4               	goto	l322
  1980  01A0                     u660:
  1981  01A0                     l1455:
  1982                           
  1983                           ;main.c: 145:             go_open();
  1984  01A0  3181  21BB  3181   	fcall	_go_open
  1985  01A3                     l1457:
  1986                           
  1987                           ;main.c: 146:             FLAGS.bits.FUN_OLD = 1;
  1988  01A3  157D               	bsf	_FLAGS,2
  1989  01A4                     l322:
  1990  01A4  0008               	return
  1991  01A5                     __end_of_fun_work:
  1992                           
  1993                           	psect	text6
  1994  01BB                     __ptext6:	
  1995 ;; *************** function _go_open *****************
  1996 ;; Defined at:
  1997 ;;		line 67 in file "main.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMMON   BANK0   BANK1
  2011 ;;      Params:         0       0       0
  2012 ;;      Locals:         0       0       0
  2013 ;;      Temps:          0       0       0
  2014 ;;      Totals:         0       0       0
  2015 ;;Total ram usage:        0 bytes
  2016 ;; Hardware stack levels used: 1
  2017 ;; Hardware stack levels required when called: 6
  2018 ;; This function calls:
  2019 ;;		Nothing
  2020 ;; This function is called by:
  2021 ;;		_povorot
  2022 ;;		_fun_work
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026  01BB                     _go_open:	
  2027                           ;psect for function _go_open
  2028                           
  2029  01BB                     l1393:	
  2030                           ;incstack = 0
  2031                           ; Regs used in _go_open: [wreg]
  2032                           
  2033                           
  2034                           ;main.c: 69:     watt = 1;
  2035  01BB  0020               	movlb	0	; select bank0
  2036  01BC  01AB               	clrf	_watt
  2037  01BD  0AAB               	incf	_watt,f
  2038                           
  2039                           ;main.c: 70:     FLAGS.bits.FUN_OLD = 1;
  2040  01BE  157D               	bsf	_FLAGS,2
  2041  01BF                     l1395:
  2042                           
  2043                           ;main.c: 72:     time_s = 0;
  2044  01BF  3000               	movlw	0
  2045  01C0  00A3               	movwf	_time_s+3
  2046  01C1  3000               	movlw	0
  2047  01C2  00A2               	movwf	_time_s+2
  2048  01C3  3000               	movlw	0
  2049  01C4  00A1               	movwf	_time_s+1
  2050  01C5  3000               	movlw	0
  2051  01C6  00A0               	movwf	_time_s
  2052  01C7                     l1397:
  2053  01C7  0022               	movlb	2	; select bank2
  2054  01C8  168E               	bsf	14,5	;volatile
  2055  01C9                     l279:
  2056                           
  2057                           ;main.c: 74:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2058  01C9  30C8               	movlw	200
  2059  01CA                     u837:
  2060  01CA  3200               	nop2
  2061  01CB  0B89               	decfsz	9,f
  2062  01CC  29CA               	goto	u837
  2063  01CD                     l1399:
  2064  01CD  0022               	movlb	2	; select bank2
  2065  01CE  128E               	bcf	14,5	;volatile
  2066  01CF                     l282:
  2067  01CF  0008               	return
  2068  01D0                     __end_of_go_open:
  2069                           
  2070                           	psect	text7
  2071  008B                     __ptext7:	
  2072 ;; *************** function _go_close *****************
  2073 ;; Defined at:
  2074 ;;		line 44 in file "main.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;		None
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  i               1    1[BANK0 ] unsigned char 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMMON   BANK0   BANK1
  2088 ;;      Params:         0       0       0
  2089 ;;      Locals:         0       1       0
  2090 ;;      Temps:          0       1       0
  2091 ;;      Totals:         0       2       0
  2092 ;;Total ram usage:        2 bytes
  2093 ;; Hardware stack levels used: 1
  2094 ;; Hardware stack levels required when called: 6
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_povorot
  2099 ;;		_fun_work
  2100 ;;		_main
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104  008B                     _go_close:	
  2105                           ;psect for function _go_close
  2106                           
  2107  008B                     l1367:	
  2108                           ;incstack = 0
  2109                           ; Regs used in _go_close: [wreg+status,2+status,0]
  2110                           
  2111                           
  2112                           ;main.c: 46:     watt = 0;
  2113  008B  0020               	movlb	0	; select bank0
  2114  008C  01AB               	clrf	_watt
  2115  008D                     l1369:
  2116  008D  0022               	movlb	2	; select bank2
  2117  008E  160E               	bsf	14,4	;volatile
  2118  008F                     l1371:
  2119                           
  2120                           ;main.c: 49:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2121  008F  3007               	movlw	7
  2122  0090  0020               	movlb	0	; select bank0
  2123  0091  00B1               	movwf	??_go_close
  2124  0092  307D               	movlw	125
  2125  0093                     u847:
  2126  0093  0B89               	decfsz	9,f
  2127  0094  2893               	goto	u847
  2128  0095  0BB1               	decfsz	??_go_close,f
  2129  0096  2893               	goto	u847
  2130  0097                     l1373:
  2131  0097  0022               	movlb	2	; select bank2
  2132  0098  168E               	bsf	14,5	;volatile
  2133  0099                     l1375:
  2134                           
  2135                           ;main.c: 51:     for (char i = 0; i < 120; i++) {
  2136  0099  0020               	movlb	0	; select bank0
  2137  009A  01B2               	clrf	go_close@i
  2138  009B                     l1379:
  2139  009B  1003               	clrc
  2140  009C  0022               	movlb	2	; select bank2
  2141  009D  1E0C               	btfss	12,4	;volatile
  2142  009E  1403               	setc
  2143  009F  1803               	btfsc	3,0
  2144  00A0  28A2               	goto	u531
  2145  00A1  28A5               	goto	u530
  2146  00A2                     u531:
  2147  00A2  0022               	movlb	2	; select bank2
  2148  00A3  160C               	bsf	12,4	;volatile
  2149  00A4  28A7               	goto	u544
  2150  00A5                     u530:
  2151  00A5  0022               	movlb	2	; select bank2
  2152  00A6  120C               	bcf	12,4	;volatile
  2153  00A7                     u544:
  2154  00A7                     l1381:
  2155                           
  2156                           ;main.c: 53:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2157  00A7  300D               	movlw	13
  2158  00A8  0020               	movlb	0	; select bank0
  2159  00A9  00B1               	movwf	??_go_close
  2160  00AA  30FB               	movlw	251
  2161  00AB                     u857:
  2162  00AB  0B89               	decfsz	9,f
  2163  00AC  28AB               	goto	u857
  2164  00AD  0BB1               	decfsz	??_go_close,f
  2165  00AE  28AB               	goto	u857
  2166  00AF  3200               	nop2
  2167  00B0                     l1383:
  2168                           
  2169                           ;main.c: 54:     }
  2170  00B0  3001               	movlw	1
  2171  00B1  0020               	movlb	0	; select bank0
  2172  00B2  00B1               	movwf	??_go_close
  2173  00B3  0831               	movf	??_go_close,w
  2174  00B4  07B2               	addwf	go_close@i,f
  2175  00B5                     l1385:
  2176  00B5  3078               	movlw	120
  2177  00B6  0232               	subwf	go_close@i,w
  2178  00B7  1C03               	skipc
  2179  00B8  28BA               	goto	u551
  2180  00B9  28BB               	goto	u550
  2181  00BA                     u551:
  2182  00BA  289B               	goto	l1379
  2183  00BB                     u550:
  2184  00BB                     l266:	
  2185                           ;main.c: 55:     do { LATCbits.LATC5 = 0; } while(0);
  2186                           
  2187  00BB  0022               	movlb	2	; select bank2
  2188  00BC  128E               	bcf	14,5	;volatile
  2189  00BD                     l1387:
  2190                           
  2191                           ;main.c: 56:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2192  00BD  3007               	movlw	7
  2193  00BE  0020               	movlb	0	; select bank0
  2194  00BF  00B1               	movwf	??_go_close
  2195  00C0  307D               	movlw	125
  2196  00C1                     u867:
  2197  00C1  0B89               	decfsz	9,f
  2198  00C2  28C1               	goto	u867
  2199  00C3  0BB1               	decfsz	??_go_close,f
  2200  00C4  28C1               	goto	u867
  2201  00C5                     l1389:
  2202  00C5  0022               	movlb	2	; select bank2
  2203  00C6  120E               	bcf	14,4	;volatile
  2204  00C7                     l270:
  2205  00C7  0008               	return
  2206  00C8                     __end_of_go_close:
  2207                           
  2208                           	psect	text8
  2209  0296                     __ptext8:	
  2210 ;; *************** function _TMR2_StartTimer *****************
  2211 ;; Defined at:
  2212 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		None
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMMON   BANK0   BANK1
  2226 ;;      Params:         0       0       0
  2227 ;;      Locals:         0       0       0
  2228 ;;      Temps:          0       0       0
  2229 ;;      Totals:         0       0       0
  2230 ;;Total ram usage:        0 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 6
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_main
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240  0296                     _TMR2_StartTimer:	
  2241                           ;psect for function _TMR2_StartTimer
  2242                           
  2243  0296                     l1425:	
  2244                           ;incstack = 0
  2245                           ; Regs used in _TMR2_StartTimer: []
  2246                           
  2247                           
  2248                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  2249  0296  0020               	movlb	0	; select bank0
  2250  0297  151C               	bsf	28,2	;volatile
  2251  0298                     l140:
  2252  0298  0008               	return
  2253  0299                     __end_of_TMR2_StartTimer:
  2254                           
  2255                           	psect	text9
  2256  01FA                     __ptext9:	
  2257 ;; *************** function _SYSTEM_Initialize *****************
  2258 ;; Defined at:
  2259 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0, pclath, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1
  2273 ;;      Params:         0       0       0
  2274 ;;      Locals:         0       0       0
  2275 ;;      Temps:          0       0       0
  2276 ;;      Totals:         0       0       0
  2277 ;;Total ram usage:        0 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; Hardware stack levels required when called: 8
  2280 ;; This function calls:
  2281 ;;		_ADC_Initialize
  2282 ;;		_OSCILLATOR_Initialize
  2283 ;;		_PIN_MANAGER_Initialize
  2284 ;;		_TMR0_Initialize
  2285 ;;		_TMR2_Initialize
  2286 ;;		_WDT_Initialize
  2287 ;; This function is called by:
  2288 ;;		_main
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292  01FA                     _SYSTEM_Initialize:	
  2293                           ;psect for function _SYSTEM_Initialize
  2294                           
  2295  01FA                     l1407:	
  2296                           ;incstack = 0
  2297                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2298                           
  2299                           
  2300                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2301  01FA  3181  21E5  3181   	fcall	_PIN_MANAGER_Initialize
  2302                           
  2303                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2304  01FD  3182  2267  3181   	fcall	_OSCILLATOR_Initialize
  2305                           
  2306                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2307  0200  3182  2292  3181   	fcall	_WDT_Initialize
  2308                           
  2309                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  2310  0203  3182  220D  3181   	fcall	_TMR2_Initialize
  2311                           
  2312                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  2313  0206  3181  21D0  3181   	fcall	_TMR0_Initialize
  2314                           
  2315                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  2316  0209  3182  225F  3181   	fcall	_ADC_Initialize
  2317  020C                     l23:
  2318  020C  0008               	return
  2319  020D                     __end_of_SYSTEM_Initialize:
  2320                           
  2321                           	psect	text10
  2322  0292                     __ptext10:	
  2323 ;; *************** function _WDT_Initialize *****************
  2324 ;; Defined at:
  2325 ;;		line 71 in file "mcc_generated_files/mcc.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMMON   BANK0   BANK1
  2339 ;;      Params:         0       0       0
  2340 ;;      Locals:         0       0       0
  2341 ;;      Temps:          0       0       0
  2342 ;;      Totals:         0       0       0
  2343 ;;Total ram usage:        0 bytes
  2344 ;; Hardware stack levels used: 1
  2345 ;; Hardware stack levels required when called: 6
  2346 ;; This function calls:
  2347 ;;		Nothing
  2348 ;; This function is called by:
  2349 ;;		_SYSTEM_Initialize
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353  0292                     _WDT_Initialize:	
  2354                           ;psect for function _WDT_Initialize
  2355                           
  2356  0292                     l1333:	
  2357                           ;incstack = 0
  2358                           ; Regs used in _WDT_Initialize: [wreg]
  2359                           
  2360                           
  2361                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x16;
  2362  0292  3016               	movlw	22
  2363  0293  0021               	movlb	1	; select bank1
  2364  0294  0097               	movwf	23	;volatile
  2365  0295                     l29:
  2366  0295  0008               	return
  2367  0296                     __end_of_WDT_Initialize:
  2368                           
  2369                           	psect	text11
  2370  020D                     __ptext11:	
  2371 ;; *************** function _TMR2_Initialize *****************
  2372 ;; Defined at:
  2373 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;		None
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;		None
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  1    wreg      void 
  2380 ;; Registers used:
  2381 ;;		wreg, status,2, status,0, pclath, cstack
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMMON   BANK0   BANK1
  2387 ;;      Params:         0       0       0
  2388 ;;      Locals:         0       0       0
  2389 ;;      Temps:          0       0       0
  2390 ;;      Totals:         0       0       0
  2391 ;;Total ram usage:        0 bytes
  2392 ;; Hardware stack levels used: 1
  2393 ;; Hardware stack levels required when called: 7
  2394 ;; This function calls:
  2395 ;;		_TMR2_SetInterruptHandler
  2396 ;; This function is called by:
  2397 ;;		_SYSTEM_Initialize
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401  020D                     _TMR2_Initialize:	
  2402                           ;psect for function _TMR2_Initialize
  2403                           
  2404  020D                     l1335:	
  2405                           ;incstack = 0
  2406                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2407                           
  2408                           
  2409                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x01;
  2410  020D  3001               	movlw	1
  2411  020E  0020               	movlb	0	; select bank0
  2412  020F  009B               	movwf	27	;volatile
  2413  0210                     l1337:
  2414                           
  2415                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  2416  0210  019A               	clrf	26	;volatile
  2417  0211                     l1339:
  2418                           
  2419                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  2420  0211  1091               	bcf	17,1	;volatile
  2421  0212                     l1341:
  2422                           
  2423                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  2424  0212  0021               	movlb	1	; select bank1
  2425  0213  1491               	bsf	17,1	;volatile
  2426  0214                     l1343:
  2427                           
  2428                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  2429  0214  3099               	movlw	low _TMR2_DefaultInterruptHandler
  2430  0215  0020               	movlb	0	; select bank0
  2431  0216  00B1               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2432  0217  3002               	movlw	high _TMR2_DefaultInterruptHandler
  2433  0218  00B2               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2434  0219  3182  2274  3182   	fcall	_TMR2_SetInterruptHandler
  2435  021C                     l1345:
  2436                           
  2437                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x7F;
  2438  021C  307F               	movlw	127
  2439  021D  0020               	movlb	0	; select bank0
  2440  021E  009C               	movwf	28	;volatile
  2441  021F                     l137:
  2442  021F  0008               	return
  2443  0220                     __end_of_TMR2_Initialize:
  2444                           
  2445                           	psect	text12
  2446  0274                     __ptext12:	
  2447 ;; *************** function _TMR2_SetInterruptHandler *****************
  2448 ;; Defined at:
  2449 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2452 ;;		 -> Sec_tick_work(1), TMR2_DefaultInterruptHandler(1), 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;		None
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		wreg
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMMON   BANK0   BANK1
  2464 ;;      Params:         0       2       0
  2465 ;;      Locals:         0       0       0
  2466 ;;      Temps:          0       0       0
  2467 ;;      Totals:         0       2       0
  2468 ;;Total ram usage:        2 bytes
  2469 ;; Hardware stack levels used: 1
  2470 ;; Hardware stack levels required when called: 6
  2471 ;; This function calls:
  2472 ;;		Nothing
  2473 ;; This function is called by:
  2474 ;;		_TMR2_Initialize
  2475 ;;		_main
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479  0274                     _TMR2_SetInterruptHandler:	
  2480                           ;psect for function _TMR2_SetInterruptHandler
  2481                           
  2482  0274                     l1291:	
  2483                           ;incstack = 0
  2484                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2485                           
  2486                           
  2487                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  2488  0274  0020               	movlb	0	; select bank0
  2489  0275  0832               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2490  0276  00AF               	movwf	_TMR2_InterruptHandler+1
  2491  0277  0831               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2492  0278  00AE               	movwf	_TMR2_InterruptHandler
  2493  0279                     l165:
  2494  0279  0008               	return
  2495  027A                     __end_of_TMR2_SetInterruptHandler:
  2496                           
  2497                           	psect	text13
  2498  01D0                     __ptext13:	
  2499 ;; *************** function _TMR0_Initialize *****************
  2500 ;; Defined at:
  2501 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;		None
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;		None
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      void 
  2508 ;; Registers used:
  2509 ;;		wreg, status,2, status,0, pclath, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMMON   BANK0   BANK1
  2515 ;;      Params:         0       0       0
  2516 ;;      Locals:         0       0       0
  2517 ;;      Temps:          0       1       0
  2518 ;;      Totals:         0       1       0
  2519 ;;Total ram usage:        1 bytes
  2520 ;; Hardware stack levels used: 1
  2521 ;; Hardware stack levels required when called: 7
  2522 ;; This function calls:
  2523 ;;		_TMR0_SetInterruptHandler
  2524 ;; This function is called by:
  2525 ;;		_SYSTEM_Initialize
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529  01D0                     _TMR0_Initialize:	
  2530                           ;psect for function _TMR0_Initialize
  2531                           
  2532  01D0                     l1347:	
  2533                           ;incstack = 0
  2534                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2535                           
  2536                           
  2537                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  2538  01D0  0021               	movlb	1	; select bank1
  2539  01D1  0815               	movf	21,w	;volatile
  2540  01D2  39C0               	andlw	192
  2541  01D3  3817               	iorlw	23
  2542  01D4  0095               	movwf	21	;volatile
  2543  01D5                     l1349:
  2544                           
  2545                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x16;
  2546  01D5  3016               	movlw	22
  2547  01D6  0020               	movlb	0	; select bank0
  2548  01D7  0095               	movwf	21	;volatile
  2549  01D8                     l1351:
  2550                           
  2551                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 22;
  2552  01D8  3016               	movlw	22
  2553  01D9  00B3               	movwf	??_TMR0_Initialize
  2554  01DA  0833               	movf	??_TMR0_Initialize,w
  2555  01DB  00B0               	movwf	_timer0ReloadVal	;volatile
  2556  01DC                     l1353:
  2557                           
  2558                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  2559  01DC  110B               	bcf	11,2	;volatile
  2560  01DD                     l1355:
  2561                           
  2562                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2563  01DD  309A               	movlw	low _TMR0_DefaultInterruptHandler
  2564  01DE  00B1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2565  01DF  3002               	movlw	high _TMR0_DefaultInterruptHandler
  2566  01E0  00B2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2567  01E1  3182  227A  3181   	fcall	_TMR0_SetInterruptHandler
  2568  01E4                     l185:
  2569  01E4  0008               	return
  2570  01E5                     __end_of_TMR0_Initialize:
  2571                           
  2572                           	psect	text14
  2573  027A                     __ptext14:	
  2574 ;; *************** function _TMR0_SetInterruptHandler *****************
  2575 ;; Defined at:
  2576 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2579 ;;		 -> switch_zum(1), TMR0_DefaultInterruptHandler(1), 
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;		None
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      void 
  2584 ;; Registers used:
  2585 ;;		wreg
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1
  2591 ;;      Params:         0       2       0
  2592 ;;      Locals:         0       0       0
  2593 ;;      Temps:          0       0       0
  2594 ;;      Totals:         0       2       0
  2595 ;;Total ram usage:        2 bytes
  2596 ;; Hardware stack levels used: 1
  2597 ;; Hardware stack levels required when called: 6
  2598 ;; This function calls:
  2599 ;;		Nothing
  2600 ;; This function is called by:
  2601 ;;		_TMR0_Initialize
  2602 ;;		_main
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606  027A                     _TMR0_SetInterruptHandler:	
  2607                           ;psect for function _TMR0_SetInterruptHandler
  2608                           
  2609  027A                     l1293:	
  2610                           ;incstack = 0
  2611                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2612                           
  2613                           
  2614                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  2615  027A  0020               	movlb	0	; select bank0
  2616  027B  0832               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2617  027C  00AD               	movwf	_TMR0_InterruptHandler+1
  2618  027D  0831               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2619  027E  00AC               	movwf	_TMR0_InterruptHandler
  2620  027F                     l201:
  2621  027F  0008               	return
  2622  0280                     __end_of_TMR0_SetInterruptHandler:
  2623                           
  2624                           	psect	text15
  2625  01E5                     __ptext15:	
  2626 ;; *************** function _PIN_MANAGER_Initialize *****************
  2627 ;; Defined at:
  2628 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;		None
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;		None
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  1    wreg      void 
  2635 ;; Registers used:
  2636 ;;		wreg, status,2
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMMON   BANK0   BANK1
  2642 ;;      Params:         0       0       0
  2643 ;;      Locals:         0       0       0
  2644 ;;      Temps:          0       0       0
  2645 ;;      Totals:         0       0       0
  2646 ;;Total ram usage:        0 bytes
  2647 ;; Hardware stack levels used: 1
  2648 ;; Hardware stack levels required when called: 6
  2649 ;; This function calls:
  2650 ;;		Nothing
  2651 ;; This function is called by:
  2652 ;;		_SYSTEM_Initialize
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656  01E5                     _PIN_MANAGER_Initialize:	
  2657                           ;psect for function _PIN_MANAGER_Initialize
  2658                           
  2659  01E5                     l1315:	
  2660                           ;incstack = 0
  2661                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2662                           
  2663                           
  2664                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2665  01E5  0022               	movlb	2	; select bank2
  2666  01E6  018C               	clrf	12	;volatile
  2667                           
  2668                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  2669  01E7  018E               	clrf	14	;volatile
  2670  01E8                     l1317:
  2671                           
  2672                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x0F;
  2673  01E8  300F               	movlw	15
  2674  01E9  0021               	movlb	1	; select bank1
  2675  01EA  008C               	movwf	12	;volatile
  2676  01EB                     l1319:
  2677                           
  2678                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x0C;
  2679  01EB  300C               	movlw	12
  2680  01EC  008E               	movwf	14	;volatile
  2681  01ED                     l1321:
  2682                           
  2683                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x08;
  2684  01ED  3008               	movlw	8
  2685  01EE  0023               	movlb	3	; select bank3
  2686  01EF  008E               	movwf	14	;volatile
  2687  01F0                     l1323:
  2688                           
  2689                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x05;
  2690  01F0  3005               	movlw	5
  2691  01F1  008C               	movwf	12	;volatile
  2692                           
  2693                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  2694  01F2  0024               	movlb	4	; select bank4
  2695  01F3  018C               	clrf	12	;volatile
  2696                           
  2697                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  2698  01F4  018E               	clrf	14	;volatile
  2699  01F5                     l1325:
  2700                           
  2701                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2702  01F5  0021               	movlb	1	; select bank1
  2703  01F6  1795               	bsf	21,7	;volatile
  2704                           
  2705                           ;mcc_generated_files/pin_manager.c: 86:     APFCON = 0x00;
  2706  01F7  0022               	movlb	2	; select bank2
  2707  01F8  019D               	clrf	29	;volatile
  2708  01F9                     l90:
  2709  01F9  0008               	return
  2710  01FA                     __end_of_PIN_MANAGER_Initialize:
  2711                           
  2712                           	psect	text16
  2713  0267                     __ptext16:	
  2714 ;; *************** function _OSCILLATOR_Initialize *****************
  2715 ;; Defined at:
  2716 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;		None
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;		None
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  1    wreg      void 
  2723 ;; Registers used:
  2724 ;;		wreg, status,2
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMMON   BANK0   BANK1
  2730 ;;      Params:         0       0       0
  2731 ;;      Locals:         0       0       0
  2732 ;;      Temps:          0       0       0
  2733 ;;      Totals:         0       0       0
  2734 ;;Total ram usage:        0 bytes
  2735 ;; Hardware stack levels used: 1
  2736 ;; Hardware stack levels required when called: 6
  2737 ;; This function calls:
  2738 ;;		Nothing
  2739 ;; This function is called by:
  2740 ;;		_SYSTEM_Initialize
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744  0267                     _OSCILLATOR_Initialize:	
  2745                           ;psect for function _OSCILLATOR_Initialize
  2746                           
  2747  0267                     l1327:	
  2748                           ;incstack = 0
  2749                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2750                           
  2751                           
  2752                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x68;
  2753  0267  3068               	movlw	104
  2754  0268  0021               	movlb	1	; select bank1
  2755  0269  0099               	movwf	25	;volatile
  2756  026A                     l1329:
  2757                           
  2758                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  2759  026A  0198               	clrf	24	;volatile
  2760  026B                     l1331:
  2761                           
  2762                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  2763  026B  0022               	movlb	2	; select bank2
  2764  026C  0196               	clrf	22	;volatile
  2765  026D                     l26:
  2766  026D  0008               	return
  2767  026E                     __end_of_OSCILLATOR_Initialize:
  2768                           
  2769                           	psect	text17
  2770  025F                     __ptext17:	
  2771 ;; *************** function _ADC_Initialize *****************
  2772 ;; Defined at:
  2773 ;;		line 67 in file "mcc_generated_files/adc.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;		None
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;		None
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMMON   BANK0   BANK1
  2787 ;;      Params:         0       0       0
  2788 ;;      Locals:         0       0       0
  2789 ;;      Temps:          0       0       0
  2790 ;;      Totals:         0       0       0
  2791 ;;Total ram usage:        0 bytes
  2792 ;; Hardware stack levels used: 1
  2793 ;; Hardware stack levels required when called: 6
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_SYSTEM_Initialize
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801  025F                     _ADC_Initialize:	
  2802                           ;psect for function _ADC_Initialize
  2803                           
  2804  025F                     l1357:	
  2805                           ;incstack = 0
  2806                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  2807                           
  2808                           
  2809                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x40;
  2810  025F  3040               	movlw	64
  2811  0260  0021               	movlb	1	; select bank1
  2812  0261  009E               	movwf	30	;volatile
  2813  0262                     l1359:
  2814                           
  2815                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  2816  0262  019B               	clrf	27	;volatile
  2817  0263                     l1361:
  2818                           
  2819                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  2820  0263  019C               	clrf	28	;volatile
  2821                           
  2822                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  2823  0264  3001               	movlw	1
  2824  0265  009D               	movwf	29	;volatile
  2825  0266                     l46:
  2826  0266  0008               	return
  2827  0267                     __end_of_ADC_Initialize:
  2828                           
  2829                           	psect	intentry
  2830  0004                     __pintentry:	
  2831 ;; *************** function _INTERRUPT_InterruptManager *****************
  2832 ;; Defined at:
  2833 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;		None
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;		None
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  1    wreg      void 
  2840 ;; Registers used:
  2841 ;;		wreg, status,2, status,0, pclath, cstack
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMMON   BANK0   BANK1
  2847 ;;      Params:         0       0       0
  2848 ;;      Locals:         0       0       0
  2849 ;;      Temps:          0       0       0
  2850 ;;      Totals:         0       0       0
  2851 ;;Total ram usage:        0 bytes
  2852 ;; Hardware stack levels used: 1
  2853 ;; Hardware stack levels required when called: 5
  2854 ;; This function calls:
  2855 ;;		_TMR0_ISR
  2856 ;;		_TMR2_ISR
  2857 ;; This function is called by:
  2858 ;;		Interrupt level 1
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862  0004                     _INTERRUPT_InterruptManager:
  2863                           
  2864                           ;incstack = 0
  2865  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2866                           
  2867                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2868  0005  3180               	pagesel	$
  2869  0006                     i1l1469:
  2870                           
  2871                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  2872  0006  1E8B               	btfss	11,5	;volatile
  2873  0007  2809               	goto	u73_21
  2874  0008  280A               	goto	u73_20
  2875  0009                     u73_21:
  2876  0009  2812               	goto	i1l108
  2877  000A                     u73_20:
  2878  000A                     i1l1471:
  2879  000A  1D0B               	btfss	11,2	;volatile
  2880  000B  280D               	goto	u74_21
  2881  000C  280E               	goto	u74_20
  2882  000D                     u74_21:
  2883  000D  2812               	goto	i1l108
  2884  000E                     u74_20:
  2885  000E                     i1l1473:
  2886                           
  2887                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  2888  000E  3182  2242  3180   	fcall	_TMR0_ISR
  2889                           
  2890                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  2891  0011  2824               	goto	i1l114
  2892  0012                     i1l108:	
  2893                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  2894                           
  2895  0012  1F0B               	btfss	11,6	;volatile
  2896  0013  2815               	goto	u75_21
  2897  0014  2816               	goto	u75_20
  2898  0015                     u75_21:
  2899  0015  2824               	goto	i1l114
  2900  0016                     u75_20:
  2901  0016                     i1l1475:
  2902                           
  2903                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  2904  0016  0021               	movlb	1	; select bank1
  2905  0017  1C91               	btfss	17,1	;volatile
  2906  0018  281A               	goto	u76_21
  2907  0019  281B               	goto	u76_20
  2908  001A                     u76_21:
  2909  001A  2824               	goto	i1l113
  2910  001B                     u76_20:
  2911  001B                     i1l1477:
  2912  001B  0020               	movlb	0	; select bank0
  2913  001C  1C91               	btfss	17,1	;volatile
  2914  001D  281F               	goto	u77_21
  2915  001E  2820               	goto	u77_20
  2916  001F                     u77_21:
  2917  001F  2824               	goto	i1l113
  2918  0020                     u77_20:
  2919  0020                     i1l1479:
  2920                           
  2921                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
  2922  0020  3181  21A5  3180   	fcall	_TMR2_ISR
  2923                           
  2924                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  2925  0023  2824               	goto	i1l114
  2926  0024                     i1l113:	
  2927                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  2928                           
  2929  0024                     i1l114:
  2930  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2931  0025  0009               	retfie
  2932  0026                     __end_of_INTERRUPT_InterruptManager:
  2933                           
  2934                           	psect	text19
  2935  01A5                     __ptext19:	
  2936 ;; *************** function _TMR2_ISR *****************
  2937 ;; Defined at:
  2938 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;		None
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;		None
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      void 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0, pclath, cstack
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMMON   BANK0   BANK1
  2952 ;;      Params:         0       0       0
  2953 ;;      Locals:         0       0       0
  2954 ;;      Temps:          0       0       0
  2955 ;;      Totals:         0       0       0
  2956 ;;Total ram usage:        0 bytes
  2957 ;; Hardware stack levels used: 1
  2958 ;; Hardware stack levels required when called: 4
  2959 ;; This function calls:
  2960 ;;		_TMR2_CallBack
  2961 ;; This function is called by:
  2962 ;;		_INTERRUPT_InterruptManager
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966  01A5                     _TMR2_ISR:	
  2967                           ;psect for function _TMR2_ISR
  2968                           
  2969  01A5                     i1l1417:	
  2970                           ;incstack = 0
  2971                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  2972                           
  2973                           
  2974                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
  2975  01A5  0020               	movlb	0	; select bank0
  2976  01A6  1091               	bcf	17,1	;volatile
  2977  01A7                     i1l1419:
  2978                           
  2979                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 489)
  2980  01A7  3001               	movlw	1
  2981  01A8  07A6               	addwf	TMR2_ISR@CountCallBack,f	;volatile
  2982  01A9  3000               	movlw	0
  2983  01AA  3DA7               	addwfc	TMR2_ISR@CountCallBack+1,f	;volatile
  2984  01AB  3001               	movlw	1
  2985  01AC  0227               	subwf	TMR2_ISR@CountCallBack+1,w	;volatile
  2986  01AD  30E9               	movlw	233
  2987  01AE  1903               	skipnz
  2988  01AF  0226               	subwf	TMR2_ISR@CountCallBack,w	;volatile
  2989  01B0  1C03               	skipc
  2990  01B1  29B3               	goto	u60_21
  2991  01B2  29B4               	goto	u60_20
  2992  01B3                     u60_21:
  2993  01B3  29BA               	goto	i1l158
  2994  01B4                     u60_20:
  2995  01B4                     i1l1421:
  2996                           
  2997                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
  2998  01B4  3182  2252  3181   	fcall	_TMR2_CallBack
  2999  01B7                     i1l1423:
  3000                           
  3001                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
  3002  01B7  0020               	movlb	0	; select bank0
  3003  01B8  01A6               	clrf	TMR2_ISR@CountCallBack	;volatile
  3004  01B9  01A7               	clrf	TMR2_ISR@CountCallBack+1	;volatile
  3005  01BA                     i1l158:
  3006  01BA  0008               	return
  3007  01BB                     __end_of_TMR2_ISR:
  3008                           
  3009                           	psect	text20
  3010  0252                     __ptext20:	
  3011 ;; *************** function _TMR2_CallBack *****************
  3012 ;; Defined at:
  3013 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;		None
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;		None
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      void 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2, status,0, pclath, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMMON   BANK0   BANK1
  3027 ;;      Params:         0       0       0
  3028 ;;      Locals:         0       0       0
  3029 ;;      Temps:          0       0       0
  3030 ;;      Totals:         0       0       0
  3031 ;;Total ram usage:        0 bytes
  3032 ;; Hardware stack levels used: 1
  3033 ;; Hardware stack levels required when called: 3
  3034 ;; This function calls:
  3035 ;;		Absolute function
  3036 ;;		_Sec_tick_work
  3037 ;;		_TMR2_DefaultInterruptHandler
  3038 ;; This function is called by:
  3039 ;;		_TMR2_ISR
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043  0252                     _TMR2_CallBack:	
  3044                           ;psect for function _TMR2_CallBack
  3045                           
  3046  0252                     i1l1363:	
  3047                           ;incstack = 0
  3048                           ; Regs used in _TMR2_CallBack: [wreg+status,2+status,0+pclath+cstack]
  3049                           
  3050                           
  3051                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
  3052  0252  0020               	movlb	0	; select bank0
  3053  0253  082E               	movf	_TMR2_InterruptHandler,w
  3054  0254  042F               	iorwf	_TMR2_InterruptHandler+1,w
  3055  0255  1903               	btfsc	3,2
  3056  0256  2A58               	goto	u52_21
  3057  0257  2A59               	goto	u52_20
  3058  0258                     u52_21:
  3059  0258  2A5E               	goto	i1l162
  3060  0259                     u52_20:
  3061  0259                     i1l1365:
  3062                           
  3063                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
  3064  0259  082F               	movf	_TMR2_InterruptHandler+1,w
  3065  025A  008A               	movwf	10
  3066  025B  082E               	movf	_TMR2_InterruptHandler,w
  3067  025C  000A               	callw
  3068  025D  3182               	pagesel	$
  3069  025E                     i1l162:
  3070  025E  0008               	return
  3071  025F                     __end_of_TMR2_CallBack:
  3072                           
  3073                           	psect	text21
  3074  00C8                     __ptext21:	
  3075 ;; *************** function _Sec_tick_work *****************
  3076 ;; Defined at:
  3077 ;;		line 101 in file "main.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;		None
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;		None
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, status,2, status,0, pclath, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMMON   BANK0   BANK1
  3091 ;;      Params:         0       0       0
  3092 ;;      Locals:         0       0       0
  3093 ;;      Temps:          1       0       0
  3094 ;;      Totals:         1       0       0
  3095 ;;Total ram usage:        1 bytes
  3096 ;; Hardware stack levels used: 1
  3097 ;; Hardware stack levels required when called: 2
  3098 ;; This function calls:
  3099 ;;		_get_measure
  3100 ;;		_toggle_tone
  3101 ;; This function is called by:
  3102 ;;		_main
  3103 ;;		_TMR2_CallBack
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107  00C8                     _Sec_tick_work:	
  3108                           ;psect for function _Sec_tick_work
  3109                           
  3110  00C8                     i1l1295:	
  3111                           ;incstack = 0
  3112                           ; Regs used in _Sec_tick_work: [wreg+status,2+status,0+pclath+cstack]
  3113                           
  3114                           
  3115                           ;main.c: 103:     get_measure();
  3116  00C8  3181  2154  3180   	fcall	_get_measure
  3117  00CB                     i1l1297:
  3118                           
  3119                           ;main.c: 105:     time_s++;
  3120  00CB  3001               	movlw	1
  3121  00CC  0020               	movlb	0	; select bank0
  3122  00CD  07A0               	addwf	_time_s,f
  3123  00CE  3000               	movlw	0
  3124  00CF  3DA1               	addwfc	_time_s+1,f
  3125  00D0  3000               	movlw	0
  3126  00D1  3DA2               	addwfc	_time_s+2,f
  3127  00D2  3000               	movlw	0
  3128  00D3  3DA3               	addwfc	_time_s+3,f
  3129  00D4                     i1l1299:
  3130                           
  3131                           ;main.c: 107:     if (FLAGS.bits.ALARM) {
  3132  00D4  1C7D               	btfss	_FLAGS,0
  3133  00D5  28D7               	goto	u46_21
  3134  00D6  28D8               	goto	u46_20
  3135  00D7                     u46_21:
  3136  00D7  28E8               	goto	i1l1305
  3137  00D8                     u46_20:
  3138  00D8                     i1l1301:
  3139  00D8  1003               	clrc
  3140  00D9  0022               	movlb	2	; select bank2
  3141  00DA  1E0C               	btfss	12,4	;volatile
  3142  00DB  1403               	setc
  3143  00DC  1803               	btfsc	3,0
  3144  00DD  28DF               	goto	u47_21
  3145  00DE  28E2               	goto	u47_20
  3146  00DF                     u47_21:
  3147  00DF  0022               	movlb	2	; select bank2
  3148  00E0  160C               	bsf	12,4	;volatile
  3149  00E1  28E4               	goto	u48_24
  3150  00E2                     u47_20:
  3151  00E2  0022               	movlb	2	; select bank2
  3152  00E3  120C               	bcf	12,4	;volatile
  3153  00E4                     u48_24:
  3154  00E4                     i1l1303:
  3155                           
  3156                           ;main.c: 109:         toggle_tone();
  3157  00E4  3182  2220  3180   	fcall	_toggle_tone
  3158                           
  3159                           ;main.c: 110:     } else {
  3160  00E7  28FF               	goto	i1l311
  3161  00E8                     i1l1305:
  3162                           
  3163                           ;main.c: 111:         static char iled;;main.c: 112:         iled++;
  3164  00E8  3001               	movlw	1
  3165  00E9  00F7               	movwf	??_Sec_tick_work
  3166  00EA  0877               	movf	??_Sec_tick_work,w
  3167  00EB  07F9               	addwf	Sec_tick_work@iled,f
  3168  00EC                     i1l1307:
  3169                           
  3170                           ;main.c: 113:         if (iled > 2) {
  3171  00EC  3003               	movlw	3
  3172  00ED  0279               	subwf	Sec_tick_work@iled,w
  3173  00EE  1C03               	skipc
  3174  00EF  28F1               	goto	u49_21
  3175  00F0  28F2               	goto	u49_20
  3176  00F1                     u49_21:
  3177  00F1  28FF               	goto	i1l311
  3178  00F2                     u49_20:
  3179  00F2                     i1l1309:
  3180  00F2  1003               	clrc
  3181  00F3  0022               	movlb	2	; select bank2
  3182  00F4  1E0C               	btfss	12,4	;volatile
  3183  00F5  1403               	setc
  3184  00F6  1803               	btfsc	3,0
  3185  00F7  28F9               	goto	u50_21
  3186  00F8  28FC               	goto	u50_20
  3187  00F9                     u50_21:
  3188  00F9  0022               	movlb	2	; select bank2
  3189  00FA  160C               	bsf	12,4	;volatile
  3190  00FB  28FE               	goto	u51_24
  3191  00FC                     u50_20:
  3192  00FC  0022               	movlb	2	; select bank2
  3193  00FD  120C               	bcf	12,4	;volatile
  3194  00FE                     u51_24:
  3195  00FE                     i1l1311:
  3196                           
  3197                           ;main.c: 115:             iled = 0;
  3198  00FE  01F9               	clrf	Sec_tick_work@iled
  3199  00FF                     i1l311:
  3200  00FF  0008               	return
  3201  0100                     __end_of_Sec_tick_work:
  3202                           
  3203                           	psect	text22
  3204  0299                     __ptext22:	
  3205 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  3206 ;; Defined at:
  3207 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;		None
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;		None
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  1    wreg      void 
  3214 ;; Registers used:
  3215 ;;		None
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMMON   BANK0   BANK1
  3221 ;;      Params:         0       0       0
  3222 ;;      Locals:         0       0       0
  3223 ;;      Temps:          0       0       0
  3224 ;;      Totals:         0       0       0
  3225 ;;Total ram usage:        0 bytes
  3226 ;; Hardware stack levels used: 1
  3227 ;; This function calls:
  3228 ;;		Nothing
  3229 ;; This function is called by:
  3230 ;;		_TMR2_Initialize
  3231 ;;		_TMR2_CallBack
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235  0299                     _TMR2_DefaultInterruptHandler:	
  3236                           ;psect for function _TMR2_DefaultInterruptHandler
  3237                           
  3238  0299                     i1l168:	
  3239                           ;incstack = 0
  3240                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  3241                           
  3242  0299  0008               	return
  3243  029A                     __end_of_TMR2_DefaultInterruptHandler:
  3244                           
  3245                           	psect	text23
  3246  0220                     __ptext23:	
  3247 ;; *************** function _toggle_tone *****************
  3248 ;; Defined at:
  3249 ;;		line 39 in file "main.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;		None
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;		None
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  1    wreg      void 
  3256 ;; Registers used:
  3257 ;;		status,0
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMMON   BANK0   BANK1
  3263 ;;      Params:         0       0       0
  3264 ;;      Locals:         0       0       0
  3265 ;;      Temps:          0       0       0
  3266 ;;      Totals:         0       0       0
  3267 ;;Total ram usage:        0 bytes
  3268 ;; Hardware stack levels used: 1
  3269 ;; This function calls:
  3270 ;;		Nothing
  3271 ;; This function is called by:
  3272 ;;		_Sec_tick_work
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276  0220                     _toggle_tone:	
  3277                           ;psect for function _toggle_tone
  3278                           
  3279  0220                     i1l1269:	
  3280                           ;incstack = 0
  3281                           ; Regs used in _toggle_tone: [status,0]
  3282                           
  3283                           
  3284                           ;main.c: 40:     if (FLAGS.bits.ALARM) TRISAbits.TRISA5 = ~TRISAbits.TRISA5;
  3285  0220  1C7D               	btfss	_FLAGS,0
  3286  0221  2A23               	goto	u42_21
  3287  0222  2A24               	goto	u42_20
  3288  0223                     u42_21:
  3289  0223  2A30               	goto	i1l255
  3290  0224                     u42_20:
  3291  0224                     i1l1271:
  3292  0224  1003               	clrc
  3293  0225  0021               	movlb	1	; select bank1
  3294  0226  1E8C               	btfss	12,5	;volatile
  3295  0227  1403               	setc
  3296  0228  1803               	btfsc	3,0
  3297  0229  2A2B               	goto	u43_21
  3298  022A  2A2E               	goto	u43_20
  3299  022B                     u43_21:
  3300  022B  0021               	movlb	1	; select bank1
  3301  022C  168C               	bsf	12,5	;volatile
  3302  022D  2A30               	goto	u44_24
  3303  022E                     u43_20:
  3304  022E  0021               	movlb	1	; select bank1
  3305  022F  128C               	bcf	12,5	;volatile
  3306  0230                     u44_24:
  3307  0230                     i1l255:
  3308  0230  0008               	return
  3309  0231                     __end_of_toggle_tone:
  3310                           
  3311                           	psect	text24
  3312  0154                     __ptext24:	
  3313 ;; *************** function _get_measure *****************
  3314 ;; Defined at:
  3315 ;;		line 85 in file "main.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;		None
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;  res             2    5[COMMON] unsigned int 
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  1    wreg      void 
  3322 ;; Registers used:
  3323 ;;		wreg, status,2, status,0, pclath, cstack
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMMON   BANK0   BANK1
  3329 ;;      Params:         0       0       0
  3330 ;;      Locals:         2       0       0
  3331 ;;      Temps:          1       0       0
  3332 ;;      Totals:         3       0       0
  3333 ;;Total ram usage:        3 bytes
  3334 ;; Hardware stack levels used: 1
  3335 ;; Hardware stack levels required when called: 1
  3336 ;; This function calls:
  3337 ;;		_ADC_GetConversion
  3338 ;;		i1_start_alarm
  3339 ;; This function is called by:
  3340 ;;		_Sec_tick_work
  3341 ;; This function uses a non-reentrant model
  3342 ;;
  3343                           
  3344  0154                     _get_measure:	
  3345                           ;psect for function _get_measure
  3346                           
  3347  0154                     i1l292:	
  3348                           ;incstack = 0
  3349                           ; Regs used in _get_measure: [wreg+status,2+status,0+pclath+cstack]
  3350                           ;main.c: 86:     static unsigned char measures;;main.c: 87:     do { LATCbits.LATC1 = 1;
      +                           } while(0);
  3351                           
  3352  0154  0022               	movlb	2	; select bank2
  3353  0155  148E               	bsf	14,1	;volatile
  3354  0156                     i1l1275:
  3355                           
  3356                           ;main.c: 88:     unsigned res = ADC_GetConversion(PIN_WSP_STATE);
  3357  0156  3007               	movlw	7
  3358  0157  3181  2173  3181   	fcall	_ADC_GetConversion
  3359  015A  0871               	movf	?_ADC_GetConversion+1,w
  3360  015B  00F6               	movwf	get_measure@res+1
  3361  015C  0870               	movf	?_ADC_GetConversion,w
  3362  015D  00F5               	movwf	get_measure@res
  3363  015E                     i1l1277:
  3364                           
  3365                           ;main.c: 89:     result=res;
  3366  015E  0876               	movf	get_measure@res+1,w
  3367  015F  0020               	movlb	0	; select bank0
  3368  0160  00A5               	movwf	_result+1
  3369  0161  0875               	movf	get_measure@res,w
  3370  0162  00A4               	movwf	_result
  3371  0163                     i1l1279:
  3372  0163  0022               	movlb	2	; select bank2
  3373  0164  108E               	bcf	14,1	;volatile
  3374  0165                     i1l1281:
  3375  0165  3001               	movlw	1
  3376  0166  00F4               	movwf	??_get_measure
  3377  0167  0874               	movf	??_get_measure,w
  3378  0168  07FA               	addwf	get_measure@measures,f
  3379  0169                     i1l1285:
  3380                           
  3381                           ;main.c: 96:     if (measures > 2) start_alarm();
  3382  0169  3003               	movlw	3
  3383  016A  027A               	subwf	get_measure@measures,w
  3384  016B  1C03               	skipc
  3385  016C  296E               	goto	u45_21
  3386  016D  296F               	goto	u45_20
  3387  016E                     u45_21:
  3388  016E  2972               	goto	i1l299
  3389  016F                     u45_20:
  3390  016F                     i1l1287:
  3391  016F  3182  2285  3181   	fcall	i1_start_alarm
  3392  0172                     i1l299:
  3393  0172  0008               	return
  3394  0173                     __end_of_get_measure:
  3395                           
  3396                           	psect	text25
  3397  0285                     __ptext25:	
  3398 ;; *************** function i1_start_alarm *****************
  3399 ;; Defined at:
  3400 ;;		line 33 in file "main.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;		None
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;		None
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  2    0[None  ] int 
  3407 ;; Registers used:
  3408 ;;		None
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMMON   BANK0   BANK1
  3414 ;;      Params:         0       0       0
  3415 ;;      Locals:         0       0       0
  3416 ;;      Temps:          0       0       0
  3417 ;;      Totals:         0       0       0
  3418 ;;Total ram usage:        0 bytes
  3419 ;; Hardware stack levels used: 1
  3420 ;; This function calls:
  3421 ;;		Nothing
  3422 ;; This function is called by:
  3423 ;;		_get_measure
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427  0285                     i1_start_alarm:	
  3428                           ;psect for function i1_start_alarm
  3429                           
  3430  0285                     i1l1267:	
  3431                           ;incstack = 0
  3432                           ; Regs used in i1_start_alarm: []
  3433                           
  3434                           
  3435                           ;main.c: 34:     FLAGS.bits.ALARM = 1;
  3436  0285  147D               	bsf	_FLAGS,0
  3437  0286                     i1l249:	
  3438                           ;main.c: 35:     do { LATCbits.LATC0 = 1; } while(0);
  3439                           
  3440  0286  0022               	movlb	2	; select bank2
  3441  0287  140E               	bsf	14,0	;volatile
  3442  0288                     i1l250:
  3443                           
  3444                           ;main.c: 36:     INTCONbits.TMR0IE = 1;
  3445  0288  168B               	bsf	11,5	;volatile
  3446  0289                     i1l251:
  3447  0289  0008               	return
  3448  028A                     __end_ofi1_start_alarm:
  3449                           
  3450                           	psect	text26
  3451  0173                     __ptext26:	
  3452 ;; *************** function _ADC_GetConversion *****************
  3453 ;; Defined at:
  3454 ;;		line 112 in file "mcc_generated_files/adc.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;  channel         1    wreg     enum E2178
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;  channel         1    3[COMMON] enum E2178
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  2    0[COMMON] unsigned short 
  3461 ;; Registers used:
  3462 ;;		wreg, status,2, status,0
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMMON   BANK0   BANK1
  3468 ;;      Params:         2       0       0
  3469 ;;      Locals:         1       0       0
  3470 ;;      Temps:          1       0       0
  3471 ;;      Totals:         4       0       0
  3472 ;;Total ram usage:        4 bytes
  3473 ;; Hardware stack levels used: 1
  3474 ;; This function calls:
  3475 ;;		Nothing
  3476 ;; This function is called by:
  3477 ;;		_get_measure
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481  0173                     _ADC_GetConversion:	
  3482                           ;psect for function _ADC_GetConversion
  3483                           
  3484                           
  3485                           ;incstack = 0
  3486                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3487                           ;ADC_GetConversion@channel stored from wreg
  3488  0173  00F3               	movwf	ADC_GetConversion@channel
  3489  0174                     i1l1255:
  3490                           
  3491                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  3492  0174  0873               	movf	ADC_GetConversion@channel,w
  3493  0175  00F2               	movwf	??_ADC_GetConversion
  3494  0176  0DF2               	rlf	??_ADC_GetConversion,f
  3495  0177  0DF2               	rlf	??_ADC_GetConversion,f
  3496  0178  0021               	movlb	1	; select bank1
  3497  0179  081D               	movf	29,w	;volatile
  3498  017A  0672               	xorwf	??_ADC_GetConversion,w
  3499  017B  3983               	andlw	-125
  3500  017C  0672               	xorwf	??_ADC_GetConversion,w
  3501  017D  009D               	movwf	29	;volatile
  3502  017E                     i1l1257:
  3503                           
  3504                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  3505  017E  141D               	bsf	29,0	;volatile
  3506  017F                     i1l1259:
  3507                           
  3508                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  3509  017F  3200               	nop2	;2 cycle nop
  3510  0180  3200               	nop2	;2 cycle nop
  3511  0181  0000               	nop
  3512  0182                     i1l1261:
  3513                           
  3514                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  3515  0182  0021               	movlb	1	; select bank1
  3516  0183  149D               	bsf	29,1	;volatile
  3517  0184                     i1l61:	
  3518                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  3519                           
  3520                           
  3521                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  3522  0184  189D               	btfsc	29,1	;volatile
  3523  0185  2987               	goto	u41_21
  3524  0186  2988               	goto	u41_20
  3525  0187                     u41_21:
  3526  0187  2984               	goto	i1l61
  3527  0188                     u41_20:
  3528  0188                     i1l1263:
  3529                           
  3530                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3531  0188  081C               	movf	28,w	;volatile
  3532  0189  00F1               	movwf	?_ADC_GetConversion+1
  3533  018A  081B               	movf	27,w	;volatile
  3534  018B  00F0               	movwf	?_ADC_GetConversion
  3535  018C                     i1l64:
  3536  018C  0008               	return
  3537  018D                     __end_of_ADC_GetConversion:
  3538                           
  3539                           	psect	text27
  3540  0242                     __ptext27:	
  3541 ;; *************** function _TMR0_ISR *****************
  3542 ;; Defined at:
  3543 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;		None
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;		None
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      void 
  3550 ;; Registers used:
  3551 ;;		wreg, status,2, status,0, pclath, cstack
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMMON   BANK0   BANK1
  3557 ;;      Params:         0       0       0
  3558 ;;      Locals:         0       0       0
  3559 ;;      Temps:          0       0       0
  3560 ;;      Totals:         0       0       0
  3561 ;;Total ram usage:        0 bytes
  3562 ;; Hardware stack levels used: 1
  3563 ;; Hardware stack levels required when called: 1
  3564 ;; This function calls:
  3565 ;;		Absolute function
  3566 ;;		_TMR0_DefaultInterruptHandler
  3567 ;;		_switch_zum
  3568 ;; This function is called by:
  3569 ;;		_INTERRUPT_InterruptManager
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572                           
  3573  0242                     _TMR0_ISR:	
  3574                           ;psect for function _TMR0_ISR
  3575                           
  3576  0242                     i1l1409:	
  3577                           ;incstack = 0
  3578                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  3579                           
  3580                           
  3581                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  3582  0242  110B               	bcf	11,2	;volatile
  3583  0243                     i1l1411:
  3584                           
  3585                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  3586  0243  0020               	movlb	0	; select bank0
  3587  0244  0830               	movf	_timer0ReloadVal,w	;volatile
  3588  0245  0095               	movwf	21	;volatile
  3589  0246                     i1l1413:
  3590                           
  3591                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  3592  0246  082C               	movf	_TMR0_InterruptHandler,w
  3593  0247  042D               	iorwf	_TMR0_InterruptHandler+1,w
  3594  0248  1903               	btfsc	3,2
  3595  0249  2A4B               	goto	u59_21
  3596  024A  2A4C               	goto	u59_20
  3597  024B                     u59_21:
  3598  024B  2A51               	goto	i1l198
  3599  024C                     u59_20:
  3600  024C                     i1l1415:
  3601                           
  3602                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  3603  024C  082D               	movf	_TMR0_InterruptHandler+1,w
  3604  024D  008A               	movwf	10
  3605  024E  082C               	movf	_TMR0_InterruptHandler,w
  3606  024F  000A               	callw
  3607  0250  3182               	pagesel	$
  3608  0251                     i1l198:
  3609  0251  0008               	return
  3610  0252                     __end_of_TMR0_ISR:
  3611                           
  3612                           	psect	text28
  3613  029A                     __ptext28:	
  3614 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  3615 ;; Defined at:
  3616 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;		None
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;		None
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  1    wreg      void 
  3623 ;; Registers used:
  3624 ;;		None
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMMON   BANK0   BANK1
  3630 ;;      Params:         0       0       0
  3631 ;;      Locals:         0       0       0
  3632 ;;      Temps:          0       0       0
  3633 ;;      Totals:         0       0       0
  3634 ;;Total ram usage:        0 bytes
  3635 ;; Hardware stack levels used: 1
  3636 ;; This function calls:
  3637 ;;		Nothing
  3638 ;; This function is called by:
  3639 ;;		_TMR0_Initialize
  3640 ;;		_TMR0_ISR
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644  029A                     _TMR0_DefaultInterruptHandler:	
  3645                           ;psect for function _TMR0_DefaultInterruptHandler
  3646                           
  3647  029A                     i1l204:	
  3648                           ;incstack = 0
  3649                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  3650                           
  3651  029A  0008               	return
  3652  029B                     __end_of_TMR0_DefaultInterruptHandler:
  3653                           
  3654                           	psect	text29
  3655  0231                     __ptext29:	
  3656 ;; *************** function _switch_zum *****************
  3657 ;; Defined at:
  3658 ;;		line 169 in file "main.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;		None
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;		None
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  1    wreg      void 
  3665 ;; Registers used:
  3666 ;;		status,0
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMMON   BANK0   BANK1
  3672 ;;      Params:         0       0       0
  3673 ;;      Locals:         0       0       0
  3674 ;;      Temps:          0       0       0
  3675 ;;      Totals:         0       0       0
  3676 ;;Total ram usage:        0 bytes
  3677 ;; Hardware stack levels used: 1
  3678 ;; This function calls:
  3679 ;;		Nothing
  3680 ;; This function is called by:
  3681 ;;		_main
  3682 ;;		_TMR0_ISR
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686  0231                     _switch_zum:	
  3687                           ;psect for function _switch_zum
  3688                           
  3689  0231                     i1l1403:	
  3690                           ;incstack = 0
  3691                           ; Regs used in _switch_zum: [status,0]
  3692                           
  3693                           
  3694                           ;main.c: 170:     if (FLAGS.bits.ALARM) do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0
      +                          );
  3695  0231  1C7D               	btfss	_FLAGS,0
  3696  0232  2A34               	goto	u56_21
  3697  0233  2A35               	goto	u56_20
  3698  0234                     u56_21:
  3699  0234  2A41               	goto	i1l338
  3700  0235                     u56_20:
  3701  0235                     i1l1405:
  3702  0235  1003               	clrc
  3703  0236  0022               	movlb	2	; select bank2
  3704  0237  1E8C               	btfss	12,5	;volatile
  3705  0238  1403               	setc
  3706  0239  1803               	btfsc	3,0
  3707  023A  2A3C               	goto	u57_21
  3708  023B  2A3F               	goto	u57_20
  3709  023C                     u57_21:
  3710  023C  0022               	movlb	2	; select bank2
  3711  023D  168C               	bsf	12,5	;volatile
  3712  023E  2A41               	goto	u58_24
  3713  023F                     u57_20:
  3714  023F  0022               	movlb	2	; select bank2
  3715  0240  128C               	bcf	12,5	;volatile
  3716  0241                     u58_24:
  3717  0241                     i1l338:
  3718  0241  0008               	return
  3719  0242                     __end_of_switch_zum:
  3720  007E                     btemp	set	126	;btemp
  3721  007E                     int$flags	set	126
  3722  007E                     wtemp0	set	126
  3723                           
  3724                           	psect	idloc
  3725                           
  3726                           ;Config register IDLOC0 @ 0x8000
  3727                           ;	unspecified, using default values
  3728  8000                     	org	32768
  3729  8000  3FFF               	dw	16383
  3730                           
  3731                           ;Config register IDLOC1 @ 0x8001
  3732                           ;	unspecified, using default values
  3733  8001                     	org	32769
  3734  8001  3FFF               	dw	16383
  3735                           
  3736                           ;Config register IDLOC2 @ 0x8002
  3737                           ;	unspecified, using default values
  3738  8002                     	org	32770
  3739  8002  3FFF               	dw	16383
  3740                           
  3741                           ;Config register IDLOC3 @ 0x8003
  3742                           ;	unspecified, using default values
  3743  8003                     	org	32771
  3744  8003  3FFF               	dw	16383
  3745                           
  3746                           	psect	config
  3747                           
  3748                           ;Config register CONFIG1 @ 0x8007
  3749                           ;	Oscillator Selection
  3750                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3751                           ;	Watchdog Timer Enable
  3752                           ;	WDTE = OFF, WDT disabled
  3753                           ;	Power-up Timer Enable
  3754                           ;	PWRTE = OFF, PWRT disabled
  3755                           ;	MCLR Pin Function Select
  3756                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3757                           ;	Flash Program Memory Code Protection
  3758                           ;	CP = OFF, Program memory code protection is disabled
  3759                           ;	Data Memory Code Protection
  3760                           ;	CPD = OFF, Data memory code protection is disabled
  3761                           ;	Brown-out Reset Enable
  3762                           ;	BOREN = ON, Brown-out Reset enabled
  3763                           ;	Clock Out Enable
  3764                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3765                           ;	Internal/External Switchover
  3766                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3767                           ;	Fail-Safe Clock Monitor Enable
  3768                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3769  8007                     	org	32775
  3770  8007  3FE4               	dw	16356
  3771                           
  3772                           ;Config register CONFIG2 @ 0x8008
  3773                           ;	Flash Memory Self-Write Protection
  3774                           ;	WRT = OFF, Write protection off
  3775                           ;	PLL Enable
  3776                           ;	PLLEN = OFF, 4x PLL disabled
  3777                           ;	Stack Overflow/Underflow Reset Enable
  3778                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3779                           ;	Brown-out Reset Voltage Selection
  3780                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3781                           ;	Low-Voltage Programming Enable
  3782                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3783  8008                     	org	32776
  3784  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    8
    Data        0
    BSS         18
    Persistent  37
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      4      21
    BANK1            32      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> switch_zum(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> switch_zum(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Sec_tick_work(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Sec_tick_work(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR2_CallBack->_Sec_tick_work
    _Sec_tick_work->_get_measure
    _get_measure->_ADC_GetConversion

Critical Paths under _main in BANK0

    _main->_povorot
    _povorot->_go_close
    _fun_work->_go_close
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     834
                                              3 BANK0      1     1      0
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                           _fun_work
                           _go_close
                       _go_close_alt
                            _povorot
                        _start_alarm
                          _switch_wm
 ---------------------------------------------------------------------------------
 (1) _switch_wm                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _start_alarm                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _povorot                                              1     1      0      46
                                              2 BANK0      1     1      0
                           _go_close
                            _go_open
 ---------------------------------------------------------------------------------
 (1) _go_close_alt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fun_work                                             0     0      0      46
                           _go_close
                            _go_open
 ---------------------------------------------------------------------------------
 (2) _go_open                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_close                                             2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     348
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     174
                                              2 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0      45
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0      45
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0      45
                   Absolute function *
                      _Sec_tick_work *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Sec_tick_work                                        1     1      0      45
                                              7 COMMON     1     1      0
                        _get_measure
                        _toggle_tone
 ---------------------------------------------------------------------------------
 (8) _toggle_tone                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _get_measure                                          3     3      0      45
                                              4 COMMON     3     3      0
                  _ADC_GetConversion
                      i1_start_alarm
 ---------------------------------------------------------------------------------
 (9) i1_start_alarm                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                         _switch_zum *
 ---------------------------------------------------------------------------------
 (6) _switch_zum                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _TMR2_StartTimer
   _fun_work
     _go_close
     _go_open
   _go_close
   _go_close_alt
   _povorot
     _go_close
     _go_open
   _start_alarm
   _switch_wm

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _switch_zum *
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _Sec_tick_work *
         _get_measure
           _ADC_GetConversion
           i1_start_alarm
         _toggle_tone
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      23       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      4      15       6       26.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      23       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Apr 26 10:09:18 2022

        __end_of_TMR2_SetInterruptHandler 027A                                        l23 020C  
                                      l26 026D                                        l29 0295  
                                      l46 0266                                        l90 01F9  
                           ?_go_close_alt 0070                           _timer0ReloadVal 0030  
                                     l201 027F                                       l140 0298  
                                     l137 021F                                       l322 01A4  
                                     l250 0283                                       l315 0131  
                                     l251 0284                                       l332 0153  
                                     l165 0279                                       l270 00C7  
                                     l318 019B                                       l185 01E4  
                                     l249 0281                                       l329 014C  
                                     l266 00BB                                       l282 01CF  
                                     l275 0273                                       l279 01C9  
                             _start_alarm 0280                                       _PR2 001B  
                                     u530 00A5                                       u610 0112  
                                     u531 00A2                                       u611 0111  
                                     u620 0116                                       u621 0115  
                                     u550 00BB                                       u630 011A  
                                     u710 0152                                       u551 00BA  
                                     u631 0119                                       u711 0150  
                                     u544 00A7                                       u640 0191  
                                     u704 014B                                       u800 0088  
                                     u641 0190                                       u801 0087  
                                     u650 0196                                       u651 0195  
                                     u660 01A0                                       u724 0153  
                                     u661 019F                                       u670 0137  
                                     u671 0136                                       u680 0144  
                                     u681 0143                                       u817 005D  
                                     u690 014A                                       u827 0121  
                                     u691 0148                                       u780 0066  
                                     u837 01CA                                       u781 0065  
                                     u790 006A                                       u847 0093  
                                     u791 0069                                       u857 00AB  
                                     u867 00C1                           _TMR2_Initialize 020D  
                                     wreg 0009                                      l1321 01ED  
                                    l1331 026B                                      l1323 01F0  
                                    l1315 01E5                                      l1325 01F5  
                                    l1317 01E8                                      l1341 0212  
                                    l1333 0292                                      l1501 0062  
                                    l1327 0267                                      l1319 01EB  
                                    l1351 01D8                                      l1343 0214  
                                    l1335 020D                                      l1407 01FA  
                                    l1431 0270                                      l1503 0066  
                                    l1511 0078                                      l1361 0263  
                                    l1329 026A                                      l1353 01DC  
                                    l1345 021C                                      l1337 0210  
                                    l1425 0296                                      l1433 0271  
                                    l1441 011A                                      l1513 0081  
                                    l1505 006A                                      l1355 01DD  
                                    l1347 01D0                                      l1291 0274  
                                    l1339 0211                                      l1371 008F  
                                    l1451 0196                                      l1443 011D  
                                    l1435 0100                                      l1427 0280  
                                    l1515 0088                                      l1507 0071  
                                    l1357 025F                                      l1293 027A  
                                    l1349 01D5                                      l1381 00A7  
                                    l1373 0097                                      l1453 0199  
                                    l1429 026E                                      l1445 0125  
                                    l1437 0112                                      l1461 0137  
                                    l1509 0074                                      l1359 0262  
                                    l1383 00B0                                      l1375 0099  
                                    l1367 008B                                      l1455 01A0  
                                    l1447 018D                                      l1439 0116  
                                    l1463 013C                                      l1385 00B5  
                                    l1369 008D                                      l1393 01BB  
                                    l1457 01A3                                      l1449 0191  
                                    l1465 013E                                      l1387 00BD  
                                    l1379 009B                                      l1395 01BF  
                                    l1467 0144                                      l1459 0132  
                                    l1491 0052                                      l1389 00C5  
                                    l1397 01C7                                      l1493 0055  
                                    l1485 003D                                      l1399 01CD  
                                    l1495 0057                                      l1487 0040  
                                    l1497 0058                                      l1489 0041  
                                    l1499 0059                                      _LATA 010C  
                                    _LATC 010E                                      i1l61 0184  
                                    i1l64 018C                                      _TMR0 0015  
                                    _TMR2 001A                                      _WPUA 020C  
                                    _WPUC 020E                                      _ledd 007B  
                                    _main 003D                                      _rcon 002A  
                                    _watt 002B                                      btemp 007E  
                                    _zumm 007C                                      start 0026  
                          ??_go_close_alt 0031                   __end_of_TMR0_Initialize 01E5  
          ??_TMR0_DefaultInterruptHandler 0070             __end_of_OSCILLATOR_Initialize 026E  
                                   ?_main 0070                                     _FLAGS 007D  
                                   _T2CON 001C                     __end_ofi1_start_alarm 028A  
                                   i1l113 0024                                     i1l114 0024  
                                   i1l204 029A                                     i1l108 0012  
                                   i1l311 00FF                                     i1l250 0288  
                                   i1l162 025E                                     i1l251 0289  
                                   i1l158 01BA                                     i1l255 0230  
                                   i1l168 0299                                     i1l249 0286  
                                   i1l338 0241                                     i1l292 0154  
                                   i1l198 0251                                     i1l299 0172  
                                   u41_20 0188                                     u41_21 0187  
                                   u42_20 0224                                     u50_20 00FC  
                                   u42_21 0223                                     u50_21 00F9  
                                   u43_20 022E                                     u43_21 022B  
                                   u51_24 00FE                                     u52_20 0259  
                                   u60_20 01B4                                     u52_21 0258  
                                   u60_21 01B3                                     u44_24 0230  
                                   u45_20 016F                                     u45_21 016E  
                                   u46_20 00D8                                     u46_21 00D7  
                                   u47_20 00E2                                     u47_21 00DF  
                                   u56_20 0235                                     u56_21 0234  
                                   u48_24 00E4                                     u57_20 023F  
                                   u49_20 00F2                                     u73_20 000A  
                                   u57_21 023C                                     u49_21 00F1  
                                   u73_21 0009                                     _TRISA 008C  
                                   _TRISC 008E                                     u74_20 000E  
                                   u74_21 000D                                     u58_24 0241  
                                   u59_20 024C                                     u75_20 0016  
                                   u59_21 024B                                     u75_21 0015  
                                   u76_20 001B                                     u76_21 001A  
                                   u77_20 0020                                     u77_21 001F  
               ?_TMR0_SetInterruptHandler 0031                          __end_of_TMR0_ISR 0252  
                        __end_of_TMR2_ISR 01BB                           __end_of_go_open 01D0  
                       __end_of_BAD_VALUE 028E                            _WDT_Initialize 0292  
                                   pclath 000A                           __end_of_povorot 0132  
                                   status 0003                                     wtemp0 007E  
                         _TMR2_StartTimer 0296                           __initialization 0027  
                            __end_of_main 008B                   __end_of_TMR2_Initialize 0220  
             ?_INTERRUPT_InterruptManager 0070                  _TMR2_SetInterruptHandler 0274  
                                  ??_main 0034                    __end_of_WDT_Initialize 0296  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _ADRESH 009C                                    _ADRESL 009B  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  _ANSELC 018E                                    _BORCON 0116  
                                  i1l1301 00D8                                    i1l1311 00FE  
                                  i1l1303 00E4                                    i1l1305 00E8  
                                  i1l1403 0231                                    i1l1411 0243  
                                  i1l1307 00EC                                    i1l1405 0235  
                                  i1l1413 0246                                    i1l1261 0182  
                                  i1l1309 00F2                                    i1l1421 01B4  
                                  i1l1415 024C                                    i1l1263 0188  
                                  i1l1255 0174                                    i1l1271 0224  
                                  i1l1423 01B7                                    i1l1409 0242  
                                  i1l1257 017E                                    i1l1281 0165  
                                  i1l1417 01A5                                    i1l1259 017F  
                                  i1l1267 0285                                    i1l1275 0156  
                                  i1l1363 0252                                    i1l1419 01A7  
                                  i1l1285 0169                                    i1l1277 015E  
                                  i1l1269 0220                                    i1l1365 0259  
                                  i1l1287 016F                                    i1l1279 0163  
                                  i1l1295 00C8                                    i1l1471 000A  
                                  i1l1297 00CB                                    i1l1473 000E  
                                  i1l1299 00D4                                    i1l1475 0016  
                                  i1l1477 001B                                    i1l1469 0006  
                                  i1l1479 0020                                    _OSCCON 0099  
                                  _WDTCON 0097                          __end_of_go_close 00C8  
                        ?_TMR0_Initialize 0070                          __end_of_fun_work 01A5  
                                  _time_s 0020                                    _result 0024  
                               ??_go_open 0031                           ?_WDT_Initialize 0070  
                          get_measure@res 0075                  ADC_GetConversion@channel 0073  
                               ??_povorot 0033                   __end_of_TMR2_StartTimer 0299  
TMR0_SetInterruptHandler@InterruptHandler 0031  TMR2_SetInterruptHandler@InterruptHandler 0031  
                    __end_of_go_close_alt 0274                         _SYSTEM_Initialize 01FA  
                 __end_of__initialization 003A                     __end_of_TMR2_CallBack 025F  
                      ?_SYSTEM_Initialize 0070                              ?_toggle_tone 0070  
                          __pcstackCOMMON 0070                       ??_SYSTEM_Initialize 0034  
                               ?_TMR0_ISR 0070                                 ?_TMR2_ISR 0070  
                   __end_of_ROTATION_TIME 0292                          ?_TMR2_Initialize 0070  
                            ?_start_alarm 0070                            _OPTION_REGbits 0095  
               __end_of_SYSTEM_Initialize 020D                                __pbssBANK0 0020  
                           _Sec_tick_work 00C8                                __pmaintext 003D  
        __end_of_TMR0_SetInterruptHandler 0280                                ??_TMR0_ISR 0070  
                              ??_TMR2_ISR 0078                                __pintentry 0004  
                       Sec_tick_work@iled 0079                                   _OSCTUNE 0098  
                        ?_TMR2_StartTimer 0070                                 ?_go_close 0070  
                          ?_Sec_tick_work 0070                                 _BAD_VALUE 028A  
                               ?_fun_work 0070                      _ADC_InterruptHandler 0028  
              ??_TMR2_SetInterruptHandler 0033                                   __ptext1 0132  
                                 __ptext2 0280                       get_measure@measures 007A  
                                 __ptext3 0100                                   __ptext4 026E  
                                 __ptext5 018D                                   __ptext6 01BB  
                                 __ptext7 008B                                   __ptext8 0296  
                                 __ptext9 01FA                                   _go_open 01BB  
                   _OSCILLATOR_Initialize 0267                                 _T2CONbits 001C  
                            switch_wm@jmp 0078                  ??_PIN_MANAGER_Initialize 0031  
                                 _povorot 0100                                ??_go_close 0031  
                    end_of_initialization 003A                                ??_fun_work 0033  
                            _go_close_alt 026E                          ??_WDT_Initialize 0031  
                _TMR0_SetInterruptHandler 027A                                 _PORTAbits 000C  
                               _PORTCbits 000E                         __end_of_switch_wm 0154  
                               _TRISAbits 008C                           ??_Sec_tick_work 0077  
                           ??_get_measure 0074                                _switch_zum 0231  
    __end_of_TMR2_DefaultInterruptHandler 029A              _TMR2_DefaultInterruptHandler 0299  
                          _ADC_Initialize 025F                    ?_OSCILLATOR_Initialize 0070  
                           i1_start_alarm 0285                       start_initialization 0027  
                  __end_of_ADC_Initialize 0267                       __end_of_get_measure 0173  
           ?_TMR2_DefaultInterruptHandler 0070                            ?i1_start_alarm 0070  
                             __pbssCOMMON 0078                                 ___latbits 0000  
                           __pcstackBANK0 0031                     _TMR0_InterruptHandler 002C  
                               __pnvBANK0 002C                    _PIN_MANAGER_Initialize 01E5  
                             ?_switch_zum 0070                           ?_ADC_Initialize 0070  
            ??_INTERRUPT_InterruptManager 0078                                  ?_go_open 0070  
                                ?_povorot 0070                         ??_TMR0_Initialize 0033  
                                _LATAbits 010C                                  _LATCbits 010E  
                           _TMR2_CallBack 0252                                  _PIE1bits 0091  
                             _get_measure 0154                ??_TMR0_SetInterruptHandler 0033  
                                _PIR1bits 0011                                  _TMR0_ISR 0242  
                                _TMR2_ISR 01A5                             _ROTATION_TIME 028E  
                         ??i1_start_alarm 0070                                _ADCON0bits 009D  
                               go_close@i 0032            ??_TMR2_DefaultInterruptHandler 0070  
               ?_TMR2_SetInterruptHandler 0031                                 _switch_wm 0132  
                       ??_TMR2_Initialize 0033                            ?_TMR2_CallBack 0070  
                           ??_toggle_tone 0070                         _ADC_GetConversion 0173  
                 ??_OSCILLATOR_Initialize 0031                        ?_ADC_GetConversion 0070  
                           ??_start_alarm 0031                       ??_ADC_GetConversion 0072  
                              ?_switch_wm 0070                                  __ptext10 0292  
                                __ptext11 020D                                  __ptext20 0252  
                                __ptext12 0274                                  __ptext21 00C8  
                                __ptext13 01D0                                  __ptext22 0299  
                                __ptext14 027A                                  __ptext23 0220  
                                __ptext15 01E5                                  __ptext24 0154  
                                __ptext16 0267                                  __ptext25 0285  
                                __ptext17 025F                                  __ptext26 0173  
                                __ptext27 0242                                  __ptext19 01A5  
                                __ptext28 029A                                  __ptext29 0231  
                                _go_close 008B                     __end_of_Sec_tick_work 0100  
                                _fun_work 018D      __end_of_TMR0_DefaultInterruptHandler 029B  
            _TMR0_DefaultInterruptHandler 029A                 __end_of_ADC_GetConversion 018D  
                                int$flags 007E                         ??_TMR2_StartTimer 0031  
                     __end_of_toggle_tone 0231        __end_of_INTERRUPT_InterruptManager 0026  
              _INTERRUPT_InterruptManager 0004                                _INTCONbits 000B  
                     __end_of_start_alarm 0285                                  intlevel1 0000  
                         ??_TMR2_CallBack 0078                   ?_PIN_MANAGER_Initialize 0070  
                        ??_ADC_Initialize 0031             ?_TMR0_DefaultInterruptHandler 0070  
                            ??_switch_zum 0070                             __pstringtext1 028A  
                           __pstringtext2 028E                                _OPTION_REG 0095  
                   TMR2_ISR@CountCallBack 0026                           _TMR0_Initialize 01D0  
                             ??_switch_wm 0031                        __end_of_switch_zum 0242  
          __end_of_PIN_MANAGER_Initialize 01FA                     _TMR2_InterruptHandler 002E  
                             _toggle_tone 0220                              ?_get_measure 0070  
