

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Apr 28 17:19:00 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1823
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	text41,local,class=CODE,merge=1,delta=2
    55                           	psect	text42,local,class=CODE,merge=1,delta=2
    56                           	psect	text43,local,class=CODE,merge=1,delta=2
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    59                           	dabs	1,0x7E,2
    60  0000                     
    61                           ; Version 2.40
    62                           ; Generated 17/11/2021 GMT
    63                           ; 
    64                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution. Publication is not required when
    78                           ;        this file is used in an embedded application.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC16F1823 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     	;# 
    97  0001                     	;# 
    98  0002                     	;# 
    99  0003                     	;# 
   100  0004                     	;# 
   101  0005                     	;# 
   102  0006                     	;# 
   103  0007                     	;# 
   104  0008                     	;# 
   105  0009                     	;# 
   106  000A                     	;# 
   107  000B                     	;# 
   108  000C                     	;# 
   109  000E                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  008C                     	;# 
   124  008E                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  010C                     	;# 
   139  010E                     	;# 
   140  0111                     	;# 
   141  0112                     	;# 
   142  0113                     	;# 
   143  0114                     	;# 
   144  0115                     	;# 
   145  0116                     	;# 
   146  0117                     	;# 
   147  0118                     	;# 
   148  0119                     	;# 
   149  011A                     	;# 
   150  011B                     	;# 
   151  011D                     	;# 
   152  011D                     	;# 
   153  018C                     	;# 
   154  018E                     	;# 
   155  0191                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  0193                     	;# 
   159  0193                     	;# 
   160  0193                     	;# 
   161  0194                     	;# 
   162  0195                     	;# 
   163  0196                     	;# 
   164  0199                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019C                     	;# 
   171  019C                     	;# 
   172  019D                     	;# 
   173  019E                     	;# 
   174  019F                     	;# 
   175  020C                     	;# 
   176  020E                     	;# 
   177  0211                     	;# 
   178  0211                     	;# 
   179  0212                     	;# 
   180  0212                     	;# 
   181  0213                     	;# 
   182  0213                     	;# 
   183  0214                     	;# 
   184  0214                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0216                     	;# 
   189  0216                     	;# 
   190  0217                     	;# 
   191  0217                     	;# 
   192  0291                     	;# 
   193  0291                     	;# 
   194  0292                     	;# 
   195  0293                     	;# 
   196  0294                     	;# 
   197  0295                     	;# 
   198  0295                     	;# 
   199  0296                     	;# 
   200  0391                     	;# 
   201  0392                     	;# 
   202  0393                     	;# 
   203  039A                     	;# 
   204  039C                     	;# 
   205  039D                     	;# 
   206  039E                     	;# 
   207  039F                     	;# 
   208  0FE4                     	;# 
   209  0FE5                     	;# 
   210  0FE6                     	;# 
   211  0FE7                     	;# 
   212  0FE8                     	;# 
   213  0FE9                     	;# 
   214  0FEA                     	;# 
   215  0FEB                     	;# 
   216  0FED                     	;# 
   217  0FEE                     	;# 
   218  0FEF                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000E                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  008C                     	;# 
   247  008E                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0095                     	;# 
   251  0096                     	;# 
   252  0097                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009A                     	;# 
   256  009B                     	;# 
   257  009B                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009E                     	;# 
   261  010C                     	;# 
   262  010E                     	;# 
   263  0111                     	;# 
   264  0112                     	;# 
   265  0113                     	;# 
   266  0114                     	;# 
   267  0115                     	;# 
   268  0116                     	;# 
   269  0117                     	;# 
   270  0118                     	;# 
   271  0119                     	;# 
   272  011A                     	;# 
   273  011B                     	;# 
   274  011D                     	;# 
   275  011D                     	;# 
   276  018C                     	;# 
   277  018E                     	;# 
   278  0191                     	;# 
   279  0191                     	;# 
   280  0192                     	;# 
   281  0193                     	;# 
   282  0193                     	;# 
   283  0193                     	;# 
   284  0194                     	;# 
   285  0195                     	;# 
   286  0196                     	;# 
   287  0199                     	;# 
   288  019A                     	;# 
   289  019B                     	;# 
   290  019B                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019C                     	;# 
   294  019C                     	;# 
   295  019D                     	;# 
   296  019E                     	;# 
   297  019F                     	;# 
   298  020C                     	;# 
   299  020E                     	;# 
   300  0211                     	;# 
   301  0211                     	;# 
   302  0212                     	;# 
   303  0212                     	;# 
   304  0213                     	;# 
   305  0213                     	;# 
   306  0214                     	;# 
   307  0214                     	;# 
   308  0215                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0216                     	;# 
   312  0216                     	;# 
   313  0217                     	;# 
   314  0217                     	;# 
   315  0291                     	;# 
   316  0291                     	;# 
   317  0292                     	;# 
   318  0293                     	;# 
   319  0294                     	;# 
   320  0295                     	;# 
   321  0295                     	;# 
   322  0296                     	;# 
   323  0391                     	;# 
   324  0392                     	;# 
   325  0393                     	;# 
   326  039A                     	;# 
   327  039C                     	;# 
   328  039D                     	;# 
   329  039E                     	;# 
   330  039F                     	;# 
   331  0FE4                     	;# 
   332  0FE5                     	;# 
   333  0FE6                     	;# 
   334  0FE7                     	;# 
   335  0FE8                     	;# 
   336  0FE9                     	;# 
   337  0FEA                     	;# 
   338  0FEB                     	;# 
   339  0FED                     	;# 
   340  0FEE                     	;# 
   341  0FEF                     	;# 
   342  0000                     	;# 
   343  0001                     	;# 
   344  0002                     	;# 
   345  0003                     	;# 
   346  0004                     	;# 
   347  0005                     	;# 
   348  0006                     	;# 
   349  0007                     	;# 
   350  0008                     	;# 
   351  0009                     	;# 
   352  000A                     	;# 
   353  000B                     	;# 
   354  000C                     	;# 
   355  000E                     	;# 
   356  0011                     	;# 
   357  0012                     	;# 
   358  0015                     	;# 
   359  0016                     	;# 
   360  0016                     	;# 
   361  0017                     	;# 
   362  0018                     	;# 
   363  0019                     	;# 
   364  001A                     	;# 
   365  001B                     	;# 
   366  001C                     	;# 
   367  001E                     	;# 
   368  001F                     	;# 
   369  008C                     	;# 
   370  008E                     	;# 
   371  0091                     	;# 
   372  0092                     	;# 
   373  0095                     	;# 
   374  0096                     	;# 
   375  0097                     	;# 
   376  0098                     	;# 
   377  0099                     	;# 
   378  009A                     	;# 
   379  009B                     	;# 
   380  009B                     	;# 
   381  009C                     	;# 
   382  009D                     	;# 
   383  009E                     	;# 
   384  010C                     	;# 
   385  010E                     	;# 
   386  0111                     	;# 
   387  0112                     	;# 
   388  0113                     	;# 
   389  0114                     	;# 
   390  0115                     	;# 
   391  0116                     	;# 
   392  0117                     	;# 
   393  0118                     	;# 
   394  0119                     	;# 
   395  011A                     	;# 
   396  011B                     	;# 
   397  011D                     	;# 
   398  011D                     	;# 
   399  018C                     	;# 
   400  018E                     	;# 
   401  0191                     	;# 
   402  0191                     	;# 
   403  0192                     	;# 
   404  0193                     	;# 
   405  0193                     	;# 
   406  0193                     	;# 
   407  0194                     	;# 
   408  0195                     	;# 
   409  0196                     	;# 
   410  0199                     	;# 
   411  019A                     	;# 
   412  019B                     	;# 
   413  019B                     	;# 
   414  019B                     	;# 
   415  019B                     	;# 
   416  019C                     	;# 
   417  019C                     	;# 
   418  019D                     	;# 
   419  019E                     	;# 
   420  019F                     	;# 
   421  020C                     	;# 
   422  020E                     	;# 
   423  0211                     	;# 
   424  0211                     	;# 
   425  0212                     	;# 
   426  0212                     	;# 
   427  0213                     	;# 
   428  0213                     	;# 
   429  0214                     	;# 
   430  0214                     	;# 
   431  0215                     	;# 
   432  0215                     	;# 
   433  0215                     	;# 
   434  0216                     	;# 
   435  0216                     	;# 
   436  0217                     	;# 
   437  0217                     	;# 
   438  0291                     	;# 
   439  0291                     	;# 
   440  0292                     	;# 
   441  0293                     	;# 
   442  0294                     	;# 
   443  0295                     	;# 
   444  0295                     	;# 
   445  0296                     	;# 
   446  0391                     	;# 
   447  0392                     	;# 
   448  0393                     	;# 
   449  039A                     	;# 
   450  039C                     	;# 
   451  039D                     	;# 
   452  039E                     	;# 
   453  039F                     	;# 
   454  0FE4                     	;# 
   455  0FE5                     	;# 
   456  0FE6                     	;# 
   457  0FE7                     	;# 
   458  0FE8                     	;# 
   459  0FE9                     	;# 
   460  0FEA                     	;# 
   461  0FEB                     	;# 
   462  0FED                     	;# 
   463  0FEE                     	;# 
   464  0FEF                     	;# 
   465  0000                     	;# 
   466  0001                     	;# 
   467  0002                     	;# 
   468  0003                     	;# 
   469  0004                     	;# 
   470  0005                     	;# 
   471  0006                     	;# 
   472  0007                     	;# 
   473  0008                     	;# 
   474  0009                     	;# 
   475  000A                     	;# 
   476  000B                     	;# 
   477  000C                     	;# 
   478  000E                     	;# 
   479  0011                     	;# 
   480  0012                     	;# 
   481  0015                     	;# 
   482  0016                     	;# 
   483  0016                     	;# 
   484  0017                     	;# 
   485  0018                     	;# 
   486  0019                     	;# 
   487  001A                     	;# 
   488  001B                     	;# 
   489  001C                     	;# 
   490  001E                     	;# 
   491  001F                     	;# 
   492  008C                     	;# 
   493  008E                     	;# 
   494  0091                     	;# 
   495  0092                     	;# 
   496  0095                     	;# 
   497  0096                     	;# 
   498  0097                     	;# 
   499  0098                     	;# 
   500  0099                     	;# 
   501  009A                     	;# 
   502  009B                     	;# 
   503  009B                     	;# 
   504  009C                     	;# 
   505  009D                     	;# 
   506  009E                     	;# 
   507  010C                     	;# 
   508  010E                     	;# 
   509  0111                     	;# 
   510  0112                     	;# 
   511  0113                     	;# 
   512  0114                     	;# 
   513  0115                     	;# 
   514  0116                     	;# 
   515  0117                     	;# 
   516  0118                     	;# 
   517  0119                     	;# 
   518  011A                     	;# 
   519  011B                     	;# 
   520  011D                     	;# 
   521  011D                     	;# 
   522  018C                     	;# 
   523  018E                     	;# 
   524  0191                     	;# 
   525  0191                     	;# 
   526  0192                     	;# 
   527  0193                     	;# 
   528  0193                     	;# 
   529  0193                     	;# 
   530  0194                     	;# 
   531  0195                     	;# 
   532  0196                     	;# 
   533  0199                     	;# 
   534  019A                     	;# 
   535  019B                     	;# 
   536  019B                     	;# 
   537  019B                     	;# 
   538  019B                     	;# 
   539  019C                     	;# 
   540  019C                     	;# 
   541  019D                     	;# 
   542  019E                     	;# 
   543  019F                     	;# 
   544  020C                     	;# 
   545  020E                     	;# 
   546  0211                     	;# 
   547  0211                     	;# 
   548  0212                     	;# 
   549  0212                     	;# 
   550  0213                     	;# 
   551  0213                     	;# 
   552  0214                     	;# 
   553  0214                     	;# 
   554  0215                     	;# 
   555  0215                     	;# 
   556  0215                     	;# 
   557  0216                     	;# 
   558  0216                     	;# 
   559  0217                     	;# 
   560  0217                     	;# 
   561  0291                     	;# 
   562  0291                     	;# 
   563  0292                     	;# 
   564  0293                     	;# 
   565  0294                     	;# 
   566  0295                     	;# 
   567  0295                     	;# 
   568  0296                     	;# 
   569  0391                     	;# 
   570  0392                     	;# 
   571  0393                     	;# 
   572  039A                     	;# 
   573  039C                     	;# 
   574  039D                     	;# 
   575  039E                     	;# 
   576  039F                     	;# 
   577  0FE4                     	;# 
   578  0FE5                     	;# 
   579  0FE6                     	;# 
   580  0FE7                     	;# 
   581  0FE8                     	;# 
   582  0FE9                     	;# 
   583  0FEA                     	;# 
   584  0FEB                     	;# 
   585  0FED                     	;# 
   586  0FEE                     	;# 
   587  0FEF                     	;# 
   588  0000                     	;# 
   589  0001                     	;# 
   590  0002                     	;# 
   591  0003                     	;# 
   592  0004                     	;# 
   593  0005                     	;# 
   594  0006                     	;# 
   595  0007                     	;# 
   596  0008                     	;# 
   597  0009                     	;# 
   598  000A                     	;# 
   599  000B                     	;# 
   600  000C                     	;# 
   601  000E                     	;# 
   602  0011                     	;# 
   603  0012                     	;# 
   604  0015                     	;# 
   605  0016                     	;# 
   606  0016                     	;# 
   607  0017                     	;# 
   608  0018                     	;# 
   609  0019                     	;# 
   610  001A                     	;# 
   611  001B                     	;# 
   612  001C                     	;# 
   613  001E                     	;# 
   614  001F                     	;# 
   615  008C                     	;# 
   616  008E                     	;# 
   617  0091                     	;# 
   618  0092                     	;# 
   619  0095                     	;# 
   620  0096                     	;# 
   621  0097                     	;# 
   622  0098                     	;# 
   623  0099                     	;# 
   624  009A                     	;# 
   625  009B                     	;# 
   626  009B                     	;# 
   627  009C                     	;# 
   628  009D                     	;# 
   629  009E                     	;# 
   630  010C                     	;# 
   631  010E                     	;# 
   632  0111                     	;# 
   633  0112                     	;# 
   634  0113                     	;# 
   635  0114                     	;# 
   636  0115                     	;# 
   637  0116                     	;# 
   638  0117                     	;# 
   639  0118                     	;# 
   640  0119                     	;# 
   641  011A                     	;# 
   642  011B                     	;# 
   643  011D                     	;# 
   644  011D                     	;# 
   645  018C                     	;# 
   646  018E                     	;# 
   647  0191                     	;# 
   648  0191                     	;# 
   649  0192                     	;# 
   650  0193                     	;# 
   651  0193                     	;# 
   652  0193                     	;# 
   653  0194                     	;# 
   654  0195                     	;# 
   655  0196                     	;# 
   656  0199                     	;# 
   657  019A                     	;# 
   658  019B                     	;# 
   659  019B                     	;# 
   660  019B                     	;# 
   661  019B                     	;# 
   662  019C                     	;# 
   663  019C                     	;# 
   664  019D                     	;# 
   665  019E                     	;# 
   666  019F                     	;# 
   667  020C                     	;# 
   668  020E                     	;# 
   669  0211                     	;# 
   670  0211                     	;# 
   671  0212                     	;# 
   672  0212                     	;# 
   673  0213                     	;# 
   674  0213                     	;# 
   675  0214                     	;# 
   676  0214                     	;# 
   677  0215                     	;# 
   678  0215                     	;# 
   679  0215                     	;# 
   680  0216                     	;# 
   681  0216                     	;# 
   682  0217                     	;# 
   683  0217                     	;# 
   684  0291                     	;# 
   685  0291                     	;# 
   686  0292                     	;# 
   687  0293                     	;# 
   688  0294                     	;# 
   689  0295                     	;# 
   690  0295                     	;# 
   691  0296                     	;# 
   692  0391                     	;# 
   693  0392                     	;# 
   694  0393                     	;# 
   695  039A                     	;# 
   696  039C                     	;# 
   697  039D                     	;# 
   698  039E                     	;# 
   699  039F                     	;# 
   700  0FE4                     	;# 
   701  0FE5                     	;# 
   702  0FE6                     	;# 
   703  0FE7                     	;# 
   704  0FE8                     	;# 
   705  0FE9                     	;# 
   706  0FEA                     	;# 
   707  0FEB                     	;# 
   708  0FED                     	;# 
   709  0FEE                     	;# 
   710  0FEF                     	;# 
   711  0000                     	;# 
   712  0001                     	;# 
   713  0002                     	;# 
   714  0003                     	;# 
   715  0004                     	;# 
   716  0005                     	;# 
   717  0006                     	;# 
   718  0007                     	;# 
   719  0008                     	;# 
   720  0009                     	;# 
   721  000A                     	;# 
   722  000B                     	;# 
   723  000C                     	;# 
   724  000E                     	;# 
   725  0011                     	;# 
   726  0012                     	;# 
   727  0015                     	;# 
   728  0016                     	;# 
   729  0016                     	;# 
   730  0017                     	;# 
   731  0018                     	;# 
   732  0019                     	;# 
   733  001A                     	;# 
   734  001B                     	;# 
   735  001C                     	;# 
   736  001E                     	;# 
   737  001F                     	;# 
   738  008C                     	;# 
   739  008E                     	;# 
   740  0091                     	;# 
   741  0092                     	;# 
   742  0095                     	;# 
   743  0096                     	;# 
   744  0097                     	;# 
   745  0098                     	;# 
   746  0099                     	;# 
   747  009A                     	;# 
   748  009B                     	;# 
   749  009B                     	;# 
   750  009C                     	;# 
   751  009D                     	;# 
   752  009E                     	;# 
   753  010C                     	;# 
   754  010E                     	;# 
   755  0111                     	;# 
   756  0112                     	;# 
   757  0113                     	;# 
   758  0114                     	;# 
   759  0115                     	;# 
   760  0116                     	;# 
   761  0117                     	;# 
   762  0118                     	;# 
   763  0119                     	;# 
   764  011A                     	;# 
   765  011B                     	;# 
   766  011D                     	;# 
   767  011D                     	;# 
   768  018C                     	;# 
   769  018E                     	;# 
   770  0191                     	;# 
   771  0191                     	;# 
   772  0192                     	;# 
   773  0193                     	;# 
   774  0193                     	;# 
   775  0193                     	;# 
   776  0194                     	;# 
   777  0195                     	;# 
   778  0196                     	;# 
   779  0199                     	;# 
   780  019A                     	;# 
   781  019B                     	;# 
   782  019B                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019C                     	;# 
   786  019C                     	;# 
   787  019D                     	;# 
   788  019E                     	;# 
   789  019F                     	;# 
   790  020C                     	;# 
   791  020E                     	;# 
   792  0211                     	;# 
   793  0211                     	;# 
   794  0212                     	;# 
   795  0212                     	;# 
   796  0213                     	;# 
   797  0213                     	;# 
   798  0214                     	;# 
   799  0214                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0216                     	;# 
   804  0216                     	;# 
   805  0217                     	;# 
   806  0217                     	;# 
   807  0291                     	;# 
   808  0291                     	;# 
   809  0292                     	;# 
   810  0293                     	;# 
   811  0294                     	;# 
   812  0295                     	;# 
   813  0295                     	;# 
   814  0296                     	;# 
   815  0391                     	;# 
   816  0392                     	;# 
   817  0393                     	;# 
   818  039A                     	;# 
   819  039C                     	;# 
   820  039D                     	;# 
   821  039E                     	;# 
   822  039F                     	;# 
   823  0FE4                     	;# 
   824  0FE5                     	;# 
   825  0FE6                     	;# 
   826  0FE7                     	;# 
   827  0FE8                     	;# 
   828  0FE9                     	;# 
   829  0FEA                     	;# 
   830  0FEB                     	;# 
   831  0FED                     	;# 
   832  0FEE                     	;# 
   833  0FEF                     	;# 
   834  0000                     	;# 
   835  0001                     	;# 
   836  0002                     	;# 
   837  0003                     	;# 
   838  0004                     	;# 
   839  0005                     	;# 
   840  0006                     	;# 
   841  0007                     	;# 
   842  0008                     	;# 
   843  0009                     	;# 
   844  000A                     	;# 
   845  000B                     	;# 
   846  000C                     	;# 
   847  000E                     	;# 
   848  0011                     	;# 
   849  0012                     	;# 
   850  0015                     	;# 
   851  0016                     	;# 
   852  0016                     	;# 
   853  0017                     	;# 
   854  0018                     	;# 
   855  0019                     	;# 
   856  001A                     	;# 
   857  001B                     	;# 
   858  001C                     	;# 
   859  001E                     	;# 
   860  001F                     	;# 
   861  008C                     	;# 
   862  008E                     	;# 
   863  0091                     	;# 
   864  0092                     	;# 
   865  0095                     	;# 
   866  0096                     	;# 
   867  0097                     	;# 
   868  0098                     	;# 
   869  0099                     	;# 
   870  009A                     	;# 
   871  009B                     	;# 
   872  009B                     	;# 
   873  009C                     	;# 
   874  009D                     	;# 
   875  009E                     	;# 
   876  010C                     	;# 
   877  010E                     	;# 
   878  0111                     	;# 
   879  0112                     	;# 
   880  0113                     	;# 
   881  0114                     	;# 
   882  0115                     	;# 
   883  0116                     	;# 
   884  0117                     	;# 
   885  0118                     	;# 
   886  0119                     	;# 
   887  011A                     	;# 
   888  011B                     	;# 
   889  011D                     	;# 
   890  011D                     	;# 
   891  018C                     	;# 
   892  018E                     	;# 
   893  0191                     	;# 
   894  0191                     	;# 
   895  0192                     	;# 
   896  0193                     	;# 
   897  0193                     	;# 
   898  0193                     	;# 
   899  0194                     	;# 
   900  0195                     	;# 
   901  0196                     	;# 
   902  0199                     	;# 
   903  019A                     	;# 
   904  019B                     	;# 
   905  019B                     	;# 
   906  019B                     	;# 
   907  019B                     	;# 
   908  019C                     	;# 
   909  019C                     	;# 
   910  019D                     	;# 
   911  019E                     	;# 
   912  019F                     	;# 
   913  020C                     	;# 
   914  020E                     	;# 
   915  0211                     	;# 
   916  0211                     	;# 
   917  0212                     	;# 
   918  0212                     	;# 
   919  0213                     	;# 
   920  0213                     	;# 
   921  0214                     	;# 
   922  0214                     	;# 
   923  0215                     	;# 
   924  0215                     	;# 
   925  0215                     	;# 
   926  0216                     	;# 
   927  0216                     	;# 
   928  0217                     	;# 
   929  0217                     	;# 
   930  0291                     	;# 
   931  0291                     	;# 
   932  0292                     	;# 
   933  0293                     	;# 
   934  0294                     	;# 
   935  0295                     	;# 
   936  0295                     	;# 
   937  0296                     	;# 
   938  0391                     	;# 
   939  0392                     	;# 
   940  0393                     	;# 
   941  039A                     	;# 
   942  039C                     	;# 
   943  039D                     	;# 
   944  039E                     	;# 
   945  039F                     	;# 
   946  0FE4                     	;# 
   947  0FE5                     	;# 
   948  0FE6                     	;# 
   949  0FE7                     	;# 
   950  0FE8                     	;# 
   951  0FE9                     	;# 
   952  0FEA                     	;# 
   953  0FEB                     	;# 
   954  0FED                     	;# 
   955  0FEE                     	;# 
   956  0FEF                     	;# 
   957  0000                     	;# 
   958  0001                     	;# 
   959  0002                     	;# 
   960  0003                     	;# 
   961  0004                     	;# 
   962  0005                     	;# 
   963  0006                     	;# 
   964  0007                     	;# 
   965  0008                     	;# 
   966  0009                     	;# 
   967  000A                     	;# 
   968  000B                     	;# 
   969  000C                     	;# 
   970  000E                     	;# 
   971  0011                     	;# 
   972  0012                     	;# 
   973  0015                     	;# 
   974  0016                     	;# 
   975  0016                     	;# 
   976  0017                     	;# 
   977  0018                     	;# 
   978  0019                     	;# 
   979  001A                     	;# 
   980  001B                     	;# 
   981  001C                     	;# 
   982  001E                     	;# 
   983  001F                     	;# 
   984  008C                     	;# 
   985  008E                     	;# 
   986  0091                     	;# 
   987  0092                     	;# 
   988  0095                     	;# 
   989  0096                     	;# 
   990  0097                     	;# 
   991  0098                     	;# 
   992  0099                     	;# 
   993  009A                     	;# 
   994  009B                     	;# 
   995  009B                     	;# 
   996  009C                     	;# 
   997  009D                     	;# 
   998  009E                     	;# 
   999  010C                     	;# 
  1000  010E                     	;# 
  1001  0111                     	;# 
  1002  0112                     	;# 
  1003  0113                     	;# 
  1004  0114                     	;# 
  1005  0115                     	;# 
  1006  0116                     	;# 
  1007  0117                     	;# 
  1008  0118                     	;# 
  1009  0119                     	;# 
  1010  011A                     	;# 
  1011  011B                     	;# 
  1012  011D                     	;# 
  1013  011D                     	;# 
  1014  018C                     	;# 
  1015  018E                     	;# 
  1016  0191                     	;# 
  1017  0191                     	;# 
  1018  0192                     	;# 
  1019  0193                     	;# 
  1020  0193                     	;# 
  1021  0193                     	;# 
  1022  0194                     	;# 
  1023  0195                     	;# 
  1024  0196                     	;# 
  1025  0199                     	;# 
  1026  019A                     	;# 
  1027  019B                     	;# 
  1028  019B                     	;# 
  1029  019B                     	;# 
  1030  019B                     	;# 
  1031  019C                     	;# 
  1032  019C                     	;# 
  1033  019D                     	;# 
  1034  019E                     	;# 
  1035  019F                     	;# 
  1036  020C                     	;# 
  1037  020E                     	;# 
  1038  0211                     	;# 
  1039  0211                     	;# 
  1040  0212                     	;# 
  1041  0212                     	;# 
  1042  0213                     	;# 
  1043  0213                     	;# 
  1044  0214                     	;# 
  1045  0214                     	;# 
  1046  0215                     	;# 
  1047  0215                     	;# 
  1048  0215                     	;# 
  1049  0216                     	;# 
  1050  0216                     	;# 
  1051  0217                     	;# 
  1052  0217                     	;# 
  1053  0291                     	;# 
  1054  0291                     	;# 
  1055  0292                     	;# 
  1056  0293                     	;# 
  1057  0294                     	;# 
  1058  0295                     	;# 
  1059  0295                     	;# 
  1060  0296                     	;# 
  1061  0391                     	;# 
  1062  0392                     	;# 
  1063  0393                     	;# 
  1064  039A                     	;# 
  1065  039C                     	;# 
  1066  039D                     	;# 
  1067  039E                     	;# 
  1068  039F                     	;# 
  1069  0FE4                     	;# 
  1070  0FE5                     	;# 
  1071  0FE6                     	;# 
  1072  0FE7                     	;# 
  1073  0FE8                     	;# 
  1074  0FE9                     	;# 
  1075  0FEA                     	;# 
  1076  0FEB                     	;# 
  1077  0FED                     	;# 
  1078  0FEE                     	;# 
  1079  0FEF                     	;# 
  1080  0000                     	;# 
  1081  0001                     	;# 
  1082  0002                     	;# 
  1083  0003                     	;# 
  1084  0004                     	;# 
  1085  0005                     	;# 
  1086  0006                     	;# 
  1087  0007                     	;# 
  1088  0008                     	;# 
  1089  0009                     	;# 
  1090  000A                     	;# 
  1091  000B                     	;# 
  1092  000C                     	;# 
  1093  000E                     	;# 
  1094  0011                     	;# 
  1095  0012                     	;# 
  1096  0015                     	;# 
  1097  0016                     	;# 
  1098  0016                     	;# 
  1099  0017                     	;# 
  1100  0018                     	;# 
  1101  0019                     	;# 
  1102  001A                     	;# 
  1103  001B                     	;# 
  1104  001C                     	;# 
  1105  001E                     	;# 
  1106  001F                     	;# 
  1107  008C                     	;# 
  1108  008E                     	;# 
  1109  0091                     	;# 
  1110  0092                     	;# 
  1111  0095                     	;# 
  1112  0096                     	;# 
  1113  0097                     	;# 
  1114  0098                     	;# 
  1115  0099                     	;# 
  1116  009A                     	;# 
  1117  009B                     	;# 
  1118  009B                     	;# 
  1119  009C                     	;# 
  1120  009D                     	;# 
  1121  009E                     	;# 
  1122  010C                     	;# 
  1123  010E                     	;# 
  1124  0111                     	;# 
  1125  0112                     	;# 
  1126  0113                     	;# 
  1127  0114                     	;# 
  1128  0115                     	;# 
  1129  0116                     	;# 
  1130  0117                     	;# 
  1131  0118                     	;# 
  1132  0119                     	;# 
  1133  011A                     	;# 
  1134  011B                     	;# 
  1135  011D                     	;# 
  1136  011D                     	;# 
  1137  018C                     	;# 
  1138  018E                     	;# 
  1139  0191                     	;# 
  1140  0191                     	;# 
  1141  0192                     	;# 
  1142  0193                     	;# 
  1143  0193                     	;# 
  1144  0193                     	;# 
  1145  0194                     	;# 
  1146  0195                     	;# 
  1147  0196                     	;# 
  1148  0199                     	;# 
  1149  019A                     	;# 
  1150  019B                     	;# 
  1151  019B                     	;# 
  1152  019B                     	;# 
  1153  019B                     	;# 
  1154  019C                     	;# 
  1155  019C                     	;# 
  1156  019D                     	;# 
  1157  019E                     	;# 
  1158  019F                     	;# 
  1159  020C                     	;# 
  1160  020E                     	;# 
  1161  0211                     	;# 
  1162  0211                     	;# 
  1163  0212                     	;# 
  1164  0212                     	;# 
  1165  0213                     	;# 
  1166  0213                     	;# 
  1167  0214                     	;# 
  1168  0214                     	;# 
  1169  0215                     	;# 
  1170  0215                     	;# 
  1171  0215                     	;# 
  1172  0216                     	;# 
  1173  0216                     	;# 
  1174  0217                     	;# 
  1175  0217                     	;# 
  1176  0291                     	;# 
  1177  0291                     	;# 
  1178  0292                     	;# 
  1179  0293                     	;# 
  1180  0294                     	;# 
  1181  0295                     	;# 
  1182  0295                     	;# 
  1183  0296                     	;# 
  1184  0391                     	;# 
  1185  0392                     	;# 
  1186  0393                     	;# 
  1187  039A                     	;# 
  1188  039C                     	;# 
  1189  039D                     	;# 
  1190  039E                     	;# 
  1191  039F                     	;# 
  1192  0FE4                     	;# 
  1193  0FE5                     	;# 
  1194  0FE6                     	;# 
  1195  0FE7                     	;# 
  1196  0FE8                     	;# 
  1197  0FE9                     	;# 
  1198  0FEA                     	;# 
  1199  0FEB                     	;# 
  1200  0FED                     	;# 
  1201  0FEE                     	;# 
  1202  0FEF                     	;# 
  1203  0000                     	;# 
  1204  0001                     	;# 
  1205  0002                     	;# 
  1206  0003                     	;# 
  1207  0004                     	;# 
  1208  0005                     	;# 
  1209  0006                     	;# 
  1210  0007                     	;# 
  1211  0008                     	;# 
  1212  0009                     	;# 
  1213  000A                     	;# 
  1214  000B                     	;# 
  1215  000C                     	;# 
  1216  000E                     	;# 
  1217  0011                     	;# 
  1218  0012                     	;# 
  1219  0015                     	;# 
  1220  0016                     	;# 
  1221  0016                     	;# 
  1222  0017                     	;# 
  1223  0018                     	;# 
  1224  0019                     	;# 
  1225  001A                     	;# 
  1226  001B                     	;# 
  1227  001C                     	;# 
  1228  001E                     	;# 
  1229  001F                     	;# 
  1230  008C                     	;# 
  1231  008E                     	;# 
  1232  0091                     	;# 
  1233  0092                     	;# 
  1234  0095                     	;# 
  1235  0096                     	;# 
  1236  0097                     	;# 
  1237  0098                     	;# 
  1238  0099                     	;# 
  1239  009A                     	;# 
  1240  009B                     	;# 
  1241  009B                     	;# 
  1242  009C                     	;# 
  1243  009D                     	;# 
  1244  009E                     	;# 
  1245  010C                     	;# 
  1246  010E                     	;# 
  1247  0111                     	;# 
  1248  0112                     	;# 
  1249  0113                     	;# 
  1250  0114                     	;# 
  1251  0115                     	;# 
  1252  0116                     	;# 
  1253  0117                     	;# 
  1254  0118                     	;# 
  1255  0119                     	;# 
  1256  011A                     	;# 
  1257  011B                     	;# 
  1258  011D                     	;# 
  1259  011D                     	;# 
  1260  018C                     	;# 
  1261  018E                     	;# 
  1262  0191                     	;# 
  1263  0191                     	;# 
  1264  0192                     	;# 
  1265  0193                     	;# 
  1266  0193                     	;# 
  1267  0193                     	;# 
  1268  0194                     	;# 
  1269  0195                     	;# 
  1270  0196                     	;# 
  1271  0199                     	;# 
  1272  019A                     	;# 
  1273  019B                     	;# 
  1274  019B                     	;# 
  1275  019B                     	;# 
  1276  019B                     	;# 
  1277  019C                     	;# 
  1278  019C                     	;# 
  1279  019D                     	;# 
  1280  019E                     	;# 
  1281  019F                     	;# 
  1282  020C                     	;# 
  1283  020E                     	;# 
  1284  0211                     	;# 
  1285  0211                     	;# 
  1286  0212                     	;# 
  1287  0212                     	;# 
  1288  0213                     	;# 
  1289  0213                     	;# 
  1290  0214                     	;# 
  1291  0214                     	;# 
  1292  0215                     	;# 
  1293  0215                     	;# 
  1294  0215                     	;# 
  1295  0216                     	;# 
  1296  0216                     	;# 
  1297  0217                     	;# 
  1298  0217                     	;# 
  1299  0291                     	;# 
  1300  0291                     	;# 
  1301  0292                     	;# 
  1302  0293                     	;# 
  1303  0294                     	;# 
  1304  0295                     	;# 
  1305  0295                     	;# 
  1306  0296                     	;# 
  1307  0391                     	;# 
  1308  0392                     	;# 
  1309  0393                     	;# 
  1310  039A                     	;# 
  1311  039C                     	;# 
  1312  039D                     	;# 
  1313  039E                     	;# 
  1314  039F                     	;# 
  1315  0FE4                     	;# 
  1316  0FE5                     	;# 
  1317  0FE6                     	;# 
  1318  0FE7                     	;# 
  1319  0FE8                     	;# 
  1320  0FE9                     	;# 
  1321  0FEA                     	;# 
  1322  0FEB                     	;# 
  1323  0FED                     	;# 
  1324  0FEE                     	;# 
  1325  0FEF                     	;# 
  1326                           
  1327                           	psect	stringtext1
  1328  0501                     __pstringtext1:
  1329  0501                     _ROTATION_TIME:
  1330  0501  343C               	retlw	60
  1331  0502  3400               	retlw	0
  1332  0503  3400               	retlw	0
  1333  0504  3400               	retlw	0
  1334  0505                     __end_of_ROTATION_TIME:
  1335                           
  1336                           	psect	stringtext2
  1337  0505                     __pstringtext2:
  1338  0505                     _GOOD_WSP_VOLTAGE:
  1339  0505  3440               	retlw	64
  1340  0506  349C               	retlw	156
  1341  0507  3400               	retlw	0
  1342  0508  3400               	retlw	0
  1343  0509                     __end_of_GOOD_WSP_VOLTAGE:
  1344                           
  1345                           	psect	stringtext3
  1346  0509                     __pstringtext3:
  1347  0509                     _BAD_WSP_VOLTAGE:
  1348  0509  3420               	retlw	32
  1349  050A  344E               	retlw	78
  1350  050B  3400               	retlw	0
  1351  050C  3400               	retlw	0
  1352  050D                     __end_of_BAD_WSP_VOLTAGE:
  1353                           
  1354                           	psect	nvBANK0
  1355  0037                     __pnvBANK0:
  1356  0037                     _TMR0_InterruptHandler:
  1357  0037                     	ds	2
  1358  0039                     _TMR2_InterruptHandler:
  1359  0039                     	ds	2
  1360  003B                     _timer0ReloadVal:
  1361  003B                     	ds	1
  1362  0015                     _TMR0	set	21
  1363  001C                     _T2CONbits	set	28
  1364  001C                     _T2CON	set	28
  1365  001A                     _TMR2	set	26
  1366  001B                     _PR2	set	27
  1367  0011                     _PIR1bits	set	17
  1368  000B                     _INTCONbits	set	11
  1369  005F                     _GIE	set	95
  1370  008E                     _TRISCbits	set	142
  1371  008C                     _TRISAbits	set	140
  1372  0095                     _OPTION_REG	set	149
  1373  0091                     _PIE1bits	set	145
  1374  0095                     _OPTION_REGbits	set	149
  1375  008E                     _TRISC	set	142
  1376  008C                     _TRISA	set	140
  1377  009D                     _ADCON0bits	set	157
  1378  009D                     _ADCON0	set	157
  1379  009C                     _ADRESH	set	156
  1380  009B                     _ADRESL	set	155
  1381  009E                     _ADCON1	set	158
  1382  0097                     _WDTCON	set	151
  1383  0098                     _OSCTUNE	set	152
  1384  0099                     _OSCCON	set	153
  1385  010E                     _LATCbits	set	270
  1386  010C                     _LATAbits	set	268
  1387  0117                     _FVRCONbits	set	279
  1388  0117                     _FVRCON	set	279
  1389  011D                     _APFCON	set	285
  1390  010E                     _LATC	set	270
  1391  010C                     _LATA	set	268
  1392  0116                     _BORCON	set	278
  1393  0191                     _EEADR	set	401
  1394  0196                     _EECON2	set	406
  1395  0193                     _EEDATA	set	403
  1396  018C                     _ANSELAbits	set	396
  1397  018E                     _ANSELCbits	set	398
  1398  018C                     _ANSELA	set	396
  1399  018E                     _ANSELC	set	398
  1400  0CA8                     _RD	set	3240
  1401  0CAA                     _WREN	set	3242
  1402  0CA9                     _WR	set	3241
  1403  020E                     _WPUCbits	set	526
  1404  020C                     _WPUAbits	set	524
  1405  020E                     _WPUC	set	526
  1406  020C                     _WPUA	set	524
  1407                           
  1408                           	psect	cinit
  1409  0027                     start_initialization:	
  1410                           ; #config settings
  1411                           
  1412  0027                     __initialization:
  1413                           
  1414                           ; Clear objects allocated to COMMON
  1415  0027  01F8               	clrf	__pbssCOMMON& (0+127)
  1416  0028  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1417  0029  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1418  002A  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1419  002B  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1420                           
  1421                           ; Clear objects allocated to BANK0
  1422  002C  0020               	movlb	0	; select bank0
  1423  002D  01AC               	clrf	__pbssBANK0& (0+127)
  1424  002E  01AD               	clrf	(__pbssBANK0+1)& (0+127)
  1425  002F  01AE               	clrf	(__pbssBANK0+2)& (0+127)
  1426  0030  01AF               	clrf	(__pbssBANK0+3)& (0+127)
  1427  0031  01B0               	clrf	(__pbssBANK0+4)& (0+127)
  1428  0032  01B1               	clrf	(__pbssBANK0+5)& (0+127)
  1429  0033  01B2               	clrf	(__pbssBANK0+6)& (0+127)
  1430  0034  01B3               	clrf	(__pbssBANK0+7)& (0+127)
  1431  0035  01B4               	clrf	(__pbssBANK0+8)& (0+127)
  1432  0036  01B5               	clrf	(__pbssBANK0+9)& (0+127)
  1433  0037  01B6               	clrf	(__pbssBANK0+10)& (0+127)
  1434  0038                     end_of_initialization:	
  1435                           ;End of C runtime variable initialization code
  1436                           
  1437  0038                     __end_of__initialization:
  1438  0038  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1439  0039  0020               	movlb	0
  1440  003A  2BDA               	ljmp	_main	;jump to C main() function
  1441                           
  1442                           	psect	bssCOMMON
  1443  0078                     __pbssCOMMON:
  1444  0078                     TMR2_ISR@CountCallBack:
  1445  0078                     	ds	2
  1446  007A                     sec_tick_work@iled:
  1447  007A                     	ds	1
  1448  007B                     get_measure@measures:
  1449  007B                     	ds	1
  1450  007C                     _FLAGS:
  1451  007C                     	ds	1
  1452                           
  1453                           	psect	bssBANK0
  1454  002C                     __pbssBANK0:
  1455  002C                     _time_s:
  1456  002C                     	ds	4
  1457  0030                     _ADC_InterruptHandler:
  1458  0030                     	ds	2
  1459  0032                     get_jump_full@jump_counter:
  1460  0032                     	ds	1
  1461  0033                     get_jump@jump_counter:
  1462  0033                     	ds	1
  1463  0034                     get_fun_full@fun_counter:
  1464  0034                     	ds	1
  1465  0035                     get_fun@fun_counter:
  1466  0035                     	ds	1
  1467  0036                     _time_pow_s:
  1468  0036                     	ds	1
  1469                           
  1470                           	psect	cstackCOMMON
  1471  0070                     __pcstackCOMMON:
  1472  0070                     ?_PIN_MANAGER_Initialize:
  1473  0070                     ?_OSCILLATOR_Initialize:	
  1474                           ; 1 bytes @ 0x0
  1475                           
  1476  0070                     ?_WDT_Initialize:	
  1477                           ; 1 bytes @ 0x0
  1478                           
  1479  0070                     ?_FVR_Initialize:	
  1480                           ; 1 bytes @ 0x0
  1481                           
  1482  0070                     ?_ADC_Initialize:	
  1483                           ; 1 bytes @ 0x0
  1484                           
  1485  0070                     ?_TMR2_Initialize:	
  1486                           ; 1 bytes @ 0x0
  1487                           
  1488  0070                     ?_TMR0_Initialize:	
  1489                           ; 1 bytes @ 0x0
  1490                           
  1491  0070                     ?_TMR0_ISR:	
  1492                           ; 1 bytes @ 0x0
  1493                           
  1494  0070                     ??_TMR0_ISR:	
  1495                           ; 1 bytes @ 0x0
  1496                           
  1497  0070                     ?_TMR2_ISR:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500  0070                     ?_TMR2_DefaultInterruptHandler:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503  0070                     ??_TMR2_DefaultInterruptHandler:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506  0070                     ?_TMR2_CallBack:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509  0070                     ?_TMR0_DefaultInterruptHandler:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512  0070                     ??_TMR0_DefaultInterruptHandler:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515  0070                     ?_SYSTEM_Initialize:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0070                     ?_INTERRUPT_InterruptManager:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0070                     ?_TMR2_StartTimer:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0070                     ?_switch_zum:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0070                     ?_toggle_tone:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0070                     ??_toggle_tone:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0070                     ?_go_close:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0070                     ?_go_open:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0070                     ?_go_close_alt:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ?_go_open_alt:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ?_start_alarm:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ?_get_measure:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ?_get_fun:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ?_get_fun_full:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ?_get_jump:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0070                     ?_get_jump_full:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0070                     ?_rele_tick:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566  0070                     ??_rele_tick:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ?_sec_tick_work:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0070                     ?_povorot:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0070                     ?_fun_work:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578  0070                     ?_switch_wm:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0070                     ?_get_voltage:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0070                     ?_start_setup:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0070                     ?_main:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0070                     ?i1_switch_zum:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0070                     ??i1_switch_zum:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596  0070                     ?i1_go_close:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599  0070                     ??i1_go_close:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602  0070                     ?i1_go_close_alt:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605  0070                     ??i1_go_close_alt:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608  0070                     ?i1_ADC_GetConversion:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611                           
  1612                           ; 2 bytes @ 0x0
  1613  0070                     	ds	2
  1614  0072                     ??_start_alarm:
  1615  0072                     ??i1_ADC_GetConversion:	
  1616                           ; 1 bytes @ 0x2
  1617                           
  1618                           
  1619                           ; 1 bytes @ 0x2
  1620  0072                     	ds	1
  1621  0073                     i1ADC_GetConversion@channel:
  1622                           
  1623                           ; 1 bytes @ 0x3
  1624  0073                     	ds	1
  1625  0074                     ??_get_measure:
  1626                           
  1627                           ; 1 bytes @ 0x4
  1628  0074                     	ds	1
  1629  0075                     get_measure@res:
  1630                           
  1631                           ; 2 bytes @ 0x5
  1632  0075                     	ds	2
  1633  0077                     ??_sec_tick_work:
  1634                           
  1635                           ; 1 bytes @ 0x7
  1636  0077                     	ds	1
  1637  0078                     ??_TMR2_ISR:
  1638  0078                     ??_TMR2_CallBack:	
  1639                           ; 1 bytes @ 0x8
  1640                           
  1641  0078                     ??_INTERRUPT_InterruptManager:	
  1642                           ; 1 bytes @ 0x8
  1643                           
  1644                           
  1645                           	psect	cstackBANK0
  1646  0020                     __pcstackBANK0:	
  1647                           ; 1 bytes @ 0x8
  1648                           
  1649  0020                     ??_PIN_MANAGER_Initialize:
  1650  0020                     ??_OSCILLATOR_Initialize:	
  1651                           ; 1 bytes @ 0x0
  1652                           
  1653  0020                     ??_WDT_Initialize:	
  1654                           ; 1 bytes @ 0x0
  1655                           
  1656  0020                     ??_FVR_Initialize:	
  1657                           ; 1 bytes @ 0x0
  1658                           
  1659  0020                     ??_ADC_Initialize:	
  1660                           ; 1 bytes @ 0x0
  1661                           
  1662  0020                     ?_TMR2_SetInterruptHandler:	
  1663                           ; 1 bytes @ 0x0
  1664                           
  1665  0020                     ?_TMR0_SetInterruptHandler:	
  1666                           ; 1 bytes @ 0x0
  1667                           
  1668  0020                     ?_EEPROM_WriteByte:	
  1669                           ; 1 bytes @ 0x0
  1670                           
  1671  0020                     ??_TMR2_StartTimer:	
  1672                           ; 1 bytes @ 0x0
  1673                           
  1674  0020                     ??_switch_zum:	
  1675                           ; 1 bytes @ 0x0
  1676                           
  1677  0020                     ?_beep:	
  1678                           ; 1 bytes @ 0x0
  1679                           
  1680  0020                     ??_go_close:	
  1681                           ; 1 bytes @ 0x0
  1682                           
  1683  0020                     ??_go_open:	
  1684                           ; 1 bytes @ 0x0
  1685                           
  1686  0020                     ??_go_close_alt:	
  1687                           ; 1 bytes @ 0x0
  1688                           
  1689  0020                     ??_go_open_alt:	
  1690                           ; 1 bytes @ 0x0
  1691                           
  1692  0020                     ?_ADC_GetConversion:	
  1693                           ; 1 bytes @ 0x0
  1694                           
  1695  0020                     EEPROM_WriteByte@dt:	
  1696                           ; 2 bytes @ 0x0
  1697                           
  1698  0020                     TMR2_SetInterruptHandler@InterruptHandler:	
  1699                           ; 1 bytes @ 0x0
  1700                           
  1701  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  1702                           ; 2 bytes @ 0x0
  1703                           
  1704  0020                     beep@delay:	
  1705                           ; 2 bytes @ 0x0
  1706                           
  1707                           
  1708                           ; 2 bytes @ 0x0
  1709  0020                     	ds	1
  1710  0021                     ??_EEPROM_WriteByte:
  1711                           
  1712                           ; 1 bytes @ 0x1
  1713  0021                     	ds	1
  1714  0022                     ??_TMR2_Initialize:
  1715  0022                     ??_TMR0_Initialize:	
  1716                           ; 1 bytes @ 0x2
  1717                           
  1718  0022                     ??_TMR2_SetInterruptHandler:	
  1719                           ; 1 bytes @ 0x2
  1720                           
  1721  0022                     ??_TMR0_SetInterruptHandler:	
  1722                           ; 1 bytes @ 0x2
  1723                           
  1724  0022                     ??_ADC_GetConversion:	
  1725                           ; 1 bytes @ 0x2
  1726                           
  1727  0022                     ??_povorot:	
  1728                           ; 1 bytes @ 0x2
  1729                           
  1730  0022                     beep@pause:	
  1731                           ; 1 bytes @ 0x2
  1732                           
  1733                           
  1734                           ; 2 bytes @ 0x2
  1735  0022                     	ds	1
  1736  0023                     ??_SYSTEM_Initialize:
  1737  0023                     ADC_GetConversion@channel:	
  1738                           ; 1 bytes @ 0x3
  1739                           
  1740  0023                     EEPROM_WriteByte@addr:	
  1741                           ; 1 bytes @ 0x3
  1742                           
  1743                           
  1744                           ; 1 bytes @ 0x3
  1745  0023                     	ds	1
  1746  0024                     ??_get_fun:
  1747  0024                     ??_get_fun_full:	
  1748                           ; 1 bytes @ 0x4
  1749                           
  1750  0024                     ??_get_jump:	
  1751                           ; 1 bytes @ 0x4
  1752                           
  1753  0024                     ??_get_jump_full:	
  1754                           ; 1 bytes @ 0x4
  1755                           
  1756  0024                     beep@time:	
  1757                           ; 1 bytes @ 0x4
  1758                           
  1759  0024                     EEPROM_WriteByte@status:	
  1760                           ; 1 bytes @ 0x4
  1761                           
  1762                           
  1763                           ; 1 bytes @ 0x4
  1764  0024                     	ds	1
  1765  0025                     ??_get_voltage:
  1766  0025                     beep@count:	
  1767                           ; 1 bytes @ 0x5
  1768                           
  1769  0025                     get_fun@res:	
  1770                           ; 1 bytes @ 0x5
  1771                           
  1772  0025                     get_fun_full@res:	
  1773                           ; 2 bytes @ 0x5
  1774                           
  1775  0025                     get_jump@res:	
  1776                           ; 2 bytes @ 0x5
  1777                           
  1778  0025                     get_jump_full@res:	
  1779                           ; 2 bytes @ 0x5
  1780                           
  1781                           
  1782                           ; 2 bytes @ 0x5
  1783  0025                     	ds	1
  1784  0026                     ??_beep:
  1785  0026                     get_voltage@res:	
  1786                           ; 1 bytes @ 0x6
  1787                           
  1788                           
  1789                           ; 2 bytes @ 0x6
  1790  0026                     	ds	1
  1791  0027                     get_fun_full@flag:
  1792  0027                     get_jump_full@flag:	
  1793                           ; 1 bytes @ 0x7
  1794                           
  1795                           
  1796                           ; 1 bytes @ 0x7
  1797  0027                     	ds	1
  1798  0028                     ??_start_setup:
  1799  0028                     beep@j:	
  1800                           ; 1 bytes @ 0x8
  1801                           
  1802  0028                     get_voltage@q:	
  1803                           ; 1 bytes @ 0x8
  1804                           
  1805                           
  1806                           ; 1 bytes @ 0x8
  1807  0028                     	ds	1
  1808  0029                     beep@i:
  1809                           
  1810                           ; 1 bytes @ 0x9
  1811  0029                     	ds	1
  1812  002A                     ??_fun_work:
  1813  002A                     ??_switch_wm:	
  1814                           ; 1 bytes @ 0xA
  1815                           
  1816                           
  1817                           ; 1 bytes @ 0xA
  1818  002A                     	ds	2
  1819  002C                     ??_main:
  1820                           
  1821                           	psect	maintext
  1822  03DA                     __pmaintext:	
  1823                           ; 1 bytes @ 0xC
  1824 ;;
  1825 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1826 ;;
  1827 ;; *************** function _main *****************
  1828 ;; Defined at:
  1829 ;;		line 377 in file "main.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;		None
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, status,2, status,0, pclath, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : B1F/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMMON   BANK0   BANK1
  1843 ;;      Params:         0       0       0
  1844 ;;      Locals:         0       0       0
  1845 ;;      Temps:          0       0       0
  1846 ;;      Totals:         0       0       0
  1847 ;;Total ram usage:        0 bytes
  1848 ;; Hardware stack levels required when called: 11
  1849 ;; This function calls:
  1850 ;;		_fun_work
  1851 ;;		_get_fun
  1852 ;;		_get_jump
  1853 ;;		_get_voltage
  1854 ;;		_povorot
  1855 ;;		_start_setup
  1856 ;;		_switch_wm
  1857 ;; This function is called by:
  1858 ;;		Startup code after reset
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862  03DA                     _main:	
  1863                           ;psect for function _main
  1864                           
  1865  03DA                     l2222:	
  1866                           ;incstack = 0
  1867                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1868                           
  1869                           
  1870                           ;main.c: 379:     start_setup();
  1871  03DA  3182  2263  3183   	fcall	_start_setup
  1872  03DD                     l482:	
  1873                           ;main.c: 384:     while (1) {
  1874                           
  1875                           
  1876                           ;main.c: 386:          get_voltage();
  1877  03DD  3183  234E  3183   	fcall	_get_voltage
  1878  03E0                     l2224:
  1879                           
  1880                           ;main.c: 387:         if (!FLAGS.bits.ALARM) {
  1881  03E0  187C               	btfsc	_FLAGS,0
  1882  03E1  2BE3               	goto	u1521
  1883  03E2  2BE4               	goto	u1520
  1884  03E3                     u1521:
  1885  03E3  2BDD               	goto	l482
  1886  03E4                     u1520:
  1887  03E4                     l2226:
  1888                           
  1889                           ;main.c: 388:             get_fun();
  1890  03E4  3181  21EB  3183   	fcall	_get_fun
  1891                           
  1892                           ;main.c: 389:             fun_work();
  1893  03E7  3180  203B  3183   	fcall	_fun_work
  1894                           
  1895                           ;main.c: 390:             get_jump();
  1896  03EA  3182  2229  3183   	fcall	_get_jump
  1897                           
  1898                           ;main.c: 391:             switch_wm();
  1899  03ED  3181  2123  3183   	fcall	_switch_wm
  1900                           
  1901                           ;main.c: 392:             povorot();
  1902  03F0  3180  2094  3183   	fcall	_povorot
  1903  03F3  2BDD               	goto	l482
  1904  03F4  2826               	ljmp	start
  1905  03F5                     __end_of_main:
  1906                           
  1907                           	psect	text1
  1908  0123                     __ptext1:	
  1909 ;; *************** function _switch_wm *****************
  1910 ;; Defined at:
  1911 ;;		line 310 in file "main.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;		None
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;		None
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, status,2, status,0, pclath, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMMON   BANK0   BANK1
  1925 ;;      Params:         0       0       0
  1926 ;;      Locals:         0       0       0
  1927 ;;      Temps:          0       2       0
  1928 ;;      Totals:         0       2       0
  1929 ;;Total ram usage:        2 bytes
  1930 ;; Hardware stack levels used: 1
  1931 ;; Hardware stack levels required when called: 9
  1932 ;; This function calls:
  1933 ;;		_beep
  1934 ;;		_go_close
  1935 ;;		_go_close_alt
  1936 ;; This function is called by:
  1937 ;;		_main
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941  0123                     _switch_wm:	
  1942                           ;psect for function _switch_wm
  1943                           
  1944  0123                     l2132:	
  1945                           ;incstack = 0
  1946                           ; Regs used in _switch_wm: [wreg+status,2+status,0+pclath+cstack]
  1947                           
  1948                           
  1949                           ;main.c: 311:     if (FLAGS.bits._JUMP_CONNECTED) {
  1950  0123  1E7C               	btfss	_FLAGS,4
  1951  0124  2926               	goto	u1401
  1952  0125  2927               	goto	u1400
  1953  0126                     u1401:
  1954  0126  2948               	goto	l440
  1955  0127                     u1400:
  1956  0127                     l2134:
  1957                           
  1958                           ;main.c: 312:         if (FLAGS.bits.NORMAL_WORK_MODE) {
  1959  0127  1CFC               	btfss	_FLAGS,1
  1960  0128  292A               	goto	u1411
  1961  0129  292B               	goto	u1410
  1962  012A                     u1411:
  1963  012A  2968               	goto	l446
  1964  012B                     u1410:
  1965  012B                     l2136:
  1966                           
  1967                           ;main.c: 313:             FLAGS.bits.NORMAL_WORK_MODE = 0;
  1968  012B  10FC               	bcf	_FLAGS,1
  1969                           
  1970                           ;main.c: 314:             if (FLAGS.bits.CLOSED) go_close_alt();
  1971  012C  1D7C               	btfss	_FLAGS,2
  1972  012D  292F               	goto	u1421
  1973  012E  2930               	goto	u1420
  1974  012F                     u1421:
  1975  012F  2933               	goto	l2140
  1976  0130                     u1420:
  1977  0130                     l2138:
  1978  0130  3184  24F7  3181   	fcall	_go_close_alt
  1979  0133                     l2140:
  1980                           
  1981                           ;main.c: 316:             beep(250, 100, 40, 3);
  1982  0133  30FA               	movlw	250
  1983  0134  0020               	movlb	0	; select bank0
  1984  0135  00A0               	movwf	beep@delay
  1985  0136  3000               	movlw	0
  1986  0137  00A1               	movwf	beep@delay+1
  1987  0138  3064               	movlw	100
  1988  0139  00A2               	movwf	beep@pause
  1989  013A  3000               	movlw	0
  1990  013B  00A3               	movwf	beep@pause+1
  1991  013C  3028               	movlw	40
  1992  013D  00AA               	movwf	??_switch_wm
  1993  013E  082A               	movf	??_switch_wm,w
  1994  013F  00A4               	movwf	beep@time
  1995  0140  3003               	movlw	3
  1996  0141  00AB               	movwf	??_switch_wm+1
  1997  0142  082B               	movf	??_switch_wm+1,w
  1998  0143  00A5               	movwf	beep@count
  1999  0144  3182  22CA  3181   	fcall	_beep
  2000  0147  2968               	goto	l446
  2001  0148                     l440:
  2002                           
  2003                           ;main.c: 319:         if (!FLAGS.bits.NORMAL_WORK_MODE) {
  2004  0148  18FC               	btfsc	_FLAGS,1
  2005  0149  294B               	goto	u1431
  2006  014A  294C               	goto	u1430
  2007  014B                     u1431:
  2008  014B  2968               	goto	l446
  2009  014C                     u1430:
  2010  014C                     l2142:
  2011                           
  2012                           ;main.c: 320:             FLAGS.bits.NORMAL_WORK_MODE = 1;
  2013  014C  14FC               	bsf	_FLAGS,1
  2014                           
  2015                           ;main.c: 321:             if (FLAGS.bits.CLOSED) go_close();
  2016  014D  1D7C               	btfss	_FLAGS,2
  2017  014E  2950               	goto	u1441
  2018  014F  2951               	goto	u1440
  2019  0150                     u1441:
  2020  0150  2954               	goto	l445
  2021  0151                     u1440:
  2022  0151                     l2144:
  2023  0151  3183  2376  3181   	fcall	_go_close
  2024  0154                     l445:
  2025                           
  2026                           ;main.c: 323:             beep(250, 100, 40, 2);
  2027  0154  30FA               	movlw	250
  2028  0155  0020               	movlb	0	; select bank0
  2029  0156  00A0               	movwf	beep@delay
  2030  0157  3000               	movlw	0
  2031  0158  00A1               	movwf	beep@delay+1
  2032  0159  3064               	movlw	100
  2033  015A  00A2               	movwf	beep@pause
  2034  015B  3000               	movlw	0
  2035  015C  00A3               	movwf	beep@pause+1
  2036  015D  3028               	movlw	40
  2037  015E  00AA               	movwf	??_switch_wm
  2038  015F  082A               	movf	??_switch_wm,w
  2039  0160  00A4               	movwf	beep@time
  2040  0161  3002               	movlw	2
  2041  0162  00AB               	movwf	??_switch_wm+1
  2042  0163  082B               	movf	??_switch_wm+1,w
  2043  0164  00A5               	movwf	beep@count
  2044  0165  3182  22CA  3181   	fcall	_beep
  2045  0168                     l446:
  2046  0168  0008               	return
  2047  0169                     __end_of_switch_wm:
  2048                           
  2049                           	psect	text2
  2050  0263                     __ptext2:	
  2051 ;; *************** function _start_setup *****************
  2052 ;; Defined at:
  2053 ;;		line 342 in file "main.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, status,2, status,0, pclath, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMMON   BANK0   BANK1
  2067 ;;      Params:         0       0       0
  2068 ;;      Locals:         0       0       0
  2069 ;;      Temps:          0       0       0
  2070 ;;      Totals:         0       0       0
  2071 ;;Total ram usage:        0 bytes
  2072 ;; Hardware stack levels used: 1
  2073 ;; Hardware stack levels required when called: 10
  2074 ;; This function calls:
  2075 ;;		_SYSTEM_Initialize
  2076 ;;		_TMR0_SetInterruptHandler
  2077 ;;		_TMR2_SetInterruptHandler
  2078 ;;		_TMR2_StartTimer
  2079 ;;		_get_fun_full
  2080 ;;		_get_jump_full
  2081 ;; This function is called by:
  2082 ;;		_main
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086  0263                     _start_setup:	
  2087                           ;psect for function _start_setup
  2088                           
  2089  0263                     l2162:	
  2090                           ;incstack = 0
  2091                           ; Regs used in _start_setup: [wreg+status,2+status,0+pclath+cstack]
  2092                           
  2093                           
  2094                           ;main.c: 344:     SYSTEM_Initialize();
  2095  0263  3184  2410  3182   	fcall	_SYSTEM_Initialize
  2096  0266                     l2164:
  2097                           
  2098                           ;main.c: 345:     (INTCONbits.GIE = 1);
  2099  0266  178B               	bsf	11,7	;volatile
  2100  0267                     l2166:
  2101                           
  2102                           ;main.c: 346:     (INTCONbits.PEIE = 1);
  2103  0267  170B               	bsf	11,6	;volatile
  2104                           
  2105                           ;main.c: 349:     TMR0_SetInterruptHandler(switch_zum);
  2106  0268  3079               	movlw	low _switch_zum
  2107  0269  0020               	movlb	0	; select bank0
  2108  026A  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2109  026B  3004               	movlw	high _switch_zum
  2110  026C  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2111  026D  3184  24EC  3182   	fcall	_TMR0_SetInterruptHandler
  2112                           
  2113                           ;main.c: 350:     TMR2_SetInterruptHandler(sec_tick_work);
  2114  0270  30AC               	movlw	low _sec_tick_work
  2115  0271  0020               	movlb	0	; select bank0
  2116  0272  00A0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2117  0273  3001               	movlw	high _sec_tick_work
  2118  0274  00A1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2119  0275  3184  24E6  3182   	fcall	_TMR2_SetInterruptHandler
  2120  0278                     l2168:
  2121                           
  2122                           ;main.c: 351:     TMR2_StartTimer();
  2123  0278  3185  2515  3182   	fcall	_TMR2_StartTimer
  2124  027B                     l2170:
  2125  027B  0023               	movlb	3	; select bank3
  2126  027C  118E               	bcf	14,3	;volatile
  2127  027D                     l2172:
  2128  027D  108C               	bcf	12,1	;volatile
  2129  027E                     l2174:
  2130  027E  110E               	bcf	14,2	;volatile
  2131  027F                     l2176:
  2132  027F  0024               	movlb	4	; select bank4
  2133  0280  108C               	bcf	12,1	;volatile
  2134  0281                     l2178:
  2135  0281  0021               	movlb	1	; select bank1
  2136  0282  148C               	bsf	12,1	;volatile
  2137  0283                     l2180:
  2138  0283  0024               	movlb	4	; select bank4
  2139  0284  110E               	bcf	14,2	;volatile
  2140  0285                     l2182:
  2141  0285  0021               	movlb	1	; select bank1
  2142  0286  150E               	bsf	14,2	;volatile
  2143  0287                     l2184:
  2144                           
  2145                           ;main.c: 363:     INTCONbits.TMR0IE = 0;
  2146  0287  128B               	bcf	11,5	;volatile
  2147  0288                     l2186:
  2148                           
  2149                           ;main.c: 364:     FLAGS.value = 0;
  2150  0288  01FC               	clrf	_FLAGS
  2151  0289                     l2188:
  2152  0289  0022               	movlb	2	; select bank2
  2153  028A  128E               	bcf	14,5	;volatile
  2154  028B                     l2190:
  2155  028B  120E               	bcf	14,4	;volatile
  2156  028C                     l2192:
  2157  028C  100E               	bcf	14,0	;volatile
  2158  028D                     l2194:
  2159  028D  0021               	movlb	1	; select bank1
  2160  028E  100E               	bcf	14,0	;volatile
  2161  028F                     l2196:
  2162                           
  2163                           ;main.c: 371:     get_fun_full();
  2164  028F  3180  20DC  3182   	fcall	_get_fun_full
  2165  0292                     l2198:
  2166                           
  2167                           ;main.c: 372:     get_jump_full();
  2168  0292  3181  2169  3182   	fcall	_get_jump_full
  2169  0295                     l2200:
  2170                           
  2171                           ;main.c: 373:     time_pow_s = 0;
  2172  0295  0020               	movlb	0	; select bank0
  2173  0296  01B6               	clrf	_time_pow_s
  2174  0297                     l477:
  2175  0297  0008               	return
  2176  0298                     __end_of_start_setup:
  2177                           
  2178                           	psect	text3
  2179  0169                     __ptext3:	
  2180 ;; *************** function _get_jump_full *****************
  2181 ;; Defined at:
  2182 ;;		line 204 in file "main.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;		None
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  res             2    5[BANK0 ] unsigned int 
  2187 ;;  flag            1    7[BANK0 ] unsigned char 
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2, status,0, pclath, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMMON   BANK0   BANK1
  2197 ;;      Params:         0       0       0
  2198 ;;      Locals:         0       3       0
  2199 ;;      Temps:          0       1       0
  2200 ;;      Totals:         0       4       0
  2201 ;;Total ram usage:        4 bytes
  2202 ;; Hardware stack levels used: 1
  2203 ;; Hardware stack levels required when called: 8
  2204 ;; This function calls:
  2205 ;;		_ADC_GetConversion
  2206 ;; This function is called by:
  2207 ;;		_start_setup
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211  0169                     _get_jump_full:	
  2212                           ;psect for function _get_jump_full
  2213                           
  2214  0169                     l386:	
  2215                           ;incstack = 0
  2216                           ; Regs used in _get_jump_full: [wreg+status,2+status,0+pclath+cstack]
  2217                           ;main.c: 206:     static signed char jump_counter;;main.c: 207:     do { ANSELAbits.ANSA
      +                          1 = 1; } while(0);
  2218                           
  2219  0169  0023               	movlb	3	; select bank3
  2220  016A  148C               	bsf	12,1	;volatile
  2221  016B                     l1964:
  2222                           
  2223                           ;main.c: 208:     char flag = 0;
  2224  016B  0020               	movlb	0	; select bank0
  2225  016C  01A7               	clrf	get_jump_full@flag
  2226  016D                     l1966:
  2227                           
  2228                           ;main.c: 210:         unsigned res = ADC_GetConversion(PIN_JUMP_STATE);
  2229  016D  3001               	movlw	1
  2230  016E  3183  2398  3181   	fcall	_ADC_GetConversion
  2231  0171  0020               	movlb	0	; select bank0
  2232  0172  0821               	movf	?_ADC_GetConversion+1,w
  2233  0173  00A6               	movwf	get_jump_full@res+1
  2234  0174  0820               	movf	?_ADC_GetConversion,w
  2235  0175  00A5               	movwf	get_jump_full@res
  2236  0176                     l1968:
  2237                           
  2238                           ;main.c: 211:         if (res < 2000) jump_counter--;
  2239  0176  3007               	movlw	7
  2240  0177  0226               	subwf	get_jump_full@res+1,w
  2241  0178  30D0               	movlw	208
  2242  0179  1903               	skipnz
  2243  017A  0225               	subwf	get_jump_full@res,w
  2244  017B  1803               	skipnc
  2245  017C  297E               	goto	u1081
  2246  017D  297F               	goto	u1080
  2247  017E                     u1081:
  2248  017E  2984               	goto	l1972
  2249  017F                     u1080:
  2250  017F                     l1970:
  2251  017F  30FF               	movlw	255
  2252  0180  00A4               	movwf	??_get_jump_full
  2253  0181  0824               	movf	??_get_jump_full,w
  2254  0182  07B2               	addwf	get_jump_full@jump_counter,f
  2255  0183  2988               	goto	l1974
  2256  0184                     l1972:
  2257  0184  3001               	movlw	1
  2258  0185  00A4               	movwf	??_get_jump_full
  2259  0186  0824               	movf	??_get_jump_full,w
  2260  0187  07B2               	addwf	get_jump_full@jump_counter,f
  2261  0188                     l1974:
  2262                           
  2263                           ;main.c: 214:         if (jump_counter > 10) {
  2264  0188  0832               	movf	get_jump_full@jump_counter,w
  2265  0189  3A80               	xorlw	128
  2266  018A  3E75               	addlw	-139
  2267  018B  1C03               	skipc
  2268  018C  298E               	goto	u1091
  2269  018D  298F               	goto	u1090
  2270  018E                     u1091:
  2271  018E  2997               	goto	l1982
  2272  018F                     u1090:
  2273  018F                     l1976:
  2274                           
  2275                           ;main.c: 215:             jump_counter = 10;
  2276  018F  300A               	movlw	10
  2277  0190  00A4               	movwf	??_get_jump_full
  2278  0191  0824               	movf	??_get_jump_full,w
  2279  0192  00B2               	movwf	get_jump_full@jump_counter
  2280  0193                     l1978:
  2281                           
  2282                           ;main.c: 216:             FLAGS.bits._JUMP_CONNECTED = 0;
  2283  0193  127C               	bcf	_FLAGS,4
  2284  0194                     l1980:
  2285                           
  2286                           ;main.c: 217:             flag = 1;
  2287  0194  01A7               	clrf	get_jump_full@flag
  2288  0195  0AA7               	incf	get_jump_full@flag,f
  2289                           
  2290                           ;main.c: 218:         } else if (jump_counter<-10) {
  2291  0196  29A4               	goto	l1990
  2292  0197                     l1982:
  2293  0197  0832               	movf	get_jump_full@jump_counter,w
  2294  0198  3A80               	xorlw	128
  2295  0199  3E8A               	addlw	138
  2296  019A  1803               	skipnc
  2297  019B  299D               	goto	u1101
  2298  019C  299E               	goto	u1100
  2299  019D                     u1101:
  2300  019D  29A4               	goto	l1990
  2301  019E                     u1100:
  2302  019E                     l1984:
  2303                           
  2304                           ;main.c: 219:             jump_counter = -10;
  2305  019E  30F6               	movlw	246
  2306  019F  00A4               	movwf	??_get_jump_full
  2307  01A0  0824               	movf	??_get_jump_full,w
  2308  01A1  00B2               	movwf	get_jump_full@jump_counter
  2309  01A2                     l1986:
  2310                           
  2311                           ;main.c: 220:             FLAGS.bits._JUMP_CONNECTED = 1;
  2312  01A2  167C               	bsf	_FLAGS,4
  2313  01A3  2994               	goto	l1980
  2314  01A4                     l1990:
  2315                           
  2316                           ;main.c: 223:     } while (flag == 0);
  2317  01A4  0827               	movf	get_jump_full@flag,w
  2318  01A5  1903               	btfsc	3,2
  2319  01A6  29A8               	goto	u1111
  2320  01A7  29A9               	goto	u1110
  2321  01A8                     u1111:
  2322  01A8  296D               	goto	l1966
  2323  01A9                     u1110:
  2324  01A9                     l395:	
  2325                           ;main.c: 224:     do { ANSELAbits.ANSA1 = 0; } while(0);
  2326                           
  2327  01A9  0023               	movlb	3	; select bank3
  2328  01AA  108C               	bcf	12,1	;volatile
  2329  01AB                     l397:
  2330  01AB  0008               	return
  2331  01AC                     __end_of_get_jump_full:
  2332                           
  2333                           	psect	text4
  2334  00DC                     __ptext4:	
  2335 ;; *************** function _get_fun_full *****************
  2336 ;; Defined at:
  2337 ;;		line 157 in file "main.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;		None
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;  res             2    5[BANK0 ] unsigned int 
  2342 ;;  flag            1    7[BANK0 ] unsigned char 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  1    wreg      void 
  2345 ;; Registers used:
  2346 ;;		wreg, status,2, status,0, pclath, cstack
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMMON   BANK0   BANK1
  2352 ;;      Params:         0       0       0
  2353 ;;      Locals:         0       3       0
  2354 ;;      Temps:          0       1       0
  2355 ;;      Totals:         0       4       0
  2356 ;;Total ram usage:        4 bytes
  2357 ;; Hardware stack levels used: 1
  2358 ;; Hardware stack levels required when called: 8
  2359 ;; This function calls:
  2360 ;;		_ADC_GetConversion
  2361 ;; This function is called by:
  2362 ;;		_start_setup
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366  00DC                     _get_fun_full:	
  2367                           ;psect for function _get_fun_full
  2368                           
  2369  00DC                     l352:	
  2370                           ;incstack = 0
  2371                           ; Regs used in _get_fun_full: [wreg+status,2+status,0+pclath+cstack]
  2372                           ;main.c: 159:     static signed char fun_counter;;main.c: 160:     do { LATCbits.LATC1 =
      +                           1; } while(0);
  2373                           
  2374  00DC  0022               	movlb	2	; select bank2
  2375  00DD  148E               	bsf	14,1	;volatile
  2376  00DE                     l354:	
  2377                           ;main.c: 161:     do { ANSELCbits.ANSC2 = 1; } while(0);
  2378                           
  2379  00DE  0023               	movlb	3	; select bank3
  2380  00DF  150E               	bsf	14,2	;volatile
  2381  00E0                     l1936:
  2382                           
  2383                           ;main.c: 162:     char flag = 0;
  2384  00E0  0020               	movlb	0	; select bank0
  2385  00E1  01A7               	clrf	get_fun_full@flag
  2386  00E2                     l1938:
  2387                           
  2388                           ;main.c: 164:         unsigned res = ADC_GetConversion(PIN_FUN_STATE);
  2389  00E2  3006               	movlw	6
  2390  00E3  3183  2398  3180   	fcall	_ADC_GetConversion
  2391  00E6  0020               	movlb	0	; select bank0
  2392  00E7  0821               	movf	?_ADC_GetConversion+1,w
  2393  00E8  00A6               	movwf	get_fun_full@res+1
  2394  00E9  0820               	movf	?_ADC_GetConversion,w
  2395  00EA  00A5               	movwf	get_fun_full@res
  2396  00EB                     l1940:
  2397                           
  2398                           ;main.c: 165:         if (res < 2000) fun_counter--;
  2399  00EB  3007               	movlw	7
  2400  00EC  0226               	subwf	get_fun_full@res+1,w
  2401  00ED  30D0               	movlw	208
  2402  00EE  1903               	skipnz
  2403  00EF  0225               	subwf	get_fun_full@res,w
  2404  00F0  1803               	skipnc
  2405  00F1  28F3               	goto	u1041
  2406  00F2  28F4               	goto	u1040
  2407  00F3                     u1041:
  2408  00F3  28F9               	goto	l1944
  2409  00F4                     u1040:
  2410  00F4                     l1942:
  2411  00F4  30FF               	movlw	255
  2412  00F5  00A4               	movwf	??_get_fun_full
  2413  00F6  0824               	movf	??_get_fun_full,w
  2414  00F7  07B4               	addwf	get_fun_full@fun_counter,f
  2415  00F8  28FD               	goto	l1946
  2416  00F9                     l1944:
  2417  00F9  3001               	movlw	1
  2418  00FA  00A4               	movwf	??_get_fun_full
  2419  00FB  0824               	movf	??_get_fun_full,w
  2420  00FC  07B4               	addwf	get_fun_full@fun_counter,f
  2421  00FD                     l1946:
  2422                           
  2423                           ;main.c: 167:         if (fun_counter > 10) {
  2424  00FD  0834               	movf	get_fun_full@fun_counter,w
  2425  00FE  3A80               	xorlw	128
  2426  00FF  3E75               	addlw	-139
  2427  0100  1C03               	skipc
  2428  0101  2903               	goto	u1051
  2429  0102  2904               	goto	u1050
  2430  0103                     u1051:
  2431  0103  290C               	goto	l1954
  2432  0104                     u1050:
  2433  0104                     l1948:
  2434                           
  2435                           ;main.c: 168:             fun_counter = 10;
  2436  0104  300A               	movlw	10
  2437  0105  00A4               	movwf	??_get_fun_full
  2438  0106  0824               	movf	??_get_fun_full,w
  2439  0107  00B4               	movwf	get_fun_full@fun_counter
  2440  0108                     l1950:
  2441                           
  2442                           ;main.c: 169:             FLAGS.bits._FUN_CONNECTED = 0;
  2443  0108  11FC               	bcf	_FLAGS,3
  2444  0109                     l1952:
  2445                           
  2446                           ;main.c: 170:             flag = 1;
  2447  0109  01A7               	clrf	get_fun_full@flag
  2448  010A  0AA7               	incf	get_fun_full@flag,f
  2449                           
  2450                           ;main.c: 171:         } else if (fun_counter<-10) {
  2451  010B  2919               	goto	l1962
  2452  010C                     l1954:
  2453  010C  0834               	movf	get_fun_full@fun_counter,w
  2454  010D  3A80               	xorlw	128
  2455  010E  3E8A               	addlw	138
  2456  010F  1803               	skipnc
  2457  0110  2912               	goto	u1061
  2458  0111  2913               	goto	u1060
  2459  0112                     u1061:
  2460  0112  2919               	goto	l1962
  2461  0113                     u1060:
  2462  0113                     l1956:
  2463                           
  2464                           ;main.c: 172:             fun_counter = -10;
  2465  0113  30F6               	movlw	246
  2466  0114  00A4               	movwf	??_get_fun_full
  2467  0115  0824               	movf	??_get_fun_full,w
  2468  0116  00B4               	movwf	get_fun_full@fun_counter
  2469  0117                     l1958:
  2470                           
  2471                           ;main.c: 173:             FLAGS.bits._FUN_CONNECTED = 1;
  2472  0117  15FC               	bsf	_FLAGS,3
  2473  0118  2909               	goto	l1952
  2474  0119                     l1962:
  2475                           
  2476                           ;main.c: 176:     } while (flag == 0);
  2477  0119  0827               	movf	get_fun_full@flag,w
  2478  011A  1903               	btfsc	3,2
  2479  011B  291D               	goto	u1071
  2480  011C  291E               	goto	u1070
  2481  011D                     u1071:
  2482  011D  28E2               	goto	l1938
  2483  011E                     u1070:
  2484  011E                     l363:	
  2485                           ;main.c: 178:     do { ANSELCbits.ANSC2 = 0; } while(0);
  2486                           
  2487  011E  0023               	movlb	3	; select bank3
  2488  011F  110E               	bcf	14,2	;volatile
  2489  0120                     l365:	
  2490                           ;main.c: 179:     do { LATCbits.LATC1 = 0; } while(0);
  2491                           
  2492  0120  0022               	movlb	2	; select bank2
  2493  0121  108E               	bcf	14,1	;volatile
  2494  0122                     l367:
  2495  0122  0008               	return
  2496  0123                     __end_of_get_fun_full:
  2497                           
  2498                           	psect	text5
  2499  0515                     __ptext5:	
  2500 ;; *************** function _TMR2_StartTimer *****************
  2501 ;; Defined at:
  2502 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;		None
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;		None
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		None
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMMON   BANK0   BANK1
  2516 ;;      Params:         0       0       0
  2517 ;;      Locals:         0       0       0
  2518 ;;      Temps:          0       0       0
  2519 ;;      Totals:         0       0       0
  2520 ;;Total ram usage:        0 bytes
  2521 ;; Hardware stack levels used: 1
  2522 ;; Hardware stack levels required when called: 7
  2523 ;; This function calls:
  2524 ;;		Nothing
  2525 ;; This function is called by:
  2526 ;;		_start_setup
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530  0515                     _TMR2_StartTimer:	
  2531                           ;psect for function _TMR2_StartTimer
  2532                           
  2533  0515                     l1890:	
  2534                           ;incstack = 0
  2535                           ; Regs used in _TMR2_StartTimer: []
  2536                           
  2537                           
  2538                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  2539  0515  0020               	movlb	0	; select bank0
  2540  0516  151C               	bsf	28,2	;volatile
  2541  0517                     l142:
  2542  0517  0008               	return
  2543  0518                     __end_of_TMR2_StartTimer:
  2544                           
  2545                           	psect	text6
  2546  0410                     __ptext6:	
  2547 ;; *************** function _SYSTEM_Initialize *****************
  2548 ;; Defined at:
  2549 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;		None
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;		None
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0, pclath, cstack
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMMON   BANK0   BANK1
  2563 ;;      Params:         0       0       0
  2564 ;;      Locals:         0       0       0
  2565 ;;      Temps:          0       0       0
  2566 ;;      Totals:         0       0       0
  2567 ;;Total ram usage:        0 bytes
  2568 ;; Hardware stack levels used: 1
  2569 ;; Hardware stack levels required when called: 9
  2570 ;; This function calls:
  2571 ;;		_ADC_Initialize
  2572 ;;		_FVR_Initialize
  2573 ;;		_OSCILLATOR_Initialize
  2574 ;;		_PIN_MANAGER_Initialize
  2575 ;;		_TMR0_Initialize
  2576 ;;		_TMR2_Initialize
  2577 ;;		_WDT_Initialize
  2578 ;; This function is called by:
  2579 ;;		_start_setup
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583  0410                     _SYSTEM_Initialize:	
  2584                           ;psect for function _SYSTEM_Initialize
  2585                           
  2586  0410                     l1888:	
  2587                           ;incstack = 0
  2588                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2589                           
  2590                           
  2591                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2592  0410  3184  243C  3184   	fcall	_PIN_MANAGER_Initialize
  2593                           
  2594                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2595  0413  3184  24DF  3184   	fcall	_OSCILLATOR_Initialize
  2596                           
  2597                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2598  0416  3185  250D  3184   	fcall	_WDT_Initialize
  2599                           
  2600                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  2601  0419  3185  2511  3184   	fcall	_FVR_Initialize
  2602                           
  2603                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2604  041C  3184  24D7  3184   	fcall	_ADC_Initialize
  2605                           
  2606                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  2607  041F  3184  2466  3184   	fcall	_TMR2_Initialize
  2608                           
  2609                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  2610  0422  3184  2426  3184   	fcall	_TMR0_Initialize
  2611  0425                     l25:
  2612  0425  0008               	return
  2613  0426                     __end_of_SYSTEM_Initialize:
  2614                           
  2615                           	psect	text7
  2616  050D                     __ptext7:	
  2617 ;; *************** function _WDT_Initialize *****************
  2618 ;; Defined at:
  2619 ;;		line 72 in file "mcc_generated_files/mcc.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;		None
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      void 
  2626 ;; Registers used:
  2627 ;;		wreg
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1
  2633 ;;      Params:         0       0       0
  2634 ;;      Locals:         0       0       0
  2635 ;;      Temps:          0       0       0
  2636 ;;      Totals:         0       0       0
  2637 ;;Total ram usage:        0 bytes
  2638 ;; Hardware stack levels used: 1
  2639 ;; Hardware stack levels required when called: 7
  2640 ;; This function calls:
  2641 ;;		Nothing
  2642 ;; This function is called by:
  2643 ;;		_SYSTEM_Initialize
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647  050D                     _WDT_Initialize:	
  2648                           ;psect for function _WDT_Initialize
  2649                           
  2650  050D                     l1820:	
  2651                           ;incstack = 0
  2652                           ; Regs used in _WDT_Initialize: [wreg]
  2653                           
  2654                           
  2655                           ;mcc_generated_files/mcc.c: 75:     WDTCON = 0x16;
  2656  050D  3016               	movlw	22
  2657  050E  0021               	movlb	1	; select bank1
  2658  050F  0097               	movwf	23	;volatile
  2659  0510                     l31:
  2660  0510  0008               	return
  2661  0511                     __end_of_WDT_Initialize:
  2662                           
  2663                           	psect	text8
  2664  0466                     __ptext8:	
  2665 ;; *************** function _TMR2_Initialize *****************
  2666 ;; Defined at:
  2667 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;		None
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      void 
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, status,0, pclath, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1
  2681 ;;      Params:         0       0       0
  2682 ;;      Locals:         0       0       0
  2683 ;;      Temps:          0       0       0
  2684 ;;      Totals:         0       0       0
  2685 ;;Total ram usage:        0 bytes
  2686 ;; Hardware stack levels used: 1
  2687 ;; Hardware stack levels required when called: 8
  2688 ;; This function calls:
  2689 ;;		_TMR2_SetInterruptHandler
  2690 ;; This function is called by:
  2691 ;;		_SYSTEM_Initialize
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695  0466                     _TMR2_Initialize:	
  2696                           ;psect for function _TMR2_Initialize
  2697                           
  2698  0466                     l1830:	
  2699                           ;incstack = 0
  2700                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2701                           
  2702                           
  2703                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xF9;
  2704  0466  30F9               	movlw	249
  2705  0467  0020               	movlb	0	; select bank0
  2706  0468  009B               	movwf	27	;volatile
  2707  0469                     l1832:
  2708                           
  2709                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  2710  0469  019A               	clrf	26	;volatile
  2711  046A                     l1834:
  2712                           
  2713                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  2714  046A  1091               	bcf	17,1	;volatile
  2715  046B                     l1836:
  2716                           
  2717                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  2718  046B  0021               	movlb	1	; select bank1
  2719  046C  1491               	bsf	17,1	;volatile
  2720  046D                     l1838:
  2721                           
  2722                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  2723  046D  3018               	movlw	low _TMR2_DefaultInterruptHandler
  2724  046E  0020               	movlb	0	; select bank0
  2725  046F  00A0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2726  0470  3005               	movlw	high _TMR2_DefaultInterruptHandler
  2727  0471  00A1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2728  0472  3184  24E6  3184   	fcall	_TMR2_SetInterruptHandler
  2729  0475                     l1840:
  2730                           
  2731                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x4E;
  2732  0475  304E               	movlw	78
  2733  0476  0020               	movlb	0	; select bank0
  2734  0477  009C               	movwf	28	;volatile
  2735  0478                     l139:
  2736  0478  0008               	return
  2737  0479                     __end_of_TMR2_Initialize:
  2738                           
  2739                           	psect	text9
  2740  04E6                     __ptext9:	
  2741 ;; *************** function _TMR2_SetInterruptHandler *****************
  2742 ;; Defined at:
  2743 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2746 ;;		 -> sec_tick_work(1), TMR2_DefaultInterruptHandler(1), 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;		None
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMMON   BANK0   BANK1
  2758 ;;      Params:         0       2       0
  2759 ;;      Locals:         0       0       0
  2760 ;;      Temps:          0       0       0
  2761 ;;      Totals:         0       2       0
  2762 ;;Total ram usage:        2 bytes
  2763 ;; Hardware stack levels used: 1
  2764 ;; Hardware stack levels required when called: 7
  2765 ;; This function calls:
  2766 ;;		Nothing
  2767 ;; This function is called by:
  2768 ;;		_TMR2_Initialize
  2769 ;;		_start_setup
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773  04E6                     _TMR2_SetInterruptHandler:	
  2774                           ;psect for function _TMR2_SetInterruptHandler
  2775                           
  2776  04E6                     l1758:	
  2777                           ;incstack = 0
  2778                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2779                           
  2780                           
  2781                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  2782  04E6  0020               	movlb	0	; select bank0
  2783  04E7  0821               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2784  04E8  00BA               	movwf	_TMR2_InterruptHandler+1
  2785  04E9  0820               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2786  04EA  00B9               	movwf	_TMR2_InterruptHandler
  2787  04EB                     l167:
  2788  04EB  0008               	return
  2789  04EC                     __end_of_TMR2_SetInterruptHandler:
  2790                           
  2791                           	psect	text10
  2792  0426                     __ptext10:	
  2793 ;; *************** function _TMR0_Initialize *****************
  2794 ;; Defined at:
  2795 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;		None
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;		None
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		wreg, status,2, status,0, pclath, cstack
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMMON   BANK0   BANK1
  2809 ;;      Params:         0       0       0
  2810 ;;      Locals:         0       0       0
  2811 ;;      Temps:          0       1       0
  2812 ;;      Totals:         0       1       0
  2813 ;;Total ram usage:        1 bytes
  2814 ;; Hardware stack levels used: 1
  2815 ;; Hardware stack levels required when called: 8
  2816 ;; This function calls:
  2817 ;;		_TMR0_SetInterruptHandler
  2818 ;; This function is called by:
  2819 ;;		_SYSTEM_Initialize
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823  0426                     _TMR0_Initialize:	
  2824                           ;psect for function _TMR0_Initialize
  2825                           
  2826  0426                     l1842:	
  2827                           ;incstack = 0
  2828                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2829                           
  2830                           
  2831                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD2 
      +                          & 0x3F));
  2832  0426  0021               	movlb	1	; select bank1
  2833  0427  0815               	movf	21,w	;volatile
  2834  0428  39C0               	andlw	192
  2835  0429  3812               	iorlw	18
  2836  042A  0095               	movwf	21	;volatile
  2837  042B                     l1844:
  2838                           
  2839                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x9C;
  2840  042B  309C               	movlw	156
  2841  042C  0020               	movlb	0	; select bank0
  2842  042D  0095               	movwf	21	;volatile
  2843  042E                     l1846:
  2844                           
  2845                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 156;
  2846  042E  309C               	movlw	156
  2847  042F  00A2               	movwf	??_TMR0_Initialize
  2848  0430  0822               	movf	??_TMR0_Initialize,w
  2849  0431  00BB               	movwf	_timer0ReloadVal	;volatile
  2850  0432                     l1848:
  2851                           
  2852                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  2853  0432  110B               	bcf	11,2	;volatile
  2854  0433                     l1850:
  2855                           
  2856                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  2857  0433  168B               	bsf	11,5	;volatile
  2858  0434                     l1852:
  2859                           
  2860                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2861  0434  3019               	movlw	low _TMR0_DefaultInterruptHandler
  2862  0435  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2863  0436  3005               	movlw	high _TMR0_DefaultInterruptHandler
  2864  0437  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2865  0438  3184  24EC  3184   	fcall	_TMR0_SetInterruptHandler
  2866  043B                     l187:
  2867  043B  0008               	return
  2868  043C                     __end_of_TMR0_Initialize:
  2869                           
  2870                           	psect	text11
  2871  04EC                     __ptext11:	
  2872 ;; *************** function _TMR0_SetInterruptHandler *****************
  2873 ;; Defined at:
  2874 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2877 ;;		 -> switch_zum(1), TMR0_DefaultInterruptHandler(1), 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMMON   BANK0   BANK1
  2889 ;;      Params:         0       2       0
  2890 ;;      Locals:         0       0       0
  2891 ;;      Temps:          0       0       0
  2892 ;;      Totals:         0       2       0
  2893 ;;Total ram usage:        2 bytes
  2894 ;; Hardware stack levels used: 1
  2895 ;; Hardware stack levels required when called: 7
  2896 ;; This function calls:
  2897 ;;		Nothing
  2898 ;; This function is called by:
  2899 ;;		_TMR0_Initialize
  2900 ;;		_start_setup
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904  04EC                     _TMR0_SetInterruptHandler:	
  2905                           ;psect for function _TMR0_SetInterruptHandler
  2906                           
  2907  04EC                     l1760:	
  2908                           ;incstack = 0
  2909                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2910                           
  2911                           
  2912                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  2913  04EC  0020               	movlb	0	; select bank0
  2914  04ED  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2915  04EE  00B8               	movwf	_TMR0_InterruptHandler+1
  2916  04EF  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2917  04F0  00B7               	movwf	_TMR0_InterruptHandler
  2918  04F1                     l203:
  2919  04F1  0008               	return
  2920  04F2                     __end_of_TMR0_SetInterruptHandler:
  2921                           
  2922                           	psect	text12
  2923  043C                     __ptext12:	
  2924 ;; *************** function _PIN_MANAGER_Initialize *****************
  2925 ;; Defined at:
  2926 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;		None
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;		None
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      void 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1
  2940 ;;      Params:         0       0       0
  2941 ;;      Locals:         0       0       0
  2942 ;;      Temps:          0       0       0
  2943 ;;      Totals:         0       0       0
  2944 ;;Total ram usage:        0 bytes
  2945 ;; Hardware stack levels used: 1
  2946 ;; Hardware stack levels required when called: 7
  2947 ;; This function calls:
  2948 ;;		Nothing
  2949 ;; This function is called by:
  2950 ;;		_SYSTEM_Initialize
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954  043C                     _PIN_MANAGER_Initialize:	
  2955                           ;psect for function _PIN_MANAGER_Initialize
  2956                           
  2957  043C                     l1802:	
  2958                           ;incstack = 0
  2959                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2960                           
  2961                           
  2962                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2963  043C  0022               	movlb	2	; select bank2
  2964  043D  018C               	clrf	12	;volatile
  2965                           
  2966                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  2967  043E  018E               	clrf	14	;volatile
  2968  043F                     l1804:
  2969                           
  2970                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x0F;
  2971  043F  300F               	movlw	15
  2972  0440  0021               	movlb	1	; select bank1
  2973  0441  008C               	movwf	12	;volatile
  2974  0442                     l1806:
  2975                           
  2976                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x0C;
  2977  0442  300C               	movlw	12
  2978  0443  008E               	movwf	14	;volatile
  2979  0444                     l1808:
  2980                           
  2981                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x0C;
  2982  0444  300C               	movlw	12
  2983  0445  0023               	movlb	3	; select bank3
  2984  0446  008E               	movwf	14	;volatile
  2985  0447                     l1810:
  2986                           
  2987                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x07;
  2988  0447  3007               	movlw	7
  2989  0448  008C               	movwf	12	;volatile
  2990                           
  2991                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  2992  0449  0024               	movlb	4	; select bank4
  2993  044A  018C               	clrf	12	;volatile
  2994                           
  2995                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  2996  044B  018E               	clrf	14	;volatile
  2997  044C                     l1812:
  2998                           
  2999                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  3000  044C  0021               	movlb	1	; select bank1
  3001  044D  1795               	bsf	21,7	;volatile
  3002                           
  3003                           ;mcc_generated_files/pin_manager.c: 86:     APFCON = 0x00;
  3004  044E  0022               	movlb	2	; select bank2
  3005  044F  019D               	clrf	29	;volatile
  3006  0450                     l92:
  3007  0450  0008               	return
  3008  0451                     __end_of_PIN_MANAGER_Initialize:
  3009                           
  3010                           	psect	text13
  3011  04DF                     __ptext13:	
  3012 ;; *************** function _OSCILLATOR_Initialize *****************
  3013 ;; Defined at:
  3014 ;;		line 62 in file "mcc_generated_files/mcc.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;		None
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;		None
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      void 
  3021 ;; Registers used:
  3022 ;;		wreg, status,2
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMMON   BANK0   BANK1
  3028 ;;      Params:         0       0       0
  3029 ;;      Locals:         0       0       0
  3030 ;;      Temps:          0       0       0
  3031 ;;      Totals:         0       0       0
  3032 ;;Total ram usage:        0 bytes
  3033 ;; Hardware stack levels used: 1
  3034 ;; Hardware stack levels required when called: 7
  3035 ;; This function calls:
  3036 ;;		Nothing
  3037 ;; This function is called by:
  3038 ;;		_SYSTEM_Initialize
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042  04DF                     _OSCILLATOR_Initialize:	
  3043                           ;psect for function _OSCILLATOR_Initialize
  3044                           
  3045  04DF                     l1814:	
  3046                           ;incstack = 0
  3047                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3048                           
  3049                           
  3050                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x78;
  3051  04DF  3078               	movlw	120
  3052  04E0  0021               	movlb	1	; select bank1
  3053  04E1  0099               	movwf	25	;volatile
  3054  04E2                     l1816:
  3055                           
  3056                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  3057  04E2  0198               	clrf	24	;volatile
  3058  04E3                     l1818:
  3059                           
  3060                           ;mcc_generated_files/mcc.c: 69:     BORCON = 0x00;
  3061  04E3  0022               	movlb	2	; select bank2
  3062  04E4  0196               	clrf	22	;volatile
  3063  04E5                     l28:
  3064  04E5  0008               	return
  3065  04E6                     __end_of_OSCILLATOR_Initialize:
  3066                           
  3067                           	psect	text14
  3068  0511                     __ptext14:	
  3069 ;; *************** function _FVR_Initialize *****************
  3070 ;; Defined at:
  3071 ;;		line 58 in file "mcc_generated_files/fvr.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMMON   BANK0   BANK1
  3085 ;;      Params:         0       0       0
  3086 ;;      Locals:         0       0       0
  3087 ;;      Temps:          0       0       0
  3088 ;;      Totals:         0       0       0
  3089 ;;Total ram usage:        0 bytes
  3090 ;; Hardware stack levels used: 1
  3091 ;; Hardware stack levels required when called: 7
  3092 ;; This function calls:
  3093 ;;		Nothing
  3094 ;; This function is called by:
  3095 ;;		_SYSTEM_Initialize
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099  0511                     _FVR_Initialize:	
  3100                           ;psect for function _FVR_Initialize
  3101                           
  3102  0511                     l1822:	
  3103                           ;incstack = 0
  3104                           ; Regs used in _FVR_Initialize: [wreg]
  3105                           
  3106                           
  3107                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  3108  0511  3082               	movlw	130
  3109  0512  0022               	movlb	2	; select bank2
  3110  0513  0097               	movwf	23	;volatile
  3111  0514                     l213:
  3112  0514  0008               	return
  3113  0515                     __end_of_FVR_Initialize:
  3114                           
  3115                           	psect	text15
  3116  04D7                     __ptext15:	
  3117 ;; *************** function _ADC_Initialize *****************
  3118 ;; Defined at:
  3119 ;;		line 67 in file "mcc_generated_files/adc.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;		None
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;		None
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  1    wreg      void 
  3126 ;; Registers used:
  3127 ;;		wreg, status,2
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMMON   BANK0   BANK1
  3133 ;;      Params:         0       0       0
  3134 ;;      Locals:         0       0       0
  3135 ;;      Temps:          0       0       0
  3136 ;;      Totals:         0       0       0
  3137 ;;Total ram usage:        0 bytes
  3138 ;; Hardware stack levels used: 1
  3139 ;; Hardware stack levels required when called: 7
  3140 ;; This function calls:
  3141 ;;		Nothing
  3142 ;; This function is called by:
  3143 ;;		_SYSTEM_Initialize
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147  04D7                     _ADC_Initialize:	
  3148                           ;psect for function _ADC_Initialize
  3149                           
  3150  04D7                     l1824:	
  3151                           ;incstack = 0
  3152                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3153                           
  3154                           
  3155                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x40;
  3156  04D7  3040               	movlw	64
  3157  04D8  0021               	movlb	1	; select bank1
  3158  04D9  009E               	movwf	30	;volatile
  3159  04DA                     l1826:
  3160                           
  3161                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  3162  04DA  019B               	clrf	27	;volatile
  3163  04DB                     l1828:
  3164                           
  3165                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  3166  04DB  019C               	clrf	28	;volatile
  3167                           
  3168                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x7D;
  3169  04DC  307D               	movlw	125
  3170  04DD  009D               	movwf	29	;volatile
  3171  04DE                     l48:
  3172  04DE  0008               	return
  3173  04DF                     __end_of_ADC_Initialize:
  3174                           
  3175                           	psect	text16
  3176  0094                     __ptext16:	
  3177 ;; *************** function _povorot *****************
  3178 ;; Defined at:
  3179 ;;		line 269 in file "main.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;		None
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;		None
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		wreg, status,2, status,0, pclath, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMMON   BANK0   BANK1
  3193 ;;      Params:         0       0       0
  3194 ;;      Locals:         0       0       0
  3195 ;;      Temps:          0       0       0
  3196 ;;      Totals:         0       0       0
  3197 ;;Total ram usage:        0 bytes
  3198 ;; Hardware stack levels used: 1
  3199 ;; Hardware stack levels required when called: 8
  3200 ;; This function calls:
  3201 ;;		_go_close
  3202 ;;		_go_open
  3203 ;; This function is called by:
  3204 ;;		_main
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208  0094                     _povorot:	
  3209                           ;psect for function _povorot
  3210                           
  3211  0094                     l2080:	
  3212                           ;incstack = 0
  3213                           ; Regs used in _povorot: [wreg+status,2+status,0+pclath+cstack]
  3214                           
  3215                           
  3216                           ;main.c: 270:     if ((time_s > ROTATION_TIME) &&
  3217  0094  0020               	movlb	0	; select bank0
  3218  0095  082F               	movf	_time_s+3,w
  3219  0096  1D03               	btfss	3,2
  3220  0097  28A4               	goto	u1230
  3221  0098  082E               	movf	_time_s+2,w
  3222  0099  1D03               	btfss	3,2
  3223  009A  28A4               	goto	u1230
  3224  009B  082D               	movf	_time_s+1,w
  3225  009C  1D03               	btfss	3,2
  3226  009D  28A4               	goto	u1230
  3227  009E  303D               	movlw	61
  3228  009F  022C               	subwf	_time_s,w
  3229  00A0  1C03               	btfss	3,0
  3230  00A1  28A3               	goto	u1231
  3231  00A2  28A4               	goto	u1230
  3232  00A3                     u1231:
  3233  00A3  28B3               	goto	l2090
  3234  00A4                     u1230:
  3235  00A4                     l2082:
  3236  00A4  197C               	btfsc	_FLAGS,2
  3237  00A5  28A7               	goto	u1241
  3238  00A6  28A8               	goto	u1240
  3239  00A7                     u1241:
  3240  00A7  28B3               	goto	l2090
  3241  00A8                     u1240:
  3242  00A8                     l2084:
  3243  00A8  187C               	btfsc	_FLAGS,0
  3244  00A9  28AB               	goto	u1251
  3245  00AA  28AC               	goto	u1250
  3246  00AB                     u1251:
  3247  00AB  28B3               	goto	l2090
  3248  00AC                     u1250:
  3249  00AC                     l2086:
  3250  00AC  1CFC               	btfss	_FLAGS,1
  3251  00AD  28AF               	goto	u1261
  3252  00AE  28B0               	goto	u1260
  3253  00AF                     u1261:
  3254  00AF  28B3               	goto	l2090
  3255  00B0                     u1260:
  3256  00B0                     l2088:
  3257                           
  3258                           ;main.c: 274:             ) {;main.c: 275:         go_close();
  3259  00B0  3183  2376  3180   	fcall	_go_close
  3260  00B3                     l2090:
  3261                           
  3262                           ;main.c: 277:     if ((time_s > (ROTATION_TIME + 10 + 1 * 2)) &&
  3263  00B3  0020               	movlb	0	; select bank0
  3264  00B4  082F               	movf	_time_s+3,w
  3265  00B5  1D03               	btfss	3,2
  3266  00B6  28C3               	goto	u1270
  3267  00B7  082E               	movf	_time_s+2,w
  3268  00B8  1D03               	btfss	3,2
  3269  00B9  28C3               	goto	u1270
  3270  00BA  082D               	movf	_time_s+1,w
  3271  00BB  1D03               	btfss	3,2
  3272  00BC  28C3               	goto	u1270
  3273  00BD  3049               	movlw	73
  3274  00BE  022C               	subwf	_time_s,w
  3275  00BF  1C03               	btfss	3,0
  3276  00C0  28C2               	goto	u1271
  3277  00C1  28C3               	goto	u1270
  3278  00C2                     u1271:
  3279  00C2  28DB               	goto	l428
  3280  00C3                     u1270:
  3281  00C3                     l2092:
  3282  00C3  1D7C               	btfss	_FLAGS,2
  3283  00C4  28C6               	goto	u1281
  3284  00C5  28C7               	goto	u1280
  3285  00C6                     u1281:
  3286  00C6  28DB               	goto	l428
  3287  00C7                     u1280:
  3288  00C7                     l2094:
  3289  00C7  187C               	btfsc	_FLAGS,0
  3290  00C8  28CA               	goto	u1291
  3291  00C9  28CB               	goto	u1290
  3292  00CA                     u1291:
  3293  00CA  28DB               	goto	l428
  3294  00CB                     u1290:
  3295  00CB                     l2096:
  3296  00CB  1CFC               	btfss	_FLAGS,1
  3297  00CC  28CE               	goto	u1301
  3298  00CD  28CF               	goto	u1300
  3299  00CE                     u1301:
  3300  00CE  28DB               	goto	l428
  3301  00CF                     u1300:
  3302  00CF                     l2098:
  3303                           
  3304                           ;main.c: 281:             ) {;main.c: 282:         go_open();
  3305  00CF  3184  24C3  3180   	fcall	_go_open
  3306  00D2                     l2100:
  3307                           
  3308                           ;main.c: 283:         time_s = 0;
  3309  00D2  3000               	movlw	0
  3310  00D3  0020               	movlb	0	; select bank0
  3311  00D4  00AF               	movwf	_time_s+3
  3312  00D5  3000               	movlw	0
  3313  00D6  00AE               	movwf	_time_s+2
  3314  00D7  3000               	movlw	0
  3315  00D8  00AD               	movwf	_time_s+1
  3316  00D9  3000               	movlw	0
  3317  00DA  00AC               	movwf	_time_s
  3318  00DB                     l428:
  3319  00DB  0008               	return
  3320  00DC                     __end_of_povorot:
  3321                           
  3322                           	psect	text17
  3323  034E                     __ptext17:	
  3324 ;; *************** function _get_voltage *****************
  3325 ;; Defined at:
  3326 ;;		line 328 in file "main.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;		None
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  q               1    8[BANK0 ] unsigned char 
  3331 ;;  res             2    6[BANK0 ] unsigned int 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      void 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, status,0, pclath, cstack
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMMON   BANK0   BANK1
  3341 ;;      Params:         0       0       0
  3342 ;;      Locals:         0       3       0
  3343 ;;      Temps:          0       1       0
  3344 ;;      Totals:         0       4       0
  3345 ;;Total ram usage:        4 bytes
  3346 ;; Hardware stack levels used: 1
  3347 ;; Hardware stack levels required when called: 8
  3348 ;; This function calls:
  3349 ;;		_ADC_GetConversion
  3350 ;;		_EEPROM_WriteByte
  3351 ;; This function is called by:
  3352 ;;		_main
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356  034E                     _get_voltage:	
  3357                           ;psect for function _get_voltage
  3358                           
  3359  034E                     l2146:	
  3360                           ;incstack = 0
  3361                           ; Regs used in _get_voltage: [wreg+status,2+status,0+pclath+cstack]
  3362                           
  3363                           
  3364                           ;main.c: 332:     unsigned res = ADC_GetConversion(channel_FVR);
  3365  034E  301F               	movlw	31
  3366  034F  3183  2398  3183   	fcall	_ADC_GetConversion
  3367  0352  0020               	movlb	0	; select bank0
  3368  0353  0821               	movf	?_ADC_GetConversion+1,w
  3369  0354  00A7               	movwf	get_voltage@res+1
  3370  0355  0820               	movf	?_ADC_GetConversion,w
  3371  0356  00A6               	movwf	get_voltage@res
  3372  0357                     l2148:
  3373                           
  3374                           ;main.c: 333:     if (res > 46200)
  3375  0357  30B4               	movlw	180
  3376  0358  0227               	subwf	get_voltage@res+1,w
  3377  0359  3079               	movlw	121
  3378  035A  1903               	skipnz
  3379  035B  0226               	subwf	get_voltage@res,w
  3380  035C  1C03               	skipc
  3381  035D  2B5F               	goto	u1451
  3382  035E  2B60               	goto	u1450
  3383  035F                     u1451:
  3384  035F  2B75               	goto	l452
  3385  0360                     u1450:
  3386  0360                     l2150:
  3387                           
  3388                           ;main.c: 334:         for (unsigned char q = 0;q<250;q++){
  3389  0360  01A8               	clrf	get_voltage@q
  3390  0361                     l2156:
  3391                           
  3392                           ;main.c: 335:             EEPROM_WriteByte ( q , q+3);
  3393  0361  0828               	movf	get_voltage@q,w
  3394  0362  3E03               	addlw	3
  3395  0363  00A5               	movwf	??_get_voltage
  3396  0364  0825               	movf	??_get_voltage,w
  3397  0365  00A0               	movwf	EEPROM_WriteByte@dt
  3398  0366  0828               	movf	get_voltage@q,w
  3399  0367  3182  22F9  3183   	fcall	_EEPROM_WriteByte
  3400  036A                     l2158:
  3401                           
  3402                           ;main.c: 337:         }
  3403  036A  3001               	movlw	1
  3404  036B  0020               	movlb	0	; select bank0
  3405  036C  00A5               	movwf	??_get_voltage
  3406  036D  0825               	movf	??_get_voltage,w
  3407  036E  07A8               	addwf	get_voltage@q,f
  3408  036F                     l2160:
  3409  036F  30FA               	movlw	250
  3410  0370  0228               	subwf	get_voltage@q,w
  3411  0371  1C03               	skipc
  3412  0372  2B74               	goto	u1461
  3413  0373  2B75               	goto	u1460
  3414  0374                     u1461:
  3415  0374  2B61               	goto	l2156
  3416  0375                     u1460:
  3417  0375                     l452:
  3418  0375  0008               	return
  3419  0376                     __end_of_get_voltage:
  3420                           
  3421                           	psect	text18
  3422  02F9                     __ptext18:	
  3423 ;; *************** function _EEPROM_WriteByte *****************
  3424 ;; Defined at:
  3425 ;;		line 5 in file "eeprom.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  addr            1    wreg     unsigned char 
  3428 ;;  dt              1    0[BANK0 ] unsigned char 
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;  addr            1    3[BANK0 ] unsigned char 
  3431 ;;  status          1    4[BANK0 ] unsigned char 
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      void 
  3434 ;; Registers used:
  3435 ;;		wreg, status,2
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMMON   BANK0   BANK1
  3441 ;;      Params:         0       1       0
  3442 ;;      Locals:         0       2       0
  3443 ;;      Temps:          0       2       0
  3444 ;;      Totals:         0       5       0
  3445 ;;Total ram usage:        5 bytes
  3446 ;; Hardware stack levels used: 1
  3447 ;; Hardware stack levels required when called: 7
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_get_voltage
  3452 ;;		_EEPROM_WriteWord
  3453 ;;		_EEPROM_WriteString
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457  02F9                     _EEPROM_WriteByte:	
  3458                           ;psect for function _EEPROM_WriteByte
  3459                           
  3460                           
  3461                           ;incstack = 0
  3462                           ; Regs used in _EEPROM_WriteByte: [wreg+status,2]
  3463                           ;EEPROM_WriteByte@addr stored from wreg
  3464  02F9  0020               	movlb	0	; select bank0
  3465  02FA  00A3               	movwf	EEPROM_WriteByte@addr
  3466  02FB                     l1992:
  3467  02FB                     l503:	
  3468                           ;eeprom.c: 5: void EEPROM_WriteByte (unsigned char addr, unsigned char dt);eeprom.c: 6: 
      +                          {;eeprom.c: 7:   unsigned char status;;eeprom.c: 8:   while(WR);
  3469                           
  3470  02FB  0023               	movlb	3	; select bank3
  3471  02FC  1895               	btfsc	21,1	;volsfr
  3472  02FD  2AFF               	goto	u1121
  3473  02FE  2B00               	goto	u1120
  3474  02FF                     u1121:
  3475  02FF  2AFB               	goto	l503
  3476  0300                     u1120:
  3477  0300                     l1994:
  3478                           
  3479                           ;eeprom.c: 9:   status = GIE;
  3480  0300  3000               	movlw	0
  3481  0301  1B8B               	btfsc	11,7	;volatile
  3482  0302  3001               	movlw	1
  3483  0303  0020               	movlb	0	; select bank0
  3484  0304  00A4               	movwf	EEPROM_WriteByte@status
  3485  0305                     l1996:
  3486                           
  3487                           ;eeprom.c: 10:   GIE = 0;
  3488  0305  138B               	bcf	11,7	;volatile
  3489  0306                     l1998:
  3490                           
  3491                           ;eeprom.c: 11:   EEADR = addr;
  3492  0306  0823               	movf	EEPROM_WriteByte@addr,w
  3493  0307  00A1               	movwf	??_EEPROM_WriteByte
  3494  0308  01A2               	clrf	??_EEPROM_WriteByte+1
  3495  0309  0821               	movf	??_EEPROM_WriteByte,w
  3496  030A  0023               	movlb	3	; select bank3
  3497  030B  0091               	movwf	17	;volatile
  3498  030C  0020               	movlb	0	; select bank0
  3499  030D  0822               	movf	??_EEPROM_WriteByte+1,w
  3500  030E  0023               	movlb	3	; select bank3
  3501  030F  0092               	movwf	18	;volatile
  3502  0310                     l2000:
  3503                           
  3504                           ;eeprom.c: 12:   EEDATA = dt;
  3505  0310  0020               	movlb	0	; select bank0
  3506  0311  0820               	movf	EEPROM_WriteByte@dt,w
  3507  0312  0023               	movlb	3	; select bank3
  3508  0313  0093               	movwf	19	;volatile
  3509  0314                     l2002:
  3510                           
  3511                           ;eeprom.c: 13:   WREN=1;
  3512  0314  1515               	bsf	21,2	;volsfr
  3513  0315                     l2004:
  3514                           
  3515                           ;eeprom.c: 14:   EECON2 = 0x55;
  3516  0315  3055               	movlw	85
  3517  0316  0096               	movwf	22	;volsfr
  3518  0317                     l2006:
  3519                           
  3520                           ;eeprom.c: 15:   EECON2 = 0xAA;
  3521  0317  30AA               	movlw	170
  3522  0318  0096               	movwf	22	;volsfr
  3523  0319                     l2008:
  3524                           
  3525                           ;eeprom.c: 16:   WR=1;
  3526  0319  1495               	bsf	21,1	;volsfr
  3527  031A                     l2010:
  3528                           
  3529                           ;eeprom.c: 17:   GIE = status;
  3530  031A  0020               	movlb	0	; select bank0
  3531  031B  1824               	btfsc	EEPROM_WriteByte@status,0
  3532  031C  2B1E               	goto	u1131
  3533  031D  2B20               	goto	u1130
  3534  031E                     u1131:
  3535  031E  178B               	bsf	11,7	;volatile
  3536  031F  2B21               	goto	u1144
  3537  0320                     u1130:
  3538  0320  138B               	bcf	11,7	;volatile
  3539  0321                     u1144:
  3540  0321                     l2012:
  3541                           
  3542                           ;eeprom.c: 18:   WREN=0;
  3543  0321  0023               	movlb	3	; select bank3
  3544  0322  1115               	bcf	21,2	;volsfr
  3545  0323                     l506:
  3546  0323  0008               	return
  3547  0324                     __end_of_EEPROM_WriteByte:
  3548                           
  3549                           	psect	text19
  3550  0229                     __ptext19:	
  3551 ;; *************** function _get_jump *****************
  3552 ;; Defined at:
  3553 ;;		line 183 in file "main.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;		None
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;  res             2    5[BANK0 ] unsigned int 
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  1    wreg      void 
  3560 ;; Registers used:
  3561 ;;		wreg, status,2, status,0, pclath, cstack
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMMON   BANK0   BANK1
  3567 ;;      Params:         0       0       0
  3568 ;;      Locals:         0       2       0
  3569 ;;      Temps:          0       1       0
  3570 ;;      Totals:         0       3       0
  3571 ;;Total ram usage:        3 bytes
  3572 ;; Hardware stack levels used: 1
  3573 ;; Hardware stack levels required when called: 8
  3574 ;; This function calls:
  3575 ;;		_ADC_GetConversion
  3576 ;; This function is called by:
  3577 ;;		_main
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581  0229                     _get_jump:	
  3582                           ;psect for function _get_jump
  3583                           
  3584  0229                     l372:	
  3585                           ;incstack = 0
  3586                           ; Regs used in _get_jump: [wreg+status,2+status,0+pclath+cstack]
  3587                           ;main.c: 185:     static signed char jump_counter;;main.c: 186:     do { ANSELAbits.ANSA
      +                          1 = 1; } while(0);
  3588                           
  3589  0229  0023               	movlb	3	; select bank3
  3590  022A  148C               	bsf	12,1	;volatile
  3591  022B                     l2056:
  3592                           
  3593                           ;main.c: 187:     unsigned res = ADC_GetConversion(PIN_JUMP_STATE);
  3594  022B  3001               	movlw	1
  3595  022C  3183  2398  3182   	fcall	_ADC_GetConversion
  3596  022F  0020               	movlb	0	; select bank0
  3597  0230  0821               	movf	?_ADC_GetConversion+1,w
  3598  0231  00A6               	movwf	get_jump@res+1
  3599  0232  0820               	movf	?_ADC_GetConversion,w
  3600  0233  00A5               	movwf	get_jump@res
  3601  0234                     l2058:
  3602  0234  0023               	movlb	3	; select bank3
  3603  0235  108C               	bcf	12,1	;volatile
  3604  0236                     l2060:
  3605                           
  3606                           ;main.c: 191:     if (res < 2000) jump_counter--;
  3607  0236  3007               	movlw	7
  3608  0237  0020               	movlb	0	; select bank0
  3609  0238  0226               	subwf	get_jump@res+1,w
  3610  0239  30D0               	movlw	208
  3611  023A  1903               	skipnz
  3612  023B  0225               	subwf	get_jump@res,w
  3613  023C  1803               	skipnc
  3614  023D  2A3F               	goto	u1201
  3615  023E  2A40               	goto	u1200
  3616  023F                     u1201:
  3617  023F  2A45               	goto	l2064
  3618  0240                     u1200:
  3619  0240                     l2062:
  3620  0240  30FF               	movlw	255
  3621  0241  00A4               	movwf	??_get_jump
  3622  0242  0824               	movf	??_get_jump,w
  3623  0243  07B3               	addwf	get_jump@jump_counter,f
  3624  0244  2A49               	goto	l2066
  3625  0245                     l2064:
  3626  0245  3001               	movlw	1
  3627  0246  00A4               	movwf	??_get_jump
  3628  0247  0824               	movf	??_get_jump,w
  3629  0248  07B3               	addwf	get_jump@jump_counter,f
  3630  0249                     l2066:
  3631                           
  3632                           ;main.c: 194:     if (jump_counter > 10) {
  3633  0249  0833               	movf	get_jump@jump_counter,w
  3634  024A  3A80               	xorlw	128
  3635  024B  3E75               	addlw	-139
  3636  024C  1C03               	skipc
  3637  024D  2A4F               	goto	u1211
  3638  024E  2A50               	goto	u1210
  3639  024F                     u1211:
  3640  024F  2A56               	goto	l2072
  3641  0250                     u1210:
  3642  0250                     l2068:
  3643                           
  3644                           ;main.c: 195:         jump_counter = 10;
  3645  0250  300A               	movlw	10
  3646  0251  00A4               	movwf	??_get_jump
  3647  0252  0824               	movf	??_get_jump,w
  3648  0253  00B3               	movwf	get_jump@jump_counter
  3649  0254                     l2070:
  3650                           
  3651                           ;main.c: 196:         FLAGS.bits._JUMP_CONNECTED = 0;
  3652  0254  127C               	bcf	_FLAGS,4
  3653                           
  3654                           ;main.c: 197:     } else if (jump_counter<-10) {
  3655  0255  2A62               	goto	l381
  3656  0256                     l2072:
  3657  0256  0833               	movf	get_jump@jump_counter,w
  3658  0257  3A80               	xorlw	128
  3659  0258  3E8A               	addlw	138
  3660  0259  1803               	skipnc
  3661  025A  2A5C               	goto	u1221
  3662  025B  2A5D               	goto	u1220
  3663  025C                     u1221:
  3664  025C  2A62               	goto	l381
  3665  025D                     u1220:
  3666  025D                     l2074:
  3667                           
  3668                           ;main.c: 198:         jump_counter = -10;
  3669  025D  30F6               	movlw	246
  3670  025E  00A4               	movwf	??_get_jump
  3671  025F  0824               	movf	??_get_jump,w
  3672  0260  00B3               	movwf	get_jump@jump_counter
  3673  0261                     l2076:
  3674                           
  3675                           ;main.c: 199:         FLAGS.bits._JUMP_CONNECTED = 1;
  3676  0261  167C               	bsf	_FLAGS,4
  3677  0262                     l381:
  3678  0262  0008               	return
  3679  0263                     __end_of_get_jump:
  3680                           
  3681                           	psect	text20
  3682  01EB                     __ptext20:	
  3683 ;; *************** function _get_fun *****************
  3684 ;; Defined at:
  3685 ;;		line 136 in file "main.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;		None
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;  res             2    5[BANK0 ] unsigned int 
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      void 
  3692 ;; Registers used:
  3693 ;;		wreg, status,2, status,0, pclath, cstack
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMMON   BANK0   BANK1
  3699 ;;      Params:         0       0       0
  3700 ;;      Locals:         0       2       0
  3701 ;;      Temps:          0       1       0
  3702 ;;      Totals:         0       3       0
  3703 ;;Total ram usage:        3 bytes
  3704 ;; Hardware stack levels used: 1
  3705 ;; Hardware stack levels required when called: 8
  3706 ;; This function calls:
  3707 ;;		_ADC_GetConversion
  3708 ;; This function is called by:
  3709 ;;		_main
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713  01EB                     _get_fun:	
  3714                           ;psect for function _get_fun
  3715                           
  3716  01EB                     l334:	
  3717                           ;incstack = 0
  3718                           ; Regs used in _get_fun: [wreg+status,2+status,0+pclath+cstack]
  3719                           ;main.c: 138:     static signed char fun_counter;;main.c: 139:     do { LATCbits.LATC1 =
      +                           1; } while(0);
  3720                           
  3721  01EB  0022               	movlb	2	; select bank2
  3722  01EC  148E               	bsf	14,1	;volatile
  3723  01ED                     l336:	
  3724                           ;main.c: 140:     do { ANSELCbits.ANSC2 = 1; } while(0);
  3725                           
  3726  01ED  0023               	movlb	3	; select bank3
  3727  01EE  150E               	bsf	14,2	;volatile
  3728  01EF                     l2030:
  3729                           
  3730                           ;main.c: 141:     unsigned res = ADC_GetConversion(PIN_FUN_STATE);
  3731  01EF  3006               	movlw	6
  3732  01F0  3183  2398  3181   	fcall	_ADC_GetConversion
  3733  01F3  0020               	movlb	0	; select bank0
  3734  01F4  0821               	movf	?_ADC_GetConversion+1,w
  3735  01F5  00A6               	movwf	get_fun@res+1
  3736  01F6  0820               	movf	?_ADC_GetConversion,w
  3737  01F7  00A5               	movwf	get_fun@res
  3738  01F8                     l2032:
  3739  01F8  0023               	movlb	3	; select bank3
  3740  01F9  110E               	bcf	14,2	;volatile
  3741  01FA                     l2034:
  3742  01FA  0022               	movlb	2	; select bank2
  3743  01FB  108E               	bcf	14,1	;volatile
  3744  01FC                     l2036:
  3745                           
  3746                           ;main.c: 144:     if (res < 2000) fun_counter--;
  3747  01FC  3007               	movlw	7
  3748  01FD  0020               	movlb	0	; select bank0
  3749  01FE  0226               	subwf	get_fun@res+1,w
  3750  01FF  30D0               	movlw	208
  3751  0200  1903               	skipnz
  3752  0201  0225               	subwf	get_fun@res,w
  3753  0202  1803               	skipnc
  3754  0203  2A05               	goto	u1171
  3755  0204  2A06               	goto	u1170
  3756  0205                     u1171:
  3757  0205  2A0B               	goto	l2040
  3758  0206                     u1170:
  3759  0206                     l2038:
  3760  0206  30FF               	movlw	255
  3761  0207  00A4               	movwf	??_get_fun
  3762  0208  0824               	movf	??_get_fun,w
  3763  0209  07B5               	addwf	get_fun@fun_counter,f
  3764  020A  2A0F               	goto	l2042
  3765  020B                     l2040:
  3766  020B  3001               	movlw	1
  3767  020C  00A4               	movwf	??_get_fun
  3768  020D  0824               	movf	??_get_fun,w
  3769  020E  07B5               	addwf	get_fun@fun_counter,f
  3770  020F                     l2042:
  3771                           
  3772                           ;main.c: 147:     if (fun_counter > 10) {
  3773  020F  0835               	movf	get_fun@fun_counter,w
  3774  0210  3A80               	xorlw	128
  3775  0211  3E75               	addlw	-139
  3776  0212  1C03               	skipc
  3777  0213  2A15               	goto	u1181
  3778  0214  2A16               	goto	u1180
  3779  0215                     u1181:
  3780  0215  2A1C               	goto	l2048
  3781  0216                     u1180:
  3782  0216                     l2044:
  3783                           
  3784                           ;main.c: 148:         fun_counter = 10;
  3785  0216  300A               	movlw	10
  3786  0217  00A4               	movwf	??_get_fun
  3787  0218  0824               	movf	??_get_fun,w
  3788  0219  00B5               	movwf	get_fun@fun_counter
  3789  021A                     l2046:
  3790                           
  3791                           ;main.c: 149:         FLAGS.bits._FUN_CONNECTED = 0;
  3792  021A  11FC               	bcf	_FLAGS,3
  3793                           
  3794                           ;main.c: 150:     } else if (fun_counter<-10) {
  3795  021B  2A28               	goto	l347
  3796  021C                     l2048:
  3797  021C  0835               	movf	get_fun@fun_counter,w
  3798  021D  3A80               	xorlw	128
  3799  021E  3E8A               	addlw	138
  3800  021F  1803               	skipnc
  3801  0220  2A22               	goto	u1191
  3802  0221  2A23               	goto	u1190
  3803  0222                     u1191:
  3804  0222  2A28               	goto	l347
  3805  0223                     u1190:
  3806  0223                     l2050:
  3807                           
  3808                           ;main.c: 151:         fun_counter = -10;
  3809  0223  30F6               	movlw	246
  3810  0224  00A4               	movwf	??_get_fun
  3811  0225  0824               	movf	??_get_fun,w
  3812  0226  00B5               	movwf	get_fun@fun_counter
  3813  0227                     l2052:
  3814                           
  3815                           ;main.c: 152:         FLAGS.bits._FUN_CONNECTED = 1;
  3816  0227  15FC               	bsf	_FLAGS,3
  3817  0228                     l347:
  3818  0228  0008               	return
  3819  0229                     __end_of_get_fun:
  3820                           
  3821                           	psect	text21
  3822  0398                     __ptext21:	
  3823 ;; *************** function _ADC_GetConversion *****************
  3824 ;; Defined at:
  3825 ;;		line 112 in file "mcc_generated_files/adc.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  channel         1    wreg     enum E2178
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;  channel         1    3[BANK0 ] enum E2178
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  2    0[BANK0 ] unsigned short 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMMON   BANK0   BANK1
  3839 ;;      Params:         0       2       0
  3840 ;;      Locals:         0       1       0
  3841 ;;      Temps:          0       1       0
  3842 ;;      Totals:         0       4       0
  3843 ;;Total ram usage:        4 bytes
  3844 ;; Hardware stack levels used: 1
  3845 ;; Hardware stack levels required when called: 7
  3846 ;; This function calls:
  3847 ;;		Nothing
  3848 ;; This function is called by:
  3849 ;;		_get_fun
  3850 ;;		_get_fun_full
  3851 ;;		_get_jump
  3852 ;;		_get_jump_full
  3853 ;;		_get_voltage
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857  0398                     _ADC_GetConversion:	
  3858                           ;psect for function _ADC_GetConversion
  3859                           
  3860                           
  3861                           ;incstack = 0
  3862                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3863                           ;ADC_GetConversion@channel stored from wreg
  3864  0398  0020               	movlb	0	; select bank0
  3865  0399  00A3               	movwf	ADC_GetConversion@channel
  3866  039A                     l1854:
  3867                           
  3868                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  3869  039A  0823               	movf	ADC_GetConversion@channel,w
  3870  039B  00A2               	movwf	??_ADC_GetConversion
  3871  039C  0DA2               	rlf	??_ADC_GetConversion,f
  3872  039D  0DA2               	rlf	??_ADC_GetConversion,f
  3873  039E  0021               	movlb	1	; select bank1
  3874  039F  081D               	movf	29,w	;volatile
  3875  03A0  0020               	movlb	0	; select bank0
  3876  03A1  0622               	xorwf	??_ADC_GetConversion,w
  3877  03A2  3983               	andlw	-125
  3878  03A3  0622               	xorwf	??_ADC_GetConversion,w
  3879  03A4  0021               	movlb	1	; select bank1
  3880  03A5  009D               	movwf	29	;volatile
  3881  03A6                     l1856:
  3882                           
  3883                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  3884  03A6  141D               	bsf	29,0	;volatile
  3885  03A7                     l1858:
  3886                           
  3887                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  3888  03A7  3006               	movlw	6
  3889  03A8                     u1557:
  3890  03A8  0B89               	decfsz	9,f
  3891  03A9  2BA8               	goto	u1557
  3892  03AA  3200               	nop2
  3893  03AB                     l1860:
  3894                           
  3895                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  3896  03AB  0021               	movlb	1	; select bank1
  3897  03AC  149D               	bsf	29,1	;volatile
  3898  03AD                     l63:	
  3899                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  3900                           
  3901                           
  3902                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  3903  03AD  189D               	btfsc	29,1	;volatile
  3904  03AE  2BB0               	goto	u921
  3905  03AF  2BB1               	goto	u920
  3906  03B0                     u921:
  3907  03B0  2BAD               	goto	l63
  3908  03B1                     u920:
  3909  03B1                     l1862:
  3910                           
  3911                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3912  03B1  081C               	movf	28,w	;volatile
  3913  03B2  0020               	movlb	0	; select bank0
  3914  03B3  00A1               	movwf	?_ADC_GetConversion+1
  3915  03B4  0021               	movlb	1	; select bank1
  3916  03B5  081B               	movf	27,w	;volatile
  3917  03B6  0020               	movlb	0	; select bank0
  3918  03B7  00A0               	movwf	?_ADC_GetConversion
  3919  03B8                     l66:
  3920  03B8  0008               	return
  3921  03B9                     __end_of_ADC_GetConversion:
  3922                           
  3923                           	psect	text22
  3924  003B                     __ptext22:	
  3925 ;; *************** function _fun_work *****************
  3926 ;; Defined at:
  3927 ;;		line 288 in file "main.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;		None
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;		None
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  1    wreg      void 
  3934 ;; Registers used:
  3935 ;;		wreg, status,2, status,0, pclath, cstack
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMMON   BANK0   BANK1
  3941 ;;      Params:         0       0       0
  3942 ;;      Locals:         0       0       0
  3943 ;;      Temps:          0       2       0
  3944 ;;      Totals:         0       2       0
  3945 ;;Total ram usage:        2 bytes
  3946 ;; Hardware stack levels used: 1
  3947 ;; Hardware stack levels required when called: 9
  3948 ;; This function calls:
  3949 ;;		_beep
  3950 ;;		_go_close
  3951 ;;		_go_close_alt
  3952 ;;		_go_open
  3953 ;;		_go_open_alt
  3954 ;; This function is called by:
  3955 ;;		_main
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959  003B                     _fun_work:	
  3960                           ;psect for function _fun_work
  3961                           
  3962  003B                     l2102:	
  3963                           ;incstack = 0
  3964                           ; Regs used in _fun_work: [wreg+status,2+status,0+pclath+cstack]
  3965                           
  3966                           
  3967                           ;main.c: 289:     {;main.c: 290:         if (FLAGS.bits._FUN_CONNECTED &&
  3968  003B  1DFC               	btfss	_FLAGS,3
  3969  003C  283E               	goto	u1311
  3970  003D  283F               	goto	u1310
  3971  003E                     u1311:
  3972  003E  2868               	goto	l2118
  3973  003F                     u1310:
  3974  003F                     l2104:
  3975  003F  187C               	btfsc	_FLAGS,0
  3976  0040  2842               	goto	u1321
  3977  0041  2843               	goto	u1320
  3978  0042                     u1321:
  3979  0042  2868               	goto	l2118
  3980  0043                     u1320:
  3981  0043                     l2106:
  3982  0043  1D7C               	btfss	_FLAGS,2
  3983  0044  2846               	goto	u1331
  3984  0045  2847               	goto	u1330
  3985  0046                     u1331:
  3986  0046  2868               	goto	l2118
  3987  0047                     u1330:
  3988  0047                     l2108:
  3989  0047  1AFC               	btfsc	_FLAGS,5
  3990  0048  284A               	goto	u1341
  3991  0049  284B               	goto	u1340
  3992  004A                     u1341:
  3993  004A  2868               	goto	l2118
  3994  004B                     u1340:
  3995  004B                     l2110:
  3996                           
  3997                           ;main.c: 293:                 !FLAGS.bits.RELE_POW_WAIT) {;main.c: 294:             if (
      +                          FLAGS.bits.NORMAL_WORK_MODE) go_open();
  3998  004B  1CFC               	btfss	_FLAGS,1
  3999  004C  284E               	goto	u1351
  4000  004D  284F               	goto	u1350
  4001  004E                     u1351:
  4002  004E  2853               	goto	l2114
  4003  004F                     u1350:
  4004  004F                     l2112:
  4005  004F  3184  24C3  3180   	fcall	_go_open
  4006  0052  2856               	goto	l2116
  4007  0053                     l2114:
  4008  0053  3184  24F2  3180   	fcall	_go_open_alt
  4009  0056                     l2116:
  4010                           
  4011                           ;main.c: 297:             beep(500, 100, 40, 1);
  4012  0056  30F4               	movlw	244
  4013  0057  0020               	movlb	0	; select bank0
  4014  0058  00A0               	movwf	beep@delay
  4015  0059  3001               	movlw	1
  4016  005A  00A1               	movwf	beep@delay+1
  4017  005B  3064               	movlw	100
  4018  005C  00A2               	movwf	beep@pause
  4019  005D  3000               	movlw	0
  4020  005E  00A3               	movwf	beep@pause+1
  4021  005F  3028               	movlw	40
  4022  0060  00AA               	movwf	??_fun_work
  4023  0061  082A               	movf	??_fun_work,w
  4024  0062  00A4               	movwf	beep@time
  4025  0063  01A5               	clrf	beep@count
  4026  0064  0AA5               	incf	beep@count,f
  4027  0065  3182  22CA  3180   	fcall	_beep
  4028  0068                     l2118:
  4029                           
  4030                           ;main.c: 299:         if (!FLAGS.bits._FUN_CONNECTED &&
  4031  0068  19FC               	btfsc	_FLAGS,3
  4032  0069  286B               	goto	u1361
  4033  006A  286C               	goto	u1360
  4034  006B                     u1361:
  4035  006B  2893               	goto	l437
  4036  006C                     u1360:
  4037  006C                     l2120:
  4038  006C  197C               	btfsc	_FLAGS,2
  4039  006D  286F               	goto	u1371
  4040  006E  2870               	goto	u1370
  4041  006F                     u1371:
  4042  006F  2893               	goto	l437
  4043  0070                     u1370:
  4044  0070                     l2122:
  4045  0070  1AFC               	btfsc	_FLAGS,5
  4046  0071  2873               	goto	u1381
  4047  0072  2874               	goto	u1380
  4048  0073                     u1381:
  4049  0073  2893               	goto	l437
  4050  0074                     u1380:
  4051  0074                     l2124:
  4052                           
  4053                           ;main.c: 301:                 !FLAGS.bits.RELE_POW_WAIT) {;main.c: 302:             if (
      +                          FLAGS.bits.NORMAL_WORK_MODE) go_close();
  4054  0074  1CFC               	btfss	_FLAGS,1
  4055  0075  2877               	goto	u1391
  4056  0076  2878               	goto	u1390
  4057  0077                     u1391:
  4058  0077  287C               	goto	l2128
  4059  0078                     u1390:
  4060  0078                     l2126:
  4061  0078  3183  2376  3180   	fcall	_go_close
  4062  007B  287F               	goto	l2130
  4063  007C                     l2128:
  4064  007C  3184  24F7  3180   	fcall	_go_close_alt
  4065  007F                     l2130:
  4066                           
  4067                           ;main.c: 305:             beep(500, 100, 40, 2);
  4068  007F  30F4               	movlw	244
  4069  0080  0020               	movlb	0	; select bank0
  4070  0081  00A0               	movwf	beep@delay
  4071  0082  3001               	movlw	1
  4072  0083  00A1               	movwf	beep@delay+1
  4073  0084  3064               	movlw	100
  4074  0085  00A2               	movwf	beep@pause
  4075  0086  3000               	movlw	0
  4076  0087  00A3               	movwf	beep@pause+1
  4077  0088  3028               	movlw	40
  4078  0089  00AA               	movwf	??_fun_work
  4079  008A  082A               	movf	??_fun_work,w
  4080  008B  00A4               	movwf	beep@time
  4081  008C  3002               	movlw	2
  4082  008D  00AB               	movwf	??_fun_work+1
  4083  008E  082B               	movf	??_fun_work+1,w
  4084  008F  00A5               	movwf	beep@count
  4085  0090  3182  22CA  3180   	fcall	_beep
  4086  0093                     l437:
  4087  0093  0008               	return
  4088  0094                     __end_of_fun_work:
  4089                           
  4090                           	psect	text23
  4091  04F2                     __ptext23:	
  4092 ;; *************** function _go_open_alt *****************
  4093 ;; Defined at:
  4094 ;;		line 105 in file "main.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;		None
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;		None
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  1    wreg      void 
  4101 ;; Registers used:
  4102 ;;		None
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1
  4108 ;;      Params:         0       0       0
  4109 ;;      Locals:         0       0       0
  4110 ;;      Temps:          0       0       0
  4111 ;;      Totals:         0       0       0
  4112 ;;Total ram usage:        0 bytes
  4113 ;; Hardware stack levels used: 1
  4114 ;; Hardware stack levels required when called: 7
  4115 ;; This function calls:
  4116 ;;		Nothing
  4117 ;; This function is called by:
  4118 ;;		_fun_work
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122  04F2                     _go_open_alt:	
  4123                           ;psect for function _go_open_alt
  4124                           
  4125  04F2                     l1934:	
  4126                           ;incstack = 0
  4127                           ; Regs used in _go_open_alt: []
  4128                           
  4129                           
  4130                           ;main.c: 106:     FLAGS.bits.CLOSED = 0;
  4131  04F2  117C               	bcf	_FLAGS,2
  4132  04F3                     l301:	
  4133                           ;main.c: 107:     do { LATCbits.LATC4 = 0; } while(0);
  4134                           
  4135  04F3  0022               	movlb	2	; select bank2
  4136  04F4  120E               	bcf	14,4	;volatile
  4137  04F5                     l303:	
  4138                           ;main.c: 108:     do { LATCbits.LATC5 = 0; } while(0);
  4139                           
  4140  04F5  128E               	bcf	14,5	;volatile
  4141  04F6                     l305:
  4142  04F6  0008               	return
  4143  04F7                     __end_of_go_open_alt:
  4144                           
  4145                           	psect	text24
  4146  04C3                     __ptext24:	
  4147 ;; *************** function _go_open *****************
  4148 ;; Defined at:
  4149 ;;		line 91 in file "main.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;		None
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;		None
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  1    wreg      void 
  4156 ;; Registers used:
  4157 ;;		wreg
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMMON   BANK0   BANK1
  4163 ;;      Params:         0       0       0
  4164 ;;      Locals:         0       0       0
  4165 ;;      Temps:          0       1       0
  4166 ;;      Totals:         0       1       0
  4167 ;;Total ram usage:        1 bytes
  4168 ;; Hardware stack levels used: 1
  4169 ;; Hardware stack levels required when called: 7
  4170 ;; This function calls:
  4171 ;;		Nothing
  4172 ;; This function is called by:
  4173 ;;		_povorot
  4174 ;;		_fun_work
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178  04C3                     _go_open:	
  4179                           ;psect for function _go_open
  4180                           
  4181  04C3                     l287:	
  4182                           ;incstack = 0
  4183                           ; Regs used in _go_open: [wreg]
  4184                           ;main.c: 92:     do { LATCbits.LATC4 = 0; } while(0);
  4185                           
  4186  04C3  0022               	movlb	2	; select bank2
  4187  04C4  120E               	bcf	14,4	;volatile
  4188  04C5                     l289:	
  4189                           ;main.c: 93:     do { LATCbits.LATC5 = 1; } while(0);
  4190                           
  4191  04C5  168E               	bsf	14,5	;volatile
  4192  04C6                     l1926:
  4193                           
  4194                           ;main.c: 94:     time_pow_s = 10;
  4195  04C6  300A               	movlw	10
  4196  04C7  0020               	movlb	0	; select bank0
  4197  04C8  00A0               	movwf	??_go_open
  4198  04C9  0820               	movf	??_go_open,w
  4199  04CA  00B6               	movwf	_time_pow_s
  4200  04CB                     l1928:
  4201                           
  4202                           ;main.c: 95:     FLAGS.bits.RELE_POW_WAIT = 1;
  4203  04CB  16FC               	bsf	_FLAGS,5
  4204  04CC                     l291:
  4205  04CC  0008               	return
  4206  04CD                     __end_of_go_open:
  4207                           
  4208                           	psect	text25
  4209  04F7                     __ptext25:	
  4210 ;; *************** function _go_close_alt *****************
  4211 ;; Defined at:
  4212 ;;		line 99 in file "main.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;		None
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;		None
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  1    wreg      void 
  4219 ;; Registers used:
  4220 ;;		None
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMMON   BANK0   BANK1
  4226 ;;      Params:         0       0       0
  4227 ;;      Locals:         0       0       0
  4228 ;;      Temps:          0       0       0
  4229 ;;      Totals:         0       0       0
  4230 ;;Total ram usage:        0 bytes
  4231 ;; Hardware stack levels used: 1
  4232 ;; Hardware stack levels required when called: 7
  4233 ;; This function calls:
  4234 ;;		Nothing
  4235 ;; This function is called by:
  4236 ;;		_fun_work
  4237 ;;		_switch_wm
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241  04F7                     _go_close_alt:	
  4242                           ;psect for function _go_close_alt
  4243                           
  4244  04F7                     l1932:	
  4245                           ;incstack = 0
  4246                           ; Regs used in _go_close_alt: []
  4247                           
  4248                           
  4249                           ;main.c: 100:     FLAGS.bits.CLOSED = 1;
  4250  04F7  157C               	bsf	_FLAGS,2
  4251  04F8                     l294:	
  4252                           ;main.c: 101:     do { LATCbits.LATC4 = 0; } while(0);
  4253                           
  4254  04F8  0022               	movlb	2	; select bank2
  4255  04F9  120E               	bcf	14,4	;volatile
  4256  04FA                     l296:	
  4257                           ;main.c: 102:     do { LATCbits.LATC5 = 1; } while(0);
  4258                           
  4259  04FA  168E               	bsf	14,5	;volatile
  4260  04FB                     l298:
  4261  04FB  0008               	return
  4262  04FC                     __end_of_go_close_alt:
  4263                           
  4264                           	psect	text26
  4265  0376                     __ptext26:	
  4266 ;; *************** function _go_close *****************
  4267 ;; Defined at:
  4268 ;;		line 80 in file "main.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;		None
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;		None
  4273 ;; Return value:  Size  Location     Type
  4274 ;;                  1    wreg      void 
  4275 ;; Registers used:
  4276 ;;		wreg
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMMON   BANK0   BANK1
  4282 ;;      Params:         0       0       0
  4283 ;;      Locals:         0       0       0
  4284 ;;      Temps:          0       2       0
  4285 ;;      Totals:         0       2       0
  4286 ;;Total ram usage:        2 bytes
  4287 ;; Hardware stack levels used: 1
  4288 ;; Hardware stack levels required when called: 7
  4289 ;; This function calls:
  4290 ;;		Nothing
  4291 ;; This function is called by:
  4292 ;;		_povorot
  4293 ;;		_fun_work
  4294 ;;		_switch_wm
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298  0376                     _go_close:	
  4299                           ;psect for function _go_close
  4300                           
  4301  0376                     l1914:	
  4302                           ;incstack = 0
  4303                           ; Regs used in _go_close: [wreg]
  4304                           
  4305                           
  4306                           ;main.c: 81:     time_s = 0;
  4307  0376  3000               	movlw	0
  4308  0377  0020               	movlb	0	; select bank0
  4309  0378  00AF               	movwf	_time_s+3
  4310  0379  3000               	movlw	0
  4311  037A  00AE               	movwf	_time_s+2
  4312  037B  3000               	movlw	0
  4313  037C  00AD               	movwf	_time_s+1
  4314  037D  3000               	movlw	0
  4315  037E  00AC               	movwf	_time_s
  4316  037F                     l1916:
  4317  037F  0022               	movlb	2	; select bank2
  4318  0380  160E               	bsf	14,4	;volatile
  4319  0381                     l281:
  4320                           
  4321                           ;main.c: 83:     _delay((unsigned long)((1 * 1000)*(16000000/4000.0)));
  4322  0381  3015               	movlw	21
  4323  0382  0020               	movlb	0	; select bank0
  4324  0383  00A1               	movwf	??_go_close+1
  4325  0384  304B               	movlw	75
  4326  0385  00A0               	movwf	??_go_close
  4327  0386  30BE               	movlw	190
  4328  0387                     u1567:
  4329  0387  0B89               	decfsz	9,f
  4330  0388  2B87               	goto	u1567
  4331  0389  0BA0               	decfsz	??_go_close,f
  4332  038A  2B87               	goto	u1567
  4333  038B  0BA1               	decfsz	??_go_close+1,f
  4334  038C  2B87               	goto	u1567
  4335  038D  0000               	nop
  4336  038E                     l1918:
  4337  038E  0022               	movlb	2	; select bank2
  4338  038F  168E               	bsf	14,5	;volatile
  4339  0390                     l283:
  4340                           
  4341                           ;main.c: 85:     time_pow_s = 10;
  4342  0390  300A               	movlw	10
  4343  0391  0020               	movlb	0	; select bank0
  4344  0392  00A0               	movwf	??_go_close
  4345  0393  0820               	movf	??_go_close,w
  4346  0394  00B6               	movwf	_time_pow_s
  4347  0395                     l1920:
  4348                           
  4349                           ;main.c: 86:     FLAGS.bits.RELE_POW_WAIT = 1;
  4350  0395  16FC               	bsf	_FLAGS,5
  4351  0396                     l1922:
  4352                           
  4353                           ;main.c: 87:     FLAGS.bits.RELE_CON_WAIT = 1;
  4354  0396  177C               	bsf	_FLAGS,6
  4355  0397                     l284:
  4356  0397  0008               	return
  4357  0398                     __end_of_go_close:
  4358                           
  4359                           	psect	text27
  4360  02CA                     __ptext27:	
  4361 ;; *************** function _beep *****************
  4362 ;; Defined at:
  4363 ;;		line 70 in file "main.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;  delay           2    0[BANK0 ] unsigned int 
  4366 ;;  pause           2    2[BANK0 ] unsigned int 
  4367 ;;  time            1    4[BANK0 ] unsigned char 
  4368 ;;  count           1    5[BANK0 ] unsigned char 
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;  i               1    9[BANK0 ] unsigned char 
  4371 ;;  j               1    8[BANK0 ] unsigned char 
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		wreg, status,2, status,0, pclath, cstack
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMMON   BANK0   BANK1
  4381 ;;      Params:         0       6       0
  4382 ;;      Locals:         0       2       0
  4383 ;;      Temps:          0       2       0
  4384 ;;      Totals:         0      10       0
  4385 ;;Total ram usage:       10 bytes
  4386 ;; Hardware stack levels used: 1
  4387 ;; Hardware stack levels required when called: 8
  4388 ;; This function calls:
  4389 ;;		_switch_zum
  4390 ;; This function is called by:
  4391 ;;		_fun_work
  4392 ;;		_switch_wm
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396  02CA                     _beep:	
  4397                           ;psect for function _beep
  4398                           
  4399  02CA                     l1896:	
  4400                           ;incstack = 0
  4401                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
  4402                           
  4403                           
  4404                           ;main.c: 71:     for (char j = 0; j < count; j++) {
  4405  02CA  0020               	movlb	0	; select bank0
  4406  02CB  01A8               	clrf	beep@j
  4407  02CC  2AF2               	goto	l1912
  4408  02CD                     l1898:
  4409                           
  4410                           ;main.c: 72:         for (char i = 0; i < time; i++) {
  4411  02CD  01A9               	clrf	beep@i
  4412  02CE  2ADB               	goto	l1906
  4413  02CF                     l1900:
  4414                           
  4415                           ;main.c: 73:             switch_zum();
  4416  02CF  3184  2479  3182   	fcall	_switch_zum
  4417  02D2                     l1902:
  4418                           
  4419                           ;main.c: 74:             _delay((unsigned long)((300)*(16000000/4000000.0)));
  4420  02D2  30F0               	movlw	240
  4421  02D3                     u1577:
  4422  02D3  3200               	nop2
  4423  02D4  0B89               	decfsz	9,f
  4424  02D5  2AD3               	goto	u1577
  4425  02D6                     l1904:
  4426                           
  4427                           ;main.c: 75:         }
  4428  02D6  3001               	movlw	1
  4429  02D7  0020               	movlb	0	; select bank0
  4430  02D8  00A6               	movwf	??_beep
  4431  02D9  0826               	movf	??_beep,w
  4432  02DA  07A9               	addwf	beep@i,f
  4433  02DB                     l1906:
  4434  02DB  0824               	movf	beep@time,w
  4435  02DC  0229               	subwf	beep@i,w
  4436  02DD  1C03               	skipc
  4437  02DE  2AE0               	goto	u1021
  4438  02DF  2AE1               	goto	u1020
  4439  02E0                     u1021:
  4440  02E0  2ACF               	goto	l1900
  4441  02E1                     u1020:
  4442  02E1                     l1908:
  4443                           
  4444                           ;main.c: 76:         _delay((unsigned long)((100)*(16000000/4000.0)));
  4445  02E1  3003               	movlw	3
  4446  02E2  0020               	movlb	0	; select bank0
  4447  02E3  00A7               	movwf	??_beep+1
  4448  02E4  3008               	movlw	8
  4449  02E5  00A6               	movwf	??_beep
  4450  02E6  3077               	movlw	119
  4451  02E7                     u1587:
  4452  02E7  0B89               	decfsz	9,f
  4453  02E8  2AE7               	goto	u1587
  4454  02E9  0BA6               	decfsz	??_beep,f
  4455  02EA  2AE7               	goto	u1587
  4456  02EB  0BA7               	decfsz	??_beep+1,f
  4457  02EC  2AE7               	goto	u1587
  4458  02ED                     l1910:
  4459                           
  4460                           ;main.c: 77:     }
  4461  02ED  3001               	movlw	1
  4462  02EE  0020               	movlb	0	; select bank0
  4463  02EF  00A6               	movwf	??_beep
  4464  02F0  0826               	movf	??_beep,w
  4465  02F1  07A8               	addwf	beep@j,f
  4466  02F2                     l1912:
  4467  02F2  0825               	movf	beep@count,w
  4468  02F3  0228               	subwf	beep@j,w
  4469  02F4  1C03               	skipc
  4470  02F5  2AF7               	goto	u1031
  4471  02F6  2AF8               	goto	u1030
  4472  02F7                     u1031:
  4473  02F7  2ACD               	goto	l1898
  4474  02F8                     u1030:
  4475  02F8                     l277:
  4476  02F8  0008               	return
  4477  02F9                     __end_of_beep:
  4478                           
  4479                           	psect	text28
  4480  0479                     __ptext28:	
  4481 ;; *************** function _switch_zum *****************
  4482 ;; Defined at:
  4483 ;;		line 62 in file "main.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;		None
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;		None
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  1    wreg      void 
  4490 ;; Registers used:
  4491 ;;		status,0
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMMON   BANK0   BANK1
  4497 ;;      Params:         0       0       0
  4498 ;;      Locals:         0       0       0
  4499 ;;      Temps:          0       0       0
  4500 ;;      Totals:         0       0       0
  4501 ;;Total ram usage:        0 bytes
  4502 ;; Hardware stack levels used: 1
  4503 ;; Hardware stack levels required when called: 7
  4504 ;; This function calls:
  4505 ;;		Nothing
  4506 ;; This function is called by:
  4507 ;;		_beep
  4508 ;;		_start_setup
  4509 ;;		_TMR0_ISR
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513  0479                     _switch_zum:	
  4514                           ;psect for function _switch_zum
  4515                           
  4516                           
  4517                           ;Skip over the trampoline to the duplicate function for level 1
  4518  0479  1C7E               	btfss	int$flags,0
  4519  047A  2C7C               	goto	_switch_zum$intlevel0
  4520  047B  2CB6               	ljmp	i1_switch_zum
  4521  047C                     _switch_zum$intlevel0:
  4522  047C                     l263:	
  4523                           ;incstack = 0
  4524                           ; Regs used in _switch_zum: [status,0]
  4525                           ;main.c: 63:     do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  4526                           
  4527  047C                     l1866:
  4528  047C  1003               	clrc
  4529  047D  0022               	movlb	2	; select bank2
  4530  047E  1E8C               	btfss	12,5	;volatile
  4531  047F  1403               	setc
  4532  0480  1803               	btfsc	3,0
  4533  0481  2C83               	goto	u931
  4534  0482  2C86               	goto	u930
  4535  0483                     u931:
  4536  0483  0022               	movlb	2	; select bank2
  4537  0484  168C               	bsf	12,5	;volatile
  4538  0485  2C88               	goto	u944
  4539  0486                     u930:
  4540  0486  0022               	movlb	2	; select bank2
  4541  0487  128C               	bcf	12,5	;volatile
  4542  0488                     u944:
  4543  0488                     l265:
  4544  0488  0008               	return
  4545  0489                     __end_of_switch_zum:
  4546                           
  4547                           	psect	intentry
  4548  0004                     __pintentry:	
  4549 ;; *************** function _INTERRUPT_InterruptManager *****************
  4550 ;; Defined at:
  4551 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;		None
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;		None
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      void 
  4558 ;; Registers used:
  4559 ;;		wreg, status,2, status,0, pclath, cstack
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMMON   BANK0   BANK1
  4565 ;;      Params:         0       0       0
  4566 ;;      Locals:         0       0       0
  4567 ;;      Temps:          0       0       0
  4568 ;;      Totals:         0       0       0
  4569 ;;Total ram usage:        0 bytes
  4570 ;; Hardware stack levels used: 1
  4571 ;; Hardware stack levels required when called: 6
  4572 ;; This function calls:
  4573 ;;		_TMR0_ISR
  4574 ;;		_TMR2_ISR
  4575 ;; This function is called by:
  4576 ;;		Interrupt level 1
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580  0004                     _INTERRUPT_InterruptManager:
  4581                           
  4582                           ;incstack = 0
  4583  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4584                           
  4585                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  4586  0005  3180               	pagesel	$
  4587  0006                     i1l2208:
  4588                           
  4589                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4590  0006  1E8B               	btfss	11,5	;volatile
  4591  0007  2809               	goto	u147_21
  4592  0008  280A               	goto	u147_20
  4593  0009                     u147_21:
  4594  0009  2812               	goto	i1l110
  4595  000A                     u147_20:
  4596  000A                     i1l2210:
  4597  000A  1D0B               	btfss	11,2	;volatile
  4598  000B  280D               	goto	u148_21
  4599  000C  280E               	goto	u148_20
  4600  000D                     u148_21:
  4601  000D  2812               	goto	i1l110
  4602  000E                     u148_20:
  4603  000E                     i1l2212:
  4604                           
  4605                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  4606  000E  3184  2499  3180   	fcall	_TMR0_ISR
  4607                           
  4608                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  4609  0011  2824               	goto	i1l116
  4610  0012                     i1l110:	
  4611                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  4612                           
  4613  0012  1F0B               	btfss	11,6	;volatile
  4614  0013  2815               	goto	u149_21
  4615  0014  2816               	goto	u149_20
  4616  0015                     u149_21:
  4617  0015  2824               	goto	i1l116
  4618  0016                     u149_20:
  4619  0016                     i1l2214:
  4620                           
  4621                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  4622  0016  0021               	movlb	1	; select bank1
  4623  0017  1C91               	btfss	17,1	;volatile
  4624  0018  281A               	goto	u150_21
  4625  0019  281B               	goto	u150_20
  4626  001A                     u150_21:
  4627  001A  2824               	goto	i1l115
  4628  001B                     u150_20:
  4629  001B                     i1l2216:
  4630  001B  0020               	movlb	0	; select bank0
  4631  001C  1C91               	btfss	17,1	;volatile
  4632  001D  281F               	goto	u151_21
  4633  001E  2820               	goto	u151_20
  4634  001F                     u151_21:
  4635  001F  2824               	goto	i1l115
  4636  0020                     u151_20:
  4637  0020                     i1l2218:
  4638                           
  4639                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
  4640  0020  3184  2451  3180   	fcall	_TMR2_ISR
  4641                           
  4642                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4643  0023  2824               	goto	i1l116
  4644  0024                     i1l115:	
  4645                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  4646                           
  4647  0024                     i1l116:
  4648  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4649  0025  0009               	retfie
  4650  0026                     __end_of_INTERRUPT_InterruptManager:
  4651                           
  4652                           	psect	text30
  4653  0451                     __ptext30:	
  4654 ;; *************** function _TMR2_ISR *****************
  4655 ;; Defined at:
  4656 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;		None
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;		None
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1    wreg      void 
  4663 ;; Registers used:
  4664 ;;		wreg, status,2, status,0, pclath, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMMON   BANK0   BANK1
  4670 ;;      Params:         0       0       0
  4671 ;;      Locals:         0       0       0
  4672 ;;      Temps:          0       0       0
  4673 ;;      Totals:         0       0       0
  4674 ;;Total ram usage:        0 bytes
  4675 ;; Hardware stack levels used: 1
  4676 ;; Hardware stack levels required when called: 5
  4677 ;; This function calls:
  4678 ;;		_TMR2_CallBack
  4679 ;; This function is called by:
  4680 ;;		_INTERRUPT_InterruptManager
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684  0451                     _TMR2_ISR:	
  4685                           ;psect for function _TMR2_ISR
  4686                           
  4687  0451                     i1l2022:	
  4688                           ;incstack = 0
  4689                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  4690                           
  4691                           
  4692                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
  4693  0451  0020               	movlb	0	; select bank0
  4694  0452  1091               	bcf	17,1	;volatile
  4695  0453                     i1l2024:
  4696                           
  4697                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 100)
  4698  0453  3001               	movlw	1
  4699  0454  07F8               	addwf	TMR2_ISR@CountCallBack,f	;volatile
  4700  0455  3000               	movlw	0
  4701  0456  3DF9               	addwfc	TMR2_ISR@CountCallBack+1,f	;volatile
  4702  0457  3000               	movlw	0
  4703  0458  0279               	subwf	TMR2_ISR@CountCallBack+1,w	;volatile
  4704  0459  3064               	movlw	100
  4705  045A  1903               	skipnz
  4706  045B  0278               	subwf	TMR2_ISR@CountCallBack,w	;volatile
  4707  045C  1C03               	skipc
  4708  045D  2C5F               	goto	u116_21
  4709  045E  2C60               	goto	u116_20
  4710  045F                     u116_21:
  4711  045F  2C65               	goto	i1l160
  4712  0460                     u116_20:
  4713  0460                     i1l2026:
  4714                           
  4715                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
  4716  0460  3184  24A9  3184   	fcall	_TMR2_CallBack
  4717  0463                     i1l2028:
  4718                           
  4719                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
  4720  0463  01F8               	clrf	TMR2_ISR@CountCallBack	;volatile
  4721  0464  01F9               	clrf	TMR2_ISR@CountCallBack+1	;volatile
  4722  0465                     i1l160:
  4723  0465  0008               	return
  4724  0466                     __end_of_TMR2_ISR:
  4725                           
  4726                           	psect	text31
  4727  04A9                     __ptext31:	
  4728 ;; *************** function _TMR2_CallBack *****************
  4729 ;; Defined at:
  4730 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;		None
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;		None
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  1    wreg      void 
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, status,0, pclath, cstack
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMMON   BANK0   BANK1
  4744 ;;      Params:         0       0       0
  4745 ;;      Locals:         0       0       0
  4746 ;;      Temps:          0       0       0
  4747 ;;      Totals:         0       0       0
  4748 ;;Total ram usage:        0 bytes
  4749 ;; Hardware stack levels used: 1
  4750 ;; Hardware stack levels required when called: 4
  4751 ;; This function calls:
  4752 ;;		Absolute function
  4753 ;;		_TMR2_DefaultInterruptHandler
  4754 ;;		_sec_tick_work
  4755 ;; This function is called by:
  4756 ;;		_TMR2_ISR
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760  04A9                     _TMR2_CallBack:	
  4761                           ;psect for function _TMR2_CallBack
  4762                           
  4763  04A9                     i1l1892:	
  4764                           ;incstack = 0
  4765                           ; Regs used in _TMR2_CallBack: [wreg+status,2+status,0+pclath+cstack]
  4766                           
  4767                           
  4768                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
  4769  04A9  0020               	movlb	0	; select bank0
  4770  04AA  0839               	movf	_TMR2_InterruptHandler,w
  4771  04AB  043A               	iorwf	_TMR2_InterruptHandler+1,w
  4772  04AC  1903               	btfsc	3,2
  4773  04AD  2CAF               	goto	u101_21
  4774  04AE  2CB0               	goto	u101_20
  4775  04AF                     u101_21:
  4776  04AF  2CB5               	goto	i1l164
  4777  04B0                     u101_20:
  4778  04B0                     i1l1894:
  4779                           
  4780                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
  4781  04B0  083A               	movf	_TMR2_InterruptHandler+1,w
  4782  04B1  008A               	movwf	10
  4783  04B2  0839               	movf	_TMR2_InterruptHandler,w
  4784  04B3  000A               	callw
  4785  04B4  3184               	pagesel	$
  4786  04B5                     i1l164:
  4787  04B5  0008               	return
  4788  04B6                     __end_of_TMR2_CallBack:
  4789                           
  4790                           	psect	text32
  4791  0518                     __ptext32:	
  4792 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4793 ;; Defined at:
  4794 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;		None
  4797 ;; Auto vars:     Size  Location     Type
  4798 ;;		None
  4799 ;; Return value:  Size  Location     Type
  4800 ;;                  1    wreg      void 
  4801 ;; Registers used:
  4802 ;;		None
  4803 ;; Tracked objects:
  4804 ;;		On entry : 0/0
  4805 ;;		On exit  : 0/0
  4806 ;;		Unchanged: 0/0
  4807 ;; Data sizes:     COMMON   BANK0   BANK1
  4808 ;;      Params:         0       0       0
  4809 ;;      Locals:         0       0       0
  4810 ;;      Temps:          0       0       0
  4811 ;;      Totals:         0       0       0
  4812 ;;Total ram usage:        0 bytes
  4813 ;; Hardware stack levels used: 1
  4814 ;; This function calls:
  4815 ;;		Nothing
  4816 ;; This function is called by:
  4817 ;;		_TMR2_Initialize
  4818 ;;		_TMR2_CallBack
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822  0518                     _TMR2_DefaultInterruptHandler:	
  4823                           ;psect for function _TMR2_DefaultInterruptHandler
  4824                           
  4825  0518                     i1l170:	
  4826                           ;incstack = 0
  4827                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  4828                           
  4829  0518  0008               	return
  4830  0519                     __end_of_TMR2_DefaultInterruptHandler:
  4831                           
  4832                           	psect	text33
  4833  01AC                     __ptext33:	
  4834 ;; *************** function _sec_tick_work *****************
  4835 ;; Defined at:
  4836 ;;		line 248 in file "main.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;		None
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;		None
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      void 
  4843 ;; Registers used:
  4844 ;;		wreg, status,2, status,0, pclath, cstack
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMMON   BANK0   BANK1
  4850 ;;      Params:         0       0       0
  4851 ;;      Locals:         0       0       0
  4852 ;;      Temps:          1       0       0
  4853 ;;      Totals:         1       0       0
  4854 ;;Total ram usage:        1 bytes
  4855 ;; Hardware stack levels used: 1
  4856 ;; Hardware stack levels required when called: 3
  4857 ;; This function calls:
  4858 ;;		_get_measure
  4859 ;;		_rele_tick
  4860 ;;		_toggle_tone
  4861 ;;		i1_switch_zum
  4862 ;; This function is called by:
  4863 ;;		_start_setup
  4864 ;;		_TMR2_CallBack
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868  01AC                     _sec_tick_work:	
  4869                           ;psect for function _sec_tick_work
  4870                           
  4871  01AC                     i1l1868:	
  4872                           ;incstack = 0
  4873                           ; Regs used in _sec_tick_work: [wreg+status,2+status,0+pclath+cstack]
  4874                           
  4875                           
  4876                           ;main.c: 250:             switch_zum();
  4877  01AC  3184  24B6  3181   	fcall	i1_switch_zum
  4878  01AF                     i1l1870:
  4879                           
  4880                           ;main.c: 252:     time_s++;
  4881  01AF  3001               	movlw	1
  4882  01B0  0020               	movlb	0	; select bank0
  4883  01B1  07AC               	addwf	_time_s,f
  4884  01B2  3000               	movlw	0
  4885  01B3  3DAD               	addwfc	_time_s+1,f
  4886  01B4  3000               	movlw	0
  4887  01B5  3DAE               	addwfc	_time_s+2,f
  4888  01B6  3000               	movlw	0
  4889  01B7  3DAF               	addwfc	_time_s+3,f
  4890                           
  4891                           ;main.c: 253:     rele_tick();
  4892  01B8  3183  2324  3181   	fcall	_rele_tick
  4893  01BB  0064               	clrwdt	;# 
  4894  01BC                     i1l1872:
  4895                           
  4896                           ;main.c: 255:     if (FLAGS.bits.ALARM) {
  4897  01BC  1C7C               	btfss	_FLAGS,0
  4898  01BD  29BF               	goto	u95_21
  4899  01BE  29C0               	goto	u95_20
  4900  01BF                     u95_21:
  4901  01BF  29D0               	goto	i1l1878
  4902  01C0                     u95_20:
  4903  01C0                     i1l1874:
  4904  01C0  1003               	clrc
  4905  01C1  0022               	movlb	2	; select bank2
  4906  01C2  1E0C               	btfss	12,4	;volatile
  4907  01C3  1403               	setc
  4908  01C4  1803               	btfsc	3,0
  4909  01C5  29C7               	goto	u96_21
  4910  01C6  29CA               	goto	u96_20
  4911  01C7                     u96_21:
  4912  01C7  0022               	movlb	2	; select bank2
  4913  01C8  160C               	bsf	12,4	;volatile
  4914  01C9  29CC               	goto	u97_24
  4915  01CA                     u96_20:
  4916  01CA  0022               	movlb	2	; select bank2
  4917  01CB  120C               	bcf	12,4	;volatile
  4918  01CC                     u97_24:
  4919  01CC                     i1l1876:
  4920                           
  4921                           ;main.c: 257:         toggle_tone();
  4922  01CC  3184  24CD  3181   	fcall	_toggle_tone
  4923                           
  4924                           ;main.c: 258:     } else {
  4925  01CF  29EA               	goto	i1l423
  4926  01D0                     i1l1878:
  4927                           
  4928                           ;main.c: 259:         get_measure();
  4929  01D0  3182  2298  3181   	fcall	_get_measure
  4930  01D3                     i1l1880:
  4931                           
  4932                           ;main.c: 260:         static char iled;;main.c: 261:         iled++;
  4933  01D3  3001               	movlw	1
  4934  01D4  00F7               	movwf	??_sec_tick_work
  4935  01D5  0877               	movf	??_sec_tick_work,w
  4936  01D6  07FA               	addwf	sec_tick_work@iled,f
  4937  01D7                     i1l1882:
  4938                           
  4939                           ;main.c: 262:         if (iled > 2) {
  4940  01D7  3003               	movlw	3
  4941  01D8  027A               	subwf	sec_tick_work@iled,w
  4942  01D9  1C03               	skipc
  4943  01DA  29DC               	goto	u98_21
  4944  01DB  29DD               	goto	u98_20
  4945  01DC                     u98_21:
  4946  01DC  29EA               	goto	i1l423
  4947  01DD                     u98_20:
  4948  01DD                     i1l1884:
  4949  01DD  1003               	clrc
  4950  01DE  0022               	movlb	2	; select bank2
  4951  01DF  1E0C               	btfss	12,4	;volatile
  4952  01E0  1403               	setc
  4953  01E1  1803               	btfsc	3,0
  4954  01E2  29E4               	goto	u99_21
  4955  01E3  29E7               	goto	u99_20
  4956  01E4                     u99_21:
  4957  01E4  0022               	movlb	2	; select bank2
  4958  01E5  160C               	bsf	12,4	;volatile
  4959  01E6  29E9               	goto	u100_24
  4960  01E7                     u99_20:
  4961  01E7  0022               	movlb	2	; select bank2
  4962  01E8  120C               	bcf	12,4	;volatile
  4963  01E9                     u100_24:
  4964  01E9                     i1l1886:
  4965                           
  4966                           ;main.c: 264:             iled = 0;
  4967  01E9  01FA               	clrf	sec_tick_work@iled
  4968  01EA                     i1l423:
  4969  01EA  0008               	return
  4970  01EB                     __end_of_sec_tick_work:
  4971                           
  4972                           	psect	text34
  4973  04CD                     __ptext34:	
  4974 ;; *************** function _toggle_tone *****************
  4975 ;; Defined at:
  4976 ;;		line 66 in file "main.c"
  4977 ;; Parameters:    Size  Location     Type
  4978 ;;		None
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;		None
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  1    wreg      void 
  4983 ;; Registers used:
  4984 ;;		status,0
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMMON   BANK0   BANK1
  4990 ;;      Params:         0       0       0
  4991 ;;      Locals:         0       0       0
  4992 ;;      Temps:          0       0       0
  4993 ;;      Totals:         0       0       0
  4994 ;;Total ram usage:        0 bytes
  4995 ;; Hardware stack levels used: 1
  4996 ;; This function calls:
  4997 ;;		Nothing
  4998 ;; This function is called by:
  4999 ;;		_sec_tick_work
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003  04CD                     _toggle_tone:	
  5004                           ;psect for function _toggle_tone
  5005                           
  5006  04CD                     i1l1762:	
  5007                           ;incstack = 0
  5008                           ; Regs used in _toggle_tone: [status,0]
  5009                           
  5010                           
  5011                           ;main.c: 67:     INTCONbits.TMR0IE = ~INTCONbits.TMR0IE;
  5012  04CD  1003               	clrc
  5013  04CE  1E8B               	btfss	11,5	;volatile
  5014  04CF  1403               	setc
  5015  04D0  1803               	btfsc	3,0
  5016  04D1  2CD3               	goto	u82_21
  5017  04D2  2CD5               	goto	u82_20
  5018  04D3                     u82_21:
  5019  04D3  168B               	bsf	11,5	;volatile
  5020  04D4  2CD6               	goto	u83_24
  5021  04D5                     u82_20:
  5022  04D5  128B               	bcf	11,5	;volatile
  5023  04D6                     u83_24:
  5024  04D6                     i1l268:
  5025  04D6  0008               	return
  5026  04D7                     __end_of_toggle_tone:
  5027                           
  5028                           	psect	text35
  5029  0324                     __ptext35:	
  5030 ;; *************** function _rele_tick *****************
  5031 ;; Defined at:
  5032 ;;		line 227 in file "main.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;		None
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;		None
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  1    wreg      void 
  5039 ;; Registers used:
  5040 ;;		wreg, status,2, status,0
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMMON   BANK0   BANK1
  5046 ;;      Params:         0       0       0
  5047 ;;      Locals:         0       0       0
  5048 ;;      Temps:          2       0       0
  5049 ;;      Totals:         2       0       0
  5050 ;;Total ram usage:        2 bytes
  5051 ;; Hardware stack levels used: 1
  5052 ;; This function calls:
  5053 ;;		Nothing
  5054 ;; This function is called by:
  5055 ;;		_sec_tick_work
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058                           
  5059  0324                     _rele_tick:	
  5060                           ;psect for function _rele_tick
  5061                           
  5062  0324                     i1l1784:	
  5063                           ;incstack = 0
  5064                           ; Regs used in _rele_tick: [wreg+status,2+status,0]
  5065                           
  5066                           
  5067                           ;main.c: 228:     if (FLAGS.bits.RELE_POW_WAIT) {
  5068  0324  1EFC               	btfss	_FLAGS,5
  5069  0325  2B27               	goto	u87_21
  5070  0326  2B28               	goto	u87_20
  5071  0327                     u87_21:
  5072  0327  2B4D               	goto	i1l411
  5073  0328                     u87_20:
  5074  0328                     i1l1786:
  5075                           
  5076                           ;main.c: 229:         if (time_pow_s > 0) {
  5077  0328  0020               	movlb	0	; select bank0
  5078  0329  0836               	movf	_time_pow_s,w
  5079  032A  1903               	btfsc	3,2
  5080  032B  2B2D               	goto	u88_21
  5081  032C  2B2E               	goto	u88_20
  5082  032D                     u88_21:
  5083  032D  2B31               	goto	i1l401
  5084  032E                     u88_20:
  5085  032E                     i1l1788:
  5086                           
  5087                           ;main.c: 230:             time_pow_s--;
  5088  032E  3001               	movlw	1
  5089  032F  02B6               	subwf	_time_pow_s,f
  5090                           
  5091                           ;main.c: 231:         } else {
  5092  0330  2B4D               	goto	i1l411
  5093  0331                     i1l401:
  5094                           
  5095                           ;main.c: 232:             if (FLAGS.bits.RELE_CON_WAIT) {
  5096  0331  1F7C               	btfss	_FLAGS,6
  5097  0332  2B34               	goto	u89_21
  5098  0333  2B35               	goto	u89_20
  5099  0334                     u89_21:
  5100  0334  2B49               	goto	i1l409
  5101  0335                     u89_20:
  5102  0335                     i1l404:	
  5103                           ;main.c: 233:                 do { LATCbits.LATC5 = 0; } while(0);
  5104                           
  5105  0335  0022               	movlb	2	; select bank2
  5106  0336  128E               	bcf	14,5	;volatile
  5107  0337                     i1l1790:
  5108                           
  5109                           ;main.c: 234:                 _delay((unsigned long)((1 * 1000)*(16000000/4000.0)));
  5110  0337  3015               	movlw	21
  5111  0338  00F1               	movwf	??_rele_tick+1
  5112  0339  304B               	movlw	75
  5113  033A  00F0               	movwf	??_rele_tick
  5114  033B  30BE               	movlw	190
  5115  033C                     u159_27:
  5116  033C  0B89               	decfsz	9,f
  5117  033D  2B3C               	goto	u159_27
  5118  033E  0BF0               	decfsz	??_rele_tick,f
  5119  033F  2B3C               	goto	u159_27
  5120  0340  0BF1               	decfsz	??_rele_tick+1,f
  5121  0341  2B3C               	goto	u159_27
  5122  0342  3200               	nop2
  5123  0343                     i1l1792:
  5124  0343  0022               	movlb	2	; select bank2
  5125  0344  120E               	bcf	14,4	;volatile
  5126  0345                     i1l1794:
  5127                           
  5128                           ;main.c: 236:                 FLAGS.bits.CLOSED = 1;
  5129  0345  157C               	bsf	_FLAGS,2
  5130  0346                     i1l1796:
  5131                           
  5132                           ;main.c: 237:                 FLAGS.bits.RELE_CON_WAIT = 0;
  5133  0346  137C               	bcf	_FLAGS,6
  5134  0347                     i1l1798:
  5135                           
  5136                           ;main.c: 238:                 FLAGS.bits.RELE_POW_WAIT = 0;
  5137  0347  12FC               	bcf	_FLAGS,5
  5138                           
  5139                           ;main.c: 239:             } else {
  5140  0348  2B4D               	goto	i1l411
  5141  0349                     i1l409:	
  5142                           ;main.c: 240:                 do { LATCbits.LATC5 = 0; } while(0);
  5143                           
  5144  0349  0022               	movlb	2	; select bank2
  5145  034A  128E               	bcf	14,5	;volatile
  5146  034B                     i1l410:
  5147                           
  5148                           ;main.c: 241:                 FLAGS.bits.CLOSED = 0;
  5149  034B  117C               	bcf	_FLAGS,2
  5150                           
  5151                           ;main.c: 242:                 FLAGS.bits.RELE_POW_WAIT = 0;
  5152  034C  12FC               	bcf	_FLAGS,5
  5153  034D                     i1l411:
  5154  034D  0008               	return
  5155  034E                     __end_of_rele_tick:
  5156                           
  5157                           	psect	text36
  5158  0298                     __ptext36:	
  5159 ;; *************** function _get_measure *****************
  5160 ;; Defined at:
  5161 ;;		line 123 in file "main.c"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;		None
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;  res             2    5[COMMON] unsigned int 
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  1    wreg      void 
  5168 ;; Registers used:
  5169 ;;		wreg, status,2, status,0, pclath, cstack
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMMON   BANK0   BANK1
  5175 ;;      Params:         0       0       0
  5176 ;;      Locals:         2       0       0
  5177 ;;      Temps:          1       0       0
  5178 ;;      Totals:         3       0       0
  5179 ;;Total ram usage:        3 bytes
  5180 ;; Hardware stack levels used: 1
  5181 ;; Hardware stack levels required when called: 2
  5182 ;; This function calls:
  5183 ;;		_start_alarm
  5184 ;;		i1_ADC_GetConversion
  5185 ;; This function is called by:
  5186 ;;		_sec_tick_work
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190  0298                     _get_measure:	
  5191                           ;psect for function _get_measure
  5192                           
  5193  0298                     i1l317:	
  5194                           ;incstack = 0
  5195                           ; Regs used in _get_measure: [wreg+status,2+status,0+pclath+cstack]
  5196                           ;main.c: 124:     static unsigned char measures;;main.c: 125:     do { LATCbits.LATC1 = 
      +                          1; } while(0);
  5197                           
  5198  0298  0022               	movlb	2	; select bank2
  5199  0299  148E               	bsf	14,1	;volatile
  5200  029A                     i1l319:	
  5201                           ;main.c: 126:     do { ANSELCbits.ANSC3 = 1; } while(0);
  5202                           
  5203  029A  0023               	movlb	3	; select bank3
  5204  029B  158E               	bsf	14,3	;volatile
  5205  029C                     i1l1764:
  5206                           
  5207                           ;main.c: 127:     unsigned res = ADC_GetConversion(PIN_WSP_STATE);
  5208  029C  3007               	movlw	7
  5209  029D  3183  23F5  3182   	fcall	i1_ADC_GetConversion
  5210  02A0  0871               	movf	?i1_ADC_GetConversion+1,w
  5211  02A1  00F6               	movwf	get_measure@res+1
  5212  02A2  0870               	movf	?i1_ADC_GetConversion,w
  5213  02A3  00F5               	movwf	get_measure@res
  5214  02A4                     i1l1766:
  5215  02A4  0023               	movlb	3	; select bank3
  5216  02A5  118E               	bcf	14,3	;volatile
  5217  02A6                     i1l1768:
  5218  02A6  0022               	movlb	2	; select bank2
  5219  02A7  108E               	bcf	14,1	;volatile
  5220  02A8                     i1l1770:
  5221                           
  5222                           ;main.c: 130:     if (res < BAD_WSP_VOLTAGE) measures++;
  5223  02A8  304E               	movlw	78
  5224  02A9  0276               	subwf	get_measure@res+1,w
  5225  02AA  3020               	movlw	32
  5226  02AB  1903               	skipnz
  5227  02AC  0275               	subwf	get_measure@res,w
  5228  02AD  1803               	skipnc
  5229  02AE  2AB0               	goto	u84_21
  5230  02AF  2AB1               	goto	u84_20
  5231  02B0                     u84_21:
  5232  02B0  2AB6               	goto	i1l1774
  5233  02B1                     u84_20:
  5234  02B1                     i1l1772:
  5235  02B1  3001               	movlw	1
  5236  02B2  00F4               	movwf	??_get_measure
  5237  02B3  0874               	movf	??_get_measure,w
  5238  02B4  07FB               	addwf	get_measure@measures,f
  5239  02B5  2AC0               	goto	i1l1778
  5240  02B6                     i1l1774:
  5241  02B6  309C               	movlw	156
  5242  02B7  0276               	subwf	get_measure@res+1,w
  5243  02B8  3041               	movlw	65
  5244  02B9  1903               	skipnz
  5245  02BA  0275               	subwf	get_measure@res,w
  5246  02BB  1C03               	skipc
  5247  02BC  2ABE               	goto	u85_21
  5248  02BD  2ABF               	goto	u85_20
  5249  02BE                     u85_21:
  5250  02BE  2AC0               	goto	i1l1778
  5251  02BF                     u85_20:
  5252  02BF                     i1l1776:
  5253  02BF  01FB               	clrf	get_measure@measures
  5254  02C0                     i1l1778:
  5255                           
  5256                           ;main.c: 132:     if (measures > 2) start_alarm();
  5257  02C0  3003               	movlw	3
  5258  02C1  027B               	subwf	get_measure@measures,w
  5259  02C2  1C03               	skipc
  5260  02C3  2AC5               	goto	u86_21
  5261  02C4  2AC6               	goto	u86_20
  5262  02C5                     u86_21:
  5263  02C5  2AC9               	goto	i1l329
  5264  02C6                     u86_20:
  5265  02C6                     i1l1780:
  5266  02C6  3184  2489  3182   	fcall	_start_alarm
  5267  02C9                     i1l329:
  5268  02C9  0008               	return
  5269  02CA                     __end_of_get_measure:
  5270                           
  5271                           	psect	text37
  5272  03F5                     __ptext37:	
  5273 ;; *************** function i1_ADC_GetConversion *****************
  5274 ;; Defined at:
  5275 ;;		line 112 in file "mcc_generated_files/adc.c"
  5276 ;; Parameters:    Size  Location     Type
  5277 ;;  channel         1    wreg     enum E2178
  5278 ;; Auto vars:     Size  Location     Type
  5279 ;;  channel         1    3[COMMON] enum E2178
  5280 ;; Return value:  Size  Location     Type
  5281 ;;                  2    0[COMMON] unsigned short 
  5282 ;; Registers used:
  5283 ;;		wreg, status,2, status,0
  5284 ;; Tracked objects:
  5285 ;;		On entry : 0/0
  5286 ;;		On exit  : 0/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMMON   BANK0   BANK1
  5289 ;;      Params:         2       0       0
  5290 ;;      Locals:         1       0       0
  5291 ;;      Temps:          1       0       0
  5292 ;;      Totals:         4       0       0
  5293 ;;Total ram usage:        4 bytes
  5294 ;; Hardware stack levels used: 1
  5295 ;; This function calls:
  5296 ;;		Nothing
  5297 ;; This function is called by:
  5298 ;;		_get_measure
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302  03F5                     i1_ADC_GetConversion:	
  5303                           ;psect for function i1_ADC_GetConversion
  5304                           
  5305                           
  5306                           ;incstack = 0
  5307                           ; Regs used in i1_ADC_GetConversion: [wreg+status,2+status,0]
  5308                           ;i1ADC_GetConversion@channel stored from wreg
  5309  03F5  00F3               	movwf	i1ADC_GetConversion@channel
  5310  03F6                     i1l1746:
  5311                           
  5312                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  5313  03F6  0873               	movf	i1ADC_GetConversion@channel,w
  5314  03F7  00F2               	movwf	??i1_ADC_GetConversion
  5315  03F8  0DF2               	rlf	??i1_ADC_GetConversion,f
  5316  03F9  0DF2               	rlf	??i1_ADC_GetConversion,f
  5317  03FA  0021               	movlb	1	; select bank1
  5318  03FB  081D               	movf	29,w	;volatile
  5319  03FC  0672               	xorwf	??i1_ADC_GetConversion,w
  5320  03FD  3983               	andlw	-125
  5321  03FE  0672               	xorwf	??i1_ADC_GetConversion,w
  5322  03FF  009D               	movwf	29	;volatile
  5323  0400                     i1l1748:
  5324                           
  5325                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  5326  0400  141D               	bsf	29,0	;volatile
  5327  0401                     i1l1750:
  5328                           
  5329                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  5330  0401  3006               	movlw	6
  5331  0402                     u160_27:
  5332  0402  0B89               	decfsz	9,f
  5333  0403  2C02               	goto	u160_27
  5334  0404  3200               	nop2
  5335  0405                     i1l1752:
  5336                           
  5337                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  5338  0405  0021               	movlb	1	; select bank1
  5339  0406  149D               	bsf	29,1	;volatile
  5340  0407                     i1l63:	
  5341                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  5342                           
  5343                           
  5344                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  5345  0407  189D               	btfsc	29,1	;volatile
  5346  0408  2C0A               	goto	u81_21
  5347  0409  2C0B               	goto	u81_20
  5348  040A                     u81_21:
  5349  040A  2C07               	goto	i1l63
  5350  040B                     u81_20:
  5351  040B                     i1l1754:
  5352                           
  5353                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  5354  040B  081C               	movf	28,w	;volatile
  5355  040C  00F1               	movwf	?i1_ADC_GetConversion+1
  5356  040D  081B               	movf	27,w	;volatile
  5357  040E  00F0               	movwf	?i1_ADC_GetConversion
  5358  040F                     i1l66:
  5359  040F  0008               	return
  5360  0410                     __end_ofi1_ADC_GetConversion:
  5361                           
  5362                           	psect	text38
  5363  0489                     __ptext38:	
  5364 ;; *************** function _start_alarm *****************
  5365 ;; Defined at:
  5366 ;;		line 112 in file "main.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;		None
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;		None
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  1    wreg      void 
  5373 ;; Registers used:
  5374 ;;		wreg, status,2, status,0, pclath, cstack
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMMON   BANK0   BANK1
  5380 ;;      Params:         0       0       0
  5381 ;;      Locals:         0       0       0
  5382 ;;      Temps:          0       0       0
  5383 ;;      Totals:         0       0       0
  5384 ;;Total ram usage:        0 bytes
  5385 ;; Hardware stack levels used: 1
  5386 ;; Hardware stack levels required when called: 1
  5387 ;; This function calls:
  5388 ;;		i1_go_close
  5389 ;;		i1_go_close_alt
  5390 ;; This function is called by:
  5391 ;;		_get_measure
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395  0489                     _start_alarm:	
  5396                           ;psect for function _start_alarm
  5397                           
  5398  0489                     i1l1740:	
  5399                           ;incstack = 0
  5400                           ; Regs used in _start_alarm: [wreg+status,2+status,0+pclath+cstack]
  5401                           
  5402                           
  5403                           ;main.c: 113:     FLAGS.bits.ALARM = 1;
  5404  0489  147C               	bsf	_FLAGS,0
  5405  048A                     i1l308:	
  5406                           ;main.c: 114:     do { LATCbits.LATC0 = 1; } while(0);
  5407                           
  5408  048A  0022               	movlb	2	; select bank2
  5409  048B  140E               	bsf	14,0	;volatile
  5410  048C                     i1l309:
  5411                           
  5412                           ;main.c: 115:     INTCONbits.TMR0IE = 1;
  5413  048C  168B               	bsf	11,5	;volatile
  5414                           
  5415                           ;main.c: 116:     if (FLAGS.bits.NORMAL_WORK_MODE) {
  5416  048D  1CFC               	btfss	_FLAGS,1
  5417  048E  2C90               	goto	u80_21
  5418  048F  2C91               	goto	u80_20
  5419  0490                     u80_21:
  5420  0490  2C95               	goto	i1l1744
  5421  0491                     u80_20:
  5422  0491                     i1l1742:
  5423                           
  5424                           ;main.c: 117:         go_close();
  5425  0491  3183  23B9  3184   	fcall	i1_go_close
  5426                           
  5427                           ;main.c: 118:     } else {
  5428  0494  2C98               	goto	i1l312
  5429  0495                     i1l1744:
  5430                           
  5431                           ;main.c: 119:         go_close_alt();
  5432  0495  3184  24FC  3184   	fcall	i1_go_close_alt
  5433  0498                     i1l312:
  5434  0498  0008               	return
  5435  0499                     __end_of_start_alarm:
  5436                           
  5437                           	psect	text39
  5438  04FC                     __ptext39:	
  5439 ;; *************** function i1_go_close_alt *****************
  5440 ;; Defined at:
  5441 ;;		line 99 in file "main.c"
  5442 ;; Parameters:    Size  Location     Type
  5443 ;;		None
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;		None
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  1    wreg      void 
  5448 ;; Registers used:
  5449 ;;		None
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMMON   BANK0   BANK1
  5455 ;;      Params:         0       0       0
  5456 ;;      Locals:         0       0       0
  5457 ;;      Temps:          0       0       0
  5458 ;;      Totals:         0       0       0
  5459 ;;Total ram usage:        0 bytes
  5460 ;; Hardware stack levels used: 1
  5461 ;; This function calls:
  5462 ;;		Nothing
  5463 ;; This function is called by:
  5464 ;;		_start_alarm
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468  04FC                     i1_go_close_alt:	
  5469                           ;psect for function i1_go_close_alt
  5470                           
  5471  04FC                     i1l1738:	
  5472                           ;incstack = 0
  5473                           ; Regs used in i1_go_close_alt: []
  5474                           
  5475                           
  5476                           ;main.c: 100:     FLAGS.bits.CLOSED = 1;
  5477  04FC  157C               	bsf	_FLAGS,2
  5478  04FD                     i1l294:	
  5479                           ;main.c: 101:     do { LATCbits.LATC4 = 0; } while(0);
  5480                           
  5481  04FD  0022               	movlb	2	; select bank2
  5482  04FE  120E               	bcf	14,4	;volatile
  5483  04FF                     i1l296:	
  5484                           ;main.c: 102:     do { LATCbits.LATC5 = 1; } while(0);
  5485                           
  5486  04FF  168E               	bsf	14,5	;volatile
  5487  0500                     i1l298:
  5488  0500  0008               	return
  5489  0501                     __end_ofi1_go_close_alt:
  5490                           
  5491                           	psect	text40
  5492  03B9                     __ptext40:	
  5493 ;; *************** function i1_go_close *****************
  5494 ;; Defined at:
  5495 ;;		line 80 in file "main.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;		None
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;		None
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  1    wreg      void 
  5502 ;; Registers used:
  5503 ;;		wreg
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMMON   BANK0   BANK1
  5509 ;;      Params:         0       0       0
  5510 ;;      Locals:         0       0       0
  5511 ;;      Temps:          2       0       0
  5512 ;;      Totals:         2       0       0
  5513 ;;Total ram usage:        2 bytes
  5514 ;; Hardware stack levels used: 1
  5515 ;; This function calls:
  5516 ;;		Nothing
  5517 ;; This function is called by:
  5518 ;;		_start_alarm
  5519 ;; This function uses a non-reentrant model
  5520 ;;
  5521                           
  5522  03B9                     i1_go_close:	
  5523                           ;psect for function i1_go_close
  5524                           
  5525  03B9                     i1l1726:	
  5526                           ;incstack = 0
  5527                           ; Regs used in i1_go_close: [wreg]
  5528                           
  5529                           
  5530                           ;main.c: 81:     time_s = 0;
  5531  03B9  3000               	movlw	0
  5532  03BA  0020               	movlb	0	; select bank0
  5533  03BB  00AF               	movwf	_time_s+3
  5534  03BC  3000               	movlw	0
  5535  03BD  00AE               	movwf	_time_s+2
  5536  03BE  3000               	movlw	0
  5537  03BF  00AD               	movwf	_time_s+1
  5538  03C0  3000               	movlw	0
  5539  03C1  00AC               	movwf	_time_s
  5540  03C2                     i1l1728:
  5541  03C2  0022               	movlb	2	; select bank2
  5542  03C3  160E               	bsf	14,4	;volatile
  5543  03C4                     i1l281:
  5544                           
  5545                           ;main.c: 83:     _delay((unsigned long)((1 * 1000)*(16000000/4000.0)));
  5546  03C4  3015               	movlw	21
  5547  03C5  00F1               	movwf	??i1_go_close+1
  5548  03C6  304B               	movlw	75
  5549  03C7  00F0               	movwf	??i1_go_close
  5550  03C8  30BE               	movlw	190
  5551  03C9                     u161_27:
  5552  03C9  0B89               	decfsz	9,f
  5553  03CA  2BC9               	goto	u161_27
  5554  03CB  0BF0               	decfsz	??i1_go_close,f
  5555  03CC  2BC9               	goto	u161_27
  5556  03CD  0BF1               	decfsz	??i1_go_close+1,f
  5557  03CE  2BC9               	goto	u161_27
  5558  03CF  3200               	nop2
  5559  03D0                     i1l1730:
  5560  03D0  0022               	movlb	2	; select bank2
  5561  03D1  168E               	bsf	14,5	;volatile
  5562  03D2                     i1l283:
  5563                           
  5564                           ;main.c: 85:     time_pow_s = 10;
  5565  03D2  300A               	movlw	10
  5566  03D3  00F0               	movwf	??i1_go_close
  5567  03D4  0870               	movf	??i1_go_close,w
  5568  03D5  0020               	movlb	0	; select bank0
  5569  03D6  00B6               	movwf	_time_pow_s
  5570  03D7                     i1l1732:
  5571                           
  5572                           ;main.c: 86:     FLAGS.bits.RELE_POW_WAIT = 1;
  5573  03D7  16FC               	bsf	_FLAGS,5
  5574  03D8                     i1l1734:
  5575                           
  5576                           ;main.c: 87:     FLAGS.bits.RELE_CON_WAIT = 1;
  5577  03D8  177C               	bsf	_FLAGS,6
  5578  03D9                     i1l284:
  5579  03D9  0008               	return
  5580  03DA                     __end_ofi1_go_close:
  5581                           
  5582                           	psect	text41
  5583  0499                     __ptext41:	
  5584 ;; *************** function _TMR0_ISR *****************
  5585 ;; Defined at:
  5586 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  5587 ;; Parameters:    Size  Location     Type
  5588 ;;		None
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;		None
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  1    wreg      void 
  5593 ;; Registers used:
  5594 ;;		wreg, status,2, status,0, pclath, cstack
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMMON   BANK0   BANK1
  5600 ;;      Params:         0       0       0
  5601 ;;      Locals:         0       0       0
  5602 ;;      Temps:          0       0       0
  5603 ;;      Totals:         0       0       0
  5604 ;;Total ram usage:        0 bytes
  5605 ;; Hardware stack levels used: 1
  5606 ;; Hardware stack levels required when called: 1
  5607 ;; This function calls:
  5608 ;;		Absolute function
  5609 ;;		_TMR0_DefaultInterruptHandler
  5610 ;;		i1_switch_zum
  5611 ;; This function is called by:
  5612 ;;		_INTERRUPT_InterruptManager
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           
  5616  0499                     _TMR0_ISR:	
  5617                           ;psect for function _TMR0_ISR
  5618                           
  5619  0499                     i1l2014:	
  5620                           ;incstack = 0
  5621                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  5622                           
  5623                           
  5624                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  5625  0499  110B               	bcf	11,2	;volatile
  5626  049A                     i1l2016:
  5627                           
  5628                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  5629  049A  0020               	movlb	0	; select bank0
  5630  049B  083B               	movf	_timer0ReloadVal,w	;volatile
  5631  049C  0095               	movwf	21	;volatile
  5632  049D                     i1l2018:
  5633                           
  5634                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  5635  049D  0837               	movf	_TMR0_InterruptHandler,w
  5636  049E  0438               	iorwf	_TMR0_InterruptHandler+1,w
  5637  049F  1903               	btfsc	3,2
  5638  04A0  2CA2               	goto	u115_21
  5639  04A1  2CA3               	goto	u115_20
  5640  04A2                     u115_21:
  5641  04A2  2CA8               	goto	i1l200
  5642  04A3                     u115_20:
  5643  04A3                     i1l2020:
  5644                           
  5645                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  5646  04A3  0838               	movf	_TMR0_InterruptHandler+1,w
  5647  04A4  008A               	movwf	10
  5648  04A5  0837               	movf	_TMR0_InterruptHandler,w
  5649  04A6  000A               	callw
  5650  04A7  3184               	pagesel	$
  5651  04A8                     i1l200:
  5652  04A8  0008               	return
  5653  04A9                     __end_of_TMR0_ISR:
  5654                           
  5655                           	psect	text42
  5656  0519                     __ptext42:	
  5657 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5658 ;; Defined at:
  5659 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;		None
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;		None
  5664 ;; Return value:  Size  Location     Type
  5665 ;;                  1    wreg      void 
  5666 ;; Registers used:
  5667 ;;		None
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 0/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMMON   BANK0   BANK1
  5673 ;;      Params:         0       0       0
  5674 ;;      Locals:         0       0       0
  5675 ;;      Temps:          0       0       0
  5676 ;;      Totals:         0       0       0
  5677 ;;Total ram usage:        0 bytes
  5678 ;; Hardware stack levels used: 1
  5679 ;; This function calls:
  5680 ;;		Nothing
  5681 ;; This function is called by:
  5682 ;;		_TMR0_Initialize
  5683 ;;		_TMR0_ISR
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687  0519                     _TMR0_DefaultInterruptHandler:	
  5688                           ;psect for function _TMR0_DefaultInterruptHandler
  5689                           
  5690  0519                     i1l206:	
  5691                           ;incstack = 0
  5692                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  5693                           
  5694  0519  0008               	return
  5695  051A                     __end_of_TMR0_DefaultInterruptHandler:
  5696                           
  5697                           	psect	text43
  5698  04B6                     __ptext43:	
  5699 ;; *************** function i1_switch_zum *****************
  5700 ;; Defined at:
  5701 ;;		line 62 in file "main.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;		None
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;		None
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  1    wreg      void 
  5708 ;; Registers used:
  5709 ;;		status,0
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMMON   BANK0   BANK1
  5715 ;;      Params:         0       0       0
  5716 ;;      Locals:         0       0       0
  5717 ;;      Temps:          0       0       0
  5718 ;;      Totals:         0       0       0
  5719 ;;Total ram usage:        0 bytes
  5720 ;; Hardware stack levels used: 1
  5721 ;; This function calls:
  5722 ;;		Nothing
  5723 ;; This function is called by:
  5724 ;;		_sec_tick_work
  5725 ;;		_TMR0_ISR
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729  04B6                     i1_switch_zum:	
  5730                           ;psect for function i1_switch_zum
  5731                           
  5732  04B6                     i1l263:	
  5733                           ;incstack = 0
  5734                           ; Regs used in i1_switch_zum: [status,0]
  5735                           ;main.c: 63:     do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  5736                           
  5737  04B6                     i1l1800:
  5738  04B6  1003               	clrc
  5739  04B7  0022               	movlb	2	; select bank2
  5740  04B8  1E8C               	btfss	12,5	;volatile
  5741  04B9  1403               	setc
  5742  04BA  1803               	btfsc	3,0
  5743  04BB  2CBD               	goto	u90_21
  5744  04BC  2CC0               	goto	u90_20
  5745  04BD                     u90_21:
  5746  04BD  0022               	movlb	2	; select bank2
  5747  04BE  168C               	bsf	12,5	;volatile
  5748  04BF  2CC2               	goto	u91_24
  5749  04C0                     u90_20:
  5750  04C0  0022               	movlb	2	; select bank2
  5751  04C1  128C               	bcf	12,5	;volatile
  5752  04C2                     u91_24:
  5753  04C2                     i1l265:
  5754  04C2  0008               	return
  5755  04C3                     __end_ofi1_switch_zum:
  5756  007E                     btemp	set	126	;btemp
  5757  007E                     int$flags	set	126
  5758  007E                     wtemp0	set	126
  5759                           
  5760                           	psect	idloc
  5761                           
  5762                           ;Config register IDLOC0 @ 0x8000
  5763                           ;	unspecified, using default values
  5764  8000                     	org	32768
  5765  8000  3FFF               	dw	16383
  5766                           
  5767                           ;Config register IDLOC1 @ 0x8001
  5768                           ;	unspecified, using default values
  5769  8001                     	org	32769
  5770  8001  3FFF               	dw	16383
  5771                           
  5772                           ;Config register IDLOC2 @ 0x8002
  5773                           ;	unspecified, using default values
  5774  8002                     	org	32770
  5775  8002  3FFF               	dw	16383
  5776                           
  5777                           ;Config register IDLOC3 @ 0x8003
  5778                           ;	unspecified, using default values
  5779  8003                     	org	32771
  5780  8003  3FFF               	dw	16383
  5781                           
  5782                           	psect	config
  5783                           
  5784                           ;Config register CONFIG1 @ 0x8007
  5785                           ;	Oscillator Selection
  5786                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5787                           ;	Watchdog Timer Enable
  5788                           ;	WDTE = ON, WDT enabled
  5789                           ;	Power-up Timer Enable
  5790                           ;	PWRTE = OFF, PWRT disabled
  5791                           ;	MCLR Pin Function Select
  5792                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5793                           ;	Flash Program Memory Code Protection
  5794                           ;	CP = OFF, Program memory code protection is disabled
  5795                           ;	Data Memory Code Protection
  5796                           ;	CPD = OFF, Data memory code protection is disabled
  5797                           ;	Brown-out Reset Enable
  5798                           ;	BOREN = ON, Brown-out Reset enabled
  5799                           ;	Clock Out Enable
  5800                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5801                           ;	Internal/External Switchover
  5802                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5803                           ;	Fail-Safe Clock Monitor Enable
  5804                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5805  8007                     	org	32775
  5806  8007  3FFC               	dw	16380
  5807                           
  5808                           ;Config register CONFIG2 @ 0x8008
  5809                           ;	Flash Memory Self-Write Protection
  5810                           ;	WRT = OFF, Write protection off
  5811                           ;	PLL Enable
  5812                           ;	PLLEN = OFF, 4x PLL disabled
  5813                           ;	Stack Overflow/Underflow Reset Enable
  5814                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5815                           ;	Brown-out Reset Voltage Selection
  5816                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5817                           ;	Low-Voltage Programming Enable
  5818                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5819  8008                     	org	32776
  5820  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    12
    Data        0
    BSS         16
    Persistent  37
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80     12      28
    BANK1            32      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> switch_zum(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i1_switch_zum(), switch_zum(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sec_tick_work(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sec_tick_work(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR2_CallBack->_sec_tick_work
    _sec_tick_work->_get_measure
    _get_measure->i1_ADC_GetConversion
    _start_alarm->i1_go_close

Critical Paths under _main in BANK0

    _main->_fun_work
    _main->_switch_wm
    _switch_wm->_beep
    _start_setup->_get_fun_full
    _start_setup->_get_jump_full
    _get_jump_full->_ADC_GetConversion
    _get_fun_full->_ADC_GetConversion
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _povorot->_go_close
    _get_voltage->_EEPROM_WriteByte
    _get_jump->_ADC_GetConversion
    _get_fun->_ADC_GetConversion
    _fun_work->_beep

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4048
                           _fun_work
                            _get_fun
                           _get_jump
                        _get_voltage
                            _povorot
                        _start_setup
                          _switch_wm
 ---------------------------------------------------------------------------------
 (1) _switch_wm                                            2     2      0    1308
                                             10 BANK0      2     2      0
                               _beep
                           _go_close
                       _go_close_alt
 ---------------------------------------------------------------------------------
 (1) _start_setup                                          0     0      0     836
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                       _get_fun_full
                      _get_jump_full
 ---------------------------------------------------------------------------------
 (2) _get_jump_full                                        4     4      0      70
                                              4 BANK0      4     4      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (2) _get_fun_full                                         4     4      0      70
                                              4 BANK0      4     4      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     348
                     _ADC_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      1     1      0     174
                                              2 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _povorot                                              0     0      0       0
                           _go_close
                            _go_open
 ---------------------------------------------------------------------------------
 (1) _get_voltage                                          4     4      0     506
                                              5 BANK0      4     4      0
                  _ADC_GetConversion
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_WriteByte                                     5     4      1     371
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (1) _get_jump                                             3     3      0      45
                                              4 BANK0      3     3      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (1) _get_fun                                              3     3      0      45
                                              4 BANK0      3     3      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _fun_work                                             2     2      0    1308
                                             10 BANK0      2     2      0
                               _beep
                           _go_close
                       _go_close_alt
                            _go_open
                        _go_open_alt
 ---------------------------------------------------------------------------------
 (2) _go_open_alt                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_open                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _go_close_alt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_close                                             2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _beep                                                10     4      6    1308
                                              0 BANK0     10     4      6
                         _switch_zum
 ---------------------------------------------------------------------------------
 (3) _switch_zum                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0      67
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0      67
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR2_CallBack                                        0     0      0      67
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                      _sec_tick_work *
 ---------------------------------------------------------------------------------
 (8) _sec_tick_work                                        1     1      0      67
                                              7 COMMON     1     1      0
                        _get_measure
                          _rele_tick
                        _toggle_tone
                       i1_switch_zum
 ---------------------------------------------------------------------------------
 (9) _toggle_tone                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _rele_tick                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _get_measure                                          3     3      0      67
                                              4 COMMON     3     3      0
                        _start_alarm
                i1_ADC_GetConversion
 ---------------------------------------------------------------------------------
 (10) i1_ADC_GetConversion                                 4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _start_alarm                                         0     0      0       0
                         i1_go_close
                     i1_go_close_alt
 ---------------------------------------------------------------------------------
 (11) i1_go_close_alt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i1_go_close                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                       i1_switch_zum *
 ---------------------------------------------------------------------------------
 (9) i1_switch_zum                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _fun_work
     _beep
       _switch_zum
     _go_close
     _go_close_alt
     _go_open
     _go_open_alt
   _get_fun
     _ADC_GetConversion
   _get_jump
     _ADC_GetConversion
   _get_voltage
     _ADC_GetConversion
     _EEPROM_WriteByte
   _povorot
     _go_close
     _go_open
   _start_setup
     _SYSTEM_Initialize
       _ADC_Initialize
       _FVR_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR2_Initialize
         _TMR2_SetInterruptHandler
       _WDT_Initialize
     _TMR0_SetInterruptHandler
     _TMR2_SetInterruptHandler
     _TMR2_StartTimer
     _get_fun_full
       _ADC_GetConversion
     _get_jump_full
       _ADC_GetConversion
   _switch_wm
     _beep
     _go_close
     _go_close_alt

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     i1_switch_zum *
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _sec_tick_work *
         _get_measure
           _start_alarm
             i1_go_close
             i1_go_close_alt
           i1_ADC_GetConversion
         _rele_tick
         _toggle_tone
         i1_switch_zum

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      29       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      C      1C       6       35.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      29       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Apr 28 17:19:00 2022

        __end_of_TMR2_SetInterruptHandler 04EC                          get_fun_full@flag 0027  
                      get_fun@fun_counter 0035                     __end_of_sec_tick_work 01EB  
                                      l31 0510                                        l25 0425  
                                      l28 04E5                                        l63 03AD  
                                      l48 04DE                                        l66 03B8  
                                      l92 0450                                        _RD 0CA8  
                                      _WR 0CA9                             ?_go_close_alt 0070  
                            ?_get_voltage 0070                            ?_get_jump_full 0070  
                  __end_of_FVR_Initialize 0515                           _timer0ReloadVal 003B  
                                     l203 04F1                                       l301 04F3  
                                     l213 0514                                       l142 0517  
                                     l303 04F5                                       l305 04F6  
                                     l139 0478                                       l334 01EB  
                                     l263 047C                                       l503 02FB  
                                     l167 04EB                                       l336 01ED  
                                     l352 00DC                                       l440 0148  
                                     l265 0488                                       l281 0381  
                                     l506 0323                                       l354 00DE  
                                     l283 0390                                       l291 04CC  
                                     l347 0228                                       l187 043B  
                                     l363 011E                                       l284 0397  
                                     l372 0229                                       l452 0375  
                                     l428 00DB                                       l277 02F8  
                                     l437 0093                                       l381 0262  
                                     l365 0120                                       l445 0154  
                                     l294 04F8                                       l446 0168  
                                     l287 04C3                                       l367 0122  
                                     l296 04FA                                       l289 04C5  
                                     l298 04FB                                       l386 0169  
                                     l482 03DD                                       l395 01A9  
                                     l397 01AB                                       l477 0297  
                                     _GIE 005F                               _start_alarm 0489  
                                     _PR2 001B                                       u920 03B1  
                                     u921 03B0                                       u930 0486  
                                     u931 0483                                       u944 0488  
                             _start_setup 0263                              ?_go_open_alt 0070  
                         _TMR2_Initialize 0466                                       wreg 0009  
                              i1_go_close 03B9                               get_jump@res 0025  
                                    l2000 0310                                      l2010 031A  
                                    l2002 0314                                      l2012 0321  
                                    l2004 0315                                      l2100 00D2  
                                    l2110 004B                                      l2102 003B  
                                    l2030 01EF                                      l2006 0317  
                                    l2120 006C                                      l2112 004F  
                                    l2104 003F                                      l2040 020B  
                                    l2032 01F8                                      l2008 0319  
                                    l2200 0295                                      l2130 007F  
                                    l2122 0070                                      l2114 0053  
                                    l2106 0043                                      l2050 0223  
                                    l2042 020F                                      l2034 01FA  
                                    l2124 0074                                      l2116 0056  
                                    l2108 0047                                      l2052 0227  
                                    l2044 0216                                      l2036 01FC  
                                    l2060 0236                                      l2140 0133  
                                    l2132 0123                                      l2126 0078  
                                    l2118 0068                                      l2046 021A  
                                    l2038 0206                                      l2070 0254  
                                    l2062 0240                                      l2150 0360  
                                    l2142 014C                                      l2134 0127  
                                    l2222 03DA                                      l2128 007C  
                                    l2048 021C                                      l2072 0256  
                                    l2064 0245                                      l2056 022B  
                                    l2160 036F                                      l2080 0094  
                                    l2144 0151                                      l2136 012B  
                                    l2224 03E0                                      l2074 025D  
                                    l2066 0249                                      l2058 0234  
                                    l2146 034E                                      l2082 00A4  
                                    l2090 00B3                                      l2170 027B  
                                    l2162 0263                                      l2138 0130  
                                    l2226 03E4                                      l2076 0261  
                                    l2068 0250                                      l2156 0361  
                                    l2148 0357                                      l2092 00C3  
                                    l2084 00A8                                      l2180 0283  
                                    l2172 027D                                      l2164 0266  
                                    l2158 036A                                      l2094 00C7  
                                    l2086 00AC                                      l2190 028B  
                                    l2182 0285                                      l2174 027E  
                                    l2166 0267                                      l2096 00CB  
                                    l2088 00B0                                      l2192 028C  
                                    l2184 0287                                      l2176 027F  
                                    l2168 0278                                      l2098 00CF  
                                    l1810 0447                                      l1802 043C  
                                    l2194 028D                                      l2186 0288  
                                    l2178 0281                                      l1900 02CF  
                                    l1812 044C                                      l1804 043F  
                                    l1820 050D                                      l2196 028F  
                                    l2188 0289                                      l1910 02ED  
                                    l1902 02D2                                      l1822 0511  
                                    l1814 04DF                                      l1806 0442  
                                    l1830 0466                                      l2198 0292  
                                    l1904 02D6                                      l1912 02F2  
                                    l1920 0395                                      l1824 04D7  
                                    l1816 04E2                                      l1808 0444  
                                    l1760 04EC                                      l1840 0475  
                                    l1832 0469                                      l1906 02DB  
                                    l1922 0396                                      l1914 0376  
                                    l1826 04DA                                      l1818 04E3  
                                    l1850 0433                                      l1842 0426  
                                    l1834 046A                                      l1908 02E1  
                                    l1916 037F                                      l1932 04F7  
                                    l1860 03AB                                      l1828 04DB  
                                    l1852 0434                                      l1844 042B  
                                    l1836 046B                                      l1940 00EB  
                                    l1918 038E                                      l1926 04C6  
                                    l1934 04F2                                      l1862 03B1  
                                    l1854 039A                                      l1846 042E  
                                    l1758 04E6                                      l1838 046D  
                                    l1950 0108                                      l1942 00F4  
                                    l1928 04CB                                      l1856 03A6  
                                    l1848 0432                                      l1952 0109  
                                    l1944 00F9                                      l1936 00E0  
                                    l1866 047C                                      l1858 03A7  
                                    l1890 0515                                      l1962 0119  
                                    l1954 010C                                      l1946 00FD  
                                    l1938 00E2                                      l1970 017F  
                                    l1956 0113                                      l1948 0104  
                                    l1980 0194                                      l1972 0184  
                                    l1964 016B                                      l1958 0117  
                                    l1990 01A4                                      l1982 0197  
                                    l1974 0188                                      l1966 016D  
                                    l1896 02CA                                      l1992 02FB  
                                    l1888 0410                                      l1984 019E  
                                    l1976 018F                                      l1968 0176  
                                    l1898 02CD                                      l1994 0300  
                                    l1986 01A2                                      l1978 0193  
                                    l1996 0305                                      l1998 0306  
                                    u1020 02E1                                      u1100 019E  
                                    u1021 02E0                                      u1101 019D  
                                    u1030 02F8                                      u1110 01A9  
                                    u1031 02F7                                      u1111 01A8  
                                    u1200 0240                                      u1120 0300  
                                    u1040 00F4                                      u1201 023F  
                                    u1121 02FF                                      u1041 00F3  
                                    u1210 0250                                      u1130 0320  
                                    u1050 0104                                      u1211 024F  
                                    u1131 031E                                      u1051 0103  
                                    u1220 025D                                      u1300 00CF  
                                    u1060 0113                                      u1221 025C  
                                    u1301 00CE                                      u1061 0112  
                                    u1310 003F                                      u1230 00A4  
                                    u1070 011E                                      u1311 003E  
                                    u1231 00A3                                      u1071 011D  
                                    u1320 0043                                      u1144 0321  
                                    u1240 00A8                                      u1080 017F  
                                    u1400 0127                                      u1321 0042  
                                    u1241 00A7                                      u1081 017E  
                                    u1401 0126                                      u1330 0047  
                                    u1170 0206                                      u1250 00AC  
                                    u1090 018F                                      u1410 012B  
                                    u1331 0046                                      u1171 0205  
                                    u1251 00AB                                      u1091 018E  
                                    u1411 012A                                      u1340 004B  
                                    u1180 0216                                      u1260 00B0  
                                    u1420 0130                                      u1341 004A  
                                    u1181 0215                                      u1261 00AF  
                                    u1421 012F                                      _LATA 010C  
                                    u1350 004F                                      u1190 0223  
                                    u1270 00C3                                      u1430 014C  
                                    u1351 004E                                      u1191 0222  
                                    u1271 00C2                                      u1431 014B  
                                    _LATC 010E                                      u1360 006C  
                                    u1280 00C7                                      u1440 0151  
                                    u1520 03E4                                      u1361 006B  
                                    u1281 00C6                                      u1441 0150  
                                    u1521 03E3                                      u1370 0070  
                                    u1450 0360                                      u1290 00CB  
                                    u1371 006F                                      u1451 035F  
                                    u1291 00CA                                      u1380 0074  
                                    u1460 0375                                      u1381 0073  
                                    u1461 0374                                      u1390 0078  
                                    u1391 0077                                      u1557 03A8  
                                    u1567 0387                                      u1577 02D3  
                                    u1587 02E7                                      i1l63 0407  
                                    i1l66 040F                                      _TMR0 0015  
                                    _TMR2 001A                                      _WREN 0CAA  
                                    _WPUA 020C                                      _WPUC 020E  
                                    _beep 02CA                                      _main 03DA  
                    EEPROM_WriteByte@addr 0023                                      btemp 007E  
                          ??_get_fun_full 0024                                      start 0026  
                    __end_ofi1_switch_zum 04C3                   get_fun_full@fun_counter 0034  
                          ??_go_close_alt 0020                   __end_of_TMR0_Initialize 043C  
          ??_TMR0_DefaultInterruptHandler 0070                           ?_FVR_Initialize 0070  
           __end_of_OSCILLATOR_Initialize 04E6                                     ?_beep 0020  
                                   ?_main 0070                                     _EEADR 0191  
                                   _FLAGS 007C                                     _T2CON 001C  
                                   i1l110 0012                                     i1l200 04A8  
                                   i1l115 0024                                     i1l116 0024  
                                   i1l206 0519                                     i1l312 0498  
                                   i1l160 0465                                     i1l401 0331  
                                   i1l410 034B                                     i1l170 0518  
                                   i1l411 034D                                     i1l308 048A  
                                   i1l404 0335                                     i1l164 04B5  
                                   i1l309 048C                                     i1l317 0298  
                                   i1l263 04B6                                     i1l319 029A  
                                   i1l423 01EA                                     i1l265 04C2  
                                   i1l281 03C4                                     i1l329 02C9  
                                   i1l409 0349                                     i1l283 03D2  
                                   i1l284 03D9                                     i1l268 04D6  
                                   i1l294 04FD                                     i1l296 04FF  
                                   i1l298 0500                                     u80_20 0491  
                                   u80_21 0490                                     u81_20 040B  
                                   u81_21 040A                                     _TRISA 008C  
                                   _TRISC 008E                                     u90_20 04C0  
                                   u82_20 04D5                                     u90_21 04BD  
                                   u82_21 04D3                                     u91_24 04C2  
                                   u83_24 04D6                                     u84_20 02B1  
                                   u84_21 02B0                                     u85_20 02BF  
                                   u85_21 02BE                                     u86_20 02C6  
                                   u86_21 02C5                                     u87_20 0328  
                                   u95_20 01C0                                     u87_21 0327  
                                   u95_21 01BF                                     u88_20 032E  
                                   u96_20 01CA                                     u88_21 032D  
                                   u96_21 01C7                                     u89_20 0335  
                                   u89_21 0334                                     u97_24 01CC  
                                   u98_20 01DD                                     u98_21 01DC  
                                   u99_20 01E7                                     u99_21 01E4  
               ?_TMR0_SetInterruptHandler 0020                          __end_of_TMR0_ISR 04A9  
                         __end_of_get_fun 0229                          __end_of_TMR2_ISR 0466  
                         __end_of_go_open 04CD                                     beep@i 0029  
                                   beep@j 0028                            _WDT_Initialize 050D  
                                   pclath 000A                           __end_of_povorot 00DC  
                                   status 0003                                     wtemp0 007E  
                         _TMR2_StartTimer 0515                              get_voltage@q 0028  
                         __initialization 0027                              __end_of_beep 02F9  
                            __end_of_main 03F5                           ??_get_jump_full 0024  
                 __end_of_TMR2_Initialize 0479               ?_INTERRUPT_InterruptManager 0070  
                                  ??_beep 0026                  _TMR2_SetInterruptHandler 04E6  
                                  ??_main 002C                    __end_of_WDT_Initialize 0511  
                             ?i1_go_close 0070                       i1_ADC_GetConversion 03F5  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _ADRESH 009C                                    _ADRESL 009B  
                                  _EEDATA 0193                                    _EECON2 0196  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  _ANSELC 018E                                    _BORCON 0116  
                                  u100_24 01E9                                    u101_20 04B0  
                                  u101_21 04AF                                    i1l2020 04A3  
                                  i1l2014 0499                                    i1l2022 0451  
                                  i1l2016 049A                                    i1l2024 0453  
                                  i1l2018 049D                                    i1l2026 0460  
                                  i1l2210 000A                                    i1l2028 0463  
                                  i1l2212 000E                                    i1l2214 0016  
                                  i1l2216 001B                                    i1l2208 0006  
                                  i1l2218 0020                                    i1l1800 04B6  
                                  i1l1730 03D0                                    i1l1732 03D7  
                                  i1l1740 0489                                    i1l1734 03D8  
                                  i1l1726 03B9                                    i1l1742 0491  
                                  i1l1750 0401                                    i1l1728 03C2  
                                  i1l1744 0495                                    i1l1752 0405  
                                  i1l1738 04FC                                    i1l1754 040B  
                                  i1l1746 03F6                                    i1l1770 02A8  
                                  i1l1762 04CD                                    i1l1748 0400  
                                  i1l1780 02C6                                    i1l1772 02B1  
                                  i1l1764 029C                                    i1l1774 02B6  
                                  i1l1766 02A4                                    i1l1790 0337  
                                  i1l1870 01AF                                    u115_20 04A3  
                                  i1l1776 02BF                                    i1l1768 02A6  
                                  i1l1792 0343                                    i1l1784 0324  
                                  i1l1880 01D3                                    i1l1872 01BC  
                                  u115_21 04A2                                    i1l1778 02C0  
                                  i1l1794 0345                                    i1l1786 0328  
                                  i1l1882 01D7                                    i1l1874 01C0  
                                  i1l1796 0346                                    i1l1788 032E  
                                  i1l1884 01DD                                    i1l1876 01CC  
                                  i1l1868 01AC                                    i1l1892 04A9  
                                  i1l1798 0347                                    i1l1886 01E9  
                                  i1l1878 01D0                                    i1l1894 04B0  
                                  u116_20 0460                                    u116_21 045F  
                                  u150_20 001B                                    u150_21 001A  
                                  u151_20 0020                                    u151_21 001F  
                                  u160_27 0402                                    u161_27 03C9  
                                  u147_20 000A                                    _FVRCON 0117  
                                  u147_21 0009                                    u148_20 000E  
                                  u148_21 000D                                    u149_20 0016  
                                  u149_21 0015                                    u159_27 033C  
                        _GOOD_WSP_VOLTAGE 0505                                    _OSCCON 0099  
                                  _WDTCON 0097                      ?i1_ADC_GetConversion 0070  
                        __end_of_get_jump 0263                          __end_of_go_close 0398  
                    _switch_zum$intlevel0 047C                          ?_TMR0_Initialize 0070  
                        __end_of_fun_work 0094                                    _time_s 002C  
                __end_of_EEPROM_WriteByte 0324                                 ??_get_fun 0024  
                               ??_go_open 0020                      __end_of_get_fun_full 0123  
                         ?_WDT_Initialize 0070                            get_measure@res 0075  
                  EEPROM_WriteByte@status 0024                  ADC_GetConversion@channel 0023  
                               ??_povorot 0022                   __end_of_TMR2_StartTimer 0518  
TMR0_SetInterruptHandler@InterruptHandler 0020  TMR2_SetInterruptHandler@InterruptHandler 0020  
                    __end_of_go_close_alt 04FC                         _SYSTEM_Initialize 0410  
                 __end_of__initialization 0038                     __end_of_TMR2_CallBack 04B6  
                      ?_SYSTEM_Initialize 0070                              ?_toggle_tone 0070  
                   ??i1_ADC_GetConversion 0072                            __pcstackCOMMON 0070  
               get_jump_full@jump_counter 0032                       ??_SYSTEM_Initialize 0023  
                               ?_TMR0_ISR 0070                                 ?_TMR2_ISR 0070  
                   __end_of_ROTATION_TIME 0505                          ?_TMR2_Initialize 0070  
              i1ADC_GetConversion@channel 0073                              ?_start_alarm 0070  
                          _OPTION_REGbits 0095                              ?_start_setup 0070  
                            i1_switch_zum 04B6                 __end_of_SYSTEM_Initialize 0426  
                              __pbssBANK0 002C                          ??_FVR_Initialize 0020  
                              __pmaintext 03DA          __end_of_TMR0_SetInterruptHandler 04F2  
                              ??_TMR0_ISR 0070                                ??_TMR2_ISR 0078  
                              __pintentry 0004                          get_jump_full@res 0025  
                                 _OSCTUNE 0098                          ?_TMR2_StartTimer 0070  
                               ?_get_jump 0070                                 ?_go_close 0070  
                               ?_fun_work 0070                      _ADC_InterruptHandler 0030  
              ??_TMR2_SetInterruptHandler 0022                  __end_of_GOOD_WSP_VOLTAGE 0509  
                                 __ptext1 0123                                   __ptext2 0263  
                     get_measure@measures 007B                                   __ptext3 0169  
                                 __ptext4 00DC                                   __ptext5 0515  
                                 __ptext6 0410                                   __ptext7 050D  
                                 __ptext8 0466                                   __ptext9 04E6  
                                 _get_fun 01EB                                   _go_open 04C3  
                   _OSCILLATOR_Initialize 04DF                                 _T2CONbits 001C  
                ??_PIN_MANAGER_Initialize 0020                              ??i1_go_close 0070  
                                 _povorot 0094                                ??_get_jump 0024  
                              ??_go_close 0020                         __end_of_rele_tick 034E  
                    end_of_initialization 0038                                ??_fun_work 002A  
                            _get_fun_full 00DC                        __end_ofi1_go_close 03DA  
                   __end_of_get_jump_full 01AC                             _sec_tick_work 01AC  
                              _time_pow_s 0036                              _go_close_alt 04F7  
                        ??_WDT_Initialize 0020                  _TMR0_SetInterruptHandler 04EC  
                       ?_EEPROM_WriteByte 0020                         __end_of_switch_wm 0169  
                          get_voltage@res 0026                        ??_EEPROM_WriteByte 0021  
                               _TRISAbits 008C                                 _TRISCbits 008E  
                         get_fun_full@res 0025                                get_fun@res 0025  
                      EEPROM_WriteByte@dt 0020                             ??_get_measure 0074  
                              _switch_zum 0479      __end_of_TMR2_DefaultInterruptHandler 0519  
            _TMR2_DefaultInterruptHandler 0518                            ?_sec_tick_work 0070  
                           ??_get_voltage 0025                            _ADC_Initialize 04D7  
                  ?_OSCILLATOR_Initialize 0070                            i1_go_close_alt 04FC  
                           ??_go_open_alt 0020                       start_initialization 0027  
             __end_ofi1_ADC_GetConversion 0410                    __end_of_ADC_Initialize 04DF  
                     __end_of_get_measure 02CA                    __end_ofi1_go_close_alt 0501  
           ?_TMR2_DefaultInterruptHandler 0070                               __pbssCOMMON 0078  
                     __end_of_get_voltage 0376                                 ___latbits 0000  
                           __pcstackBANK0 0020                       __end_of_go_open_alt 04F7  
                   _TMR0_InterruptHandler 0037                                 __pnvBANK0 0037  
                  _PIN_MANAGER_Initialize 043C                           ??_sec_tick_work 0077  
                             ?_switch_zum 0070                                 beep@delay 0020  
                         ?_ADC_Initialize 0070                                 beep@count 0025  
                               beep@pause 0022                           ?i1_go_close_alt 0070  
            ??_INTERRUPT_InterruptManager 0078                                  ?_get_fun 0070  
                                ?_go_open 0070                         sec_tick_work@iled 007A  
                                ?_povorot 0070                         ??_TMR0_Initialize 0022  
                       get_jump_full@flag 0027                                  _LATAbits 010C  
                                _LATCbits 010E                                 _rele_tick 0324  
                           _TMR2_CallBack 04A9                                  _PIE1bits 0091  
                             _get_measure 0298                ??_TMR0_SetInterruptHandler 0022  
                                _PIR1bits 0011                                  _TMR0_ISR 0499  
                                _TMR2_ISR 0451                             _ROTATION_TIME 0501  
                             _get_voltage 034E                                _ADCON0bits 009D  
                                _WPUAbits 020C                                  _WPUCbits 020E  
          ??_TMR2_DefaultInterruptHandler 0070                               _go_open_alt 04F2  
               ?_TMR2_SetInterruptHandler 0020                                 _switch_wm 0123  
                       ??_TMR2_Initialize 0022                            ?_TMR2_CallBack 0070  
                              ?_rele_tick 0070                             ??_toggle_tone 0070  
                       _ADC_GetConversion 0398                   ??_OSCILLATOR_Initialize 0020  
                      ?_ADC_GetConversion 0020                             ??_start_alarm 0072  
                              _ANSELAbits 018C                                _ANSELCbits 018E  
                     ??_ADC_GetConversion 0022                             ??_start_setup 0028  
                              ?_switch_wm 0070                                  __ptext10 0426  
                                __ptext11 04EC                                  __ptext20 01EB  
                                __ptext12 043C                                  __ptext21 0398  
                                __ptext13 04DF                                  __ptext30 0451  
                                __ptext22 003B                                  __ptext14 0511  
                                __ptext31 04A9                                  __ptext23 04F2  
                                __ptext15 04D7                                  __ptext40 03B9  
                                __ptext32 0518                                  __ptext24 04C3  
                                __ptext16 0094                                  __ptext41 0499  
                                __ptext33 01AC                                  __ptext25 04F7  
                                __ptext17 034E                                  __ptext42 0519  
                                __ptext34 04CD                                  __ptext26 0376  
                                __ptext18 02F9                                  __ptext43 04B6  
                                __ptext35 0324                                  __ptext27 02CA  
                                __ptext19 0229                                  __ptext36 0298  
                                __ptext28 0479                                  __ptext37 03F5  
                                __ptext38 0489                                  __ptext39 04FC  
                           ?i1_switch_zum 0070                                  beep@time 0024  
                                _get_jump 0229                                  _go_close 0376  
                         _BAD_WSP_VOLTAGE 0509                                  _fun_work 003B  
    __end_of_TMR0_DefaultInterruptHandler 051A              _TMR0_DefaultInterruptHandler 0519  
               __end_of_ADC_GetConversion 03B9                                  int$flags 007E  
                       ??_TMR2_StartTimer 0020                       __end_of_toggle_tone 04D7  
      __end_of_INTERRUPT_InterruptManager 0026                _INTERRUPT_InterruptManager 0004  
                    get_jump@jump_counter 0033                                _INTCONbits 000B  
                              _FVRCONbits 0117                            ??i1_switch_zum 0070  
                     __end_of_start_alarm 0499                       __end_of_start_setup 0298  
                                intlevel1 0000                           ??_TMR2_CallBack 0078  
                 ?_PIN_MANAGER_Initialize 0070                               ??_rele_tick 0070  
                        ??_ADC_Initialize 0020             ?_TMR0_DefaultInterruptHandler 0070  
                        ??i1_go_close_alt 0070                              ??_switch_zum 0020  
                           _get_jump_full 0169                             __pstringtext1 0501  
                           __pstringtext2 0505                             __pstringtext3 0509  
                          _FVR_Initialize 0511                                _OPTION_REG 0095  
                   TMR2_ISR@CountCallBack 0078                           _TMR0_Initialize 0426  
                 __end_of_BAD_WSP_VOLTAGE 050D                               ??_switch_wm 002A  
                      __end_of_switch_zum 0489            __end_of_PIN_MANAGER_Initialize 0451  
                        _EEPROM_WriteByte 02F9                     _TMR2_InterruptHandler 0039  
                             _toggle_tone 04CD                             ?_get_fun_full 0070  
                            ?_get_measure 0070  
