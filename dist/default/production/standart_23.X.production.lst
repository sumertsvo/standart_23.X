

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed May 11 16:20:15 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1823
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    61                           	dabs	1,0x7E,2
    62  0000                     
    63                           ; Version 2.40
    64                           ; Generated 17/11/2021 GMT
    65                           ; 
    66                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F1823 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  0007                     	;# 
   106  0008                     	;# 
   107  0009                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000E                     	;# 
   112  0011                     	;# 
   113  0012                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001C                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  008C                     	;# 
   126  008E                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0095                     	;# 
   130  0096                     	;# 
   131  0097                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  010C                     	;# 
   141  010E                     	;# 
   142  0111                     	;# 
   143  0112                     	;# 
   144  0113                     	;# 
   145  0114                     	;# 
   146  0115                     	;# 
   147  0116                     	;# 
   148  0117                     	;# 
   149  0118                     	;# 
   150  0119                     	;# 
   151  011A                     	;# 
   152  011B                     	;# 
   153  011D                     	;# 
   154  011D                     	;# 
   155  018C                     	;# 
   156  018E                     	;# 
   157  0191                     	;# 
   158  0191                     	;# 
   159  0192                     	;# 
   160  0193                     	;# 
   161  0193                     	;# 
   162  0193                     	;# 
   163  0194                     	;# 
   164  0195                     	;# 
   165  0196                     	;# 
   166  0199                     	;# 
   167  019A                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019D                     	;# 
   175  019E                     	;# 
   176  019F                     	;# 
   177  020C                     	;# 
   178  020E                     	;# 
   179  0211                     	;# 
   180  0211                     	;# 
   181  0212                     	;# 
   182  0212                     	;# 
   183  0213                     	;# 
   184  0213                     	;# 
   185  0214                     	;# 
   186  0214                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0215                     	;# 
   190  0216                     	;# 
   191  0216                     	;# 
   192  0217                     	;# 
   193  0217                     	;# 
   194  0291                     	;# 
   195  0291                     	;# 
   196  0292                     	;# 
   197  0293                     	;# 
   198  0294                     	;# 
   199  0295                     	;# 
   200  0295                     	;# 
   201  0296                     	;# 
   202  0391                     	;# 
   203  0392                     	;# 
   204  0393                     	;# 
   205  039A                     	;# 
   206  039C                     	;# 
   207  039D                     	;# 
   208  039E                     	;# 
   209  039F                     	;# 
   210  0FE4                     	;# 
   211  0FE5                     	;# 
   212  0FE6                     	;# 
   213  0FE7                     	;# 
   214  0FE8                     	;# 
   215  0FE9                     	;# 
   216  0FEA                     	;# 
   217  0FEB                     	;# 
   218  0FED                     	;# 
   219  0FEE                     	;# 
   220  0FEF                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000E                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  008C                     	;# 
   249  008E                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0095                     	;# 
   253  0096                     	;# 
   254  0097                     	;# 
   255  0098                     	;# 
   256  0099                     	;# 
   257  009A                     	;# 
   258  009B                     	;# 
   259  009B                     	;# 
   260  009C                     	;# 
   261  009D                     	;# 
   262  009E                     	;# 
   263  010C                     	;# 
   264  010E                     	;# 
   265  0111                     	;# 
   266  0112                     	;# 
   267  0113                     	;# 
   268  0114                     	;# 
   269  0115                     	;# 
   270  0116                     	;# 
   271  0117                     	;# 
   272  0118                     	;# 
   273  0119                     	;# 
   274  011A                     	;# 
   275  011B                     	;# 
   276  011D                     	;# 
   277  011D                     	;# 
   278  018C                     	;# 
   279  018E                     	;# 
   280  0191                     	;# 
   281  0191                     	;# 
   282  0192                     	;# 
   283  0193                     	;# 
   284  0193                     	;# 
   285  0193                     	;# 
   286  0194                     	;# 
   287  0195                     	;# 
   288  0196                     	;# 
   289  0199                     	;# 
   290  019A                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019B                     	;# 
   294  019B                     	;# 
   295  019C                     	;# 
   296  019C                     	;# 
   297  019D                     	;# 
   298  019E                     	;# 
   299  019F                     	;# 
   300  020C                     	;# 
   301  020E                     	;# 
   302  0211                     	;# 
   303  0211                     	;# 
   304  0212                     	;# 
   305  0212                     	;# 
   306  0213                     	;# 
   307  0213                     	;# 
   308  0214                     	;# 
   309  0214                     	;# 
   310  0215                     	;# 
   311  0215                     	;# 
   312  0215                     	;# 
   313  0216                     	;# 
   314  0216                     	;# 
   315  0217                     	;# 
   316  0217                     	;# 
   317  0291                     	;# 
   318  0291                     	;# 
   319  0292                     	;# 
   320  0293                     	;# 
   321  0294                     	;# 
   322  0295                     	;# 
   323  0295                     	;# 
   324  0296                     	;# 
   325  0391                     	;# 
   326  0392                     	;# 
   327  0393                     	;# 
   328  039A                     	;# 
   329  039C                     	;# 
   330  039D                     	;# 
   331  039E                     	;# 
   332  039F                     	;# 
   333  0FE4                     	;# 
   334  0FE5                     	;# 
   335  0FE6                     	;# 
   336  0FE7                     	;# 
   337  0FE8                     	;# 
   338  0FE9                     	;# 
   339  0FEA                     	;# 
   340  0FEB                     	;# 
   341  0FED                     	;# 
   342  0FEE                     	;# 
   343  0FEF                     	;# 
   344  0000                     	;# 
   345  0001                     	;# 
   346  0002                     	;# 
   347  0003                     	;# 
   348  0004                     	;# 
   349  0005                     	;# 
   350  0006                     	;# 
   351  0007                     	;# 
   352  0008                     	;# 
   353  0009                     	;# 
   354  000A                     	;# 
   355  000B                     	;# 
   356  000C                     	;# 
   357  000E                     	;# 
   358  0011                     	;# 
   359  0012                     	;# 
   360  0015                     	;# 
   361  0016                     	;# 
   362  0016                     	;# 
   363  0017                     	;# 
   364  0018                     	;# 
   365  0019                     	;# 
   366  001A                     	;# 
   367  001B                     	;# 
   368  001C                     	;# 
   369  001E                     	;# 
   370  001F                     	;# 
   371  008C                     	;# 
   372  008E                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0095                     	;# 
   376  0096                     	;# 
   377  0097                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009A                     	;# 
   381  009B                     	;# 
   382  009B                     	;# 
   383  009C                     	;# 
   384  009D                     	;# 
   385  009E                     	;# 
   386  010C                     	;# 
   387  010E                     	;# 
   388  0111                     	;# 
   389  0112                     	;# 
   390  0113                     	;# 
   391  0114                     	;# 
   392  0115                     	;# 
   393  0116                     	;# 
   394  0117                     	;# 
   395  0118                     	;# 
   396  0119                     	;# 
   397  011A                     	;# 
   398  011B                     	;# 
   399  011D                     	;# 
   400  011D                     	;# 
   401  018C                     	;# 
   402  018E                     	;# 
   403  0191                     	;# 
   404  0191                     	;# 
   405  0192                     	;# 
   406  0193                     	;# 
   407  0193                     	;# 
   408  0193                     	;# 
   409  0194                     	;# 
   410  0195                     	;# 
   411  0196                     	;# 
   412  0199                     	;# 
   413  019A                     	;# 
   414  019B                     	;# 
   415  019B                     	;# 
   416  019B                     	;# 
   417  019B                     	;# 
   418  019C                     	;# 
   419  019C                     	;# 
   420  019D                     	;# 
   421  019E                     	;# 
   422  019F                     	;# 
   423  020C                     	;# 
   424  020E                     	;# 
   425  0211                     	;# 
   426  0211                     	;# 
   427  0212                     	;# 
   428  0212                     	;# 
   429  0213                     	;# 
   430  0213                     	;# 
   431  0214                     	;# 
   432  0214                     	;# 
   433  0215                     	;# 
   434  0215                     	;# 
   435  0215                     	;# 
   436  0216                     	;# 
   437  0216                     	;# 
   438  0217                     	;# 
   439  0217                     	;# 
   440  0291                     	;# 
   441  0291                     	;# 
   442  0292                     	;# 
   443  0293                     	;# 
   444  0294                     	;# 
   445  0295                     	;# 
   446  0295                     	;# 
   447  0296                     	;# 
   448  0391                     	;# 
   449  0392                     	;# 
   450  0393                     	;# 
   451  039A                     	;# 
   452  039C                     	;# 
   453  039D                     	;# 
   454  039E                     	;# 
   455  039F                     	;# 
   456  0FE4                     	;# 
   457  0FE5                     	;# 
   458  0FE6                     	;# 
   459  0FE7                     	;# 
   460  0FE8                     	;# 
   461  0FE9                     	;# 
   462  0FEA                     	;# 
   463  0FEB                     	;# 
   464  0FED                     	;# 
   465  0FEE                     	;# 
   466  0FEF                     	;# 
   467  0000                     	;# 
   468  0001                     	;# 
   469  0002                     	;# 
   470  0003                     	;# 
   471  0004                     	;# 
   472  0005                     	;# 
   473  0006                     	;# 
   474  0007                     	;# 
   475  0008                     	;# 
   476  0009                     	;# 
   477  000A                     	;# 
   478  000B                     	;# 
   479  000C                     	;# 
   480  000E                     	;# 
   481  0011                     	;# 
   482  0012                     	;# 
   483  0015                     	;# 
   484  0016                     	;# 
   485  0016                     	;# 
   486  0017                     	;# 
   487  0018                     	;# 
   488  0019                     	;# 
   489  001A                     	;# 
   490  001B                     	;# 
   491  001C                     	;# 
   492  001E                     	;# 
   493  001F                     	;# 
   494  008C                     	;# 
   495  008E                     	;# 
   496  0091                     	;# 
   497  0092                     	;# 
   498  0095                     	;# 
   499  0096                     	;# 
   500  0097                     	;# 
   501  0098                     	;# 
   502  0099                     	;# 
   503  009A                     	;# 
   504  009B                     	;# 
   505  009B                     	;# 
   506  009C                     	;# 
   507  009D                     	;# 
   508  009E                     	;# 
   509  010C                     	;# 
   510  010E                     	;# 
   511  0111                     	;# 
   512  0112                     	;# 
   513  0113                     	;# 
   514  0114                     	;# 
   515  0115                     	;# 
   516  0116                     	;# 
   517  0117                     	;# 
   518  0118                     	;# 
   519  0119                     	;# 
   520  011A                     	;# 
   521  011B                     	;# 
   522  011D                     	;# 
   523  011D                     	;# 
   524  018C                     	;# 
   525  018E                     	;# 
   526  0191                     	;# 
   527  0191                     	;# 
   528  0192                     	;# 
   529  0193                     	;# 
   530  0193                     	;# 
   531  0193                     	;# 
   532  0194                     	;# 
   533  0195                     	;# 
   534  0196                     	;# 
   535  0199                     	;# 
   536  019A                     	;# 
   537  019B                     	;# 
   538  019B                     	;# 
   539  019B                     	;# 
   540  019B                     	;# 
   541  019C                     	;# 
   542  019C                     	;# 
   543  019D                     	;# 
   544  019E                     	;# 
   545  019F                     	;# 
   546  020C                     	;# 
   547  020E                     	;# 
   548  0211                     	;# 
   549  0211                     	;# 
   550  0212                     	;# 
   551  0212                     	;# 
   552  0213                     	;# 
   553  0213                     	;# 
   554  0214                     	;# 
   555  0214                     	;# 
   556  0215                     	;# 
   557  0215                     	;# 
   558  0215                     	;# 
   559  0216                     	;# 
   560  0216                     	;# 
   561  0217                     	;# 
   562  0217                     	;# 
   563  0291                     	;# 
   564  0291                     	;# 
   565  0292                     	;# 
   566  0293                     	;# 
   567  0294                     	;# 
   568  0295                     	;# 
   569  0295                     	;# 
   570  0296                     	;# 
   571  0391                     	;# 
   572  0392                     	;# 
   573  0393                     	;# 
   574  039A                     	;# 
   575  039C                     	;# 
   576  039D                     	;# 
   577  039E                     	;# 
   578  039F                     	;# 
   579  0FE4                     	;# 
   580  0FE5                     	;# 
   581  0FE6                     	;# 
   582  0FE7                     	;# 
   583  0FE8                     	;# 
   584  0FE9                     	;# 
   585  0FEA                     	;# 
   586  0FEB                     	;# 
   587  0FED                     	;# 
   588  0FEE                     	;# 
   589  0FEF                     	;# 
   590  0000                     	;# 
   591  0001                     	;# 
   592  0002                     	;# 
   593  0003                     	;# 
   594  0004                     	;# 
   595  0005                     	;# 
   596  0006                     	;# 
   597  0007                     	;# 
   598  0008                     	;# 
   599  0009                     	;# 
   600  000A                     	;# 
   601  000B                     	;# 
   602  000C                     	;# 
   603  000E                     	;# 
   604  0011                     	;# 
   605  0012                     	;# 
   606  0015                     	;# 
   607  0016                     	;# 
   608  0016                     	;# 
   609  0017                     	;# 
   610  0018                     	;# 
   611  0019                     	;# 
   612  001A                     	;# 
   613  001B                     	;# 
   614  001C                     	;# 
   615  001E                     	;# 
   616  001F                     	;# 
   617  008C                     	;# 
   618  008E                     	;# 
   619  0091                     	;# 
   620  0092                     	;# 
   621  0095                     	;# 
   622  0096                     	;# 
   623  0097                     	;# 
   624  0098                     	;# 
   625  0099                     	;# 
   626  009A                     	;# 
   627  009B                     	;# 
   628  009B                     	;# 
   629  009C                     	;# 
   630  009D                     	;# 
   631  009E                     	;# 
   632  010C                     	;# 
   633  010E                     	;# 
   634  0111                     	;# 
   635  0112                     	;# 
   636  0113                     	;# 
   637  0114                     	;# 
   638  0115                     	;# 
   639  0116                     	;# 
   640  0117                     	;# 
   641  0118                     	;# 
   642  0119                     	;# 
   643  011A                     	;# 
   644  011B                     	;# 
   645  011D                     	;# 
   646  011D                     	;# 
   647  018C                     	;# 
   648  018E                     	;# 
   649  0191                     	;# 
   650  0191                     	;# 
   651  0192                     	;# 
   652  0193                     	;# 
   653  0193                     	;# 
   654  0193                     	;# 
   655  0194                     	;# 
   656  0195                     	;# 
   657  0196                     	;# 
   658  0199                     	;# 
   659  019A                     	;# 
   660  019B                     	;# 
   661  019B                     	;# 
   662  019B                     	;# 
   663  019B                     	;# 
   664  019C                     	;# 
   665  019C                     	;# 
   666  019D                     	;# 
   667  019E                     	;# 
   668  019F                     	;# 
   669  020C                     	;# 
   670  020E                     	;# 
   671  0211                     	;# 
   672  0211                     	;# 
   673  0212                     	;# 
   674  0212                     	;# 
   675  0213                     	;# 
   676  0213                     	;# 
   677  0214                     	;# 
   678  0214                     	;# 
   679  0215                     	;# 
   680  0215                     	;# 
   681  0215                     	;# 
   682  0216                     	;# 
   683  0216                     	;# 
   684  0217                     	;# 
   685  0217                     	;# 
   686  0291                     	;# 
   687  0291                     	;# 
   688  0292                     	;# 
   689  0293                     	;# 
   690  0294                     	;# 
   691  0295                     	;# 
   692  0295                     	;# 
   693  0296                     	;# 
   694  0391                     	;# 
   695  0392                     	;# 
   696  0393                     	;# 
   697  039A                     	;# 
   698  039C                     	;# 
   699  039D                     	;# 
   700  039E                     	;# 
   701  039F                     	;# 
   702  0FE4                     	;# 
   703  0FE5                     	;# 
   704  0FE6                     	;# 
   705  0FE7                     	;# 
   706  0FE8                     	;# 
   707  0FE9                     	;# 
   708  0FEA                     	;# 
   709  0FEB                     	;# 
   710  0FED                     	;# 
   711  0FEE                     	;# 
   712  0FEF                     	;# 
   713  0000                     	;# 
   714  0001                     	;# 
   715  0002                     	;# 
   716  0003                     	;# 
   717  0004                     	;# 
   718  0005                     	;# 
   719  0006                     	;# 
   720  0007                     	;# 
   721  0008                     	;# 
   722  0009                     	;# 
   723  000A                     	;# 
   724  000B                     	;# 
   725  000C                     	;# 
   726  000E                     	;# 
   727  0011                     	;# 
   728  0012                     	;# 
   729  0015                     	;# 
   730  0016                     	;# 
   731  0016                     	;# 
   732  0017                     	;# 
   733  0018                     	;# 
   734  0019                     	;# 
   735  001A                     	;# 
   736  001B                     	;# 
   737  001C                     	;# 
   738  001E                     	;# 
   739  001F                     	;# 
   740  008C                     	;# 
   741  008E                     	;# 
   742  0091                     	;# 
   743  0092                     	;# 
   744  0095                     	;# 
   745  0096                     	;# 
   746  0097                     	;# 
   747  0098                     	;# 
   748  0099                     	;# 
   749  009A                     	;# 
   750  009B                     	;# 
   751  009B                     	;# 
   752  009C                     	;# 
   753  009D                     	;# 
   754  009E                     	;# 
   755  010C                     	;# 
   756  010E                     	;# 
   757  0111                     	;# 
   758  0112                     	;# 
   759  0113                     	;# 
   760  0114                     	;# 
   761  0115                     	;# 
   762  0116                     	;# 
   763  0117                     	;# 
   764  0118                     	;# 
   765  0119                     	;# 
   766  011A                     	;# 
   767  011B                     	;# 
   768  011D                     	;# 
   769  011D                     	;# 
   770  018C                     	;# 
   771  018E                     	;# 
   772  0191                     	;# 
   773  0191                     	;# 
   774  0192                     	;# 
   775  0193                     	;# 
   776  0193                     	;# 
   777  0193                     	;# 
   778  0194                     	;# 
   779  0195                     	;# 
   780  0196                     	;# 
   781  0199                     	;# 
   782  019A                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019B                     	;# 
   787  019C                     	;# 
   788  019C                     	;# 
   789  019D                     	;# 
   790  019E                     	;# 
   791  019F                     	;# 
   792  020C                     	;# 
   793  020E                     	;# 
   794  0211                     	;# 
   795  0211                     	;# 
   796  0212                     	;# 
   797  0212                     	;# 
   798  0213                     	;# 
   799  0213                     	;# 
   800  0214                     	;# 
   801  0214                     	;# 
   802  0215                     	;# 
   803  0215                     	;# 
   804  0215                     	;# 
   805  0216                     	;# 
   806  0216                     	;# 
   807  0217                     	;# 
   808  0217                     	;# 
   809  0291                     	;# 
   810  0291                     	;# 
   811  0292                     	;# 
   812  0293                     	;# 
   813  0294                     	;# 
   814  0295                     	;# 
   815  0295                     	;# 
   816  0296                     	;# 
   817  0391                     	;# 
   818  0392                     	;# 
   819  0393                     	;# 
   820  039A                     	;# 
   821  039C                     	;# 
   822  039D                     	;# 
   823  039E                     	;# 
   824  039F                     	;# 
   825  0FE4                     	;# 
   826  0FE5                     	;# 
   827  0FE6                     	;# 
   828  0FE7                     	;# 
   829  0FE8                     	;# 
   830  0FE9                     	;# 
   831  0FEA                     	;# 
   832  0FEB                     	;# 
   833  0FED                     	;# 
   834  0FEE                     	;# 
   835  0FEF                     	;# 
   836  0000                     	;# 
   837  0001                     	;# 
   838  0002                     	;# 
   839  0003                     	;# 
   840  0004                     	;# 
   841  0005                     	;# 
   842  0006                     	;# 
   843  0007                     	;# 
   844  0008                     	;# 
   845  0009                     	;# 
   846  000A                     	;# 
   847  000B                     	;# 
   848  000C                     	;# 
   849  000E                     	;# 
   850  0011                     	;# 
   851  0012                     	;# 
   852  0015                     	;# 
   853  0016                     	;# 
   854  0016                     	;# 
   855  0017                     	;# 
   856  0018                     	;# 
   857  0019                     	;# 
   858  001A                     	;# 
   859  001B                     	;# 
   860  001C                     	;# 
   861  001E                     	;# 
   862  001F                     	;# 
   863  008C                     	;# 
   864  008E                     	;# 
   865  0091                     	;# 
   866  0092                     	;# 
   867  0095                     	;# 
   868  0096                     	;# 
   869  0097                     	;# 
   870  0098                     	;# 
   871  0099                     	;# 
   872  009A                     	;# 
   873  009B                     	;# 
   874  009B                     	;# 
   875  009C                     	;# 
   876  009D                     	;# 
   877  009E                     	;# 
   878  010C                     	;# 
   879  010E                     	;# 
   880  0111                     	;# 
   881  0112                     	;# 
   882  0113                     	;# 
   883  0114                     	;# 
   884  0115                     	;# 
   885  0116                     	;# 
   886  0117                     	;# 
   887  0118                     	;# 
   888  0119                     	;# 
   889  011A                     	;# 
   890  011B                     	;# 
   891  011D                     	;# 
   892  011D                     	;# 
   893  018C                     	;# 
   894  018E                     	;# 
   895  0191                     	;# 
   896  0191                     	;# 
   897  0192                     	;# 
   898  0193                     	;# 
   899  0193                     	;# 
   900  0193                     	;# 
   901  0194                     	;# 
   902  0195                     	;# 
   903  0196                     	;# 
   904  0199                     	;# 
   905  019A                     	;# 
   906  019B                     	;# 
   907  019B                     	;# 
   908  019B                     	;# 
   909  019B                     	;# 
   910  019C                     	;# 
   911  019C                     	;# 
   912  019D                     	;# 
   913  019E                     	;# 
   914  019F                     	;# 
   915  020C                     	;# 
   916  020E                     	;# 
   917  0211                     	;# 
   918  0211                     	;# 
   919  0212                     	;# 
   920  0212                     	;# 
   921  0213                     	;# 
   922  0213                     	;# 
   923  0214                     	;# 
   924  0214                     	;# 
   925  0215                     	;# 
   926  0215                     	;# 
   927  0215                     	;# 
   928  0216                     	;# 
   929  0216                     	;# 
   930  0217                     	;# 
   931  0217                     	;# 
   932  0291                     	;# 
   933  0291                     	;# 
   934  0292                     	;# 
   935  0293                     	;# 
   936  0294                     	;# 
   937  0295                     	;# 
   938  0295                     	;# 
   939  0296                     	;# 
   940  0391                     	;# 
   941  0392                     	;# 
   942  0393                     	;# 
   943  039A                     	;# 
   944  039C                     	;# 
   945  039D                     	;# 
   946  039E                     	;# 
   947  039F                     	;# 
   948  0FE4                     	;# 
   949  0FE5                     	;# 
   950  0FE6                     	;# 
   951  0FE7                     	;# 
   952  0FE8                     	;# 
   953  0FE9                     	;# 
   954  0FEA                     	;# 
   955  0FEB                     	;# 
   956  0FED                     	;# 
   957  0FEE                     	;# 
   958  0FEF                     	;# 
   959  0000                     	;# 
   960  0001                     	;# 
   961  0002                     	;# 
   962  0003                     	;# 
   963  0004                     	;# 
   964  0005                     	;# 
   965  0006                     	;# 
   966  0007                     	;# 
   967  0008                     	;# 
   968  0009                     	;# 
   969  000A                     	;# 
   970  000B                     	;# 
   971  000C                     	;# 
   972  000E                     	;# 
   973  0011                     	;# 
   974  0012                     	;# 
   975  0015                     	;# 
   976  0016                     	;# 
   977  0016                     	;# 
   978  0017                     	;# 
   979  0018                     	;# 
   980  0019                     	;# 
   981  001A                     	;# 
   982  001B                     	;# 
   983  001C                     	;# 
   984  001E                     	;# 
   985  001F                     	;# 
   986  008C                     	;# 
   987  008E                     	;# 
   988  0091                     	;# 
   989  0092                     	;# 
   990  0095                     	;# 
   991  0096                     	;# 
   992  0097                     	;# 
   993  0098                     	;# 
   994  0099                     	;# 
   995  009A                     	;# 
   996  009B                     	;# 
   997  009B                     	;# 
   998  009C                     	;# 
   999  009D                     	;# 
  1000  009E                     	;# 
  1001  010C                     	;# 
  1002  010E                     	;# 
  1003  0111                     	;# 
  1004  0112                     	;# 
  1005  0113                     	;# 
  1006  0114                     	;# 
  1007  0115                     	;# 
  1008  0116                     	;# 
  1009  0117                     	;# 
  1010  0118                     	;# 
  1011  0119                     	;# 
  1012  011A                     	;# 
  1013  011B                     	;# 
  1014  011D                     	;# 
  1015  011D                     	;# 
  1016  018C                     	;# 
  1017  018E                     	;# 
  1018  0191                     	;# 
  1019  0191                     	;# 
  1020  0192                     	;# 
  1021  0193                     	;# 
  1022  0193                     	;# 
  1023  0193                     	;# 
  1024  0194                     	;# 
  1025  0195                     	;# 
  1026  0196                     	;# 
  1027  0199                     	;# 
  1028  019A                     	;# 
  1029  019B                     	;# 
  1030  019B                     	;# 
  1031  019B                     	;# 
  1032  019B                     	;# 
  1033  019C                     	;# 
  1034  019C                     	;# 
  1035  019D                     	;# 
  1036  019E                     	;# 
  1037  019F                     	;# 
  1038  020C                     	;# 
  1039  020E                     	;# 
  1040  0211                     	;# 
  1041  0211                     	;# 
  1042  0212                     	;# 
  1043  0212                     	;# 
  1044  0213                     	;# 
  1045  0213                     	;# 
  1046  0214                     	;# 
  1047  0214                     	;# 
  1048  0215                     	;# 
  1049  0215                     	;# 
  1050  0215                     	;# 
  1051  0216                     	;# 
  1052  0216                     	;# 
  1053  0217                     	;# 
  1054  0217                     	;# 
  1055  0291                     	;# 
  1056  0291                     	;# 
  1057  0292                     	;# 
  1058  0293                     	;# 
  1059  0294                     	;# 
  1060  0295                     	;# 
  1061  0295                     	;# 
  1062  0296                     	;# 
  1063  0391                     	;# 
  1064  0392                     	;# 
  1065  0393                     	;# 
  1066  039A                     	;# 
  1067  039C                     	;# 
  1068  039D                     	;# 
  1069  039E                     	;# 
  1070  039F                     	;# 
  1071  0FE4                     	;# 
  1072  0FE5                     	;# 
  1073  0FE6                     	;# 
  1074  0FE7                     	;# 
  1075  0FE8                     	;# 
  1076  0FE9                     	;# 
  1077  0FEA                     	;# 
  1078  0FEB                     	;# 
  1079  0FED                     	;# 
  1080  0FEE                     	;# 
  1081  0FEF                     	;# 
  1082  0000                     	;# 
  1083  0001                     	;# 
  1084  0002                     	;# 
  1085  0003                     	;# 
  1086  0004                     	;# 
  1087  0005                     	;# 
  1088  0006                     	;# 
  1089  0007                     	;# 
  1090  0008                     	;# 
  1091  0009                     	;# 
  1092  000A                     	;# 
  1093  000B                     	;# 
  1094  000C                     	;# 
  1095  000E                     	;# 
  1096  0011                     	;# 
  1097  0012                     	;# 
  1098  0015                     	;# 
  1099  0016                     	;# 
  1100  0016                     	;# 
  1101  0017                     	;# 
  1102  0018                     	;# 
  1103  0019                     	;# 
  1104  001A                     	;# 
  1105  001B                     	;# 
  1106  001C                     	;# 
  1107  001E                     	;# 
  1108  001F                     	;# 
  1109  008C                     	;# 
  1110  008E                     	;# 
  1111  0091                     	;# 
  1112  0092                     	;# 
  1113  0095                     	;# 
  1114  0096                     	;# 
  1115  0097                     	;# 
  1116  0098                     	;# 
  1117  0099                     	;# 
  1118  009A                     	;# 
  1119  009B                     	;# 
  1120  009B                     	;# 
  1121  009C                     	;# 
  1122  009D                     	;# 
  1123  009E                     	;# 
  1124  010C                     	;# 
  1125  010E                     	;# 
  1126  0111                     	;# 
  1127  0112                     	;# 
  1128  0113                     	;# 
  1129  0114                     	;# 
  1130  0115                     	;# 
  1131  0116                     	;# 
  1132  0117                     	;# 
  1133  0118                     	;# 
  1134  0119                     	;# 
  1135  011A                     	;# 
  1136  011B                     	;# 
  1137  011D                     	;# 
  1138  011D                     	;# 
  1139  018C                     	;# 
  1140  018E                     	;# 
  1141  0191                     	;# 
  1142  0191                     	;# 
  1143  0192                     	;# 
  1144  0193                     	;# 
  1145  0193                     	;# 
  1146  0193                     	;# 
  1147  0194                     	;# 
  1148  0195                     	;# 
  1149  0196                     	;# 
  1150  0199                     	;# 
  1151  019A                     	;# 
  1152  019B                     	;# 
  1153  019B                     	;# 
  1154  019B                     	;# 
  1155  019B                     	;# 
  1156  019C                     	;# 
  1157  019C                     	;# 
  1158  019D                     	;# 
  1159  019E                     	;# 
  1160  019F                     	;# 
  1161  020C                     	;# 
  1162  020E                     	;# 
  1163  0211                     	;# 
  1164  0211                     	;# 
  1165  0212                     	;# 
  1166  0212                     	;# 
  1167  0213                     	;# 
  1168  0213                     	;# 
  1169  0214                     	;# 
  1170  0214                     	;# 
  1171  0215                     	;# 
  1172  0215                     	;# 
  1173  0215                     	;# 
  1174  0216                     	;# 
  1175  0216                     	;# 
  1176  0217                     	;# 
  1177  0217                     	;# 
  1178  0291                     	;# 
  1179  0291                     	;# 
  1180  0292                     	;# 
  1181  0293                     	;# 
  1182  0294                     	;# 
  1183  0295                     	;# 
  1184  0295                     	;# 
  1185  0296                     	;# 
  1186  0391                     	;# 
  1187  0392                     	;# 
  1188  0393                     	;# 
  1189  039A                     	;# 
  1190  039C                     	;# 
  1191  039D                     	;# 
  1192  039E                     	;# 
  1193  039F                     	;# 
  1194  0FE4                     	;# 
  1195  0FE5                     	;# 
  1196  0FE6                     	;# 
  1197  0FE7                     	;# 
  1198  0FE8                     	;# 
  1199  0FE9                     	;# 
  1200  0FEA                     	;# 
  1201  0FEB                     	;# 
  1202  0FED                     	;# 
  1203  0FEE                     	;# 
  1204  0FEF                     	;# 
  1205  0000                     	;# 
  1206  0001                     	;# 
  1207  0002                     	;# 
  1208  0003                     	;# 
  1209  0004                     	;# 
  1210  0005                     	;# 
  1211  0006                     	;# 
  1212  0007                     	;# 
  1213  0008                     	;# 
  1214  0009                     	;# 
  1215  000A                     	;# 
  1216  000B                     	;# 
  1217  000C                     	;# 
  1218  000E                     	;# 
  1219  0011                     	;# 
  1220  0012                     	;# 
  1221  0015                     	;# 
  1222  0016                     	;# 
  1223  0016                     	;# 
  1224  0017                     	;# 
  1225  0018                     	;# 
  1226  0019                     	;# 
  1227  001A                     	;# 
  1228  001B                     	;# 
  1229  001C                     	;# 
  1230  001E                     	;# 
  1231  001F                     	;# 
  1232  008C                     	;# 
  1233  008E                     	;# 
  1234  0091                     	;# 
  1235  0092                     	;# 
  1236  0095                     	;# 
  1237  0096                     	;# 
  1238  0097                     	;# 
  1239  0098                     	;# 
  1240  0099                     	;# 
  1241  009A                     	;# 
  1242  009B                     	;# 
  1243  009B                     	;# 
  1244  009C                     	;# 
  1245  009D                     	;# 
  1246  009E                     	;# 
  1247  010C                     	;# 
  1248  010E                     	;# 
  1249  0111                     	;# 
  1250  0112                     	;# 
  1251  0113                     	;# 
  1252  0114                     	;# 
  1253  0115                     	;# 
  1254  0116                     	;# 
  1255  0117                     	;# 
  1256  0118                     	;# 
  1257  0119                     	;# 
  1258  011A                     	;# 
  1259  011B                     	;# 
  1260  011D                     	;# 
  1261  011D                     	;# 
  1262  018C                     	;# 
  1263  018E                     	;# 
  1264  0191                     	;# 
  1265  0191                     	;# 
  1266  0192                     	;# 
  1267  0193                     	;# 
  1268  0193                     	;# 
  1269  0193                     	;# 
  1270  0194                     	;# 
  1271  0195                     	;# 
  1272  0196                     	;# 
  1273  0199                     	;# 
  1274  019A                     	;# 
  1275  019B                     	;# 
  1276  019B                     	;# 
  1277  019B                     	;# 
  1278  019B                     	;# 
  1279  019C                     	;# 
  1280  019C                     	;# 
  1281  019D                     	;# 
  1282  019E                     	;# 
  1283  019F                     	;# 
  1284  020C                     	;# 
  1285  020E                     	;# 
  1286  0211                     	;# 
  1287  0211                     	;# 
  1288  0212                     	;# 
  1289  0212                     	;# 
  1290  0213                     	;# 
  1291  0213                     	;# 
  1292  0214                     	;# 
  1293  0214                     	;# 
  1294  0215                     	;# 
  1295  0215                     	;# 
  1296  0215                     	;# 
  1297  0216                     	;# 
  1298  0216                     	;# 
  1299  0217                     	;# 
  1300  0217                     	;# 
  1301  0291                     	;# 
  1302  0291                     	;# 
  1303  0292                     	;# 
  1304  0293                     	;# 
  1305  0294                     	;# 
  1306  0295                     	;# 
  1307  0295                     	;# 
  1308  0296                     	;# 
  1309  0391                     	;# 
  1310  0392                     	;# 
  1311  0393                     	;# 
  1312  039A                     	;# 
  1313  039C                     	;# 
  1314  039D                     	;# 
  1315  039E                     	;# 
  1316  039F                     	;# 
  1317  0FE4                     	;# 
  1318  0FE5                     	;# 
  1319  0FE6                     	;# 
  1320  0FE7                     	;# 
  1321  0FE8                     	;# 
  1322  0FE9                     	;# 
  1323  0FEA                     	;# 
  1324  0FEB                     	;# 
  1325  0FED                     	;# 
  1326  0FEE                     	;# 
  1327  0FEF                     	;# 
  1328                           
  1329                           	psect	stringtext1
  1330  04C1                     __pstringtext1:
  1331  04C1                     _GOOD_WSP_VOLTAGE:
  1332  04C1  348E               	retlw	142
  1333  04C2  3400               	retlw	0
  1334  04C3                     __end_of_GOOD_WSP_VOLTAGE:
  1335                           
  1336                           	psect	stringtext2
  1337  04C3                     __pstringtext2:
  1338  04C3                     _BAD_WSP_VOLTAGE:
  1339  04C3  3480               	retlw	128
  1340  04C4  3400               	retlw	0
  1341  04C5                     __end_of_BAD_WSP_VOLTAGE:
  1342                           
  1343                           	psect	stringtext3
  1344  04C5                     __pstringtext3:
  1345  04C5                     _UP_RESISTANSE:
  1346  04C5  3420               	retlw	32
  1347  04C6  344E               	retlw	78
  1348  04C7                     __end_of_UP_RESISTANSE:
  1349                           
  1350                           	psect	stringtext4
  1351  04C7                     __pstringtext4:
  1352  04C7                     _HIGH_WATER_RESISTANSE:
  1353  04C7  34A8               	retlw	168
  1354  04C8  3461               	retlw	97
  1355  04C9                     __end_of_HIGH_WATER_RESISTANSE:
  1356                           
  1357                           	psect	stringtext5
  1358  04C9                     __pstringtext5:
  1359  04C9                     _LOW_WATER_RESISTANSE:
  1360  04C9  3420               	retlw	32
  1361  04CA  344E               	retlw	78
  1362  04CB                     __end_of_LOW_WATER_RESISTANSE:
  1363                           
  1364                           	psect	nvBANK0
  1365  003C                     __pnvBANK0:
  1366  003C                     _TMR0_InterruptHandler:
  1367  003C                     	ds	2
  1368  003E                     _TMR2_InterruptHandler:
  1369  003E                     	ds	2
  1370  0040                     _timer0ReloadVal:
  1371  0040                     	ds	1
  1372  0015                     _TMR0	set	21
  1373  001C                     _T2CONbits	set	28
  1374  001C                     _T2CON	set	28
  1375  001A                     _TMR2	set	26
  1376  001B                     _PR2	set	27
  1377  0011                     _PIR1bits	set	17
  1378  000B                     _INTCONbits	set	11
  1379  005F                     _GIE	set	95
  1380  008E                     _TRISCbits	set	142
  1381  008C                     _TRISAbits	set	140
  1382  0095                     _OPTION_REG	set	149
  1383  0091                     _PIE1bits	set	145
  1384  0095                     _OPTION_REGbits	set	149
  1385  008E                     _TRISC	set	142
  1386  008C                     _TRISA	set	140
  1387  009D                     _ADCON0bits	set	157
  1388  009D                     _ADCON0	set	157
  1389  009C                     _ADRESH	set	156
  1390  009B                     _ADRESL	set	155
  1391  009E                     _ADCON1	set	158
  1392  0097                     _WDTCON	set	151
  1393  0098                     _OSCTUNE	set	152
  1394  0099                     _OSCCON	set	153
  1395  010E                     _LATCbits	set	270
  1396  010C                     _LATAbits	set	268
  1397  0117                     _FVRCONbits	set	279
  1398  0117                     _FVRCON	set	279
  1399  011D                     _APFCON	set	285
  1400  010E                     _LATC	set	270
  1401  010C                     _LATA	set	268
  1402  0116                     _BORCON	set	278
  1403  0191                     _EEADR	set	401
  1404  0196                     _EECON2	set	406
  1405  0193                     _EEDATA	set	403
  1406  018C                     _ANSELAbits	set	396
  1407  018E                     _ANSELCbits	set	398
  1408  018C                     _ANSELA	set	396
  1409  018E                     _ANSELC	set	398
  1410  0CA8                     _RD	set	3240
  1411  0CAA                     _WREN	set	3242
  1412  0CA9                     _WR	set	3241
  1413  020E                     _WPUCbits	set	526
  1414  020C                     _WPUAbits	set	524
  1415  020E                     _WPUC	set	526
  1416  020C                     _WPUA	set	524
  1417                           
  1418                           	psect	cinit
  1419  0027                     start_initialization:	
  1420                           ; #config settings
  1421                           
  1422  0027                     __initialization:
  1423                           
  1424                           ; Clear objects allocated to COMMON
  1425  0027  01F7               	clrf	__pbssCOMMON& (0+127)
  1426  0028  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1427  0029  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1428  002A  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  1429  002B  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
  1430  002C  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
  1431                           
  1432                           ; Clear objects allocated to BANK0
  1433  002D  3020               	movlw	low __pbssBANK0
  1434  002E  0084               	movwf	4
  1435  002F  3000               	movlw	high __pbssBANK0
  1436  0030  0085               	movwf	5
  1437  0031  3015               	movlw	21
  1438  0032  3184  2495  3180   	fcall	clear_ram0
  1439  0035                     end_of_initialization:	
  1440                           ;End of C runtime variable initialization code
  1441                           
  1442  0035                     __end_of__initialization:
  1443  0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1444  0036  0020               	movlb	0
  1445  0037  2B8E               	ljmp	_main	;jump to C main() function
  1446                           
  1447                           	psect	bssCOMMON
  1448  0077                     __pbssCOMMON:
  1449  0077                     _FLAGS:
  1450  0077                     	ds	2
  1451  0079                     sec_tick_work@iled:
  1452  0079                     	ds	1
  1453  007A                     get_measure@measures:
  1454  007A                     	ds	1
  1455  007B                     _time_meas:
  1456  007B                     	ds	1
  1457  007C                     _FRIMWARE_VERSION_EEPROM_ADR:
  1458  007C                     	ds	1
  1459                           
  1460                           	psect	bssBANK0
  1461  0020                     __pbssBANK0:
  1462  0020                     _time_rotation:
  1463  0020                     	ds	3
  1464  0023                     ms_tick@tick_count:
  1465  0023                     	ds	2
  1466  0025                     _time_zummer:
  1467  0025                     	ds	2
  1468  0027                     _time_led:
  1469  0027                     	ds	2
  1470  0029                     _time_rele_gap:
  1471  0029                     	ds	2
  1472  002B                     _time_rele_control:
  1473  002B                     	ds	2
  1474  002D                     _time_rele_power:
  1475  002D                     	ds	2
  1476  002F                     _ADC_InterruptHandler:
  1477  002F                     	ds	2
  1478  0031                     get_jump_full@jump_counter:
  1479  0031                     	ds	1
  1480  0032                     get_jump@jump_counter:
  1481  0032                     	ds	1
  1482  0033                     get_fun_full@fun_counter:
  1483  0033                     	ds	1
  1484  0034                     get_fun@fun_counter:
  1485  0034                     	ds	1
  1486                           
  1487                           	psect	clrtext
  1488  0495                     clear_ram0:	
  1489                           ;	Called with FSR0 containing the base address, and
  1490                           ;	WREG with the size to clear
  1491                           
  1492  0495  0064               	clrwdt	;clear the watchdog before getting into this loop
  1493  0496                     clrloop0:
  1494  0496  0180               	clrf	0	;clear RAM location pointed to by FSR
  1495  0497  3101               	addfsr 0,1
  1496  0498  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1497  0499  2C96               	goto	clrloop0	;have we reached the end yet?
  1498  049A  3400               	retlw	0	;all done for this memory range, return
  1499                           
  1500                           	psect	cstackCOMMON
  1501  0070                     __pcstackCOMMON:
  1502  0070                     ?_PIN_MANAGER_Initialize:
  1503  0070                     ?_OSCILLATOR_Initialize:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506  0070                     ?_WDT_Initialize:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509  0070                     ?_FVR_Initialize:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512  0070                     ?_ADC_Initialize:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515  0070                     ?_TMR2_Initialize:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0070                     ?_TMR0_Initialize:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0070                     ?_TMR0_ISR:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0070                     ??_TMR0_ISR:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0070                     ?_TMR2_ISR:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0070                     ?_TMR2_DefaultInterruptHandler:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0070                     ??_TMR2_DefaultInterruptHandler:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0070                     ?_TMR0_DefaultInterruptHandler:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0070                     ??_TMR0_DefaultInterruptHandler:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ?_SYSTEM_Initialize:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ?_ADC_GetConversion:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ?_INTERRUPT_InterruptManager:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ?_TMR2_StartTimer:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ?_switch_zum:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ?_toggle_tone:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0070                     ??_toggle_tone:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0070                     ?_go_close:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566  0070                     ?_go_open:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ?_go_close_alt:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0070                     ?_go_open_alt:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0070                     ?_start_alarm:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578  0070                     ?_get_measure:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0070                     ?_get_fun:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0070                     ?_get_fun_full:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0070                     ?_get_jump:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0070                     ?_get_jump_full:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0070                     ?_rele_tick:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596  0070                     ??_rele_tick:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599  0070                     ?_sec_tick_work:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602  0070                     ?_povorot:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605  0070                     ?_fun_work:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608  0070                     ?_switch_wm:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611  0070                     ?_ms_tick:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614  0070                     ?_start_setup:	
  1615                           ; 1 bytes @ 0x0
  1616                           
  1617  0070                     ?_main:	
  1618                           ; 1 bytes @ 0x0
  1619                           
  1620  0070                     ?i1_ADC_GetConversion:	
  1621                           ; 1 bytes @ 0x0
  1622                           
  1623  0070                     ??i1_ADC_GetConversion:	
  1624                           ; 1 bytes @ 0x0
  1625                           
  1626  0070                     ?i1_switch_zum:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629  0070                     ??i1_switch_zum:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632  0070                     ?i1_go_close:	
  1633                           ; 1 bytes @ 0x0
  1634                           
  1635  0070                     ??i1_go_close:	
  1636                           ; 1 bytes @ 0x0
  1637                           
  1638  0070                     ?i1_go_close_alt:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641  0070                     ??i1_go_close_alt:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644                           
  1645                           ; 1 bytes @ 0x0
  1646  0070                     	ds	1
  1647  0071                     i1ADC_GetConversion@channel:
  1648                           
  1649                           ; 1 bytes @ 0x1
  1650  0071                     	ds	1
  1651  0072                     ??_start_alarm:
  1652  0072                     ??_get_measure:	
  1653                           ; 1 bytes @ 0x2
  1654                           
  1655                           
  1656                           ; 1 bytes @ 0x2
  1657  0072                     	ds	2
  1658  0074                     get_measure@res:
  1659                           
  1660                           ; 2 bytes @ 0x4
  1661  0074                     	ds	2
  1662  0076                     ??_sec_tick_work:
  1663                           
  1664                           ; 1 bytes @ 0x6
  1665  0076                     	ds	1
  1666  0077                     ??_TMR2_ISR:
  1667  0077                     ??_INTERRUPT_InterruptManager:	
  1668                           ; 1 bytes @ 0x7
  1669                           
  1670  0077                     ??_ms_tick:	
  1671                           ; 1 bytes @ 0x7
  1672                           
  1673                           
  1674                           	psect	cstackBANK0
  1675  0035                     __pcstackBANK0:	
  1676                           ; 1 bytes @ 0x7
  1677                           
  1678  0035                     ??_PIN_MANAGER_Initialize:
  1679  0035                     ??_OSCILLATOR_Initialize:	
  1680                           ; 1 bytes @ 0x0
  1681                           
  1682  0035                     ??_WDT_Initialize:	
  1683                           ; 1 bytes @ 0x0
  1684                           
  1685  0035                     ??_FVR_Initialize:	
  1686                           ; 1 bytes @ 0x0
  1687                           
  1688  0035                     ??_ADC_Initialize:	
  1689                           ; 1 bytes @ 0x0
  1690                           
  1691  0035                     ?_TMR2_SetInterruptHandler:	
  1692                           ; 1 bytes @ 0x0
  1693                           
  1694  0035                     ?_TMR0_SetInterruptHandler:	
  1695                           ; 1 bytes @ 0x0
  1696                           
  1697  0035                     ??_ADC_GetConversion:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700  0035                     ??_TMR2_StartTimer:	
  1701                           ; 1 bytes @ 0x0
  1702                           
  1703  0035                     ??_switch_zum:	
  1704                           ; 1 bytes @ 0x0
  1705                           
  1706  0035                     ?_beep:	
  1707                           ; 1 bytes @ 0x0
  1708                           
  1709  0035                     ?_boop:	
  1710                           ; 1 bytes @ 0x0
  1711                           
  1712  0035                     ??_go_close:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715  0035                     ??_go_open:	
  1716                           ; 1 bytes @ 0x0
  1717                           
  1718  0035                     ??_go_close_alt:	
  1719                           ; 1 bytes @ 0x0
  1720                           
  1721  0035                     ??_go_open_alt:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724  0035                     beep@count:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727  0035                     boop@count:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730  0035                     TMR2_SetInterruptHandler@InterruptHandler:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733  0035                     TMR0_SetInterruptHandler@InterruptHandler:	
  1734                           ; 2 bytes @ 0x0
  1735                           
  1736                           
  1737                           ; 2 bytes @ 0x0
  1738  0035                     	ds	1
  1739  0036                     ??_beep:
  1740  0036                     ??_boop:	
  1741                           ; 1 bytes @ 0x1
  1742                           
  1743  0036                     ADC_GetConversion@channel:	
  1744                           ; 1 bytes @ 0x1
  1745                           
  1746                           
  1747                           ; 1 bytes @ 0x1
  1748  0036                     	ds	1
  1749  0037                     ??_TMR2_Initialize:
  1750  0037                     ??_TMR0_Initialize:	
  1751                           ; 1 bytes @ 0x2
  1752                           
  1753  0037                     ??_TMR2_SetInterruptHandler:	
  1754                           ; 1 bytes @ 0x2
  1755                           
  1756  0037                     ??_TMR0_SetInterruptHandler:	
  1757                           ; 1 bytes @ 0x2
  1758                           
  1759  0037                     ??_get_fun:	
  1760                           ; 1 bytes @ 0x2
  1761                           
  1762  0037                     ??_get_fun_full:	
  1763                           ; 1 bytes @ 0x2
  1764                           
  1765  0037                     ??_get_jump:	
  1766                           ; 1 bytes @ 0x2
  1767                           
  1768  0037                     ??_get_jump_full:	
  1769                           ; 1 bytes @ 0x2
  1770                           
  1771  0037                     ??_povorot:	
  1772                           ; 1 bytes @ 0x2
  1773                           
  1774                           
  1775                           ; 1 bytes @ 0x2
  1776  0037                     	ds	1
  1777  0038                     ??_SYSTEM_Initialize:
  1778  0038                     beep@time:	
  1779                           ; 1 bytes @ 0x3
  1780                           
  1781  0038                     boop@time:	
  1782                           ; 1 bytes @ 0x3
  1783                           
  1784                           
  1785                           ; 1 bytes @ 0x3
  1786  0038                     	ds	1
  1787  0039                     beep@j:
  1788  0039                     boop@j:	
  1789                           ; 1 bytes @ 0x4
  1790                           
  1791  0039                     get_fun@res:	
  1792                           ; 1 bytes @ 0x4
  1793                           
  1794  0039                     get_fun_full@res:	
  1795                           ; 2 bytes @ 0x4
  1796                           
  1797  0039                     get_jump@res:	
  1798                           ; 2 bytes @ 0x4
  1799                           
  1800  0039                     get_jump_full@res:	
  1801                           ; 2 bytes @ 0x4
  1802                           
  1803                           
  1804                           ; 2 bytes @ 0x4
  1805  0039                     	ds	1
  1806  003A                     beep@i:
  1807  003A                     boop@i:	
  1808                           ; 1 bytes @ 0x5
  1809                           
  1810                           
  1811                           ; 1 bytes @ 0x5
  1812  003A                     	ds	1
  1813  003B                     ??_fun_work:
  1814  003B                     ??_switch_wm:	
  1815                           ; 1 bytes @ 0x6
  1816                           
  1817  003B                     get_fun_full@flag:	
  1818                           ; 1 bytes @ 0x6
  1819                           
  1820  003B                     get_jump_full@flag:	
  1821                           ; 1 bytes @ 0x6
  1822                           
  1823                           
  1824                           ; 1 bytes @ 0x6
  1825  003B                     	ds	1
  1826  003C                     ??_start_setup:
  1827  003C                     ??_main:	
  1828                           ; 1 bytes @ 0x7
  1829                           
  1830                           
  1831                           	psect	maintext
  1832  038E                     __pmaintext:	
  1833                           ; 1 bytes @ 0x7
  1834 ;;
  1835 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1836 ;;
  1837 ;; *************** function _main *****************
  1838 ;; Defined at:
  1839 ;;		line 566 in file "main.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;		None
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;		None
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		wreg, status,2, status,0, pclath, cstack
  1848 ;; Tracked objects:
  1849 ;;		On entry : B1F/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMMON   BANK0   BANK1
  1853 ;;      Params:         0       0       0
  1854 ;;      Locals:         0       0       0
  1855 ;;      Temps:          0       0       0
  1856 ;;      Totals:         0       0       0
  1857 ;;Total ram usage:        0 bytes
  1858 ;; Hardware stack levels required when called: 11
  1859 ;; This function calls:
  1860 ;;		_fun_work
  1861 ;;		_get_fun
  1862 ;;		_get_jump
  1863 ;;		_povorot
  1864 ;;		_start_setup
  1865 ;;		_switch_wm
  1866 ;; This function is called by:
  1867 ;;		Startup code after reset
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871  038E                     _main:	
  1872                           ;psect for function _main
  1873                           
  1874  038E                     l2499:	
  1875                           ;incstack = 0
  1876                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1877                           
  1878                           
  1879                           ;main.c: 568:     start_setup();
  1880  038E  3182  220F  3183   	fcall	_start_setup
  1881  0391                     l2501:
  1882                           
  1883                           ;main.c: 572:         if (!FLAGS.bits.ALARM) {
  1884  0391  1877               	btfsc	_FLAGS,0
  1885  0392  2B94               	goto	u1861
  1886  0393  2B95               	goto	u1860
  1887  0394                     u1861:
  1888  0394  2B91               	goto	l2501
  1889  0395                     u1860:
  1890  0395                     l2503:
  1891                           
  1892                           ;main.c: 574:             get_jump();
  1893  0395  3181  21D3  3183   	fcall	_get_jump
  1894                           
  1895                           ;main.c: 575:             switch_wm();
  1896  0398  3183  2313  3183   	fcall	_switch_wm
  1897                           
  1898                           ;main.c: 577:             get_fun();
  1899  039B  3181  2155  3183   	fcall	_get_fun
  1900                           
  1901                           ;main.c: 578:             fun_work();
  1902  039E  3181  2112  3183   	fcall	_fun_work
  1903                           
  1904                           ;main.c: 580:             povorot();
  1905  03A1  3180  2038  3183   	fcall	_povorot
  1906  03A4  2B91               	goto	l2501
  1907  03A5  2826               	ljmp	start
  1908  03A6                     __end_of_main:
  1909                           
  1910                           	psect	text1
  1911  0313                     __ptext1:	
  1912 ;; *************** function _switch_wm *****************
  1913 ;; Defined at:
  1914 ;;		line 413 in file "main.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;		None
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;		None
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2, status,0, pclath, cstack
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMMON   BANK0   BANK1
  1928 ;;      Params:         0       0       0
  1929 ;;      Locals:         0       0       0
  1930 ;;      Temps:          0       1       0
  1931 ;;      Totals:         0       1       0
  1932 ;;Total ram usage:        1 bytes
  1933 ;; Hardware stack levels used: 1
  1934 ;; Hardware stack levels required when called: 9
  1935 ;; This function calls:
  1936 ;;		_boop
  1937 ;; This function is called by:
  1938 ;;		_main
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942  0313                     _switch_wm:	
  1943                           ;psect for function _switch_wm
  1944                           
  1945  0313                     l2433:	
  1946                           ;incstack = 0
  1947                           ; Regs used in _switch_wm: [wreg+status,2+status,0+pclath+cstack]
  1948                           
  1949                           
  1950                           ;main.c: 414:     if (FLAGS.bits._JUMP_CONNECTED) {
  1951  0313  1DF7               	btfss	_FLAGS,3
  1952  0314  2B16               	goto	u1781
  1953  0315  2B17               	goto	u1780
  1954  0316                     u1781:
  1955  0316  2B26               	goto	l455
  1956  0317                     u1780:
  1957  0317                     l2435:
  1958                           
  1959                           ;main.c: 415:         if (FLAGS.bits.NORMAL_WORK_MODE) {
  1960  0317  1CF7               	btfss	_FLAGS,1
  1961  0318  2B1A               	goto	u1791
  1962  0319  2B1B               	goto	u1790
  1963  031A                     u1791:
  1964  031A  2B32               	goto	l459
  1965  031B                     u1790:
  1966  031B                     l2437:
  1967                           
  1968                           ;main.c: 416:             FLAGS.bits.NORMAL_WORK_MODE = 0;
  1969  031B  10F7               	bcf	_FLAGS,1
  1970  031C                     l2439:
  1971                           
  1972                           ;main.c: 419:             boop(40, 2);
  1973  031C  3002               	movlw	2
  1974  031D  0020               	movlb	0	; select bank0
  1975  031E  00BB               	movwf	??_switch_wm
  1976  031F  083B               	movf	??_switch_wm,w
  1977  0320  00B5               	movwf	boop@count
  1978  0321  3028               	movlw	40
  1979  0322  3182  2247  3183   	fcall	_boop
  1980  0325  2B32               	goto	l459
  1981  0326                     l455:
  1982                           
  1983                           ;main.c: 422:         if (!FLAGS.bits.NORMAL_WORK_MODE) {
  1984  0326  18F7               	btfsc	_FLAGS,1
  1985  0327  2B29               	goto	u1801
  1986  0328  2B2A               	goto	u1800
  1987  0329                     u1801:
  1988  0329  2B32               	goto	l459
  1989  032A                     u1800:
  1990  032A                     l2441:
  1991                           
  1992                           ;main.c: 423:             FLAGS.bits.NORMAL_WORK_MODE = 1;
  1993  032A  14F7               	bsf	_FLAGS,1
  1994  032B                     l2443:
  1995                           
  1996                           ;main.c: 426:             boop(40, 1);
  1997  032B  0020               	movlb	0	; select bank0
  1998  032C  01B5               	clrf	boop@count
  1999  032D  0AB5               	incf	boop@count,f
  2000  032E  3028               	movlw	40
  2001  032F  3182  2247  3183   	fcall	_boop
  2002  0332                     l459:
  2003  0332  0008               	return
  2004  0333                     __end_of_switch_wm:
  2005                           
  2006                           	psect	text2
  2007  0247                     __ptext2:	
  2008 ;; *************** function _boop *****************
  2009 ;; Defined at:
  2010 ;;		line 112 in file "main.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  time            1    wreg     unsigned char 
  2013 ;;  count           1    0[BANK0 ] unsigned char 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  time            1    3[BANK0 ] unsigned char 
  2016 ;;  i               1    5[BANK0 ] unsigned char 
  2017 ;;  j               1    4[BANK0 ] unsigned char 
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      void 
  2020 ;; Registers used:
  2021 ;;		wreg, status,2, status,0, pclath, cstack
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMMON   BANK0   BANK1
  2027 ;;      Params:         0       1       0
  2028 ;;      Locals:         0       3       0
  2029 ;;      Temps:          0       2       0
  2030 ;;      Totals:         0       6       0
  2031 ;;Total ram usage:        6 bytes
  2032 ;; Hardware stack levels used: 1
  2033 ;; Hardware stack levels required when called: 8
  2034 ;; This function calls:
  2035 ;;		_switch_zum
  2036 ;; This function is called by:
  2037 ;;		_switch_wm
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041  0247                     _boop:	
  2042                           ;psect for function _boop
  2043                           
  2044                           
  2045                           ;incstack = 0
  2046                           ; Regs used in _boop: [wreg+status,2+status,0+pclath+cstack]
  2047                           ;boop@time stored from wreg
  2048  0247  0020               	movlb	0	; select bank0
  2049  0248  00B8               	movwf	boop@time
  2050  0249                     l2341:
  2051                           
  2052                           ;main.c: 113:     for (char j = 0; j < count; j++) {
  2053  0249  01B9               	clrf	boop@j
  2054  024A  2A76               	goto	l2357
  2055  024B                     l2343:
  2056                           
  2057                           ;main.c: 114:         for (char i = 0; i < time; i++) {
  2058  024B  01BA               	clrf	boop@i
  2059  024C  2A5E               	goto	l2351
  2060  024D                     l2345:
  2061                           
  2062                           ;main.c: 115:             switch_zum();
  2063  024D  3184  2427  3182   	fcall	_switch_zum
  2064  0250                     l2347:
  2065                           
  2066                           ;main.c: 116:             _delay((unsigned long)((1)*(16000000/4000.0)));
  2067  0250  3006               	movlw	6
  2068  0251  0020               	movlb	0	; select bank0
  2069  0252  00B6               	movwf	??_boop
  2070  0253  3030               	movlw	48
  2071  0254                     u1877:
  2072  0254  0B89               	decfsz	9,f
  2073  0255  2A54               	goto	u1877
  2074  0256  0BB6               	decfsz	??_boop,f
  2075  0257  2A54               	goto	u1877
  2076  0258  0000               	nop
  2077  0259                     l2349:
  2078                           
  2079                           ;main.c: 117:         }
  2080  0259  3001               	movlw	1
  2081  025A  0020               	movlb	0	; select bank0
  2082  025B  00B6               	movwf	??_boop
  2083  025C  0836               	movf	??_boop,w
  2084  025D  07BA               	addwf	boop@i,f
  2085  025E                     l2351:
  2086  025E  0838               	movf	boop@time,w
  2087  025F  023A               	subwf	boop@i,w
  2088  0260  1C03               	skipc
  2089  0261  2A63               	goto	u1561
  2090  0262  2A64               	goto	u1560
  2091  0263                     u1561:
  2092  0263  2A4D               	goto	l2345
  2093  0264                     u1560:
  2094  0264                     l2353:
  2095                           
  2096                           ;main.c: 118:         _delay((unsigned long)((150)*(16000000/4000.0)));
  2097  0264  3004               	movlw	4
  2098  0265  0020               	movlb	0	; select bank0
  2099  0266  00B7               	movwf	??_boop+1
  2100  0267  300C               	movlw	12
  2101  0268  00B6               	movwf	??_boop
  2102  0269  3033               	movlw	51
  2103  026A                     u1887:
  2104  026A  0B89               	decfsz	9,f
  2105  026B  2A6A               	goto	u1887
  2106  026C  0BB6               	decfsz	??_boop,f
  2107  026D  2A6A               	goto	u1887
  2108  026E  0BB7               	decfsz	??_boop+1,f
  2109  026F  2A6A               	goto	u1887
  2110  0270  3200               	nop2
  2111  0271                     l2355:
  2112                           
  2113                           ;main.c: 119:     }
  2114  0271  3001               	movlw	1
  2115  0272  0020               	movlb	0	; select bank0
  2116  0273  00B6               	movwf	??_boop
  2117  0274  0836               	movf	??_boop,w
  2118  0275  07B9               	addwf	boop@j,f
  2119  0276                     l2357:
  2120  0276  0835               	movf	boop@count,w
  2121  0277  0239               	subwf	boop@j,w
  2122  0278  1C03               	skipc
  2123  0279  2A7B               	goto	u1571
  2124  027A  2A7C               	goto	u1570
  2125  027B                     u1571:
  2126  027B  2A4B               	goto	l2343
  2127  027C                     u1570:
  2128  027C                     l292:
  2129  027C  0008               	return
  2130  027D                     __end_of_boop:
  2131                           
  2132                           	psect	text3
  2133  020F                     __ptext3:	
  2134 ;; *************** function _start_setup *****************
  2135 ;; Defined at:
  2136 ;;		line 531 in file "main.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;		None
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;		None
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      void 
  2143 ;; Registers used:
  2144 ;;		wreg, status,2, status,0, pclath, cstack
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMMON   BANK0   BANK1
  2150 ;;      Params:         0       0       0
  2151 ;;      Locals:         0       0       0
  2152 ;;      Temps:          0       0       0
  2153 ;;      Totals:         0       0       0
  2154 ;;Total ram usage:        0 bytes
  2155 ;; Hardware stack levels used: 1
  2156 ;; Hardware stack levels required when called: 10
  2157 ;; This function calls:
  2158 ;;		_SYSTEM_Initialize
  2159 ;;		_TMR0_SetInterruptHandler
  2160 ;;		_TMR2_SetInterruptHandler
  2161 ;;		_TMR2_StartTimer
  2162 ;;		_get_fun_full
  2163 ;;		_get_jump_full
  2164 ;; This function is called by:
  2165 ;;		_main
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169  020F                     _start_setup:	
  2170                           ;psect for function _start_setup
  2171                           
  2172  020F                     l2445:	
  2173                           ;incstack = 0
  2174                           ; Regs used in _start_setup: [wreg+status,2+status,0+pclath+cstack]
  2175                           
  2176                           
  2177                           ;main.c: 533:     SYSTEM_Initialize();
  2178  020F  3183  23BE  3182   	fcall	_SYSTEM_Initialize
  2179  0212                     l2447:
  2180                           
  2181                           ;main.c: 534:     (INTCONbits.GIE = 1);
  2182  0212  178B               	bsf	11,7	;volatile
  2183  0213                     l2449:
  2184                           
  2185                           ;main.c: 535:     (INTCONbits.PEIE = 1);
  2186  0213  170B               	bsf	11,6	;volatile
  2187                           
  2188                           ;main.c: 538:     TMR0_SetInterruptHandler(switch_zum);
  2189  0214  3027               	movlw	low _switch_zum
  2190  0215  0020               	movlb	0	; select bank0
  2191  0216  00B5               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2192  0217  3004               	movlw	high _switch_zum
  2193  0218  00B6               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2194  0219  3184  24A1  3182   	fcall	_TMR0_SetInterruptHandler
  2195                           
  2196                           ;main.c: 539:     TMR2_SetInterruptHandler(ms_tick);
  2197  021C  30FF               	movlw	low _ms_tick
  2198  021D  0020               	movlb	0	; select bank0
  2199  021E  00B5               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2200  021F  3003               	movlw	high _ms_tick
  2201  0220  00B6               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2202  0221  3184  249B  3182   	fcall	_TMR2_SetInterruptHandler
  2203  0224                     l2451:
  2204                           
  2205                           ;main.c: 540:     TMR2_StartTimer();
  2206  0224  3184  24BE  3182   	fcall	_TMR2_StartTimer
  2207  0227                     l2453:
  2208  0227  0023               	movlb	3	; select bank3
  2209  0228  118E               	bcf	14,3	;volatile
  2210  0229                     l2455:
  2211  0229  108C               	bcf	12,1	;volatile
  2212  022A                     l2457:
  2213  022A  110E               	bcf	14,2	;volatile
  2214  022B                     l2459:
  2215  022B  0024               	movlb	4	; select bank4
  2216  022C  108C               	bcf	12,1	;volatile
  2217  022D                     l2461:
  2218  022D  0021               	movlb	1	; select bank1
  2219  022E  148C               	bsf	12,1	;volatile
  2220  022F                     l2463:
  2221  022F  0024               	movlb	4	; select bank4
  2222  0230  110E               	bcf	14,2	;volatile
  2223  0231                     l2465:
  2224  0231  0021               	movlb	1	; select bank1
  2225  0232  150E               	bsf	14,2	;volatile
  2226  0233                     l2467:
  2227                           
  2228                           ;main.c: 552:     INTCONbits.TMR0IE = 0;
  2229  0233  128B               	bcf	11,5	;volatile
  2230  0234                     l2469:
  2231                           
  2232                           ;main.c: 553:     FLAGS.value = 0;
  2233  0234  01F7               	clrf	_FLAGS
  2234  0235  01F8               	clrf	_FLAGS+1
  2235  0236                     l2471:
  2236                           
  2237                           ;main.c: 554:     FLAGS.bits.ALARM =0;
  2238  0236  1077               	bcf	_FLAGS,0
  2239  0237                     l2473:
  2240  0237  0022               	movlb	2	; select bank2
  2241  0238  128E               	bcf	14,5	;volatile
  2242  0239                     l2475:
  2243  0239  120E               	bcf	14,4	;volatile
  2244  023A                     l2477:
  2245  023A  100E               	bcf	14,0	;volatile
  2246  023B                     l2479:
  2247  023B  0021               	movlb	1	; select bank1
  2248  023C  100E               	bcf	14,0	;volatile
  2249  023D                     l2481:
  2250                           
  2251                           ;main.c: 561:     get_jump_full();
  2252  023D  3180  20CD  3182   	fcall	_get_jump_full
  2253  0240                     l2483:
  2254                           
  2255                           ;main.c: 562:     get_fun_full();
  2256  0240  3180  2084  3182   	fcall	_get_fun_full
  2257  0243                     l2485:
  2258                           
  2259                           ;main.c: 563:     time_rele_power = 0;
  2260  0243  0020               	movlb	0	; select bank0
  2261  0244  01AD               	clrf	_time_rele_power
  2262  0245  01AE               	clrf	_time_rele_power+1
  2263  0246                     l490:
  2264  0246  0008               	return
  2265  0247                     __end_of_start_setup:
  2266                           
  2267                           	psect	text4
  2268  00CD                     __ptext4:	
  2269 ;; *************** function _get_jump_full *****************
  2270 ;; Defined at:
  2271 ;;		line 283 in file "main.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;		None
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  res             2    4[BANK0 ] unsigned int 
  2276 ;;  flag            1    6[BANK0 ] unsigned char 
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      void 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2, status,0, pclath, cstack
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMMON   BANK0   BANK1
  2286 ;;      Params:         0       0       0
  2287 ;;      Locals:         0       3       0
  2288 ;;      Temps:          0       2       0
  2289 ;;      Totals:         0       5       0
  2290 ;;Total ram usage:        5 bytes
  2291 ;; Hardware stack levels used: 1
  2292 ;; Hardware stack levels required when called: 8
  2293 ;; This function calls:
  2294 ;;		_ADC_GetConversion
  2295 ;; This function is called by:
  2296 ;;		_start_setup
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300  00CD                     _get_jump_full:	
  2301                           ;psect for function _get_jump_full
  2302                           
  2303  00CD                     l401:	
  2304                           ;incstack = 0
  2305                           ; Regs used in _get_jump_full: [wreg+status,2+status,0+pclath+cstack]
  2306                           ;main.c: 285:     static signed char jump_counter;;main.c: 286:     do { ANSELAbits.ANSA
      +                          1 = 1; } while(0);
  2307                           
  2308  00CD  0023               	movlb	3	; select bank3
  2309  00CE  148C               	bsf	12,1	;volatile
  2310  00CF                     l2031:
  2311                           
  2312                           ;main.c: 287:     char flag = 0;
  2313  00CF  0020               	movlb	0	; select bank0
  2314  00D0  01BB               	clrf	get_jump_full@flag
  2315  00D1                     l2033:
  2316                           
  2317                           ;main.c: 289:         unsigned res = ADC_GetConversion(PIN_JUMP_STATE);
  2318  00D1  3001               	movlw	1
  2319  00D2  3183  2373  3180   	fcall	_ADC_GetConversion
  2320  00D5  0020               	movlb	0	; select bank0
  2321  00D6  00B7               	movwf	??_get_jump_full
  2322  00D7  01B8               	clrf	??_get_jump_full+1
  2323  00D8  0837               	movf	??_get_jump_full,w
  2324  00D9  00B9               	movwf	get_jump_full@res
  2325  00DA  0838               	movf	??_get_jump_full+1,w
  2326  00DB  00BA               	movwf	get_jump_full@res+1
  2327  00DC                     l2035:
  2328                           
  2329                           ;main.c: 290:         if (res < 25) jump_counter--;
  2330  00DC  3000               	movlw	0
  2331  00DD  023A               	subwf	get_jump_full@res+1,w
  2332  00DE  3019               	movlw	25
  2333  00DF  1903               	skipnz
  2334  00E0  0239               	subwf	get_jump_full@res,w
  2335  00E1  1803               	skipnc
  2336  00E2  28E4               	goto	u1111
  2337  00E3  28E5               	goto	u1110
  2338  00E4                     u1111:
  2339  00E4  28EA               	goto	l2039
  2340  00E5                     u1110:
  2341  00E5                     l2037:
  2342  00E5  30FF               	movlw	255
  2343  00E6  00B7               	movwf	??_get_jump_full
  2344  00E7  0837               	movf	??_get_jump_full,w
  2345  00E8  07B1               	addwf	get_jump_full@jump_counter,f
  2346  00E9  28EE               	goto	l2041
  2347  00EA                     l2039:
  2348  00EA  3001               	movlw	1
  2349  00EB  00B7               	movwf	??_get_jump_full
  2350  00EC  0837               	movf	??_get_jump_full,w
  2351  00ED  07B1               	addwf	get_jump_full@jump_counter,f
  2352  00EE                     l2041:
  2353                           
  2354                           ;main.c: 305:         if (jump_counter > 10) {
  2355  00EE  0831               	movf	get_jump_full@jump_counter,w
  2356  00EF  3A80               	xorlw	128
  2357  00F0  3E75               	addlw	-139
  2358  00F1  1C03               	skipc
  2359  00F2  28F4               	goto	u1121
  2360  00F3  28F5               	goto	u1120
  2361  00F4                     u1121:
  2362  00F4  28FD               	goto	l2049
  2363  00F5                     u1120:
  2364  00F5                     l2043:
  2365                           
  2366                           ;main.c: 306:             jump_counter = 10;
  2367  00F5  300A               	movlw	10
  2368  00F6  00B7               	movwf	??_get_jump_full
  2369  00F7  0837               	movf	??_get_jump_full,w
  2370  00F8  00B1               	movwf	get_jump_full@jump_counter
  2371  00F9                     l2045:
  2372                           
  2373                           ;main.c: 307:             FLAGS.bits._JUMP_CONNECTED = 0;
  2374  00F9  11F7               	bcf	_FLAGS,3
  2375  00FA                     l2047:
  2376                           
  2377                           ;main.c: 308:             flag = 1;
  2378  00FA  01BB               	clrf	get_jump_full@flag
  2379  00FB  0ABB               	incf	get_jump_full@flag,f
  2380                           
  2381                           ;main.c: 309:         } else if (jump_counter<-10) {
  2382  00FC  290A               	goto	l2057
  2383  00FD                     l2049:
  2384  00FD  0831               	movf	get_jump_full@jump_counter,w
  2385  00FE  3A80               	xorlw	128
  2386  00FF  3E8A               	addlw	138
  2387  0100  1803               	skipnc
  2388  0101  2903               	goto	u1131
  2389  0102  2904               	goto	u1130
  2390  0103                     u1131:
  2391  0103  290A               	goto	l2057
  2392  0104                     u1130:
  2393  0104                     l2051:
  2394                           
  2395                           ;main.c: 310:             jump_counter = -10;
  2396  0104  30F6               	movlw	246
  2397  0105  00B7               	movwf	??_get_jump_full
  2398  0106  0837               	movf	??_get_jump_full,w
  2399  0107  00B1               	movwf	get_jump_full@jump_counter
  2400  0108                     l2053:
  2401                           
  2402                           ;main.c: 311:             FLAGS.bits._JUMP_CONNECTED = 1;
  2403  0108  15F7               	bsf	_FLAGS,3
  2404  0109  28FA               	goto	l2047
  2405  010A                     l2057:
  2406                           
  2407                           ;main.c: 317:     } while (flag == 0);
  2408  010A  083B               	movf	get_jump_full@flag,w
  2409  010B  1903               	btfsc	3,2
  2410  010C  290E               	goto	u1141
  2411  010D  290F               	goto	u1140
  2412  010E                     u1141:
  2413  010E  28D1               	goto	l2033
  2414  010F                     u1140:
  2415  010F                     l410:	
  2416                           ;main.c: 318:     do { ANSELAbits.ANSA1 = 0; } while(0);
  2417                           
  2418  010F  0023               	movlb	3	; select bank3
  2419  0110  108C               	bcf	12,1	;volatile
  2420  0111                     l412:
  2421  0111  0008               	return
  2422  0112                     __end_of_get_jump_full:
  2423                           
  2424                           	psect	text5
  2425  0084                     __ptext5:	
  2426 ;; *************** function _get_fun_full *****************
  2427 ;; Defined at:
  2428 ;;		line 211 in file "main.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;		None
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  res             2    4[BANK0 ] unsigned int 
  2433 ;;  flag            1    6[BANK0 ] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      void 
  2436 ;; Registers used:
  2437 ;;		wreg, status,2, status,0, pclath, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMMON   BANK0   BANK1
  2443 ;;      Params:         0       0       0
  2444 ;;      Locals:         0       3       0
  2445 ;;      Temps:          0       2       0
  2446 ;;      Totals:         0       5       0
  2447 ;;Total ram usage:        5 bytes
  2448 ;; Hardware stack levels used: 1
  2449 ;; Hardware stack levels required when called: 8
  2450 ;; This function calls:
  2451 ;;		_ADC_GetConversion
  2452 ;; This function is called by:
  2453 ;;		_start_setup
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457  0084                     _get_fun_full:	
  2458                           ;psect for function _get_fun_full
  2459                           
  2460  0084                     l367:	
  2461                           ;incstack = 0
  2462                           ; Regs used in _get_fun_full: [wreg+status,2+status,0+pclath+cstack]
  2463                           ;main.c: 213:     static signed char fun_counter;;main.c: 214:     do { LATCbits.LATC1 =
      +                           1; } while(0);
  2464                           
  2465  0084  0022               	movlb	2	; select bank2
  2466  0085  148E               	bsf	14,1	;volatile
  2467  0086                     l369:	
  2468                           ;main.c: 215:     do { ANSELCbits.ANSC2 = 1; } while(0);
  2469                           
  2470  0086  0023               	movlb	3	; select bank3
  2471  0087  150E               	bsf	14,2	;volatile
  2472  0088                     l2003:
  2473                           
  2474                           ;main.c: 216:     char flag = 0;
  2475  0088  0020               	movlb	0	; select bank0
  2476  0089  01BB               	clrf	get_fun_full@flag
  2477  008A                     l2005:
  2478                           
  2479                           ;main.c: 218:         unsigned res = ADC_GetConversion(PIN_FUN_STATE);
  2480  008A  3006               	movlw	6
  2481  008B  3183  2373  3180   	fcall	_ADC_GetConversion
  2482  008E  0020               	movlb	0	; select bank0
  2483  008F  00B7               	movwf	??_get_fun_full
  2484  0090  01B8               	clrf	??_get_fun_full+1
  2485  0091  0837               	movf	??_get_fun_full,w
  2486  0092  00B9               	movwf	get_fun_full@res
  2487  0093  0838               	movf	??_get_fun_full+1,w
  2488  0094  00BA               	movwf	get_fun_full@res+1
  2489  0095                     l2007:
  2490                           
  2491                           ;main.c: 219:         if (res < 25) fun_counter--;
  2492  0095  3000               	movlw	0
  2493  0096  023A               	subwf	get_fun_full@res+1,w
  2494  0097  3019               	movlw	25
  2495  0098  1903               	skipnz
  2496  0099  0239               	subwf	get_fun_full@res,w
  2497  009A  1803               	skipnc
  2498  009B  289D               	goto	u1071
  2499  009C  289E               	goto	u1070
  2500  009D                     u1071:
  2501  009D  28A3               	goto	l2011
  2502  009E                     u1070:
  2503  009E                     l2009:
  2504  009E  30FF               	movlw	255
  2505  009F  00B7               	movwf	??_get_fun_full
  2506  00A0  0837               	movf	??_get_fun_full,w
  2507  00A1  07B3               	addwf	get_fun_full@fun_counter,f
  2508  00A2  28A7               	goto	l2013
  2509  00A3                     l2011:
  2510  00A3  3001               	movlw	1
  2511  00A4  00B7               	movwf	??_get_fun_full
  2512  00A5  0837               	movf	??_get_fun_full,w
  2513  00A6  07B3               	addwf	get_fun_full@fun_counter,f
  2514  00A7                     l2013:
  2515                           
  2516                           ;main.c: 235:         if (fun_counter > 10) {
  2517  00A7  0833               	movf	get_fun_full@fun_counter,w
  2518  00A8  3A80               	xorlw	128
  2519  00A9  3E75               	addlw	-139
  2520  00AA  1C03               	skipc
  2521  00AB  28AD               	goto	u1081
  2522  00AC  28AE               	goto	u1080
  2523  00AD                     u1081:
  2524  00AD  28B6               	goto	l2021
  2525  00AE                     u1080:
  2526  00AE                     l2015:
  2527                           
  2528                           ;main.c: 236:             fun_counter = 10;
  2529  00AE  300A               	movlw	10
  2530  00AF  00B7               	movwf	??_get_fun_full
  2531  00B0  0837               	movf	??_get_fun_full,w
  2532  00B1  00B3               	movwf	get_fun_full@fun_counter
  2533  00B2                     l2017:
  2534                           
  2535                           ;main.c: 237:             FLAGS.bits._FUN_CONNECTED = 0;
  2536  00B2  1177               	bcf	_FLAGS,2
  2537  00B3                     l2019:
  2538                           
  2539                           ;main.c: 238:             flag = 1;
  2540  00B3  01BB               	clrf	get_fun_full@flag
  2541  00B4  0ABB               	incf	get_fun_full@flag,f
  2542                           
  2543                           ;main.c: 239:         } else if (fun_counter<-10) {
  2544  00B5  28C3               	goto	l2029
  2545  00B6                     l2021:
  2546  00B6  0833               	movf	get_fun_full@fun_counter,w
  2547  00B7  3A80               	xorlw	128
  2548  00B8  3E8A               	addlw	138
  2549  00B9  1803               	skipnc
  2550  00BA  28BC               	goto	u1091
  2551  00BB  28BD               	goto	u1090
  2552  00BC                     u1091:
  2553  00BC  28C3               	goto	l2029
  2554  00BD                     u1090:
  2555  00BD                     l2023:
  2556                           
  2557                           ;main.c: 240:             fun_counter = 10;
  2558  00BD  300A               	movlw	10
  2559  00BE  00B7               	movwf	??_get_fun_full
  2560  00BF  0837               	movf	??_get_fun_full,w
  2561  00C0  00B3               	movwf	get_fun_full@fun_counter
  2562  00C1                     l2025:
  2563                           
  2564                           ;main.c: 241:             FLAGS.bits._FUN_CONNECTED = 1;
  2565  00C1  1577               	bsf	_FLAGS,2
  2566  00C2  28B3               	goto	l2019
  2567  00C3                     l2029:
  2568                           
  2569                           ;main.c: 246:     } while (flag == 0);
  2570  00C3  083B               	movf	get_fun_full@flag,w
  2571  00C4  1903               	btfsc	3,2
  2572  00C5  28C7               	goto	u1101
  2573  00C6  28C8               	goto	u1100
  2574  00C7                     u1101:
  2575  00C7  288A               	goto	l2005
  2576  00C8                     u1100:
  2577  00C8                     l378:	
  2578                           ;main.c: 248:     do { ANSELCbits.ANSC2 = 0; } while(0);
  2579                           
  2580  00C8  0023               	movlb	3	; select bank3
  2581  00C9  110E               	bcf	14,2	;volatile
  2582  00CA                     l380:	
  2583                           ;main.c: 249:     do { LATCbits.LATC1 = 0; } while(0);
  2584                           
  2585  00CA  0022               	movlb	2	; select bank2
  2586  00CB  108E               	bcf	14,1	;volatile
  2587  00CC                     l382:
  2588  00CC  0008               	return
  2589  00CD                     __end_of_get_fun_full:
  2590                           
  2591                           	psect	text6
  2592  04BE                     __ptext6:	
  2593 ;; *************** function _TMR2_StartTimer *****************
  2594 ;; Defined at:
  2595 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;		None
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      void 
  2602 ;; Registers used:
  2603 ;;		None
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1
  2609 ;;      Params:         0       0       0
  2610 ;;      Locals:         0       0       0
  2611 ;;      Temps:          0       0       0
  2612 ;;      Totals:         0       0       0
  2613 ;;Total ram usage:        0 bytes
  2614 ;; Hardware stack levels used: 1
  2615 ;; Hardware stack levels required when called: 7
  2616 ;; This function calls:
  2617 ;;		Nothing
  2618 ;; This function is called by:
  2619 ;;		_start_setup
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623  04BE                     _TMR2_StartTimer:	
  2624                           ;psect for function _TMR2_StartTimer
  2625                           
  2626  04BE                     l2321:	
  2627                           ;incstack = 0
  2628                           ; Regs used in _TMR2_StartTimer: []
  2629                           
  2630                           
  2631                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  2632  04BE  0020               	movlb	0	; select bank0
  2633  04BF  151C               	bsf	28,2	;volatile
  2634  04C0                     l140:
  2635  04C0  0008               	return
  2636  04C1                     __end_of_TMR2_StartTimer:
  2637                           
  2638                           	psect	text7
  2639  03BE                     __ptext7:	
  2640 ;; *************** function _SYSTEM_Initialize *****************
  2641 ;; Defined at:
  2642 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;		None
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      void 
  2649 ;; Registers used:
  2650 ;;		wreg, status,2, status,0, pclath, cstack
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMMON   BANK0   BANK1
  2656 ;;      Params:         0       0       0
  2657 ;;      Locals:         0       0       0
  2658 ;;      Temps:          0       0       0
  2659 ;;      Totals:         0       0       0
  2660 ;;Total ram usage:        0 bytes
  2661 ;; Hardware stack levels used: 1
  2662 ;; Hardware stack levels required when called: 9
  2663 ;; This function calls:
  2664 ;;		_ADC_Initialize
  2665 ;;		_FVR_Initialize
  2666 ;;		_OSCILLATOR_Initialize
  2667 ;;		_PIN_MANAGER_Initialize
  2668 ;;		_TMR0_Initialize
  2669 ;;		_TMR2_Initialize
  2670 ;;		_WDT_Initialize
  2671 ;; This function is called by:
  2672 ;;		_start_setup
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676  03BE                     _SYSTEM_Initialize:	
  2677                           ;psect for function _SYSTEM_Initialize
  2678                           
  2679  03BE                     l2319:	
  2680                           ;incstack = 0
  2681                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2682                           
  2683                           
  2684                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2685  03BE  3183  23EA  3183   	fcall	_PIN_MANAGER_Initialize
  2686                           
  2687                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2688  03C1  3184  248E  3183   	fcall	_OSCILLATOR_Initialize
  2689                           
  2690                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2691  03C4  3184  24B6  3183   	fcall	_WDT_Initialize
  2692                           
  2693                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  2694  03C7  3184  24BA  3183   	fcall	_FVR_Initialize
  2695                           
  2696                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2697  03CA  3184  2486  3183   	fcall	_ADC_Initialize
  2698                           
  2699                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  2700  03CD  3184  2414  3183   	fcall	_TMR2_Initialize
  2701                           
  2702                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  2703  03D0  3183  23D4  3183   	fcall	_TMR0_Initialize
  2704  03D3                     l25:
  2705  03D3  0008               	return
  2706  03D4                     __end_of_SYSTEM_Initialize:
  2707                           
  2708                           	psect	text8
  2709  04B6                     __ptext8:	
  2710 ;; *************** function _WDT_Initialize *****************
  2711 ;; Defined at:
  2712 ;;		line 72 in file "mcc_generated_files/mcc.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;		None
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;		None
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      void 
  2719 ;; Registers used:
  2720 ;;		wreg
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMMON   BANK0   BANK1
  2726 ;;      Params:         0       0       0
  2727 ;;      Locals:         0       0       0
  2728 ;;      Temps:          0       0       0
  2729 ;;      Totals:         0       0       0
  2730 ;;Total ram usage:        0 bytes
  2731 ;; Hardware stack levels used: 1
  2732 ;; Hardware stack levels required when called: 7
  2733 ;; This function calls:
  2734 ;;		Nothing
  2735 ;; This function is called by:
  2736 ;;		_SYSTEM_Initialize
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740  04B6                     _WDT_Initialize:	
  2741                           ;psect for function _WDT_Initialize
  2742                           
  2743  04B6                     l2283:	
  2744                           ;incstack = 0
  2745                           ; Regs used in _WDT_Initialize: [wreg]
  2746                           
  2747                           
  2748                           ;mcc_generated_files/mcc.c: 75:     WDTCON = 0x16;
  2749  04B6  3016               	movlw	22
  2750  04B7  0021               	movlb	1	; select bank1
  2751  04B8  0097               	movwf	23	;volatile
  2752  04B9                     l31:
  2753  04B9  0008               	return
  2754  04BA                     __end_of_WDT_Initialize:
  2755                           
  2756                           	psect	text9
  2757  0414                     __ptext9:	
  2758 ;; *************** function _TMR2_Initialize *****************
  2759 ;; Defined at:
  2760 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;		None
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;		None
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  1    wreg      void 
  2767 ;; Registers used:
  2768 ;;		wreg, status,2, status,0, pclath, cstack
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMMON   BANK0   BANK1
  2774 ;;      Params:         0       0       0
  2775 ;;      Locals:         0       0       0
  2776 ;;      Temps:          0       0       0
  2777 ;;      Totals:         0       0       0
  2778 ;;Total ram usage:        0 bytes
  2779 ;; Hardware stack levels used: 1
  2780 ;; Hardware stack levels required when called: 8
  2781 ;; This function calls:
  2782 ;;		_TMR2_SetInterruptHandler
  2783 ;; This function is called by:
  2784 ;;		_SYSTEM_Initialize
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788  0414                     _TMR2_Initialize:	
  2789                           ;psect for function _TMR2_Initialize
  2790                           
  2791  0414                     l2293:	
  2792                           ;incstack = 0
  2793                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2794                           
  2795                           
  2796                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x63;
  2797  0414  3063               	movlw	99
  2798  0415  0020               	movlb	0	; select bank0
  2799  0416  009B               	movwf	27	;volatile
  2800  0417                     l2295:
  2801                           
  2802                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  2803  0417  019A               	clrf	26	;volatile
  2804  0418                     l2297:
  2805                           
  2806                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  2807  0418  1091               	bcf	17,1	;volatile
  2808  0419                     l2299:
  2809                           
  2810                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  2811  0419  0021               	movlb	1	; select bank1
  2812  041A  1491               	bsf	17,1	;volatile
  2813  041B                     l2301:
  2814                           
  2815                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  2816  041B  30CB               	movlw	low _TMR2_DefaultInterruptHandler
  2817  041C  0020               	movlb	0	; select bank0
  2818  041D  00B5               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2819  041E  3004               	movlw	high _TMR2_DefaultInterruptHandler
  2820  041F  00B6               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2821  0420  3184  249B  3184   	fcall	_TMR2_SetInterruptHandler
  2822  0423                     l2303:
  2823                           
  2824                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x4D;
  2825  0423  304D               	movlw	77
  2826  0424  0020               	movlb	0	; select bank0
  2827  0425  009C               	movwf	28	;volatile
  2828  0426                     l137:
  2829  0426  0008               	return
  2830  0427                     __end_of_TMR2_Initialize:
  2831                           
  2832                           	psect	text10
  2833  049B                     __ptext10:	
  2834 ;; *************** function _TMR2_SetInterruptHandler *****************
  2835 ;; Defined at:
  2836 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2839 ;;		 -> ms_tick(1), TMR2_DefaultInterruptHandler(1), 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;		None
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1
  2851 ;;      Params:         0       2       0
  2852 ;;      Locals:         0       0       0
  2853 ;;      Temps:          0       0       0
  2854 ;;      Totals:         0       2       0
  2855 ;;Total ram usage:        2 bytes
  2856 ;; Hardware stack levels used: 1
  2857 ;; Hardware stack levels required when called: 7
  2858 ;; This function calls:
  2859 ;;		Nothing
  2860 ;; This function is called by:
  2861 ;;		_TMR2_Initialize
  2862 ;;		_start_setup
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866  049B                     _TMR2_SetInterruptHandler:	
  2867                           ;psect for function _TMR2_SetInterruptHandler
  2868                           
  2869  049B                     l2261:	
  2870                           ;incstack = 0
  2871                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2872                           
  2873                           
  2874                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
  2875  049B  0020               	movlb	0	; select bank0
  2876  049C  0836               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2877  049D  00BF               	movwf	_TMR2_InterruptHandler+1
  2878  049E  0835               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2879  049F  00BE               	movwf	_TMR2_InterruptHandler
  2880  04A0                     l159:
  2881  04A0  0008               	return
  2882  04A1                     __end_of_TMR2_SetInterruptHandler:
  2883                           
  2884                           	psect	text11
  2885  03D4                     __ptext11:	
  2886 ;; *************** function _TMR0_Initialize *****************
  2887 ;; Defined at:
  2888 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;		None
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;		None
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      void 
  2895 ;; Registers used:
  2896 ;;		wreg, status,2, status,0, pclath, cstack
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1
  2902 ;;      Params:         0       0       0
  2903 ;;      Locals:         0       0       0
  2904 ;;      Temps:          0       1       0
  2905 ;;      Totals:         0       1       0
  2906 ;;Total ram usage:        1 bytes
  2907 ;; Hardware stack levels used: 1
  2908 ;; Hardware stack levels required when called: 8
  2909 ;; This function calls:
  2910 ;;		_TMR0_SetInterruptHandler
  2911 ;; This function is called by:
  2912 ;;		_SYSTEM_Initialize
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916  03D4                     _TMR0_Initialize:	
  2917                           ;psect for function _TMR0_Initialize
  2918                           
  2919  03D4                     l2305:	
  2920                           ;incstack = 0
  2921                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2922                           
  2923                           
  2924                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD2 
      +                          & 0x3F));
  2925  03D4  0021               	movlb	1	; select bank1
  2926  03D5  0815               	movf	21,w	;volatile
  2927  03D6  39C0               	andlw	192
  2928  03D7  3812               	iorlw	18
  2929  03D8  0095               	movwf	21	;volatile
  2930  03D9                     l2307:
  2931                           
  2932                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x9C;
  2933  03D9  309C               	movlw	156
  2934  03DA  0020               	movlb	0	; select bank0
  2935  03DB  0095               	movwf	21	;volatile
  2936  03DC                     l2309:
  2937                           
  2938                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 156;
  2939  03DC  309C               	movlw	156
  2940  03DD  00B7               	movwf	??_TMR0_Initialize
  2941  03DE  0837               	movf	??_TMR0_Initialize,w
  2942  03DF  00C0               	movwf	_timer0ReloadVal	;volatile
  2943  03E0                     l2311:
  2944                           
  2945                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  2946  03E0  110B               	bcf	11,2	;volatile
  2947  03E1                     l2313:
  2948                           
  2949                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  2950  03E1  168B               	bsf	11,5	;volatile
  2951  03E2                     l2315:
  2952                           
  2953                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2954  03E2  30CC               	movlw	low _TMR0_DefaultInterruptHandler
  2955  03E3  00B5               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2956  03E4  3004               	movlw	high _TMR0_DefaultInterruptHandler
  2957  03E5  00B6               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2958  03E6  3184  24A1  3183   	fcall	_TMR0_SetInterruptHandler
  2959  03E9                     l179:
  2960  03E9  0008               	return
  2961  03EA                     __end_of_TMR0_Initialize:
  2962                           
  2963                           	psect	text12
  2964  04A1                     __ptext12:	
  2965 ;; *************** function _TMR0_SetInterruptHandler *****************
  2966 ;; Defined at:
  2967 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2970 ;;		 -> switch_zum(1), TMR0_DefaultInterruptHandler(1), 
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;		None
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1
  2982 ;;      Params:         0       2       0
  2983 ;;      Locals:         0       0       0
  2984 ;;      Temps:          0       0       0
  2985 ;;      Totals:         0       2       0
  2986 ;;Total ram usage:        2 bytes
  2987 ;; Hardware stack levels used: 1
  2988 ;; Hardware stack levels required when called: 7
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_TMR0_Initialize
  2993 ;;		_start_setup
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997  04A1                     _TMR0_SetInterruptHandler:	
  2998                           ;psect for function _TMR0_SetInterruptHandler
  2999                           
  3000  04A1                     l2263:	
  3001                           ;incstack = 0
  3002                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  3003                           
  3004                           
  3005                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  3006  04A1  0020               	movlb	0	; select bank0
  3007  04A2  0836               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  3008  04A3  00BD               	movwf	_TMR0_InterruptHandler+1
  3009  04A4  0835               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  3010  04A5  00BC               	movwf	_TMR0_InterruptHandler
  3011  04A6                     l195:
  3012  04A6  0008               	return
  3013  04A7                     __end_of_TMR0_SetInterruptHandler:
  3014                           
  3015                           	psect	text13
  3016  03EA                     __ptext13:	
  3017 ;; *************** function _PIN_MANAGER_Initialize *****************
  3018 ;; Defined at:
  3019 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;		None
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;		None
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  1    wreg      void 
  3026 ;; Registers used:
  3027 ;;		wreg, status,2
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMMON   BANK0   BANK1
  3033 ;;      Params:         0       0       0
  3034 ;;      Locals:         0       0       0
  3035 ;;      Temps:          0       0       0
  3036 ;;      Totals:         0       0       0
  3037 ;;Total ram usage:        0 bytes
  3038 ;; Hardware stack levels used: 1
  3039 ;; Hardware stack levels required when called: 7
  3040 ;; This function calls:
  3041 ;;		Nothing
  3042 ;; This function is called by:
  3043 ;;		_SYSTEM_Initialize
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047  03EA                     _PIN_MANAGER_Initialize:	
  3048                           ;psect for function _PIN_MANAGER_Initialize
  3049                           
  3050  03EA                     l2265:	
  3051                           ;incstack = 0
  3052                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3053                           
  3054                           
  3055                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3056  03EA  0022               	movlb	2	; select bank2
  3057  03EB  018C               	clrf	12	;volatile
  3058                           
  3059                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  3060  03EC  018E               	clrf	14	;volatile
  3061  03ED                     l2267:
  3062                           
  3063                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x0F;
  3064  03ED  300F               	movlw	15
  3065  03EE  0021               	movlb	1	; select bank1
  3066  03EF  008C               	movwf	12	;volatile
  3067  03F0                     l2269:
  3068                           
  3069                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x0C;
  3070  03F0  300C               	movlw	12
  3071  03F1  008E               	movwf	14	;volatile
  3072  03F2                     l2271:
  3073                           
  3074                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x0C;
  3075  03F2  300C               	movlw	12
  3076  03F3  0023               	movlb	3	; select bank3
  3077  03F4  008E               	movwf	14	;volatile
  3078  03F5                     l2273:
  3079                           
  3080                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x07;
  3081  03F5  3007               	movlw	7
  3082  03F6  008C               	movwf	12	;volatile
  3083                           
  3084                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  3085  03F7  0024               	movlb	4	; select bank4
  3086  03F8  018C               	clrf	12	;volatile
  3087                           
  3088                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  3089  03F9  018E               	clrf	14	;volatile
  3090  03FA                     l2275:
  3091                           
  3092                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  3093  03FA  0021               	movlb	1	; select bank1
  3094  03FB  1795               	bsf	21,7	;volatile
  3095                           
  3096                           ;mcc_generated_files/pin_manager.c: 86:     APFCON = 0x00;
  3097  03FC  0022               	movlb	2	; select bank2
  3098  03FD  019D               	clrf	29	;volatile
  3099  03FE                     l92:
  3100  03FE  0008               	return
  3101  03FF                     __end_of_PIN_MANAGER_Initialize:
  3102                           
  3103                           	psect	text14
  3104  048E                     __ptext14:	
  3105 ;; *************** function _OSCILLATOR_Initialize *****************
  3106 ;; Defined at:
  3107 ;;		line 62 in file "mcc_generated_files/mcc.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		wreg, status,2
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMMON   BANK0   BANK1
  3121 ;;      Params:         0       0       0
  3122 ;;      Locals:         0       0       0
  3123 ;;      Temps:          0       0       0
  3124 ;;      Totals:         0       0       0
  3125 ;;Total ram usage:        0 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; Hardware stack levels required when called: 7
  3128 ;; This function calls:
  3129 ;;		Nothing
  3130 ;; This function is called by:
  3131 ;;		_SYSTEM_Initialize
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135  048E                     _OSCILLATOR_Initialize:	
  3136                           ;psect for function _OSCILLATOR_Initialize
  3137                           
  3138  048E                     l2277:	
  3139                           ;incstack = 0
  3140                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3141                           
  3142                           
  3143                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x78;
  3144  048E  3078               	movlw	120
  3145  048F  0021               	movlb	1	; select bank1
  3146  0490  0099               	movwf	25	;volatile
  3147  0491                     l2279:
  3148                           
  3149                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  3150  0491  0198               	clrf	24	;volatile
  3151  0492                     l2281:
  3152                           
  3153                           ;mcc_generated_files/mcc.c: 69:     BORCON = 0x00;
  3154  0492  0022               	movlb	2	; select bank2
  3155  0493  0196               	clrf	22	;volatile
  3156  0494                     l28:
  3157  0494  0008               	return
  3158  0495                     __end_of_OSCILLATOR_Initialize:
  3159                           
  3160                           	psect	text15
  3161  04BA                     __ptext15:	
  3162 ;; *************** function _FVR_Initialize *****************
  3163 ;; Defined at:
  3164 ;;		line 58 in file "mcc_generated_files/fvr.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;		None
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;		None
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  1    wreg      void 
  3171 ;; Registers used:
  3172 ;;		wreg
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMMON   BANK0   BANK1
  3178 ;;      Params:         0       0       0
  3179 ;;      Locals:         0       0       0
  3180 ;;      Temps:          0       0       0
  3181 ;;      Totals:         0       0       0
  3182 ;;Total ram usage:        0 bytes
  3183 ;; Hardware stack levels used: 1
  3184 ;; Hardware stack levels required when called: 7
  3185 ;; This function calls:
  3186 ;;		Nothing
  3187 ;; This function is called by:
  3188 ;;		_SYSTEM_Initialize
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192  04BA                     _FVR_Initialize:	
  3193                           ;psect for function _FVR_Initialize
  3194                           
  3195  04BA                     l2285:	
  3196                           ;incstack = 0
  3197                           ; Regs used in _FVR_Initialize: [wreg]
  3198                           
  3199                           
  3200                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  3201  04BA  3082               	movlw	130
  3202  04BB  0022               	movlb	2	; select bank2
  3203  04BC  0097               	movwf	23	;volatile
  3204  04BD                     l205:
  3205  04BD  0008               	return
  3206  04BE                     __end_of_FVR_Initialize:
  3207                           
  3208                           	psect	text16
  3209  0486                     __ptext16:	
  3210 ;; *************** function _ADC_Initialize *****************
  3211 ;; Defined at:
  3212 ;;		line 67 in file "mcc_generated_files/adc.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;		None
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;		None
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1    wreg      void 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMMON   BANK0   BANK1
  3226 ;;      Params:         0       0       0
  3227 ;;      Locals:         0       0       0
  3228 ;;      Temps:          0       0       0
  3229 ;;      Totals:         0       0       0
  3230 ;;Total ram usage:        0 bytes
  3231 ;; Hardware stack levels used: 1
  3232 ;; Hardware stack levels required when called: 7
  3233 ;; This function calls:
  3234 ;;		Nothing
  3235 ;; This function is called by:
  3236 ;;		_SYSTEM_Initialize
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240  0486                     _ADC_Initialize:	
  3241                           ;psect for function _ADC_Initialize
  3242                           
  3243  0486                     l2287:	
  3244                           ;incstack = 0
  3245                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3246                           
  3247                           
  3248                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x50;
  3249  0486  3050               	movlw	80
  3250  0487  0021               	movlb	1	; select bank1
  3251  0488  009E               	movwf	30	;volatile
  3252  0489                     l2289:
  3253                           
  3254                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  3255  0489  019B               	clrf	27	;volatile
  3256  048A                     l2291:
  3257                           
  3258                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  3259  048A  019C               	clrf	28	;volatile
  3260                           
  3261                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x7D;
  3262  048B  307D               	movlw	125
  3263  048C  009D               	movwf	29	;volatile
  3264  048D                     l48:
  3265  048D  0008               	return
  3266  048E                     __end_of_ADC_Initialize:
  3267                           
  3268                           	psect	text17
  3269  0038                     __ptext17:	
  3270 ;; *************** function _povorot *****************
  3271 ;; Defined at:
  3272 ;;		line 366 in file "main.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;		None
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;		None
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  1    wreg      void 
  3279 ;; Registers used:
  3280 ;;		wreg, status,2, status,0, pclath, cstack
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMMON   BANK0   BANK1
  3286 ;;      Params:         0       0       0
  3287 ;;      Locals:         0       0       0
  3288 ;;      Temps:          0       0       0
  3289 ;;      Totals:         0       0       0
  3290 ;;Total ram usage:        0 bytes
  3291 ;; Hardware stack levels used: 1
  3292 ;; Hardware stack levels required when called: 8
  3293 ;; This function calls:
  3294 ;;		_go_close
  3295 ;;		_go_open
  3296 ;; This function is called by:
  3297 ;;		_main
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301  0038                     _povorot:	
  3302                           ;psect for function _povorot
  3303                           
  3304  0038                     l2377:	
  3305                           ;incstack = 0
  3306                           ; Regs used in _povorot: [wreg+status,2+status,0+pclath+cstack]
  3307                           
  3308                           
  3309                           ;main.c: 367:     if ((time_rotation > 120) &&
  3310  0038  3000               	movlw	0
  3311  0039  0020               	movlb	0	; select bank0
  3312  003A  0222               	subwf	_time_rotation+2,w
  3313  003B  1D03               	skipz
  3314  003C  2843               	goto	u1595
  3315  003D  3000               	movlw	0
  3316  003E  0221               	subwf	_time_rotation+1,w
  3317  003F  1D03               	skipz
  3318  0040  2843               	goto	u1595
  3319  0041  3079               	movlw	121
  3320  0042  0220               	subwf	_time_rotation,w
  3321  0043                     u1595:
  3322  0043  1C03               	skipc
  3323  0044  2846               	goto	u1591
  3324  0045  2847               	goto	u1590
  3325  0046                     u1591:
  3326  0046  285A               	goto	l2389
  3327  0047                     u1590:
  3328  0047                     l2379:
  3329  0047  1978               	btfsc	_FLAGS+1,2
  3330  0048  284A               	goto	u1601
  3331  0049  284B               	goto	u1600
  3332  004A                     u1601:
  3333  004A  285A               	goto	l2389
  3334  004B                     u1600:
  3335  004B                     l2381:
  3336  004B  18F8               	btfsc	_FLAGS+1,1
  3337  004C  284E               	goto	u1611
  3338  004D  284F               	goto	u1610
  3339  004E                     u1611:
  3340  004E  285A               	goto	l2389
  3341  004F                     u1610:
  3342  004F                     l2383:
  3343  004F  1877               	btfsc	_FLAGS,0
  3344  0050  2852               	goto	u1621
  3345  0051  2853               	goto	u1620
  3346  0052                     u1621:
  3347  0052  285A               	goto	l2389
  3348  0053                     u1620:
  3349  0053                     l2385:
  3350  0053  1CF7               	btfss	_FLAGS,1
  3351  0054  2856               	goto	u1631
  3352  0055  2857               	goto	u1630
  3353  0056                     u1631:
  3354  0056  285A               	goto	l2389
  3355  0057                     u1630:
  3356  0057                     l2387:
  3357                           
  3358                           ;main.c: 372:             ) {;main.c: 373:         go_close();
  3359  0057  3183  2333  3180   	fcall	_go_close
  3360  005A                     l2389:
  3361                           
  3362                           ;main.c: 375:     if ((time_rotation > (120 + 10 + 2 * 2)) &&
  3363  005A  3000               	movlw	0
  3364  005B  0020               	movlb	0	; select bank0
  3365  005C  0222               	subwf	_time_rotation+2,w
  3366  005D  1D03               	skipz
  3367  005E  2865               	goto	u1645
  3368  005F  3000               	movlw	0
  3369  0060  0221               	subwf	_time_rotation+1,w
  3370  0061  1D03               	skipz
  3371  0062  2865               	goto	u1645
  3372  0063  3087               	movlw	135
  3373  0064  0220               	subwf	_time_rotation,w
  3374  0065                     u1645:
  3375  0065  1C03               	skipc
  3376  0066  2868               	goto	u1641
  3377  0067  2869               	goto	u1640
  3378  0068                     u1641:
  3379  0068  2883               	goto	l443
  3380  0069                     u1640:
  3381  0069                     l2391:
  3382  0069  1D78               	btfss	_FLAGS+1,2
  3383  006A  286C               	goto	u1651
  3384  006B  286D               	goto	u1650
  3385  006C                     u1651:
  3386  006C  2883               	goto	l443
  3387  006D                     u1650:
  3388  006D                     l2393:
  3389  006D  1CF8               	btfss	_FLAGS+1,1
  3390  006E  2870               	goto	u1661
  3391  006F  2871               	goto	u1660
  3392  0070                     u1661:
  3393  0070  2883               	goto	l443
  3394  0071                     u1660:
  3395  0071                     l2395:
  3396  0071  1877               	btfsc	_FLAGS,0
  3397  0072  2874               	goto	u1671
  3398  0073  2875               	goto	u1670
  3399  0074                     u1671:
  3400  0074  2883               	goto	l443
  3401  0075                     u1670:
  3402  0075                     l2397:
  3403  0075  1CF7               	btfss	_FLAGS,1
  3404  0076  2878               	goto	u1681
  3405  0077  2879               	goto	u1680
  3406  0078                     u1681:
  3407  0078  2883               	goto	l443
  3408  0079                     u1680:
  3409  0079                     l2399:
  3410                           
  3411                           ;main.c: 380:             ) {;main.c: 381:         go_open();
  3412  0079  3184  2472  3180   	fcall	_go_open
  3413  007C                     l2401:
  3414                           
  3415                           ;main.c: 382:         time_rotation = 0;
  3416  007C  3000               	movlw	0
  3417  007D  0020               	movlb	0	; select bank0
  3418  007E  00A0               	movwf	_time_rotation
  3419  007F  3000               	movlw	0
  3420  0080  00A1               	movwf	_time_rotation+1
  3421  0081  3000               	movlw	0
  3422  0082  00A2               	movwf	_time_rotation+2
  3423  0083                     l443:
  3424  0083  0008               	return
  3425  0084                     __end_of_povorot:
  3426                           
  3427                           	psect	text18
  3428  01D3                     __ptext18:	
  3429 ;; *************** function _get_jump *****************
  3430 ;; Defined at:
  3431 ;;		line 253 in file "main.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;		None
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;  res             2    4[BANK0 ] unsigned int 
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  1    wreg      void 
  3438 ;; Registers used:
  3439 ;;		wreg, status,2, status,0, pclath, cstack
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/0
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMMON   BANK0   BANK1
  3445 ;;      Params:         0       0       0
  3446 ;;      Locals:         0       2       0
  3447 ;;      Temps:          0       2       0
  3448 ;;      Totals:         0       4       0
  3449 ;;Total ram usage:        4 bytes
  3450 ;; Hardware stack levels used: 1
  3451 ;; Hardware stack levels required when called: 8
  3452 ;; This function calls:
  3453 ;;		_ADC_GetConversion
  3454 ;; This function is called by:
  3455 ;;		_main
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459  01D3                     _get_jump:	
  3460                           ;psect for function _get_jump
  3461                           
  3462  01D3                     l387:	
  3463                           ;incstack = 0
  3464                           ; Regs used in _get_jump: [wreg+status,2+status,0+pclath+cstack]
  3465                           ;main.c: 255:     static signed char jump_counter;;main.c: 256:     do { ANSELAbits.ANSA
      +                          1 = 1; } while(0);
  3466                           
  3467  01D3  0023               	movlb	3	; select bank3
  3468  01D4  148C               	bsf	12,1	;volatile
  3469  01D5                     l2107:
  3470                           
  3471                           ;main.c: 257:     unsigned res = ADC_GetConversion(PIN_JUMP_STATE);
  3472  01D5  3001               	movlw	1
  3473  01D6  3183  2373  3181   	fcall	_ADC_GetConversion
  3474  01D9  0020               	movlb	0	; select bank0
  3475  01DA  00B7               	movwf	??_get_jump
  3476  01DB  01B8               	clrf	??_get_jump+1
  3477  01DC  0837               	movf	??_get_jump,w
  3478  01DD  00B9               	movwf	get_jump@res
  3479  01DE  0838               	movf	??_get_jump+1,w
  3480  01DF  00BA               	movwf	get_jump@res+1
  3481  01E0                     l2109:
  3482  01E0  0023               	movlb	3	; select bank3
  3483  01E1  108C               	bcf	12,1	;volatile
  3484  01E2                     l2111:
  3485                           
  3486                           ;main.c: 259:     if (res < 25) jump_counter--;
  3487  01E2  3000               	movlw	0
  3488  01E3  0020               	movlb	0	; select bank0
  3489  01E4  023A               	subwf	get_jump@res+1,w
  3490  01E5  3019               	movlw	25
  3491  01E6  1903               	skipnz
  3492  01E7  0239               	subwf	get_jump@res,w
  3493  01E8  1803               	skipnc
  3494  01E9  29EB               	goto	u1211
  3495  01EA  29EC               	goto	u1210
  3496  01EB                     u1211:
  3497  01EB  29F1               	goto	l2115
  3498  01EC                     u1210:
  3499  01EC                     l2113:
  3500  01EC  30FF               	movlw	255
  3501  01ED  00B7               	movwf	??_get_jump
  3502  01EE  0837               	movf	??_get_jump,w
  3503  01EF  07B2               	addwf	get_jump@jump_counter,f
  3504  01F0  29F5               	goto	l2117
  3505  01F1                     l2115:
  3506  01F1  3001               	movlw	1
  3507  01F2  00B7               	movwf	??_get_jump
  3508  01F3  0837               	movf	??_get_jump,w
  3509  01F4  07B2               	addwf	get_jump@jump_counter,f
  3510  01F5                     l2117:
  3511                           
  3512                           ;main.c: 271:     if (jump_counter > 10) {
  3513  01F5  0832               	movf	get_jump@jump_counter,w
  3514  01F6  3A80               	xorlw	128
  3515  01F7  3E75               	addlw	-139
  3516  01F8  1C03               	skipc
  3517  01F9  29FB               	goto	u1221
  3518  01FA  29FC               	goto	u1220
  3519  01FB                     u1221:
  3520  01FB  2A02               	goto	l2123
  3521  01FC                     u1220:
  3522  01FC                     l2119:
  3523                           
  3524                           ;main.c: 272:         jump_counter = 10;
  3525  01FC  300A               	movlw	10
  3526  01FD  00B7               	movwf	??_get_jump
  3527  01FE  0837               	movf	??_get_jump,w
  3528  01FF  00B2               	movwf	get_jump@jump_counter
  3529  0200                     l2121:
  3530                           
  3531                           ;main.c: 273:         FLAGS.bits._JUMP_CONNECTED = 0;
  3532  0200  11F7               	bcf	_FLAGS,3
  3533                           
  3534                           ;main.c: 274:     } else if (jump_counter<-10) {
  3535  0201  2A0E               	goto	l396
  3536  0202                     l2123:
  3537  0202  0832               	movf	get_jump@jump_counter,w
  3538  0203  3A80               	xorlw	128
  3539  0204  3E8A               	addlw	138
  3540  0205  1803               	skipnc
  3541  0206  2A08               	goto	u1231
  3542  0207  2A09               	goto	u1230
  3543  0208                     u1231:
  3544  0208  2A0E               	goto	l396
  3545  0209                     u1230:
  3546  0209                     l2125:
  3547                           
  3548                           ;main.c: 275:         jump_counter = -10;
  3549  0209  30F6               	movlw	246
  3550  020A  00B7               	movwf	??_get_jump
  3551  020B  0837               	movf	??_get_jump,w
  3552  020C  00B2               	movwf	get_jump@jump_counter
  3553  020D                     l2127:
  3554                           
  3555                           ;main.c: 276:         FLAGS.bits._JUMP_CONNECTED = 1;
  3556  020D  15F7               	bsf	_FLAGS,3
  3557  020E                     l396:
  3558  020E  0008               	return
  3559  020F                     __end_of_get_jump:
  3560                           
  3561                           	psect	text19
  3562  0155                     __ptext19:	
  3563 ;; *************** function _get_fun *****************
  3564 ;; Defined at:
  3565 ;;		line 179 in file "main.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;		None
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;  res             2    4[BANK0 ] unsigned int 
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  1    wreg      void 
  3572 ;; Registers used:
  3573 ;;		wreg, status,2, status,0, pclath, cstack
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMMON   BANK0   BANK1
  3579 ;;      Params:         0       0       0
  3580 ;;      Locals:         0       2       0
  3581 ;;      Temps:          0       2       0
  3582 ;;      Totals:         0       4       0
  3583 ;;Total ram usage:        4 bytes
  3584 ;; Hardware stack levels used: 1
  3585 ;; Hardware stack levels required when called: 8
  3586 ;; This function calls:
  3587 ;;		_ADC_GetConversion
  3588 ;; This function is called by:
  3589 ;;		_main
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593  0155                     _get_fun:	
  3594                           ;psect for function _get_fun
  3595                           
  3596  0155                     l349:	
  3597                           ;incstack = 0
  3598                           ; Regs used in _get_fun: [wreg+status,2+status,0+pclath+cstack]
  3599                           ;main.c: 181:     static signed char fun_counter;;main.c: 182:     do { LATCbits.LATC1 =
      +                           1; } while(0);
  3600                           
  3601  0155  0022               	movlb	2	; select bank2
  3602  0156  148E               	bsf	14,1	;volatile
  3603  0157                     l351:	
  3604                           ;main.c: 183:     do { ANSELCbits.ANSC2 = 1; } while(0);
  3605                           
  3606  0157  0023               	movlb	3	; select bank3
  3607  0158  150E               	bsf	14,2	;volatile
  3608  0159                     l2081:
  3609                           
  3610                           ;main.c: 184:     unsigned res = ADC_GetConversion(PIN_FUN_STATE);
  3611  0159  3006               	movlw	6
  3612  015A  3183  2373  3181   	fcall	_ADC_GetConversion
  3613  015D  0020               	movlb	0	; select bank0
  3614  015E  00B7               	movwf	??_get_fun
  3615  015F  01B8               	clrf	??_get_fun+1
  3616  0160  0837               	movf	??_get_fun,w
  3617  0161  00B9               	movwf	get_fun@res
  3618  0162  0838               	movf	??_get_fun+1,w
  3619  0163  00BA               	movwf	get_fun@res+1
  3620  0164                     l2083:
  3621  0164  0023               	movlb	3	; select bank3
  3622  0165  110E               	bcf	14,2	;volatile
  3623  0166                     l2085:
  3624  0166  0022               	movlb	2	; select bank2
  3625  0167  108E               	bcf	14,1	;volatile
  3626  0168                     l2087:
  3627                           
  3628                           ;main.c: 187:     if (res < 25) fun_counter--;
  3629  0168  3000               	movlw	0
  3630  0169  0020               	movlb	0	; select bank0
  3631  016A  023A               	subwf	get_fun@res+1,w
  3632  016B  3019               	movlw	25
  3633  016C  1903               	skipnz
  3634  016D  0239               	subwf	get_fun@res,w
  3635  016E  1803               	skipnc
  3636  016F  2971               	goto	u1181
  3637  0170  2972               	goto	u1180
  3638  0171                     u1181:
  3639  0171  2977               	goto	l2091
  3640  0172                     u1180:
  3641  0172                     l2089:
  3642  0172  30FF               	movlw	255
  3643  0173  00B7               	movwf	??_get_fun
  3644  0174  0837               	movf	??_get_fun,w
  3645  0175  07B4               	addwf	get_fun@fun_counter,f
  3646  0176  297B               	goto	l2093
  3647  0177                     l2091:
  3648  0177  3001               	movlw	1
  3649  0178  00B7               	movwf	??_get_fun
  3650  0179  0837               	movf	??_get_fun,w
  3651  017A  07B4               	addwf	get_fun@fun_counter,f
  3652  017B                     l2093:
  3653                           
  3654                           ;main.c: 200:     if (fun_counter > 10) {
  3655  017B  0834               	movf	get_fun@fun_counter,w
  3656  017C  3A80               	xorlw	128
  3657  017D  3E75               	addlw	-139
  3658  017E  1C03               	skipc
  3659  017F  2981               	goto	u1191
  3660  0180  2982               	goto	u1190
  3661  0181                     u1191:
  3662  0181  2988               	goto	l2099
  3663  0182                     u1190:
  3664  0182                     l2095:
  3665                           
  3666                           ;main.c: 201:         fun_counter = 10;
  3667  0182  300A               	movlw	10
  3668  0183  00B7               	movwf	??_get_fun
  3669  0184  0837               	movf	??_get_fun,w
  3670  0185  00B4               	movwf	get_fun@fun_counter
  3671  0186                     l2097:
  3672                           
  3673                           ;main.c: 202:         FLAGS.bits._FUN_CONNECTED = 0;
  3674  0186  1177               	bcf	_FLAGS,2
  3675                           
  3676                           ;main.c: 203:     } else if (fun_counter<-10) {
  3677  0187  2994               	goto	l362
  3678  0188                     l2099:
  3679  0188  0834               	movf	get_fun@fun_counter,w
  3680  0189  3A80               	xorlw	128
  3681  018A  3E8A               	addlw	138
  3682  018B  1803               	skipnc
  3683  018C  298E               	goto	u1201
  3684  018D  298F               	goto	u1200
  3685  018E                     u1201:
  3686  018E  2994               	goto	l362
  3687  018F                     u1200:
  3688  018F                     l2101:
  3689                           
  3690                           ;main.c: 204:         fun_counter = -10;
  3691  018F  30F6               	movlw	246
  3692  0190  00B7               	movwf	??_get_fun
  3693  0191  0837               	movf	??_get_fun,w
  3694  0192  00B4               	movwf	get_fun@fun_counter
  3695  0193                     l2103:
  3696                           
  3697                           ;main.c: 205:         FLAGS.bits._FUN_CONNECTED = 1;
  3698  0193  1577               	bsf	_FLAGS,2
  3699  0194                     l362:
  3700  0194  0008               	return
  3701  0195                     __end_of_get_fun:
  3702                           
  3703                           	psect	text20
  3704  0373                     __ptext20:	
  3705 ;; *************** function _ADC_GetConversion *****************
  3706 ;; Defined at:
  3707 ;;		line 111 in file "mcc_generated_files/adc.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  channel         1    wreg     enum E2178
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;  channel         1    1[BANK0 ] enum E2178
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      unsigned char 
  3714 ;; Registers used:
  3715 ;;		wreg, status,2, status,0
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMMON   BANK0   BANK1
  3721 ;;      Params:         0       0       0
  3722 ;;      Locals:         0       1       0
  3723 ;;      Temps:          0       1       0
  3724 ;;      Totals:         0       2       0
  3725 ;;Total ram usage:        2 bytes
  3726 ;; Hardware stack levels used: 1
  3727 ;; Hardware stack levels required when called: 7
  3728 ;; This function calls:
  3729 ;;		Nothing
  3730 ;; This function is called by:
  3731 ;;		_get_fun
  3732 ;;		_get_fun_full
  3733 ;;		_get_jump
  3734 ;;		_get_jump_full
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738  0373                     _ADC_GetConversion:	
  3739                           ;psect for function _ADC_GetConversion
  3740                           
  3741                           
  3742                           ;incstack = 0
  3743                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3744                           ;ADC_GetConversion@channel stored from wreg
  3745  0373  0020               	movlb	0	; select bank0
  3746  0374  00B6               	movwf	ADC_GetConversion@channel
  3747  0375                     l1909:
  3748                           
  3749                           ;mcc_generated_files/adc.c: 111: char ADC_GetConversion(adc_channel_t channel);mcc_gener
      +                          ated_files/adc.c: 112: {;mcc_generated_files/adc.c: 114:     ADCON0bits.CHS = channel;
  3750  0375  0836               	movf	ADC_GetConversion@channel,w
  3751  0376  00B5               	movwf	??_ADC_GetConversion
  3752  0377  0DB5               	rlf	??_ADC_GetConversion,f
  3753  0378  0DB5               	rlf	??_ADC_GetConversion,f
  3754  0379  0021               	movlb	1	; select bank1
  3755  037A  081D               	movf	29,w	;volatile
  3756  037B  0020               	movlb	0	; select bank0
  3757  037C  0635               	xorwf	??_ADC_GetConversion,w
  3758  037D  3983               	andlw	-125
  3759  037E  0635               	xorwf	??_ADC_GetConversion,w
  3760  037F  0021               	movlb	1	; select bank1
  3761  0380  009D               	movwf	29	;volatile
  3762  0381                     l1911:
  3763                           
  3764                           ;mcc_generated_files/adc.c: 117:     ADCON0bits.ADON = 1;
  3765  0381  141D               	bsf	29,0	;volatile
  3766  0382                     l1913:
  3767                           
  3768                           ;mcc_generated_files/adc.c: 120:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  3769  0382  3006               	movlw	6
  3770  0383                     u1897:
  3771  0383  0B89               	decfsz	9,f
  3772  0384  2B83               	goto	u1897
  3773  0385  3200               	nop2
  3774  0386                     l1915:
  3775                           
  3776                           ;mcc_generated_files/adc.c: 123:     ADCON0bits.GO_nDONE = 1;
  3777  0386  0021               	movlb	1	; select bank1
  3778  0387  149D               	bsf	29,1	;volatile
  3779  0388                     l63:	
  3780                           ;mcc_generated_files/adc.c: 127:     {;mcc_generated_files/adc.c: 128:     }
  3781                           
  3782                           
  3783                           ;mcc_generated_files/adc.c: 126:     while (ADCON0bits.GO_nDONE)
  3784  0388  189D               	btfsc	29,1	;volatile
  3785  0389  2B8B               	goto	u941
  3786  038A  2B8C               	goto	u940
  3787  038B                     u941:
  3788  038B  2B88               	goto	l63
  3789  038C                     u940:
  3790  038C                     l1917:
  3791                           
  3792                           ;mcc_generated_files/adc.c: 130:     return ( ADRESH);
  3793  038C  081C               	movf	28,w	;volatile
  3794  038D                     l66:
  3795  038D  0008               	return
  3796  038E                     __end_of_ADC_GetConversion:
  3797                           
  3798                           	psect	text21
  3799  0112                     __ptext21:	
  3800 ;; *************** function _fun_work *****************
  3801 ;; Defined at:
  3802 ;;		line 387 in file "main.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;		None
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;		None
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  1    wreg      void 
  3809 ;; Registers used:
  3810 ;;		wreg, status,2, status,0, pclath, cstack
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMMON   BANK0   BANK1
  3816 ;;      Params:         0       0       0
  3817 ;;      Locals:         0       0       0
  3818 ;;      Temps:          0       1       0
  3819 ;;      Totals:         0       1       0
  3820 ;;Total ram usage:        1 bytes
  3821 ;; Hardware stack levels used: 1
  3822 ;; Hardware stack levels required when called: 9
  3823 ;; This function calls:
  3824 ;;		_beep
  3825 ;;		_go_close
  3826 ;;		_go_close_alt
  3827 ;;		_go_open
  3828 ;;		_go_open_alt
  3829 ;; This function is called by:
  3830 ;;		_main
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834  0112                     _fun_work:	
  3835                           ;psect for function _fun_work
  3836                           
  3837  0112                     l2403:	
  3838                           ;incstack = 0
  3839                           ; Regs used in _fun_work: [wreg+status,2+status,0+pclath+cstack]
  3840                           
  3841                           
  3842                           ;main.c: 388:     {;main.c: 389:         if (FLAGS.bits._FUN_CONNECTED &&
  3843  0112  1D77               	btfss	_FLAGS,2
  3844  0113  2915               	goto	u1691
  3845  0114  2916               	goto	u1690
  3846  0115                     u1691:
  3847  0115  2934               	goto	l2419
  3848  0116                     u1690:
  3849  0116                     l2405:
  3850  0116  1877               	btfsc	_FLAGS,0
  3851  0117  2919               	goto	u1701
  3852  0118  291A               	goto	u1700
  3853  0119                     u1701:
  3854  0119  2934               	goto	l2419
  3855  011A                     u1700:
  3856  011A                     l2407:
  3857  011A  1D78               	btfss	_FLAGS+1,2
  3858  011B  291D               	goto	u1711
  3859  011C  291E               	goto	u1710
  3860  011D                     u1711:
  3861  011D  2934               	goto	l2419
  3862  011E                     u1710:
  3863  011E                     l2409:
  3864  011E  1AF7               	btfsc	_FLAGS,5
  3865  011F  2921               	goto	u1721
  3866  0120  2922               	goto	u1720
  3867  0121                     u1721:
  3868  0121  2934               	goto	l2419
  3869  0122                     u1720:
  3870  0122                     l2411:
  3871                           
  3872                           ;main.c: 392:                 !FLAGS.bits.RELE_POWER_WAIT) {;main.c: 394:             be
      +                          ep(40, 1);
  3873  0122  0020               	movlb	0	; select bank0
  3874  0123  01B5               	clrf	beep@count
  3875  0124  0AB5               	incf	beep@count,f
  3876  0125  3028               	movlw	40
  3877  0126  3182  22E3  3181   	fcall	_beep
  3878  0129                     l2413:
  3879                           
  3880                           ;main.c: 396:             if (FLAGS.bits.NORMAL_WORK_MODE) go_open();
  3881  0129  1CF7               	btfss	_FLAGS,1
  3882  012A  292C               	goto	u1731
  3883  012B  292D               	goto	u1730
  3884  012C                     u1731:
  3885  012C  2931               	goto	l2417
  3886  012D                     u1730:
  3887  012D                     l2415:
  3888  012D  3184  2472  3181   	fcall	_go_open
  3889  0130  2934               	goto	l2419
  3890  0131                     l2417:
  3891  0131  3184  24A7  3181   	fcall	_go_open_alt
  3892  0134                     l2419:
  3893                           
  3894                           ;main.c: 400:         if (!FLAGS.bits._FUN_CONNECTED &&
  3895  0134  1977               	btfsc	_FLAGS,2
  3896  0135  2937               	goto	u1741
  3897  0136  2938               	goto	u1740
  3898  0137                     u1741:
  3899  0137  2954               	goto	l452
  3900  0138                     u1740:
  3901  0138                     l2421:
  3902  0138  1978               	btfsc	_FLAGS+1,2
  3903  0139  293B               	goto	u1751
  3904  013A  293C               	goto	u1750
  3905  013B                     u1751:
  3906  013B  2954               	goto	l452
  3907  013C                     u1750:
  3908  013C                     l2423:
  3909  013C  1AF7               	btfsc	_FLAGS,5
  3910  013D  293F               	goto	u1761
  3911  013E  2940               	goto	u1760
  3912  013F                     u1761:
  3913  013F  2954               	goto	l452
  3914  0140                     u1760:
  3915  0140                     l2425:
  3916                           
  3917                           ;main.c: 402:                 !FLAGS.bits.RELE_POWER_WAIT) {;main.c: 404:             be
      +                          ep(40, 2);
  3918  0140  3002               	movlw	2
  3919  0141  0020               	movlb	0	; select bank0
  3920  0142  00BB               	movwf	??_fun_work
  3921  0143  083B               	movf	??_fun_work,w
  3922  0144  00B5               	movwf	beep@count
  3923  0145  3028               	movlw	40
  3924  0146  3182  22E3  3181   	fcall	_beep
  3925  0149                     l2427:
  3926                           
  3927                           ;main.c: 406:             if (FLAGS.bits.NORMAL_WORK_MODE) go_close();
  3928  0149  1CF7               	btfss	_FLAGS,1
  3929  014A  294C               	goto	u1771
  3930  014B  294D               	goto	u1770
  3931  014C                     u1771:
  3932  014C  2951               	goto	l2431
  3933  014D                     u1770:
  3934  014D                     l2429:
  3935  014D  3183  2333  3181   	fcall	_go_close
  3936  0150  2954               	goto	l452
  3937  0151                     l2431:
  3938  0151  3184  24AC  3181   	fcall	_go_close_alt
  3939  0154                     l452:
  3940  0154  0008               	return
  3941  0155                     __end_of_fun_work:
  3942                           
  3943                           	psect	text22
  3944  04A7                     __ptext22:	
  3945 ;; *************** function _go_open_alt *****************
  3946 ;; Defined at:
  3947 ;;		line 148 in file "main.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;		None
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;		None
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  1    wreg      void 
  3954 ;; Registers used:
  3955 ;;		None
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMMON   BANK0   BANK1
  3961 ;;      Params:         0       0       0
  3962 ;;      Locals:         0       0       0
  3963 ;;      Temps:          0       0       0
  3964 ;;      Totals:         0       0       0
  3965 ;;Total ram usage:        0 bytes
  3966 ;; Hardware stack levels used: 1
  3967 ;; Hardware stack levels required when called: 7
  3968 ;; This function calls:
  3969 ;;		Nothing
  3970 ;; This function is called by:
  3971 ;;		_fun_work
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975  04A7                     _go_open_alt:	
  3976                           ;psect for function _go_open_alt
  3977                           
  3978  04A7                     l2367:	
  3979                           ;incstack = 0
  3980                           ; Regs used in _go_open_alt: []
  3981                           
  3982                           
  3983                           ;main.c: 149:     FLAGS.bits.CLOSED = 0;
  3984  04A7  1178               	bcf	_FLAGS+1,2
  3985  04A8                     l316:	
  3986                           ;main.c: 150:     do { LATCbits.LATC4 = 0; } while(0);
  3987                           
  3988  04A8  0022               	movlb	2	; select bank2
  3989  04A9  120E               	bcf	14,4	;volatile
  3990  04AA                     l318:	
  3991                           ;main.c: 151:     do { LATCbits.LATC5 = 0; } while(0);
  3992                           
  3993  04AA  128E               	bcf	14,5	;volatile
  3994  04AB                     l320:
  3995  04AB  0008               	return
  3996  04AC                     __end_of_go_open_alt:
  3997                           
  3998                           	psect	text23
  3999  0472                     __ptext23:	
  4000 ;; *************** function _go_open *****************
  4001 ;; Defined at:
  4002 ;;		line 134 in file "main.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;		None
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;		None
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      void 
  4009 ;; Registers used:
  4010 ;;		wreg
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMMON   BANK0   BANK1
  4016 ;;      Params:         0       0       0
  4017 ;;      Locals:         0       0       0
  4018 ;;      Temps:          0       0       0
  4019 ;;      Totals:         0       0       0
  4020 ;;Total ram usage:        0 bytes
  4021 ;; Hardware stack levels used: 1
  4022 ;; Hardware stack levels required when called: 7
  4023 ;; This function calls:
  4024 ;;		Nothing
  4025 ;; This function is called by:
  4026 ;;		_povorot
  4027 ;;		_fun_work
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031  0472                     _go_open:	
  4032                           ;psect for function _go_open
  4033                           
  4034  0472                     l302:	
  4035                           ;incstack = 0
  4036                           ; Regs used in _go_open: [wreg]
  4037                           ;main.c: 135:     do { LATCbits.LATC4 = 0; } while(0);
  4038                           
  4039  0472  0022               	movlb	2	; select bank2
  4040  0473  120E               	bcf	14,4	;volatile
  4041  0474                     l304:	
  4042                           ;main.c: 136:     do { LATCbits.LATC5 = 1; } while(0);
  4043                           
  4044  0474  168E               	bsf	14,5	;volatile
  4045  0475                     l2359:
  4046                           
  4047                           ;main.c: 137:     time_rele_power = 10;
  4048  0475  300A               	movlw	10
  4049  0476  0020               	movlb	0	; select bank0
  4050  0477  00AD               	movwf	_time_rele_power
  4051  0478  3000               	movlw	0
  4052  0479  00AE               	movwf	_time_rele_power+1
  4053  047A                     l2361:
  4054                           
  4055                           ;main.c: 138:     FLAGS.bits.RELE_POWER_WAIT = 1;
  4056  047A  16F7               	bsf	_FLAGS,5
  4057  047B                     l306:
  4058  047B  0008               	return
  4059  047C                     __end_of_go_open:
  4060                           
  4061                           	psect	text24
  4062  04AC                     __ptext24:	
  4063 ;; *************** function _go_close_alt *****************
  4064 ;; Defined at:
  4065 ;;		line 142 in file "main.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;		None
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;		None
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  1    wreg      void 
  4072 ;; Registers used:
  4073 ;;		None
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMMON   BANK0   BANK1
  4079 ;;      Params:         0       0       0
  4080 ;;      Locals:         0       0       0
  4081 ;;      Temps:          0       0       0
  4082 ;;      Totals:         0       0       0
  4083 ;;Total ram usage:        0 bytes
  4084 ;; Hardware stack levels used: 1
  4085 ;; Hardware stack levels required when called: 7
  4086 ;; This function calls:
  4087 ;;		Nothing
  4088 ;; This function is called by:
  4089 ;;		_fun_work
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093  04AC                     _go_close_alt:	
  4094                           ;psect for function _go_close_alt
  4095                           
  4096  04AC                     l2365:	
  4097                           ;incstack = 0
  4098                           ; Regs used in _go_close_alt: []
  4099                           
  4100                           
  4101                           ;main.c: 143:     FLAGS.bits.CLOSED = 1;
  4102  04AC  1578               	bsf	_FLAGS+1,2
  4103  04AD                     l309:	
  4104                           ;main.c: 144:     do { LATCbits.LATC4 = 0; } while(0);
  4105                           
  4106  04AD  0022               	movlb	2	; select bank2
  4107  04AE  120E               	bcf	14,4	;volatile
  4108  04AF                     l311:	
  4109                           ;main.c: 145:     do { LATCbits.LATC5 = 1; } while(0);
  4110                           
  4111  04AF  168E               	bsf	14,5	;volatile
  4112  04B0                     l313:
  4113  04B0  0008               	return
  4114  04B1                     __end_of_go_close_alt:
  4115                           
  4116                           	psect	text25
  4117  0333                     __ptext25:	
  4118 ;; *************** function _go_close *****************
  4119 ;; Defined at:
  4120 ;;		line 122 in file "main.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;		None
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;		None
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  1    wreg      void 
  4127 ;; Registers used:
  4128 ;;		wreg
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMMON   BANK0   BANK1
  4134 ;;      Params:         0       0       0
  4135 ;;      Locals:         0       0       0
  4136 ;;      Temps:          0       2       0
  4137 ;;      Totals:         0       2       0
  4138 ;;Total ram usage:        2 bytes
  4139 ;; Hardware stack levels used: 1
  4140 ;; Hardware stack levels required when called: 7
  4141 ;; This function calls:
  4142 ;;		Nothing
  4143 ;; This function is called by:
  4144 ;;		_povorot
  4145 ;;		_fun_work
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149  0333                     _go_close:	
  4150                           ;psect for function _go_close
  4151                           
  4152  0333                     l1983:	
  4153                           ;incstack = 0
  4154                           ; Regs used in _go_close: [wreg]
  4155                           
  4156                           
  4157                           ;main.c: 123:     time_rotation = 0;
  4158  0333  3000               	movlw	0
  4159  0334  0020               	movlb	0	; select bank0
  4160  0335  00A0               	movwf	_time_rotation
  4161  0336  3000               	movlw	0
  4162  0337  00A1               	movwf	_time_rotation+1
  4163  0338  3000               	movlw	0
  4164  0339  00A2               	movwf	_time_rotation+2
  4165  033A                     l1985:
  4166  033A  0022               	movlb	2	; select bank2
  4167  033B  160E               	bsf	14,4	;volatile
  4168  033C                     l1987:
  4169                           
  4170                           ;main.c: 125:     FLAGS.bits.CLOSING = 1;
  4171  033C  14F8               	bsf	_FLAGS+1,1
  4172                           
  4173                           ;main.c: 126:     _delay((unsigned long)((2 * 1000)*(16000000/4000.0)));
  4174  033D  3029               	movlw	41
  4175  033E  0020               	movlb	0	; select bank0
  4176  033F  00B6               	movwf	??_go_close+1
  4177  0340  3096               	movlw	150
  4178  0341  00B5               	movwf	??_go_close
  4179  0342  307F               	movlw	127
  4180  0343                     u1907:
  4181  0343  0B89               	decfsz	9,f
  4182  0344  2B43               	goto	u1907
  4183  0345  0BB5               	decfsz	??_go_close,f
  4184  0346  2B43               	goto	u1907
  4185  0347  0BB6               	decfsz	??_go_close+1,f
  4186  0348  2B43               	goto	u1907
  4187  0349                     l1989:
  4188  0349  0022               	movlb	2	; select bank2
  4189  034A  168E               	bsf	14,5	;volatile
  4190  034B                     l298:
  4191                           
  4192                           ;main.c: 128:     time_rele_power = 10;
  4193  034B  300A               	movlw	10
  4194  034C  0020               	movlb	0	; select bank0
  4195  034D  00AD               	movwf	_time_rele_power
  4196  034E  3000               	movlw	0
  4197  034F  00AE               	movwf	_time_rele_power+1
  4198  0350                     l1991:
  4199                           
  4200                           ;main.c: 129:     FLAGS.bits.RELE_POWER_WAIT = 1;
  4201  0350  16F7               	bsf	_FLAGS,5
  4202  0351                     l1993:
  4203                           
  4204                           ;main.c: 130:     FLAGS.bits.RELE_CONTROL_WAIT = 1;
  4205  0351  1777               	bsf	_FLAGS,6
  4206  0352                     l299:
  4207  0352  0008               	return
  4208  0353                     __end_of_go_close:
  4209                           
  4210                           	psect	text26
  4211  02E3                     __ptext26:	
  4212 ;; *************** function _beep *****************
  4213 ;; Defined at:
  4214 ;;		line 102 in file "main.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;  time            1    wreg     unsigned char 
  4217 ;;  count           1    0[BANK0 ] unsigned char 
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;  time            1    3[BANK0 ] unsigned char 
  4220 ;;  i               1    5[BANK0 ] unsigned char 
  4221 ;;  j               1    4[BANK0 ] unsigned char 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      void 
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0, pclath, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMMON   BANK0   BANK1
  4231 ;;      Params:         0       1       0
  4232 ;;      Locals:         0       3       0
  4233 ;;      Temps:          0       2       0
  4234 ;;      Totals:         0       6       0
  4235 ;;Total ram usage:        6 bytes
  4236 ;; Hardware stack levels used: 1
  4237 ;; Hardware stack levels required when called: 8
  4238 ;; This function calls:
  4239 ;;		_switch_zum
  4240 ;; This function is called by:
  4241 ;;		_fun_work
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245  02E3                     _beep:	
  4246                           ;psect for function _beep
  4247                           
  4248                           
  4249                           ;incstack = 0
  4250                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
  4251                           ;beep@time stored from wreg
  4252  02E3  0020               	movlb	0	; select bank0
  4253  02E4  00B8               	movwf	beep@time
  4254  02E5                     l2323:
  4255                           
  4256                           ;main.c: 103:     for (char j = 0; j < count; j++) {
  4257  02E5  01B9               	clrf	beep@j
  4258  02E6  2B0C               	goto	l2339
  4259  02E7                     l2325:
  4260                           
  4261                           ;main.c: 104:         for (char i = 0; i < time; i++) {
  4262  02E7  01BA               	clrf	beep@i
  4263  02E8  2AF5               	goto	l2333
  4264  02E9                     l2327:
  4265                           
  4266                           ;main.c: 105:             switch_zum();
  4267  02E9  3184  2427  3182   	fcall	_switch_zum
  4268  02EC                     l2329:
  4269                           
  4270                           ;main.c: 106:             _delay((unsigned long)((300)*(16000000/4000000.0)));
  4271  02EC  30F0               	movlw	240
  4272  02ED                     u1917:
  4273  02ED  3200               	nop2
  4274  02EE  0B89               	decfsz	9,f
  4275  02EF  2AED               	goto	u1917
  4276  02F0                     l2331:
  4277                           
  4278                           ;main.c: 107:         }
  4279  02F0  3001               	movlw	1
  4280  02F1  0020               	movlb	0	; select bank0
  4281  02F2  00B6               	movwf	??_beep
  4282  02F3  0836               	movf	??_beep,w
  4283  02F4  07BA               	addwf	beep@i,f
  4284  02F5                     l2333:
  4285  02F5  0838               	movf	beep@time,w
  4286  02F6  023A               	subwf	beep@i,w
  4287  02F7  1C03               	skipc
  4288  02F8  2AFA               	goto	u1541
  4289  02F9  2AFB               	goto	u1540
  4290  02FA                     u1541:
  4291  02FA  2AE9               	goto	l2327
  4292  02FB                     u1540:
  4293  02FB                     l2335:
  4294                           
  4295                           ;main.c: 108:         _delay((unsigned long)((100)*(16000000/4000.0)));
  4296  02FB  3003               	movlw	3
  4297  02FC  0020               	movlb	0	; select bank0
  4298  02FD  00B7               	movwf	??_beep+1
  4299  02FE  3008               	movlw	8
  4300  02FF  00B6               	movwf	??_beep
  4301  0300  3077               	movlw	119
  4302  0301                     u1927:
  4303  0301  0B89               	decfsz	9,f
  4304  0302  2B01               	goto	u1927
  4305  0303  0BB6               	decfsz	??_beep,f
  4306  0304  2B01               	goto	u1927
  4307  0305  0BB7               	decfsz	??_beep+1,f
  4308  0306  2B01               	goto	u1927
  4309  0307                     l2337:
  4310                           
  4311                           ;main.c: 109:     }
  4312  0307  3001               	movlw	1
  4313  0308  0020               	movlb	0	; select bank0
  4314  0309  00B6               	movwf	??_beep
  4315  030A  0836               	movf	??_beep,w
  4316  030B  07B9               	addwf	beep@j,f
  4317  030C                     l2339:
  4318  030C  0835               	movf	beep@count,w
  4319  030D  0239               	subwf	beep@j,w
  4320  030E  1C03               	skipc
  4321  030F  2B11               	goto	u1551
  4322  0310  2B12               	goto	u1550
  4323  0311                     u1551:
  4324  0311  2AE7               	goto	l2325
  4325  0312                     u1550:
  4326  0312                     l283:
  4327  0312  0008               	return
  4328  0313                     __end_of_beep:
  4329                           
  4330                           	psect	text27
  4331  0427                     __ptext27:	
  4332 ;; *************** function _switch_zum *****************
  4333 ;; Defined at:
  4334 ;;		line 94 in file "main.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;		None
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;		None
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      void 
  4341 ;; Registers used:
  4342 ;;		status,0
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMMON   BANK0   BANK1
  4348 ;;      Params:         0       0       0
  4349 ;;      Locals:         0       0       0
  4350 ;;      Temps:          0       0       0
  4351 ;;      Totals:         0       0       0
  4352 ;;Total ram usage:        0 bytes
  4353 ;; Hardware stack levels used: 1
  4354 ;; Hardware stack levels required when called: 7
  4355 ;; This function calls:
  4356 ;;		Nothing
  4357 ;; This function is called by:
  4358 ;;		_beep
  4359 ;;		_boop
  4360 ;;		_start_setup
  4361 ;;		_TMR0_ISR
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365  0427                     _switch_zum:	
  4366                           ;psect for function _switch_zum
  4367                           
  4368                           
  4369                           ;Skip over the trampoline to the duplicate function for level 1
  4370  0427  1C7E               	btfss	int$flags,0
  4371  0428  2C2A               	goto	_switch_zum$intlevel0
  4372  0429  2C65               	ljmp	i1_switch_zum
  4373  042A                     _switch_zum$intlevel0:
  4374  042A                     l269:	
  4375                           ;incstack = 0
  4376                           ; Regs used in _switch_zum: [status,0]
  4377                           ;main.c: 95:     do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  4378                           
  4379  042A                     l2317:
  4380  042A  1003               	clrc
  4381  042B  0022               	movlb	2	; select bank2
  4382  042C  1E8C               	btfss	12,5	;volatile
  4383  042D  1403               	setc
  4384  042E  1803               	btfsc	3,0
  4385  042F  2C31               	goto	u1521
  4386  0430  2C34               	goto	u1520
  4387  0431                     u1521:
  4388  0431  0022               	movlb	2	; select bank2
  4389  0432  168C               	bsf	12,5	;volatile
  4390  0433  2C36               	goto	u1534
  4391  0434                     u1520:
  4392  0434  0022               	movlb	2	; select bank2
  4393  0435  128C               	bcf	12,5	;volatile
  4394  0436                     u1534:
  4395  0436                     l271:
  4396  0436  0008               	return
  4397  0437                     __end_of_switch_zum:
  4398                           
  4399                           	psect	intentry
  4400  0004                     __pintentry:	
  4401 ;; *************** function _INTERRUPT_InterruptManager *****************
  4402 ;; Defined at:
  4403 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;		None
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;		None
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      void 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0, pclath, cstack
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMMON   BANK0   BANK1
  4417 ;;      Params:         0       0       0
  4418 ;;      Locals:         0       0       0
  4419 ;;      Temps:          0       0       0
  4420 ;;      Totals:         0       0       0
  4421 ;;Total ram usage:        0 bytes
  4422 ;; Hardware stack levels used: 1
  4423 ;; Hardware stack levels required when called: 6
  4424 ;; This function calls:
  4425 ;;		_TMR0_ISR
  4426 ;;		_TMR2_ISR
  4427 ;; This function is called by:
  4428 ;;		Interrupt level 1
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432  0004                     _INTERRUPT_InterruptManager:
  4433                           
  4434                           ;incstack = 0
  4435  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4436                           
  4437                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  4438  0005  3180               	pagesel	$
  4439  0006                     i1l2487:
  4440                           
  4441                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4442  0006  1E8B               	btfss	11,5	;volatile
  4443  0007  2809               	goto	u181_21
  4444  0008  280A               	goto	u181_20
  4445  0009                     u181_21:
  4446  0009  2812               	goto	i1l110
  4447  000A                     u181_20:
  4448  000A                     i1l2489:
  4449  000A  1D0B               	btfss	11,2	;volatile
  4450  000B  280D               	goto	u182_21
  4451  000C  280E               	goto	u182_20
  4452  000D                     u182_21:
  4453  000D  2812               	goto	i1l110
  4454  000E                     u182_20:
  4455  000E                     i1l2491:
  4456                           
  4457                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  4458  000E  3184  2447  3180   	fcall	_TMR0_ISR
  4459                           
  4460                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  4461  0011  2824               	goto	i1l116
  4462  0012                     i1l110:	
  4463                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  4464                           
  4465  0012  1F0B               	btfss	11,6	;volatile
  4466  0013  2815               	goto	u183_21
  4467  0014  2816               	goto	u183_20
  4468  0015                     u183_21:
  4469  0015  2824               	goto	i1l116
  4470  0016                     u183_20:
  4471  0016                     i1l2493:
  4472                           
  4473                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  4474  0016  0021               	movlb	1	; select bank1
  4475  0017  1C91               	btfss	17,1	;volatile
  4476  0018  281A               	goto	u184_21
  4477  0019  281B               	goto	u184_20
  4478  001A                     u184_21:
  4479  001A  2824               	goto	i1l115
  4480  001B                     u184_20:
  4481  001B                     i1l2495:
  4482  001B  0020               	movlb	0	; select bank0
  4483  001C  1C91               	btfss	17,1	;volatile
  4484  001D  281F               	goto	u185_21
  4485  001E  2820               	goto	u185_20
  4486  001F                     u185_21:
  4487  001F  2824               	goto	i1l115
  4488  0020                     u185_20:
  4489  0020                     i1l2497:
  4490                           
  4491                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
  4492  0020  3184  2457  3180   	fcall	_TMR2_ISR
  4493                           
  4494                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4495  0023  2824               	goto	i1l116
  4496  0024                     i1l115:	
  4497                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  4498                           
  4499  0024                     i1l116:
  4500  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4501  0025  0009               	retfie
  4502  0026                     __end_of_INTERRUPT_InterruptManager:
  4503                           
  4504                           	psect	text29
  4505  0457                     __ptext29:	
  4506 ;; *************** function _TMR2_ISR *****************
  4507 ;; Defined at:
  4508 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;		None
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;		None
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  1    wreg      void 
  4515 ;; Registers used:
  4516 ;;		wreg, status,2, status,0, pclath, cstack
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMMON   BANK0   BANK1
  4522 ;;      Params:         0       0       0
  4523 ;;      Locals:         0       0       0
  4524 ;;      Temps:          0       0       0
  4525 ;;      Totals:         0       0       0
  4526 ;;Total ram usage:        0 bytes
  4527 ;; Hardware stack levels used: 1
  4528 ;; Hardware stack levels required when called: 5
  4529 ;; This function calls:
  4530 ;;		Absolute function
  4531 ;;		_TMR2_DefaultInterruptHandler
  4532 ;;		_ms_tick
  4533 ;; This function is called by:
  4534 ;;		_INTERRUPT_InterruptManager
  4535 ;; This function uses a non-reentrant model
  4536 ;;
  4537                           
  4538  0457                     _TMR2_ISR:	
  4539                           ;psect for function _TMR2_ISR
  4540                           
  4541  0457                     i1l2075:	
  4542                           ;incstack = 0
  4543                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  4544                           
  4545                           
  4546                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
  4547  0457  0020               	movlb	0	; select bank0
  4548  0458  1091               	bcf	17,1	;volatile
  4549  0459                     i1l2077:
  4550                           
  4551                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
  4552  0459  083E               	movf	_TMR2_InterruptHandler,w
  4553  045A  043F               	iorwf	_TMR2_InterruptHandler+1,w
  4554  045B  1903               	btfsc	3,2
  4555  045C  2C5E               	goto	u117_21
  4556  045D  2C5F               	goto	u117_20
  4557  045E                     u117_21:
  4558  045E  2C64               	goto	i1l156
  4559  045F                     u117_20:
  4560  045F                     i1l2079:
  4561                           
  4562                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
  4563  045F  083F               	movf	_TMR2_InterruptHandler+1,w
  4564  0460  008A               	movwf	10
  4565  0461  083E               	movf	_TMR2_InterruptHandler,w
  4566  0462  000A               	callw
  4567  0463  3184               	pagesel	$
  4568  0464                     i1l156:
  4569  0464  0008               	return
  4570  0465                     __end_of_TMR2_ISR:
  4571                           
  4572                           	psect	text30
  4573  04CB                     __ptext30:	
  4574 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4575 ;; Defined at:
  4576 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;		None
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;		None
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      void 
  4583 ;; Registers used:
  4584 ;;		None
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMMON   BANK0   BANK1
  4590 ;;      Params:         0       0       0
  4591 ;;      Locals:         0       0       0
  4592 ;;      Temps:          0       0       0
  4593 ;;      Totals:         0       0       0
  4594 ;;Total ram usage:        0 bytes
  4595 ;; Hardware stack levels used: 1
  4596 ;; This function calls:
  4597 ;;		Nothing
  4598 ;; This function is called by:
  4599 ;;		_TMR2_Initialize
  4600 ;;		_TMR2_ISR
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604  04CB                     _TMR2_DefaultInterruptHandler:	
  4605                           ;psect for function _TMR2_DefaultInterruptHandler
  4606                           
  4607  04CB                     i1l162:	
  4608                           ;incstack = 0
  4609                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  4610                           
  4611  04CB  0008               	return
  4612  04CC                     __end_of_TMR2_DefaultInterruptHandler:
  4613                           
  4614                           	psect	text31
  4615  03FF                     __ptext31:	
  4616 ;; *************** function _ms_tick *****************
  4617 ;; Defined at:
  4618 ;;		line 445 in file "main.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;		None
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;		None
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      void 
  4625 ;; Registers used:
  4626 ;;		wreg, status,2, status,0, pclath, cstack
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMMON   BANK0   BANK1
  4632 ;;      Params:         0       0       0
  4633 ;;      Locals:         0       0       0
  4634 ;;      Temps:          0       0       0
  4635 ;;      Totals:         0       0       0
  4636 ;;Total ram usage:        0 bytes
  4637 ;; Hardware stack levels used: 1
  4638 ;; Hardware stack levels required when called: 4
  4639 ;; This function calls:
  4640 ;;		_sec_tick_work
  4641 ;; This function is called by:
  4642 ;;		_start_setup
  4643 ;;		_TMR2_ISR
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647  03FF                     _ms_tick:	
  4648                           ;psect for function _ms_tick
  4649                           
  4650  03FF                     i1l2059:	
  4651                           ;incstack = 0
  4652                           ; Regs used in _ms_tick: [wreg+status,2+status,0+pclath+cstack]
  4653                           
  4654                           
  4655                           ;main.c: 446:     static unsigned tick_count =0;;main.c: 447:     tick_count++;
  4656  03FF  3001               	movlw	1
  4657  0400  0020               	movlb	0	; select bank0
  4658  0401  07A3               	addwf	ms_tick@tick_count,f
  4659  0402  3000               	movlw	0
  4660  0403  3DA4               	addwfc	ms_tick@tick_count+1,f
  4661  0404                     i1l2061:
  4662                           
  4663                           ;main.c: 449:     if (tick_count == 1000){
  4664  0404  30E8               	movlw	232
  4665  0405  0623               	xorwf	ms_tick@tick_count,w
  4666  0406  3003               	movlw	3
  4667  0407  1903               	skipnz
  4668  0408  0624               	xorwf	ms_tick@tick_count+1,w
  4669  0409  1D03               	btfss	3,2
  4670  040A  2C0C               	goto	u115_21
  4671  040B  2C0D               	goto	u115_20
  4672  040C                     u115_21:
  4673  040C  2C13               	goto	i1l465
  4674  040D                     u115_20:
  4675  040D                     i1l2063:
  4676                           
  4677                           ;main.c: 450:     sec_tick_work();
  4678  040D  3181  2195  3183   	fcall	_sec_tick_work
  4679  0410                     i1l2065:
  4680                           
  4681                           ;main.c: 451:     tick_count=0;
  4682  0410  0020               	movlb	0	; select bank0
  4683  0411  01A3               	clrf	ms_tick@tick_count
  4684  0412  01A4               	clrf	ms_tick@tick_count+1
  4685  0413                     i1l465:
  4686  0413  0008               	return
  4687  0414                     __end_of_ms_tick:
  4688                           
  4689                           	psect	text32
  4690  0195                     __ptext32:	
  4691 ;; *************** function _sec_tick_work *****************
  4692 ;; Defined at:
  4693 ;;		line 345 in file "main.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;		None
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;		None
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  1    wreg      void 
  4700 ;; Registers used:
  4701 ;;		wreg, status,2, status,0, pclath, cstack
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMMON   BANK0   BANK1
  4707 ;;      Params:         0       0       0
  4708 ;;      Locals:         0       0       0
  4709 ;;      Temps:          1       0       0
  4710 ;;      Totals:         1       0       0
  4711 ;;Total ram usage:        1 bytes
  4712 ;; Hardware stack levels used: 1
  4713 ;; Hardware stack levels required when called: 3
  4714 ;; This function calls:
  4715 ;;		_get_measure
  4716 ;;		_rele_tick
  4717 ;;		_toggle_tone
  4718 ;; This function is called by:
  4719 ;;		_ms_tick
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           
  4723  0195                     _sec_tick_work:	
  4724                           ;psect for function _sec_tick_work
  4725                           
  4726  0195                     i1l1923:	
  4727                           ;incstack = 0
  4728                           ; Regs used in _sec_tick_work: [wreg+status,2+status,0+pclath+cstack]
  4729                           
  4730                           
  4731                           ;main.c: 349:     time_rotation++;
  4732  0195  3001               	movlw	1
  4733  0196  0020               	movlb	0	; select bank0
  4734  0197  07A0               	addwf	_time_rotation,f
  4735  0198  3000               	movlw	0
  4736  0199  1803               	skipnc
  4737  019A  3001               	movlw	1
  4738  019B  07A1               	addwf	_time_rotation+1,f
  4739  019C  3000               	movlw	0
  4740  019D  1803               	skipnc
  4741  019E  3001               	movlw	1
  4742  019F  07A2               	addwf	_time_rotation+2,f
  4743  01A0                     i1l1925:
  4744                           
  4745                           ;main.c: 350:     rele_tick();
  4746  01A0  3182  22B1  3181   	fcall	_rele_tick
  4747  01A3  0064               	clrwdt	;# 
  4748  01A4                     i1l1927:
  4749                           
  4750                           ;main.c: 352:     if (FLAGS.bits.ALARM) {
  4751  01A4  1C77               	btfss	_FLAGS,0
  4752  01A5  29A7               	goto	u97_21
  4753  01A6  29A8               	goto	u97_20
  4754  01A7                     u97_21:
  4755  01A7  29B8               	goto	i1l1933
  4756  01A8                     u97_20:
  4757  01A8                     i1l1929:
  4758  01A8  1003               	clrc
  4759  01A9  0022               	movlb	2	; select bank2
  4760  01AA  1E0C               	btfss	12,4	;volatile
  4761  01AB  1403               	setc
  4762  01AC  1803               	btfsc	3,0
  4763  01AD  29AF               	goto	u98_21
  4764  01AE  29B2               	goto	u98_20
  4765  01AF                     u98_21:
  4766  01AF  0022               	movlb	2	; select bank2
  4767  01B0  160C               	bsf	12,4	;volatile
  4768  01B1  29B4               	goto	u99_24
  4769  01B2                     u98_20:
  4770  01B2  0022               	movlb	2	; select bank2
  4771  01B3  120C               	bcf	12,4	;volatile
  4772  01B4                     u99_24:
  4773  01B4                     i1l1931:
  4774                           
  4775                           ;main.c: 354:         toggle_tone();
  4776  01B4  3184  247C  3181   	fcall	_toggle_tone
  4777                           
  4778                           ;main.c: 355:     } else {
  4779  01B7  29D2               	goto	i1l438
  4780  01B8                     i1l1933:
  4781                           
  4782                           ;main.c: 356:         get_measure();
  4783  01B8  3182  227D  3181   	fcall	_get_measure
  4784  01BB                     i1l1935:
  4785                           
  4786                           ;main.c: 357:         static char iled;;main.c: 358:         iled++;
  4787  01BB  3001               	movlw	1
  4788  01BC  00F6               	movwf	??_sec_tick_work
  4789  01BD  0876               	movf	??_sec_tick_work,w
  4790  01BE  07F9               	addwf	sec_tick_work@iled,f
  4791  01BF                     i1l1937:
  4792                           
  4793                           ;main.c: 359:         if (iled > 2) {
  4794  01BF  3003               	movlw	3
  4795  01C0  0279               	subwf	sec_tick_work@iled,w
  4796  01C1  1C03               	skipc
  4797  01C2  29C4               	goto	u100_21
  4798  01C3  29C5               	goto	u100_20
  4799  01C4                     u100_21:
  4800  01C4  29D2               	goto	i1l438
  4801  01C5                     u100_20:
  4802  01C5                     i1l1939:
  4803  01C5  1003               	clrc
  4804  01C6  0022               	movlb	2	; select bank2
  4805  01C7  1E0C               	btfss	12,4	;volatile
  4806  01C8  1403               	setc
  4807  01C9  1803               	btfsc	3,0
  4808  01CA  29CC               	goto	u101_21
  4809  01CB  29CF               	goto	u101_20
  4810  01CC                     u101_21:
  4811  01CC  0022               	movlb	2	; select bank2
  4812  01CD  160C               	bsf	12,4	;volatile
  4813  01CE  29D1               	goto	u102_24
  4814  01CF                     u101_20:
  4815  01CF  0022               	movlb	2	; select bank2
  4816  01D0  120C               	bcf	12,4	;volatile
  4817  01D1                     u102_24:
  4818  01D1                     i1l1941:
  4819                           
  4820                           ;main.c: 361:             iled = 0;
  4821  01D1  01F9               	clrf	sec_tick_work@iled
  4822  01D2                     i1l438:
  4823  01D2  0008               	return
  4824  01D3                     __end_of_sec_tick_work:
  4825                           
  4826                           	psect	text33
  4827  047C                     __ptext33:	
  4828 ;; *************** function _toggle_tone *****************
  4829 ;; Defined at:
  4830 ;;		line 98 in file "main.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;		None
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;		None
  4835 ;; Return value:  Size  Location     Type
  4836 ;;                  1    wreg      void 
  4837 ;; Registers used:
  4838 ;;		status,0
  4839 ;; Tracked objects:
  4840 ;;		On entry : 0/0
  4841 ;;		On exit  : 0/0
  4842 ;;		Unchanged: 0/0
  4843 ;; Data sizes:     COMMON   BANK0   BANK1
  4844 ;;      Params:         0       0       0
  4845 ;;      Locals:         0       0       0
  4846 ;;      Temps:          0       0       0
  4847 ;;      Totals:         0       0       0
  4848 ;;Total ram usage:        0 bytes
  4849 ;; Hardware stack levels used: 1
  4850 ;; This function calls:
  4851 ;;		Nothing
  4852 ;; This function is called by:
  4853 ;;		_sec_tick_work
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857  047C                     _toggle_tone:	
  4858                           ;psect for function _toggle_tone
  4859                           
  4860  047C                     i1l1815:	
  4861                           ;incstack = 0
  4862                           ; Regs used in _toggle_tone: [status,0]
  4863                           
  4864                           
  4865                           ;main.c: 99:     INTCONbits.TMR0IE = ~INTCONbits.TMR0IE;
  4866  047C  1003               	clrc
  4867  047D  1E8B               	btfss	11,5	;volatile
  4868  047E  1403               	setc
  4869  047F  1803               	btfsc	3,0
  4870  0480  2C82               	goto	u86_21
  4871  0481  2C84               	goto	u86_20
  4872  0482                     u86_21:
  4873  0482  168B               	bsf	11,5	;volatile
  4874  0483  2C85               	goto	u87_24
  4875  0484                     u86_20:
  4876  0484  128B               	bcf	11,5	;volatile
  4877  0485                     u87_24:
  4878  0485                     i1l274:
  4879  0485  0008               	return
  4880  0486                     __end_of_toggle_tone:
  4881                           
  4882                           	psect	text34
  4883  02B1                     __ptext34:	
  4884 ;; *************** function _rele_tick *****************
  4885 ;; Defined at:
  4886 ;;		line 321 in file "main.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;		None
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;		None
  4891 ;; Return value:  Size  Location     Type
  4892 ;;                  1    wreg      void 
  4893 ;; Registers used:
  4894 ;;		wreg, status,2, status,0, pclath, cstack
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMMON   BANK0   BANK1
  4900 ;;      Params:         0       0       0
  4901 ;;      Locals:         0       0       0
  4902 ;;      Temps:          2       0       0
  4903 ;;      Totals:         2       0       0
  4904 ;;Total ram usage:        2 bytes
  4905 ;; Hardware stack levels used: 1
  4906 ;; Hardware stack levels required when called: 1
  4907 ;; This function calls:
  4908 ;;		i1_switch_zum
  4909 ;; This function is called by:
  4910 ;;		_sec_tick_work
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914  02B1                     _rele_tick:	
  4915                           ;psect for function _rele_tick
  4916                           
  4917  02B1                     i1l1837:	
  4918                           ;incstack = 0
  4919                           ; Regs used in _rele_tick: [wreg+status,2+status,0+pclath+cstack]
  4920                           
  4921                           
  4922                           ;main.c: 322:     switch_zum();
  4923  02B1  3184  2465  3182   	fcall	i1_switch_zum
  4924  02B4                     i1l1839:
  4925                           
  4926                           ;main.c: 323:     if (FLAGS.bits.RELE_POWER_WAIT) {
  4927  02B4  1EF7               	btfss	_FLAGS,5
  4928  02B5  2AB7               	goto	u91_21
  4929  02B6  2AB8               	goto	u91_20
  4930  02B7                     u91_21:
  4931  02B7  2AE2               	goto	i1l426
  4932  02B8                     u91_20:
  4933  02B8                     i1l1841:
  4934                           
  4935                           ;main.c: 324:         if (time_rele_power > 0) {
  4936  02B8  0020               	movlb	0	; select bank0
  4937  02B9  082D               	movf	_time_rele_power,w
  4938  02BA  042E               	iorwf	_time_rele_power+1,w
  4939  02BB  1903               	btfsc	3,2
  4940  02BC  2ABE               	goto	u92_21
  4941  02BD  2ABF               	goto	u92_20
  4942  02BE                     u92_21:
  4943  02BE  2AC4               	goto	i1l416
  4944  02BF                     u92_20:
  4945  02BF                     i1l1843:
  4946                           
  4947                           ;main.c: 325:             time_rele_power--;
  4948  02BF  3001               	movlw	1
  4949  02C0  02AD               	subwf	_time_rele_power,f
  4950  02C1  3000               	movlw	0
  4951  02C2  3BAE               	subwfb	_time_rele_power+1,f
  4952                           
  4953                           ;main.c: 326:         } else {
  4954  02C3  2AE2               	goto	i1l426
  4955  02C4                     i1l416:
  4956                           
  4957                           ;main.c: 327:             if (FLAGS.bits.RELE_CONTROL_WAIT) {
  4958  02C4  1F77               	btfss	_FLAGS,6
  4959  02C5  2AC7               	goto	u93_21
  4960  02C6  2AC8               	goto	u93_20
  4961  02C7                     u93_21:
  4962  02C7  2ADD               	goto	i1l424
  4963  02C8                     u93_20:
  4964  02C8                     i1l419:	
  4965                           ;main.c: 328:                 do { LATCbits.LATC5 = 0; } while(0);
  4966                           
  4967  02C8  0022               	movlb	2	; select bank2
  4968  02C9  128E               	bcf	14,5	;volatile
  4969  02CA                     i1l1845:
  4970                           
  4971                           ;main.c: 329:                 _delay((unsigned long)((2 * 1000)*(16000000/4000.0)));
  4972  02CA  3029               	movlw	41
  4973  02CB  00F1               	movwf	??_rele_tick+1
  4974  02CC  3096               	movlw	150
  4975  02CD  00F0               	movwf	??_rele_tick
  4976  02CE  307F               	movlw	127
  4977  02CF                     u193_27:
  4978  02CF  0B89               	decfsz	9,f
  4979  02D0  2ACF               	goto	u193_27
  4980  02D1  0BF0               	decfsz	??_rele_tick,f
  4981  02D2  2ACF               	goto	u193_27
  4982  02D3  0BF1               	decfsz	??_rele_tick+1,f
  4983  02D4  2ACF               	goto	u193_27
  4984  02D5  0000               	nop
  4985  02D6                     i1l1847:
  4986  02D6  0022               	movlb	2	; select bank2
  4987  02D7  120E               	bcf	14,4	;volatile
  4988  02D8                     i1l1849:
  4989                           
  4990                           ;main.c: 331:                 FLAGS.bits.CLOSING =0;
  4991  02D8  10F8               	bcf	_FLAGS+1,1
  4992  02D9                     i1l1851:
  4993                           
  4994                           ;main.c: 332:                 FLAGS.bits.CLOSED = 1;
  4995  02D9  1578               	bsf	_FLAGS+1,2
  4996  02DA                     i1l1853:
  4997                           
  4998                           ;main.c: 333:                 FLAGS.bits.RELE_CONTROL_WAIT = 0;
  4999  02DA  1377               	bcf	_FLAGS,6
  5000  02DB                     i1l1855:
  5001                           
  5002                           ;main.c: 334:                 FLAGS.bits.RELE_POWER_WAIT = 0;
  5003  02DB  12F7               	bcf	_FLAGS,5
  5004                           
  5005                           ;main.c: 335:             } else {
  5006  02DC  2AE2               	goto	i1l426
  5007  02DD                     i1l424:	
  5008                           ;main.c: 336:                 do { LATCbits.LATC5 = 0; } while(0);
  5009                           
  5010  02DD  0022               	movlb	2	; select bank2
  5011  02DE  128E               	bcf	14,5	;volatile
  5012  02DF                     i1l425:
  5013                           
  5014                           ;main.c: 337:                 FLAGS.bits.OPENING = 0;
  5015  02DF  13F7               	bcf	_FLAGS,7
  5016                           
  5017                           ;main.c: 338:                 FLAGS.bits.CLOSED = 0;
  5018  02E0  1178               	bcf	_FLAGS+1,2
  5019                           
  5020                           ;main.c: 339:                 FLAGS.bits.RELE_POWER_WAIT = 0;
  5021  02E1  12F7               	bcf	_FLAGS,5
  5022  02E2                     i1l426:
  5023  02E2  0008               	return
  5024  02E3                     __end_of_rele_tick:
  5025                           
  5026                           	psect	text35
  5027  027D                     __ptext35:	
  5028 ;; *************** function _get_measure *****************
  5029 ;; Defined at:
  5030 ;;		line 166 in file "main.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;		None
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;  res             2    4[COMMON] unsigned int 
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      void 
  5037 ;; Registers used:
  5038 ;;		wreg, status,2, status,0, pclath, cstack
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMMON   BANK0   BANK1
  5044 ;;      Params:         0       0       0
  5045 ;;      Locals:         2       0       0
  5046 ;;      Temps:          2       0       0
  5047 ;;      Totals:         4       0       0
  5048 ;;Total ram usage:        4 bytes
  5049 ;; Hardware stack levels used: 1
  5050 ;; Hardware stack levels required when called: 2
  5051 ;; This function calls:
  5052 ;;		_start_alarm
  5053 ;;		i1_ADC_GetConversion
  5054 ;; This function is called by:
  5055 ;;		_sec_tick_work
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058                           
  5059  027D                     _get_measure:	
  5060                           ;psect for function _get_measure
  5061                           
  5062  027D                     i1l332:	
  5063                           ;incstack = 0
  5064                           ; Regs used in _get_measure: [wreg+status,2+status,0+pclath+cstack]
  5065                           ;main.c: 167:     static unsigned char measures;;main.c: 168:     do { LATCbits.LATC1 = 
      +                          1; } while(0);
  5066                           
  5067  027D  0022               	movlb	2	; select bank2
  5068  027E  148E               	bsf	14,1	;volatile
  5069  027F                     i1l334:	
  5070                           ;main.c: 169:     do { ANSELCbits.ANSC3 = 1; } while(0);
  5071                           
  5072  027F  0023               	movlb	3	; select bank3
  5073  0280  158E               	bsf	14,3	;volatile
  5074  0281                     i1l1817:
  5075                           
  5076                           ;main.c: 170:     unsigned res = ADC_GetConversion(PIN_WSP_STATE);
  5077  0281  3007               	movlw	7
  5078  0282  3183  23A6  3182   	fcall	i1_ADC_GetConversion
  5079  0285  00F2               	movwf	??_get_measure
  5080  0286  01F3               	clrf	??_get_measure+1
  5081  0287  0872               	movf	??_get_measure,w
  5082  0288  00F4               	movwf	get_measure@res
  5083  0289  0873               	movf	??_get_measure+1,w
  5084  028A  00F5               	movwf	get_measure@res+1
  5085  028B                     i1l1819:
  5086  028B  0023               	movlb	3	; select bank3
  5087  028C  118E               	bcf	14,3	;volatile
  5088  028D                     i1l1821:
  5089  028D  0022               	movlb	2	; select bank2
  5090  028E  108E               	bcf	14,1	;volatile
  5091  028F                     i1l1823:
  5092                           
  5093                           ;main.c: 173:     if (res < BAD_WSP_VOLTAGE) measures++;
  5094  028F  3000               	movlw	0
  5095  0290  0275               	subwf	get_measure@res+1,w
  5096  0291  3080               	movlw	128
  5097  0292  1903               	skipnz
  5098  0293  0274               	subwf	get_measure@res,w
  5099  0294  1803               	skipnc
  5100  0295  2A97               	goto	u88_21
  5101  0296  2A98               	goto	u88_20
  5102  0297                     u88_21:
  5103  0297  2A9D               	goto	i1l1827
  5104  0298                     u88_20:
  5105  0298                     i1l1825:
  5106  0298  3001               	movlw	1
  5107  0299  00F2               	movwf	??_get_measure
  5108  029A  0872               	movf	??_get_measure,w
  5109  029B  07FA               	addwf	get_measure@measures,f
  5110  029C  2AA7               	goto	i1l1831
  5111  029D                     i1l1827:
  5112  029D  3000               	movlw	0
  5113  029E  0275               	subwf	get_measure@res+1,w
  5114  029F  308F               	movlw	143
  5115  02A0  1903               	skipnz
  5116  02A1  0274               	subwf	get_measure@res,w
  5117  02A2  1C03               	skipc
  5118  02A3  2AA5               	goto	u89_21
  5119  02A4  2AA6               	goto	u89_20
  5120  02A5                     u89_21:
  5121  02A5  2AA7               	goto	i1l1831
  5122  02A6                     u89_20:
  5123  02A6                     i1l1829:
  5124  02A6  01FA               	clrf	get_measure@measures
  5125  02A7                     i1l1831:
  5126                           
  5127                           ;main.c: 175:     if (measures > 2) start_alarm();
  5128  02A7  3003               	movlw	3
  5129  02A8  027A               	subwf	get_measure@measures,w
  5130  02A9  1C03               	skipc
  5131  02AA  2AAC               	goto	u90_21
  5132  02AB  2AAD               	goto	u90_20
  5133  02AC                     u90_21:
  5134  02AC  2AB0               	goto	i1l344
  5135  02AD                     u90_20:
  5136  02AD                     i1l1833:
  5137  02AD  3184  2437  3182   	fcall	_start_alarm
  5138  02B0                     i1l344:
  5139  02B0  0008               	return
  5140  02B1                     __end_of_get_measure:
  5141                           
  5142                           	psect	text36
  5143  03A6                     __ptext36:	
  5144 ;; *************** function i1_ADC_GetConversion *****************
  5145 ;; Defined at:
  5146 ;;		line 111 in file "mcc_generated_files/adc.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;  channel         1    wreg     enum E2178
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;  channel         1    1[COMMON] enum E2178
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  1    wreg      unsigned char 
  5153 ;; Registers used:
  5154 ;;		wreg, status,2, status,0
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMMON   BANK0   BANK1
  5160 ;;      Params:         0       0       0
  5161 ;;      Locals:         1       0       0
  5162 ;;      Temps:          1       0       0
  5163 ;;      Totals:         2       0       0
  5164 ;;Total ram usage:        2 bytes
  5165 ;; Hardware stack levels used: 1
  5166 ;; This function calls:
  5167 ;;		Nothing
  5168 ;; This function is called by:
  5169 ;;		_get_measure
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173  03A6                     i1_ADC_GetConversion:	
  5174                           ;psect for function i1_ADC_GetConversion
  5175                           
  5176                           
  5177                           ;incstack = 0
  5178                           ; Regs used in i1_ADC_GetConversion: [wreg+status,2+status,0]
  5179                           ;i1ADC_GetConversion@channel stored from wreg
  5180  03A6  00F1               	movwf	i1ADC_GetConversion@channel
  5181  03A7                     i1l1797:
  5182                           
  5183                           ;mcc_generated_files/adc.c: 111: char ADC_GetConversion(adc_channel_t channel);mcc_gener
      +                          ated_files/adc.c: 112: {;mcc_generated_files/adc.c: 114:     ADCON0bits.CHS = channel;
  5184  03A7  0871               	movf	i1ADC_GetConversion@channel,w
  5185  03A8  00F0               	movwf	??i1_ADC_GetConversion
  5186  03A9  0DF0               	rlf	??i1_ADC_GetConversion,f
  5187  03AA  0DF0               	rlf	??i1_ADC_GetConversion,f
  5188  03AB  0021               	movlb	1	; select bank1
  5189  03AC  081D               	movf	29,w	;volatile
  5190  03AD  0670               	xorwf	??i1_ADC_GetConversion,w
  5191  03AE  3983               	andlw	-125
  5192  03AF  0670               	xorwf	??i1_ADC_GetConversion,w
  5193  03B0  009D               	movwf	29	;volatile
  5194  03B1                     i1l1799:
  5195                           
  5196                           ;mcc_generated_files/adc.c: 117:     ADCON0bits.ADON = 1;
  5197  03B1  141D               	bsf	29,0	;volatile
  5198  03B2                     i1l1801:
  5199                           
  5200                           ;mcc_generated_files/adc.c: 120:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  5201  03B2  3006               	movlw	6
  5202  03B3                     u194_27:
  5203  03B3  0B89               	decfsz	9,f
  5204  03B4  2BB3               	goto	u194_27
  5205  03B5  3200               	nop2
  5206  03B6                     i1l1803:
  5207                           
  5208                           ;mcc_generated_files/adc.c: 123:     ADCON0bits.GO_nDONE = 1;
  5209  03B6  0021               	movlb	1	; select bank1
  5210  03B7  149D               	bsf	29,1	;volatile
  5211  03B8                     i1l63:	
  5212                           ;mcc_generated_files/adc.c: 127:     {;mcc_generated_files/adc.c: 128:     }
  5213                           
  5214                           
  5215                           ;mcc_generated_files/adc.c: 126:     while (ADCON0bits.GO_nDONE)
  5216  03B8  189D               	btfsc	29,1	;volatile
  5217  03B9  2BBB               	goto	u83_21
  5218  03BA  2BBC               	goto	u83_20
  5219  03BB                     u83_21:
  5220  03BB  2BB8               	goto	i1l63
  5221  03BC                     u83_20:
  5222  03BC                     i1l1805:
  5223                           
  5224                           ;mcc_generated_files/adc.c: 130:     return ( ADRESH);
  5225  03BC  081C               	movf	28,w	;volatile
  5226  03BD                     i1l66:
  5227  03BD  0008               	return
  5228  03BE                     __end_ofi1_ADC_GetConversion:
  5229                           
  5230                           	psect	text37
  5231  0437                     __ptext37:	
  5232 ;; *************** function _start_alarm *****************
  5233 ;; Defined at:
  5234 ;;		line 155 in file "main.c"
  5235 ;; Parameters:    Size  Location     Type
  5236 ;;		None
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;		None
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  1    wreg      void 
  5241 ;; Registers used:
  5242 ;;		wreg, status,2, status,0, pclath, cstack
  5243 ;; Tracked objects:
  5244 ;;		On entry : 0/0
  5245 ;;		On exit  : 0/0
  5246 ;;		Unchanged: 0/0
  5247 ;; Data sizes:     COMMON   BANK0   BANK1
  5248 ;;      Params:         0       0       0
  5249 ;;      Locals:         0       0       0
  5250 ;;      Temps:          0       0       0
  5251 ;;      Totals:         0       0       0
  5252 ;;Total ram usage:        0 bytes
  5253 ;; Hardware stack levels used: 1
  5254 ;; Hardware stack levels required when called: 1
  5255 ;; This function calls:
  5256 ;;		i1_go_close
  5257 ;;		i1_go_close_alt
  5258 ;; This function is called by:
  5259 ;;		_get_measure
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262                           
  5263  0437                     _start_alarm:	
  5264                           ;psect for function _start_alarm
  5265                           
  5266  0437                     i1l1791:	
  5267                           ;incstack = 0
  5268                           ; Regs used in _start_alarm: [wreg+status,2+status,0+pclath+cstack]
  5269                           
  5270                           
  5271                           ;main.c: 156:     FLAGS.bits.ALARM = 1;
  5272  0437  1477               	bsf	_FLAGS,0
  5273  0438                     i1l323:	
  5274                           ;main.c: 157:     do { LATCbits.LATC0 = 1; } while(0);
  5275                           
  5276  0438  0022               	movlb	2	; select bank2
  5277  0439  140E               	bsf	14,0	;volatile
  5278  043A                     i1l324:
  5279                           
  5280                           ;main.c: 158:     INTCONbits.TMR0IE = 1;
  5281  043A  168B               	bsf	11,5	;volatile
  5282                           
  5283                           ;main.c: 159:     if (FLAGS.bits.NORMAL_WORK_MODE) {
  5284  043B  1CF7               	btfss	_FLAGS,1
  5285  043C  2C3E               	goto	u82_21
  5286  043D  2C3F               	goto	u82_20
  5287  043E                     u82_21:
  5288  043E  2C43               	goto	i1l1795
  5289  043F                     u82_20:
  5290  043F                     i1l1793:
  5291                           
  5292                           ;main.c: 160:         go_close();
  5293  043F  3183  2353  3184   	fcall	i1_go_close
  5294                           
  5295                           ;main.c: 161:     } else {
  5296  0442  2C46               	goto	i1l327
  5297  0443                     i1l1795:
  5298                           
  5299                           ;main.c: 162:         go_close_alt();
  5300  0443  3184  24B1  3184   	fcall	i1_go_close_alt
  5301  0446                     i1l327:
  5302  0446  0008               	return
  5303  0447                     __end_of_start_alarm:
  5304                           
  5305                           	psect	text38
  5306  04B1                     __ptext38:	
  5307 ;; *************** function i1_go_close_alt *****************
  5308 ;; Defined at:
  5309 ;;		line 142 in file "main.c"
  5310 ;; Parameters:    Size  Location     Type
  5311 ;;		None
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;		None
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  1    wreg      void 
  5316 ;; Registers used:
  5317 ;;		None
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMMON   BANK0   BANK1
  5323 ;;      Params:         0       0       0
  5324 ;;      Locals:         0       0       0
  5325 ;;      Temps:          0       0       0
  5326 ;;      Totals:         0       0       0
  5327 ;;Total ram usage:        0 bytes
  5328 ;; Hardware stack levels used: 1
  5329 ;; This function calls:
  5330 ;;		Nothing
  5331 ;; This function is called by:
  5332 ;;		_start_alarm
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336  04B1                     i1_go_close_alt:	
  5337                           ;psect for function i1_go_close_alt
  5338                           
  5339  04B1                     i1l1789:	
  5340                           ;incstack = 0
  5341                           ; Regs used in i1_go_close_alt: []
  5342                           
  5343                           
  5344                           ;main.c: 143:     FLAGS.bits.CLOSED = 1;
  5345  04B1  1578               	bsf	_FLAGS+1,2
  5346  04B2                     i1l309:	
  5347                           ;main.c: 144:     do { LATCbits.LATC4 = 0; } while(0);
  5348                           
  5349  04B2  0022               	movlb	2	; select bank2
  5350  04B3  120E               	bcf	14,4	;volatile
  5351  04B4                     i1l311:	
  5352                           ;main.c: 145:     do { LATCbits.LATC5 = 1; } while(0);
  5353                           
  5354  04B4  168E               	bsf	14,5	;volatile
  5355  04B5                     i1l313:
  5356  04B5  0008               	return
  5357  04B6                     __end_ofi1_go_close_alt:
  5358                           
  5359                           	psect	text39
  5360  0353                     __ptext39:	
  5361 ;; *************** function i1_go_close *****************
  5362 ;; Defined at:
  5363 ;;		line 122 in file "main.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;		None
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;		None
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  1    wreg      void 
  5370 ;; Registers used:
  5371 ;;		wreg
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMMON   BANK0   BANK1
  5377 ;;      Params:         0       0       0
  5378 ;;      Locals:         0       0       0
  5379 ;;      Temps:          2       0       0
  5380 ;;      Totals:         2       0       0
  5381 ;;Total ram usage:        2 bytes
  5382 ;; Hardware stack levels used: 1
  5383 ;; This function calls:
  5384 ;;		Nothing
  5385 ;; This function is called by:
  5386 ;;		_start_alarm
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390  0353                     i1_go_close:	
  5391                           ;psect for function i1_go_close
  5392                           
  5393  0353                     i1l1775:	
  5394                           ;incstack = 0
  5395                           ; Regs used in i1_go_close: [wreg]
  5396                           
  5397                           
  5398                           ;main.c: 123:     time_rotation = 0;
  5399  0353  3000               	movlw	0
  5400  0354  0020               	movlb	0	; select bank0
  5401  0355  00A0               	movwf	_time_rotation
  5402  0356  3000               	movlw	0
  5403  0357  00A1               	movwf	_time_rotation+1
  5404  0358  3000               	movlw	0
  5405  0359  00A2               	movwf	_time_rotation+2
  5406  035A                     i1l1777:
  5407  035A  0022               	movlb	2	; select bank2
  5408  035B  160E               	bsf	14,4	;volatile
  5409  035C                     i1l1779:
  5410                           
  5411                           ;main.c: 125:     FLAGS.bits.CLOSING = 1;
  5412  035C  14F8               	bsf	_FLAGS+1,1
  5413                           
  5414                           ;main.c: 126:     _delay((unsigned long)((2 * 1000)*(16000000/4000.0)));
  5415  035D  3029               	movlw	41
  5416  035E  00F1               	movwf	??i1_go_close+1
  5417  035F  3096               	movlw	150
  5418  0360  00F0               	movwf	??i1_go_close
  5419  0361  307F               	movlw	127
  5420  0362                     u195_27:
  5421  0362  0B89               	decfsz	9,f
  5422  0363  2B62               	goto	u195_27
  5423  0364  0BF0               	decfsz	??i1_go_close,f
  5424  0365  2B62               	goto	u195_27
  5425  0366  0BF1               	decfsz	??i1_go_close+1,f
  5426  0367  2B62               	goto	u195_27
  5427  0368  0000               	nop
  5428  0369                     i1l1781:
  5429  0369  0022               	movlb	2	; select bank2
  5430  036A  168E               	bsf	14,5	;volatile
  5431  036B                     i1l298:
  5432                           
  5433                           ;main.c: 128:     time_rele_power = 10;
  5434  036B  300A               	movlw	10
  5435  036C  0020               	movlb	0	; select bank0
  5436  036D  00AD               	movwf	_time_rele_power
  5437  036E  3000               	movlw	0
  5438  036F  00AE               	movwf	_time_rele_power+1
  5439  0370                     i1l1783:
  5440                           
  5441                           ;main.c: 129:     FLAGS.bits.RELE_POWER_WAIT = 1;
  5442  0370  16F7               	bsf	_FLAGS,5
  5443  0371                     i1l1785:
  5444                           
  5445                           ;main.c: 130:     FLAGS.bits.RELE_CONTROL_WAIT = 1;
  5446  0371  1777               	bsf	_FLAGS,6
  5447  0372                     i1l299:
  5448  0372  0008               	return
  5449  0373                     __end_ofi1_go_close:
  5450                           
  5451                           	psect	text40
  5452  0447                     __ptext40:	
  5453 ;; *************** function _TMR0_ISR *****************
  5454 ;; Defined at:
  5455 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  5456 ;; Parameters:    Size  Location     Type
  5457 ;;		None
  5458 ;; Auto vars:     Size  Location     Type
  5459 ;;		None
  5460 ;; Return value:  Size  Location     Type
  5461 ;;                  1    wreg      void 
  5462 ;; Registers used:
  5463 ;;		wreg, status,2, status,0, pclath, cstack
  5464 ;; Tracked objects:
  5465 ;;		On entry : 0/0
  5466 ;;		On exit  : 0/0
  5467 ;;		Unchanged: 0/0
  5468 ;; Data sizes:     COMMON   BANK0   BANK1
  5469 ;;      Params:         0       0       0
  5470 ;;      Locals:         0       0       0
  5471 ;;      Temps:          0       0       0
  5472 ;;      Totals:         0       0       0
  5473 ;;Total ram usage:        0 bytes
  5474 ;; Hardware stack levels used: 1
  5475 ;; Hardware stack levels required when called: 1
  5476 ;; This function calls:
  5477 ;;		Absolute function
  5478 ;;		_TMR0_DefaultInterruptHandler
  5479 ;;		i1_switch_zum
  5480 ;; This function is called by:
  5481 ;;		_INTERRUPT_InterruptManager
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484                           
  5485  0447                     _TMR0_ISR:	
  5486                           ;psect for function _TMR0_ISR
  5487                           
  5488  0447                     i1l2369:	
  5489                           ;incstack = 0
  5490                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  5491                           
  5492                           
  5493                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  5494  0447  110B               	bcf	11,2	;volatile
  5495  0448                     i1l2371:
  5496                           
  5497                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  5498  0448  0020               	movlb	0	; select bank0
  5499  0449  0840               	movf	_timer0ReloadVal,w	;volatile
  5500  044A  0095               	movwf	21	;volatile
  5501  044B                     i1l2373:
  5502                           
  5503                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  5504  044B  083C               	movf	_TMR0_InterruptHandler,w
  5505  044C  043D               	iorwf	_TMR0_InterruptHandler+1,w
  5506  044D  1903               	btfsc	3,2
  5507  044E  2C50               	goto	u158_21
  5508  044F  2C51               	goto	u158_20
  5509  0450                     u158_21:
  5510  0450  2C56               	goto	i1l192
  5511  0451                     u158_20:
  5512  0451                     i1l2375:
  5513                           
  5514                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  5515  0451  083D               	movf	_TMR0_InterruptHandler+1,w
  5516  0452  008A               	movwf	10
  5517  0453  083C               	movf	_TMR0_InterruptHandler,w
  5518  0454  000A               	callw
  5519  0455  3184               	pagesel	$
  5520  0456                     i1l192:
  5521  0456  0008               	return
  5522  0457                     __end_of_TMR0_ISR:
  5523                           
  5524                           	psect	text41
  5525  04CC                     __ptext41:	
  5526 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5527 ;; Defined at:
  5528 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  5529 ;; Parameters:    Size  Location     Type
  5530 ;;		None
  5531 ;; Auto vars:     Size  Location     Type
  5532 ;;		None
  5533 ;; Return value:  Size  Location     Type
  5534 ;;                  1    wreg      void 
  5535 ;; Registers used:
  5536 ;;		None
  5537 ;; Tracked objects:
  5538 ;;		On entry : 0/0
  5539 ;;		On exit  : 0/0
  5540 ;;		Unchanged: 0/0
  5541 ;; Data sizes:     COMMON   BANK0   BANK1
  5542 ;;      Params:         0       0       0
  5543 ;;      Locals:         0       0       0
  5544 ;;      Temps:          0       0       0
  5545 ;;      Totals:         0       0       0
  5546 ;;Total ram usage:        0 bytes
  5547 ;; Hardware stack levels used: 1
  5548 ;; This function calls:
  5549 ;;		Nothing
  5550 ;; This function is called by:
  5551 ;;		_TMR0_Initialize
  5552 ;;		_TMR0_ISR
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556  04CC                     _TMR0_DefaultInterruptHandler:	
  5557                           ;psect for function _TMR0_DefaultInterruptHandler
  5558                           
  5559  04CC                     i1l198:	
  5560                           ;incstack = 0
  5561                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  5562                           
  5563  04CC  0008               	return
  5564  04CD                     __end_of_TMR0_DefaultInterruptHandler:
  5565                           
  5566                           	psect	text42
  5567  0465                     __ptext42:	
  5568 ;; *************** function i1_switch_zum *****************
  5569 ;; Defined at:
  5570 ;;		line 94 in file "main.c"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;		None
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;		None
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  1    wreg      void 
  5577 ;; Registers used:
  5578 ;;		status,0
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMMON   BANK0   BANK1
  5584 ;;      Params:         0       0       0
  5585 ;;      Locals:         0       0       0
  5586 ;;      Temps:          0       0       0
  5587 ;;      Totals:         0       0       0
  5588 ;;Total ram usage:        0 bytes
  5589 ;; Hardware stack levels used: 1
  5590 ;; This function calls:
  5591 ;;		Nothing
  5592 ;; This function is called by:
  5593 ;;		_rele_tick
  5594 ;;		_TMR0_ISR
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598  0465                     i1_switch_zum:	
  5599                           ;psect for function i1_switch_zum
  5600                           
  5601  0465                     i1l269:	
  5602                           ;incstack = 0
  5603                           ; Regs used in i1_switch_zum: [status,0]
  5604                           ;main.c: 95:     do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  5605                           
  5606  0465                     i1l1809:
  5607  0465  1003               	clrc
  5608  0466  0022               	movlb	2	; select bank2
  5609  0467  1E8C               	btfss	12,5	;volatile
  5610  0468  1403               	setc
  5611  0469  1803               	btfsc	3,0
  5612  046A  2C6C               	goto	u84_21
  5613  046B  2C6F               	goto	u84_20
  5614  046C                     u84_21:
  5615  046C  0022               	movlb	2	; select bank2
  5616  046D  168C               	bsf	12,5	;volatile
  5617  046E  2C71               	goto	u85_24
  5618  046F                     u84_20:
  5619  046F  0022               	movlb	2	; select bank2
  5620  0470  128C               	bcf	12,5	;volatile
  5621  0471                     u85_24:
  5622  0471                     i1l271:
  5623  0471  0008               	return
  5624  0472                     __end_ofi1_switch_zum:
  5625  007E                     btemp	set	126	;btemp
  5626  007E                     int$flags	set	126
  5627  007E                     wtemp0	set	126
  5628                           
  5629                           	psect	idloc
  5630                           
  5631                           ;Config register IDLOC0 @ 0x8000
  5632                           ;	unspecified, using default values
  5633  8000                     	org	32768
  5634  8000  3FFF               	dw	16383
  5635                           
  5636                           ;Config register IDLOC1 @ 0x8001
  5637                           ;	unspecified, using default values
  5638  8001                     	org	32769
  5639  8001  3FFF               	dw	16383
  5640                           
  5641                           ;Config register IDLOC2 @ 0x8002
  5642                           ;	unspecified, using default values
  5643  8002                     	org	32770
  5644  8002  3FFF               	dw	16383
  5645                           
  5646                           ;Config register IDLOC3 @ 0x8003
  5647                           ;	unspecified, using default values
  5648  8003                     	org	32771
  5649  8003  3FFF               	dw	16383
  5650                           
  5651                           	psect	config
  5652                           
  5653                           ;Config register CONFIG1 @ 0x8007
  5654                           ;	Oscillator Selection
  5655                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5656                           ;	Watchdog Timer Enable
  5657                           ;	WDTE = OFF, WDT disabled
  5658                           ;	Power-up Timer Enable
  5659                           ;	PWRTE = OFF, PWRT disabled
  5660                           ;	MCLR Pin Function Select
  5661                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5662                           ;	Flash Program Memory Code Protection
  5663                           ;	CP = OFF, Program memory code protection is disabled
  5664                           ;	Data Memory Code Protection
  5665                           ;	CPD = OFF, Data memory code protection is disabled
  5666                           ;	Brown-out Reset Enable
  5667                           ;	BOREN = ON, Brown-out Reset enabled
  5668                           ;	Clock Out Enable
  5669                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5670                           ;	Internal/External Switchover
  5671                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5672                           ;	Fail-Safe Clock Monitor Enable
  5673                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5674  8007                     	org	32775
  5675  8007  3FE4               	dw	16356
  5676                           
  5677                           ;Config register CONFIG2 @ 0x8008
  5678                           ;	Flash Memory Self-Write Protection
  5679                           ;	WRT = OFF, Write protection off
  5680                           ;	PLL Enable
  5681                           ;	PLLEN = OFF, 4x PLL disabled
  5682                           ;	Stack Overflow/Underflow Reset Enable
  5683                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5684                           ;	Brown-out Reset Voltage Selection
  5685                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5686                           ;	Low-Voltage Programming Enable
  5687                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5688  8008                     	org	32776
  5689  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         27
    Persistent  37
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80      7      33
    BANK1            32      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> switch_zum(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i1_switch_zum(), switch_zum(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ms_tick(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ms_tick(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _ms_tick->_sec_tick_work
    _sec_tick_work->_get_measure
    _get_measure->i1_ADC_GetConversion
    _start_alarm->i1_go_close

Critical Paths under _main in BANK0

    _main->_fun_work
    _main->_switch_wm
    _switch_wm->_boop
    _start_setup->_get_fun_full
    _start_setup->_get_jump_full
    _get_jump_full->_ADC_GetConversion
    _get_fun_full->_ADC_GetConversion
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _povorot->_go_close
    _get_jump->_ADC_GetConversion
    _get_fun->_ADC_GetConversion
    _fun_work->_beep

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1706
                           _fun_work
                            _get_fun
                           _get_jump
                            _povorot
                        _start_setup
                          _switch_wm
 ---------------------------------------------------------------------------------
 (1) _switch_wm                                            1     1      0     316
                                              6 BANK0      1     1      0
                               _boop
 ---------------------------------------------------------------------------------
 (2) _boop                                                 6     5      1     316
                                              0 BANK0      6     5      1
                         _switch_zum
 ---------------------------------------------------------------------------------
 (1) _start_setup                                          0     0      0     984
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                       _get_fun_full
                      _get_jump_full
 ---------------------------------------------------------------------------------
 (2) _get_jump_full                                        5     5      0      70
                                              2 BANK0      5     5      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (2) _get_fun_full                                         5     5      0      70
                                              2 BANK0      5     5      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     422
                     _ADC_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      1     1      0     211
                                              2 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _povorot                                              0     0      0       0
                           _go_close
                            _go_open
 ---------------------------------------------------------------------------------
 (1) _get_jump                                             4     4      0      45
                                              2 BANK0      4     4      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (1) _get_fun                                              4     4      0      45
                                              2 BANK0      4     4      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _fun_work                                             1     1      0     316
                                              6 BANK0      1     1      0
                               _beep
                           _go_close
                       _go_close_alt
                            _go_open
                        _go_open_alt
 ---------------------------------------------------------------------------------
 (2) _go_open_alt                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_open                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_close_alt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_close                                             2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _beep                                                 6     5      1     316
                                              0 BANK0      6     5      1
                         _switch_zum
 ---------------------------------------------------------------------------------
 (3) _switch_zum                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0      67
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0      67
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                            _ms_tick *
 ---------------------------------------------------------------------------------
 (7) _ms_tick                                              0     0      0      67
                      _sec_tick_work
 ---------------------------------------------------------------------------------
 (8) _sec_tick_work                                        1     1      0      67
                                              6 COMMON     1     1      0
                        _get_measure
                          _rele_tick
                        _toggle_tone
 ---------------------------------------------------------------------------------
 (9) _toggle_tone                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _rele_tick                                            2     2      0       0
                                              0 COMMON     2     2      0
                       i1_switch_zum
 ---------------------------------------------------------------------------------
 (9) _get_measure                                          4     4      0      67
                                              2 COMMON     4     4      0
                        _start_alarm
                i1_ADC_GetConversion
 ---------------------------------------------------------------------------------
 (10) i1_ADC_GetConversion                                 2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (10) _start_alarm                                         0     0      0       0
                         i1_go_close
                     i1_go_close_alt
 ---------------------------------------------------------------------------------
 (11) i1_go_close_alt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i1_go_close                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                       i1_switch_zum *
 ---------------------------------------------------------------------------------
 (10) i1_switch_zum                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _fun_work
     _beep
       _switch_zum
     _go_close
     _go_close_alt
     _go_open
     _go_open_alt
   _get_fun
     _ADC_GetConversion
   _get_jump
     _ADC_GetConversion
   _povorot
     _go_close
     _go_open
   _start_setup
     _SYSTEM_Initialize
       _ADC_Initialize
       _FVR_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR2_Initialize
         _TMR2_SetInterruptHandler
       _WDT_Initialize
     _TMR0_SetInterruptHandler
     _TMR2_SetInterruptHandler
     _TMR2_StartTimer
     _get_fun_full
       _ADC_GetConversion
     _get_jump_full
       _ADC_GetConversion
   _switch_wm
     _boop
       _switch_zum

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     i1_switch_zum *
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _ms_tick *
       _sec_tick_work
         _get_measure
           _start_alarm
             i1_go_close
             i1_go_close_alt
           i1_ADC_GetConversion
         _rele_tick
           i1_switch_zum
         _toggle_tone

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      7      21       6       41.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      2E       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed May 11 16:20:15 2022

        __end_of_TMR2_SetInterruptHandler 04A1                          get_fun_full@flag 003B  
                      get_fun@fun_counter 0034                     __end_of_sec_tick_work 01D3  
                                      l31 04B9                                        l25 03D3  
                                      l28 0494                                        l63 0388  
                                      l48 048D                                        l66 038D  
                                      l92 03FE                                        _RD 0CA8  
                                      _WR 0CA9                             ?_go_close_alt 0070  
                          ?_get_jump_full 0070                    __end_of_FVR_Initialize 04BE  
                         _timer0ReloadVal 0040                                       l140 04C0  
                                     l205 04BD                                       l302 0472  
                                     l311 04AF                                       l304 0474  
                                     l320 04AB                                       l313 04B0  
                                     l137 0426                                       l401 00CD  
                                     l306 047B                                       l410 010F  
                                     l316 04A8                                       l412 0111  
                                     l309 04AD                                       l318 04AA  
                                     l271 0436                                       l351 0157  
                                     l159 04A0                                       l362 0194  
                                     l283 0312                                       l443 0083  
                                     l195 04A6                                       l179 03E9  
                                     l452 0154                                       l380 00CA  
                                     l292 027C                                       l269 042A  
                                     l349 0155                                       l382 00CC  
                                     l367 0084                                       l455 0326  
                                     l369 0086                                       l298 034B  
                                     l378 00C8                                       l490 0246  
                                     l299 0352                                       l387 01D3  
                                     l459 0332                                       l396 020E  
                                     _GIE 005F                               _start_alarm 0437  
                                     _PR2 001B                                       u940 038C  
                                     u941 038B                               _start_setup 020F  
                            ?_go_open_alt 0070                           _TMR2_Initialize 0414  
                                     wreg 0009                                i1_go_close 0353  
                             get_jump@res 0039                                      l2011 00A3  
                                    l2003 0088                                      l2101 018F  
                                    l2021 00B6                                      l2013 00A7  
                                    l2005 008A                                      l2103 0193  
                                    l2111 01E2                                      l2023 00BD  
                                    l2015 00AE                                      l2007 0095  
                                    l2031 00CF                                      l2121 0200  
                                    l2113 01EC                                      l2025 00C1  
                                    l2017 00B2                                      l2009 009E  
                                    l2041 00EE                                      l2033 00D1  
                                    l2123 0202                                      l2115 01F1  
                                    l2107 01D5                                      l2019 00B3  
                                    l2051 0104                                      l2043 00F5  
                                    l2035 00DC                                      l2125 0209  
                                    l2117 01F5                                      l2109 01E0  
                                    l2301 041B                                      l2029 00C3  
                                    l2053 0108                                      l2045 00F9  
                                    l2037 00E5                                      l2127 020D  
                                    l2119 01FC                                      l2311 03E0  
                                    l2303 0423                                      l2047 00FA  
                                    l2039 00EA                                      l2081 0159  
                                    l2401 007C                                      l2313 03E1  
                                    l2305 03D4                                      l2321 04BE  
                                    l2057 010A                                      l2049 00FD  
                                    l2331 02F0                                      l2323 02E5  
                                    l2411 0122                                      l2403 0112  
                                    l2091 0177                                      l2083 0164  
                                    l2315 03E2                                      l2307 03D9  
                                    l2317 042A                                      l2333 02F5  
                                    l2325 02E7                                      l2421 0138  
                                    l2413 0129                                      l2405 0116  
                                    l2093 017B                                      l2085 0166  
                                    l2309 03DC                                      l2261 049B  
                                    l2341 0249                                      l2501 0391  
                                    l2335 02FB                                      l2327 02E9  
                                    l2431 0151                                      l2423 013C  
                                    l2415 012D                                      l2407 011A  
                                    l2095 0182                                      l2087 0168  
                                    l2271 03F2                                      l2263 04A1  
                                    l2319 03BE                                      l2351 025E  
                                    l2343 024B                                      l2503 0395  
                                    l2337 0307                                      l2329 02EC  
                                    l2361 047A                                      l2425 0140  
                                    l2417 0131                                      l2409 011E  
                                    l2097 0186                                      l2089 0172  
                                    l2281 0492                                      l2273 03F5  
                                    l2265 03EA                                      l2353 0264  
                                    l2345 024D                                      l2441 032A  
                                    l2433 0313                                      l2339 030C  
                                    l2427 0149                                      l2419 0134  
                                    l2099 0188                                      l2291 048A  
                                    l2275 03FA                                      l2267 03ED  
                                    l2283 04B6                                      l2451 0224  
                                    l2355 0271                                      l2347 0250  
                                    l2443 032B                                      l2435 0317  
                                    l2365 04AC                                      l2429 014D  
                                    l2381 004B                                      l2285 04BA  
                                    l2277 048E                                      l2269 03F0  
                                    l2293 0414                                      l2461 022D  
                                    l2453 0227                                      l2445 020F  
                                    l2349 0259                                      l2357 0276  
                                    l2437 031B                                      l2359 0475  
                                    l2367 04A7                                      l1911 0381  
                                    l2391 0069                                      l2383 004F  
                                    l2287 0486                                      l2279 0491  
                                    l2295 0417                                      l2471 0236  
                                    l2463 022F                                      l2455 0229  
                                    l2447 0212                                      l2439 031C  
                                    l1913 0382                                      l2393 006D  
                                    l2385 0053                                      l2377 0038  
                                    l2289 0489                                      l2297 0418  
                                    l2481 023D                                      l2473 0237  
                                    l2465 0231                                      l2457 022A  
                                    l2449 0213                                      l1915 0386  
                                    l2395 0071                                      l2387 0057  
                                    l2379 0047                                      l2299 0419  
                                    l2483 0240                                      l2475 0239  
                                    l2467 0233                                      l2459 022B  
                                    l1917 038C                                      l1909 0375  
                                    l2397 0075                                      l2389 005A  
                                    l2485 0243                                      l2477 023A  
                                    l2469 0234                                      l2399 0079  
                                    l2479 023B                                      l2499 038E  
                                    l1991 0350                                      l1983 0333  
                                    l1993 0351                                      l1985 033A  
                                    l1987 033C                                      l1989 0349  
                                    u1100 00C8                                      u1101 00C7  
                                    u1110 00E5                                      u1111 00E4  
                                    u1200 018F                                      u1120 00F5  
                                    u1201 018E                                      u1121 00F4  
                                    u1210 01EC                                      u1130 0104  
                                    u1211 01EB                                      u1131 0103  
                                    u1220 01FC                                      u1140 010F  
                                    u1221 01FB                                      u1141 010E  
                                    u1230 0209                                      u1070 009E  
                                    u1231 0208                                      u1071 009D  
                                    u1080 00AE                                      u1081 00AD  
                                    u1090 00BD                                      u1091 00BC  
                                    u1180 0172                                      u1181 0171  
                                    _LATA 010C                                      u1190 0182  
                                    u1191 0181                                      _LATC 010E  
                                    u1520 0434                                      u1600 004B  
                                    u1521 0431                                      u1601 004A  
                                    u1610 004F                                      u1611 004E  
                                    u1540 02FB                                      u1700 011A  
                                    u1620 0053                                      u1541 02FA  
                                    u1701 0119                                      u1621 0052  
                                    u1534 0436                                      u1550 0312  
                                    u1710 011E                                      u1630 0057  
                                    u1551 0311                                      u1711 011D  
                                    u1631 0056                                      u1720 0122  
                                    u1640 0069                                      u1560 0264  
                                    u1800 032A                                      u1721 0121  
                                    u1641 0068                                      u1561 0263  
                                    u1801 0329                                      u1730 012D  
                                    u1650 006D                                      u1570 027C  
                                    u1731 012C                                      u1651 006C  
                                    u1571 027B                                      u1740 0138  
                                    u1660 0071                                      u1741 0137  
                                    u1661 0070                                      u1645 0065  
                                    u1750 013C                                      u1670 0075  
                                    u1590 0047                                      u1751 013B  
                                    u1671 0074                                      u1591 0046  
                                    u1760 0140                                      u1680 0079  
                                    u1761 013F                                      u1681 0078  
                                    u1770 014D                                      u1690 0116  
                                    u1907 0343                                      u1771 014C  
                                    u1691 0115                                      u1595 0043  
                                    u1780 0317                                      u1860 0395  
                                    u1917 02ED                                      u1781 0316  
                                    u1861 0394                                      u1790 031B  
                                    u1927 0301                                      u1791 031A  
                                    u1877 0254                                      u1887 026A  
                                    u1897 0383                                      i1l63 03B8  
                                    i1l66 03BD                                      _TMR0 0015  
                                    _TMR2 001A                                      _WREN 0CAA  
                                    _WPUA 020C                                      _WPUC 020E  
                                    _beep 02E3                                      _boop 0247  
                                    _main 038E                                      fsr0h 0005  
                                    indf0 0000                                      fsr0l 0004  
                                    btemp 007E                            ??_get_fun_full 0037  
                                    start 0026                      __end_ofi1_switch_zum 0472  
                 get_fun_full@fun_counter 0033                            ??_go_close_alt 0035  
                 __end_of_TMR0_Initialize 03EA            ??_TMR0_DefaultInterruptHandler 0070  
                         ?_FVR_Initialize 0070             __end_of_OSCILLATOR_Initialize 0495  
                                   ?_beep 0035                                     ?_boop 0035  
                                   ?_main 0070                                     _EEADR 0191  
                                   _FLAGS 0077                                     _T2CON 001C  
                                   i1l110 0012                                     i1l115 0024  
                                   i1l116 0024                                     i1l311 04B4  
                                   i1l313 04B5                                     i1l162 04CB  
                                   i1l323 0438                                     i1l324 043A  
                                   i1l332 027D                                     i1l156 0464  
                                   i1l309 04B2                                     i1l334 027F  
                                   i1l271 0471                                     i1l327 0446  
                                   i1l192 0456                                     i1l344 02B0  
                                   i1l424 02DD                                     i1l416 02C4  
                                   i1l425 02DF                                     i1l426 02E2  
                                   i1l274 0485                                     i1l419 02C8  
                                   i1l269 0465                                     i1l198 04CC  
                                   i1l438 01D2                                     i1l465 0413  
                                   i1l298 036B                                     i1l299 0372  
                                   _TRISA 008C                                     _TRISC 008E  
                                   u82_20 043F                                     u90_20 02AD  
                                   u82_21 043E                                     u90_21 02AC  
                                   u83_20 03BC                                     u91_20 02B8  
                                   u83_21 03BB                                     u91_21 02B7  
                                   u84_20 046F                                     u92_20 02BF  
                                   u84_21 046C                                     u92_21 02BE  
                                   u93_20 02C8                                     u93_21 02C7  
                                   u85_24 0471                                     u86_20 0484  
                                   u86_21 0482                                     u87_24 0485  
                                   u88_20 0298                                     u88_21 0297  
                                   u89_20 02A6                                     u97_20 01A8  
                                   u89_21 02A5                                     u97_21 01A7  
                                   u98_20 01B2                                     u98_21 01AF  
                                   u99_24 01B4                 ?_TMR0_SetInterruptHandler 0035  
                        __end_of_TMR0_ISR 0457                           __end_of_get_fun 0195  
                        __end_of_TMR2_ISR 0465                           __end_of_go_open 047C  
                                   beep@i 003A                                     beep@j 0039  
                          _WDT_Initialize 04B6                                     boop@i 003A  
                                   boop@j 0039                           __end_of_ms_tick 0414  
                                   pclath 000A                           __end_of_povorot 0084  
                                   status 0003                                     wtemp0 007E  
                       ms_tick@tick_count 0023                           _TMR2_StartTimer 04BE  
                         __initialization 0027                              __end_of_beep 0313  
                            __end_of_boop 027D                              __end_of_main 03A6  
                         ??_get_jump_full 0037                   __end_of_TMR2_Initialize 0427  
             ?_INTERRUPT_InterruptManager 0070                                    ??_beep 0036  
                                  ??_boop 0036                  _TMR2_SetInterruptHandler 049B  
                                  ??_main 003C                    __end_of_WDT_Initialize 04BA  
                             ?i1_go_close 0070                       i1_ADC_GetConversion 03A6  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _ADRESH 009C                                    _ADRESL 009B  
                                  _EEDATA 0193                                    _EECON2 0196  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  _ANSELC 018E                                    _BORCON 0116  
                                  u100_20 01C5                                    u100_21 01C4  
                                  u101_20 01CF                                    u101_21 01CC  
                                  u102_24 01D1                                    i1l2061 0404  
                                  i1l2063 040D                                    i1l2065 0410  
                                  i1l2059 03FF                                    i1l2075 0457  
                                  i1l2077 0459                                    i1l2079 045F  
                                  i1l1801 03B2                                    i1l2371 0448  
                                  i1l1803 03B6                                    i1l2373 044B  
                                  i1l1805 03BC                                    i1l1821 028D  
                                  i1l2375 0451                                    i1l1831 02A7  
                                  i1l1823 028F                                    i1l1815 047C  
                                  i1l1809 0465                                    i1l2369 0447  
                                  i1l1833 02AD                                    i1l1825 0298  
                                  i1l1817 0281                                    i1l1841 02B8  
                                  i1l1827 029D                                    i1l1819 028B  
                                  i1l1851 02D9                                    i1l1843 02BF  
                                  i1l1931 01B4                                    i1l1923 0195  
                                  i1l2491 000E                                    i1l1781 0369  
                                  i1l1829 02A6                                    i1l1853 02DA  
                                  i1l1845 02CA                                    i1l1837 02B1  
                                  i1l1941 01D1                                    i1l1933 01B8  
                                  i1l1925 01A0                                    i1l2493 0016  
                                  i1l1783 0370                                    i1l1775 0353  
                                  i1l1791 0437                                    i1l1855 02DB  
                                  i1l1847 02D6                                    i1l1839 02B4  
                                  i1l1935 01BB                                    i1l1927 01A4  
                                  i1l2495 001B                                    i1l2487 0006  
                                  u115_20 040D                                    i1l1785 0371  
                                  i1l1777 035A                                    i1l1793 043F  
                                  i1l1849 02D8                                    i1l1937 01BF  
                                  i1l1929 01A8                                    u115_21 040C  
                                  i1l2497 0020                                    i1l2489 000A  
                                  i1l1779 035C                                    i1l1795 0443  
                                  i1l1939 01C5                                    i1l1789 04B1  
                                  i1l1797 03A7                                    i1l1799 03B1  
                                  u117_20 045F                                    u117_21 045E  
                                  _FVRCON 0117                                    u181_20 000A  
                                  u181_21 0009                                    u158_20 0451  
                                  u182_20 000E                                    u158_21 0450  
                                  u182_21 000D                                    u183_20 0016  
                                  u183_21 0015                                    u184_20 001B  
                                  u184_21 001A                                    u185_20 0020  
                                  u185_21 001F                                    u193_27 02CF  
                                  u194_27 03B3                                    u195_27 0362  
                        _GOOD_WSP_VOLTAGE 04C1                                    _OSCCON 0099  
                                  _WDTCON 0097                      ?i1_ADC_GetConversion 0070  
                        __end_of_get_jump 020F                          __end_of_go_close 0353  
                    _switch_zum$intlevel0 042A                          ?_TMR0_Initialize 0070  
                        __end_of_fun_work 0155                                 ??_get_fun 0037  
                               ??_go_open 0035                      __end_of_get_fun_full 00CD  
                               ??_ms_tick 0077                           ?_WDT_Initialize 0070  
                          get_measure@res 0074                  ADC_GetConversion@channel 0036  
                   _HIGH_WATER_RESISTANSE 04C7                                 ??_povorot 0037  
                 __end_of_TMR2_StartTimer 04C1  TMR0_SetInterruptHandler@InterruptHandler 0035  
TMR2_SetInterruptHandler@InterruptHandler 0035                      __end_of_go_close_alt 04B1  
                       _SYSTEM_Initialize 03BE                   __end_of__initialization 0035  
                      ?_SYSTEM_Initialize 0070                             _UP_RESISTANSE 04C5  
                            ?_toggle_tone 0070                     ??i1_ADC_GetConversion 0070  
                          __pcstackCOMMON 0070                 get_jump_full@jump_counter 0031  
                     ??_SYSTEM_Initialize 0038                                 ?_TMR0_ISR 0070  
                               ?_TMR2_ISR 0070                          ?_TMR2_Initialize 0070  
              i1ADC_GetConversion@channel 0071                              ?_start_alarm 0070  
                          _OPTION_REGbits 0095                              ?_start_setup 0070  
                            i1_switch_zum 0465                 __end_of_SYSTEM_Initialize 03D4  
                              __pbssBANK0 0020                          ??_FVR_Initialize 0035  
                              __pmaintext 038E          __end_of_TMR0_SetInterruptHandler 04A7  
                              ??_TMR0_ISR 0070                                ??_TMR2_ISR 0077  
                         _time_rele_power 002D                                __pintentry 0004  
                       _time_rele_control 002B                          get_jump_full@res 0039  
                                 _OSCTUNE 0098                          ?_TMR2_StartTimer 0070  
                               ?_get_jump 0070                                 ?_go_close 0070  
                               ?_fun_work 0070                      _ADC_InterruptHandler 002F  
              ??_TMR2_SetInterruptHandler 0037                  __end_of_GOOD_WSP_VOLTAGE 04C3  
                                 __ptext1 0313                                   __ptext2 0247  
                     get_measure@measures 007A                                   __ptext3 020F  
                                 __ptext4 00CD                                   __ptext5 0084  
                                 __ptext6 04BE                                   __ptext7 03BE  
                                 __ptext8 04B6                                   __ptext9 0414  
                                 _get_fun 0155                                   _go_open 0472  
                   _OSCILLATOR_Initialize 048E                                 _T2CONbits 001C  
                ??_PIN_MANAGER_Initialize 0035                                   _ms_tick 03FF  
                            ??i1_go_close 0070                                   _povorot 0038  
                                 clrloop0 0496                                ??_get_jump 0037  
                              ??_go_close 0035                         __end_of_rele_tick 02E3  
                    end_of_initialization 0035                                ??_fun_work 003B  
                            _get_fun_full 0084                        __end_ofi1_go_close 0373  
                   __end_of_get_jump_full 0112                             _sec_tick_work 0195  
                            _go_close_alt 04AC                          ??_WDT_Initialize 0035  
            __end_of_LOW_WATER_RESISTANSE 04CB                  _TMR0_SetInterruptHandler 04A1  
                       __end_of_switch_wm 0333                                 _TRISAbits 008C  
                               _TRISCbits 008E                           get_fun_full@res 0039  
                              get_fun@res 0039                             ??_get_measure 0072  
                              _switch_zum 0427      __end_of_TMR2_DefaultInterruptHandler 04CC  
            _TMR2_DefaultInterruptHandler 04CB                            ?_sec_tick_work 0070  
                          _ADC_Initialize 0486                    ?_OSCILLATOR_Initialize 0070  
                          i1_go_close_alt 04B1                             ??_go_open_alt 0035  
                     start_initialization 0027               __end_ofi1_ADC_GetConversion 03BE  
                  __end_of_ADC_Initialize 048E                       __end_of_get_measure 02B1  
                  __end_ofi1_go_close_alt 04B6             ?_TMR2_DefaultInterruptHandler 0070  
                             __pbssCOMMON 0077                                 ___latbits 0000  
                           __pcstackBANK0 0035                       __end_of_go_open_alt 04AC  
                    _LOW_WATER_RESISTANSE 04C9                     _TMR0_InterruptHandler 003C  
                               __pnvBANK0 003C                    _PIN_MANAGER_Initialize 03EA  
                         ??_sec_tick_work 0076                               ?_switch_zum 0070  
                         ?_ADC_Initialize 0070                                 beep@count 0035  
                         ?i1_go_close_alt 0070              ??_INTERRUPT_InterruptManager 0077  
                                ?_get_fun 0070                                  ?_go_open 0070  
                       sec_tick_work@iled 0079                                  ?_ms_tick 0070  
                                ?_povorot 0070                         ??_TMR0_Initialize 0037  
                       get_jump_full@flag 003B                                  _LATAbits 010C  
                                _LATCbits 010E                                 _rele_tick 02B1  
                               clear_ram0 0495                                  _PIE1bits 0091  
                             _get_measure 027D                ??_TMR0_SetInterruptHandler 0037  
                                _PIR1bits 0011                                 _time_meas 007B  
                                _TMR0_ISR 0447                                  _TMR2_ISR 0457  
                               boop@count 0035                                _ADCON0bits 009D  
                                _WPUAbits 020C                                  _WPUCbits 020E  
          ??_TMR2_DefaultInterruptHandler 0070                               _go_open_alt 04A7  
               ?_TMR2_SetInterruptHandler 0035                                 _switch_wm 0313  
                       ??_TMR2_Initialize 0037                                ?_rele_tick 0070  
                   __end_of_UP_RESISTANSE 04C7                             ??_toggle_tone 0070  
                       _ADC_GetConversion 0373                   ??_OSCILLATOR_Initialize 0035  
                      ?_ADC_GetConversion 0070                             ??_start_alarm 0072  
                              _ANSELAbits 018C                                _ANSELCbits 018E  
                     ??_ADC_GetConversion 0035                             ??_start_setup 003C  
                           _time_rele_gap 0029                                ?_switch_wm 0070  
                                __ptext10 049B                                  __ptext11 03D4  
                                __ptext20 0373                                  __ptext12 04A1  
                                __ptext21 0112                                  __ptext13 03EA  
                                __ptext30 04CB                                  __ptext22 04A7  
                                __ptext14 048E                                  __ptext31 03FF  
                                __ptext23 0472                                  __ptext15 04BA  
                                __ptext40 0447                                  __ptext32 0195  
                                __ptext24 04AC                                  __ptext16 0486  
                                __ptext41 04CC                                  __ptext33 047C  
                                __ptext25 0333                                  __ptext17 0038  
                                __ptext42 0465                                  __ptext34 02B1  
                                __ptext26 02E3                                  __ptext18 01D3  
                                __ptext35 027D                                  __ptext27 0427  
                                __ptext19 0155                                  __ptext36 03A6  
                                __ptext37 0437                                  __ptext29 0457  
                                __ptext38 04B1                                  __ptext39 0353  
                           ?i1_switch_zum 0070                                  beep@time 0038  
                                _get_jump 01D3                                  _go_close 0333  
                         _BAD_WSP_VOLTAGE 04C3                             _time_rotation 0020  
                                _fun_work 0112      __end_of_TMR0_DefaultInterruptHandler 04CD  
            _TMR0_DefaultInterruptHandler 04CC                 __end_of_ADC_GetConversion 038E  
                                _time_led 0027                                  boop@time 0038  
                                int$flags 007E                         ??_TMR2_StartTimer 0035  
                     __end_of_toggle_tone 0486        __end_of_INTERRUPT_InterruptManager 0026  
              _INTERRUPT_InterruptManager 0004                      get_jump@jump_counter 0032  
                              _INTCONbits 000B             __end_of_HIGH_WATER_RESISTANSE 04C9  
                              _FVRCONbits 0117                            ??i1_switch_zum 0070  
                     __end_of_start_alarm 0447                       __end_of_start_setup 0247  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0070  
                             ??_rele_tick 0070                          ??_ADC_Initialize 0035  
           ?_TMR0_DefaultInterruptHandler 0070                          ??i1_go_close_alt 0070  
                            ??_switch_zum 0035                             _get_jump_full 00CD  
                           __pstringtext1 04C1                             __pstringtext2 04C3  
                           __pstringtext3 04C5                             __pstringtext4 04C7  
                           __pstringtext5 04C9                            _FVR_Initialize 04BA  
                              _OPTION_REG 0095               _FRIMWARE_VERSION_EEPROM_ADR 007C  
                         _TMR0_Initialize 03D4                   __end_of_BAD_WSP_VOLTAGE 04C5  
                             ??_switch_wm 003B                               _time_zummer 0025  
                      __end_of_switch_zum 0437            __end_of_PIN_MANAGER_Initialize 03FF  
                   _TMR2_InterruptHandler 003E                               _toggle_tone 047C  
                           ?_get_fun_full 0070                              ?_get_measure 0070  
