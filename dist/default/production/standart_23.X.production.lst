

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu May 19 14:17:03 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1823
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    22                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cinit,global,class=CODE,merge=1,delta=2
    24                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
    25                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    26                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
    27                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	clrtext,global,class=CODE,delta=2
    29                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    30                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    31                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2,codecov
    32                           	psect	text1,local,class=CODE,merge=1,delta=2,codecov
    33                           	psect	text2,local,class=CODE,merge=1,delta=2,codecov
    34                           	psect	text3,local,class=CODE,merge=1,delta=2,codecov
    35                           	psect	text4,local,class=CODE,merge=1,delta=2,codecov
    36                           	psect	text5,local,class=CODE,merge=1,delta=2,codecov
    37                           	psect	text6,local,class=CODE,merge=1,delta=2,codecov
    38                           	psect	text7,local,class=CODE,merge=1,delta=2,codecov
    39                           	psect	text8,local,class=CODE,merge=1,delta=2,codecov
    40                           	psect	text9,local,class=CODE,merge=1,delta=2,codecov
    41                           	psect	text10,local,class=CODE,merge=1,delta=2,codecov
    42                           	psect	text11,local,class=CODE,merge=1,delta=2,codecov
    43                           	psect	text12,local,class=CODE,merge=1,delta=2,codecov
    44                           	psect	text13,local,class=CODE,merge=1,delta=2,codecov
    45                           	psect	text14,local,class=CODE,merge=1,delta=2,codecov
    46                           	psect	text15,local,class=CODE,merge=1,delta=2,codecov
    47                           	psect	text16,local,class=CODE,merge=1,delta=2,codecov
    48                           	psect	text17,local,class=CODE,merge=1,delta=2,codecov
    49                           	psect	text18,local,class=CODE,merge=1,delta=2,codecov
    50                           	psect	text19,local,class=CODE,merge=1,delta=2,codecov
    51                           	psect	text20,local,class=CODE,merge=1,delta=2,codecov
    52                           	psect	text21,local,class=CODE,merge=1,delta=2,codecov
    53                           	psect	text22,local,class=CODE,merge=1,delta=2,codecov
    54                           	psect	text23,local,class=CODE,merge=1,delta=2,codecov
    55                           	psect	text24,local,class=CODE,merge=1,delta=2,codecov
    56                           	psect	text25,local,class=CODE,merge=1,delta=2,codecov
    57                           	psect	text26,local,class=CODE,merge=1,delta=2,codecov
    58                           	psect	text27,local,class=CODE,merge=1,delta=2,codecov
    59                           	psect	text28,local,class=CODE,merge=1,delta=2,codecov
    60                           	psect	text29,local,class=CODE,merge=1,delta=2,codecov
    61                           	psect	text30,local,class=CODE,merge=1,delta=2,codecov
    62                           	psect	text31,local,class=CODE,merge=1,delta=2,codecov
    63                           	psect	text32,local,class=CODE,merge=1,delta=2,codecov
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	text34,local,class=CODE,merge=1,delta=2,codecov
    66                           	psect	text35,local,class=CODE,merge=1,delta=2,codecov
    67                           	psect	text36,local,class=CODE,merge=1,delta=2,codecov
    68                           	psect	text37,local,class=CODE,merge=1,delta=2,codecov
    69                           	psect	text38,local,class=CODE,merge=1,delta=2,codecov
    70                           	psect	text39,local,class=CODE,merge=1,delta=2,codecov
    71                           	psect	text40,local,class=CODE,merge=1,delta=2,codecov
    72                           	psect	text41,local,class=CODE,merge=1,delta=2,codecov
    73                           	psect	text42,local,class=CODE,merge=1,delta=2,codecov
    74                           	psect	text43,local,class=CODE,merge=1,delta=2,codecov
    75                           	psect	text44,local,class=CODE,merge=1,delta=2,codecov
    76                           	psect	text45,local,class=CODE,merge=1,delta=2,codecov
    77                           	psect	text46,local,class=CODE,merge=1,delta=2,codecov
    78                           	psect	text47,local,class=CODE,merge=1,delta=2,codecov
    79                           	psect	text48,local,class=CODE,merge=1,delta=2,codecov
    80                           	psect	text49,local,class=CODE,merge=1,delta=2,codecov
    81                           	psect	text50,local,class=CODE,merge=1,delta=2,codecov
    82                           	psect	codecov_info_hdr,global,note,abs,reloc=1,space=6,split=0,delta=1,noexec
    83                           	psect	codecov_info,global,note,abs,reloc=1,space=6,split=0,delta=1,noexec
    84                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    85                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    86                           	dabs	1,0x7E,2
    87  0000                     
    88                           ; Version 2.40
    89                           ; Generated 17/11/2021 GMT
    90                           ; 
    91                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution. Publication is not required when
   105                           ;        this file is used in an embedded application.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC16F1823 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000E                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001C                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  008C                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0095                     	;# 
   155  0096                     	;# 
   156  0097                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009A                     	;# 
   160  009B                     	;# 
   161  009B                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  010C                     	;# 
   166  010E                     	;# 
   167  0111                     	;# 
   168  0112                     	;# 
   169  0113                     	;# 
   170  0114                     	;# 
   171  0115                     	;# 
   172  0116                     	;# 
   173  0117                     	;# 
   174  0118                     	;# 
   175  0119                     	;# 
   176  011A                     	;# 
   177  011B                     	;# 
   178  011D                     	;# 
   179  011D                     	;# 
   180  018C                     	;# 
   181  018E                     	;# 
   182  0191                     	;# 
   183  0191                     	;# 
   184  0192                     	;# 
   185  0193                     	;# 
   186  0193                     	;# 
   187  0193                     	;# 
   188  0194                     	;# 
   189  0195                     	;# 
   190  0196                     	;# 
   191  0199                     	;# 
   192  019A                     	;# 
   193  019B                     	;# 
   194  019B                     	;# 
   195  019B                     	;# 
   196  019B                     	;# 
   197  019C                     	;# 
   198  019C                     	;# 
   199  019D                     	;# 
   200  019E                     	;# 
   201  019F                     	;# 
   202  020C                     	;# 
   203  020E                     	;# 
   204  0211                     	;# 
   205  0211                     	;# 
   206  0212                     	;# 
   207  0212                     	;# 
   208  0213                     	;# 
   209  0213                     	;# 
   210  0214                     	;# 
   211  0214                     	;# 
   212  0215                     	;# 
   213  0215                     	;# 
   214  0215                     	;# 
   215  0216                     	;# 
   216  0216                     	;# 
   217  0217                     	;# 
   218  0217                     	;# 
   219  0291                     	;# 
   220  0291                     	;# 
   221  0292                     	;# 
   222  0293                     	;# 
   223  0294                     	;# 
   224  0295                     	;# 
   225  0295                     	;# 
   226  0296                     	;# 
   227  0391                     	;# 
   228  0392                     	;# 
   229  0393                     	;# 
   230  039A                     	;# 
   231  039C                     	;# 
   232  039D                     	;# 
   233  039E                     	;# 
   234  039F                     	;# 
   235  0FE4                     	;# 
   236  0FE5                     	;# 
   237  0FE6                     	;# 
   238  0FE7                     	;# 
   239  0FE8                     	;# 
   240  0FE9                     	;# 
   241  0FEA                     	;# 
   242  0FEB                     	;# 
   243  0FED                     	;# 
   244  0FEE                     	;# 
   245  0FEF                     	;# 
   246  0000                     	;# 
   247  0001                     	;# 
   248  0002                     	;# 
   249  0003                     	;# 
   250  0004                     	;# 
   251  0005                     	;# 
   252  0006                     	;# 
   253  0007                     	;# 
   254  0008                     	;# 
   255  0009                     	;# 
   256  000A                     	;# 
   257  000B                     	;# 
   258  000C                     	;# 
   259  000E                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0016                     	;# 
   265  0017                     	;# 
   266  0018                     	;# 
   267  0019                     	;# 
   268  001A                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001E                     	;# 
   272  001F                     	;# 
   273  008C                     	;# 
   274  008E                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  010C                     	;# 
   289  010E                     	;# 
   290  0111                     	;# 
   291  0112                     	;# 
   292  0113                     	;# 
   293  0114                     	;# 
   294  0115                     	;# 
   295  0116                     	;# 
   296  0117                     	;# 
   297  0118                     	;# 
   298  0119                     	;# 
   299  011A                     	;# 
   300  011B                     	;# 
   301  011D                     	;# 
   302  011D                     	;# 
   303  018C                     	;# 
   304  018E                     	;# 
   305  0191                     	;# 
   306  0191                     	;# 
   307  0192                     	;# 
   308  0193                     	;# 
   309  0193                     	;# 
   310  0193                     	;# 
   311  0194                     	;# 
   312  0195                     	;# 
   313  0196                     	;# 
   314  0199                     	;# 
   315  019A                     	;# 
   316  019B                     	;# 
   317  019B                     	;# 
   318  019B                     	;# 
   319  019B                     	;# 
   320  019C                     	;# 
   321  019C                     	;# 
   322  019D                     	;# 
   323  019E                     	;# 
   324  019F                     	;# 
   325  020C                     	;# 
   326  020E                     	;# 
   327  0211                     	;# 
   328  0211                     	;# 
   329  0212                     	;# 
   330  0212                     	;# 
   331  0213                     	;# 
   332  0213                     	;# 
   333  0214                     	;# 
   334  0214                     	;# 
   335  0215                     	;# 
   336  0215                     	;# 
   337  0215                     	;# 
   338  0216                     	;# 
   339  0216                     	;# 
   340  0217                     	;# 
   341  0217                     	;# 
   342  0291                     	;# 
   343  0291                     	;# 
   344  0292                     	;# 
   345  0293                     	;# 
   346  0294                     	;# 
   347  0295                     	;# 
   348  0295                     	;# 
   349  0296                     	;# 
   350  0391                     	;# 
   351  0392                     	;# 
   352  0393                     	;# 
   353  039A                     	;# 
   354  039C                     	;# 
   355  039D                     	;# 
   356  039E                     	;# 
   357  039F                     	;# 
   358  0FE4                     	;# 
   359  0FE5                     	;# 
   360  0FE6                     	;# 
   361  0FE7                     	;# 
   362  0FE8                     	;# 
   363  0FE9                     	;# 
   364  0FEA                     	;# 
   365  0FEB                     	;# 
   366  0FED                     	;# 
   367  0FEE                     	;# 
   368  0FEF                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0008                     	;# 
   378  0009                     	;# 
   379  000A                     	;# 
   380  000B                     	;# 
   381  000C                     	;# 
   382  000E                     	;# 
   383  0011                     	;# 
   384  0012                     	;# 
   385  0015                     	;# 
   386  0016                     	;# 
   387  0016                     	;# 
   388  0017                     	;# 
   389  0018                     	;# 
   390  0019                     	;# 
   391  001A                     	;# 
   392  001B                     	;# 
   393  001C                     	;# 
   394  001E                     	;# 
   395  001F                     	;# 
   396  008C                     	;# 
   397  008E                     	;# 
   398  0091                     	;# 
   399  0092                     	;# 
   400  0095                     	;# 
   401  0096                     	;# 
   402  0097                     	;# 
   403  0098                     	;# 
   404  0099                     	;# 
   405  009A                     	;# 
   406  009B                     	;# 
   407  009B                     	;# 
   408  009C                     	;# 
   409  009D                     	;# 
   410  009E                     	;# 
   411  010C                     	;# 
   412  010E                     	;# 
   413  0111                     	;# 
   414  0112                     	;# 
   415  0113                     	;# 
   416  0114                     	;# 
   417  0115                     	;# 
   418  0116                     	;# 
   419  0117                     	;# 
   420  0118                     	;# 
   421  0119                     	;# 
   422  011A                     	;# 
   423  011B                     	;# 
   424  011D                     	;# 
   425  011D                     	;# 
   426  018C                     	;# 
   427  018E                     	;# 
   428  0191                     	;# 
   429  0191                     	;# 
   430  0192                     	;# 
   431  0193                     	;# 
   432  0193                     	;# 
   433  0193                     	;# 
   434  0194                     	;# 
   435  0195                     	;# 
   436  0196                     	;# 
   437  0199                     	;# 
   438  019A                     	;# 
   439  019B                     	;# 
   440  019B                     	;# 
   441  019B                     	;# 
   442  019B                     	;# 
   443  019C                     	;# 
   444  019C                     	;# 
   445  019D                     	;# 
   446  019E                     	;# 
   447  019F                     	;# 
   448  020C                     	;# 
   449  020E                     	;# 
   450  0211                     	;# 
   451  0211                     	;# 
   452  0212                     	;# 
   453  0212                     	;# 
   454  0213                     	;# 
   455  0213                     	;# 
   456  0214                     	;# 
   457  0214                     	;# 
   458  0215                     	;# 
   459  0215                     	;# 
   460  0215                     	;# 
   461  0216                     	;# 
   462  0216                     	;# 
   463  0217                     	;# 
   464  0217                     	;# 
   465  0291                     	;# 
   466  0291                     	;# 
   467  0292                     	;# 
   468  0293                     	;# 
   469  0294                     	;# 
   470  0295                     	;# 
   471  0295                     	;# 
   472  0296                     	;# 
   473  0391                     	;# 
   474  0392                     	;# 
   475  0393                     	;# 
   476  039A                     	;# 
   477  039C                     	;# 
   478  039D                     	;# 
   479  039E                     	;# 
   480  039F                     	;# 
   481  0FE4                     	;# 
   482  0FE5                     	;# 
   483  0FE6                     	;# 
   484  0FE7                     	;# 
   485  0FE8                     	;# 
   486  0FE9                     	;# 
   487  0FEA                     	;# 
   488  0FEB                     	;# 
   489  0FED                     	;# 
   490  0FEE                     	;# 
   491  0FEF                     	;# 
   492  0000                     	;# 
   493  0001                     	;# 
   494  0002                     	;# 
   495  0003                     	;# 
   496  0004                     	;# 
   497  0005                     	;# 
   498  0006                     	;# 
   499  0007                     	;# 
   500  0008                     	;# 
   501  0009                     	;# 
   502  000A                     	;# 
   503  000B                     	;# 
   504  000C                     	;# 
   505  000E                     	;# 
   506  0011                     	;# 
   507  0012                     	;# 
   508  0015                     	;# 
   509  0016                     	;# 
   510  0016                     	;# 
   511  0017                     	;# 
   512  0018                     	;# 
   513  0019                     	;# 
   514  001A                     	;# 
   515  001B                     	;# 
   516  001C                     	;# 
   517  001E                     	;# 
   518  001F                     	;# 
   519  008C                     	;# 
   520  008E                     	;# 
   521  0091                     	;# 
   522  0092                     	;# 
   523  0095                     	;# 
   524  0096                     	;# 
   525  0097                     	;# 
   526  0098                     	;# 
   527  0099                     	;# 
   528  009A                     	;# 
   529  009B                     	;# 
   530  009B                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  010C                     	;# 
   535  010E                     	;# 
   536  0111                     	;# 
   537  0112                     	;# 
   538  0113                     	;# 
   539  0114                     	;# 
   540  0115                     	;# 
   541  0116                     	;# 
   542  0117                     	;# 
   543  0118                     	;# 
   544  0119                     	;# 
   545  011A                     	;# 
   546  011B                     	;# 
   547  011D                     	;# 
   548  011D                     	;# 
   549  018C                     	;# 
   550  018E                     	;# 
   551  0191                     	;# 
   552  0191                     	;# 
   553  0192                     	;# 
   554  0193                     	;# 
   555  0193                     	;# 
   556  0193                     	;# 
   557  0194                     	;# 
   558  0195                     	;# 
   559  0196                     	;# 
   560  0199                     	;# 
   561  019A                     	;# 
   562  019B                     	;# 
   563  019B                     	;# 
   564  019B                     	;# 
   565  019B                     	;# 
   566  019C                     	;# 
   567  019C                     	;# 
   568  019D                     	;# 
   569  019E                     	;# 
   570  019F                     	;# 
   571  020C                     	;# 
   572  020E                     	;# 
   573  0211                     	;# 
   574  0211                     	;# 
   575  0212                     	;# 
   576  0212                     	;# 
   577  0213                     	;# 
   578  0213                     	;# 
   579  0214                     	;# 
   580  0214                     	;# 
   581  0215                     	;# 
   582  0215                     	;# 
   583  0215                     	;# 
   584  0216                     	;# 
   585  0216                     	;# 
   586  0217                     	;# 
   587  0217                     	;# 
   588  0291                     	;# 
   589  0291                     	;# 
   590  0292                     	;# 
   591  0293                     	;# 
   592  0294                     	;# 
   593  0295                     	;# 
   594  0295                     	;# 
   595  0296                     	;# 
   596  0391                     	;# 
   597  0392                     	;# 
   598  0393                     	;# 
   599  039A                     	;# 
   600  039C                     	;# 
   601  039D                     	;# 
   602  039E                     	;# 
   603  039F                     	;# 
   604  0FE4                     	;# 
   605  0FE5                     	;# 
   606  0FE6                     	;# 
   607  0FE7                     	;# 
   608  0FE8                     	;# 
   609  0FE9                     	;# 
   610  0FEA                     	;# 
   611  0FEB                     	;# 
   612  0FED                     	;# 
   613  0FEE                     	;# 
   614  0FEF                     	;# 
   615  0000                     	;# 
   616  0001                     	;# 
   617  0002                     	;# 
   618  0003                     	;# 
   619  0004                     	;# 
   620  0005                     	;# 
   621  0006                     	;# 
   622  0007                     	;# 
   623  0008                     	;# 
   624  0009                     	;# 
   625  000A                     	;# 
   626  000B                     	;# 
   627  000C                     	;# 
   628  000E                     	;# 
   629  0011                     	;# 
   630  0012                     	;# 
   631  0015                     	;# 
   632  0016                     	;# 
   633  0016                     	;# 
   634  0017                     	;# 
   635  0018                     	;# 
   636  0019                     	;# 
   637  001A                     	;# 
   638  001B                     	;# 
   639  001C                     	;# 
   640  001E                     	;# 
   641  001F                     	;# 
   642  008C                     	;# 
   643  008E                     	;# 
   644  0091                     	;# 
   645  0092                     	;# 
   646  0095                     	;# 
   647  0096                     	;# 
   648  0097                     	;# 
   649  0098                     	;# 
   650  0099                     	;# 
   651  009A                     	;# 
   652  009B                     	;# 
   653  009B                     	;# 
   654  009C                     	;# 
   655  009D                     	;# 
   656  009E                     	;# 
   657  010C                     	;# 
   658  010E                     	;# 
   659  0111                     	;# 
   660  0112                     	;# 
   661  0113                     	;# 
   662  0114                     	;# 
   663  0115                     	;# 
   664  0116                     	;# 
   665  0117                     	;# 
   666  0118                     	;# 
   667  0119                     	;# 
   668  011A                     	;# 
   669  011B                     	;# 
   670  011D                     	;# 
   671  011D                     	;# 
   672  018C                     	;# 
   673  018E                     	;# 
   674  0191                     	;# 
   675  0191                     	;# 
   676  0192                     	;# 
   677  0193                     	;# 
   678  0193                     	;# 
   679  0193                     	;# 
   680  0194                     	;# 
   681  0195                     	;# 
   682  0196                     	;# 
   683  0199                     	;# 
   684  019A                     	;# 
   685  019B                     	;# 
   686  019B                     	;# 
   687  019B                     	;# 
   688  019B                     	;# 
   689  019C                     	;# 
   690  019C                     	;# 
   691  019D                     	;# 
   692  019E                     	;# 
   693  019F                     	;# 
   694  020C                     	;# 
   695  020E                     	;# 
   696  0211                     	;# 
   697  0211                     	;# 
   698  0212                     	;# 
   699  0212                     	;# 
   700  0213                     	;# 
   701  0213                     	;# 
   702  0214                     	;# 
   703  0214                     	;# 
   704  0215                     	;# 
   705  0215                     	;# 
   706  0215                     	;# 
   707  0216                     	;# 
   708  0216                     	;# 
   709  0217                     	;# 
   710  0217                     	;# 
   711  0291                     	;# 
   712  0291                     	;# 
   713  0292                     	;# 
   714  0293                     	;# 
   715  0294                     	;# 
   716  0295                     	;# 
   717  0295                     	;# 
   718  0296                     	;# 
   719  0391                     	;# 
   720  0392                     	;# 
   721  0393                     	;# 
   722  039A                     	;# 
   723  039C                     	;# 
   724  039D                     	;# 
   725  039E                     	;# 
   726  039F                     	;# 
   727  0FE4                     	;# 
   728  0FE5                     	;# 
   729  0FE6                     	;# 
   730  0FE7                     	;# 
   731  0FE8                     	;# 
   732  0FE9                     	;# 
   733  0FEA                     	;# 
   734  0FEB                     	;# 
   735  0FED                     	;# 
   736  0FEE                     	;# 
   737  0FEF                     	;# 
   738  0000                     	;# 
   739  0001                     	;# 
   740  0002                     	;# 
   741  0003                     	;# 
   742  0004                     	;# 
   743  0005                     	;# 
   744  0006                     	;# 
   745  0007                     	;# 
   746  0008                     	;# 
   747  0009                     	;# 
   748  000A                     	;# 
   749  000B                     	;# 
   750  000C                     	;# 
   751  000E                     	;# 
   752  0011                     	;# 
   753  0012                     	;# 
   754  0015                     	;# 
   755  0016                     	;# 
   756  0016                     	;# 
   757  0017                     	;# 
   758  0018                     	;# 
   759  0019                     	;# 
   760  001A                     	;# 
   761  001B                     	;# 
   762  001C                     	;# 
   763  001E                     	;# 
   764  001F                     	;# 
   765  008C                     	;# 
   766  008E                     	;# 
   767  0091                     	;# 
   768  0092                     	;# 
   769  0095                     	;# 
   770  0096                     	;# 
   771  0097                     	;# 
   772  0098                     	;# 
   773  0099                     	;# 
   774  009A                     	;# 
   775  009B                     	;# 
   776  009B                     	;# 
   777  009C                     	;# 
   778  009D                     	;# 
   779  009E                     	;# 
   780  010C                     	;# 
   781  010E                     	;# 
   782  0111                     	;# 
   783  0112                     	;# 
   784  0113                     	;# 
   785  0114                     	;# 
   786  0115                     	;# 
   787  0116                     	;# 
   788  0117                     	;# 
   789  0118                     	;# 
   790  0119                     	;# 
   791  011A                     	;# 
   792  011B                     	;# 
   793  011D                     	;# 
   794  011D                     	;# 
   795  018C                     	;# 
   796  018E                     	;# 
   797  0191                     	;# 
   798  0191                     	;# 
   799  0192                     	;# 
   800  0193                     	;# 
   801  0193                     	;# 
   802  0193                     	;# 
   803  0194                     	;# 
   804  0195                     	;# 
   805  0196                     	;# 
   806  0199                     	;# 
   807  019A                     	;# 
   808  019B                     	;# 
   809  019B                     	;# 
   810  019B                     	;# 
   811  019B                     	;# 
   812  019C                     	;# 
   813  019C                     	;# 
   814  019D                     	;# 
   815  019E                     	;# 
   816  019F                     	;# 
   817  020C                     	;# 
   818  020E                     	;# 
   819  0211                     	;# 
   820  0211                     	;# 
   821  0212                     	;# 
   822  0212                     	;# 
   823  0213                     	;# 
   824  0213                     	;# 
   825  0214                     	;# 
   826  0214                     	;# 
   827  0215                     	;# 
   828  0215                     	;# 
   829  0215                     	;# 
   830  0216                     	;# 
   831  0216                     	;# 
   832  0217                     	;# 
   833  0217                     	;# 
   834  0291                     	;# 
   835  0291                     	;# 
   836  0292                     	;# 
   837  0293                     	;# 
   838  0294                     	;# 
   839  0295                     	;# 
   840  0295                     	;# 
   841  0296                     	;# 
   842  0391                     	;# 
   843  0392                     	;# 
   844  0393                     	;# 
   845  039A                     	;# 
   846  039C                     	;# 
   847  039D                     	;# 
   848  039E                     	;# 
   849  039F                     	;# 
   850  0FE4                     	;# 
   851  0FE5                     	;# 
   852  0FE6                     	;# 
   853  0FE7                     	;# 
   854  0FE8                     	;# 
   855  0FE9                     	;# 
   856  0FEA                     	;# 
   857  0FEB                     	;# 
   858  0FED                     	;# 
   859  0FEE                     	;# 
   860  0FEF                     	;# 
   861  0000                     	;# 
   862  0001                     	;# 
   863  0002                     	;# 
   864  0003                     	;# 
   865  0004                     	;# 
   866  0005                     	;# 
   867  0006                     	;# 
   868  0007                     	;# 
   869  0008                     	;# 
   870  0009                     	;# 
   871  000A                     	;# 
   872  000B                     	;# 
   873  000C                     	;# 
   874  000E                     	;# 
   875  0011                     	;# 
   876  0012                     	;# 
   877  0015                     	;# 
   878  0016                     	;# 
   879  0016                     	;# 
   880  0017                     	;# 
   881  0018                     	;# 
   882  0019                     	;# 
   883  001A                     	;# 
   884  001B                     	;# 
   885  001C                     	;# 
   886  001E                     	;# 
   887  001F                     	;# 
   888  008C                     	;# 
   889  008E                     	;# 
   890  0091                     	;# 
   891  0092                     	;# 
   892  0095                     	;# 
   893  0096                     	;# 
   894  0097                     	;# 
   895  0098                     	;# 
   896  0099                     	;# 
   897  009A                     	;# 
   898  009B                     	;# 
   899  009B                     	;# 
   900  009C                     	;# 
   901  009D                     	;# 
   902  009E                     	;# 
   903  010C                     	;# 
   904  010E                     	;# 
   905  0111                     	;# 
   906  0112                     	;# 
   907  0113                     	;# 
   908  0114                     	;# 
   909  0115                     	;# 
   910  0116                     	;# 
   911  0117                     	;# 
   912  0118                     	;# 
   913  0119                     	;# 
   914  011A                     	;# 
   915  011B                     	;# 
   916  011D                     	;# 
   917  011D                     	;# 
   918  018C                     	;# 
   919  018E                     	;# 
   920  0191                     	;# 
   921  0191                     	;# 
   922  0192                     	;# 
   923  0193                     	;# 
   924  0193                     	;# 
   925  0193                     	;# 
   926  0194                     	;# 
   927  0195                     	;# 
   928  0196                     	;# 
   929  0199                     	;# 
   930  019A                     	;# 
   931  019B                     	;# 
   932  019B                     	;# 
   933  019B                     	;# 
   934  019B                     	;# 
   935  019C                     	;# 
   936  019C                     	;# 
   937  019D                     	;# 
   938  019E                     	;# 
   939  019F                     	;# 
   940  020C                     	;# 
   941  020E                     	;# 
   942  0211                     	;# 
   943  0211                     	;# 
   944  0212                     	;# 
   945  0212                     	;# 
   946  0213                     	;# 
   947  0213                     	;# 
   948  0214                     	;# 
   949  0214                     	;# 
   950  0215                     	;# 
   951  0215                     	;# 
   952  0215                     	;# 
   953  0216                     	;# 
   954  0216                     	;# 
   955  0217                     	;# 
   956  0217                     	;# 
   957  0291                     	;# 
   958  0291                     	;# 
   959  0292                     	;# 
   960  0293                     	;# 
   961  0294                     	;# 
   962  0295                     	;# 
   963  0295                     	;# 
   964  0296                     	;# 
   965  0391                     	;# 
   966  0392                     	;# 
   967  0393                     	;# 
   968  039A                     	;# 
   969  039C                     	;# 
   970  039D                     	;# 
   971  039E                     	;# 
   972  039F                     	;# 
   973  0FE4                     	;# 
   974  0FE5                     	;# 
   975  0FE6                     	;# 
   976  0FE7                     	;# 
   977  0FE8                     	;# 
   978  0FE9                     	;# 
   979  0FEA                     	;# 
   980  0FEB                     	;# 
   981  0FED                     	;# 
   982  0FEE                     	;# 
   983  0FEF                     	;# 
   984  0000                     	;# 
   985  0001                     	;# 
   986  0002                     	;# 
   987  0003                     	;# 
   988  0004                     	;# 
   989  0005                     	;# 
   990  0006                     	;# 
   991  0007                     	;# 
   992  0008                     	;# 
   993  0009                     	;# 
   994  000A                     	;# 
   995  000B                     	;# 
   996  000C                     	;# 
   997  000E                     	;# 
   998  0011                     	;# 
   999  0012                     	;# 
  1000  0015                     	;# 
  1001  0016                     	;# 
  1002  0016                     	;# 
  1003  0017                     	;# 
  1004  0018                     	;# 
  1005  0019                     	;# 
  1006  001A                     	;# 
  1007  001B                     	;# 
  1008  001C                     	;# 
  1009  001E                     	;# 
  1010  001F                     	;# 
  1011  008C                     	;# 
  1012  008E                     	;# 
  1013  0091                     	;# 
  1014  0092                     	;# 
  1015  0095                     	;# 
  1016  0096                     	;# 
  1017  0097                     	;# 
  1018  0098                     	;# 
  1019  0099                     	;# 
  1020  009A                     	;# 
  1021  009B                     	;# 
  1022  009B                     	;# 
  1023  009C                     	;# 
  1024  009D                     	;# 
  1025  009E                     	;# 
  1026  010C                     	;# 
  1027  010E                     	;# 
  1028  0111                     	;# 
  1029  0112                     	;# 
  1030  0113                     	;# 
  1031  0114                     	;# 
  1032  0115                     	;# 
  1033  0116                     	;# 
  1034  0117                     	;# 
  1035  0118                     	;# 
  1036  0119                     	;# 
  1037  011A                     	;# 
  1038  011B                     	;# 
  1039  011D                     	;# 
  1040  011D                     	;# 
  1041  018C                     	;# 
  1042  018E                     	;# 
  1043  0191                     	;# 
  1044  0191                     	;# 
  1045  0192                     	;# 
  1046  0193                     	;# 
  1047  0193                     	;# 
  1048  0193                     	;# 
  1049  0194                     	;# 
  1050  0195                     	;# 
  1051  0196                     	;# 
  1052  0199                     	;# 
  1053  019A                     	;# 
  1054  019B                     	;# 
  1055  019B                     	;# 
  1056  019B                     	;# 
  1057  019B                     	;# 
  1058  019C                     	;# 
  1059  019C                     	;# 
  1060  019D                     	;# 
  1061  019E                     	;# 
  1062  019F                     	;# 
  1063  020C                     	;# 
  1064  020E                     	;# 
  1065  0211                     	;# 
  1066  0211                     	;# 
  1067  0212                     	;# 
  1068  0212                     	;# 
  1069  0213                     	;# 
  1070  0213                     	;# 
  1071  0214                     	;# 
  1072  0214                     	;# 
  1073  0215                     	;# 
  1074  0215                     	;# 
  1075  0215                     	;# 
  1076  0216                     	;# 
  1077  0216                     	;# 
  1078  0217                     	;# 
  1079  0217                     	;# 
  1080  0291                     	;# 
  1081  0291                     	;# 
  1082  0292                     	;# 
  1083  0293                     	;# 
  1084  0294                     	;# 
  1085  0295                     	;# 
  1086  0295                     	;# 
  1087  0296                     	;# 
  1088  0391                     	;# 
  1089  0392                     	;# 
  1090  0393                     	;# 
  1091  039A                     	;# 
  1092  039C                     	;# 
  1093  039D                     	;# 
  1094  039E                     	;# 
  1095  039F                     	;# 
  1096  0FE4                     	;# 
  1097  0FE5                     	;# 
  1098  0FE6                     	;# 
  1099  0FE7                     	;# 
  1100  0FE8                     	;# 
  1101  0FE9                     	;# 
  1102  0FEA                     	;# 
  1103  0FEB                     	;# 
  1104  0FED                     	;# 
  1105  0FEE                     	;# 
  1106  0FEF                     	;# 
  1107  0000                     	;# 
  1108  0001                     	;# 
  1109  0002                     	;# 
  1110  0003                     	;# 
  1111  0004                     	;# 
  1112  0005                     	;# 
  1113  0006                     	;# 
  1114  0007                     	;# 
  1115  0008                     	;# 
  1116  0009                     	;# 
  1117  000A                     	;# 
  1118  000B                     	;# 
  1119  000C                     	;# 
  1120  000E                     	;# 
  1121  0011                     	;# 
  1122  0012                     	;# 
  1123  0015                     	;# 
  1124  0016                     	;# 
  1125  0016                     	;# 
  1126  0017                     	;# 
  1127  0018                     	;# 
  1128  0019                     	;# 
  1129  001A                     	;# 
  1130  001B                     	;# 
  1131  001C                     	;# 
  1132  001E                     	;# 
  1133  001F                     	;# 
  1134  008C                     	;# 
  1135  008E                     	;# 
  1136  0091                     	;# 
  1137  0092                     	;# 
  1138  0095                     	;# 
  1139  0096                     	;# 
  1140  0097                     	;# 
  1141  0098                     	;# 
  1142  0099                     	;# 
  1143  009A                     	;# 
  1144  009B                     	;# 
  1145  009B                     	;# 
  1146  009C                     	;# 
  1147  009D                     	;# 
  1148  009E                     	;# 
  1149  010C                     	;# 
  1150  010E                     	;# 
  1151  0111                     	;# 
  1152  0112                     	;# 
  1153  0113                     	;# 
  1154  0114                     	;# 
  1155  0115                     	;# 
  1156  0116                     	;# 
  1157  0117                     	;# 
  1158  0118                     	;# 
  1159  0119                     	;# 
  1160  011A                     	;# 
  1161  011B                     	;# 
  1162  011D                     	;# 
  1163  011D                     	;# 
  1164  018C                     	;# 
  1165  018E                     	;# 
  1166  0191                     	;# 
  1167  0191                     	;# 
  1168  0192                     	;# 
  1169  0193                     	;# 
  1170  0193                     	;# 
  1171  0193                     	;# 
  1172  0194                     	;# 
  1173  0195                     	;# 
  1174  0196                     	;# 
  1175  0199                     	;# 
  1176  019A                     	;# 
  1177  019B                     	;# 
  1178  019B                     	;# 
  1179  019B                     	;# 
  1180  019B                     	;# 
  1181  019C                     	;# 
  1182  019C                     	;# 
  1183  019D                     	;# 
  1184  019E                     	;# 
  1185  019F                     	;# 
  1186  020C                     	;# 
  1187  020E                     	;# 
  1188  0211                     	;# 
  1189  0211                     	;# 
  1190  0212                     	;# 
  1191  0212                     	;# 
  1192  0213                     	;# 
  1193  0213                     	;# 
  1194  0214                     	;# 
  1195  0214                     	;# 
  1196  0215                     	;# 
  1197  0215                     	;# 
  1198  0215                     	;# 
  1199  0216                     	;# 
  1200  0216                     	;# 
  1201  0217                     	;# 
  1202  0217                     	;# 
  1203  0291                     	;# 
  1204  0291                     	;# 
  1205  0292                     	;# 
  1206  0293                     	;# 
  1207  0294                     	;# 
  1208  0295                     	;# 
  1209  0295                     	;# 
  1210  0296                     	;# 
  1211  0391                     	;# 
  1212  0392                     	;# 
  1213  0393                     	;# 
  1214  039A                     	;# 
  1215  039C                     	;# 
  1216  039D                     	;# 
  1217  039E                     	;# 
  1218  039F                     	;# 
  1219  0FE4                     	;# 
  1220  0FE5                     	;# 
  1221  0FE6                     	;# 
  1222  0FE7                     	;# 
  1223  0FE8                     	;# 
  1224  0FE9                     	;# 
  1225  0FEA                     	;# 
  1226  0FEB                     	;# 
  1227  0FED                     	;# 
  1228  0FEE                     	;# 
  1229  0FEF                     	;# 
  1230                           
  1231                           	psect	stringtext1
  1232  06BE                     __pstringtext1:
  1233  06BE                     _GOOD_WSP_VOLTAGE:
  1234  06BE  348E               	retlw	142
  1235  06BF  3400               	retlw	0
  1236  06C0                     __end_of_GOOD_WSP_VOLTAGE:
  1237                           
  1238                           	psect	stringtext2
  1239  06C0                     __pstringtext2:
  1240  06C0                     _BAD_WSP_VOLTAGE:
  1241  06C0  3480               	retlw	128
  1242  06C1  3400               	retlw	0
  1243  06C2                     __end_of_BAD_WSP_VOLTAGE:
  1244                           
  1245                           	psect	stringtext3
  1246  06C2                     __pstringtext3:
  1247  06C2                     _AUTOROTATION_DELAY:
  1248  06C2  3478               	retlw	120
  1249  06C3  3400               	retlw	0
  1250  06C4                     __end_of_AUTOROTATION_DELAY:
  1251                           
  1252                           	psect	stringtext4
  1253  06C4                     __pstringtext4:
  1254  06C4                     _UP_RESISTANSE:
  1255  06C4  3420               	retlw	32
  1256  06C5  344E               	retlw	78
  1257  06C6                     __end_of_UP_RESISTANSE:
  1258                           
  1259                           	psect	stringtext5
  1260  06CC                     __pstringtext5:
  1261  06CC                     _MELODY_REPEAT_DELAY:
  1262  06CC  3403               	retlw	3
  1263  06CD                     __end_of_MELODY_REPEAT_DELAY:
  1264                           
  1265                           	psect	stringtext6
  1266  06CD                     __pstringtext6:
  1267  06CD                     _MOVING_WAIT_DELAY:
  1268  06CD  3402               	retlw	2
  1269  06CE                     __end_of_MOVING_WAIT_DELAY:
  1270                           
  1271                           	psect	stringtext7
  1272  06CE                     __pstringtext7:
  1273  06CE                     _AUTOROTATION_DAYS:
  1274  06CE  340E               	retlw	14
  1275  06CF                     __end_of_AUTOROTATION_DAYS:
  1276                           
  1277                           	psect	stringtext8
  1278  06CF                     __pstringtext8:
  1279  06CF                     _FRIMWARE_VERSION_EEPROM_ADR:
  1280  06CF  3401               	retlw	1
  1281  06D0                     __end_of_FRIMWARE_VERSION_EEPROM_ADR:
  1282                           
  1283                           	psect	stringtext9
  1284  06C6                     __pstringtext9:
  1285  06C6                     _HIGH_WATER_RESISTANSE:
  1286  06C6  34A8               	retlw	168
  1287  06C7  3461               	retlw	97
  1288  06C8                     __end_of_HIGH_WATER_RESISTANSE:
  1289                           
  1290                           	psect	stringtext10
  1291  06C8                     __pstringtext10:
  1292  06C8                     _LOW_WATER_RESISTANSE:
  1293  06C8  3420               	retlw	32
  1294  06C9  344E               	retlw	78
  1295  06CA                     __end_of_LOW_WATER_RESISTANSE:
  1296                           
  1297                           	psect	stringtext11
  1298  06D0                     __pstringtext11:
  1299  06D0                     _RELE_GAP:
  1300  06D0  3402               	retlw	2
  1301  06D1                     __end_of_RELE_GAP:
  1302                           
  1303                           	psect	stringtext12
  1304  06D1                     __pstringtext12:
  1305  06D1                     _RELE_POWER_AUTOROTATION_DELAY:
  1306  06D1  3405               	retlw	5
  1307  06D2                     __end_of_RELE_POWER_AUTOROTATION_DELAY:
  1308                           
  1309                           	psect	stringtext13
  1310  06D2                     __pstringtext13:
  1311  06D2                     _RELE_POWER_WORK_DELAY:
  1312  06D2  340F               	retlw	15
  1313  06D3                     __end_of_RELE_POWER_WORK_DELAY:
  1314                           
  1315                           	psect	stringtext14
  1316  06D3                     __pstringtext14:
  1317  06D3                     _JUMP_MEAS_COUNT:
  1318  06D3  340A               	retlw	10
  1319  06D4                     __end_of_JUMP_MEAS_COUNT:
  1320                           
  1321                           	psect	stringtext15
  1322  06D4                     __pstringtext15:
  1323  06D4                     _FUN_MEAS_COUNT:
  1324  06D4  340A               	retlw	10
  1325  06D5                     __end_of_FUN_MEAS_COUNT:
  1326                           
  1327                           	psect	stringtext16
  1328  06D5                     __pstringtext16:
  1329  06D5                     _WSP_MEAS_COUNT:
  1330  06D5  3404               	retlw	4
  1331  06D6                     __end_of_WSP_MEAS_COUNT:
  1332                           
  1333                           	psect	stringtext17
  1334  06D6                     __pstringtext17:
  1335  06D6                     _LONG_ZUMMER_DELAY:
  1336  06D6  3482               	retlw	130
  1337  06D7                     __end_of_LONG_ZUMMER_DELAY:
  1338                           
  1339                           	psect	stringtext18
  1340  06D7                     __pstringtext18:
  1341  06D7                     _SHORT_ZUMMER_DELAY:
  1342  06D7  341E               	retlw	30
  1343  06D8                     __end_of_SHORT_ZUMMER_DELAY:
  1344                           
  1345                           	psect	nvBANK0
  1346  0053                     __pnvBANK0:
  1347  0053                     _TMR0_InterruptHandler:
  1348  0053                     	ds	2
  1349  0055                     _TMR2_InterruptHandler:
  1350  0055                     	ds	2
  1351  0057                     _timer0ReloadVal:
  1352  0057                     	ds	1
  1353  000C                     _PORTAbits	set	12
  1354  000E                     _PORTCbits	set	14
  1355  0015                     _TMR0	set	21
  1356  001C                     _T2CONbits	set	28
  1357  001C                     _T2CON	set	28
  1358  001A                     _TMR2	set	26
  1359  001B                     _PR2	set	27
  1360  0011                     _PIR1bits	set	17
  1361  000B                     _INTCONbits	set	11
  1362  005F                     _GIE	set	95
  1363  008C                     _TRISAbits	set	140
  1364  008E                     _TRISCbits	set	142
  1365  0095                     _OPTION_REG	set	149
  1366  0091                     _PIE1bits	set	145
  1367  0095                     _OPTION_REGbits	set	149
  1368  008E                     _TRISC	set	142
  1369  008C                     _TRISA	set	140
  1370  009D                     _ADCON0bits	set	157
  1371  009D                     _ADCON0	set	157
  1372  009C                     _ADRESH	set	156
  1373  009B                     _ADRESL	set	155
  1374  009E                     _ADCON1	set	158
  1375  0097                     _WDTCON	set	151
  1376  0098                     _OSCTUNE	set	152
  1377  0099                     _OSCCON	set	153
  1378  010C                     _LATAbits	set	268
  1379  010E                     _LATCbits	set	270
  1380  011D                     _APFCON	set	285
  1381  010E                     _LATC	set	270
  1382  010C                     _LATA	set	268
  1383  0116                     _BORCON	set	278
  1384  0191                     _EEADR	set	401
  1385  0196                     _EECON2	set	406
  1386  0193                     _EEDATA	set	403
  1387  018C                     _ANSELAbits	set	396
  1388  018E                     _ANSELCbits	set	398
  1389  018C                     _ANSELA	set	396
  1390  018E                     _ANSELC	set	398
  1391  0CA8                     _RD	set	3240
  1392  0CAA                     _WREN	set	3242
  1393  0CA9                     _WR	set	3241
  1394  020E                     _WPUC	set	526
  1395  020C                     _WPUA	set	524
  1396                           
  1397                           	psect	cinit
  1398  002E                     start_initialization:	
  1399                           ; #config settings
  1400                           
  1401  002E                     __initialization:
  1402                           
  1403                           ; Clear objects allocated to BITCOMMON
  1404  002E  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  1405  002F  01F1               	clrf	((__pbitbssCOMMON/(0+8)+1))& (0+127)
  1406  0030  01F2               	clrf	((__pbitbssCOMMON/(0+8)+2))& (0+127)
  1407                           
  1408                           ; Clear objects allocated to COMMON
  1409  0031  01F9               	clrf	__pbssCOMMON& (0+127)
  1410  0032  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  1411  0033  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  1412  0034  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  1413  0035  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
  1414                           
  1415                           ; Clear objects allocated to BITBANK0
  1416  0036  3020               	movlw	low (__pbitbssBANK0/(0+8))
  1417  0037  0084               	movwf	4
  1418  0038  3000               	movlw	high (__pbitbssBANK0/(0+8))
  1419  0039  0085               	movwf	5
  1420  003A  3014               	movlw	20
  1421  003B  3186  269B  3180   	fcall	clear_ram0
  1422                           
  1423                           ; Clear objects allocated to BANK0
  1424  003E  3034               	movlw	low __pbssBANK0
  1425  003F  0084               	movwf	4
  1426  0040  3000               	movlw	high __pbssBANK0
  1427  0041  0085               	movwf	5
  1428  0042  301F               	movlw	31
  1429  0043  3186  269B  3180   	fcall	clear_ram0
  1430  0046                     end_of_initialization:	
  1431                           ;End of C runtime variable initialization code
  1432                           
  1433  0046                     __end_of__initialization:
  1434  0046  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1435  0047  0020               	movlb	0
  1436  0048  2C3E               	ljmp	_main	;jump to C main() function
  1437                           
  1438                           	psect	bitbssCOMMON
  1439  0380                     __pbitbssCOMMON:
  1440  0380                     __ccovbit1_23:
  1441  0380                     	ds	1
  1442  0381                     __ccovbit5_22:
  1443  0381                     	ds	1
  1444  0382                     __ccovbit3_21:
  1445  0382                     	ds	1
  1446  0383                     __ccovbit6_20:
  1447  0383                     	ds	1
  1448  0384                     __ccovbit0_19:
  1449  0384                     	ds	1
  1450  0385                     __ccovbit1_18:
  1451  0385                     	ds	1
  1452  0386                     __ccovbit4_17:
  1453  0386                     	ds	1
  1454  0387                     __ccovbit2_16:
  1455  0387                     	ds	1
  1456  0388                     __ccovbit1_15:
  1457  0388                     	ds	1
  1458  0389                     __ccovbit6_14:
  1459  0389                     	ds	1
  1460  038A                     __ccovbit12_13:
  1461  038A                     	ds	1
  1462  038B                     __ccovbit10_12:
  1463  038B                     	ds	1
  1464  038C                     __ccovbit6_11:
  1465  038C                     	ds	1
  1466  038D                     __ccovbit5_10:
  1467  038D                     	ds	1
  1468  038E                     __ccovbit3_9:
  1469  038E                     	ds	1
  1470  038F                     __ccovbit2_8:
  1471  038F                     	ds	1
  1472  0390                     __ccovbit1_7:
  1473  0390                     	ds	1
  1474  0391                     __ccovbit6_6:
  1475  0391                     	ds	1
  1476  0392                     __ccovbit9_5:
  1477  0392                     	ds	1
  1478  0393                     __ccovbit3_4:
  1479  0393                     	ds	1
  1480  0394                     __ccovbit1_3:
  1481  0394                     	ds	1
  1482  0395                     __ccovbit3_2:
  1483  0395                     	ds	1
  1484  0396                     __ccovbit1_1:
  1485  0396                     	ds	1
  1486  0397                     EEPROM_WriteByte@status:
  1487  0397                     	ds	1
  1488                           
  1489                           	psect	bssCOMMON
  1490  0079                     __pbssCOMMON:
  1491  0079                     _ff:
  1492  0079                     	ds	4
  1493  007D                     _beep_short_count:
  1494  007D                     	ds	1
  1495                           
  1496                           	psect	bitbssBANK0
  1497  0100                     __pbitbssBANK0:
  1498  0100                     __ccovbit8_182:
  1499  0100                     	ds	1
  1500  0101                     __ccovbit3_181:
  1501  0101                     	ds	1
  1502  0102                     __ccovbit9_180:
  1503  0102                     	ds	1
  1504  0103                     __ccovbit6_179:
  1505  0103                     	ds	1
  1506  0104                     __ccovbit4_178:
  1507  0104                     	ds	1
  1508  0105                     __ccovbit31_177:
  1509  0105                     	ds	1
  1510  0106                     __ccovbit22_176:
  1511  0106                     	ds	1
  1512  0107                     __ccovbit20_175:
  1513  0107                     	ds	1
  1514  0108                     __ccovbit17_174:
  1515  0108                     	ds	1
  1516  0109                     __ccovbit14_173:
  1517  0109                     	ds	1
  1518  010A                     __ccovbit12_172:
  1519  010A                     	ds	1
  1520  010B                     __ccovbit7_171:
  1521  010B                     	ds	1
  1522  010C                     __ccovbit5_170:
  1523  010C                     	ds	1
  1524  010D                     __ccovbit31_169:
  1525  010D                     	ds	1
  1526  010E                     __ccovbit29_168:
  1527  010E                     	ds	1
  1528  010F                     __ccovbit26_167:
  1529  010F                     	ds	1
  1530  0110                     __ccovbit23_166:
  1531  0110                     	ds	1
  1532  0111                     __ccovbit21_165:
  1533  0111                     	ds	1
  1534  0112                     __ccovbit13_164:
  1535  0112                     	ds	1
  1536  0113                     __ccovbit11_163:
  1537  0113                     	ds	1
  1538  0114                     __ccovbit30_162:
  1539  0114                     	ds	1
  1540  0115                     __ccovbit28_161:
  1541  0115                     	ds	1
  1542  0116                     __ccovbit26_160:
  1543  0116                     	ds	1
  1544  0117                     __ccovbit22_159:
  1545  0117                     	ds	1
  1546  0118                     __ccovbit17_158:
  1547  0118                     	ds	1
  1548  0119                     __ccovbit16_157:
  1549  0119                     	ds	1
  1550  011A                     __ccovbit14_156:
  1551  011A                     	ds	1
  1552  011B                     __ccovbit3_155:
  1553  011B                     	ds	1
  1554  011C                     __ccovbit7_154:
  1555  011C                     	ds	1
  1556  011D                     __ccovbit4_153:
  1557  011D                     	ds	1
  1558  011E                     __ccovbit1_152:
  1559  011E                     	ds	1
  1560  011F                     __ccovbit4_151:
  1561  011F                     	ds	1
  1562  0120                     __ccovbit2_150:
  1563  0120                     	ds	1
  1564  0121                     __ccovbit20_149:
  1565  0121                     	ds	1
  1566  0122                     __ccovbit18_148:
  1567  0122                     	ds	1
  1568  0123                     __ccovbit12_147:
  1569  0123                     	ds	1
  1570  0124                     __ccovbit4_146:
  1571  0124                     	ds	1
  1572  0125                     __ccovbit3_145:
  1573  0125                     	ds	1
  1574  0126                     __ccovbit4_144:
  1575  0126                     	ds	1
  1576  0127                     __ccovbit2_143:
  1577  0127                     	ds	1
  1578  0128                     __ccovbit1_142:
  1579  0128                     	ds	1
  1580  0129                     __ccovbit22_141:
  1581  0129                     	ds	1
  1582  012A                     __ccovbit17_140:
  1583  012A                     	ds	1
  1584  012B                     __ccovbit16_139:
  1585  012B                     	ds	1
  1586  012C                     __ccovbit14_138:
  1587  012C                     	ds	1
  1588  012D                     __ccovbit10_137:
  1589  012D                     	ds	1
  1590  012E                     __ccovbit8_136:
  1591  012E                     	ds	1
  1592  012F                     __ccovbit5_135:
  1593  012F                     	ds	1
  1594  0130                     __ccovbit4_134:
  1595  0130                     	ds	1
  1596  0131                     __ccovbit2_133:
  1597  0131                     	ds	1
  1598  0132                     __ccovbit1_132:
  1599  0132                     	ds	1
  1600  0133                     __ccovbit31_131:
  1601  0133                     	ds	1
  1602  0134                     __ccovbit29_130:
  1603  0134                     	ds	1
  1604  0135                     __ccovbit23_129:
  1605  0135                     	ds	1
  1606  0136                     __ccovbit21_128:
  1607  0136                     	ds	1
  1608  0137                     __ccovbit19_127:
  1609  0137                     	ds	1
  1610  0138                     __ccovbit18_126:
  1611  0138                     	ds	1
  1612  0139                     __ccovbit16_125:
  1613  0139                     	ds	1
  1614  013A                     __ccovbit14_124:
  1615  013A                     	ds	1
  1616  013B                     __ccovbit10_123:
  1617  013B                     	ds	1
  1618  013C                     __ccovbit8_122:
  1619  013C                     	ds	1
  1620  013D                     __ccovbit4_121:
  1621  013D                     	ds	1
  1622  013E                     __ccovbit3_120:
  1623  013E                     	ds	1
  1624  013F                     __ccovbit5_119:
  1625  013F                     	ds	1
  1626  0140                     __ccovbit3_118:
  1627  0140                     	ds	1
  1628  0141                     __ccovbit1_117:
  1629  0141                     	ds	1
  1630  0142                     __ccovbit8_116:
  1631  0142                     	ds	1
  1632  0143                     __ccovbit5_115:
  1633  0143                     	ds	1
  1634  0144                     __ccovbit3_114:
  1635  0144                     	ds	1
  1636  0145                     __ccovbit1_113:
  1637  0145                     	ds	1
  1638  0146                     __ccovbit19_112:
  1639  0146                     	ds	1
  1640  0147                     __ccovbit17_111:
  1641  0147                     	ds	1
  1642  0148                     __ccovbit15_110:
  1643  0148                     	ds	1
  1644  0149                     __ccovbit14_109:
  1645  0149                     	ds	1
  1646  014A                     __ccovbit13_108:
  1647  014A                     	ds	1
  1648  014B                     __ccovbit12_107:
  1649  014B                     	ds	1
  1650  014C                     __ccovbit11_106:
  1651  014C                     	ds	1
  1652  014D                     __ccovbit8_105:
  1653  014D                     	ds	1
  1654  014E                     __ccovbit5_104:
  1655  014E                     	ds	1
  1656  014F                     __ccovbit4_103:
  1657  014F                     	ds	1
  1658  0150                     __ccovbit3_102:
  1659  0150                     	ds	1
  1660  0151                     __ccovbit2_101:
  1661  0151                     	ds	1
  1662  0152                     __ccovbit1_100:
  1663  0152                     	ds	1
  1664  0153                     __ccovbit14_99:
  1665  0153                     	ds	1
  1666  0154                     __ccovbit10_98:
  1667  0154                     	ds	1
  1668  0155                     __ccovbit7_97:
  1669  0155                     	ds	1
  1670  0156                     __ccovbit6_96:
  1671  0156                     	ds	1
  1672  0157                     __ccovbit4_95:
  1673  0157                     	ds	1
  1674  0158                     __ccovbit1_94:
  1675  0158                     	ds	1
  1676  0159                     __ccovbit17_93:
  1677  0159                     	ds	1
  1678  015A                     __ccovbit15_92:
  1679  015A                     	ds	1
  1680  015B                     __ccovbit13_91:
  1681  015B                     	ds	1
  1682  015C                     __ccovbit12_90:
  1683  015C                     	ds	1
  1684  015D                     __ccovbit11_89:
  1685  015D                     	ds	1
  1686  015E                     __ccovbit10_88:
  1687  015E                     	ds	1
  1688  015F                     __ccovbit7_87:
  1689  015F                     	ds	1
  1690  0160                     __ccovbit5_86:
  1691  0160                     	ds	1
  1692  0161                     __ccovbit4_85:
  1693  0161                     	ds	1
  1694  0162                     __ccovbit3_84:
  1695  0162                     	ds	1
  1696  0163                     __ccovbit2_83:
  1697  0163                     	ds	1
  1698  0164                     __ccovbit1_82:
  1699  0164                     	ds	1
  1700  0165                     __ccovbit1_81:
  1701  0165                     	ds	1
  1702  0166                     __ccovbit2_80:
  1703  0166                     	ds	1
  1704  0167                     __ccovbit27_79:
  1705  0167                     	ds	1
  1706  0168                     __ccovbit23_78:
  1707  0168                     	ds	1
  1708  0169                     __ccovbit22_77:
  1709  0169                     	ds	1
  1710  016A                     __ccovbit20_76:
  1711  016A                     	ds	1
  1712  016B                     __ccovbit18_75:
  1713  016B                     	ds	1
  1714  016C                     __ccovbit15_74:
  1715  016C                     	ds	1
  1716  016D                     __ccovbit14_73:
  1717  016D                     	ds	1
  1718  016E                     __ccovbit10_72:
  1719  016E                     	ds	1
  1720  016F                     __ccovbit7_71:
  1721  016F                     	ds	1
  1722  0170                     __ccovbit6_70:
  1723  0170                     	ds	1
  1724  0171                     __ccovbit4_69:
  1725  0171                     	ds	1
  1726  0172                     __ccovbit1_68:
  1727  0172                     	ds	1
  1728  0173                     __ccovbit9_67:
  1729  0173                     	ds	1
  1730  0174                     __ccovbit5_66:
  1731  0174                     	ds	1
  1732  0175                     __ccovbit4_65:
  1733  0175                     	ds	1
  1734  0176                     __ccovbit3_64:
  1735  0176                     	ds	1
  1736  0177                     __ccovbit1_63:
  1737  0177                     	ds	1
  1738  0178                     __ccovbit9_62:
  1739  0178                     	ds	1
  1740  0179                     __ccovbit5_61:
  1741  0179                     	ds	1
  1742  017A                     __ccovbit4_60:
  1743  017A                     	ds	1
  1744  017B                     __ccovbit3_59:
  1745  017B                     	ds	1
  1746  017C                     __ccovbit1_58:
  1747  017C                     	ds	1
  1748  017D                     __ccovbit5_57:
  1749  017D                     	ds	1
  1750  017E                     __ccovbit2_56:
  1751  017E                     	ds	1
  1752  017F                     __ccovbit1_55:
  1753  017F                     	ds	1
  1754  0180                     __ccovbit4_54:
  1755  0180                     	ds	1
  1756  0181                     __ccovbit2_53:
  1757  0181                     	ds	1
  1758  0182                     __ccovbit1_52:
  1759  0182                     	ds	1
  1760  0183                     __ccovbit5_51:
  1761  0183                     	ds	1
  1762  0184                     __ccovbit3_50:
  1763  0184                     	ds	1
  1764  0185                     __ccovbit2_49:
  1765  0185                     	ds	1
  1766  0186                     __ccovbit1_48:
  1767  0186                     	ds	1
  1768  0187                     __ccovbit8_47:
  1769  0187                     	ds	1
  1770  0188                     __ccovbit5_46:
  1771  0188                     	ds	1
  1772  0189                     __ccovbit2_45:
  1773  0189                     	ds	1
  1774  018A                     __ccovbit1_44:
  1775  018A                     	ds	1
  1776  018B                     __ccovbit6_43:
  1777  018B                     	ds	1
  1778  018C                     __ccovbit4_42:
  1779  018C                     	ds	1
  1780  018D                     __ccovbit2_41:
  1781  018D                     	ds	1
  1782  018E                     __ccovbit1_40:
  1783  018E                     	ds	1
  1784  018F                     __ccovbit6_39:
  1785  018F                     	ds	1
  1786  0190                     __ccovbit4_38:
  1787  0190                     	ds	1
  1788  0191                     __ccovbit2_37:
  1789  0191                     	ds	1
  1790  0192                     __ccovbit1_36:
  1791  0192                     	ds	1
  1792  0193                     __ccovbit5_35:
  1793  0193                     	ds	1
  1794  0194                     __ccovbit3_34:
  1795  0194                     	ds	1
  1796  0195                     __ccovbit1_33:
  1797  0195                     	ds	1
  1798  0196                     __ccovbit8_32:
  1799  0196                     	ds	1
  1800  0197                     __ccovbit6_31:
  1801  0197                     	ds	1
  1802  0198                     __ccovbit2_30:
  1803  0198                     	ds	1
  1804  0199                     __ccovbit8_29:
  1805  0199                     	ds	1
  1806  019A                     __ccovbit6_28:
  1807  019A                     	ds	1
  1808  019B                     __ccovbit2_27:
  1809  019B                     	ds	1
  1810  019C                     __ccovbit1_26:
  1811  019C                     	ds	1
  1812  019D                     __ccovbit1_25:
  1813  019D                     	ds	1
  1814  019E                     __ccovbit0_24:
  1815  019E                     	ds	1
  1816                           
  1817                           	psect	bssBANK0
  1818  0034                     __pbssBANK0:
  1819  0034                     _time_rotation:
  1820  0034                     	ds	3
  1821  0037                     ms_tick@s_count:
  1822  0037                     	ds	2
  1823  0039                     ms_tick@ms_count:
  1824  0039                     	ds	2
  1825  003B                     _time_zummer_long:
  1826  003B                     	ds	2
  1827  003D                     _time_zummer_short:
  1828  003D                     	ds	2
  1829  003F                     _time_tone:
  1830  003F                     	ds	2
  1831  0041                     _time_rele_gap:
  1832  0041                     	ds	2
  1833  0043                     _time_rele_control:
  1834  0043                     	ds	2
  1835  0045                     _time_rele_power:
  1836  0045                     	ds	2
  1837  0047                     _ADC_InterruptHandler:
  1838  0047                     	ds	2
  1839  0049                     get_jump@jump_counter:
  1840  0049                     	ds	1
  1841  004A                     get_fun@fun_counter:
  1842  004A                     	ds	1
  1843  004B                     get_wsp@bad_measures_counter:
  1844  004B                     	ds	1
  1845  004C                     sec_work@iled:
  1846  004C                     	ds	1
  1847  004D                     _beep_double_count:
  1848  004D                     	ds	1
  1849  004E                     _beep_long_count:
  1850  004E                     	ds	1
  1851  004F                     _time_meas:
  1852  004F                     	ds	1
  1853  0050                     _time_moving_wait:
  1854  0050                     	ds	1
  1855  0051                     _time_melody:
  1856  0051                     	ds	1
  1857  0052                     _sec_count:
  1858  0052                     	ds	1
  1859                           
  1860                           	psect	clrtext
  1861  069B                     clear_ram0:	
  1862                           ;	Called with FSR0 containing the base address, and
  1863                           ;	WREG with the size to clear
  1864                           
  1865  069B  0064               	clrwdt	;clear the watchdog before getting into this loop
  1866  069C                     clrloop0:
  1867  069C  0180               	clrf	0	;clear RAM location pointed to by FSR
  1868  069D  3101               	addfsr 0,1
  1869  069E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1870  069F  2E9C               	goto	clrloop0	;have we reached the end yet?
  1871  06A0  3400               	retlw	0	;all done for this memory range, return
  1872                           
  1873                           	psect	cstackCOMMON
  1874  0073                     __pcstackCOMMON:
  1875  0073                     ?_PIN_MANAGER_Initialize:
  1876  0073                     ?_OSCILLATOR_Initialize:	
  1877                           ; 1 bytes @ 0x0
  1878                           
  1879  0073                     ?_WDT_Initialize:	
  1880                           ; 1 bytes @ 0x0
  1881                           
  1882  0073                     ?_TMR2_Initialize:	
  1883                           ; 1 bytes @ 0x0
  1884                           
  1885  0073                     ?_ADC_Initialize:	
  1886                           ; 1 bytes @ 0x0
  1887                           
  1888  0073                     ?_TMR0_Initialize:	
  1889                           ; 1 bytes @ 0x0
  1890                           
  1891  0073                     ?_TMR0_ISR:	
  1892                           ; 1 bytes @ 0x0
  1893                           
  1894  0073                     ??_TMR0_ISR:	
  1895                           ; 1 bytes @ 0x0
  1896                           
  1897  0073                     ?_TMR2_ISR:	
  1898                           ; 1 bytes @ 0x0
  1899                           
  1900  0073                     ?_TMR2_DefaultInterruptHandler:	
  1901                           ; 1 bytes @ 0x0
  1902                           
  1903  0073                     ??_TMR2_DefaultInterruptHandler:	
  1904                           ; 1 bytes @ 0x0
  1905                           
  1906  0073                     ?_TMR0_DefaultInterruptHandler:	
  1907                           ; 1 bytes @ 0x0
  1908                           
  1909  0073                     ??_TMR0_DefaultInterruptHandler:	
  1910                           ; 1 bytes @ 0x0
  1911                           
  1912  0073                     ?_EEPROM_ReadByte:	
  1913                           ; 1 bytes @ 0x0
  1914                           
  1915  0073                     ?_SYSTEM_Initialize:	
  1916                           ; 1 bytes @ 0x0
  1917                           
  1918  0073                     ?_ADC_GetConversion:	
  1919                           ; 1 bytes @ 0x0
  1920                           
  1921  0073                     ?_INTERRUPT_InterruptManager:	
  1922                           ; 1 bytes @ 0x0
  1923                           
  1924  0073                     ?_TMR2_StartTimer:	
  1925                           ; 1 bytes @ 0x0
  1926                           
  1927  0073                     ?_start_tone:	
  1928                           ; 1 bytes @ 0x0
  1929                           
  1930  0073                     ??_start_tone:	
  1931                           ; 1 bytes @ 0x0
  1932                           
  1933  0073                     ?_stop_tone:	
  1934                           ; 1 bytes @ 0x0
  1935                           
  1936  0073                     ??_stop_tone:	
  1937                           ; 1 bytes @ 0x0
  1938                           
  1939  0073                     ?_beep_short:	
  1940                           ; 1 bytes @ 0x0
  1941                           
  1942  0073                     ??_beep_short:	
  1943                           ; 1 bytes @ 0x0
  1944                           
  1945  0073                     ?_beep_long:	
  1946                           ; 1 bytes @ 0x0
  1947                           
  1948  0073                     ??_beep_long:	
  1949                           ; 1 bytes @ 0x0
  1950                           
  1951  0073                     ?_beep_double:	
  1952                           ; 1 bytes @ 0x0
  1953                           
  1954  0073                     ??_beep_double:	
  1955                           ; 1 bytes @ 0x0
  1956                           
  1957  0073                     ?_go_close:	
  1958                           ; 1 bytes @ 0x0
  1959                           
  1960  0073                     ?_go_close_short:	
  1961                           ; 1 bytes @ 0x0
  1962                           
  1963  0073                     ?_go_open:	
  1964                           ; 1 bytes @ 0x0
  1965                           
  1966  0073                     ?_go_close_alt:	
  1967                           ; 1 bytes @ 0x0
  1968                           
  1969  0073                     ?_go_open_alt:	
  1970                           ; 1 bytes @ 0x0
  1971                           
  1972  0073                     ?_rele_off:	
  1973                           ; 1 bytes @ 0x0
  1974                           
  1975  0073                     ?_close:	
  1976                           ; 1 bytes @ 0x0
  1977                           
  1978  0073                     ?_open:	
  1979                           ; 1 bytes @ 0x0
  1980                           
  1981  0073                     ?_rele_tick:	
  1982                           ; 1 bytes @ 0x0
  1983                           
  1984  0073                     ??_rele_tick:	
  1985                           ; 1 bytes @ 0x0
  1986                           
  1987  0073                     ?_start_alarm:	
  1988                           ; 1 bytes @ 0x0
  1989                           
  1990  0073                     ?_clear_alarm:	
  1991                           ; 1 bytes @ 0x0
  1992                           
  1993  0073                     ?_fun_work:	
  1994                           ; 1 bytes @ 0x0
  1995                           
  1996  0073                     ?_switch_wm:	
  1997                           ; 1 bytes @ 0x0
  1998                           
  1999  0073                     ?_autorotation_work:	
  2000                           ; 1 bytes @ 0x0
  2001                           
  2002  0073                     ?_minute_tick:	
  2003                           ; 1 bytes @ 0x0
  2004                           
  2005  0073                     ??_minute_tick:	
  2006                           ; 1 bytes @ 0x0
  2007                           
  2008  0073                     ?_sec_30_work:	
  2009                           ; 1 bytes @ 0x0
  2010                           
  2011  0073                     ??_sec_30_work:	
  2012                           ; 1 bytes @ 0x0
  2013                           
  2014  0073                     ?_sec_work:	
  2015                           ; 1 bytes @ 0x0
  2016                           
  2017  0073                     ?_ms_200_work:	
  2018                           ; 1 bytes @ 0x0
  2019                           
  2020  0073                     ??_ms_200_work:	
  2021                           ; 1 bytes @ 0x0
  2022                           
  2023  0073                     ?_ms_100_work:	
  2024                           ; 1 bytes @ 0x0
  2025                           
  2026  0073                     ??_ms_100_work:	
  2027                           ; 1 bytes @ 0x0
  2028                           
  2029  0073                     ?_ms_tick:	
  2030                           ; 1 bytes @ 0x0
  2031                           
  2032  0073                     ?_eeprom_set:	
  2033                           ; 1 bytes @ 0x0
  2034                           
  2035  0073                     ?_hardware_work:	
  2036                           ; 1 bytes @ 0x0
  2037                           
  2038  0073                     ?_zummer_switch:	
  2039                           ; 1 bytes @ 0x0
  2040                           
  2041  0073                     ??_zummer_switch:	
  2042                           ; 1 bytes @ 0x0
  2043                           
  2044  0073                     ?_get_wsp:	
  2045                           ; 1 bytes @ 0x0
  2046                           
  2047  0073                     ?_get_fun:	
  2048                           ; 1 bytes @ 0x0
  2049                           
  2050  0073                     ?_get_jump:	
  2051                           ; 1 bytes @ 0x0
  2052                           
  2053  0073                     ?_start_setup:	
  2054                           ; 1 bytes @ 0x0
  2055                           
  2056  0073                     ?_main:	
  2057                           ; 1 bytes @ 0x0
  2058                           
  2059                           
  2060                           ; 1 bytes @ 0x0
  2061  0073                     	ds	1
  2062  0074                     ??_sec_work:
  2063                           
  2064                           ; 1 bytes @ 0x1
  2065  0074                     	ds	1
  2066  0075                     ??_PIN_MANAGER_Initialize:
  2067  0075                     ??_OSCILLATOR_Initialize:	
  2068                           ; 1 bytes @ 0x2
  2069                           
  2070  0075                     ??_WDT_Initialize:	
  2071                           ; 1 bytes @ 0x2
  2072                           
  2073  0075                     ??_ADC_Initialize:	
  2074                           ; 1 bytes @ 0x2
  2075                           
  2076  0075                     ??_TMR2_ISR:	
  2077                           ; 1 bytes @ 0x2
  2078                           
  2079  0075                     ?_TMR2_SetInterruptHandler:	
  2080                           ; 1 bytes @ 0x2
  2081                           
  2082  0075                     ?_TMR0_SetInterruptHandler:	
  2083                           ; 1 bytes @ 0x2
  2084                           
  2085  0075                     ??_EEPROM_ReadByte:	
  2086                           ; 1 bytes @ 0x2
  2087                           
  2088  0075                     ?_EEPROM_WriteByte:	
  2089                           ; 1 bytes @ 0x2
  2090                           
  2091  0075                     ??_ADC_GetConversion:	
  2092                           ; 1 bytes @ 0x2
  2093                           
  2094  0075                     ??_INTERRUPT_InterruptManager:	
  2095                           ; 1 bytes @ 0x2
  2096                           
  2097  0075                     ??_TMR2_StartTimer:	
  2098                           ; 1 bytes @ 0x2
  2099                           
  2100  0075                     ??_go_close:	
  2101                           ; 1 bytes @ 0x2
  2102                           
  2103  0075                     ??_go_close_short:	
  2104                           ; 1 bytes @ 0x2
  2105                           
  2106  0075                     ??_go_open:	
  2107                           ; 1 bytes @ 0x2
  2108                           
  2109  0075                     ??_go_close_alt:	
  2110                           ; 1 bytes @ 0x2
  2111                           
  2112  0075                     ??_go_open_alt:	
  2113                           ; 1 bytes @ 0x2
  2114                           
  2115  0075                     ??_rele_off:	
  2116                           ; 1 bytes @ 0x2
  2117                           
  2118  0075                     ??_start_alarm:	
  2119                           ; 1 bytes @ 0x2
  2120                           
  2121  0075                     ??_clear_alarm:	
  2122                           ; 1 bytes @ 0x2
  2123                           
  2124  0075                     ??_autorotation_work:	
  2125                           ; 1 bytes @ 0x2
  2126                           
  2127  0075                     ??_ms_tick:	
  2128                           ; 1 bytes @ 0x2
  2129                           
  2130  0075                     ??_hardware_work:	
  2131                           ; 1 bytes @ 0x2
  2132                           
  2133  0075                     ??_get_fun:	
  2134                           ; 1 bytes @ 0x2
  2135                           
  2136  0075                     ??_get_jump:	
  2137                           ; 1 bytes @ 0x2
  2138                           
  2139  0075                     EEPROM_WriteByte@dt:	
  2140                           ; 1 bytes @ 0x2
  2141                           
  2142  0075                     TMR2_SetInterruptHandler@InterruptHandler:	
  2143                           ; 1 bytes @ 0x2
  2144                           
  2145  0075                     TMR0_SetInterruptHandler@InterruptHandler:	
  2146                           ; 2 bytes @ 0x2
  2147                           
  2148                           
  2149                           ; 2 bytes @ 0x2
  2150  0075                     	ds	1
  2151  0076                     ??_EEPROM_WriteByte:
  2152  0076                     ??_close:	
  2153                           ; 1 bytes @ 0x3
  2154                           
  2155  0076                     ??_open:	
  2156                           ; 1 bytes @ 0x3
  2157                           
  2158  0076                     ??_fun_work:	
  2159                           ; 1 bytes @ 0x3
  2160                           
  2161  0076                     ??_switch_wm:	
  2162                           ; 1 bytes @ 0x3
  2163                           
  2164  0076                     ADC_GetConversion@channel:	
  2165                           ; 1 bytes @ 0x3
  2166                           
  2167                           
  2168                           ; 1 bytes @ 0x3
  2169  0076                     	ds	1
  2170  0077                     ??_TMR2_Initialize:
  2171  0077                     ??_TMR0_Initialize:	
  2172                           ; 1 bytes @ 0x4
  2173                           
  2174  0077                     ??_TMR2_SetInterruptHandler:	
  2175                           ; 1 bytes @ 0x4
  2176                           
  2177  0077                     ??_TMR0_SetInterruptHandler:	
  2178                           ; 1 bytes @ 0x4
  2179                           
  2180  0077                     ??_get_wsp:	
  2181                           ; 1 bytes @ 0x4
  2182                           
  2183  0077                     EEPROM_ReadByte@addr:	
  2184                           ; 1 bytes @ 0x4
  2185                           
  2186                           
  2187                           ; 1 bytes @ 0x4
  2188  0077                     	ds	1
  2189  0078                     ??_SYSTEM_Initialize:
  2190  0078                     EEPROM_WriteByte@addr:	
  2191                           ; 1 bytes @ 0x5
  2192                           
  2193                           
  2194                           ; 1 bytes @ 0x5
  2195  0078                     	ds	1
  2196  0079                     ??_start_setup:
  2197  0079                     ??_main:	
  2198                           ; 1 bytes @ 0x6
  2199                           
  2200                           
  2201                           	psect	cstackBANK0
  2202  0058                     __pcstackBANK0:	
  2203                           ; 1 bytes @ 0x6
  2204                           
  2205  0058                     ??_eeprom_set:
  2206  0058                     get_wsp@res:	
  2207                           ; 1 bytes @ 0x0
  2208                           
  2209                           
  2210                           ; 2 bytes @ 0x0
  2211  0058                     	ds	1
  2212  0059                     eeprom_set@vers:
  2213                           
  2214                           ; 1 bytes @ 0x1
  2215  0059                     	ds	1
  2216                           
  2217                           	psect	maintext
  2218  043E                     __pmaintext:	
  2219 ;;
  2220 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2221 ;;
  2222 ;; *************** function _main *****************
  2223 ;; Defined at:
  2224 ;;		line 830 in file "main.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;		None
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;		None
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0, pclath, cstack
  2233 ;; Tracked objects:
  2234 ;;		On entry : B1F/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1
  2238 ;;      Params:         0       0       0
  2239 ;;      Locals:         0       0       0
  2240 ;;      Temps:          0       0       0
  2241 ;;      Totals:         0       0       0
  2242 ;;Total ram usage:        0 bytes
  2243 ;; Hardware stack levels required when called: 11
  2244 ;; This function calls:
  2245 ;;		_autorotation_work
  2246 ;;		_close
  2247 ;;		_fun_work
  2248 ;;		_get_fun
  2249 ;;		_get_jump
  2250 ;;		_get_wsp
  2251 ;;		_hardware_work
  2252 ;;		_start_setup
  2253 ;;		_switch_wm
  2254 ;; This function is called by:
  2255 ;;		Startup code after reset
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259  043E                     _main:	
  2260                           ;psect for function _main
  2261                           
  2262                           
  2263                           ;incstack = 0
  2264                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  2265  043E                     l2682:
  2266                           
  2267                           ;main.c: 832:     start_setup();
  2268  043E  3183  2308  3184   	fcall	_start_setup
  2269  0441                     __ccov385_end_blk0:
  2270  0441                     __ccov386_start_blk1:
  2271  0441                     l549:	
  2272                           ;main.c: 835:     while (1) {
  2273                           
  2274  0441  0064               	clrwdt	;# 
  2275  0442                     __ccov386_end_blk1:
  2276  0442                     __ccov387_start_blk2:
  2277  0442                     l2684:
  2278                           
  2279                           ;main.c: 839:         hardware_work();
  2280  0442  3183  2348  3184   	fcall	_hardware_work
  2281  0445                     __ccov387_end_blk2:
  2282  0445                     __ccov388_start_blk3:
  2283  0445                     l2686:
  2284                           
  2285                           ;main.c: 843:         if (!ff.bits.ALARM_ON) {
  2286  0445  1879               	btfsc	_ff,0
  2287  0446  2C48               	goto	u2751
  2288  0447  2C49               	goto	u2750
  2289  0448                     u2751:
  2290  0448  2C5E               	goto	l2690
  2291  0449                     __ccov388_end_blk3:
  2292  0449                     u2750:
  2293  0449                     __ccov389_start_blk4:
  2294  0449                     l2688:
  2295  0449  0020               	movlb	0	; select bank0
  2296  044A  1620               	bsf	__ccovbit4_178/(0+8),__ccovbit4_178& (0+7)	;volatile
  2297                           
  2298                           ;main.c: 845:             get_jump();
  2299  044B  3183  2383  3184   	fcall	_get_jump
  2300                           
  2301                           ;main.c: 846:             switch_wm();
  2302  044E  3183  23BE  3184   	fcall	_switch_wm
  2303                           
  2304                           ;main.c: 848:             get_fun();
  2305  0451  3181  21F3  3184   	fcall	_get_fun
  2306                           
  2307                           ;main.c: 849:             fun_work();
  2308  0454  3182  223B  3184   	fcall	_fun_work
  2309                           
  2310                           ;main.c: 851:             get_wsp();
  2311  0457  3181  2131  3184   	fcall	_get_wsp
  2312                           
  2313                           ;main.c: 853:                autorotation_work();
  2314  045A  3180  20C8  3184   	fcall	_autorotation_work
  2315                           
  2316                           ;main.c: 855:         } else {
  2317  045D  2C41               	goto	l549
  2318  045E                     __ccov389_end_blk4:
  2319  045E                     __ccov390_start_blk6:
  2320  045E                     l2690:
  2321  045E  0020               	movlb	0	; select bank0
  2322  045F  15A0               	bsf	__ccovbit6_179/(0+8),__ccovbit6_179& (0+7)	;volatile
  2323                           
  2324                           ;main.c: 856:             close();
  2325  0460  3184  24AC  3184   	fcall	_close
  2326  0463  2C41               	goto	l549
  2327  0464                     __ccov390_end_blk6:
  2328  0464  282D               	ljmp	start
  2329  0465                     __end_of_main:
  2330                           
  2331                           	psect	text1
  2332  03BE                     __ptext1:	
  2333 ;; *************** function _switch_wm *****************
  2334 ;; Defined at:
  2335 ;;		line 358 in file "main.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;		None
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;		None
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		wreg, status,2, status,0, pclath, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMMON   BANK0   BANK1
  2349 ;;      Params:         0       0       0
  2350 ;;      Locals:         0       0       0
  2351 ;;      Temps:          1       0       0
  2352 ;;      Totals:         1       0       0
  2353 ;;Total ram usage:        1 bytes
  2354 ;; Hardware stack levels used: 1
  2355 ;; Hardware stack levels required when called: 8
  2356 ;; This function calls:
  2357 ;;		_rele_off
  2358 ;; This function is called by:
  2359 ;;		_main
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363  03BE                     _switch_wm:	
  2364                           ;psect for function _switch_wm
  2365                           
  2366                           
  2367                           ;incstack = 0
  2368                           ; Regs used in _switch_wm: [wreg+status,2+status,0+pclath+cstack]
  2369  03BE                     l2294:
  2370                           
  2371                           ;main.c: 359:     if (ff.bits.JUMP_LOW) {
  2372  03BE  1FF9               	btfss	_ff,7
  2373  03BF  2BC1               	goto	u2211
  2374  03C0  2BC2               	goto	u2210
  2375  03C1                     u2211:
  2376  03C1  2BD4               	goto	l390
  2377  03C2                     __ccov203_end_blk0:
  2378  03C2                     u2210:
  2379  03C2                     __ccov204_start_blk1:
  2380  03C2                     l2296:
  2381  03C2  0020               	movlb	0	; select bank0
  2382  03C3  142B               	bsf	__ccovbit1_94/(0+8),__ccovbit1_94& (0+7)	;volatile
  2383                           
  2384                           ;main.c: 360:         if (!ff.bits.UNIVERSAL_VORK_MODE_ON) {
  2385  03C4  18FC               	btfsc	_ff+3,1
  2386  03C5  2BC7               	goto	u2221
  2387  03C6  2BC8               	goto	u2220
  2388  03C7                     u2221:
  2389  03C7  2BE8               	goto	l395
  2390  03C8                     __ccov204_end_blk1:
  2391  03C8                     u2220:
  2392  03C8                     __ccov205_start_blk2:
  2393  03C8                     l2298:
  2394                           
  2395                           ;main.c: 361:             ff.bits.NORMAL_WORK_MODE_ON = 0;
  2396  03C8  107C               	bcf	_ff+3,0
  2397                           
  2398                           ;main.c: 362:             ff.bits.UNIVERSAL_VORK_MODE_ON = 1;
  2399  03C9  14FC               	bsf	_ff+3,1
  2400  03CA                     __ccov205_end_blk2:
  2401  03CA                     __ccov206_start_blk3:
  2402  03CA                     l2300:
  2403                           
  2404                           ;main.c: 363:             rele_off();
  2405  03CA  3185  2595  3183   	fcall	_rele_off
  2406  03CD                     __ccov206_end_blk3:
  2407  03CD                     __ccov207_start_blk4:
  2408  03CD                     l2302:
  2409  03CD  0020               	movlb	0	; select bank0
  2410  03CE  17AA               	bsf	__ccovbit4_95/(0+8),__ccovbit4_95& (0+7)	;volatile
  2411                           
  2412                           ;main.c: 365:             beep_long_count = 2;
  2413  03CF  3002               	movlw	2
  2414  03D0  00F6               	movwf	??_switch_wm
  2415  03D1  0876               	movf	??_switch_wm,w
  2416  03D2  00CE               	movwf	_beep_long_count
  2417  03D3  2BE8               	goto	l395
  2418  03D4                     __ccov207_end_blk4:
  2419  03D4                     __ccov208_start_blk6:
  2420  03D4                     l390:
  2421  03D4  0020               	movlb	0	; select bank0
  2422  03D5  172A               	bsf	__ccovbit6_96/(0+8),__ccovbit6_96& (0+7)	;volatile
  2423  03D6  1C7A               	btfss	_ff+1,0
  2424  03D7  2BD9               	goto	u2231
  2425  03D8  2BDA               	goto	u2230
  2426  03D9                     u2231:
  2427  03D9  2BE8               	goto	l395
  2428  03DA                     __ccov208_end_blk6:
  2429  03DA                     u2230:
  2430  03DA                     __ccov209_start_blk7:
  2431  03DA                     l2304:
  2432  03DA  16AA               	bsf	__ccovbit7_97/(0+8),__ccovbit7_97& (0+7)	;volatile
  2433                           
  2434                           ;main.c: 368:         if (!ff.bits.NORMAL_WORK_MODE_ON) {
  2435  03DB  187C               	btfsc	_ff+3,0
  2436  03DC  2BDE               	goto	u2241
  2437  03DD  2BDF               	goto	u2240
  2438  03DE                     u2241:
  2439  03DE  2BE8               	goto	l395
  2440  03DF                     __ccov209_end_blk7:
  2441  03DF                     u2240:
  2442  03DF                     __ccov210_start_blk8:
  2443  03DF                     l2306:
  2444                           
  2445                           ;main.c: 369:             ff.bits.NORMAL_WORK_MODE_ON = 1;
  2446  03DF  147C               	bsf	_ff+3,0
  2447                           
  2448                           ;main.c: 370:             ff.bits.UNIVERSAL_VORK_MODE_ON = 0;
  2449  03E0  10FC               	bcf	_ff+3,1
  2450  03E1                     __ccov210_end_blk8:
  2451  03E1                     __ccov211_start_blk9:
  2452  03E1                     l2308:
  2453                           
  2454                           ;main.c: 371:             rele_off();
  2455  03E1  3185  2595  3183   	fcall	_rele_off
  2456  03E4                     __ccov211_end_blk9:
  2457  03E4                     __ccov212_start_blk10:
  2458  03E4                     l2310:
  2459  03E4  0020               	movlb	0	; select bank0
  2460  03E5  162A               	bsf	__ccovbit10_98/(0+8),__ccovbit10_98& (0+7)	;volatile
  2461                           
  2462                           ;main.c: 373:             beep_long_count = 1;
  2463  03E6  01CE               	clrf	_beep_long_count
  2464  03E7  0ACE               	incf	_beep_long_count,f
  2465  03E8                     __ccov212_end_blk10:
  2466  03E8                     __ccov213_start_blk14:
  2467  03E8                     l395:
  2468  03E8  15AA               	bsf	__ccovbit14_99/(0+8),__ccovbit14_99& (0+7)	;volatile
  2469  03E9  0008               	return
  2470  03EA                     __end_of_switch_wm:
  2471  03EA                     
  2472                           	psect	text2
  2473  0308                     __ptext2:	
  2474 ;; *************** function _start_setup *****************
  2475 ;; Defined at:
  2476 ;;		line 750 in file "main.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;		None
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;		None
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1    wreg      void 
  2483 ;; Registers used:
  2484 ;;		wreg, status,2, status,0, pclath, cstack
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMMON   BANK0   BANK1
  2490 ;;      Params:         0       0       0
  2491 ;;      Locals:         0       0       0
  2492 ;;      Temps:          0       0       0
  2493 ;;      Totals:         0       0       0
  2494 ;;Total ram usage:        0 bytes
  2495 ;; Hardware stack levels used: 1
  2496 ;; Hardware stack levels required when called: 10
  2497 ;; This function calls:
  2498 ;;		_SYSTEM_Initialize
  2499 ;;		_TMR0_SetInterruptHandler
  2500 ;;		_TMR2_SetInterruptHandler
  2501 ;;		_TMR2_StartTimer
  2502 ;;		_eeprom_set
  2503 ;; This function is called by:
  2504 ;;		_main
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508  0308                     _start_setup:	
  2509                           ;psect for function _start_setup
  2510                           
  2511                           
  2512                           ;incstack = 0
  2513                           ; Regs used in _start_setup: [wreg+status,2+status,0+pclath+cstack]
  2514  0308                     l2630:
  2515                           
  2516                           ;main.c: 752:     SYSTEM_Initialize();
  2517  0308  3185  25D9  3183   	fcall	_SYSTEM_Initialize
  2518  030B                     __ccov364_end_blk0:
  2519  030B                     __ccov365_start_blk1:
  2520  030B                     l2632:
  2521                           
  2522                           ;main.c: 753:     (INTCONbits.GIE = 1);
  2523  030B  178B               	bsf	11,7	;volatile
  2524  030C                     __ccov365_end_blk1:
  2525  030C                     __ccov366_start_blk2:
  2526  030C                     l2634:
  2527                           
  2528                           ;main.c: 754:     (INTCONbits.PEIE = 1);
  2529  030C  170B               	bsf	11,6	;volatile
  2530                           
  2531                           ;main.c: 757:     eeprom_set();
  2532  030D  3185  2567  3183   	fcall	_eeprom_set
  2533                           
  2534                           ;main.c: 759:     TMR0_SetInterruptHandler(zummer_switch);
  2535  0310  3065               	movlw	low _zummer_switch
  2536  0311  00F5               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2537  0312  3006               	movlw	high _zummer_switch
  2538  0313  00F6               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2539  0314  3186  2694  3183   	fcall	_TMR0_SetInterruptHandler
  2540                           
  2541                           ;main.c: 760:     TMR2_SetInterruptHandler(ms_tick);
  2542  0317  30C6               	movlw	low _ms_tick
  2543  0318  00F5               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2544  0319  3002               	movlw	high _ms_tick
  2545  031A  00F6               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2546  031B  3186  268D  3183   	fcall	_TMR2_SetInterruptHandler
  2547  031E                     __ccov366_end_blk2:
  2548  031E                     __ccov367_start_blk3:
  2549  031E                     l2636:
  2550                           
  2551                           ;main.c: 761:     TMR2_StartTimer();
  2552  031E  3186  26B7  3183   	fcall	_TMR2_StartTimer
  2553  0321                     __ccov367_end_blk3:
  2554  0321                     __ccov368_start_blk4:
  2555  0321                     l2638:
  2556                           
  2557                           ;main.c: 778:     INTCONbits.TMR0IE = 0;
  2558  0321  128B               	bcf	11,5	;volatile
  2559                           
  2560                           ;main.c: 779:     ff.value = 0;
  2561  0322  3000               	movlw	0
  2562  0323  00FC               	movwf	_ff+3
  2563  0324  3000               	movlw	0
  2564  0325  00FB               	movwf	_ff+2
  2565  0326  3000               	movlw	0
  2566  0327  00FA               	movwf	_ff+1
  2567  0328  3000               	movlw	0
  2568  0329  00F9               	movwf	_ff
  2569  032A                     __ccov368_end_blk4:
  2570  032A                     __ccov369_start_blk6:
  2571  032A                     l2640:
  2572  032A  0022               	movlb	2	; select bank2
  2573  032B  128E               	bcf	14,5	;volatile
  2574  032C                     __ccov369_end_blk6:
  2575  032C                     __ccov370_start_blk9:
  2576  032C                     l2642:
  2577  032C  120E               	bcf	14,4	;volatile
  2578  032D                     __ccov370_end_blk9:
  2579  032D                     __ccov371_start_blk12:
  2580  032D                     l2644:
  2581  032D  100E               	bcf	14,0	;volatile
  2582  032E                     __ccov371_end_blk12:
  2583  032E                     __ccov372_start_blk15:
  2584  032E                     l2646:
  2585  032E  108E               	bcf	14,1	;volatile
  2586  032F                     __ccov372_end_blk15:
  2587  032F                     __ccov373_start_blk18:
  2588  032F                     l2648:
  2589  032F  128C               	bcf	12,5	;volatile
  2590  0330                     __ccov373_end_blk18:
  2591  0330                     __ccov374_start_blk21:
  2592  0330                     l2650:
  2593  0330  120C               	bcf	12,4	;volatile
  2594  0331                     __ccov374_end_blk21:
  2595  0331                     __ccov375_start_blk22:
  2596  0331                     l543:
  2597                           
  2598                           ;main.c: 788:     time_rotation = 0;
  2599  0331  3000               	movlw	0
  2600  0332  0020               	movlb	0	; select bank0
  2601  0333  00B4               	movwf	_time_rotation
  2602  0334  3000               	movlw	0
  2603  0335  00B5               	movwf	_time_rotation+1
  2604  0336  3000               	movlw	0
  2605  0337  00B6               	movwf	_time_rotation+2
  2606  0338                     __ccov375_end_blk22:
  2607  0338                     __ccov376_start_blk23:
  2608  0338                     l2652:
  2609                           
  2610                           ;main.c: 789:     time_rele_power = 0;
  2611  0338  01C5               	clrf	_time_rele_power
  2612  0339  01C6               	clrf	_time_rele_power+1
  2613  033A                     __ccov376_end_blk23:
  2614  033A                     __ccov377_start_blk24:
  2615  033A                     l2654:
  2616                           
  2617                           ;main.c: 790:     time_rele_control = 0;
  2618  033A  01C3               	clrf	_time_rele_control
  2619  033B  01C4               	clrf	_time_rele_control+1
  2620  033C                     __ccov377_end_blk24:
  2621  033C                     __ccov378_start_blk25:
  2622  033C                     l2656:
  2623                           
  2624                           ;main.c: 791:     time_rele_gap = 0;
  2625  033C  01C1               	clrf	_time_rele_gap
  2626  033D  01C2               	clrf	_time_rele_gap+1
  2627  033E                     __ccov378_end_blk25:
  2628  033E                     __ccov379_start_blk26:
  2629  033E                     l2658:
  2630                           
  2631                           ;main.c: 792:     time_tone = 0;
  2632  033E  01BF               	clrf	_time_tone
  2633  033F  01C0               	clrf	_time_tone+1
  2634  0340                     __ccov379_end_blk26:
  2635  0340                     __ccov380_start_blk27:
  2636  0340                     l2660:
  2637                           
  2638                           ;main.c: 797:     time_melody = 0;
  2639  0340  01D1               	clrf	_time_melody
  2640  0341                     __ccov380_end_blk27:
  2641  0341                     __ccov381_start_blk28:
  2642  0341                     l2662:
  2643                           
  2644                           ;main.c: 798:     time_zummer_short = 0;
  2645  0341  01BD               	clrf	_time_zummer_short
  2646  0342  01BE               	clrf	_time_zummer_short+1
  2647  0343                     __ccov381_end_blk28:
  2648  0343                     __ccov382_start_blk29:
  2649  0343                     l2664:
  2650                           
  2651                           ;main.c: 799:     time_zummer_long = 0;
  2652  0343  01BB               	clrf	_time_zummer_long
  2653  0344  01BC               	clrf	_time_zummer_long+1
  2654  0345                     __ccov382_end_blk29:
  2655  0345                     __ccov383_start_blk30:
  2656  0345                     l2666:
  2657                           
  2658                           ;main.c: 802:     time_meas = 0;
  2659  0345  01CF               	clrf	_time_meas
  2660  0346                     __ccov383_end_blk30:
  2661  0346                     __ccov384_start_blk31:
  2662  0346                     l544:
  2663  0346  16A0               	bsf	__ccovbit31_177/(0+8),__ccovbit31_177& (0+7)	;volatile
  2664  0347  0008               	return
  2665  0348                     __end_of_start_setup:
  2666  0348                     
  2667                           	psect	text3
  2668  0567                     __ptext3:	
  2669 ;; *************** function _eeprom_set *****************
  2670 ;; Defined at:
  2671 ;;		line 558 in file "main.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;		None
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  vers            1    1[BANK0 ] unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      void 
  2678 ;; Registers used:
  2679 ;;		wreg, status,2, status,0, pclath, cstack
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMMON   BANK0   BANK1
  2685 ;;      Params:         0       0       0
  2686 ;;      Locals:         0       1       0
  2687 ;;      Temps:          0       1       0
  2688 ;;      Totals:         0       2       0
  2689 ;;Total ram usage:        2 bytes
  2690 ;; Hardware stack levels used: 1
  2691 ;; Hardware stack levels required when called: 8
  2692 ;; This function calls:
  2693 ;;		_EEPROM_ReadByte
  2694 ;;		_EEPROM_WriteByte
  2695 ;; This function is called by:
  2696 ;;		_start_setup
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700  0567                     _eeprom_set:	
  2701                           ;psect for function _eeprom_set
  2702                           
  2703                           
  2704                           ;incstack = 0
  2705                           ; Regs used in _eeprom_set: [wreg+status,2+status,0+pclath+cstack]
  2706  0567                     l2592:
  2707                           
  2708                           ;main.c: 559:     char vers = EEPROM_ReadByte(FRIMWARE_VERSION_EEPROM_ADR);
  2709  0567  3001               	movlw	1
  2710  0568  3185  2504  3185   	fcall	_EEPROM_ReadByte
  2711  056B  0020               	movlb	0	; select bank0
  2712  056C  00D8               	movwf	??_eeprom_set
  2713  056D  0858               	movf	??_eeprom_set,w
  2714  056E  00D9               	movwf	eeprom_set@vers
  2715  056F                     __ccov297_end_blk0:
  2716  056F                     __ccov298_start_blk1:
  2717  056F                     l2594:
  2718                           
  2719                           ;main.c: 560:     if (vers == 0xFF) {
  2720  056F  0A59               	incf	eeprom_set@vers,w
  2721  0570  1D03               	btfss	3,2
  2722  0571  2D73               	goto	u2691
  2723  0572  2D74               	goto	u2690
  2724  0573                     u2691:
  2725  0573  2D7B               	goto	l464
  2726  0574                     __ccov298_end_blk1:
  2727  0574                     u2690:
  2728  0574                     __ccov299_start_blk2:
  2729  0574                     l2596:
  2730  0574  1424               	bsf	__ccovbit2_150/(0+8),__ccovbit2_150& (0+7)	;volatile
  2731                           
  2732                           ;main.c: 561:         EEPROM_WriteByte(FRIMWARE_VERSION_EEPROM_ADR, 1);
  2733  0575  01F5               	clrf	EEPROM_WriteByte@dt
  2734  0576  0AF5               	incf	EEPROM_WriteByte@dt,f
  2735  0577  3001               	movlw	1
  2736  0578  3184  2465  3185   	fcall	_EEPROM_WriteByte
  2737  057B                     __ccov299_end_blk2:
  2738  057B                     __ccov300_start_blk4:
  2739  057B                     l464:
  2740  057B  0020               	movlb	0	; select bank0
  2741  057C  17A3               	bsf	__ccovbit4_151/(0+8),__ccovbit4_151& (0+7)	;volatile
  2742  057D  0008               	return
  2743  057E                     __end_of_eeprom_set:
  2744  057E                     
  2745                           	psect	text4
  2746  0465                     __ptext4:	
  2747 ;; *************** function _EEPROM_WriteByte *****************
  2748 ;; Defined at:
  2749 ;;		line 6 in file "eeprom.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;  addr            1    wreg     unsigned char 
  2752 ;;  dt              1    2[COMMON] unsigned char 
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;  addr            1    5[COMMON] unsigned char 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMMON   BANK0   BANK1
  2764 ;;      Params:         1       0       0
  2765 ;;      Locals:         1       0       0
  2766 ;;      Temps:          2       0       0
  2767 ;;      Totals:         4       0       0
  2768 ;;Total ram usage:        4 bytes
  2769 ;; Hardware stack levels used: 1
  2770 ;; Hardware stack levels required when called: 7
  2771 ;; This function calls:
  2772 ;;		Nothing
  2773 ;; This function is called by:
  2774 ;;		_eeprom_set
  2775 ;;		_EEPROM_WriteWord
  2776 ;;		_EEPROM_Writeint24
  2777 ;;		_EEPROM_WriteString
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781  0465                     _EEPROM_WriteByte:	
  2782                           ;psect for function _EEPROM_WriteByte
  2783                           
  2784                           
  2785                           ;incstack = 0
  2786                           ; Regs used in _EEPROM_WriteByte: [wreg]
  2787                           ;EEPROM_WriteByte@addr stored from wreg
  2788  0465  00F8               	movwf	EEPROM_WriteByte@addr
  2789  0466                     l2562:
  2790  0466                     l573:	
  2791                           ;eeprom.c: 7:    static __bit status;;eeprom.c: 8:     while (WR);
  2792                           
  2793  0466  0023               	movlb	3	; select bank3
  2794  0467  1895               	btfsc	21,1	;volsfr
  2795  0468  2C6A               	goto	u2641
  2796  0469  2C6B               	goto	u2640
  2797  046A                     u2641:
  2798  046A  2C66               	goto	l573
  2799  046B                     __ccov392_end_blk2:
  2800  046B                     u2640:
  2801  046B                     __ccov393_start_blk3:
  2802  046B                     l575:
  2803                           
  2804                           ;eeprom.c: 9:     status = GIE;
  2805  046B  13F2               	bcf	EEPROM_WriteByte@status/(0+8),EEPROM_WriteByte@status& (0+7)
  2806  046C  1F8B               	btfss	11,7	;volatile
  2807  046D  2C6F               	goto	u2655
  2808  046E  17F2               	bsf	EEPROM_WriteByte@status/(0+8),EEPROM_WriteByte@status& (0+7)
  2809  046F                     u2655:
  2810                           
  2811                           ;eeprom.c: 10:     GIE = 0;
  2812  046F  138B               	bcf	11,7	;volatile
  2813  0470                     __ccov393_end_blk3:
  2814  0470                     __ccov394_start_blk4:
  2815  0470                     l2564:
  2816                           
  2817                           ;eeprom.c: 11:     EEADR = addr;
  2818  0470  0878               	movf	EEPROM_WriteByte@addr,w
  2819  0471  00F6               	movwf	??_EEPROM_WriteByte
  2820  0472  01F7               	clrf	??_EEPROM_WriteByte+1
  2821  0473  0876               	movf	??_EEPROM_WriteByte,w
  2822  0474  0023               	movlb	3	; select bank3
  2823  0475  0091               	movwf	17	;volatile
  2824  0476  0877               	movf	??_EEPROM_WriteByte+1,w
  2825  0477  0092               	movwf	18	;volatile
  2826                           
  2827                           ;eeprom.c: 12:     EEDATA = dt;
  2828  0478  0875               	movf	EEPROM_WriteByte@dt,w
  2829  0479  0093               	movwf	19	;volatile
  2830  047A                     __ccov394_end_blk4:
  2831  047A                     __ccov395_start_blk5:
  2832  047A                     l2566:
  2833                           
  2834                           ;eeprom.c: 13:     WREN = 1;
  2835  047A  1515               	bsf	21,2	;volsfr
  2836                           
  2837                           ;eeprom.c: 14:     EECON2 = 0x55;
  2838  047B  3055               	movlw	85
  2839  047C  0096               	movwf	22	;volsfr
  2840                           
  2841                           ;eeprom.c: 15:     EECON2 = 0xAA;
  2842  047D  30AA               	movlw	170
  2843  047E  0096               	movwf	22	;volsfr
  2844  047F                     __ccov395_end_blk5:
  2845  047F                     __ccov396_start_blk6:
  2846  047F                     l2568:
  2847                           
  2848                           ;eeprom.c: 16:     WR = 1;
  2849  047F  1495               	bsf	21,1	;volsfr
  2850  0480                     __ccov396_end_blk6:
  2851  0480                     __ccov397_start_blk7:
  2852  0480                     l2570:
  2853                           
  2854                           ;eeprom.c: 17:     GIE = status;
  2855  0480  1BF2               	btfsc	EEPROM_WriteByte@status/(0+8),EEPROM_WriteByte@status& (0+7)
  2856  0481  2C83               	goto	u2661
  2857  0482  2C85               	goto	u2660
  2858  0483                     u2661:
  2859  0483  178B               	bsf	11,7	;volatile
  2860  0484  2C86               	goto	u2674
  2861  0485                     u2660:
  2862  0485  138B               	bcf	11,7	;volatile
  2863  0486                     __ccov397_end_blk7:
  2864  0486                     u2674:
  2865  0486                     __ccov398_start_blk8:
  2866  0486                     l2572:
  2867                           
  2868                           ;eeprom.c: 18:     WREN = 0;
  2869  0486  0023               	movlb	3	; select bank3
  2870  0487  1115               	bcf	21,2	;volsfr
  2871  0488                     __ccov398_end_blk8:
  2872  0488                     __ccov399_start_blk9:
  2873  0488                     l576:
  2874  0488  0020               	movlb	0	; select bank0
  2875  0489  1520               	bsf	__ccovbit9_180/(0+8),__ccovbit9_180& (0+7)	;volatile
  2876  048A  0008               	return
  2877  048B                     __end_of_EEPROM_WriteByte:
  2878  048B                     
  2879                           	psect	text5
  2880  0504                     __ptext5:	
  2881 ;; *************** function _EEPROM_ReadByte *****************
  2882 ;; Defined at:
  2883 ;;		line 21 in file "eeprom.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  addr            1    wreg     unsigned char 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  addr            1    4[COMMON] unsigned char 
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      unsigned char 
  2890 ;; Registers used:
  2891 ;;		wreg
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMMON   BANK0   BANK1
  2897 ;;      Params:         0       0       0
  2898 ;;      Locals:         1       0       0
  2899 ;;      Temps:          2       0       0
  2900 ;;      Totals:         3       0       0
  2901 ;;Total ram usage:        3 bytes
  2902 ;; Hardware stack levels used: 1
  2903 ;; Hardware stack levels required when called: 7
  2904 ;; This function calls:
  2905 ;;		Nothing
  2906 ;; This function is called by:
  2907 ;;		_eeprom_set
  2908 ;;		_EEPROM_ReadWord
  2909 ;;		_EEPROM_Readint24
  2910 ;;		_EEPROM_ReadString
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914  0504                     _EEPROM_ReadByte:	
  2915                           ;psect for function _EEPROM_ReadByte
  2916                           
  2917                           
  2918                           ;incstack = 0
  2919                           ; Regs used in _EEPROM_ReadByte: [wreg]
  2920                           ;EEPROM_ReadByte@addr stored from wreg
  2921  0504  00F7               	movwf	EEPROM_ReadByte@addr
  2922  0505                     l2552:
  2923  0505                     l579:	
  2924                           ;eeprom.c: 22:     while (RD || WR);
  2925                           
  2926  0505  0023               	movlb	3	; select bank3
  2927  0506  1815               	btfsc	21,0	;volsfr
  2928  0507  2D09               	goto	u2621
  2929  0508  2D0A               	goto	u2620
  2930  0509                     u2621:
  2931  0509  2D05               	goto	l579
  2932  050A                     __ccov401_end_blk2:
  2933  050A                     u2620:
  2934  050A                     __ccov402_start_blk3:
  2935  050A                     l2554:
  2936  050A  0020               	movlb	0	; select bank0
  2937  050B  14A0               	bsf	__ccovbit3_181/(0+8),__ccovbit3_181& (0+7)	;volatile
  2938  050C  0023               	movlb	3	; select bank3
  2939  050D  1895               	btfsc	21,1	;volsfr
  2940  050E  2D10               	goto	u2631
  2941  050F  2D11               	goto	u2630
  2942  0510                     u2631:
  2943  0510  2D05               	goto	l579
  2944  0511                     __ccov402_end_blk3:
  2945  0511                     u2630:
  2946  0511                     __ccov403_start_blk5:
  2947  0511                     l2556:
  2948                           
  2949                           ;eeprom.c: 23:     EEADR = addr;
  2950  0511  0877               	movf	EEPROM_ReadByte@addr,w
  2951  0512  00F5               	movwf	??_EEPROM_ReadByte
  2952  0513  01F6               	clrf	??_EEPROM_ReadByte+1
  2953  0514  0875               	movf	??_EEPROM_ReadByte,w
  2954  0515  0091               	movwf	17	;volatile
  2955  0516  0876               	movf	??_EEPROM_ReadByte+1,w
  2956  0517  0092               	movwf	18	;volatile
  2957  0518                     __ccov403_end_blk5:
  2958  0518                     __ccov404_start_blk6:
  2959  0518                     l2558:
  2960                           
  2961                           ;eeprom.c: 24:     RD = 1;
  2962  0518  1415               	bsf	21,0	;volsfr
  2963                           
  2964                           ;eeprom.c: 25:     return EEDATA;
  2965  0519  0813               	movf	19,w	;volatile
  2966  051A                     __ccov404_end_blk6:
  2967  051A                     __ccov405_start_blk8:
  2968  051A                     l582:
  2969  051A  0020               	movlb	0	; select bank0
  2970  051B  1420               	bsf	__ccovbit8_182/(0+8),__ccovbit8_182& (0+7)	;volatile
  2971  051C  0008               	return
  2972  051D                     __end_of_EEPROM_ReadByte:
  2973  051D                     
  2974                           	psect	text6
  2975  06B7                     __ptext6:	
  2976 ;; *************** function _TMR2_StartTimer *****************
  2977 ;; Defined at:
  2978 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;		None
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;		None
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      void 
  2985 ;; Registers used:
  2986 ;;		None
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMMON   BANK0   BANK1
  2992 ;;      Params:         0       0       0
  2993 ;;      Locals:         0       0       0
  2994 ;;      Temps:          0       0       0
  2995 ;;      Totals:         0       0       0
  2996 ;;Total ram usage:        0 bytes
  2997 ;; Hardware stack levels used: 1
  2998 ;; Hardware stack levels required when called: 7
  2999 ;; This function calls:
  3000 ;;		Nothing
  3001 ;; This function is called by:
  3002 ;;		_start_setup
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006  06B7                     _TMR2_StartTimer:	
  3007                           ;psect for function _TMR2_StartTimer
  3008                           
  3009                           
  3010                           ;incstack = 0
  3011                           ; Regs used in _TMR2_StartTimer: []
  3012  06B7                     l2178:
  3013                           
  3014                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  3015  06B7  0020               	movlb	0	; select bank0
  3016  06B8  151C               	bsf	28,2	;volatile
  3017  06B9                     __ccov55_end_blk0:
  3018  06B9                     __ccov56_start_blk1:
  3019  06B9                     l138:
  3020  06B9  1471               	bsf	__ccovbit1_15/(0+8),__ccovbit1_15& (0+7)	;volatile
  3021  06BA  0008               	return
  3022  06BB                     __end_of_TMR2_StartTimer:
  3023  06BB                     
  3024                           	psect	text7
  3025  05D9                     __ptext7:	
  3026 ;; *************** function _SYSTEM_Initialize *****************
  3027 ;; Defined at:
  3028 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;		None
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;		None
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      void 
  3035 ;; Registers used:
  3036 ;;		wreg, status,2, status,0, pclath, cstack
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMMON   BANK0   BANK1
  3042 ;;      Params:         0       0       0
  3043 ;;      Locals:         0       0       0
  3044 ;;      Temps:          0       0       0
  3045 ;;      Totals:         0       0       0
  3046 ;;Total ram usage:        0 bytes
  3047 ;; Hardware stack levels used: 1
  3048 ;; Hardware stack levels required when called: 9
  3049 ;; This function calls:
  3050 ;;		_ADC_Initialize
  3051 ;;		_OSCILLATOR_Initialize
  3052 ;;		_PIN_MANAGER_Initialize
  3053 ;;		_TMR0_Initialize
  3054 ;;		_TMR2_Initialize
  3055 ;;		_WDT_Initialize
  3056 ;; This function is called by:
  3057 ;;		_start_setup
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061  05D9                     _SYSTEM_Initialize:	
  3062                           ;psect for function _SYSTEM_Initialize
  3063                           
  3064                           
  3065                           ;incstack = 0
  3066                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3067  05D9                     l2164:
  3068                           
  3069                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3070  05D9  3185  25C3  3185   	fcall	_PIN_MANAGER_Initialize
  3071                           
  3072                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3073  05DC  3186  267D  3185   	fcall	_OSCILLATOR_Initialize
  3074                           
  3075                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  3076  05DF  3186  26AD  3185   	fcall	_WDT_Initialize
  3077                           
  3078                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  3079  05E2  3185  25ED  3185   	fcall	_TMR2_Initialize
  3080                           
  3081                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  3082  05E5  3186  2674  3185   	fcall	_ADC_Initialize
  3083                           
  3084                           ;mcc_generated_files/mcc.c: 58:     TMR0_Initialize();
  3085  05E8  3185  257E  3185   	fcall	_TMR0_Initialize
  3086  05EB                     __ccov1_end_blk0:
  3087  05EB                     __ccov2_start_blk1:
  3088  05EB                     l23:
  3089  05EB  1772               	bsf	__ccovbit1_1/(0+8),__ccovbit1_1& (0+7)	;volatile
  3090  05EC  0008               	return
  3091  05ED                     __end_of_SYSTEM_Initialize:
  3092  05ED                     
  3093                           	psect	text8
  3094  06AD                     __ptext8:	
  3095 ;; *************** function _WDT_Initialize *****************
  3096 ;; Defined at:
  3097 ;;		line 71 in file "mcc_generated_files/mcc.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;		None
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;		None
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMMON   BANK0   BANK1
  3111 ;;      Params:         0       0       0
  3112 ;;      Locals:         0       0       0
  3113 ;;      Temps:          0       0       0
  3114 ;;      Totals:         0       0       0
  3115 ;;Total ram usage:        0 bytes
  3116 ;; Hardware stack levels used: 1
  3117 ;; Hardware stack levels required when called: 7
  3118 ;; This function calls:
  3119 ;;		Nothing
  3120 ;; This function is called by:
  3121 ;;		_SYSTEM_Initialize
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125  06AD                     _WDT_Initialize:	
  3126                           ;psect for function _WDT_Initialize
  3127                           
  3128                           
  3129                           ;incstack = 0
  3130                           ; Regs used in _WDT_Initialize: [wreg]
  3131  06AD                     l2012:
  3132                           
  3133                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x0A;
  3134  06AD  300A               	movlw	10
  3135  06AE  0021               	movlb	1	; select bank1
  3136  06AF  0097               	movwf	23	;volatile
  3137  06B0                     __ccov7_end_blk0:
  3138  06B0                     __ccov8_start_blk1:
  3139  06B0                     l29:
  3140  06B0  1672               	bsf	__ccovbit1_3/(0+8),__ccovbit1_3& (0+7)	;volatile
  3141  06B1  0008               	return
  3142  06B2                     __end_of_WDT_Initialize:
  3143  06B2                     
  3144                           	psect	text9
  3145  05ED                     __ptext9:	
  3146 ;; *************** function _TMR2_Initialize *****************
  3147 ;; Defined at:
  3148 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;		None
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;		None
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0, pclath, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMMON   BANK0   BANK1
  3162 ;;      Params:         0       0       0
  3163 ;;      Locals:         0       0       0
  3164 ;;      Temps:          0       0       0
  3165 ;;      Totals:         0       0       0
  3166 ;;Total ram usage:        0 bytes
  3167 ;; Hardware stack levels used: 1
  3168 ;; Hardware stack levels required when called: 8
  3169 ;; This function calls:
  3170 ;;		_TMR2_SetInterruptHandler
  3171 ;; This function is called by:
  3172 ;;		_SYSTEM_Initialize
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176  05ED                     _TMR2_Initialize:	
  3177                           ;psect for function _TMR2_Initialize
  3178                           
  3179                           
  3180                           ;incstack = 0
  3181                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3182  05ED                     l2014:
  3183                           
  3184                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x63;
  3185  05ED  3063               	movlw	99
  3186  05EE  0020               	movlb	0	; select bank0
  3187  05EF  009B               	movwf	27	;volatile
  3188  05F0                     __ccov48_end_blk0:
  3189  05F0                     __ccov49_start_blk1:
  3190  05F0                     l2016:
  3191                           
  3192                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  3193  05F0  019A               	clrf	26	;volatile
  3194  05F1                     __ccov49_end_blk1:
  3195  05F1                     __ccov50_start_blk2:
  3196  05F1                     l2018:
  3197                           
  3198                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  3199  05F1  1091               	bcf	17,1	;volatile
  3200  05F2                     __ccov50_end_blk2:
  3201  05F2                     __ccov51_start_blk3:
  3202  05F2                     l2020:
  3203                           
  3204                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  3205  05F2  0021               	movlb	1	; select bank1
  3206  05F3  1491               	bsf	17,1	;volatile
  3207  05F4                     __ccov51_end_blk3:
  3208  05F4                     __ccov52_start_blk4:
  3209  05F4                     l2022:
  3210                           
  3211                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  3212  05F4  30CA               	movlw	low _TMR2_DefaultInterruptHandler
  3213  05F5  00F5               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  3214  05F6  3006               	movlw	high _TMR2_DefaultInterruptHandler
  3215  05F7  00F6               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  3216  05F8  3186  268D  3185   	fcall	_TMR2_SetInterruptHandler
  3217  05FB                     __ccov52_end_blk4:
  3218  05FB                     __ccov53_start_blk5:
  3219  05FB                     l2024:
  3220                           
  3221                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x4D;
  3222  05FB  304D               	movlw	77
  3223  05FC  0020               	movlb	0	; select bank0
  3224  05FD  009C               	movwf	28	;volatile
  3225  05FE                     __ccov53_end_blk5:
  3226  05FE                     __ccov54_start_blk6:
  3227  05FE                     l135:
  3228  05FE  14F1               	bsf	__ccovbit6_14/(0+8),__ccovbit6_14& (0+7)	;volatile
  3229  05FF  0008               	return
  3230  0600                     __end_of_TMR2_Initialize:
  3231  0600                     
  3232                           	psect	text10
  3233  068D                     __ptext10:	
  3234 ;; *************** function _TMR2_SetInterruptHandler *****************
  3235 ;; Defined at:
  3236 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  3239 ;;		 -> ms_tick(1), TMR2_DefaultInterruptHandler(1), 
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;		None
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  1    wreg      void 
  3244 ;; Registers used:
  3245 ;;		wreg
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMMON   BANK0   BANK1
  3251 ;;      Params:         2       0       0
  3252 ;;      Locals:         0       0       0
  3253 ;;      Temps:          0       0       0
  3254 ;;      Totals:         2       0       0
  3255 ;;Total ram usage:        2 bytes
  3256 ;; Hardware stack levels used: 1
  3257 ;; Hardware stack levels required when called: 7
  3258 ;; This function calls:
  3259 ;;		Nothing
  3260 ;; This function is called by:
  3261 ;;		_TMR2_Initialize
  3262 ;;		_start_setup
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266  068D                     _TMR2_SetInterruptHandler:	
  3267                           ;psect for function _TMR2_SetInterruptHandler
  3268                           
  3269                           
  3270                           ;incstack = 0
  3271                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  3272  068D                     l1936:
  3273                           
  3274                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
  3275  068D  0876               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  3276  068E  0020               	movlb	0	; select bank0
  3277  068F  00D6               	movwf	_TMR2_InterruptHandler+1
  3278  0690  0875               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  3279  0691  00D5               	movwf	_TMR2_InterruptHandler
  3280  0692                     __ccov69_end_blk0:
  3281  0692                     __ccov70_start_blk1:
  3282  0692                     l157:
  3283  0692  16F0               	bsf	__ccovbit1_18/(0+8),__ccovbit1_18& (0+7)	;volatile
  3284  0693  0008               	return
  3285  0694                     __end_of_TMR2_SetInterruptHandler:
  3286  0694                     
  3287                           	psect	text11
  3288  057E                     __ptext11:	
  3289 ;; *************** function _TMR0_Initialize *****************
  3290 ;; Defined at:
  3291 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  1    wreg      void 
  3298 ;; Registers used:
  3299 ;;		wreg, status,2, status,0, pclath, cstack
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMMON   BANK0   BANK1
  3305 ;;      Params:         0       0       0
  3306 ;;      Locals:         0       0       0
  3307 ;;      Temps:          1       0       0
  3308 ;;      Totals:         1       0       0
  3309 ;;Total ram usage:        1 bytes
  3310 ;; Hardware stack levels used: 1
  3311 ;; Hardware stack levels required when called: 8
  3312 ;; This function calls:
  3313 ;;		_TMR0_SetInterruptHandler
  3314 ;; This function is called by:
  3315 ;;		_SYSTEM_Initialize
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319  057E                     _TMR0_Initialize:	
  3320                           ;psect for function _TMR0_Initialize
  3321                           
  3322                           
  3323                           ;incstack = 0
  3324                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3325  057E                     l2032:
  3326                           
  3327                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD1 
      +                          & 0x3F));
  3328  057E  0021               	movlb	1	; select bank1
  3329  057F  0815               	movf	21,w	;volatile
  3330  0580  39C0               	andlw	192
  3331  0581  3811               	iorlw	17
  3332  0582  0095               	movwf	21	;volatile
  3333  0583                     __ccov72_end_blk0:
  3334  0583                     __ccov73_start_blk1:
  3335  0583                     l2034:
  3336                           
  3337                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x83;
  3338  0583  3083               	movlw	131
  3339  0584  0020               	movlb	0	; select bank0
  3340  0585  0095               	movwf	21	;volatile
  3341  0586                     __ccov73_end_blk1:
  3342  0586                     __ccov74_start_blk2:
  3343  0586                     l2036:
  3344                           
  3345                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 131;
  3346  0586  3083               	movlw	131
  3347  0587  00F7               	movwf	??_TMR0_Initialize
  3348  0588  0877               	movf	??_TMR0_Initialize,w
  3349  0589  00D7               	movwf	_timer0ReloadVal	;volatile
  3350  058A                     __ccov74_end_blk2:
  3351  058A                     __ccov75_start_blk3:
  3352  058A                     l2038:
  3353                           
  3354                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  3355  058A  110B               	bcf	11,2	;volatile
  3356  058B                     __ccov75_end_blk3:
  3357  058B                     __ccov76_start_blk4:
  3358  058B                     l2040:
  3359                           
  3360                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  3361  058B  168B               	bsf	11,5	;volatile
  3362  058C                     __ccov76_end_blk4:
  3363  058C                     __ccov77_start_blk5:
  3364  058C                     l2042:
  3365                           
  3366                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3367  058C  30BB               	movlw	low _TMR0_DefaultInterruptHandler
  3368  058D  00F5               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3369  058E  3006               	movlw	high _TMR0_DefaultInterruptHandler
  3370  058F  00F6               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3371  0590  3186  2694  3185   	fcall	_TMR0_SetInterruptHandler
  3372  0593                     __ccov77_end_blk5:
  3373  0593                     __ccov78_start_blk6:
  3374  0593                     l177:
  3375  0593  15F0               	bsf	__ccovbit6_20/(0+8),__ccovbit6_20& (0+7)	;volatile
  3376  0594  0008               	return
  3377  0595                     __end_of_TMR0_Initialize:
  3378  0595                     
  3379                           	psect	text12
  3380  0694                     __ptext12:	
  3381 ;; *************** function _TMR0_SetInterruptHandler *****************
  3382 ;; Defined at:
  3383 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  3386 ;;		 -> zummer_switch(1), TMR0_DefaultInterruptHandler(1), 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;		None
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMMON   BANK0   BANK1
  3398 ;;      Params:         2       0       0
  3399 ;;      Locals:         0       0       0
  3400 ;;      Temps:          0       0       0
  3401 ;;      Totals:         2       0       0
  3402 ;;Total ram usage:        2 bytes
  3403 ;; Hardware stack levels used: 1
  3404 ;; Hardware stack levels required when called: 7
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_TMR0_Initialize
  3409 ;;		_start_setup
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413  0694                     _TMR0_SetInterruptHandler:	
  3414                           ;psect for function _TMR0_SetInterruptHandler
  3415                           
  3416                           
  3417                           ;incstack = 0
  3418                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  3419  0694                     l1938:
  3420                           
  3421                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  3422  0694  0876               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  3423  0695  0020               	movlb	0	; select bank0
  3424  0696  00D4               	movwf	_TMR0_InterruptHandler+1
  3425  0697  0875               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  3426  0698  00D3               	movwf	_TMR0_InterruptHandler
  3427  0699                     __ccov90_end_blk0:
  3428  0699                     __ccov91_start_blk1:
  3429  0699                     l193:
  3430  0699  1470               	bsf	__ccovbit1_23/(0+8),__ccovbit1_23& (0+7)	;volatile
  3431  069A  0008               	return
  3432  069B                     __end_of_TMR0_SetInterruptHandler:
  3433  069B                     
  3434                           	psect	text13
  3435  05C3                     __ptext13:	
  3436 ;; *************** function _PIN_MANAGER_Initialize *****************
  3437 ;; Defined at:
  3438 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      void 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMMON   BANK0   BANK1
  3452 ;;      Params:         0       0       0
  3453 ;;      Locals:         0       0       0
  3454 ;;      Temps:          0       0       0
  3455 ;;      Totals:         0       0       0
  3456 ;;Total ram usage:        0 bytes
  3457 ;; Hardware stack levels used: 1
  3458 ;; Hardware stack levels required when called: 7
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_SYSTEM_Initialize
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466  05C3                     _PIN_MANAGER_Initialize:	
  3467                           ;psect for function _PIN_MANAGER_Initialize
  3468                           
  3469                           
  3470                           ;incstack = 0
  3471                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3472  05C3                     l1994:
  3473                           
  3474                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3475  05C3  0022               	movlb	2	; select bank2
  3476  05C4  018C               	clrf	12	;volatile
  3477                           
  3478                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  3479  05C5  018E               	clrf	14	;volatile
  3480  05C6                     __ccov31_end_blk0:
  3481  05C6                     __ccov32_start_blk1:
  3482  05C6                     l1996:
  3483                           
  3484                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x0F;
  3485  05C6  300F               	movlw	15
  3486  05C7  0021               	movlb	1	; select bank1
  3487  05C8  008C               	movwf	12	;volatile
  3488  05C9                     __ccov32_end_blk1:
  3489  05C9                     __ccov33_start_blk2:
  3490  05C9                     l1998:
  3491                           
  3492                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x0C;
  3493  05C9  300C               	movlw	12
  3494  05CA  008E               	movwf	14	;volatile
  3495  05CB                     __ccov33_end_blk2:
  3496  05CB                     __ccov34_start_blk3:
  3497  05CB                     l2000:
  3498                           
  3499                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x08;
  3500  05CB  3008               	movlw	8
  3501  05CC  0023               	movlb	3	; select bank3
  3502  05CD  008E               	movwf	14	;volatile
  3503  05CE                     __ccov34_end_blk3:
  3504  05CE                     __ccov35_start_blk4:
  3505  05CE                     l2002:
  3506                           
  3507                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x05;
  3508  05CE  3005               	movlw	5
  3509  05CF  008C               	movwf	12	;volatile
  3510                           
  3511                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  3512  05D0  0024               	movlb	4	; select bank4
  3513  05D1  018C               	clrf	12	;volatile
  3514                           
  3515                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  3516  05D2  018E               	clrf	14	;volatile
  3517  05D3                     __ccov35_end_blk4:
  3518  05D3                     __ccov36_start_blk5:
  3519  05D3                     l2004:
  3520                           
  3521                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  3522  05D3  0021               	movlb	1	; select bank1
  3523  05D4  1795               	bsf	21,7	;volatile
  3524                           
  3525                           ;mcc_generated_files/pin_manager.c: 86:     APFCON = 0x00;
  3526  05D5  0022               	movlb	2	; select bank2
  3527  05D6  019D               	clrf	29	;volatile
  3528  05D7                     __ccov36_end_blk5:
  3529  05D7                     __ccov37_start_blk6:
  3530  05D7                     l90:
  3531  05D7  14F2               	bsf	__ccovbit6_6/(0+8),__ccovbit6_6& (0+7)	;volatile
  3532  05D8  0008               	return
  3533  05D9                     __end_of_PIN_MANAGER_Initialize:
  3534  05D9                     
  3535                           	psect	text14
  3536  067D                     __ptext14:	
  3537 ;; *************** function _OSCILLATOR_Initialize *****************
  3538 ;; Defined at:
  3539 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;		None
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;		None
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  1    wreg      void 
  3546 ;; Registers used:
  3547 ;;		wreg, status,2
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMMON   BANK0   BANK1
  3553 ;;      Params:         0       0       0
  3554 ;;      Locals:         0       0       0
  3555 ;;      Temps:          0       0       0
  3556 ;;      Totals:         0       0       0
  3557 ;;Total ram usage:        0 bytes
  3558 ;; Hardware stack levels used: 1
  3559 ;; Hardware stack levels required when called: 7
  3560 ;; This function calls:
  3561 ;;		Nothing
  3562 ;; This function is called by:
  3563 ;;		_SYSTEM_Initialize
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567  067D                     _OSCILLATOR_Initialize:	
  3568                           ;psect for function _OSCILLATOR_Initialize
  3569                           
  3570                           
  3571                           ;incstack = 0
  3572                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3573  067D                     l2006:
  3574                           
  3575                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x78;
  3576  067D  3078               	movlw	120
  3577  067E  0021               	movlb	1	; select bank1
  3578  067F  0099               	movwf	25	;volatile
  3579  0680                     __ccov3_end_blk0:
  3580  0680                     __ccov4_start_blk1:
  3581  0680                     l2008:
  3582                           
  3583                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  3584  0680  0198               	clrf	24	;volatile
  3585  0681                     __ccov4_end_blk1:
  3586  0681                     __ccov5_start_blk2:
  3587  0681                     l2010:
  3588                           
  3589                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  3590  0681  0022               	movlb	2	; select bank2
  3591  0682  0196               	clrf	22	;volatile
  3592  0683                     __ccov5_end_blk2:
  3593  0683                     __ccov6_start_blk3:
  3594  0683                     l26:
  3595  0683  16F2               	bsf	__ccovbit3_2/(0+8),__ccovbit3_2& (0+7)	;volatile
  3596  0684  0008               	return
  3597  0685                     __end_of_OSCILLATOR_Initialize:
  3598  0685                     
  3599                           	psect	text15
  3600  0674                     __ptext15:	
  3601 ;; *************** function _ADC_Initialize *****************
  3602 ;; Defined at:
  3603 ;;		line 67 in file "mcc_generated_files/adc.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;		None
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;		None
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  1    wreg      void 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMMON   BANK0   BANK1
  3617 ;;      Params:         0       0       0
  3618 ;;      Locals:         0       0       0
  3619 ;;      Temps:          0       0       0
  3620 ;;      Totals:         0       0       0
  3621 ;;Total ram usage:        0 bytes
  3622 ;; Hardware stack levels used: 1
  3623 ;; Hardware stack levels required when called: 7
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_SYSTEM_Initialize
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631  0674                     _ADC_Initialize:	
  3632                           ;psect for function _ADC_Initialize
  3633                           
  3634                           
  3635                           ;incstack = 0
  3636                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3637  0674                     l2026:
  3638                           
  3639                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x50;
  3640  0674  3050               	movlw	80
  3641  0675  0021               	movlb	1	; select bank1
  3642  0676  009E               	movwf	30	;volatile
  3643  0677                     __ccov9_end_blk0:
  3644  0677                     __ccov10_start_blk1:
  3645  0677                     l2028:
  3646                           
  3647                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  3648  0677  019B               	clrf	27	;volatile
  3649  0678                     __ccov10_end_blk1:
  3650  0678                     __ccov11_start_blk2:
  3651  0678                     l2030:
  3652                           
  3653                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  3654  0678  019C               	clrf	28	;volatile
  3655                           
  3656                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x1D;
  3657  0679  301D               	movlw	29
  3658  067A  009D               	movwf	29	;volatile
  3659  067B                     __ccov11_end_blk2:
  3660  067B                     __ccov12_start_blk3:
  3661  067B                     l46:
  3662  067B  15F2               	bsf	__ccovbit3_4/(0+8),__ccovbit3_4& (0+7)	;volatile
  3663  067C  0008               	return
  3664  067D                     __end_of_ADC_Initialize:
  3665  067D                     
  3666                           	psect	text16
  3667  0348                     __ptext16:	
  3668 ;; *************** function _hardware_work *****************
  3669 ;; Defined at:
  3670 ;;		line 566 in file "main.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;		None
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;		None
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		None
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMMON   BANK0   BANK1
  3684 ;;      Params:         0       0       0
  3685 ;;      Locals:         0       0       0
  3686 ;;      Temps:          0       0       0
  3687 ;;      Totals:         0       0       0
  3688 ;;Total ram usage:        0 bytes
  3689 ;; Hardware stack levels used: 1
  3690 ;; Hardware stack levels required when called: 7
  3691 ;; This function calls:
  3692 ;;		Nothing
  3693 ;; This function is called by:
  3694 ;;		_main
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698  0348                     _hardware_work:	
  3699                           ;psect for function _hardware_work
  3700                           
  3701                           
  3702                           ;incstack = 0
  3703                           ; Regs used in _hardware_work: []
  3704  0348                     l1666:
  3705                           
  3706                           ;main.c: 567:     LATCbits.LATC0 = ff.bits.ALARM_ON;
  3707  0348  1879               	btfsc	_ff,0
  3708  0349  2B4B               	goto	u1031
  3709  034A  2B4E               	goto	u1030
  3710  034B                     u1031:
  3711  034B  0022               	movlb	2	; select bank2
  3712  034C  140E               	bsf	14,0	;volatile
  3713  034D  2B50               	goto	u1044
  3714  034E                     u1030:
  3715  034E  0022               	movlb	2	; select bank2
  3716  034F  100E               	bcf	14,0	;volatile
  3717  0350                     u1044:
  3718                           
  3719                           ;main.c: 568:     LATCbits.LATC1 = ff.bits.MEAS_ON;
  3720  0350  1A7C               	btfsc	_ff+3,4
  3721  0351  2B53               	goto	u1051
  3722  0352  2B56               	goto	u1050
  3723  0353                     u1051:
  3724  0353  0022               	movlb	2	; select bank2
  3725  0354  148E               	bsf	14,1	;volatile
  3726  0355  2B58               	goto	u1064
  3727  0356                     u1050:
  3728  0356  0022               	movlb	2	; select bank2
  3729  0357  108E               	bcf	14,1	;volatile
  3730  0358                     u1064:
  3731                           
  3732                           ;main.c: 569:     LATCbits.LATC4 = ff.bits.RELE_CONTROL_ON;
  3733  0358  1B7A               	btfsc	_ff+1,6
  3734  0359  2B5B               	goto	u1071
  3735  035A  2B5E               	goto	u1070
  3736  035B                     u1071:
  3737  035B  0022               	movlb	2	; select bank2
  3738  035C  160E               	bsf	14,4	;volatile
  3739  035D  2B60               	goto	u1084
  3740  035E                     u1070:
  3741  035E  0022               	movlb	2	; select bank2
  3742  035F  120E               	bcf	14,4	;volatile
  3743  0360                     u1084:
  3744                           
  3745                           ;main.c: 570:     LATCbits.LATC5 = ff.bits.RELE_POWER_ON;
  3746  0360  1AFA               	btfsc	_ff+1,5
  3747  0361  2B63               	goto	u1091
  3748  0362  2B66               	goto	u1090
  3749  0363                     u1091:
  3750  0363  0022               	movlb	2	; select bank2
  3751  0364  168E               	bsf	14,5	;volatile
  3752  0365  2B68               	goto	u1104
  3753  0366                     u1090:
  3754  0366  0022               	movlb	2	; select bank2
  3755  0367  128E               	bcf	14,5	;volatile
  3756  0368                     u1104:
  3757                           
  3758                           ;main.c: 571:     LATAbits.LATA4 = ff.bits.LED_ON;
  3759  0368  197C               	btfsc	_ff+3,2
  3760  0369  2B6B               	goto	u1111
  3761  036A  2B6E               	goto	u1110
  3762  036B                     u1111:
  3763  036B  0022               	movlb	2	; select bank2
  3764  036C  160C               	bsf	12,4	;volatile
  3765  036D  2B70               	goto	u1124
  3766  036E                     u1110:
  3767  036E  0022               	movlb	2	; select bank2
  3768  036F  120C               	bcf	12,4	;volatile
  3769  0370                     u1124:
  3770                           
  3771                           ;main.c: 573:     if (ff.bits.TONE_ON) {
  3772  0370  1CFB               	btfss	_ff+2,1
  3773  0371  2B73               	goto	u1131
  3774  0372  2B74               	goto	u1130
  3775  0373                     u1131:
  3776  0373  2B77               	goto	l467
  3777  0374                     __ccov301_end_blk0:
  3778  0374                     u1130:
  3779  0374                     __ccov302_start_blk1:
  3780  0374                     l1668:
  3781  0374  0020               	movlb	0	; select bank0
  3782  0375  1723               	bsf	__ccovbit1_152/(0+8),__ccovbit1_152& (0+7)	;volatile
  3783                           
  3784                           ;main.c: 574:         INTCONbits.TMR0IE = 1;
  3785  0376  168B               	bsf	11,5	;volatile
  3786  0377                     __ccov302_end_blk1:
  3787  0377                     __ccov303_start_blk2:
  3788  0377                     l467:	
  3789                           ;main.c: 575:     };
  3790                           
  3791                           
  3792                           ;main.c: 576:     if (ff.bits.TONE_OFF) {
  3793  0377  1D7B               	btfss	_ff+2,2
  3794  0378  2B7A               	goto	u1141
  3795  0379  2B7B               	goto	u1140
  3796  037A                     u1141:
  3797  037A  2B80               	goto	l471
  3798  037B                     __ccov303_end_blk2:
  3799  037B                     u1140:
  3800  037B                     __ccov304_start_blk3:
  3801  037B                     l1670:
  3802                           
  3803                           ;main.c: 577:         INTCONbits.TMR0IE = 0;
  3804  037B  128B               	bcf	11,5	;volatile
  3805  037C                     __ccov304_end_blk3:
  3806  037C                     __ccov305_start_blk4:
  3807  037C                     l469:	
  3808                           ;main.c: 578:         do { LATAbits.LATA5 = 0; } while(0);
  3809                           
  3810  037C  0020               	movlb	0	; select bank0
  3811  037D  16A3               	bsf	__ccovbit4_153/(0+8),__ccovbit4_153& (0+7)	;volatile
  3812  037E  0022               	movlb	2	; select bank2
  3813  037F  128C               	bcf	12,5	;volatile
  3814  0380                     __ccov305_end_blk4:
  3815  0380                     __ccov306_start_blk7:
  3816  0380                     l471:
  3817  0380  0020               	movlb	0	; select bank0
  3818  0381  1623               	bsf	__ccovbit7_154/(0+8),__ccovbit7_154& (0+7)	;volatile
  3819  0382  0008               	return
  3820  0383                     __end_of_hardware_work:
  3821  0383                     
  3822                           	psect	text17
  3823  0131                     __ptext17:	
  3824 ;; *************** function _get_wsp *****************
  3825 ;; Defined at:
  3826 ;;		line 591 in file "main.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;		None
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;  res             2    0[BANK0 ] unsigned int 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  1    wreg      void 
  3833 ;; Registers used:
  3834 ;;		wreg, status,2, status,0, pclath, cstack
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMMON   BANK0   BANK1
  3840 ;;      Params:         0       0       0
  3841 ;;      Locals:         0       2       0
  3842 ;;      Temps:          2       0       0
  3843 ;;      Totals:         2       2       0
  3844 ;;Total ram usage:        4 bytes
  3845 ;; Hardware stack levels used: 1
  3846 ;; Hardware stack levels required when called: 8
  3847 ;; This function calls:
  3848 ;;		_ADC_GetConversion
  3849 ;;		_clear_alarm
  3850 ;;		_start_alarm
  3851 ;; This function is called by:
  3852 ;;		_main
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856  0131                     _get_wsp:	
  3857                           ;psect for function _get_wsp
  3858                           
  3859                           
  3860                           ;incstack = 0
  3861                           ; Regs used in _get_wsp: [wreg+status,2+status,0+pclath+cstack]
  3862  0131                     l2598:
  3863                           
  3864                           ;main.c: 593:     if (ff.bits.ALLOW_MEASURE) {
  3865  0131  1E79               	btfss	_ff,4
  3866  0132  2934               	goto	u2701
  3867  0133  2935               	goto	u2700
  3868  0134                     u2701:
  3869  0134  2991               	goto	l495
  3870  0135                     __ccov310_end_blk0:
  3871  0135                     u2700:
  3872  0135                     __ccov311_start_blk1:
  3873  0135                     l482:	
  3874                           ;main.c: 595:         static signed char bad_measures_counter = 0;;main.c: 596:         
      +                          do { LATCbits.LATC1 = 1; } while(0);
  3875                           
  3876  0135  0022               	movlb	2	; select bank2
  3877  0136  148E               	bsf	14,1	;volatile
  3878  0137                     __ccov311_end_blk1:
  3879  0137                     __ccov312_start_blk3:
  3880  0137                     l484:	
  3881                           ;main.c: 597:         do { ANSELCbits.ANSC3 = 1; } while(0);
  3882                           
  3883  0137  0023               	movlb	3	; select bank3
  3884  0138  158E               	bsf	14,3	;volatile
  3885  0139                     __ccov312_end_blk3:
  3886  0139                     __ccov313_start_blk5:
  3887  0139                     l2600:
  3888                           
  3889                           ;main.c: 598:         _delay((unsigned long)((1)*(16000000/4000.0)));
  3890  0139  3006               	movlw	6
  3891  013A  00F7               	movwf	??_get_wsp
  3892  013B  3030               	movlw	48
  3893  013C                     u2827:
  3894  013C  0B89               	decfsz	9,f
  3895  013D  293C               	goto	u2827
  3896  013E  0BF7               	decfsz	??_get_wsp,f
  3897  013F  293C               	goto	u2827
  3898  0140  3200               	nop2
  3899  0141                     __ccov313_end_blk5:
  3900  0141                     __ccov314_start_blk6:
  3901  0141                     l2602:
  3902                           
  3903                           ;main.c: 599:         unsigned res = ADC_GetConversion(PIN_WSP_STATE);
  3904  0141  3007               	movlw	7
  3905  0142  3185  251D  3181   	fcall	_ADC_GetConversion
  3906  0145  00F7               	movwf	??_get_wsp
  3907  0146  01F8               	clrf	??_get_wsp+1
  3908  0147  0877               	movf	??_get_wsp,w
  3909  0148  0020               	movlb	0	; select bank0
  3910  0149  00D8               	movwf	get_wsp@res
  3911  014A  0878               	movf	??_get_wsp+1,w
  3912  014B  00D9               	movwf	get_wsp@res+1
  3913  014C                     __ccov314_end_blk6:
  3914  014C                     __ccov315_start_blk8:
  3915  014C                     l2604:
  3916  014C  0023               	movlb	3	; select bank3
  3917  014D  118E               	bcf	14,3	;volatile
  3918  014E                     __ccov315_end_blk8:
  3919  014E                     __ccov316_start_blk11:
  3920  014E                     l2606:
  3921  014E  0022               	movlb	2	; select bank2
  3922  014F  108E               	bcf	14,1	;volatile
  3923  0150                     __ccov316_end_blk11:
  3924  0150                     __ccov317_start_blk13:
  3925  0150                     l2608:
  3926                           
  3927                           ;main.c: 602:         if (res < BAD_WSP_VOLTAGE) {
  3928  0150  3000               	movlw	0
  3929  0151  0020               	movlb	0	; select bank0
  3930  0152  0259               	subwf	get_wsp@res+1,w
  3931  0153  3080               	movlw	128
  3932  0154  1903               	skipnz
  3933  0155  0258               	subwf	get_wsp@res,w
  3934  0156  1803               	skipnc
  3935  0157  2959               	goto	u2711
  3936  0158  295A               	goto	u2710
  3937  0159                     u2711:
  3938  0159  2960               	goto	l2612
  3939  015A                     __ccov317_end_blk13:
  3940  015A                     u2710:
  3941  015A                     __ccov318_start_blk14:
  3942  015A                     l2610:
  3943  015A  1523               	bsf	__ccovbit14_156/(0+8),__ccovbit14_156& (0+7)	;volatile
  3944                           
  3945                           ;main.c: 603:             bad_measures_counter++;
  3946  015B  3001               	movlw	1
  3947  015C  00F7               	movwf	??_get_wsp
  3948  015D  0877               	movf	??_get_wsp,w
  3949  015E  07CB               	addwf	get_wsp@bad_measures_counter,f
  3950                           
  3951                           ;main.c: 604:         } else {
  3952  015F  296F               	goto	l2616
  3953  0160                     __ccov318_end_blk14:
  3954  0160                     __ccov319_start_blk16:
  3955  0160                     l2612:
  3956  0160  14A3               	bsf	__ccovbit16_157/(0+8),__ccovbit16_157& (0+7)	;volatile
  3957                           
  3958                           ;main.c: 605:             if (res > GOOD_WSP_VOLTAGE) {
  3959  0161  3000               	movlw	0
  3960  0162  0259               	subwf	get_wsp@res+1,w
  3961  0163  308F               	movlw	143
  3962  0164  1903               	skipnz
  3963  0165  0258               	subwf	get_wsp@res,w
  3964  0166  1C03               	skipc
  3965  0167  2969               	goto	u2721
  3966  0168  296A               	goto	u2720
  3967  0169                     u2721:
  3968  0169  296F               	goto	l2616
  3969  016A                     __ccov319_end_blk16:
  3970  016A                     u2720:
  3971  016A                     __ccov320_start_blk17:
  3972  016A                     l2614:
  3973  016A  1423               	bsf	__ccovbit17_158/(0+8),__ccovbit17_158& (0+7)	;volatile
  3974                           
  3975                           ;main.c: 606:                 bad_measures_counter--;
  3976  016B  30FF               	movlw	255
  3977  016C  00F7               	movwf	??_get_wsp
  3978  016D  0877               	movf	??_get_wsp,w
  3979  016E  07CB               	addwf	get_wsp@bad_measures_counter,f
  3980  016F                     __ccov320_end_blk17:
  3981  016F                     __ccov321_start_blk20:
  3982  016F                     l2616:
  3983                           
  3984                           ;main.c: 609:         if (bad_measures_counter > WSP_MEAS_COUNT) {
  3985  016F  084B               	movf	get_wsp@bad_measures_counter,w
  3986  0170  3A80               	xorlw	128
  3987  0171  3E7B               	addlw	-133
  3988  0172  1C03               	skipc
  3989  0173  2975               	goto	u2731
  3990  0174  2976               	goto	u2730
  3991  0175                     u2731:
  3992  0175  297F               	goto	l2622
  3993  0176                     __ccov321_end_blk20:
  3994  0176                     u2730:
  3995  0176                     __ccov322_start_blk21:
  3996  0176                     l2618:
  3997                           
  3998                           ;main.c: 610:             start_alarm();
  3999  0176  3186  2685  3181   	fcall	_start_alarm
  4000  0179                     __ccov322_end_blk21:
  4001  0179                     __ccov323_start_blk22:
  4002  0179                     l2620:
  4003  0179  0020               	movlb	0	; select bank0
  4004  017A  17A2               	bsf	__ccovbit22_159/(0+8),__ccovbit22_159& (0+7)	;volatile
  4005                           
  4006                           ;main.c: 611:             bad_measures_counter = WSP_MEAS_COUNT;
  4007  017B  3004               	movlw	4
  4008  017C  00F7               	movwf	??_get_wsp
  4009  017D  0877               	movf	??_get_wsp,w
  4010  017E  00CB               	movwf	get_wsp@bad_measures_counter
  4011  017F                     __ccov323_end_blk22:
  4012  017F                     __ccov324_start_blk24:
  4013  017F                     l2622:
  4014                           
  4015                           ;main.c: 613:         if (bad_measures_counter < -WSP_MEAS_COUNT) {
  4016  017F  084B               	movf	get_wsp@bad_measures_counter,w
  4017  0180  3A80               	xorlw	128
  4018  0181  3E84               	addlw	132
  4019  0182  1803               	skipnc
  4020  0183  2985               	goto	u2741
  4021  0184  2986               	goto	u2740
  4022  0185                     u2741:
  4023  0185  298F               	goto	l2628
  4024  0186                     __ccov324_end_blk24:
  4025  0186                     u2740:
  4026  0186                     __ccov325_start_blk25:
  4027  0186                     l2624:
  4028                           
  4029                           ;main.c: 614:             clear_alarm();
  4030  0186  3186  26B2  3181   	fcall	_clear_alarm
  4031  0189                     __ccov325_end_blk25:
  4032  0189                     __ccov326_start_blk26:
  4033  0189                     l2626:
  4034  0189  0020               	movlb	0	; select bank0
  4035  018A  1722               	bsf	__ccovbit26_160/(0+8),__ccovbit26_160& (0+7)	;volatile
  4036                           
  4037                           ;main.c: 615:             bad_measures_counter = -WSP_MEAS_COUNT;
  4038  018B  30FC               	movlw	252
  4039  018C  00F7               	movwf	??_get_wsp
  4040  018D  0877               	movf	??_get_wsp,w
  4041  018E  00CB               	movwf	get_wsp@bad_measures_counter
  4042  018F                     __ccov326_end_blk26:
  4043  018F                     __ccov327_start_blk28:
  4044  018F                     l2628:
  4045  018F  16A2               	bsf	__ccovbit28_161/(0+8),__ccovbit28_161& (0+7)	;volatile
  4046                           
  4047                           ;main.c: 617:         ff.bits.ALLOW_MEASURE = 0;
  4048  0190  1279               	bcf	_ff,4
  4049  0191                     __ccov327_end_blk28:
  4050  0191                     __ccov328_start_blk30:
  4051  0191                     l495:
  4052  0191  0020               	movlb	0	; select bank0
  4053  0192  1622               	bsf	__ccovbit30_162/(0+8),__ccovbit30_162& (0+7)	;volatile
  4054  0193  0008               	return
  4055  0194                     __end_of_get_wsp:
  4056  0194                     
  4057                           	psect	text18
  4058  0685                     __ptext18:	
  4059 ;; *************** function _start_alarm *****************
  4060 ;; Defined at:
  4061 ;;		line 321 in file "main.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;		None
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;		None
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  1    wreg      void 
  4068 ;; Registers used:
  4069 ;;		status,2
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMMON   BANK0   BANK1
  4075 ;;      Params:         0       0       0
  4076 ;;      Locals:         0       0       0
  4077 ;;      Temps:          0       0       0
  4078 ;;      Totals:         0       0       0
  4079 ;;Total ram usage:        0 bytes
  4080 ;; Hardware stack levels used: 1
  4081 ;; Hardware stack levels required when called: 7
  4082 ;; This function calls:
  4083 ;;		Nothing
  4084 ;; This function is called by:
  4085 ;;		_get_wsp
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089  0685                     _start_alarm:	
  4090                           ;psect for function _start_alarm
  4091                           
  4092                           
  4093                           ;incstack = 0
  4094                           ; Regs used in _start_alarm: [status,2]
  4095  0685                     l2586:
  4096                           
  4097                           ;main.c: 322:     ff.bits.ALARM_ON = 1;
  4098  0685  1479               	bsf	_ff,0
  4099                           
  4100                           ;main.c: 323:     ff.bits.ALARM_OFF = 0;
  4101  0686  10F9               	bcf	_ff,1
  4102                           
  4103                           ;main.c: 324:     ff.bits.MELODY_ON = 1;
  4104  0687  177C               	bsf	_ff+3,6
  4105                           
  4106                           ;main.c: 325:     ff.bits.SIREN = 1;
  4107  0688  15FB               	bsf	_ff+2,3
  4108  0689                     __ccov182_end_blk0:
  4109  0689                     __ccov183_start_blk1:
  4110  0689                     l2588:
  4111                           
  4112                           ;main.c: 326:     sec_count=0;
  4113  0689  0020               	movlb	0	; select bank0
  4114  068A  01D2               	clrf	_sec_count
  4115  068B                     __ccov183_end_blk1:
  4116  068B                     __ccov184_start_blk2:
  4117  068B                     l379:
  4118  068B  172C               	bsf	__ccovbit2_80/(0+8),__ccovbit2_80& (0+7)	;volatile
  4119  068C  0008               	return
  4120  068D                     __end_of_start_alarm:
  4121  068D                     
  4122                           	psect	text19
  4123  06B2                     __ptext19:	
  4124 ;; *************** function _clear_alarm *****************
  4125 ;; Defined at:
  4126 ;;		line 329 in file "main.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;		None
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;		None
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      void 
  4133 ;; Registers used:
  4134 ;;		None
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMMON   BANK0   BANK1
  4140 ;;      Params:         0       0       0
  4141 ;;      Locals:         0       0       0
  4142 ;;      Temps:          0       0       0
  4143 ;;      Totals:         0       0       0
  4144 ;;Total ram usage:        0 bytes
  4145 ;; Hardware stack levels used: 1
  4146 ;; Hardware stack levels required when called: 7
  4147 ;; This function calls:
  4148 ;;		Nothing
  4149 ;; This function is called by:
  4150 ;;		_get_wsp
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154  06B2                     _clear_alarm:	
  4155                           ;psect for function _clear_alarm
  4156                           
  4157                           
  4158                           ;incstack = 0
  4159                           ; Regs used in _clear_alarm: []
  4160  06B2                     l2590:
  4161                           
  4162                           ;main.c: 330:     ff.bits.ALARM_ON = 0;
  4163  06B2  1079               	bcf	_ff,0
  4164                           
  4165                           ;main.c: 331:     ff.bits.ALARM_OFF = 1;
  4166  06B3  14F9               	bsf	_ff,1
  4167  06B4                     __ccov185_end_blk0:
  4168  06B4                     __ccov186_start_blk1:
  4169  06B4                     l382:
  4170  06B4  0020               	movlb	0	; select bank0
  4171  06B5  16AC               	bsf	__ccovbit1_81/(0+8),__ccovbit1_81& (0+7)	;volatile
  4172  06B6  0008               	return
  4173  06B7                     __end_of_clear_alarm:
  4174  06B7                     
  4175                           	psect	text20
  4176  051D                     __ptext20:	
  4177 ;; *************** function _ADC_GetConversion *****************
  4178 ;; Defined at:
  4179 ;;		line 112 in file "mcc_generated_files/adc.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;  channel         1    wreg     enum E2178
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;  channel         1    3[COMMON] enum E2178
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  1    wreg      unsigned char 
  4186 ;; Registers used:
  4187 ;;		wreg, status,2, status,0
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMMON   BANK0   BANK1
  4193 ;;      Params:         0       0       0
  4194 ;;      Locals:         1       0       0
  4195 ;;      Temps:          1       0       0
  4196 ;;      Totals:         2       0       0
  4197 ;;Total ram usage:        2 bytes
  4198 ;; Hardware stack levels used: 1
  4199 ;; Hardware stack levels required when called: 7
  4200 ;; This function calls:
  4201 ;;		Nothing
  4202 ;; This function is called by:
  4203 ;;		_get_wsp
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207  051D                     _ADC_GetConversion:	
  4208                           ;psect for function _ADC_GetConversion
  4209                           
  4210                           
  4211                           ;incstack = 0
  4212                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  4213                           ;ADC_GetConversion@channel stored from wreg
  4214  051D  00F6               	movwf	ADC_GetConversion@channel
  4215  051E                     l2574:
  4216                           
  4217                           ;mcc_generated_files/adc.c: 112: char ADC_GetConversion(adc_channel_t channel);mcc_gener
      +                          ated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = channel;
  4218  051E  0876               	movf	ADC_GetConversion@channel,w
  4219  051F  00F5               	movwf	??_ADC_GetConversion
  4220  0520  0DF5               	rlf	??_ADC_GetConversion,f
  4221  0521  0DF5               	rlf	??_ADC_GetConversion,f
  4222  0522  0021               	movlb	1	; select bank1
  4223  0523  081D               	movf	29,w	;volatile
  4224  0524  0675               	xorwf	??_ADC_GetConversion,w
  4225  0525  3983               	andlw	-125
  4226  0526  0675               	xorwf	??_ADC_GetConversion,w
  4227  0527  009D               	movwf	29	;volatile
  4228  0528                     __ccov22_end_blk0:
  4229  0528                     __ccov23_start_blk1:
  4230  0528                     l2576:
  4231                           
  4232                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  4233  0528  141D               	bsf	29,0	;volatile
  4234  0529                     __ccov23_end_blk1:
  4235  0529                     __ccov24_start_blk2:
  4236  0529                     l2578:
  4237                           
  4238                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  4239  0529  3006               	movlw	6
  4240  052A                     u2837:
  4241  052A  0B89               	decfsz	9,f
  4242  052B  2D2A               	goto	u2837
  4243  052C  3200               	nop2
  4244  052D                     __ccov24_end_blk2:
  4245  052D                     __ccov25_start_blk3:
  4246  052D                     l2580:
  4247                           
  4248                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  4249  052D  0021               	movlb	1	; select bank1
  4250  052E  149D               	bsf	29,1	;volatile
  4251  052F                     __ccov25_end_blk3:
  4252  052F                     __ccov26_start_blk5:
  4253  052F                     l61:	
  4254                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  4255                           
  4256                           
  4257                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  4258  052F  189D               	btfsc	29,1	;volatile
  4259  0530  2D32               	goto	u2681
  4260  0531  2D33               	goto	u2680
  4261  0532                     u2681:
  4262  0532  2D2F               	goto	l61
  4263  0533                     __ccov26_end_blk5:
  4264  0533                     u2680:
  4265  0533                     __ccov27_start_blk7:
  4266  0533                     l2582:
  4267                           
  4268                           ;mcc_generated_files/adc.c: 132:     return (ADRESH);
  4269  0533  081C               	movf	28,w	;volatile
  4270  0534                     __ccov27_end_blk7:
  4271  0534                     __ccov28_start_blk9:
  4272  0534                     l64:
  4273  0534  1572               	bsf	__ccovbit9_5/(0+8),__ccovbit9_5& (0+7)	;volatile
  4274  0535  0008               	return
  4275  0536                     __end_of_ADC_GetConversion:
  4276  0536                     
  4277                           	psect	text21
  4278  0383                     __ptext21:	
  4279 ;; *************** function _get_jump *****************
  4280 ;; Defined at:
  4281 ;;		line 686 in file "main.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;		None
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;		None
  4286 ;; Return value:  Size  Location     Type
  4287 ;;                  1    wreg      void 
  4288 ;; Registers used:
  4289 ;;		wreg, status,2, status,0
  4290 ;; Tracked objects:
  4291 ;;		On entry : 0/0
  4292 ;;		On exit  : 0/0
  4293 ;;		Unchanged: 0/0
  4294 ;; Data sizes:     COMMON   BANK0   BANK1
  4295 ;;      Params:         0       0       0
  4296 ;;      Locals:         0       0       0
  4297 ;;      Temps:          1       0       0
  4298 ;;      Totals:         1       0       0
  4299 ;;Total ram usage:        1 bytes
  4300 ;; Hardware stack levels used: 1
  4301 ;; Hardware stack levels required when called: 7
  4302 ;; This function calls:
  4303 ;;		Nothing
  4304 ;; This function is called by:
  4305 ;;		_main
  4306 ;; This function uses a non-reentrant model
  4307 ;;
  4308                           
  4309  0383                     _get_jump:	
  4310                           ;psect for function _get_jump
  4311                           
  4312                           
  4313                           ;incstack = 0
  4314                           ; Regs used in _get_jump: [wreg+status,2+status,0]
  4315  0383                     l2412:
  4316                           
  4317                           ;main.c: 688:     static signed char jump_counter;;main.c: 690:     if (ff.bits.ALLOW_JU
      +                          MP) {
  4318  0383  1F79               	btfss	_ff,6
  4319  0384  2B86               	goto	u2461
  4320  0385  2B87               	goto	u2460
  4321  0386                     u2461:
  4322  0386  2BBB               	goto	l529
  4323  0387                     __ccov348_end_blk0:
  4324  0387                     u2460:
  4325  0387                     __ccov349_start_blk1:
  4326  0387                     l520:	
  4327                           ;main.c: 692:         do { ANSELAbits.ANSA1 = 0; } while(0);
  4328                           
  4329  0387  0023               	movlb	3	; select bank3
  4330  0388  108C               	bcf	12,1	;volatile
  4331  0389                     __ccov349_end_blk1:
  4332  0389                     __ccov350_start_blk3:
  4333  0389                     l522:	
  4334                           ;main.c: 693:         do { TRISAbits.TRISA1 = 1; } while(0);
  4335                           
  4336  0389  0021               	movlb	1	; select bank1
  4337  038A  148C               	bsf	12,1	;volatile
  4338  038B                     __ccov350_end_blk3:
  4339  038B                     __ccov351_start_blk4:
  4340  038B                     l523:
  4341                           
  4342                           ;main.c: 694:         if (PORTAbits.RA1) jump_counter++;
  4343  038B  0020               	movlb	0	; select bank0
  4344  038C  1C8C               	btfss	12,1	;volatile
  4345  038D  2B8F               	goto	u2471
  4346  038E  2B90               	goto	u2470
  4347  038F                     u2471:
  4348  038F  2B96               	goto	l2416
  4349  0390                     __ccov351_end_blk4:
  4350  0390                     u2470:
  4351  0390                     __ccov352_start_blk5:
  4352  0390                     l2414:
  4353  0390  1621               	bsf	__ccovbit5_170/(0+8),__ccovbit5_170& (0+7)	;volatile
  4354  0391  3001               	movlw	1
  4355  0392  00F5               	movwf	??_get_jump
  4356  0393  0875               	movf	??_get_jump,w
  4357  0394  07C9               	addwf	get_jump@jump_counter,f
  4358  0395  2B9B               	goto	l2418
  4359  0396                     __ccov352_end_blk5:
  4360  0396                     __ccov353_start_blk7:
  4361  0396                     l2416:
  4362  0396  15A1               	bsf	__ccovbit7_171/(0+8),__ccovbit7_171& (0+7)	;volatile
  4363  0397  30FF               	movlw	255
  4364  0398  00F5               	movwf	??_get_jump
  4365  0399  0875               	movf	??_get_jump,w
  4366  039A  07C9               	addwf	get_jump@jump_counter,f
  4367  039B                     __ccov353_end_blk7:
  4368  039B                     __ccov354_start_blk9:
  4369  039B                     l2418:
  4370                           
  4371                           ;main.c: 703:         if (jump_counter > JUMP_MEAS_COUNT) {
  4372  039B  0849               	movf	get_jump@jump_counter,w
  4373  039C  3A80               	xorlw	128
  4374  039D  3E75               	addlw	-139
  4375  039E  1C03               	skipc
  4376  039F  2BA1               	goto	u2481
  4377  03A0  2BA2               	goto	u2480
  4378  03A1                     u2481:
  4379  03A1  2BAA               	goto	l2426
  4380  03A2                     __ccov354_end_blk9:
  4381  03A2                     u2480:
  4382  03A2                     __ccov355_start_blk10:
  4383  03A2                     l2420:
  4384                           
  4385                           ;main.c: 704:             jump_counter = JUMP_MEAS_COUNT;
  4386  03A2  300A               	movlw	10
  4387  03A3  00F5               	movwf	??_get_jump
  4388  03A4  0875               	movf	??_get_jump,w
  4389  03A5  00C9               	movwf	get_jump@jump_counter
  4390  03A6                     __ccov355_end_blk10:
  4391  03A6                     __ccov356_start_blk11:
  4392  03A6                     l2422:
  4393                           
  4394                           ;main.c: 705:             ff.bits.JUMP_LOW = 0;
  4395  03A6  13F9               	bcf	_ff,7
  4396  03A7                     __ccov356_end_blk11:
  4397  03A7                     __ccov357_start_blk12:
  4398  03A7                     l2424:
  4399  03A7  1521               	bsf	__ccovbit12_172/(0+8),__ccovbit12_172& (0+7)	;volatile
  4400                           
  4401                           ;main.c: 706:             ff.bits.JUMP_HIGH = 1;
  4402  03A8  147A               	bsf	_ff+1,0
  4403                           
  4404                           ;main.c: 707:         } else if (jump_counter<-JUMP_MEAS_COUNT) {
  4405  03A9  2BB9               	goto	l2434
  4406  03AA                     __ccov357_end_blk12:
  4407  03AA                     __ccov358_start_blk14:
  4408  03AA                     l2426:
  4409  03AA  14A1               	bsf	__ccovbit14_173/(0+8),__ccovbit14_173& (0+7)	;volatile
  4410  03AB  0849               	movf	get_jump@jump_counter,w
  4411  03AC  3A80               	xorlw	128
  4412  03AD  3E8A               	addlw	138
  4413  03AE  1803               	skipnc
  4414  03AF  2BB1               	goto	u2491
  4415  03B0  2BB2               	goto	u2490
  4416  03B1                     u2491:
  4417  03B1  2BB9               	goto	l2434
  4418  03B2                     __ccov358_end_blk14:
  4419  03B2                     u2490:
  4420  03B2                     __ccov359_start_blk15:
  4421  03B2                     l2428:
  4422                           
  4423                           ;main.c: 708:             jump_counter = -JUMP_MEAS_COUNT;
  4424  03B2  30F6               	movlw	246
  4425  03B3  00F5               	movwf	??_get_jump
  4426  03B4  0875               	movf	??_get_jump,w
  4427  03B5  00C9               	movwf	get_jump@jump_counter
  4428  03B6                     __ccov359_end_blk15:
  4429  03B6                     __ccov360_start_blk16:
  4430  03B6                     l2430:
  4431                           
  4432                           ;main.c: 709:             ff.bits.JUMP_LOW = 1;
  4433  03B6  17F9               	bsf	_ff,7
  4434  03B7                     __ccov360_end_blk16:
  4435  03B7                     __ccov361_start_blk17:
  4436  03B7                     l2432:
  4437  03B7  1421               	bsf	__ccovbit17_174/(0+8),__ccovbit17_174& (0+7)	;volatile
  4438                           
  4439                           ;main.c: 710:             ff.bits.JUMP_HIGH = 0;
  4440  03B8  107A               	bcf	_ff+1,0
  4441  03B9                     __ccov361_end_blk17:
  4442  03B9                     __ccov362_start_blk20:
  4443  03B9                     l2434:
  4444  03B9  17A0               	bsf	__ccovbit20_175/(0+8),__ccovbit20_175& (0+7)	;volatile
  4445                           
  4446                           ;main.c: 712:         ff.bits.ALLOW_JUMP = 0;
  4447  03BA  1379               	bcf	_ff,6
  4448  03BB                     __ccov362_end_blk20:
  4449  03BB                     __ccov363_start_blk22:
  4450  03BB                     l529:
  4451  03BB  0020               	movlb	0	; select bank0
  4452  03BC  1720               	bsf	__ccovbit22_176/(0+8),__ccovbit22_176& (0+7)	;volatile
  4453  03BD  0008               	return
  4454  03BE                     __end_of_get_jump:
  4455  03BE                     
  4456                           	psect	text22
  4457  01F3                     __ptext22:	
  4458 ;; *************** function _get_fun *****************
  4459 ;; Defined at:
  4460 ;;		line 621 in file "main.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;		None
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;		None
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		wreg, status,2, status,0
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMMON   BANK0   BANK1
  4474 ;;      Params:         0       0       0
  4475 ;;      Locals:         0       0       0
  4476 ;;      Temps:          1       0       0
  4477 ;;      Totals:         1       0       0
  4478 ;;Total ram usage:        1 bytes
  4479 ;; Hardware stack levels used: 1
  4480 ;; Hardware stack levels required when called: 7
  4481 ;; This function calls:
  4482 ;;		Nothing
  4483 ;; This function is called by:
  4484 ;;		_main
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488  01F3                     _get_fun:	
  4489                           ;psect for function _get_fun
  4490                           
  4491                           
  4492                           ;incstack = 0
  4493                           ; Regs used in _get_fun: [wreg+status,2+status,0]
  4494  01F3                     l2378:
  4495                           
  4496                           ;main.c: 623:     if (ff.bits.ALLOW_FUN) {
  4497  01F3  1EF9               	btfss	_ff,5
  4498  01F4  29F6               	goto	u2421
  4499  01F5  29F7               	goto	u2420
  4500  01F6                     u2421:
  4501  01F6  2A38               	goto	l514
  4502  01F7                     __ccov329_end_blk0:
  4503  01F7                     u2420:
  4504  01F7                     __ccov330_start_blk1:
  4505  01F7                     l501:	
  4506                           ;main.c: 625:         static signed char fun_counter;;main.c: 626:         do { LATCbits
      +                          .LATC1 = 1; } while(0);
  4507                           
  4508  01F7  0022               	movlb	2	; select bank2
  4509  01F8  148E               	bsf	14,1	;volatile
  4510  01F9                     __ccov330_end_blk1:
  4511  01F9                     __ccov331_start_blk3:
  4512  01F9                     l2380:
  4513                           
  4514                           ;main.c: 627:         _delay((unsigned long)((1)*(16000000/4000.0)));
  4515  01F9  3006               	movlw	6
  4516  01FA  00F5               	movwf	??_get_fun
  4517  01FB  3030               	movlw	48
  4518  01FC                     u2847:
  4519  01FC  0B89               	decfsz	9,f
  4520  01FD  29FC               	goto	u2847
  4521  01FE  0BF5               	decfsz	??_get_fun,f
  4522  01FF  29FC               	goto	u2847
  4523  0200  3200               	nop2
  4524  0201                     __ccov331_end_blk3:
  4525  0201                     __ccov332_start_blk5:
  4526  0201                     l2382:
  4527  0201  0023               	movlb	3	; select bank3
  4528  0202  110E               	bcf	14,2	;volatile
  4529  0203                     __ccov332_end_blk5:
  4530  0203                     __ccov333_start_blk8:
  4531  0203                     l2384:
  4532  0203  0021               	movlb	1	; select bank1
  4533  0204  150E               	bsf	14,2	;volatile
  4534  0205                     __ccov333_end_blk8:
  4535  0205                     __ccov334_start_blk10:
  4536  0205                     l2386:
  4537                           
  4538                           ;main.c: 630:         if (PORTCbits.RC2) fun_counter--;
  4539  0205  0020               	movlb	0	; select bank0
  4540  0206  1D0E               	btfss	14,2	;volatile
  4541  0207  2A09               	goto	u2431
  4542  0208  2A0A               	goto	u2430
  4543  0209                     u2431:
  4544  0209  2A10               	goto	l2390
  4545  020A                     __ccov334_end_blk10:
  4546  020A                     u2430:
  4547  020A                     __ccov335_start_blk11:
  4548  020A                     l2388:
  4549  020A  15A2               	bsf	__ccovbit11_163/(0+8),__ccovbit11_163& (0+7)	;volatile
  4550  020B  30FF               	movlw	255
  4551  020C  00F5               	movwf	??_get_fun
  4552  020D  0875               	movf	??_get_fun,w
  4553  020E  07CA               	addwf	get_fun@fun_counter,f
  4554  020F  2A15               	goto	l2392
  4555  0210                     __ccov335_end_blk11:
  4556  0210                     __ccov336_start_blk13:
  4557  0210                     l2390:
  4558  0210  1522               	bsf	__ccovbit13_164/(0+8),__ccovbit13_164& (0+7)	;volatile
  4559  0211  3001               	movlw	1
  4560  0212  00F5               	movwf	??_get_fun
  4561  0213  0875               	movf	??_get_fun,w
  4562  0214  07CA               	addwf	get_fun@fun_counter,f
  4563  0215                     __ccov336_end_blk13:
  4564  0215                     __ccov337_start_blk16:
  4565  0215                     l2392:
  4566  0215  0022               	movlb	2	; select bank2
  4567  0216  108E               	bcf	14,1	;volatile
  4568  0217                     __ccov337_end_blk16:
  4569  0217                     __ccov338_start_blk18:
  4570  0217                     l2394:
  4571                           
  4572                           ;main.c: 638:         if (fun_counter > FUN_MEAS_COUNT) {
  4573  0217  0020               	movlb	0	; select bank0
  4574  0218  084A               	movf	get_fun@fun_counter,w
  4575  0219  3A80               	xorlw	128
  4576  021A  3E75               	addlw	-139
  4577  021B  1C03               	skipc
  4578  021C  2A1E               	goto	u2441
  4579  021D  2A1F               	goto	u2440
  4580  021E                     u2441:
  4581  021E  2A27               	goto	l2402
  4582  021F                     __ccov338_end_blk18:
  4583  021F                     u2440:
  4584  021F                     __ccov339_start_blk19:
  4585  021F                     l2396:
  4586                           
  4587                           ;main.c: 639:             fun_counter = FUN_MEAS_COUNT;
  4588  021F  300A               	movlw	10
  4589  0220  00F5               	movwf	??_get_fun
  4590  0221  0875               	movf	??_get_fun,w
  4591  0222  00CA               	movwf	get_fun@fun_counter
  4592  0223                     __ccov339_end_blk19:
  4593  0223                     __ccov340_start_blk20:
  4594  0223                     l2398:
  4595                           
  4596                           ;main.c: 640:             ff.bits.FUN_LOW = 0;
  4597  0223  11F9               	bcf	_ff,3
  4598  0224                     __ccov340_end_blk20:
  4599  0224                     __ccov341_start_blk21:
  4600  0224                     l2400:
  4601  0224  14A2               	bsf	__ccovbit21_165/(0+8),__ccovbit21_165& (0+7)	;volatile
  4602                           
  4603                           ;main.c: 641:             ff.bits.FUN_HIGH = 1;
  4604  0225  1579               	bsf	_ff,2
  4605                           
  4606                           ;main.c: 642:         } else if (fun_counter<-FUN_MEAS_COUNT) {
  4607  0226  2A36               	goto	l2410
  4608  0227                     __ccov341_end_blk21:
  4609  0227                     __ccov342_start_blk23:
  4610  0227                     l2402:
  4611  0227  1422               	bsf	__ccovbit23_166/(0+8),__ccovbit23_166& (0+7)	;volatile
  4612  0228  084A               	movf	get_fun@fun_counter,w
  4613  0229  3A80               	xorlw	128
  4614  022A  3E8A               	addlw	138
  4615  022B  1803               	skipnc
  4616  022C  2A2E               	goto	u2451
  4617  022D  2A2F               	goto	u2450
  4618  022E                     u2451:
  4619  022E  2A36               	goto	l2410
  4620  022F                     __ccov342_end_blk23:
  4621  022F                     u2450:
  4622  022F                     __ccov343_start_blk24:
  4623  022F                     l2404:
  4624                           
  4625                           ;main.c: 643:             fun_counter = -FUN_MEAS_COUNT;
  4626  022F  30F6               	movlw	246
  4627  0230  00F5               	movwf	??_get_fun
  4628  0231  0875               	movf	??_get_fun,w
  4629  0232  00CA               	movwf	get_fun@fun_counter
  4630  0233                     __ccov343_end_blk24:
  4631  0233                     __ccov344_start_blk25:
  4632  0233                     l2406:
  4633                           
  4634                           ;main.c: 644:             ff.bits.FUN_LOW = 1;
  4635  0233  15F9               	bsf	_ff,3
  4636  0234                     __ccov344_end_blk25:
  4637  0234                     __ccov345_start_blk26:
  4638  0234                     l2408:
  4639  0234  17A1               	bsf	__ccovbit26_167/(0+8),__ccovbit26_167& (0+7)	;volatile
  4640                           
  4641                           ;main.c: 645:             ff.bits.FUN_HIGH = 0;
  4642  0235  1179               	bcf	_ff,2
  4643  0236                     __ccov345_end_blk26:
  4644  0236                     __ccov346_start_blk29:
  4645  0236                     l2410:
  4646  0236  1721               	bsf	__ccovbit29_168/(0+8),__ccovbit29_168& (0+7)	;volatile
  4647                           
  4648                           ;main.c: 647:         ff.bits.ALLOW_FUN = 0;
  4649  0237  12F9               	bcf	_ff,5
  4650  0238                     __ccov346_end_blk29:
  4651  0238                     __ccov347_start_blk31:
  4652  0238                     l514:
  4653  0238  0020               	movlb	0	; select bank0
  4654  0239  16A1               	bsf	__ccovbit31_169/(0+8),__ccovbit31_169& (0+7)	;volatile
  4655  023A  0008               	return
  4656  023B                     __end_of_get_fun:
  4657  023B                     
  4658                           	psect	text23
  4659  023B                     __ptext23:	
  4660 ;; *************** function _fun_work *****************
  4661 ;; Defined at:
  4662 ;;		line 334 in file "main.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;		None
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;		None
  4667 ;; Return value:  Size  Location     Type
  4668 ;;                  1    wreg      void 
  4669 ;; Registers used:
  4670 ;;		wreg, status,2, status,0, pclath, cstack
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMMON   BANK0   BANK1
  4676 ;;      Params:         0       0       0
  4677 ;;      Locals:         0       0       0
  4678 ;;      Temps:          1       0       0
  4679 ;;      Totals:         1       0       0
  4680 ;;Total ram usage:        1 bytes
  4681 ;; Hardware stack levels used: 1
  4682 ;; Hardware stack levels required when called: 9
  4683 ;; This function calls:
  4684 ;;		_close
  4685 ;;		_open
  4686 ;; This function is called by:
  4687 ;;		_main
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691  023B                     _fun_work:	
  4692                           ;psect for function _fun_work
  4693                           
  4694                           
  4695                           ;incstack = 0
  4696                           ; Regs used in _fun_work: [wreg+status,2+status,0+pclath+cstack]
  4697  023B                     l2264:
  4698                           
  4699                           ;main.c: 335:     {;main.c: 336:         if (
  4700  023B  1DF9               	btfss	_ff,3
  4701  023C  2A3E               	goto	u2101
  4702  023D  2A3F               	goto	u2100
  4703  023E                     u2101:
  4704  023E  2A5F               	goto	l2280
  4705  023F                     __ccov187_end_blk0:
  4706  023F                     u2100:
  4707  023F                     __ccov188_start_blk1:
  4708  023F                     l2266:
  4709  023F  0020               	movlb	0	; select bank0
  4710  0240  162C               	bsf	__ccovbit1_82/(0+8),__ccovbit1_82& (0+7)	;volatile
  4711  0241  1979               	btfsc	_ff,2
  4712  0242  2A44               	goto	u2111
  4713  0243  2A45               	goto	u2110
  4714  0244                     u2111:
  4715  0244  2A5F               	goto	l2280
  4716  0245                     __ccov188_end_blk1:
  4717  0245                     u2110:
  4718  0245                     __ccov189_start_blk2:
  4719  0245                     l2268:
  4720  0245  15AC               	bsf	__ccovbit2_83/(0+8),__ccovbit2_83& (0+7)	;volatile
  4721  0246  1CF9               	btfss	_ff,1
  4722  0247  2A49               	goto	u2121
  4723  0248  2A4A               	goto	u2120
  4724  0249                     u2121:
  4725  0249  2A5F               	goto	l2280
  4726  024A                     __ccov189_end_blk2:
  4727  024A                     u2120:
  4728  024A                     __ccov190_start_blk3:
  4729  024A                     l2270:
  4730  024A  152C               	bsf	__ccovbit3_84/(0+8),__ccovbit3_84& (0+7)	;volatile
  4731  024B  1FFB               	btfss	_ff+2,7
  4732  024C  2A4E               	goto	u2131
  4733  024D  2A4F               	goto	u2130
  4734  024E                     u2131:
  4735  024E  2A5F               	goto	l2280
  4736  024F                     __ccov190_end_blk3:
  4737  024F                     u2130:
  4738  024F                     __ccov191_start_blk4:
  4739  024F                     l2272:
  4740  024F  14AC               	bsf	__ccovbit4_85/(0+8),__ccovbit4_85& (0+7)	;volatile
  4741  0250  197A               	btfsc	_ff+1,2
  4742  0251  2A53               	goto	u2141
  4743  0252  2A54               	goto	u2140
  4744  0253                     u2141:
  4745  0253  2A5F               	goto	l2280
  4746  0254                     __ccov191_end_blk4:
  4747  0254                     u2140:
  4748  0254                     __ccov192_start_blk5:
  4749  0254                     l2274:
  4750  0254  142C               	bsf	__ccovbit5_86/(0+8),__ccovbit5_86& (0+7)	;volatile
  4751  0255  18FA               	btfsc	_ff+1,1
  4752  0256  2A58               	goto	u2151
  4753  0257  2A59               	goto	u2150
  4754  0258                     u2151:
  4755  0258  2A5F               	goto	l2280
  4756  0259                     __ccov192_end_blk5:
  4757  0259                     u2150:
  4758  0259                     __ccov193_start_blk6:
  4759  0259                     l2276:
  4760                           
  4761                           ;main.c: 342:                 !ff.bits.OPENING) {;main.c: 343:             beep_short_co
      +                          unt = 1;
  4762  0259  01FD               	clrf	_beep_short_count
  4763  025A  0AFD               	incf	_beep_short_count,f
  4764  025B                     __ccov193_end_blk6:
  4765  025B                     __ccov194_start_blk7:
  4766  025B                     l2278:
  4767  025B  17AB               	bsf	__ccovbit7_87/(0+8),__ccovbit7_87& (0+7)	;volatile
  4768                           
  4769                           ;main.c: 344:             open();
  4770  025C  3184  248B  3182   	fcall	_open
  4771  025F                     __ccov194_end_blk7:
  4772  025F                     __ccov195_start_blk9:
  4773  025F                     l2280:
  4774                           
  4775                           ;main.c: 346:         if (
  4776  025F  1D79               	btfss	_ff,2
  4777  0260  2A62               	goto	u2161
  4778  0261  2A63               	goto	u2160
  4779  0262                     u2161:
  4780  0262  2A80               	goto	l387
  4781  0263                     __ccov195_end_blk9:
  4782  0263                     u2160:
  4783  0263                     __ccov196_start_blk10:
  4784  0263                     l2282:
  4785  0263  0020               	movlb	0	; select bank0
  4786  0264  172B               	bsf	__ccovbit10_88/(0+8),__ccovbit10_88& (0+7)	;volatile
  4787  0265  1FFB               	btfss	_ff+2,7
  4788  0266  2A68               	goto	u2171
  4789  0267  2A69               	goto	u2170
  4790  0268                     u2171:
  4791  0268  2A80               	goto	l387
  4792  0269                     __ccov196_end_blk10:
  4793  0269                     u2170:
  4794  0269                     __ccov197_start_blk11:
  4795  0269                     l2284:
  4796  0269  16AB               	bsf	__ccovbit11_89/(0+8),__ccovbit11_89& (0+7)	;volatile
  4797  026A  19F9               	btfsc	_ff,3
  4798  026B  2A6D               	goto	u2181
  4799  026C  2A6E               	goto	u2180
  4800  026D                     u2181:
  4801  026D  2A80               	goto	l387
  4802  026E                     __ccov197_end_blk11:
  4803  026E                     u2180:
  4804  026E                     __ccov198_start_blk12:
  4805  026E                     l2286:
  4806  026E  162B               	bsf	__ccovbit12_90/(0+8),__ccovbit12_90& (0+7)	;volatile
  4807  026F  1A7A               	btfsc	_ff+1,4
  4808  0270  2A72               	goto	u2191
  4809  0271  2A73               	goto	u2190
  4810  0272                     u2191:
  4811  0272  2A80               	goto	l387
  4812  0273                     __ccov198_end_blk12:
  4813  0273                     u2190:
  4814  0273                     __ccov199_start_blk13:
  4815  0273                     l2288:
  4816  0273  15AB               	bsf	__ccovbit13_91/(0+8),__ccovbit13_91& (0+7)	;volatile
  4817  0274  19FA               	btfsc	_ff+1,3
  4818  0275  2A77               	goto	u2201
  4819  0276  2A78               	goto	u2200
  4820  0277                     u2201:
  4821  0277  2A80               	goto	l387
  4822  0278                     __ccov199_end_blk13:
  4823  0278                     u2200:
  4824  0278                     __ccov200_start_blk14:
  4825  0278                     l2290:
  4826                           
  4827                           ;main.c: 351:                 !ff.bits.CLOSING) {;main.c: 352:             beep_short_co
      +                          unt = 2;
  4828  0278  3002               	movlw	2
  4829  0279  00F6               	movwf	??_fun_work
  4830  027A  0876               	movf	??_fun_work,w
  4831  027B  00FD               	movwf	_beep_short_count
  4832  027C                     __ccov200_end_blk14:
  4833  027C                     __ccov201_start_blk15:
  4834  027C                     l2292:
  4835  027C  152B               	bsf	__ccovbit15_92/(0+8),__ccovbit15_92& (0+7)	;volatile
  4836                           
  4837                           ;main.c: 353:             close();
  4838  027D  3184  24AC  3182   	fcall	_close
  4839  0280                     __ccov201_end_blk15:
  4840  0280                     __ccov202_start_blk17:
  4841  0280                     l387:
  4842  0280  0020               	movlb	0	; select bank0
  4843  0281  14AB               	bsf	__ccovbit17_93/(0+8),__ccovbit17_93& (0+7)	;volatile
  4844  0282  0008               	return
  4845  0283                     __end_of_fun_work:
  4846  0283                     
  4847                           	psect	text24
  4848  048B                     __ptext24:	
  4849 ;; *************** function _open *****************
  4850 ;; Defined at:
  4851 ;;		line 265 in file "main.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;		None
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;		None
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  1    wreg      void 
  4858 ;; Registers used:
  4859 ;;		wreg, status,2, status,0, pclath, cstack
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMMON   BANK0   BANK1
  4865 ;;      Params:         0       0       0
  4866 ;;      Locals:         0       0       0
  4867 ;;      Temps:          0       0       0
  4868 ;;      Totals:         0       0       0
  4869 ;;Total ram usage:        0 bytes
  4870 ;; Hardware stack levels used: 1
  4871 ;; Hardware stack levels required when called: 8
  4872 ;; This function calls:
  4873 ;;		_go_open
  4874 ;;		_go_open_alt
  4875 ;;		_rele_off
  4876 ;; This function is called by:
  4877 ;;		_fun_work
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881  048B                     _open:	
  4882                           ;psect for function _open
  4883                           
  4884                           
  4885                           ;incstack = 0
  4886                           ; Regs used in _open: [wreg+status,2+status,0+pclath+cstack]
  4887  048B                     l2198:
  4888                           
  4889                           ;main.c: 266:     if (ff.bits.CLOSING) {
  4890  048B  1DFA               	btfss	_ff+1,3
  4891  048C  2C8E               	goto	u1981
  4892  048D  2C8F               	goto	u1980
  4893  048E                     u1981:
  4894  048E  2C95               	goto	l357
  4895  048F                     __ccov156_end_blk0:
  4896  048F                     u1980:
  4897  048F                     __ccov157_start_blk1:
  4898  048F                     l2200:
  4899  048F  0020               	movlb	0	; select bank0
  4900  0490  17AE               	bsf	__ccovbit1_63/(0+8),__ccovbit1_63& (0+7)	;volatile
  4901                           
  4902                           ;main.c: 267:         rele_off();
  4903  0491  3185  2595  3184   	fcall	_rele_off
  4904                           
  4905                           ;main.c: 268:     } else {
  4906  0494  2CA9               	goto	l362
  4907  0495                     __ccov157_end_blk1:
  4908  0495                     __ccov158_start_blk2:
  4909  0495                     l357:
  4910                           
  4911                           ;main.c: 269:         if (ff.bits.NORMAL_WORK_MODE_ON) {
  4912  0495  1C7C               	btfss	_ff+3,0
  4913  0496  2C98               	goto	u1991
  4914  0497  2C99               	goto	u1990
  4915  0498                     u1991:
  4916  0498  2C9F               	goto	l359
  4917  0499                     __ccov158_end_blk2:
  4918  0499                     u1990:
  4919  0499                     __ccov159_start_blk3:
  4920  0499                     l2202:
  4921  0499  0020               	movlb	0	; select bank0
  4922  049A  172E               	bsf	__ccovbit3_64/(0+8),__ccovbit3_64& (0+7)	;volatile
  4923                           
  4924                           ;main.c: 270:             go_open();
  4925  049B  3184  24CD  3184   	fcall	_go_open
  4926                           
  4927                           ;main.c: 271:         } else if (ff.bits.UNIVERSAL_VORK_MODE_ON) {
  4928  049E  2CA9               	goto	l362
  4929  049F                     __ccov159_end_blk3:
  4930  049F                     __ccov160_start_blk4:
  4931  049F                     l359:
  4932  049F  0020               	movlb	0	; select bank0
  4933  04A0  16AE               	bsf	__ccovbit4_65/(0+8),__ccovbit4_65& (0+7)	;volatile
  4934  04A1  1CFC               	btfss	_ff+3,1
  4935  04A2  2CA4               	goto	u2001
  4936  04A3  2CA5               	goto	u2000
  4937  04A4                     u2001:
  4938  04A4  2CA9               	goto	l362
  4939  04A5                     __ccov160_end_blk4:
  4940  04A5                     u2000:
  4941  04A5                     __ccov161_start_blk5:
  4942  04A5                     l2204:
  4943  04A5  162E               	bsf	__ccovbit5_66/(0+8),__ccovbit5_66& (0+7)	;volatile
  4944                           
  4945                           ;main.c: 272:             go_open_alt();
  4946  04A6  3186  2600  3184   	fcall	_go_open_alt
  4947  04A9                     __ccov161_end_blk5:
  4948  04A9                     __ccov162_start_blk9:
  4949  04A9                     l362:
  4950  04A9  0020               	movlb	0	; select bank0
  4951  04AA  15AE               	bsf	__ccovbit9_67/(0+8),__ccovbit9_67& (0+7)	;volatile
  4952  04AB  0008               	return
  4953  04AC                     __end_of_open:
  4954  04AC                     
  4955                           	psect	text25
  4956  0600                     __ptext25:	
  4957 ;; *************** function _go_open_alt *****************
  4958 ;; Defined at:
  4959 ;;		line 228 in file "main.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;		None
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;		None
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  1    wreg      void 
  4966 ;; Registers used:
  4967 ;;		None
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMMON   BANK0   BANK1
  4973 ;;      Params:         0       0       0
  4974 ;;      Locals:         0       0       0
  4975 ;;      Temps:          0       0       0
  4976 ;;      Totals:         0       0       0
  4977 ;;Total ram usage:        0 bytes
  4978 ;; Hardware stack levels used: 1
  4979 ;; Hardware stack levels required when called: 7
  4980 ;; This function calls:
  4981 ;;		Nothing
  4982 ;; This function is called by:
  4983 ;;		_open
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987  0600                     _go_open_alt:	
  4988                           ;psect for function _go_open_alt
  4989                           
  4990                           
  4991                           ;incstack = 0
  4992                           ; Regs used in _go_open_alt: []
  4993  0600                     l1384:
  4994                           
  4995                           ;main.c: 229:     if (!ff.bits.OPENED && ff.bits.MOVING_ALLOWED) {
  4996  0600  197A               	btfsc	_ff+1,2
  4997  0601  2E03               	goto	u281
  4998  0602  2E04               	goto	u280
  4999  0603                     u281:
  5000  0603  2E0F               	goto	l341
  5001  0604                     __ccov139_end_blk0:
  5002  0604                     u280:
  5003  0604                     __ccov140_start_blk1:
  5004  0604                     l1386:
  5005  0604  0020               	movlb	0	; select bank0
  5006  0605  1530               	bsf	__ccovbit1_52/(0+8),__ccovbit1_52& (0+7)	;volatile
  5007  0606  1FFB               	btfss	_ff+2,7
  5008  0607  2E09               	goto	u291
  5009  0608  2E0A               	goto	u290
  5010  0609                     u291:
  5011  0609  2E0F               	goto	l341
  5012  060A                     __ccov140_end_blk1:
  5013  060A                     u290:
  5014  060A                     __ccov141_start_blk2:
  5015  060A                     l1388:
  5016  060A  14B0               	bsf	__ccovbit2_53/(0+8),__ccovbit2_53& (0+7)	;volatile
  5017                           
  5018                           ;main.c: 230:         ff.bits.CLOSED = 0;
  5019  060B  127A               	bcf	_ff+1,4
  5020                           
  5021                           ;main.c: 231:         ff.bits.OPENED = 1;
  5022  060C  157A               	bsf	_ff+1,2
  5023                           
  5024                           ;main.c: 233:         ff.bits.RELE_CONTROL_ON = 0;
  5025  060D  137A               	bcf	_ff+1,6
  5026                           
  5027                           ;main.c: 234:         ff.bits.RELE_POWER_ON = 0;
  5028  060E  12FA               	bcf	_ff+1,5
  5029  060F                     __ccov141_end_blk2:
  5030  060F                     __ccov142_start_blk4:
  5031  060F                     l341:
  5032  060F  0020               	movlb	0	; select bank0
  5033  0610  1430               	bsf	__ccovbit4_54/(0+8),__ccovbit4_54& (0+7)	;volatile
  5034  0611  0008               	return
  5035  0612                     __end_of_go_open_alt:
  5036  0612                     
  5037                           	psect	text26
  5038  04AC                     __ptext26:	
  5039 ;; *************** function _close *****************
  5040 ;; Defined at:
  5041 ;;		line 253 in file "main.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;		None
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;		None
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  1    wreg      void 
  5048 ;; Registers used:
  5049 ;;		wreg, status,2, status,0, pclath, cstack
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMMON   BANK0   BANK1
  5055 ;;      Params:         0       0       0
  5056 ;;      Locals:         0       0       0
  5057 ;;      Temps:          0       0       0
  5058 ;;      Totals:         0       0       0
  5059 ;;Total ram usage:        0 bytes
  5060 ;; Hardware stack levels used: 1
  5061 ;; Hardware stack levels required when called: 8
  5062 ;; This function calls:
  5063 ;;		_go_close
  5064 ;;		_go_close_alt
  5065 ;;		_rele_off
  5066 ;; This function is called by:
  5067 ;;		_fun_work
  5068 ;;		_main
  5069 ;; This function uses a non-reentrant model
  5070 ;;
  5071                           
  5072  04AC                     _close:	
  5073                           ;psect for function _close
  5074                           
  5075                           
  5076                           ;incstack = 0
  5077                           ; Regs used in _close: [wreg+status,2+status,0+pclath+cstack]
  5078  04AC                     l2190:
  5079                           
  5080                           ;main.c: 254:     if (ff.bits.OPENING) {
  5081  04AC  1CFA               	btfss	_ff+1,1
  5082  04AD  2CAF               	goto	u1951
  5083  04AE  2CB0               	goto	u1950
  5084  04AF                     u1951:
  5085  04AF  2CB6               	goto	l349
  5086  04B0                     __ccov149_end_blk0:
  5087  04B0                     u1950:
  5088  04B0                     __ccov150_start_blk1:
  5089  04B0                     l2192:
  5090  04B0  0020               	movlb	0	; select bank0
  5091  04B1  162F               	bsf	__ccovbit1_58/(0+8),__ccovbit1_58& (0+7)	;volatile
  5092                           
  5093                           ;main.c: 255:         rele_off();
  5094  04B2  3185  2595  3184   	fcall	_rele_off
  5095                           
  5096                           ;main.c: 256:     } else {
  5097  04B5  2CCA               	goto	l354
  5098  04B6                     __ccov150_end_blk1:
  5099  04B6                     __ccov151_start_blk2:
  5100  04B6                     l349:
  5101                           
  5102                           ;main.c: 257:         if (ff.bits.NORMAL_WORK_MODE_ON) {
  5103  04B6  1C7C               	btfss	_ff+3,0
  5104  04B7  2CB9               	goto	u1961
  5105  04B8  2CBA               	goto	u1960
  5106  04B9                     u1961:
  5107  04B9  2CC0               	goto	l351
  5108  04BA                     __ccov151_end_blk2:
  5109  04BA                     u1960:
  5110  04BA                     __ccov152_start_blk3:
  5111  04BA                     l2194:
  5112  04BA  0020               	movlb	0	; select bank0
  5113  04BB  15AF               	bsf	__ccovbit3_59/(0+8),__ccovbit3_59& (0+7)	;volatile
  5114                           
  5115                           ;main.c: 258:             go_close();
  5116  04BC  3183  23EA  3184   	fcall	_go_close
  5117                           
  5118                           ;main.c: 259:         } else if (ff.bits.UNIVERSAL_VORK_MODE_ON) {
  5119  04BF  2CCA               	goto	l354
  5120  04C0                     __ccov152_end_blk3:
  5121  04C0                     __ccov153_start_blk4:
  5122  04C0                     l351:
  5123  04C0  0020               	movlb	0	; select bank0
  5124  04C1  152F               	bsf	__ccovbit4_60/(0+8),__ccovbit4_60& (0+7)	;volatile
  5125  04C2  1CFC               	btfss	_ff+3,1
  5126  04C3  2CC5               	goto	u1971
  5127  04C4  2CC6               	goto	u1970
  5128  04C5                     u1971:
  5129  04C5  2CCA               	goto	l354
  5130  04C6                     __ccov153_end_blk4:
  5131  04C6                     u1970:
  5132  04C6                     __ccov154_start_blk5:
  5133  04C6                     l2196:
  5134  04C6  14AF               	bsf	__ccovbit5_61/(0+8),__ccovbit5_61& (0+7)	;volatile
  5135                           
  5136                           ;main.c: 260:             go_close_alt();
  5137  04C7  3185  25AC  3184   	fcall	_go_close_alt
  5138  04CA                     __ccov154_end_blk5:
  5139  04CA                     __ccov155_start_blk9:
  5140  04CA                     l354:
  5141  04CA  0020               	movlb	0	; select bank0
  5142  04CB  142F               	bsf	__ccovbit9_62/(0+8),__ccovbit9_62& (0+7)	;volatile
  5143  04CC  0008               	return
  5144  04CD                     __end_of_close:
  5145  04CD                     
  5146                           	psect	text27
  5147  0595                     __ptext27:	
  5148 ;; *************** function _rele_off *****************
  5149 ;; Defined at:
  5150 ;;		line 238 in file "main.c"
  5151 ;; Parameters:    Size  Location     Type
  5152 ;;		None
  5153 ;; Auto vars:     Size  Location     Type
  5154 ;;		None
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  1    wreg      void 
  5157 ;; Registers used:
  5158 ;;		wreg
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMMON   BANK0   BANK1
  5164 ;;      Params:         0       0       0
  5165 ;;      Locals:         0       0       0
  5166 ;;      Temps:          1       0       0
  5167 ;;      Totals:         1       0       0
  5168 ;;Total ram usage:        1 bytes
  5169 ;; Hardware stack levels used: 1
  5170 ;; Hardware stack levels required when called: 7
  5171 ;; This function calls:
  5172 ;;		Nothing
  5173 ;; This function is called by:
  5174 ;;		_close
  5175 ;;		_open
  5176 ;;		_switch_wm
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180  0595                     _rele_off:	
  5181                           ;psect for function _rele_off
  5182                           
  5183                           
  5184                           ;incstack = 0
  5185                           ; Regs used in _rele_off: [wreg]
  5186  0595                     l2070:
  5187                           
  5188                           ;main.c: 239:     ff.bits.RELE_CONTROL_ON = 0;
  5189  0595  137A               	bcf	_ff+1,6
  5190                           
  5191                           ;main.c: 240:     ff.bits.RELE_POWER_ON = 0;
  5192  0596  12FA               	bcf	_ff+1,5
  5193                           
  5194                           ;main.c: 241:     ff.bits.CLOSING = 0;
  5195  0597  11FA               	bcf	_ff+1,3
  5196                           
  5197                           ;main.c: 242:     ff.bits.OPENING = 0;
  5198  0598  10FA               	bcf	_ff+1,1
  5199                           
  5200                           ;main.c: 243:     ff.bits.CLOSED = 0;
  5201  0599  127A               	bcf	_ff+1,4
  5202                           
  5203                           ;main.c: 244:     if (ff.bits.UNIVERSAL_VORK_MODE_ON) {
  5204  059A  1CFC               	btfss	_ff+3,1
  5205  059B  2D9D               	goto	u1641
  5206  059C  2D9E               	goto	u1640
  5207  059D                     u1641:
  5208  059D  2DA2               	goto	l344
  5209  059E                     __ccov143_end_blk0:
  5210  059E                     u1640:
  5211  059E                     __ccov144_start_blk1:
  5212  059E                     l2072:
  5213  059E  0020               	movlb	0	; select bank0
  5214  059F  17AF               	bsf	__ccovbit1_55/(0+8),__ccovbit1_55& (0+7)	;volatile
  5215                           
  5216                           ;main.c: 245:         ff.bits.OPENED = 1;
  5217  05A0  157A               	bsf	_ff+1,2
  5218                           
  5219                           ;main.c: 246:     } else {
  5220  05A1  2DA5               	goto	l345
  5221  05A2                     __ccov144_end_blk1:
  5222  05A2                     __ccov145_start_blk2:
  5223  05A2                     l344:
  5224  05A2  0020               	movlb	0	; select bank0
  5225  05A3  172F               	bsf	__ccovbit2_56/(0+8),__ccovbit2_56& (0+7)	;volatile
  5226                           
  5227                           ;main.c: 247:         ff.bits.OPENED = 0;
  5228  05A4  117A               	bcf	_ff+1,2
  5229  05A5                     __ccov145_end_blk2:
  5230  05A5                     __ccov146_start_blk3:
  5231  05A5                     l345:	
  5232                           ;main.c: 248:     }
  5233                           
  5234                           
  5235                           ;main.c: 249:     ff.bits.MOVING_ALLOWED = 0;
  5236  05A5  13FB               	bcf	_ff+2,7
  5237  05A6                     __ccov146_end_blk3:
  5238  05A6                     __ccov147_start_blk4:
  5239  05A6                     l2074:
  5240                           
  5241                           ;main.c: 250:     time_moving_wait = MOVING_WAIT_DELAY;
  5242  05A6  3002               	movlw	2
  5243  05A7  00F5               	movwf	??_rele_off
  5244  05A8  0875               	movf	??_rele_off,w
  5245  05A9  00D0               	movwf	_time_moving_wait
  5246  05AA                     __ccov147_end_blk4:
  5247  05AA                     __ccov148_start_blk5:
  5248  05AA                     l346:
  5249  05AA  16AF               	bsf	__ccovbit5_57/(0+8),__ccovbit5_57& (0+7)	;volatile
  5250  05AB  0008               	return
  5251  05AC                     __end_of_rele_off:
  5252  05AC                     
  5253                           	psect	text28
  5254  05AC                     __ptext28:	
  5255 ;; *************** function _go_close_alt *****************
  5256 ;; Defined at:
  5257 ;;		line 217 in file "main.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;		None
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;		None
  5262 ;; Return value:  Size  Location     Type
  5263 ;;                  1    wreg      void 
  5264 ;; Registers used:
  5265 ;;		None
  5266 ;; Tracked objects:
  5267 ;;		On entry : 0/0
  5268 ;;		On exit  : 0/0
  5269 ;;		Unchanged: 0/0
  5270 ;; Data sizes:     COMMON   BANK0   BANK1
  5271 ;;      Params:         0       0       0
  5272 ;;      Locals:         0       0       0
  5273 ;;      Temps:          0       0       0
  5274 ;;      Totals:         0       0       0
  5275 ;;Total ram usage:        0 bytes
  5276 ;; Hardware stack levels used: 1
  5277 ;; Hardware stack levels required when called: 7
  5278 ;; This function calls:
  5279 ;;		Nothing
  5280 ;; This function is called by:
  5281 ;;		_close
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285  05AC                     _go_close_alt:	
  5286                           ;psect for function _go_close_alt
  5287                           
  5288                           
  5289                           ;incstack = 0
  5290                           ; Regs used in _go_close_alt: []
  5291  05AC                     l1380:
  5292                           
  5293                           ;main.c: 219:     if ((!ff.bits.CLOSED && ff.bits.MOVING_ALLOWED) || ff.bits.ALARM_ON) {
  5294  05AC  1A7A               	btfsc	_ff+1,4
  5295  05AD  2DAF               	goto	u251
  5296  05AE  2DB0               	goto	u250
  5297  05AF                     u251:
  5298  05AF  2DB6               	goto	l336
  5299  05B0                     __ccov134_end_blk0:
  5300  05B0                     u250:
  5301  05B0                     __ccov135_start_blk1:
  5302  05B0                     l1382:
  5303  05B0  0020               	movlb	0	; select bank0
  5304  05B1  1730               	bsf	__ccovbit1_48/(0+8),__ccovbit1_48& (0+7)	;volatile
  5305  05B2  1BFB               	btfsc	_ff+2,7
  5306  05B3  2DB5               	goto	u261
  5307  05B4  2DB6               	goto	u260
  5308  05B5                     u261:
  5309  05B5  2DBC               	goto	l334
  5310  05B6                     __ccov135_end_blk1:
  5311  05B6                     u260:
  5312  05B6                     __ccov136_start_blk2:
  5313  05B6                     l336:
  5314  05B6  0020               	movlb	0	; select bank0
  5315  05B7  16B0               	bsf	__ccovbit2_49/(0+8),__ccovbit2_49& (0+7)	;volatile
  5316  05B8  1C79               	btfss	_ff,0
  5317  05B9  2DBB               	goto	u271
  5318  05BA  2DBC               	goto	u270
  5319  05BB                     u271:
  5320  05BB  2DC1               	goto	l337
  5321  05BC                     __ccov136_end_blk2:
  5322  05BC                     u270:
  5323  05BC                     __ccov137_start_blk3:
  5324  05BC                     l334:
  5325  05BC  1630               	bsf	__ccovbit3_50/(0+8),__ccovbit3_50& (0+7)	;volatile
  5326                           
  5327                           ;main.c: 220:         ff.bits.OPENED = 0;
  5328  05BD  117A               	bcf	_ff+1,2
  5329                           
  5330                           ;main.c: 221:         ff.bits.CLOSED = 1;
  5331  05BE  167A               	bsf	_ff+1,4
  5332                           
  5333                           ;main.c: 223:         ff.bits.RELE_CONTROL_ON = 0;
  5334  05BF  137A               	bcf	_ff+1,6
  5335                           
  5336                           ;main.c: 224:         ff.bits.RELE_POWER_ON = 1;
  5337  05C0  16FA               	bsf	_ff+1,5
  5338  05C1                     __ccov137_end_blk3:
  5339  05C1                     __ccov138_start_blk5:
  5340  05C1                     l337:
  5341  05C1  15B0               	bsf	__ccovbit5_51/(0+8),__ccovbit5_51& (0+7)	;volatile
  5342  05C2  0008               	return
  5343  05C3                     __end_of_go_close_alt:
  5344  05C3                     
  5345                           	psect	text29
  5346  03EA                     __ptext29:	
  5347 ;; *************** function _go_close *****************
  5348 ;; Defined at:
  5349 ;;		line 160 in file "main.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;		None
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;		None
  5354 ;; Return value:  Size  Location     Type
  5355 ;;                  1    wreg      void 
  5356 ;; Registers used:
  5357 ;;		wreg
  5358 ;; Tracked objects:
  5359 ;;		On entry : 0/0
  5360 ;;		On exit  : 0/0
  5361 ;;		Unchanged: 0/0
  5362 ;; Data sizes:     COMMON   BANK0   BANK1
  5363 ;;      Params:         0       0       0
  5364 ;;      Locals:         0       0       0
  5365 ;;      Temps:          0       0       0
  5366 ;;      Totals:         0       0       0
  5367 ;;Total ram usage:        0 bytes
  5368 ;; Hardware stack levels used: 1
  5369 ;; Hardware stack levels required when called: 7
  5370 ;; This function calls:
  5371 ;;		Nothing
  5372 ;; This function is called by:
  5373 ;;		_close
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377  03EA                     _go_close:	
  5378                           ;psect for function _go_close
  5379                           
  5380                           
  5381                           ;incstack = 0
  5382                           ; Regs used in _go_close: [wreg]
  5383  03EA                     l2046:
  5384                           
  5385                           ;main.c: 162:     if (!ff.bits.CLOSING && !ff.bits.CLOSED && ff.bits.MOVING_ALLOWED) {
  5386  03EA  19FA               	btfsc	_ff+1,3
  5387  03EB  2BED               	goto	u1581
  5388  03EC  2BEE               	goto	u1580
  5389  03ED                     u1581:
  5390  03ED  2C11               	goto	l321
  5391  03EE                     __ccov115_end_blk0:
  5392  03EE                     u1580:
  5393  03EE                     __ccov116_start_blk1:
  5394  03EE                     l2048:
  5395  03EE  0020               	movlb	0	; select bank0
  5396  03EF  1532               	bsf	__ccovbit1_36/(0+8),__ccovbit1_36& (0+7)	;volatile
  5397  03F0  1A7A               	btfsc	_ff+1,4
  5398  03F1  2BF3               	goto	u1591
  5399  03F2  2BF4               	goto	u1590
  5400  03F3                     u1591:
  5401  03F3  2C11               	goto	l321
  5402  03F4                     __ccov116_end_blk1:
  5403  03F4                     u1590:
  5404  03F4                     __ccov117_start_blk2:
  5405  03F4                     l2050:
  5406  03F4  14B2               	bsf	__ccovbit2_37/(0+8),__ccovbit2_37& (0+7)	;volatile
  5407  03F5  1FFB               	btfss	_ff+2,7
  5408  03F6  2BF8               	goto	u1601
  5409  03F7  2BF9               	goto	u1600
  5410  03F8                     u1601:
  5411  03F8  2C11               	goto	l321
  5412  03F9                     __ccov117_end_blk2:
  5413  03F9                     u1600:
  5414  03F9                     __ccov118_start_blk3:
  5415  03F9                     l2052:
  5416                           
  5417                           ;main.c: 163:         ff.bits.CLOSING = 1;
  5418  03F9  15FA               	bsf	_ff+1,3
  5419                           
  5420                           ;main.c: 164:         ff.bits.OPENED = 0;
  5421  03FA  117A               	bcf	_ff+1,2
  5422                           
  5423                           ;main.c: 165:         ff.bits.OPENING = 0;
  5424  03FB  10FA               	bcf	_ff+1,1
  5425                           
  5426                           ;main.c: 167:         ff.bits.RELE_POWER_ON = 0;
  5427  03FC  12FA               	bcf	_ff+1,5
  5428                           
  5429                           ;main.c: 168:         ff.bits.RELE_CONTROL_ON = 1;
  5430  03FD  177A               	bsf	_ff+1,6
  5431  03FE                     __ccov118_end_blk3:
  5432  03FE                     __ccov119_start_blk4:
  5433  03FE                     l2054:
  5434  03FE  1432               	bsf	__ccovbit4_38/(0+8),__ccovbit4_38& (0+7)	;volatile
  5435                           
  5436                           ;main.c: 170:         time_rele_control = RELE_GAP + RELE_POWER_WORK_DELAY + RELE_GAP;
  5437  03FF  3013               	movlw	19
  5438  0400  00C3               	movwf	_time_rele_control
  5439  0401  3000               	movlw	0
  5440  0402  00C4               	movwf	_time_rele_control+1
  5441                           
  5442                           ;main.c: 171:         time_rele_power = RELE_POWER_WORK_DELAY;
  5443  0403  300F               	movlw	15
  5444  0404  00C5               	movwf	_time_rele_power
  5445  0405  3000               	movlw	0
  5446  0406  00C6               	movwf	_time_rele_power+1
  5447                           
  5448                           ;main.c: 172:         time_rele_gap = RELE_GAP;
  5449  0407  3002               	movlw	2
  5450  0408  00C1               	movwf	_time_rele_gap
  5451  0409  3000               	movlw	0
  5452  040A  00C2               	movwf	_time_rele_gap+1
  5453                           
  5454                           ;main.c: 174:         time_rotation = 0;
  5455  040B  3000               	movlw	0
  5456  040C  00B4               	movwf	_time_rotation
  5457  040D  3000               	movlw	0
  5458  040E  00B5               	movwf	_time_rotation+1
  5459  040F  3000               	movlw	0
  5460  0410  00B6               	movwf	_time_rotation+2
  5461  0411                     __ccov119_end_blk4:
  5462  0411                     __ccov120_start_blk6:
  5463  0411                     l321:
  5464  0411  0020               	movlb	0	; select bank0
  5465  0412  17B1               	bsf	__ccovbit6_39/(0+8),__ccovbit6_39& (0+7)	;volatile
  5466  0413  0008               	return
  5467  0414                     __end_of_go_close:
  5468  0414                     
  5469                           	psect	text30
  5470  00C8                     __ptext30:	
  5471 ;; *************** function _autorotation_work *****************
  5472 ;; Defined at:
  5473 ;;		line 378 in file "main.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;		None
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;		None
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  1    wreg      void 
  5480 ;; Registers used:
  5481 ;;		wreg, status,2, status,0, pclath, cstack
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMMON   BANK0   BANK1
  5487 ;;      Params:         0       0       0
  5488 ;;      Locals:         0       0       0
  5489 ;;      Temps:          1       0       0
  5490 ;;      Totals:         1       0       0
  5491 ;;Total ram usage:        1 bytes
  5492 ;; Hardware stack levels used: 1
  5493 ;; Hardware stack levels required when called: 8
  5494 ;; This function calls:
  5495 ;;		_go_close_short
  5496 ;;		_go_open
  5497 ;; This function is called by:
  5498 ;;		_main
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501                           
  5502  00C8                     _autorotation_work:	
  5503                           ;psect for function _autorotation_work
  5504                           
  5505                           
  5506                           ;incstack = 0
  5507                           ; Regs used in _autorotation_work: [wreg+status,2+status,0+pclath+cstack]
  5508  00C8                     l2312:
  5509                           
  5510                           ;main.c: 379:     if ((time_rotation > AUTOROTATION_DELAY) &&
  5511  00C8  3000               	movlw	0
  5512  00C9  0020               	movlb	0	; select bank0
  5513  00CA  0236               	subwf	_time_rotation+2,w
  5514  00CB  1D03               	skipz
  5515  00CC  28D3               	goto	u2255
  5516  00CD  3000               	movlw	0
  5517  00CE  0235               	subwf	_time_rotation+1,w
  5518  00CF  1D03               	skipz
  5519  00D0  28D3               	goto	u2255
  5520  00D1  3079               	movlw	121
  5521  00D2  0234               	subwf	_time_rotation,w
  5522  00D3                     u2255:
  5523  00D3  1C03               	skipc
  5524  00D4  28D6               	goto	u2251
  5525  00D5  28D7               	goto	u2250
  5526  00D6                     u2251:
  5527  00D6  28FD               	goto	l2330
  5528  00D7                     __ccov214_end_blk0:
  5529  00D7                     u2250:
  5530  00D7                     __ccov215_start_blk1:
  5531  00D7                     l2314:
  5532  00D7  152A               	bsf	__ccovbit1_100/(0+8),__ccovbit1_100& (0+7)	;volatile
  5533  00D8  1A7A               	btfsc	_ff+1,4
  5534  00D9  28DB               	goto	u2261
  5535  00DA  28DC               	goto	u2260
  5536  00DB                     u2261:
  5537  00DB  28FD               	goto	l2330
  5538  00DC                     __ccov215_end_blk1:
  5539  00DC                     u2260:
  5540  00DC                     __ccov216_start_blk2:
  5541  00DC                     l2316:
  5542  00DC  14AA               	bsf	__ccovbit2_101/(0+8),__ccovbit2_101& (0+7)	;volatile
  5543  00DD  19FA               	btfsc	_ff+1,3
  5544  00DE  28E0               	goto	u2271
  5545  00DF  28E1               	goto	u2270
  5546  00E0                     u2271:
  5547  00E0  28FD               	goto	l2330
  5548  00E1                     __ccov216_end_blk2:
  5549  00E1                     u2270:
  5550  00E1                     __ccov217_start_blk3:
  5551  00E1                     l2318:
  5552  00E1  142A               	bsf	__ccovbit3_102/(0+8),__ccovbit3_102& (0+7)	;volatile
  5553  00E2  1CF9               	btfss	_ff,1
  5554  00E3  28E5               	goto	u2281
  5555  00E4  28E6               	goto	u2280
  5556  00E5                     u2281:
  5557  00E5  28FD               	goto	l2330
  5558  00E6                     __ccov217_end_blk3:
  5559  00E6                     u2280:
  5560  00E6                     __ccov218_start_blk4:
  5561  00E6                     l2320:
  5562  00E6  17A9               	bsf	__ccovbit4_103/(0+8),__ccovbit4_103& (0+7)	;volatile
  5563  00E7  1FFB               	btfss	_ff+2,7
  5564  00E8  28EA               	goto	u2291
  5565  00E9  28EB               	goto	u2290
  5566  00EA                     u2291:
  5567  00EA  28FD               	goto	l2330
  5568  00EB                     __ccov218_end_blk4:
  5569  00EB                     u2290:
  5570  00EB                     __ccov219_start_blk5:
  5571  00EB                     l2322:
  5572  00EB  1729               	bsf	__ccovbit5_104/(0+8),__ccovbit5_104& (0+7)	;volatile
  5573  00EC  1C7C               	btfss	_ff+3,0
  5574  00ED  28EF               	goto	u2301
  5575  00EE  28F0               	goto	u2300
  5576  00EF                     u2301:
  5577  00EF  28FD               	goto	l2330
  5578  00F0                     __ccov219_end_blk5:
  5579  00F0                     u2300:
  5580  00F0                     __ccov220_start_blk6:
  5581  00F0                     l2324:
  5582                           
  5583                           ;main.c: 385:             ) {;main.c: 386:               go_close_short();
  5584  00F0  3184  2414  3180   	fcall	_go_close_short
  5585  00F3                     __ccov220_end_blk6:
  5586  00F3                     __ccov221_start_blk7:
  5587  00F3                     l2326:
  5588                           
  5589                           ;main.c: 387:               beep_short_count=3;
  5590  00F3  3003               	movlw	3
  5591  00F4  00F5               	movwf	??_autorotation_work
  5592  00F5  0875               	movf	??_autorotation_work,w
  5593  00F6  00FD               	movwf	_beep_short_count
  5594  00F7                     __ccov221_end_blk7:
  5595  00F7                     __ccov222_start_blk8:
  5596  00F7                     l2328:
  5597  00F7  0020               	movlb	0	; select bank0
  5598  00F8  16A9               	bsf	__ccovbit8_105/(0+8),__ccovbit8_105& (0+7)	;volatile
  5599                           
  5600                           ;main.c: 388:               beep_long_count=3;
  5601  00F9  3003               	movlw	3
  5602  00FA  00F5               	movwf	??_autorotation_work
  5603  00FB  0875               	movf	??_autorotation_work,w
  5604  00FC  00CE               	movwf	_beep_long_count
  5605  00FD                     __ccov222_end_blk8:
  5606  00FD                     __ccov223_start_blk10:
  5607  00FD                     l2330:
  5608                           
  5609                           ;main.c: 391:     if ((time_rotation > (AUTOROTATION_DELAY + RELE_POWER_AUTOROTATION_DEL
      +                          AY + RELE_GAP * 2)) &&
  5610  00FD  3000               	movlw	0
  5611  00FE  0236               	subwf	_time_rotation+2,w
  5612  00FF  1D03               	skipz
  5613  0100  2907               	goto	u2315
  5614  0101  3000               	movlw	0
  5615  0102  0235               	subwf	_time_rotation+1,w
  5616  0103  1D03               	skipz
  5617  0104  2907               	goto	u2315
  5618  0105  3082               	movlw	130
  5619  0106  0234               	subwf	_time_rotation,w
  5620  0107                     u2315:
  5621  0107  1C03               	skipc
  5622  0108  290A               	goto	u2311
  5623  0109  290B               	goto	u2310
  5624  010A                     u2311:
  5625  010A  292F               	goto	l400
  5626  010B                     __ccov223_end_blk10:
  5627  010B                     u2310:
  5628  010B                     __ccov224_start_blk11:
  5629  010B                     l2332:
  5630  010B  1629               	bsf	__ccovbit11_106/(0+8),__ccovbit11_106& (0+7)	;volatile
  5631  010C  1E7A               	btfss	_ff+1,4
  5632  010D  290F               	goto	u2321
  5633  010E  2910               	goto	u2320
  5634  010F                     u2321:
  5635  010F  292F               	goto	l400
  5636  0110                     __ccov224_end_blk11:
  5637  0110                     u2320:
  5638  0110                     __ccov225_start_blk12:
  5639  0110                     l2334:
  5640  0110  15A9               	bsf	__ccovbit12_107/(0+8),__ccovbit12_107& (0+7)	;volatile
  5641  0111  1DFA               	btfss	_ff+1,3
  5642  0112  2914               	goto	u2331
  5643  0113  2915               	goto	u2330
  5644  0114                     u2331:
  5645  0114  292F               	goto	l400
  5646  0115                     __ccov225_end_blk12:
  5647  0115                     u2330:
  5648  0115                     __ccov226_start_blk13:
  5649  0115                     l2336:
  5650  0115  1529               	bsf	__ccovbit13_108/(0+8),__ccovbit13_108& (0+7)	;volatile
  5651  0116  1CF9               	btfss	_ff,1
  5652  0117  2919               	goto	u2341
  5653  0118  291A               	goto	u2340
  5654  0119                     u2341:
  5655  0119  292F               	goto	l400
  5656  011A                     __ccov226_end_blk13:
  5657  011A                     u2340:
  5658  011A                     __ccov227_start_blk14:
  5659  011A                     l2338:
  5660  011A  14A9               	bsf	__ccovbit14_109/(0+8),__ccovbit14_109& (0+7)	;volatile
  5661  011B  1FFB               	btfss	_ff+2,7
  5662  011C  291E               	goto	u2351
  5663  011D  291F               	goto	u2350
  5664  011E                     u2351:
  5665  011E  292F               	goto	l400
  5666  011F                     __ccov227_end_blk14:
  5667  011F                     u2350:
  5668  011F                     __ccov228_start_blk15:
  5669  011F                     l2340:
  5670  011F  1429               	bsf	__ccovbit15_110/(0+8),__ccovbit15_110& (0+7)	;volatile
  5671  0120  1C7C               	btfss	_ff+3,0
  5672  0121  2923               	goto	u2361
  5673  0122  2924               	goto	u2360
  5674  0123                     u2361:
  5675  0123  292F               	goto	l400
  5676  0124                     __ccov228_end_blk15:
  5677  0124                     u2360:
  5678  0124                     __ccov229_start_blk16:
  5679  0124                     l2342:
  5680                           
  5681                           ;main.c: 397:             ) {;main.c: 398:         go_open();
  5682  0124  3184  24CD  3180   	fcall	_go_open
  5683  0127                     __ccov229_end_blk16:
  5684  0127                     __ccov230_start_blk17:
  5685  0127                     l2344:
  5686  0127  0020               	movlb	0	; select bank0
  5687  0128  17A8               	bsf	__ccovbit17_111/(0+8),__ccovbit17_111& (0+7)	;volatile
  5688                           
  5689                           ;main.c: 399:         time_rotation = 0;
  5690  0129  3000               	movlw	0
  5691  012A  00B4               	movwf	_time_rotation
  5692  012B  3000               	movlw	0
  5693  012C  00B5               	movwf	_time_rotation+1
  5694  012D  3000               	movlw	0
  5695  012E  00B6               	movwf	_time_rotation+2
  5696  012F                     __ccov230_end_blk17:
  5697  012F                     __ccov231_start_blk19:
  5698  012F                     l400:
  5699  012F  1728               	bsf	__ccovbit19_112/(0+8),__ccovbit19_112& (0+7)	;volatile
  5700  0130  0008               	return
  5701  0131                     __end_of_autorotation_work:
  5702  0131                     
  5703                           	psect	text31
  5704  04CD                     __ptext31:	
  5705 ;; *************** function _go_open *****************
  5706 ;; Defined at:
  5707 ;;		line 199 in file "main.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;		None
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;		None
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      void 
  5714 ;; Registers used:
  5715 ;;		wreg
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMMON   BANK0   BANK1
  5721 ;;      Params:         0       0       0
  5722 ;;      Locals:         0       0       0
  5723 ;;      Temps:          0       0       0
  5724 ;;      Totals:         0       0       0
  5725 ;;Total ram usage:        0 bytes
  5726 ;; Hardware stack levels used: 1
  5727 ;; Hardware stack levels required when called: 7
  5728 ;; This function calls:
  5729 ;;		Nothing
  5730 ;; This function is called by:
  5731 ;;		_open
  5732 ;;		_autorotation_work
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736  04CD                     _go_open:	
  5737                           ;psect for function _go_open
  5738                           
  5739                           
  5740                           ;incstack = 0
  5741                           ; Regs used in _go_open: [wreg]
  5742  04CD                     l2056:
  5743                           
  5744                           ;main.c: 201:     if (!ff.bits.OPENED && !ff.bits.OPENING && ff.bits.MOVING_ALLOWED) {
  5745  04CD  197A               	btfsc	_ff+1,2
  5746  04CE  2CD0               	goto	u1611
  5747  04CF  2CD1               	goto	u1610
  5748  04D0                     u1611:
  5749  04D0  2CE7               	goto	l329
  5750  04D1                     __ccov127_end_blk0:
  5751  04D1                     u1610:
  5752  04D1                     __ccov128_start_blk1:
  5753  04D1                     l2058:
  5754  04D1  0020               	movlb	0	; select bank0
  5755  04D2  1531               	bsf	__ccovbit1_44/(0+8),__ccovbit1_44& (0+7)	;volatile
  5756  04D3  18FA               	btfsc	_ff+1,1
  5757  04D4  2CD6               	goto	u1621
  5758  04D5  2CD7               	goto	u1620
  5759  04D6                     u1621:
  5760  04D6  2CE7               	goto	l329
  5761  04D7                     __ccov128_end_blk1:
  5762  04D7                     u1620:
  5763  04D7                     __ccov129_start_blk2:
  5764  04D7                     l2060:
  5765  04D7  14B1               	bsf	__ccovbit2_45/(0+8),__ccovbit2_45& (0+7)	;volatile
  5766  04D8  1FFB               	btfss	_ff+2,7
  5767  04D9  2CDB               	goto	u1631
  5768  04DA  2CDC               	goto	u1630
  5769  04DB                     u1631:
  5770  04DB  2CE7               	goto	l329
  5771  04DC                     __ccov129_end_blk2:
  5772  04DC                     u1630:
  5773  04DC                     __ccov130_start_blk3:
  5774  04DC                     l2062:
  5775                           
  5776                           ;main.c: 202:         ff.bits.OPENING = 1;
  5777  04DC  14FA               	bsf	_ff+1,1
  5778                           
  5779                           ;main.c: 203:         ff.bits.CLOSED = 0;
  5780  04DD  127A               	bcf	_ff+1,4
  5781                           
  5782                           ;main.c: 204:         ff.bits.CLOSING = 0;
  5783  04DE  11FA               	bcf	_ff+1,3
  5784                           
  5785                           ;main.c: 207:         ff.bits.RELE_CONTROL_ON = 0;
  5786  04DF  137A               	bcf	_ff+1,6
  5787                           
  5788                           ;main.c: 208:         ff.bits.RELE_POWER_ON = 1;
  5789  04E0  16FA               	bsf	_ff+1,5
  5790  04E1                     __ccov130_end_blk3:
  5791  04E1                     __ccov131_start_blk4:
  5792  04E1                     l2064:
  5793                           
  5794                           ;main.c: 210:         time_rele_power = RELE_POWER_WORK_DELAY;
  5795  04E1  300F               	movlw	15
  5796  04E2  00C5               	movwf	_time_rele_power
  5797  04E3  3000               	movlw	0
  5798  04E4  00C6               	movwf	_time_rele_power+1
  5799  04E5                     __ccov131_end_blk4:
  5800  04E5                     __ccov132_start_blk5:
  5801  04E5                     l2066:
  5802  04E5  1431               	bsf	__ccovbit5_46/(0+8),__ccovbit5_46& (0+7)	;volatile
  5803                           
  5804                           ;main.c: 212:         ff.bits.AUTOROTATION_WORK = 0;
  5805  04E6  12FC               	bcf	_ff+3,5
  5806  04E7                     __ccov132_end_blk5:
  5807  04E7                     __ccov133_start_blk8:
  5808  04E7                     l329:
  5809  04E7  0020               	movlb	0	; select bank0
  5810  04E8  17B0               	bsf	__ccovbit8_47/(0+8),__ccovbit8_47& (0+7)	;volatile
  5811  04E9  0008               	return
  5812  04EA                     __end_of_go_open:
  5813  04EA                     
  5814                           	psect	text32
  5815  0414                     __ptext32:	
  5816 ;; *************** function _go_close_short *****************
  5817 ;; Defined at:
  5818 ;;		line 179 in file "main.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;		None
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;		None
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  1    wreg      void 
  5825 ;; Registers used:
  5826 ;;		wreg
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMMON   BANK0   BANK1
  5832 ;;      Params:         0       0       0
  5833 ;;      Locals:         0       0       0
  5834 ;;      Temps:          0       0       0
  5835 ;;      Totals:         0       0       0
  5836 ;;Total ram usage:        0 bytes
  5837 ;; Hardware stack levels used: 1
  5838 ;; Hardware stack levels required when called: 7
  5839 ;; This function calls:
  5840 ;;		Nothing
  5841 ;; This function is called by:
  5842 ;;		_autorotation_work
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846  0414                     _go_close_short:	
  5847                           ;psect for function _go_close_short
  5848                           
  5849                           
  5850                           ;incstack = 0
  5851                           ; Regs used in _go_close_short: [wreg]
  5852  0414                     l2180:
  5853                           
  5854                           ;main.c: 181:     if (!ff.bits.CLOSING && !ff.bits.CLOSED && ff.bits.MOVING_ALLOWED) {
  5855  0414  19FA               	btfsc	_ff+1,3
  5856  0415  2C17               	goto	u1921
  5857  0416  2C18               	goto	u1920
  5858  0417                     u1921:
  5859  0417  2C3B               	goto	l325
  5860  0418                     __ccov121_end_blk0:
  5861  0418                     u1920:
  5862  0418                     __ccov122_start_blk1:
  5863  0418                     l2182:
  5864  0418  0020               	movlb	0	; select bank0
  5865  0419  1731               	bsf	__ccovbit1_40/(0+8),__ccovbit1_40& (0+7)	;volatile
  5866  041A  1A7A               	btfsc	_ff+1,4
  5867  041B  2C1D               	goto	u1931
  5868  041C  2C1E               	goto	u1930
  5869  041D                     u1931:
  5870  041D  2C3B               	goto	l325
  5871  041E                     __ccov122_end_blk1:
  5872  041E                     u1930:
  5873  041E                     __ccov123_start_blk2:
  5874  041E                     l2184:
  5875  041E  16B1               	bsf	__ccovbit2_41/(0+8),__ccovbit2_41& (0+7)	;volatile
  5876  041F  1FFB               	btfss	_ff+2,7
  5877  0420  2C22               	goto	u1941
  5878  0421  2C23               	goto	u1940
  5879  0422                     u1941:
  5880  0422  2C3B               	goto	l325
  5881  0423                     __ccov123_end_blk2:
  5882  0423                     u1940:
  5883  0423                     __ccov124_start_blk3:
  5884  0423                     l2186:
  5885                           
  5886                           ;main.c: 182:         ff.bits.CLOSING = 1;
  5887  0423  15FA               	bsf	_ff+1,3
  5888                           
  5889                           ;main.c: 183:         ff.bits.OPENED = 0;
  5890  0424  117A               	bcf	_ff+1,2
  5891                           
  5892                           ;main.c: 184:         ff.bits.OPENING = 0;
  5893  0425  10FA               	bcf	_ff+1,1
  5894                           
  5895                           ;main.c: 186:         ff.bits.RELE_POWER_ON = 0;
  5896  0426  12FA               	bcf	_ff+1,5
  5897                           
  5898                           ;main.c: 187:         ff.bits.RELE_CONTROL_ON = 1;
  5899  0427  177A               	bsf	_ff+1,6
  5900  0428                     __ccov124_end_blk3:
  5901  0428                     __ccov125_start_blk4:
  5902  0428                     l2188:
  5903  0428  1631               	bsf	__ccovbit4_42/(0+8),__ccovbit4_42& (0+7)	;volatile
  5904                           
  5905                           ;main.c: 189:         time_rele_control = RELE_GAP + RELE_POWER_AUTOROTATION_DELAY + REL
      +                          E_GAP;
  5906  0429  3009               	movlw	9
  5907  042A  00C3               	movwf	_time_rele_control
  5908  042B  3000               	movlw	0
  5909  042C  00C4               	movwf	_time_rele_control+1
  5910                           
  5911                           ;main.c: 190:         time_rele_power = RELE_POWER_AUTOROTATION_DELAY;
  5912  042D  3005               	movlw	5
  5913  042E  00C5               	movwf	_time_rele_power
  5914  042F  3000               	movlw	0
  5915  0430  00C6               	movwf	_time_rele_power+1
  5916                           
  5917                           ;main.c: 191:         time_rele_gap = RELE_GAP;
  5918  0431  3002               	movlw	2
  5919  0432  00C1               	movwf	_time_rele_gap
  5920  0433  3000               	movlw	0
  5921  0434  00C2               	movwf	_time_rele_gap+1
  5922                           
  5923                           ;main.c: 193:         time_rotation = 0;
  5924  0435  3000               	movlw	0
  5925  0436  00B4               	movwf	_time_rotation
  5926  0437  3000               	movlw	0
  5927  0438  00B5               	movwf	_time_rotation+1
  5928  0439  3000               	movlw	0
  5929  043A  00B6               	movwf	_time_rotation+2
  5930  043B                     __ccov125_end_blk4:
  5931  043B                     __ccov126_start_blk6:
  5932  043B                     l325:
  5933  043B  0020               	movlb	0	; select bank0
  5934  043C  15B1               	bsf	__ccovbit6_43/(0+8),__ccovbit6_43& (0+7)	;volatile
  5935  043D  0008               	return
  5936  043E                     __end_of_go_close_short:
  5937  043E                     
  5938                           	psect	intentry
  5939  0004                     __pintentry:	
  5940 ;; *************** function _INTERRUPT_InterruptManager *****************
  5941 ;; Defined at:
  5942 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5943 ;; Parameters:    Size  Location     Type
  5944 ;;		None
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;		None
  5947 ;; Return value:  Size  Location     Type
  5948 ;;                  1    wreg      void 
  5949 ;; Registers used:
  5950 ;;		wreg, status,2, status,0, pclath, cstack
  5951 ;; Tracked objects:
  5952 ;;		On entry : 0/0
  5953 ;;		On exit  : 0/0
  5954 ;;		Unchanged: 0/0
  5955 ;; Data sizes:     COMMON   BANK0   BANK1
  5956 ;;      Params:         0       0       0
  5957 ;;      Locals:         0       0       0
  5958 ;;      Temps:          0       0       0
  5959 ;;      Totals:         0       0       0
  5960 ;;Total ram usage:        0 bytes
  5961 ;; Hardware stack levels used: 1
  5962 ;; Hardware stack levels required when called: 6
  5963 ;; This function calls:
  5964 ;;		_TMR0_ISR
  5965 ;;		_TMR2_ISR
  5966 ;; This function is called by:
  5967 ;;		Interrupt level 1
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971  0004                     _INTERRUPT_InterruptManager:
  5972                           
  5973                           ;incstack = 0
  5974  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5975                           
  5976                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  5977  0005  3180               	pagesel	$
  5978  0006                     i1l2488:
  5979                           
  5980                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5981  0006  1E8B               	btfss	11,5	;volatile
  5982  0007  2809               	goto	u250_21
  5983  0008  280A               	goto	u250_20
  5984  0009                     u250_21:
  5985  0009  2814               	goto	i1l108
  5986  000A                     u250_20:
  5987  000A                     __ccov39_end_blk0:
  5988  000A                     __ccov40_start_blk1:
  5989  000A                     i1l2490:
  5990  000A  1472               	bsf	__ccovbit1_7/(0+8),__ccovbit1_7& (0+7)	;volatile
  5991  000B  1D0B               	btfss	11,2	;volatile
  5992  000C  280E               	goto	u251_21
  5993  000D  280F               	goto	u251_20
  5994  000E                     u251_21:
  5995  000E  2814               	goto	i1l108
  5996  000F                     u251_20:
  5997  000F                     __ccov40_end_blk1:
  5998  000F                     __ccov41_start_blk2:
  5999  000F                     i1l2492:
  6000  000F  17F1               	bsf	__ccovbit2_8/(0+8),__ccovbit2_8& (0+7)	;volatile
  6001                           
  6002                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  6003  0010  3186  2624  3180   	fcall	_TMR0_ISR
  6004                           
  6005                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  6006  0013  282A               	goto	i1l114
  6007  0014                     __ccov41_end_blk2:
  6008  0014                     __ccov42_start_blk3:
  6009  0014                     i1l108:	
  6010                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  6011                           
  6012  0014  1771               	bsf	__ccovbit3_9/(0+8),__ccovbit3_9& (0+7)	;volatile
  6013  0015  1F0B               	btfss	11,6	;volatile
  6014  0016  2818               	goto	u252_21
  6015  0017  2819               	goto	u252_20
  6016  0018                     u252_21:
  6017  0018  282A               	goto	i1l114
  6018  0019                     u252_20:
  6019  0019                     __ccov42_end_blk3:
  6020  0019                     __ccov43_start_blk4:
  6021  0019                     i1l2494:
  6022                           
  6023                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  6024  0019  0021               	movlb	1	; select bank1
  6025  001A  1C91               	btfss	17,1	;volatile
  6026  001B  281D               	goto	u253_21
  6027  001C  281E               	goto	u253_20
  6028  001D                     u253_21:
  6029  001D  2829               	goto	i1l113
  6030  001E                     u253_20:
  6031  001E                     __ccov43_end_blk4:
  6032  001E                     __ccov44_start_blk5:
  6033  001E                     i1l2496:
  6034  001E  16F1               	bsf	__ccovbit5_10/(0+8),__ccovbit5_10& (0+7)	;volatile
  6035  001F  0020               	movlb	0	; select bank0
  6036  0020  1C91               	btfss	17,1	;volatile
  6037  0021  2823               	goto	u254_21
  6038  0022  2824               	goto	u254_20
  6039  0023                     u254_21:
  6040  0023  2829               	goto	i1l113
  6041  0024                     u254_20:
  6042  0024                     __ccov44_end_blk5:
  6043  0024                     __ccov45_start_blk6:
  6044  0024                     i1l2498:
  6045  0024  1671               	bsf	__ccovbit6_11/(0+8),__ccovbit6_11& (0+7)	;volatile
  6046                           
  6047                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
  6048  0025  3186  2636  3180   	fcall	_TMR2_ISR
  6049                           
  6050                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  6051  0028  282A               	goto	i1l114
  6052  0029                     __ccov45_end_blk6:
  6053  0029                     __ccov46_start_blk10:
  6054  0029                     i1l113:	
  6055                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  6056                           
  6057  0029  15F1               	bsf	__ccovbit10_12/(0+8),__ccovbit10_12& (0+7)	;volatile
  6058  002A                     __ccov46_end_blk10:
  6059  002A                     __ccov47_start_blk12:
  6060  002A                     i1l114:
  6061  002A  1571               	bsf	__ccovbit12_13/(0+8),__ccovbit12_13& (0+7)	;volatile
  6062  002B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6063  002C  0009               	retfie
  6064  002D                     __end_of_INTERRUPT_InterruptManager:
  6065  002D                     
  6066                           	psect	text34
  6067  0636                     __ptext34:	
  6068 ;; *************** function _TMR2_ISR *****************
  6069 ;; Defined at:
  6070 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;		None
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;		None
  6075 ;; Return value:  Size  Location     Type
  6076 ;;                  1    wreg      void 
  6077 ;; Registers used:
  6078 ;;		wreg, status,2, status,0, pclath, cstack
  6079 ;; Tracked objects:
  6080 ;;		On entry : 0/0
  6081 ;;		On exit  : 0/0
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMMON   BANK0   BANK1
  6084 ;;      Params:         0       0       0
  6085 ;;      Locals:         0       0       0
  6086 ;;      Temps:          0       0       0
  6087 ;;      Totals:         0       0       0
  6088 ;;Total ram usage:        0 bytes
  6089 ;; Hardware stack levels used: 1
  6090 ;; Hardware stack levels required when called: 5
  6091 ;; This function calls:
  6092 ;;		Absolute function
  6093 ;;		_TMR2_DefaultInterruptHandler
  6094 ;;		_ms_tick
  6095 ;; This function is called by:
  6096 ;;		_INTERRUPT_InterruptManager
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100  0636                     _TMR2_ISR:	
  6101                           ;psect for function _TMR2_ISR
  6102                           
  6103                           
  6104                           ;incstack = 0
  6105                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  6106  0636                     i1l2258:
  6107                           
  6108                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
  6109  0636  0020               	movlb	0	; select bank0
  6110  0637  1091               	bcf	17,1	;volatile
  6111  0638                     __ccov65_end_blk0:
  6112  0638                     __ccov66_start_blk1:
  6113  0638                     i1l2260:
  6114                           
  6115                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
  6116  0638  0855               	movf	_TMR2_InterruptHandler,w
  6117  0639  0456               	iorwf	_TMR2_InterruptHandler+1,w
  6118  063A  1903               	btfsc	3,2
  6119  063B  2E3D               	goto	u209_21
  6120  063C  2E3E               	goto	u209_20
  6121  063D                     u209_21:
  6122  063D  2E44               	goto	i1l154
  6123  063E                     __ccov66_end_blk1:
  6124  063E                     u209_20:
  6125  063E                     __ccov67_start_blk2:
  6126  063E                     i1l2262:
  6127  063E  17F0               	bsf	__ccovbit2_16/(0+8),__ccovbit2_16& (0+7)	;volatile
  6128                           
  6129                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
  6130  063F  0856               	movf	_TMR2_InterruptHandler+1,w
  6131  0640  008A               	movwf	10
  6132  0641  0855               	movf	_TMR2_InterruptHandler,w
  6133  0642  000A               	callw
  6134  0643  3186               	pagesel	$
  6135  0644                     __ccov67_end_blk2:
  6136  0644                     __ccov68_start_blk4:
  6137  0644                     i1l154:
  6138  0644  1770               	bsf	__ccovbit4_17/(0+8),__ccovbit4_17& (0+7)	;volatile
  6139  0645  0008               	return
  6140  0646                     __end_of_TMR2_ISR:
  6141  0646                     
  6142                           	psect	text35
  6143  06CA                     __ptext35:	
  6144 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  6145 ;; Defined at:
  6146 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;		None
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;		None
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  1    wreg      void 
  6153 ;; Registers used:
  6154 ;;		None
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMMON   BANK0   BANK1
  6160 ;;      Params:         0       0       0
  6161 ;;      Locals:         0       0       0
  6162 ;;      Temps:          0       0       0
  6163 ;;      Totals:         0       0       0
  6164 ;;Total ram usage:        0 bytes
  6165 ;; Hardware stack levels used: 1
  6166 ;; This function calls:
  6167 ;;		Nothing
  6168 ;; This function is called by:
  6169 ;;		_TMR2_Initialize
  6170 ;;		_TMR2_ISR
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174  06CA                     _TMR2_DefaultInterruptHandler:	
  6175                           ;psect for function _TMR2_DefaultInterruptHandler
  6176                           
  6177                           
  6178                           ;incstack = 0
  6179                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  6180  06CA                     i1l160:
  6181  06CA  1670               	bsf	__ccovbit0_19/(0+8),__ccovbit0_19& (0+7)	;volatile
  6182  06CB  0008               	return
  6183  06CC                     __end_of_TMR2_DefaultInterruptHandler:
  6184  06CC                     
  6185                           	psect	text36
  6186  02C6                     __ptext36:	
  6187 ;; *************** function _ms_tick *****************
  6188 ;; Defined at:
  6189 ;;		line 521 in file "main.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;		None
  6192 ;; Auto vars:     Size  Location     Type
  6193 ;;		None
  6194 ;; Return value:  Size  Location     Type
  6195 ;;                  1    wreg      void 
  6196 ;; Registers used:
  6197 ;;		wreg, status,2, status,0, pclath, cstack
  6198 ;; Tracked objects:
  6199 ;;		On entry : 0/0
  6200 ;;		On exit  : 0/0
  6201 ;;		Unchanged: 0/0
  6202 ;; Data sizes:     COMMON   BANK0   BANK1
  6203 ;;      Params:         0       0       0
  6204 ;;      Locals:         0       0       0
  6205 ;;      Temps:          0       0       0
  6206 ;;      Totals:         0       0       0
  6207 ;;Total ram usage:        0 bytes
  6208 ;; Hardware stack levels used: 1
  6209 ;; Hardware stack levels required when called: 4
  6210 ;; This function calls:
  6211 ;;		_ms_100_work
  6212 ;;		_ms_200_work
  6213 ;;		_sec_work
  6214 ;;		_stop_tone
  6215 ;; This function is called by:
  6216 ;;		_start_setup
  6217 ;;		_TMR2_ISR
  6218 ;; This function uses a non-reentrant model
  6219 ;;
  6220                           
  6221  02C6                     _ms_tick:	
  6222                           ;psect for function _ms_tick
  6223                           
  6224                           
  6225                           ;incstack = 0
  6226                           ; Regs used in _ms_tick: [wreg+status,2+status,0+pclath+cstack]
  6227  02C6                     i1l2212:
  6228                           
  6229                           ;main.c: 522:     static unsigned ms_count = 0;;main.c: 523:     static unsigned s_count
      +                           = 0;;main.c: 524:     ms_count++;
  6230  02C6  3001               	movlw	1
  6231  02C7  0020               	movlb	0	; select bank0
  6232  02C8  07B9               	addwf	ms_tick@ms_count,f
  6233  02C9  3000               	movlw	0
  6234  02CA  3DBA               	addwfc	ms_tick@ms_count+1,f
  6235  02CB                     __ccov282_end_blk0:
  6236  02CB                     __ccov283_start_blk1:
  6237  02CB                     i1l2214:
  6238                           
  6239                           ;main.c: 525:     if (time_tone > 0) {
  6240  02CB  083F               	movf	_time_tone,w
  6241  02CC  0440               	iorwf	_time_tone+1,w
  6242  02CD  1903               	btfsc	3,2
  6243  02CE  2AD0               	goto	u201_21
  6244  02CF  2AD1               	goto	u201_20
  6245  02D0                     u201_21:
  6246  02D0  2AE0               	goto	i1l2222
  6247  02D1                     __ccov283_end_blk1:
  6248  02D1                     u201_20:
  6249  02D1                     __ccov284_start_blk2:
  6250  02D1                     i1l2216:
  6251                           
  6252                           ;main.c: 526:         time_tone--;
  6253  02D1  3001               	movlw	1
  6254  02D2  02BF               	subwf	_time_tone,f
  6255  02D3  3000               	movlw	0
  6256  02D4  3BC0               	subwfb	_time_tone+1,f
  6257  02D5                     __ccov284_end_blk2:
  6258  02D5                     __ccov285_start_blk3:
  6259  02D5                     i1l2218:
  6260  02D5  16A4               	bsf	__ccovbit3_145/(0+8),__ccovbit3_145& (0+7)	;volatile
  6261                           
  6262                           ;main.c: 527:         if (time_tone == 0) {
  6263  02D6  083F               	movf	_time_tone,w
  6264  02D7  0440               	iorwf	_time_tone+1,w
  6265  02D8  1D03               	btfss	3,2
  6266  02D9  2ADB               	goto	u202_21
  6267  02DA  2ADC               	goto	u202_20
  6268  02DB                     u202_21:
  6269  02DB  2AE0               	goto	i1l2222
  6270  02DC                     __ccov285_end_blk3:
  6271  02DC                     u202_20:
  6272  02DC                     __ccov286_start_blk4:
  6273  02DC                     i1l2220:
  6274  02DC  1624               	bsf	__ccovbit4_146/(0+8),__ccovbit4_146& (0+7)	;volatile
  6275                           
  6276                           ;main.c: 528:             stop_tone();
  6277  02DD  3186  26A1  3182   	fcall	_stop_tone
  6278  02E0                     __ccov286_end_blk4:
  6279  02E0                     __ccov287_start_blk7:
  6280  02E0                     i1l2222:
  6281                           
  6282                           ;main.c: 532:     ff.bits.ALLOW_FUN = 1;
  6283  02E0  16F9               	bsf	_ff,5
  6284  02E1                     __ccov287_end_blk7:
  6285  02E1                     __ccov288_start_blk8:
  6286  02E1                     i1l2224:
  6287                           
  6288                           ;main.c: 533:     ff.bits.ALLOW_JUMP = 1;
  6289  02E1  1779               	bsf	_ff,6
  6290  02E2                     __ccov288_end_blk8:
  6291  02E2                     __ccov289_start_blk9:
  6292  02E2                     i1l2226:
  6293                           
  6294                           ;main.c: 535:     if (ms_count == 100) {
  6295  02E2  3064               	movlw	100
  6296  02E3  0020               	movlb	0	; select bank0
  6297  02E4  0639               	xorwf	ms_tick@ms_count,w
  6298  02E5  043A               	iorwf	ms_tick@ms_count+1,w
  6299  02E6  1D03               	btfss	3,2
  6300  02E7  2AE9               	goto	u203_21
  6301  02E8  2AEA               	goto	u203_20
  6302  02E9                     u203_21:
  6303  02E9  2AF8               	goto	i1l2236
  6304  02EA                     __ccov289_end_blk9:
  6305  02EA                     u203_20:
  6306  02EA                     __ccov290_start_blk10:
  6307  02EA                     i1l2228:
  6308                           
  6309                           ;main.c: 536:         ms_100_work();
  6310  02EA  3186  2656  3182   	fcall	_ms_100_work
  6311  02ED                     __ccov290_end_blk10:
  6312  02ED                     __ccov291_start_blk11:
  6313  02ED                     i1l2230:
  6314                           
  6315                           ;main.c: 537:         ms_200_work();
  6316  02ED  3182  2283  3182   	fcall	_ms_200_work
  6317                           
  6318                           ;main.c: 538:         s_count++;
  6319  02F0  3001               	movlw	1
  6320  02F1  0020               	movlb	0	; select bank0
  6321  02F2  07B7               	addwf	ms_tick@s_count,f
  6322  02F3  3000               	movlw	0
  6323  02F4  3DB8               	addwfc	ms_tick@s_count+1,f
  6324  02F5                     __ccov291_end_blk11:
  6325  02F5                     __ccov292_start_blk12:
  6326  02F5                     i1l2232:
  6327  02F5  15A4               	bsf	__ccovbit12_147/(0+8),__ccovbit12_147& (0+7)	;volatile
  6328                           
  6329                           ;main.c: 539:         ms_count = 0;
  6330  02F6  01B9               	clrf	ms_tick@ms_count
  6331  02F7  01BA               	clrf	ms_tick@ms_count+1
  6332  02F8                     __ccov292_end_blk12:
  6333  02F8                     __ccov293_start_blk16:
  6334  02F8                     i1l2236:
  6335                           
  6336                           ;main.c: 547:     if (s_count == 10) {
  6337  02F8  300A               	movlw	10
  6338  02F9  0637               	xorwf	ms_tick@s_count,w
  6339  02FA  0438               	iorwf	ms_tick@s_count+1,w
  6340  02FB  1D03               	btfss	3,2
  6341  02FC  2AFE               	goto	u204_21
  6342  02FD  2AFF               	goto	u204_20
  6343  02FE                     u204_21:
  6344  02FE  2B06               	goto	i1l460
  6345  02FF                     __ccov293_end_blk16:
  6346  02FF                     u204_20:
  6347  02FF                     __ccov294_start_blk17:
  6348  02FF                     i1l2238:
  6349                           
  6350                           ;main.c: 548:         sec_work();
  6351  02FF  3180  2049  3182   	fcall	_sec_work
  6352  0302                     __ccov294_end_blk17:
  6353  0302                     __ccov295_start_blk18:
  6354  0302                     i1l2240:
  6355  0302  0020               	movlb	0	; select bank0
  6356  0303  1524               	bsf	__ccovbit18_148/(0+8),__ccovbit18_148& (0+7)	;volatile
  6357                           
  6358                           ;main.c: 549:         s_count = 0;
  6359  0304  01B7               	clrf	ms_tick@s_count
  6360  0305  01B8               	clrf	ms_tick@s_count+1
  6361  0306                     __ccov295_end_blk18:
  6362  0306                     __ccov296_start_blk20:
  6363  0306                     i1l460:
  6364  0306  14A4               	bsf	__ccovbit20_149/(0+8),__ccovbit20_149& (0+7)	;volatile
  6365  0307  0008               	return
  6366  0308                     __end_of_ms_tick:
  6367  0308                     
  6368                           	psect	text37
  6369  06A1                     __ptext37:	
  6370 ;; *************** function _stop_tone *****************
  6371 ;; Defined at:
  6372 ;;		line 128 in file "main.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;		None
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;		None
  6377 ;; Return value:  Size  Location     Type
  6378 ;;                  1    wreg      void 
  6379 ;; Registers used:
  6380 ;;		None
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMMON   BANK0   BANK1
  6386 ;;      Params:         0       0       0
  6387 ;;      Locals:         0       0       0
  6388 ;;      Temps:          0       0       0
  6389 ;;      Totals:         0       0       0
  6390 ;;Total ram usage:        0 bytes
  6391 ;; Hardware stack levels used: 1
  6392 ;; This function calls:
  6393 ;;		Nothing
  6394 ;; This function is called by:
  6395 ;;		_ms_tick
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399  06A1                     _stop_tone:	
  6400                           ;psect for function _stop_tone
  6401                           
  6402                           
  6403                           ;incstack = 0
  6404                           ; Regs used in _stop_tone: []
  6405  06A1                     i1l2044:
  6406                           
  6407                           ;main.c: 129:     ff.bits.ZUM_BUSY = 0;
  6408  06A1  127B               	bcf	_ff+2,4
  6409                           
  6410                           ;main.c: 130:     ff.bits.TONE_ON = 0;
  6411  06A2  10FB               	bcf	_ff+2,1
  6412                           
  6413                           ;main.c: 131:     ff.bits.TONE_OFF = 1;
  6414  06A3  157B               	bsf	_ff+2,2
  6415  06A4                     __ccov95_end_blk0:
  6416  06A4                     __ccov96_start_blk1:
  6417  06A4                     i1l302:
  6418  06A4  0020               	movlb	0	; select bank0
  6419  06A5  1633               	bsf	__ccovbit1_26/(0+8),__ccovbit1_26& (0+7)	;volatile
  6420  06A6  0008               	return
  6421  06A7                     __end_of_stop_tone:
  6422  06A7                     
  6423                           	psect	text38
  6424  0049                     __ptext38:	
  6425 ;; *************** function _sec_work *****************
  6426 ;; Defined at:
  6427 ;;		line 439 in file "main.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;		None
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;		None
  6432 ;; Return value:  Size  Location     Type
  6433 ;;                  1    wreg      void 
  6434 ;; Registers used:
  6435 ;;		wreg, status,2, status,0, pclath, cstack
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMMON   BANK0   BANK1
  6441 ;;      Params:         0       0       0
  6442 ;;      Locals:         0       0       0
  6443 ;;      Temps:          1       0       0
  6444 ;;      Totals:         1       0       0
  6445 ;;Total ram usage:        1 bytes
  6446 ;; Hardware stack levels used: 1
  6447 ;; Hardware stack levels required when called: 1
  6448 ;; This function calls:
  6449 ;;		_minute_tick
  6450 ;;		_rele_tick
  6451 ;;		_sec_30_work
  6452 ;; This function is called by:
  6453 ;;		_ms_tick
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           
  6457  0049                     _sec_work:	
  6458                           ;psect for function _sec_work
  6459                           
  6460                           
  6461                           ;incstack = 0
  6462                           ; Regs used in _sec_work: [wreg+status,2+status,0+pclath+cstack]
  6463  0049                     i1l2076:
  6464                           
  6465                           ;main.c: 447:     sec_count++;
  6466  0049  3001               	movlw	1
  6467  004A  00F4               	movwf	??_sec_work
  6468  004B  0874               	movf	??_sec_work,w
  6469  004C  0020               	movlb	0	; select bank0
  6470  004D  07D2               	addwf	_sec_count,f
  6471  004E                     __ccov242_end_blk0:
  6472  004E                     __ccov243_start_blk1:
  6473  004E                     i1l2078:
  6474                           
  6475                           ;main.c: 448:     if (!ff.bits.MOVING_ALLOWED) {
  6476  004E  1BFB               	btfsc	_ff+2,7
  6477  004F  2851               	goto	u165_21
  6478  0050  2852               	goto	u165_20
  6479  0051                     u165_21:
  6480  0051  285D               	goto	i1l414
  6481  0052                     __ccov243_end_blk1:
  6482  0052                     u165_20:
  6483  0052                     __ccov244_start_blk2:
  6484  0052                     i1l2080:
  6485                           
  6486                           ;main.c: 449:         if (time_moving_wait > 0) {
  6487  0052  0850               	movf	_time_moving_wait,w
  6488  0053  1903               	btfsc	3,2
  6489  0054  2856               	goto	u166_21
  6490  0055  2857               	goto	u166_20
  6491  0056                     u166_21:
  6492  0056  285B               	goto	i1l415
  6493  0057                     __ccov244_end_blk2:
  6494  0057                     u166_20:
  6495  0057                     __ccov245_start_blk3:
  6496  0057                     i1l2082:
  6497  0057  1727               	bsf	__ccovbit3_120/(0+8),__ccovbit3_120& (0+7)	;volatile
  6498                           
  6499                           ;main.c: 450:             time_moving_wait--;
  6500  0058  3001               	movlw	1
  6501  0059  02D0               	subwf	_time_moving_wait,f
  6502                           
  6503                           ;main.c: 451:         } else {
  6504  005A  285D               	goto	i1l414
  6505  005B                     __ccov245_end_blk3:
  6506  005B                     __ccov246_start_blk4:
  6507  005B                     i1l415:
  6508  005B  16A7               	bsf	__ccovbit4_121/(0+8),__ccovbit4_121& (0+7)	;volatile
  6509                           
  6510                           ;main.c: 452:             ff.bits.MOVING_ALLOWED = 1;
  6511  005C  17FB               	bsf	_ff+2,7
  6512  005D                     __ccov246_end_blk4:
  6513  005D                     __ccov247_start_blk6:
  6514  005D                     i1l414:	
  6515                           ;main.c: 454:     }
  6516                           
  6517                           
  6518                           ;main.c: 455:     if (ff.bits.NORMAL_WORK_MODE_ON) {
  6519  005D  1C7C               	btfss	_ff+3,0
  6520  005E  2860               	goto	u167_21
  6521  005F  2861               	goto	u167_20
  6522  0060                     u167_21:
  6523  0060  2874               	goto	i1l2090
  6524  0061                     __ccov247_end_blk6:
  6525  0061                     u167_20:
  6526  0061                     __ccov248_start_blk7:
  6527  0061                     i1l2084:
  6528                           
  6529                           ;main.c: 456:         if (ff.bits.OPENED){
  6530  0061  1D7A               	btfss	_ff+1,2
  6531  0062  2864               	goto	u168_21
  6532  0063  2865               	goto	u168_20
  6533  0064                     u168_21:
  6534  0064  2870               	goto	i1l2088
  6535  0065                     __ccov248_end_blk7:
  6536  0065                     u168_20:
  6537  0065                     __ccov249_start_blk8:
  6538  0065                     i1l2086:
  6539  0065  1627               	bsf	__ccovbit8_122/(0+8),__ccovbit8_122& (0+7)	;volatile
  6540                           
  6541                           ;main.c: 457:             time_rotation++;
  6542  0066  3001               	movlw	1
  6543  0067  07B4               	addwf	_time_rotation,f
  6544  0068  3000               	movlw	0
  6545  0069  1803               	skipnc
  6546  006A  3001               	movlw	1
  6547  006B  07B5               	addwf	_time_rotation+1,f
  6548  006C  3000               	movlw	0
  6549  006D  1803               	skipnc
  6550  006E  3001               	movlw	1
  6551  006F  07B6               	addwf	_time_rotation+2,f
  6552  0070                     __ccov249_end_blk8:
  6553  0070                     __ccov250_start_blk10:
  6554  0070                     i1l2088:
  6555  0070  15A7               	bsf	__ccovbit10_123/(0+8),__ccovbit10_123& (0+7)	;volatile
  6556                           
  6557                           ;main.c: 459:         rele_tick();
  6558  0071  3181  2194  3180   	fcall	_rele_tick
  6559  0074                     __ccov250_end_blk10:
  6560  0074                     __ccov251_start_blk12:
  6561  0074                     i1l2090:
  6562                           
  6563                           ;main.c: 462:     if (ff.bits.ALARM_ON) {
  6564  0074  1C79               	btfss	_ff,0
  6565  0075  2877               	goto	u169_21
  6566  0076  2878               	goto	u169_20
  6567  0077                     u169_21:
  6568  0077  289A               	goto	i1l419
  6569  0078                     __ccov251_end_blk12:
  6570  0078                     u169_20:
  6571  0078                     __ccov252_start_blk13:
  6572  0078                     i1l2092:
  6573                           
  6574                           ;main.c: 464:         if (sec_count == 30|| sec_count==60) {
  6575  0078  301E               	movlw	30
  6576  0079  0020               	movlb	0	; select bank0
  6577  007A  0652               	xorwf	_sec_count,w
  6578  007B  1903               	btfsc	3,2
  6579  007C  287E               	goto	u170_21
  6580  007D  287F               	goto	u170_20
  6581  007E                     u170_21:
  6582  007E  2886               	goto	i1l2096
  6583  007F                     __ccov252_end_blk13:
  6584  007F                     u170_20:
  6585  007F                     __ccov253_start_blk14:
  6586  007F                     i1l2094:
  6587  007F  1527               	bsf	__ccovbit14_124/(0+8),__ccovbit14_124& (0+7)	;volatile
  6588  0080  303C               	movlw	60
  6589  0081  0652               	xorwf	_sec_count,w
  6590  0082  1D03               	btfss	3,2
  6591  0083  2885               	goto	u171_21
  6592  0084  2886               	goto	u171_20
  6593  0085                     u171_21:
  6594  0085  288A               	goto	i1l2098
  6595  0086                     __ccov253_end_blk14:
  6596  0086                     u171_20:
  6597  0086                     __ccov254_start_blk16:
  6598  0086                     i1l2096:
  6599  0086  14A7               	bsf	__ccovbit16_125/(0+8),__ccovbit16_125& (0+7)	;volatile
  6600                           
  6601                           ;main.c: 465:             sec_30_work();
  6602  0087  3186  2646  3180   	fcall	_sec_30_work
  6603  008A                     __ccov254_end_blk16:
  6604  008A                     __ccov255_start_blk18:
  6605  008A                     i1l2098:
  6606  008A  0020               	movlb	0	; select bank0
  6607  008B  1427               	bsf	__ccovbit18_126/(0+8),__ccovbit18_126& (0+7)	;volatile
  6608                           
  6609                           ;main.c: 468:         ff.bits.LED_ON = !ff.bits.LED_ON;
  6610  008C  1003               	clrc
  6611  008D  1D7C               	btfss	_ff+3,2
  6612  008E  1403               	setc
  6613  008F  3000               	movlw	0
  6614  0090  3D09               	addwfc	9,w
  6615  0091  00F4               	movwf	??_sec_work
  6616  0092  0DF4               	rlf	??_sec_work,f
  6617  0093  0DF4               	rlf	??_sec_work,f
  6618  0094  087C               	movf	_ff+3,w
  6619  0095  0674               	xorwf	??_sec_work,w
  6620  0096  39FB               	andlw	-5
  6621  0097  0674               	xorwf	??_sec_work,w
  6622  0098  00FC               	movwf	_ff+3
  6623                           
  6624                           ;main.c: 470:     } else if (ff.bits.ALARM_OFF) {
  6625  0099  28BA               	goto	i1l2108
  6626  009A                     __ccov255_end_blk18:
  6627  009A                     __ccov256_start_blk19:
  6628  009A                     i1l419:
  6629  009A  0020               	movlb	0	; select bank0
  6630  009B  17A6               	bsf	__ccovbit19_127/(0+8),__ccovbit19_127& (0+7)	;volatile
  6631  009C  1CF9               	btfss	_ff,1
  6632  009D  289F               	goto	u172_21
  6633  009E  28A0               	goto	u172_20
  6634  009F                     u172_21:
  6635  009F  28BA               	goto	i1l2108
  6636  00A0                     __ccov256_end_blk19:
  6637  00A0                     u172_20:
  6638  00A0                     __ccov257_start_blk20:
  6639  00A0                     i1l2100:
  6640                           
  6641                           ;main.c: 472:         static char iled;;main.c: 473:         iled++;
  6642  00A0  3001               	movlw	1
  6643  00A1  00F4               	movwf	??_sec_work
  6644  00A2  0874               	movf	??_sec_work,w
  6645  00A3  07CC               	addwf	sec_work@iled,f
  6646  00A4                     __ccov257_end_blk20:
  6647  00A4                     __ccov258_start_blk21:
  6648  00A4                     i1l2102:
  6649  00A4  1726               	bsf	__ccovbit21_128/(0+8),__ccovbit21_128& (0+7)	;volatile
  6650                           
  6651                           ;main.c: 474:         if (iled > 2) {
  6652  00A5  3003               	movlw	3
  6653  00A6  024C               	subwf	sec_work@iled,w
  6654  00A7  1C03               	skipc
  6655  00A8  28AA               	goto	u173_21
  6656  00A9  28AB               	goto	u173_20
  6657  00AA                     u173_21:
  6658  00AA  28BA               	goto	i1l2108
  6659  00AB                     __ccov258_end_blk21:
  6660  00AB                     u173_20:
  6661  00AB                     __ccov259_start_blk22:
  6662  00AB                     i1l2104:
  6663                           
  6664                           ;main.c: 475:             ff.bits.LED_ON = !ff.bits.LED_ON;
  6665  00AB  1003               	clrc
  6666  00AC  1D7C               	btfss	_ff+3,2
  6667  00AD  1403               	setc
  6668  00AE  3000               	movlw	0
  6669  00AF  3D09               	addwfc	9,w
  6670  00B0  00F4               	movwf	??_sec_work
  6671  00B1  0DF4               	rlf	??_sec_work,f
  6672  00B2  0DF4               	rlf	??_sec_work,f
  6673  00B3  087C               	movf	_ff+3,w
  6674  00B4  0674               	xorwf	??_sec_work,w
  6675  00B5  39FB               	andlw	-5
  6676  00B6  0674               	xorwf	??_sec_work,w
  6677  00B7  00FC               	movwf	_ff+3
  6678  00B8                     __ccov259_end_blk22:
  6679  00B8                     __ccov260_start_blk23:
  6680  00B8                     i1l2106:
  6681  00B8  16A6               	bsf	__ccovbit23_129/(0+8),__ccovbit23_129& (0+7)	;volatile
  6682                           
  6683                           ;main.c: 476:             iled = 0;
  6684  00B9  01CC               	clrf	sec_work@iled
  6685  00BA                     __ccov260_end_blk23:
  6686  00BA                     __ccov261_start_blk27:
  6687  00BA                     i1l2108:
  6688                           
  6689                           ;main.c: 482:     if (sec_count == 60) {
  6690  00BA  303C               	movlw	60
  6691  00BB  0652               	xorwf	_sec_count,w
  6692  00BC  1D03               	btfss	3,2
  6693  00BD  28BF               	goto	u174_21
  6694  00BE  28C0               	goto	u174_20
  6695  00BF                     u174_21:
  6696  00BF  28C6               	goto	i1l429
  6697  00C0                     __ccov261_end_blk27:
  6698  00C0                     u174_20:
  6699  00C0                     __ccov262_start_blk28:
  6700  00C0                     i1l2110:
  6701                           
  6702                           ;main.c: 483:         minute_tick();
  6703  00C0  3185  254F  3180   	fcall	_minute_tick
  6704  00C3                     __ccov262_end_blk28:
  6705  00C3                     __ccov263_start_blk29:
  6706  00C3                     i1l2112:
  6707  00C3  0020               	movlb	0	; select bank0
  6708  00C4  1626               	bsf	__ccovbit29_130/(0+8),__ccovbit29_130& (0+7)	;volatile
  6709                           
  6710                           ;main.c: 484:         sec_count = 0;
  6711  00C5  01D2               	clrf	_sec_count
  6712  00C6                     __ccov263_end_blk29:
  6713  00C6                     __ccov264_start_blk31:
  6714  00C6                     i1l429:
  6715  00C6  15A6               	bsf	__ccovbit31_131/(0+8),__ccovbit31_131& (0+7)	;volatile
  6716  00C7  0008               	return
  6717  00C8                     __end_of_sec_work:
  6718  00C8                     
  6719                           	psect	text39
  6720  0646                     __ptext39:	
  6721 ;; *************** function _sec_30_work *****************
  6722 ;; Defined at:
  6723 ;;		line 431 in file "main.c"
  6724 ;; Parameters:    Size  Location     Type
  6725 ;;		None
  6726 ;; Auto vars:     Size  Location     Type
  6727 ;;		None
  6728 ;; Return value:  Size  Location     Type
  6729 ;;                  1    wreg      void 
  6730 ;; Registers used:
  6731 ;;		wreg
  6732 ;; Tracked objects:
  6733 ;;		On entry : 0/0
  6734 ;;		On exit  : 0/0
  6735 ;;		Unchanged: 0/0
  6736 ;; Data sizes:     COMMON   BANK0   BANK1
  6737 ;;      Params:         0       0       0
  6738 ;;      Locals:         0       0       0
  6739 ;;      Temps:          1       0       0
  6740 ;;      Totals:         1       0       0
  6741 ;;Total ram usage:        1 bytes
  6742 ;; Hardware stack levels used: 1
  6743 ;; This function calls:
  6744 ;;		Nothing
  6745 ;; This function is called by:
  6746 ;;		_sec_work
  6747 ;; This function uses a non-reentrant model
  6748 ;;
  6749                           
  6750  0646                     _sec_30_work:	
  6751                           ;psect for function _sec_30_work
  6752                           
  6753                           
  6754                           ;incstack = 0
  6755                           ; Regs used in _sec_30_work: [wreg]
  6756  0646                     i1l1988:
  6757                           
  6758                           ;main.c: 432:     if (ff.bits.SIREN) {
  6759  0646  1DFB               	btfss	_ff+2,3
  6760  0647  2E49               	goto	u157_21
  6761  0648  2E4A               	goto	u157_20
  6762  0649                     u157_21:
  6763  0649  2E4E               	goto	i1l1992
  6764  064A                     __ccov238_end_blk0:
  6765  064A                     u157_20:
  6766  064A                     __ccov239_start_blk1:
  6767  064A                     i1l1990:
  6768  064A  0020               	movlb	0	; select bank0
  6769  064B  14A8               	bsf	__ccovbit1_117/(0+8),__ccovbit1_117& (0+7)	;volatile
  6770                           
  6771                           ;main.c: 433:         ff.bits.SIREN = 0;
  6772  064C  11FB               	bcf	_ff+2,3
  6773                           
  6774                           ;main.c: 434:     } else {
  6775  064D  2E54               	goto	i1l411
  6776  064E                     __ccov239_end_blk1:
  6777  064E                     __ccov240_start_blk3:
  6778  064E                     i1l1992:
  6779  064E  0020               	movlb	0	; select bank0
  6780  064F  1428               	bsf	__ccovbit3_118/(0+8),__ccovbit3_118& (0+7)	;volatile
  6781                           
  6782                           ;main.c: 435:         beep_short_count = 3;
  6783  0650  3003               	movlw	3
  6784  0651  00F3               	movwf	??_sec_30_work
  6785  0652  0873               	movf	??_sec_30_work,w
  6786  0653  00FD               	movwf	_beep_short_count
  6787  0654                     __ccov240_end_blk3:
  6788  0654                     __ccov241_start_blk5:
  6789  0654                     i1l411:
  6790  0654  17A7               	bsf	__ccovbit5_119/(0+8),__ccovbit5_119& (0+7)	;volatile
  6791  0655  0008               	return
  6792  0656                     __end_of_sec_30_work:
  6793  0656                     
  6794                           	psect	text40
  6795  0194                     __ptext40:	
  6796 ;; *************** function _rele_tick *****************
  6797 ;; Defined at:
  6798 ;;		line 277 in file "main.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;		None
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;		None
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  1    wreg      void 
  6805 ;; Registers used:
  6806 ;;		wreg, status,2, status,0
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMMON   BANK0   BANK1
  6812 ;;      Params:         0       0       0
  6813 ;;      Locals:         0       0       0
  6814 ;;      Temps:          0       0       0
  6815 ;;      Totals:         0       0       0
  6816 ;;Total ram usage:        0 bytes
  6817 ;; Hardware stack levels used: 1
  6818 ;; This function calls:
  6819 ;;		Nothing
  6820 ;; This function is called by:
  6821 ;;		_sec_work
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825  0194                     _rele_tick:	
  6826                           ;psect for function _rele_tick
  6827                           
  6828                           
  6829                           ;incstack = 0
  6830                           ; Regs used in _rele_tick: [wreg+status,2+status,0]
  6831  0194                     i1l1946:
  6832                           
  6833                           ;main.c: 279:     if (ff.bits.OPENING && ff.bits.CLOSING) {
  6834  0194  1CFA               	btfss	_ff+1,1
  6835  0195  2997               	goto	u145_21
  6836  0196  2998               	goto	u145_20
  6837  0197                     u145_21:
  6838  0197  299F               	goto	i1l365
  6839  0198                     __ccov163_end_blk0:
  6840  0198                     u145_20:
  6841  0198                     __ccov164_start_blk1:
  6842  0198                     i1l1948:
  6843  0198  0020               	movlb	0	; select bank0
  6844  0199  152E               	bsf	__ccovbit1_68/(0+8),__ccovbit1_68& (0+7)	;volatile
  6845  019A  1DFA               	btfss	_ff+1,3
  6846  019B  299D               	goto	u146_21
  6847  019C  299E               	goto	u146_20
  6848  019D                     u146_21:
  6849  019D  299F               	goto	i1l365
  6850  019E                     u146_20:
  6851  019E  29F1               	goto	i1l366
  6852  019F                     __ccov164_end_blk1:
  6853  019F                     __ccov165_start_blk3:
  6854  019F                     i1l365:	
  6855                           ;main.c: 281:     }
  6856                           
  6857                           
  6858                           ;main.c: 284:     if (ff.bits.OPENING) {
  6859  019F  1CFA               	btfss	_ff+1,1
  6860  01A0  29A2               	goto	u147_21
  6861  01A1  29A3               	goto	u147_20
  6862  01A2                     u147_21:
  6863  01A2  29BA               	goto	i1l367
  6864  01A3                     __ccov165_end_blk3:
  6865  01A3                     u147_20:
  6866  01A3                     __ccov166_start_blk4:
  6867  01A3                     i1l1952:
  6868  01A3  0020               	movlb	0	; select bank0
  6869  01A4  14AE               	bsf	__ccovbit4_69/(0+8),__ccovbit4_69& (0+7)	;volatile
  6870                           
  6871                           ;main.c: 285:         if (time_rele_power > 0) {
  6872  01A5  0845               	movf	_time_rele_power,w
  6873  01A6  0446               	iorwf	_time_rele_power+1,w
  6874  01A7  1903               	btfsc	3,2
  6875  01A8  29AA               	goto	u148_21
  6876  01A9  29AB               	goto	u148_20
  6877  01AA                     u148_21:
  6878  01AA  29BA               	goto	i1l367
  6879  01AB                     __ccov166_end_blk4:
  6880  01AB                     u148_20:
  6881  01AB                     __ccov167_start_blk5:
  6882  01AB                     i1l1954:
  6883                           
  6884                           ;main.c: 286:             time_rele_power--;
  6885  01AB  3001               	movlw	1
  6886  01AC  02C5               	subwf	_time_rele_power,f
  6887  01AD  3000               	movlw	0
  6888  01AE  3BC6               	subwfb	_time_rele_power+1,f
  6889  01AF                     __ccov167_end_blk5:
  6890  01AF                     __ccov168_start_blk6:
  6891  01AF                     i1l1956:
  6892  01AF  142E               	bsf	__ccovbit6_70/(0+8),__ccovbit6_70& (0+7)	;volatile
  6893                           
  6894                           ;main.c: 287:             if (time_rele_power == 0) {
  6895  01B0  0845               	movf	_time_rele_power,w
  6896  01B1  0446               	iorwf	_time_rele_power+1,w
  6897  01B2  1D03               	btfss	3,2
  6898  01B3  29B5               	goto	u149_21
  6899  01B4  29B6               	goto	u149_20
  6900  01B5                     u149_21:
  6901  01B5  29BA               	goto	i1l367
  6902  01B6                     __ccov168_end_blk6:
  6903  01B6                     u149_20:
  6904  01B6                     __ccov169_start_blk7:
  6905  01B6                     i1l1958:
  6906  01B6  17AD               	bsf	__ccovbit7_71/(0+8),__ccovbit7_71& (0+7)	;volatile
  6907                           
  6908                           ;main.c: 288:                 ff.bits.RELE_POWER_ON = 0;
  6909  01B7  12FA               	bcf	_ff+1,5
  6910                           
  6911                           ;main.c: 289:                 ff.bits.OPENED = 1;
  6912  01B8  157A               	bsf	_ff+1,2
  6913                           
  6914                           ;main.c: 290:                 ff.bits.OPENING = 0;
  6915  01B9  10FA               	bcf	_ff+1,1
  6916  01BA                     __ccov169_end_blk7:
  6917  01BA                     __ccov170_start_blk10:
  6918  01BA                     i1l367:	
  6919                           ;main.c: 293:     }
  6920                           
  6921  01BA  0020               	movlb	0	; select bank0
  6922  01BB  172D               	bsf	__ccovbit10_72/(0+8),__ccovbit10_72& (0+7)	;volatile
  6923                           
  6924                           ;main.c: 296:     if (ff.bits.CLOSING) {
  6925  01BC  1DFA               	btfss	_ff+1,3
  6926  01BD  29BF               	goto	u150_21
  6927  01BE  29C0               	goto	u150_20
  6928  01BF                     u150_21:
  6929  01BF  29F1               	goto	i1l366
  6930  01C0                     __ccov170_end_blk10:
  6931  01C0                     u150_20:
  6932  01C0                     __ccov171_start_blk11:
  6933  01C0                     i1l1960:
  6934                           
  6935                           ;main.c: 298:         if (time_rele_gap == 0) {
  6936  01C0  0841               	movf	_time_rele_gap,w
  6937  01C1  0442               	iorwf	_time_rele_gap+1,w
  6938  01C2  1D03               	btfss	3,2
  6939  01C3  29C5               	goto	u151_21
  6940  01C4  29C6               	goto	u151_20
  6941  01C5                     u151_21:
  6942  01C5  29D6               	goto	i1l1968
  6943  01C6                     __ccov171_end_blk11:
  6944  01C6                     u151_20:
  6945  01C6                     __ccov172_start_blk12:
  6946  01C6                     i1l1962:
  6947                           
  6948                           ;main.c: 299:             if (time_rele_power > 0) {
  6949  01C6  0845               	movf	_time_rele_power,w
  6950  01C7  0446               	iorwf	_time_rele_power+1,w
  6951  01C8  1903               	btfsc	3,2
  6952  01C9  29CB               	goto	u152_21
  6953  01CA  29CC               	goto	u152_20
  6954  01CB                     u152_21:
  6955  01CB  29D3               	goto	i1l372
  6956  01CC                     __ccov172_end_blk12:
  6957  01CC                     u152_20:
  6958  01CC                     __ccov173_start_blk13:
  6959  01CC                     i1l1964:
  6960                           
  6961                           ;main.c: 300:                 ff.bits.RELE_POWER_ON = 1;
  6962  01CC  16FA               	bsf	_ff+1,5
  6963  01CD                     __ccov173_end_blk13:
  6964  01CD                     __ccov174_start_blk14:
  6965  01CD                     i1l1966:
  6966  01CD  16AD               	bsf	__ccovbit14_73/(0+8),__ccovbit14_73& (0+7)	;volatile
  6967                           
  6968                           ;main.c: 301:                 time_rele_power--;
  6969  01CE  3001               	movlw	1
  6970  01CF  02C5               	subwf	_time_rele_power,f
  6971  01D0  3000               	movlw	0
  6972  01D1  3BC6               	subwfb	_time_rele_power+1,f
  6973                           
  6974                           ;main.c: 302:             } else {
  6975  01D2  29DB               	goto	i1l1970
  6976  01D3                     __ccov174_end_blk14:
  6977  01D3                     __ccov175_start_blk15:
  6978  01D3                     i1l372:
  6979  01D3  162D               	bsf	__ccovbit15_74/(0+8),__ccovbit15_74& (0+7)	;volatile
  6980                           
  6981                           ;main.c: 303:                 ff.bits.RELE_POWER_ON = 0;
  6982  01D4  12FA               	bcf	_ff+1,5
  6983  01D5  29DB               	goto	i1l1970
  6984  01D6                     __ccov175_end_blk15:
  6985  01D6                     __ccov176_start_blk18:
  6986  01D6                     i1l1968:
  6987  01D6  15AD               	bsf	__ccovbit18_75/(0+8),__ccovbit18_75& (0+7)	;volatile
  6988                           
  6989                           ;main.c: 306:             time_rele_gap--;
  6990  01D7  3001               	movlw	1
  6991  01D8  02C1               	subwf	_time_rele_gap,f
  6992  01D9  3000               	movlw	0
  6993  01DA  3BC2               	subwfb	_time_rele_gap+1,f
  6994  01DB                     __ccov176_end_blk18:
  6995  01DB                     __ccov177_start_blk20:
  6996  01DB                     i1l1970:
  6997  01DB  152D               	bsf	__ccovbit20_76/(0+8),__ccovbit20_76& (0+7)	;volatile
  6998                           
  6999                           ;main.c: 309:         if (time_rele_control > 0) {
  7000  01DC  0843               	movf	_time_rele_control,w
  7001  01DD  0444               	iorwf	_time_rele_control+1,w
  7002  01DE  1903               	btfsc	3,2
  7003  01DF  29E1               	goto	u153_21
  7004  01E0  29E2               	goto	u153_20
  7005  01E1                     u153_21:
  7006  01E1  29F1               	goto	i1l366
  7007  01E2                     __ccov177_end_blk20:
  7008  01E2                     u153_20:
  7009  01E2                     __ccov178_start_blk21:
  7010  01E2                     i1l1972:
  7011                           
  7012                           ;main.c: 310:             time_rele_control--;
  7013  01E2  3001               	movlw	1
  7014  01E3  02C3               	subwf	_time_rele_control,f
  7015  01E4  3000               	movlw	0
  7016  01E5  3BC4               	subwfb	_time_rele_control+1,f
  7017  01E6                     __ccov178_end_blk21:
  7018  01E6                     __ccov179_start_blk22:
  7019  01E6                     i1l1974:
  7020  01E6  14AD               	bsf	__ccovbit22_77/(0+8),__ccovbit22_77& (0+7)	;volatile
  7021                           
  7022                           ;main.c: 311:             if (time_rele_control == 0) {
  7023  01E7  0843               	movf	_time_rele_control,w
  7024  01E8  0444               	iorwf	_time_rele_control+1,w
  7025  01E9  1D03               	btfss	3,2
  7026  01EA  29EC               	goto	u154_21
  7027  01EB  29ED               	goto	u154_20
  7028  01EC                     u154_21:
  7029  01EC  29F1               	goto	i1l366
  7030  01ED                     __ccov179_end_blk22:
  7031  01ED                     u154_20:
  7032  01ED                     __ccov180_start_blk23:
  7033  01ED                     i1l1976:
  7034  01ED  142D               	bsf	__ccovbit23_78/(0+8),__ccovbit23_78& (0+7)	;volatile
  7035                           
  7036                           ;main.c: 312:                 ff.bits.RELE_CONTROL_ON = 0;
  7037  01EE  137A               	bcf	_ff+1,6
  7038                           
  7039                           ;main.c: 313:                 ff.bits.CLOSED = 1;
  7040  01EF  167A               	bsf	_ff+1,4
  7041                           
  7042                           ;main.c: 314:                 ff.bits.CLOSING = 0;
  7043  01F0  11FA               	bcf	_ff+1,3
  7044  01F1                     __ccov180_end_blk23:
  7045  01F1                     __ccov181_start_blk27:
  7046  01F1                     i1l366:
  7047  01F1  17AC               	bsf	__ccovbit27_79/(0+8),__ccovbit27_79& (0+7)	;volatile
  7048  01F2  0008               	return
  7049  01F3                     __end_of_rele_tick:
  7050  01F3                     
  7051                           	psect	text41
  7052  054F                     __ptext41:	
  7053 ;; *************** function _minute_tick *****************
  7054 ;; Defined at:
  7055 ;;		line 410 in file "main.c"
  7056 ;; Parameters:    Size  Location     Type
  7057 ;;		None
  7058 ;; Auto vars:     Size  Location     Type
  7059 ;;		None
  7060 ;; Return value:  Size  Location     Type
  7061 ;;                  1    wreg      void 
  7062 ;; Registers used:
  7063 ;;		wreg, status,2, status,0
  7064 ;; Tracked objects:
  7065 ;;		On entry : 0/0
  7066 ;;		On exit  : 0/0
  7067 ;;		Unchanged: 0/0
  7068 ;; Data sizes:     COMMON   BANK0   BANK1
  7069 ;;      Params:         0       0       0
  7070 ;;      Locals:         0       0       0
  7071 ;;      Temps:          1       0       0
  7072 ;;      Totals:         1       0       0
  7073 ;;Total ram usage:        1 bytes
  7074 ;; Hardware stack levels used: 1
  7075 ;; This function calls:
  7076 ;;		Nothing
  7077 ;; This function is called by:
  7078 ;;		_sec_work
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081                           
  7082  054F                     _minute_tick:	
  7083                           ;psect for function _minute_tick
  7084                           
  7085                           
  7086                           ;incstack = 0
  7087                           ; Regs used in _minute_tick: [wreg+status,2+status,0]
  7088  054F                     i1l1978:
  7089                           
  7090                           ;main.c: 414:     if (time_melody > 0) {
  7091  054F  0020               	movlb	0	; select bank0
  7092  0550  0851               	movf	_time_melody,w
  7093  0551  1903               	btfsc	3,2
  7094  0552  2D54               	goto	u155_21
  7095  0553  2D55               	goto	u155_20
  7096  0554                     u155_21:
  7097  0554  2D59               	goto	i1l1982
  7098  0555                     __ccov232_end_blk0:
  7099  0555                     u155_20:
  7100  0555                     __ccov233_start_blk1:
  7101  0555                     i1l1980:
  7102  0555  16A8               	bsf	__ccovbit1_113/(0+8),__ccovbit1_113& (0+7)	;volatile
  7103                           
  7104                           ;main.c: 415:        time_melody--;
  7105  0556  3001               	movlw	1
  7106  0557  02D1               	subwf	_time_melody,f
  7107                           
  7108                           ;main.c: 416:     } else {
  7109  0558  2D65               	goto	i1l406
  7110  0559                     __ccov233_end_blk1:
  7111  0559                     __ccov234_start_blk3:
  7112  0559                     i1l1982:
  7113  0559  1628               	bsf	__ccovbit3_114/(0+8),__ccovbit3_114& (0+7)	;volatile
  7114                           
  7115                           ;main.c: 417:         if (time_melody == 0) {
  7116  055A  0851               	movf	_time_melody,w
  7117  055B  1D03               	btfss	3,2
  7118  055C  2D5E               	goto	u156_21
  7119  055D  2D5F               	goto	u156_20
  7120  055E                     u156_21:
  7121  055E  2D65               	goto	i1l406
  7122  055F                     __ccov234_end_blk3:
  7123  055F                     u156_20:
  7124  055F                     __ccov235_start_blk4:
  7125  055F                     i1l1984:
  7126                           
  7127                           ;main.c: 418:             ff.bits.SIREN = 1;
  7128  055F  15FB               	bsf	_ff+2,3
  7129  0560                     __ccov235_end_blk4:
  7130  0560                     __ccov236_start_blk5:
  7131  0560                     i1l1986:
  7132  0560  15A8               	bsf	__ccovbit5_115/(0+8),__ccovbit5_115& (0+7)	;volatile
  7133                           
  7134                           ;main.c: 419:             time_melody = MELODY_REPEAT_DELAY;
  7135  0561  3003               	movlw	3
  7136  0562  00F3               	movwf	??_minute_tick
  7137  0563  0873               	movf	??_minute_tick,w
  7138  0564  00D1               	movwf	_time_melody
  7139  0565                     __ccov236_end_blk5:
  7140  0565                     __ccov237_start_blk8:
  7141  0565                     i1l406:
  7142  0565  1528               	bsf	__ccovbit8_116/(0+8),__ccovbit8_116& (0+7)	;volatile
  7143  0566  0008               	return
  7144  0567                     __end_of_minute_tick:
  7145  0567                     
  7146                           	psect	text42
  7147  0283                     __ptext42:	
  7148 ;; *************** function _ms_200_work *****************
  7149 ;; Defined at:
  7150 ;;		line 489 in file "main.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;		None
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;		None
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  1    wreg      void 
  7157 ;; Registers used:
  7158 ;;		wreg, status,2, status,0, pclath, cstack
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMMON   BANK0   BANK1
  7164 ;;      Params:         0       0       0
  7165 ;;      Locals:         0       0       0
  7166 ;;      Temps:          0       0       0
  7167 ;;      Totals:         0       0       0
  7168 ;;Total ram usage:        0 bytes
  7169 ;; Hardware stack levels used: 1
  7170 ;; Hardware stack levels required when called: 3
  7171 ;; This function calls:
  7172 ;;		_beep_double
  7173 ;;		_beep_long
  7174 ;;		_beep_short
  7175 ;; This function is called by:
  7176 ;;		_ms_tick
  7177 ;; This function uses a non-reentrant model
  7178 ;;
  7179                           
  7180  0283                     _ms_200_work:	
  7181                           ;psect for function _ms_200_work
  7182                           
  7183                           
  7184                           ;incstack = 0
  7185                           ; Regs used in _ms_200_work: [wreg+status,2+status,0+pclath+cstack]
  7186  0283                     i1l2114:
  7187                           
  7188                           ;main.c: 490:     if (ff.bits.ALARM_ON) {
  7189  0283  1C79               	btfss	_ff,0
  7190  0284  2A86               	goto	u175_21
  7191  0285  2A87               	goto	u175_20
  7192  0286                     u175_21:
  7193  0286  2A9D               	goto	i1l432
  7194  0287                     __ccov265_end_blk0:
  7195  0287                     u175_20:
  7196  0287                     __ccov266_start_blk1:
  7197  0287                     i1l2116:
  7198  0287  0020               	movlb	0	; select bank0
  7199  0288  1526               	bsf	__ccovbit1_132/(0+8),__ccovbit1_132& (0+7)	;volatile
  7200                           
  7201                           ;main.c: 491:         if (ff.bits.SIREN) {
  7202  0289  1DFB               	btfss	_ff+2,3
  7203  028A  2A8C               	goto	u176_21
  7204  028B  2A8D               	goto	u176_20
  7205  028C                     u176_21:
  7206  028C  2A92               	goto	i1l2120
  7207  028D                     __ccov266_end_blk1:
  7208  028D                     u176_20:
  7209  028D                     __ccov267_start_blk2:
  7210  028D                     i1l2118:
  7211  028D  14A6               	bsf	__ccovbit2_133/(0+8),__ccovbit2_133& (0+7)	;volatile
  7212                           
  7213                           ;main.c: 492:             beep_double();
  7214  028E  3186  2612  3182   	fcall	_beep_double
  7215                           
  7216                           ;main.c: 493:         } else {
  7217  0291  2AC3               	goto	i1l442
  7218  0292                     __ccov267_end_blk2:
  7219  0292                     __ccov268_start_blk4:
  7220  0292                     i1l2120:
  7221  0292  1426               	bsf	__ccovbit4_134/(0+8),__ccovbit4_134& (0+7)	;volatile
  7222                           
  7223                           ;main.c: 494:             if (beep_short_count > 0) {
  7224  0293  087D               	movf	_beep_short_count,w
  7225  0294  1903               	btfsc	3,2
  7226  0295  2A97               	goto	u177_21
  7227  0296  2A98               	goto	u177_20
  7228  0297                     u177_21:
  7229  0297  2AC3               	goto	i1l442
  7230  0298                     __ccov268_end_blk4:
  7231  0298                     u177_20:
  7232  0298                     __ccov269_start_blk5:
  7233  0298                     i1l2122:
  7234  0298  17A5               	bsf	__ccovbit5_135/(0+8),__ccovbit5_135& (0+7)	;volatile
  7235                           
  7236                           ;main.c: 495:                 beep_short();
  7237  0299  3184  24EA  3182   	fcall	_beep_short
  7238  029C  2AC3               	goto	i1l442
  7239  029D                     __ccov269_end_blk5:
  7240  029D                     __ccov270_start_blk8:
  7241  029D                     i1l432:
  7242  029D  0020               	movlb	0	; select bank0
  7243  029E  1725               	bsf	__ccovbit8_136/(0+8),__ccovbit8_136& (0+7)	;volatile
  7244  029F  1CF9               	btfss	_ff,1
  7245  02A0  2AA2               	goto	u178_21
  7246  02A1  2AA3               	goto	u178_20
  7247  02A2                     u178_21:
  7248  02A2  2AC3               	goto	i1l442
  7249  02A3                     __ccov270_end_blk8:
  7250  02A3                     u178_20:
  7251  02A3                     __ccov271_start_blk9:
  7252  02A3                     i1l2124:
  7253                           
  7254                           ;main.c: 501:         if ((beep_short_count > 0) && (beep_long_count > 0)) {
  7255  02A3  087D               	movf	_beep_short_count,w
  7256  02A4  1903               	btfsc	3,2
  7257  02A5  2AA7               	goto	u179_21
  7258  02A6  2AA8               	goto	u179_20
  7259  02A7                     u179_21:
  7260  02A7  2AAF               	goto	i1l2130
  7261  02A8                     __ccov271_end_blk9:
  7262  02A8                     u179_20:
  7263  02A8                     __ccov272_start_blk10:
  7264  02A8                     i1l2126:
  7265  02A8  16A5               	bsf	__ccovbit10_137/(0+8),__ccovbit10_137& (0+7)	;volatile
  7266  02A9  084E               	movf	_beep_long_count,w
  7267  02AA  1903               	btfsc	3,2
  7268  02AB  2AAD               	goto	u180_21
  7269  02AC  2AAE               	goto	u180_20
  7270  02AD                     u180_21:
  7271  02AD  2AAF               	goto	i1l2130
  7272  02AE                     u180_20:
  7273  02AE  2A8D               	goto	i1l2118
  7274  02AF                     __ccov272_end_blk10:
  7275  02AF                     __ccov273_start_blk13:
  7276  02AF                     i1l2130:
  7277                           
  7278                           ;main.c: 504:             if (beep_short_count > 0) {
  7279  02AF  087D               	movf	_beep_short_count,w
  7280  02B0  1903               	btfsc	3,2
  7281  02B1  2AB3               	goto	u181_21
  7282  02B2  2AB4               	goto	u181_20
  7283  02B3                     u181_21:
  7284  02B3  2AB8               	goto	i1l2134
  7285  02B4                     __ccov273_end_blk13:
  7286  02B4                     u181_20:
  7287  02B4                     __ccov274_start_blk14:
  7288  02B4                     i1l2132:
  7289  02B4  1625               	bsf	__ccovbit14_138/(0+8),__ccovbit14_138& (0+7)	;volatile
  7290                           
  7291                           ;main.c: 505:                 beep_short();
  7292  02B5  3184  24EA  3182   	fcall	_beep_short
  7293  02B8                     __ccov274_end_blk14:
  7294  02B8                     __ccov275_start_blk16:
  7295  02B8                     i1l2134:
  7296  02B8  0020               	movlb	0	; select bank0
  7297  02B9  15A5               	bsf	__ccovbit16_139/(0+8),__ccovbit16_139& (0+7)	;volatile
  7298                           
  7299                           ;main.c: 507:             if (beep_long_count > 0) {
  7300  02BA  084E               	movf	_beep_long_count,w
  7301  02BB  1903               	btfsc	3,2
  7302  02BC  2ABE               	goto	u182_21
  7303  02BD  2ABF               	goto	u182_20
  7304  02BE                     u182_21:
  7305  02BE  2AC3               	goto	i1l442
  7306  02BF                     __ccov275_end_blk16:
  7307  02BF                     u182_20:
  7308  02BF                     __ccov276_start_blk17:
  7309  02BF                     i1l2136:
  7310  02BF  1525               	bsf	__ccovbit17_140/(0+8),__ccovbit17_140& (0+7)	;volatile
  7311                           
  7312                           ;main.c: 508:                 beep_long();
  7313  02C0  3185  2536  3182   	fcall	_beep_long
  7314  02C3                     __ccov276_end_blk17:
  7315  02C3                     __ccov277_start_blk22:
  7316  02C3                     i1l442:
  7317  02C3  0020               	movlb	0	; select bank0
  7318  02C4  14A5               	bsf	__ccovbit22_141/(0+8),__ccovbit22_141& (0+7)	;volatile
  7319  02C5  0008               	return
  7320  02C6                     __end_of_ms_200_work:
  7321  02C6                     
  7322                           	psect	text43
  7323  0612                     __ptext43:	
  7324 ;; *************** function _beep_double *****************
  7325 ;; Defined at:
  7326 ;;		line 152 in file "main.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;		None
  7329 ;; Auto vars:     Size  Location     Type
  7330 ;;		None
  7331 ;; Return value:  Size  Location     Type
  7332 ;;                  1    wreg      void 
  7333 ;; Registers used:
  7334 ;;		wreg, status,2, status,0, pclath, cstack
  7335 ;; Tracked objects:
  7336 ;;		On entry : 0/0
  7337 ;;		On exit  : 0/0
  7338 ;;		Unchanged: 0/0
  7339 ;; Data sizes:     COMMON   BANK0   BANK1
  7340 ;;      Params:         0       0       0
  7341 ;;      Locals:         0       0       0
  7342 ;;      Temps:          0       0       0
  7343 ;;      Totals:         0       0       0
  7344 ;;Total ram usage:        0 bytes
  7345 ;; Hardware stack levels used: 1
  7346 ;; Hardware stack levels required when called: 2
  7347 ;; This function calls:
  7348 ;;		_beep_long
  7349 ;;		_beep_short
  7350 ;; This function is called by:
  7351 ;;		_ms_200_work
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355  0612                     _beep_double:	
  7356                           ;psect for function _beep_double
  7357                           
  7358                           
  7359                           ;incstack = 0
  7360                           ; Regs used in _beep_double: [wreg+status,2+status,0+pclath+cstack]
  7361  0612                     i1l1940:
  7362                           
  7363                           ;main.c: 153:     if (ff.bits.LAST_BEEP_LONG) {
  7364  0612  1FFC               	btfss	_ff+3,7
  7365  0613  2E15               	goto	u144_21
  7366  0614  2E16               	goto	u144_20
  7367  0615                     u144_21:
  7368  0615  2E1C               	goto	i1l1944
  7369  0616                     __ccov111_end_blk0:
  7370  0616                     u144_20:
  7371  0616                     __ccov112_start_blk1:
  7372  0616                     i1l1942:
  7373  0616  0020               	movlb	0	; select bank0
  7374  0617  16B2               	bsf	__ccovbit1_33/(0+8),__ccovbit1_33& (0+7)	;volatile
  7375                           
  7376                           ;main.c: 154:         beep_short();
  7377  0618  3184  24EA  3186   	fcall	_beep_short
  7378                           
  7379                           ;main.c: 155:     } else {
  7380  061B  2E21               	goto	i1l317
  7381  061C                     __ccov112_end_blk1:
  7382  061C                     __ccov113_start_blk3:
  7383  061C                     i1l1944:
  7384  061C  0020               	movlb	0	; select bank0
  7385  061D  1632               	bsf	__ccovbit3_34/(0+8),__ccovbit3_34& (0+7)	;volatile
  7386                           
  7387                           ;main.c: 156:         beep_long();
  7388  061E  3185  2536  3186   	fcall	_beep_long
  7389  0621                     __ccov113_end_blk3:
  7390  0621                     __ccov114_start_blk5:
  7391  0621                     i1l317:
  7392  0621  0020               	movlb	0	; select bank0
  7393  0622  15B2               	bsf	__ccovbit5_35/(0+8),__ccovbit5_35& (0+7)	;volatile
  7394  0623  0008               	return
  7395  0624                     __end_of_beep_double:
  7396  0624                     
  7397                           	psect	text44
  7398  04EA                     __ptext44:	
  7399 ;; *************** function _beep_short *****************
  7400 ;; Defined at:
  7401 ;;		line 134 in file "main.c"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;		None
  7404 ;; Auto vars:     Size  Location     Type
  7405 ;;		None
  7406 ;; Return value:  Size  Location     Type
  7407 ;;                  1    wreg      void 
  7408 ;; Registers used:
  7409 ;;		wreg, status,2, status,0, pclath, cstack
  7410 ;; Tracked objects:
  7411 ;;		On entry : 0/0
  7412 ;;		On exit  : 0/0
  7413 ;;		Unchanged: 0/0
  7414 ;; Data sizes:     COMMON   BANK0   BANK1
  7415 ;;      Params:         0       0       0
  7416 ;;      Locals:         0       0       0
  7417 ;;      Temps:          0       0       0
  7418 ;;      Totals:         0       0       0
  7419 ;;Total ram usage:        0 bytes
  7420 ;; Hardware stack levels used: 1
  7421 ;; Hardware stack levels required when called: 1
  7422 ;; This function calls:
  7423 ;;		_start_tone
  7424 ;; This function is called by:
  7425 ;;		_beep_double
  7426 ;;		_ms_200_work
  7427 ;; This function uses a non-reentrant model
  7428 ;;
  7429                           
  7430  04EA                     _beep_short:	
  7431                           ;psect for function _beep_short
  7432                           
  7433                           
  7434                           ;incstack = 0
  7435                           ; Regs used in _beep_short: [wreg+status,2+status,0+pclath+cstack]
  7436  04EA                     i1l1912:
  7437                           
  7438                           ;main.c: 135:     if (!ff.bits.ZUM_BUSY) {
  7439  04EA  1A7B               	btfsc	_ff+2,4
  7440  04EB  2CED               	goto	u140_21
  7441  04EC  2CEE               	goto	u140_20
  7442  04ED                     u140_21:
  7443  04ED  2D01               	goto	i1l307
  7444  04EE                     __ccov97_end_blk0:
  7445  04EE                     u140_20:
  7446  04EE                     __ccov98_start_blk1:
  7447  04EE                     i1l1914:
  7448                           
  7449                           ;main.c: 136:         if (beep_short_count > 0) beep_short_count--;
  7450  04EE  087D               	movf	_beep_short_count,w
  7451  04EF  1903               	btfsc	3,2
  7452  04F0  2CF2               	goto	u141_21
  7453  04F1  2CF3               	goto	u141_20
  7454  04F2                     u141_21:
  7455  04F2  2CF7               	goto	i1l1918
  7456  04F3                     __ccov98_end_blk1:
  7457  04F3                     u141_20:
  7458  04F3                     __ccov99_start_blk2:
  7459  04F3                     i1l1916:
  7460  04F3  0020               	movlb	0	; select bank0
  7461  04F4  15B3               	bsf	__ccovbit2_27/(0+8),__ccovbit2_27& (0+7)	;volatile
  7462  04F5  3001               	movlw	1
  7463  04F6  02FD               	subwf	_beep_short_count,f
  7464  04F7                     __ccov99_end_blk2:
  7465  04F7                     __ccov100_start_blk4:
  7466  04F7                     i1l1918:
  7467                           
  7468                           ;main.c: 137:         time_tone = SHORT_ZUMMER_DELAY;
  7469  04F7  301E               	movlw	30
  7470  04F8  0020               	movlb	0	; select bank0
  7471  04F9  00BF               	movwf	_time_tone
  7472  04FA  3000               	movlw	0
  7473  04FB  00C0               	movwf	_time_tone+1
  7474  04FC                     __ccov100_end_blk4:
  7475  04FC                     __ccov101_start_blk5:
  7476  04FC                     i1l1920:
  7477                           
  7478                           ;main.c: 138:         ff.bits.LAST_BEEP_LONG = 0;
  7479  04FC  13FC               	bcf	_ff+3,7
  7480  04FD                     __ccov101_end_blk5:
  7481  04FD                     __ccov102_start_blk6:
  7482  04FD                     i1l1922:
  7483  04FD  1533               	bsf	__ccovbit6_28/(0+8),__ccovbit6_28& (0+7)	;volatile
  7484                           
  7485                           ;main.c: 139:         start_tone();
  7486  04FE  3186  26A7  3184   	fcall	_start_tone
  7487  0501                     __ccov102_end_blk6:
  7488  0501                     __ccov103_start_blk8:
  7489  0501                     i1l307:
  7490  0501  0020               	movlb	0	; select bank0
  7491  0502  14B3               	bsf	__ccovbit8_29/(0+8),__ccovbit8_29& (0+7)	;volatile
  7492  0503  0008               	return
  7493  0504                     __end_of_beep_short:
  7494  0504                     
  7495                           	psect	text45
  7496  0536                     __ptext45:	
  7497 ;; *************** function _beep_long *****************
  7498 ;; Defined at:
  7499 ;;		line 143 in file "main.c"
  7500 ;; Parameters:    Size  Location     Type
  7501 ;;		None
  7502 ;; Auto vars:     Size  Location     Type
  7503 ;;		None
  7504 ;; Return value:  Size  Location     Type
  7505 ;;                  1    wreg      void 
  7506 ;; Registers used:
  7507 ;;		wreg, status,2, status,0, pclath, cstack
  7508 ;; Tracked objects:
  7509 ;;		On entry : 0/0
  7510 ;;		On exit  : 0/0
  7511 ;;		Unchanged: 0/0
  7512 ;; Data sizes:     COMMON   BANK0   BANK1
  7513 ;;      Params:         0       0       0
  7514 ;;      Locals:         0       0       0
  7515 ;;      Temps:          0       0       0
  7516 ;;      Totals:         0       0       0
  7517 ;;Total ram usage:        0 bytes
  7518 ;; Hardware stack levels used: 1
  7519 ;; Hardware stack levels required when called: 1
  7520 ;; This function calls:
  7521 ;;		_start_tone
  7522 ;; This function is called by:
  7523 ;;		_beep_double
  7524 ;;		_ms_200_work
  7525 ;; This function uses a non-reentrant model
  7526 ;;
  7527                           
  7528  0536                     _beep_long:	
  7529                           ;psect for function _beep_long
  7530                           
  7531                           
  7532                           ;incstack = 0
  7533                           ; Regs used in _beep_long: [wreg+status,2+status,0+pclath+cstack]
  7534  0536                     i1l1924:
  7535                           
  7536                           ;main.c: 144:     if (!ff.bits.ZUM_BUSY) {
  7537  0536  1A7B               	btfsc	_ff+2,4
  7538  0537  2D39               	goto	u142_21
  7539  0538  2D3A               	goto	u142_20
  7540  0539                     u142_21:
  7541  0539  2D4C               	goto	i1l312
  7542  053A                     __ccov104_end_blk0:
  7543  053A                     u142_20:
  7544  053A                     __ccov105_start_blk1:
  7545  053A                     i1l1926:
  7546                           
  7547                           ;main.c: 145:         if (beep_long_count > 0) beep_long_count--;
  7548  053A  0020               	movlb	0	; select bank0
  7549  053B  084E               	movf	_beep_long_count,w
  7550  053C  1903               	btfsc	3,2
  7551  053D  2D3F               	goto	u143_21
  7552  053E  2D40               	goto	u143_20
  7553  053F                     u143_21:
  7554  053F  2D43               	goto	i1l1930
  7555  0540                     __ccov105_end_blk1:
  7556  0540                     u143_20:
  7557  0540                     __ccov106_start_blk2:
  7558  0540                     i1l1928:
  7559  0540  1433               	bsf	__ccovbit2_30/(0+8),__ccovbit2_30& (0+7)	;volatile
  7560  0541  3001               	movlw	1
  7561  0542  02CE               	subwf	_beep_long_count,f
  7562  0543                     __ccov106_end_blk2:
  7563  0543                     __ccov107_start_blk4:
  7564  0543                     i1l1930:
  7565                           
  7566                           ;main.c: 146:         time_tone = LONG_ZUMMER_DELAY;
  7567  0543  3082               	movlw	130
  7568  0544  00BF               	movwf	_time_tone
  7569  0545  3000               	movlw	0
  7570  0546  00C0               	movwf	_time_tone+1
  7571  0547                     __ccov107_end_blk4:
  7572  0547                     __ccov108_start_blk5:
  7573  0547                     i1l1932:
  7574                           
  7575                           ;main.c: 147:         ff.bits.LAST_BEEP_LONG = 1;
  7576  0547  17FC               	bsf	_ff+3,7
  7577  0548                     __ccov108_end_blk5:
  7578  0548                     __ccov109_start_blk6:
  7579  0548                     i1l1934:
  7580  0548  17B2               	bsf	__ccovbit6_31/(0+8),__ccovbit6_31& (0+7)	;volatile
  7581                           
  7582                           ;main.c: 148:         start_tone();
  7583  0549  3186  26A7  3185   	fcall	_start_tone
  7584  054C                     __ccov109_end_blk6:
  7585  054C                     __ccov110_start_blk8:
  7586  054C                     i1l312:
  7587  054C  0020               	movlb	0	; select bank0
  7588  054D  1732               	bsf	__ccovbit8_32/(0+8),__ccovbit8_32& (0+7)	;volatile
  7589  054E  0008               	return
  7590  054F                     __end_of_beep_long:
  7591  054F                     
  7592                           	psect	text46
  7593  06A7                     __ptext46:	
  7594 ;; *************** function _start_tone *****************
  7595 ;; Defined at:
  7596 ;;		line 122 in file "main.c"
  7597 ;; Parameters:    Size  Location     Type
  7598 ;;		None
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;		None
  7601 ;; Return value:  Size  Location     Type
  7602 ;;                  1    wreg      void 
  7603 ;; Registers used:
  7604 ;;		None
  7605 ;; Tracked objects:
  7606 ;;		On entry : 0/0
  7607 ;;		On exit  : 0/0
  7608 ;;		Unchanged: 0/0
  7609 ;; Data sizes:     COMMON   BANK0   BANK1
  7610 ;;      Params:         0       0       0
  7611 ;;      Locals:         0       0       0
  7612 ;;      Temps:          0       0       0
  7613 ;;      Totals:         0       0       0
  7614 ;;Total ram usage:        0 bytes
  7615 ;; Hardware stack levels used: 1
  7616 ;; This function calls:
  7617 ;;		Nothing
  7618 ;; This function is called by:
  7619 ;;		_beep_short
  7620 ;;		_beep_long
  7621 ;; This function uses a non-reentrant model
  7622 ;;
  7623                           
  7624  06A7                     _start_tone:	
  7625                           ;psect for function _start_tone
  7626                           
  7627                           
  7628                           ;incstack = 0
  7629                           ; Regs used in _start_tone: []
  7630  06A7                     i1l1910:
  7631                           
  7632                           ;main.c: 123:     ff.bits.ZUM_BUSY = 1;
  7633  06A7  167B               	bsf	_ff+2,4
  7634                           
  7635                           ;main.c: 124:     ff.bits.TONE_ON = 1;
  7636  06A8  14FB               	bsf	_ff+2,1
  7637                           
  7638                           ;main.c: 125:     ff.bits.TONE_OFF = 0;
  7639  06A9  117B               	bcf	_ff+2,2
  7640  06AA                     __ccov93_end_blk0:
  7641  06AA                     __ccov94_start_blk1:
  7642  06AA                     i1l299:
  7643  06AA  0020               	movlb	0	; select bank0
  7644  06AB  16B3               	bsf	__ccovbit1_25/(0+8),__ccovbit1_25& (0+7)	;volatile
  7645  06AC  0008               	return
  7646  06AD                     __end_of_start_tone:
  7647  06AD                     
  7648                           	psect	text47
  7649  0656                     __ptext47:	
  7650 ;; *************** function _ms_100_work *****************
  7651 ;; Defined at:
  7652 ;;		line 515 in file "main.c"
  7653 ;; Parameters:    Size  Location     Type
  7654 ;;		None
  7655 ;; Auto vars:     Size  Location     Type
  7656 ;;		None
  7657 ;; Return value:  Size  Location     Type
  7658 ;;                  1    wreg      void 
  7659 ;; Registers used:
  7660 ;;		None
  7661 ;; Tracked objects:
  7662 ;;		On entry : 0/0
  7663 ;;		On exit  : 0/0
  7664 ;;		Unchanged: 0/0
  7665 ;; Data sizes:     COMMON   BANK0   BANK1
  7666 ;;      Params:         0       0       0
  7667 ;;      Locals:         0       0       0
  7668 ;;      Temps:          0       0       0
  7669 ;;      Totals:         0       0       0
  7670 ;;Total ram usage:        0 bytes
  7671 ;; Hardware stack levels used: 1
  7672 ;; This function calls:
  7673 ;;		Nothing
  7674 ;; This function is called by:
  7675 ;;		_ms_tick
  7676 ;; This function uses a non-reentrant model
  7677 ;;
  7678                           
  7679  0656                     _ms_100_work:	
  7680                           ;psect for function _ms_100_work
  7681                           
  7682                           
  7683                           ;incstack = 0
  7684                           ; Regs used in _ms_100_work: []
  7685  0656                     i1l2138:
  7686                           
  7687                           ;main.c: 516:     if (ff.bits.NORMAL_WORK_MODE_ON || ff.bits.UNIVERSAL_VORK_MODE_ON) {
  7688  0656  187C               	btfsc	_ff+3,0
  7689  0657  2E59               	goto	u183_21
  7690  0658  2E5A               	goto	u183_20
  7691  0659                     u183_21:
  7692  0659  2E60               	goto	i1l447
  7693  065A                     __ccov278_end_blk0:
  7694  065A                     u183_20:
  7695  065A                     __ccov279_start_blk1:
  7696  065A                     i1l2140:
  7697  065A  0020               	movlb	0	; select bank0
  7698  065B  1425               	bsf	__ccovbit1_142/(0+8),__ccovbit1_142& (0+7)	;volatile
  7699  065C  1CFC               	btfss	_ff+3,1
  7700  065D  2E5F               	goto	u184_21
  7701  065E  2E60               	goto	u184_20
  7702  065F                     u184_21:
  7703  065F  2E63               	goto	i1l448
  7704  0660                     __ccov279_end_blk1:
  7705  0660                     u184_20:
  7706  0660                     __ccov280_start_blk2:
  7707  0660                     i1l447:
  7708  0660  0020               	movlb	0	; select bank0
  7709  0661  17A4               	bsf	__ccovbit2_143/(0+8),__ccovbit2_143& (0+7)	;volatile
  7710                           
  7711                           ;main.c: 517:         ff.bits.ALLOW_MEASURE = 1;
  7712  0662  1679               	bsf	_ff,4
  7713  0663                     __ccov280_end_blk2:
  7714  0663                     __ccov281_start_blk4:
  7715  0663                     i1l448:
  7716  0663  1724               	bsf	__ccovbit4_144/(0+8),__ccovbit4_144& (0+7)	;volatile
  7717  0664  0008               	return
  7718  0665                     __end_of_ms_100_work:
  7719  0665                     
  7720                           	psect	text48
  7721  0624                     __ptext48:	
  7722 ;; *************** function _TMR0_ISR *****************
  7723 ;; Defined at:
  7724 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  7725 ;; Parameters:    Size  Location     Type
  7726 ;;		None
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;		None
  7729 ;; Return value:  Size  Location     Type
  7730 ;;                  1    wreg      void 
  7731 ;; Registers used:
  7732 ;;		wreg, status,2, status,0, pclath, cstack
  7733 ;; Tracked objects:
  7734 ;;		On entry : 0/0
  7735 ;;		On exit  : 0/0
  7736 ;;		Unchanged: 0/0
  7737 ;; Data sizes:     COMMON   BANK0   BANK1
  7738 ;;      Params:         0       0       0
  7739 ;;      Locals:         0       0       0
  7740 ;;      Temps:          0       0       0
  7741 ;;      Totals:         0       0       0
  7742 ;;Total ram usage:        0 bytes
  7743 ;; Hardware stack levels used: 1
  7744 ;; Hardware stack levels required when called: 1
  7745 ;; This function calls:
  7746 ;;		Absolute function
  7747 ;;		_TMR0_DefaultInterruptHandler
  7748 ;;		_zummer_switch
  7749 ;; This function is called by:
  7750 ;;		_INTERRUPT_InterruptManager
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754  0624                     _TMR0_ISR:	
  7755                           ;psect for function _TMR0_ISR
  7756                           
  7757                           
  7758                           ;incstack = 0
  7759                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  7760  0624                     i1l2250:
  7761                           
  7762                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  7763  0624  110B               	bcf	11,2	;volatile
  7764  0625                     __ccov85_end_blk0:
  7765  0625                     __ccov86_start_blk1:
  7766  0625                     i1l2252:
  7767                           
  7768                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  7769  0625  0020               	movlb	0	; select bank0
  7770  0626  0857               	movf	_timer0ReloadVal,w	;volatile
  7771  0627  0095               	movwf	21	;volatile
  7772  0628                     __ccov86_end_blk1:
  7773  0628                     __ccov87_start_blk2:
  7774  0628                     i1l2254:
  7775                           
  7776                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  7777  0628  0853               	movf	_TMR0_InterruptHandler,w
  7778  0629  0454               	iorwf	_TMR0_InterruptHandler+1,w
  7779  062A  1903               	btfsc	3,2
  7780  062B  2E2D               	goto	u208_21
  7781  062C  2E2E               	goto	u208_20
  7782  062D                     u208_21:
  7783  062D  2E34               	goto	i1l190
  7784  062E                     __ccov87_end_blk2:
  7785  062E                     u208_20:
  7786  062E                     __ccov88_start_blk3:
  7787  062E                     i1l2256:
  7788  062E  1570               	bsf	__ccovbit3_21/(0+8),__ccovbit3_21& (0+7)	;volatile
  7789                           
  7790                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  7791  062F  0854               	movf	_TMR0_InterruptHandler+1,w
  7792  0630  008A               	movwf	10
  7793  0631  0853               	movf	_TMR0_InterruptHandler,w
  7794  0632  000A               	callw
  7795  0633  3186               	pagesel	$
  7796  0634                     __ccov88_end_blk3:
  7797  0634                     __ccov89_start_blk5:
  7798  0634                     i1l190:
  7799  0634  14F0               	bsf	__ccovbit5_22/(0+8),__ccovbit5_22& (0+7)	;volatile
  7800  0635  0008               	return
  7801  0636                     __end_of_TMR0_ISR:
  7802  0636                     
  7803                           	psect	text49
  7804  06BB                     __ptext49:	
  7805 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7806 ;; Defined at:
  7807 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;		None
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;		None
  7812 ;; Return value:  Size  Location     Type
  7813 ;;                  1    wreg      void 
  7814 ;; Registers used:
  7815 ;;		None
  7816 ;; Tracked objects:
  7817 ;;		On entry : 0/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMMON   BANK0   BANK1
  7821 ;;      Params:         0       0       0
  7822 ;;      Locals:         0       0       0
  7823 ;;      Temps:          0       0       0
  7824 ;;      Totals:         0       0       0
  7825 ;;Total ram usage:        0 bytes
  7826 ;; Hardware stack levels used: 1
  7827 ;; This function calls:
  7828 ;;		Nothing
  7829 ;; This function is called by:
  7830 ;;		_TMR0_Initialize
  7831 ;;		_TMR0_ISR
  7832 ;; This function uses a non-reentrant model
  7833 ;;
  7834                           
  7835  06BB                     _TMR0_DefaultInterruptHandler:	
  7836                           ;psect for function _TMR0_DefaultInterruptHandler
  7837                           
  7838                           
  7839                           ;incstack = 0
  7840                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  7841  06BB                     i1l196:
  7842  06BB  0020               	movlb	0	; select bank0
  7843  06BC  1733               	bsf	__ccovbit0_24/(0+8),__ccovbit0_24& (0+7)	;volatile
  7844  06BD  0008               	return
  7845  06BE                     __end_of_TMR0_DefaultInterruptHandler:
  7846  06BE                     
  7847                           	psect	text50
  7848  0665                     __ptext50:	
  7849 ;; *************** function _zummer_switch *****************
  7850 ;; Defined at:
  7851 ;;		line 582 in file "main.c"
  7852 ;; Parameters:    Size  Location     Type
  7853 ;;		None
  7854 ;; Auto vars:     Size  Location     Type
  7855 ;;		None
  7856 ;; Return value:  Size  Location     Type
  7857 ;;                  1    wreg      void 
  7858 ;; Registers used:
  7859 ;;		status,0
  7860 ;; Tracked objects:
  7861 ;;		On entry : 0/0
  7862 ;;		On exit  : 0/0
  7863 ;;		Unchanged: 0/0
  7864 ;; Data sizes:     COMMON   BANK0   BANK1
  7865 ;;      Params:         0       0       0
  7866 ;;      Locals:         0       0       0
  7867 ;;      Temps:          0       0       0
  7868 ;;      Totals:         0       0       0
  7869 ;;Total ram usage:        0 bytes
  7870 ;; Hardware stack levels used: 1
  7871 ;; This function calls:
  7872 ;;		Nothing
  7873 ;; This function is called by:
  7874 ;;		_start_setup
  7875 ;;		_TMR0_ISR
  7876 ;; This function uses a non-reentrant model
  7877 ;;
  7878                           
  7879  0665                     _zummer_switch:	
  7880                           ;psect for function _zummer_switch
  7881                           
  7882  0665                     i1l474:	
  7883                           ;incstack = 0
  7884                           ; Regs used in _zummer_switch: [status,0]
  7885                           ;main.c: 587:     do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  7886                           
  7887  0665                     i1l2248:
  7888  0665  1003               	clrc
  7889  0666  0022               	movlb	2	; select bank2
  7890  0667  1E8C               	btfss	12,5	;volatile
  7891  0668  1403               	setc
  7892  0669  1803               	btfsc	3,0
  7893  066A  2E6C               	goto	u206_21
  7894  066B  2E6F               	goto	u206_20
  7895  066C                     u206_21:
  7896  066C  0022               	movlb	2	; select bank2
  7897  066D  168C               	bsf	12,5	;volatile
  7898  066E  2E71               	goto	u207_24
  7899  066F                     u206_20:
  7900  066F  0022               	movlb	2	; select bank2
  7901  0670  128C               	bcf	12,5	;volatile
  7902  0671                     __ccov308_end_blk1:
  7903  0671                     u207_24:
  7904  0671                     __ccov309_start_blk3:
  7905  0671                     i1l476:
  7906  0671  0020               	movlb	0	; select bank0
  7907  0672  15A3               	bsf	__ccovbit3_155/(0+8),__ccovbit3_155& (0+7)	;volatile
  7908  0673  0008               	return
  7909  0674                     __end_of_zummer_switch:
  7910  0674                     
  7911                           	psect	codecov_info_hdr
  7912  0000                     __pcodecov_info_hdr:	
  7913                           ;
  7914                           ; Code-coverage Info Header
  7915                           ;
  7916                           
  7917  0000  0010               	db	16	; SIZE
  7918  0001  00000001           	ddw	1	; VERSION
  7919  0005  0001               	db	1	; POINTSIZE
  7920  0006  0008               	db	8	; UNITSIZE
  7921  0007  0001               	db	1	; FLAGS=SET
  7922  0008  00000000           	ddw	0	; Reserved
  7923  000C  00000000           	ddw	0	; Reserved
  7924                           
  7925                           	psect	codecov_info
  7926  0000                     __pcodecov_info:	
  7927                           ;
  7928                           ; Code-coverage Info
  7929                           ;
  7930                           
  7931                           
  7932                           ; Function: SYSTEM_Initialize, coverage: 1,0
  7933  0000  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  7934  0004  00000072           	ddw	__ccovbit1_1/(0+8)	; CC_ADDR
  7935  0008  00000001           	ddw	1	; NUM_POINTS
  7936  000C  00000006           	ddw	__ccovbit1_1& (0+7)	; OFFSET
  7937  0010  00000000           	ddw	0	; Reserved
  7938  0014  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  7939  0018  00000002           	ddw	2	; NUM_RANGES
  7940  001C  000005EB           	ddw	__ccov2_start_blk1	; block 1 START_ADDR
  7941  0020  000005ED           	ddw	__end_of_SYSTEM_Initialize	; block 1 END_ADDR
  7942  0024  000005D9           	ddw	_SYSTEM_Initialize	; block 0 START_ADDR
  7943  0028  000005EB           	ddw	__ccov1_end_blk0	; block 0 END_ADDR
  7944                           
  7945                           ; Function: OSCILLATOR_Initialize, coverage: 3,2,1,0
  7946  002C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  7947  0030  00000072           	ddw	__ccovbit3_2/(0+8)	; CC_ADDR
  7948  0034  00000001           	ddw	1	; NUM_POINTS
  7949  0038  00000005           	ddw	__ccovbit3_2& (0+7)	; OFFSET
  7950  003C  00000000           	ddw	0	; Reserved
  7951  0040  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  7952  0044  00000004           	ddw	4	; NUM_RANGES
  7953  0048  00000683           	ddw	__ccov6_start_blk3	; block 3 START_ADDR
  7954  004C  00000685           	ddw	__end_of_OSCILLATOR_Initialize	; block 3 END_ADDR
  7955  0050  00000681           	ddw	__ccov5_start_blk2	; block 2 START_ADDR
  7956  0054  00000683           	ddw	__ccov5_end_blk2	; block 2 END_ADDR
  7957  0058  00000680           	ddw	__ccov4_start_blk1	; block 1 START_ADDR
  7958  005C  00000681           	ddw	__ccov4_end_blk1	; block 1 END_ADDR
  7959  0060  0000067D           	ddw	_OSCILLATOR_Initialize	; block 0 START_ADDR
  7960  0064  00000680           	ddw	__ccov3_end_blk0	; block 0 END_ADDR
  7961                           
  7962                           ; Function: WDT_Initialize, coverage: 1,0
  7963  0068  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  7964  006C  00000072           	ddw	__ccovbit1_3/(0+8)	; CC_ADDR
  7965  0070  00000001           	ddw	1	; NUM_POINTS
  7966  0074  00000004           	ddw	__ccovbit1_3& (0+7)	; OFFSET
  7967  0078  00000000           	ddw	0	; Reserved
  7968  007C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  7969  0080  00000002           	ddw	2	; NUM_RANGES
  7970  0084  000006B0           	ddw	__ccov8_start_blk1	; block 1 START_ADDR
  7971  0088  000006B2           	ddw	__end_of_WDT_Initialize	; block 1 END_ADDR
  7972  008C  000006AD           	ddw	_WDT_Initialize	; block 0 START_ADDR
  7973  0090  000006B0           	ddw	__ccov7_end_blk0	; block 0 END_ADDR
  7974                           
  7975                           ; Function: ADC_Initialize, coverage: 3,2,1,0
  7976  0094  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  7977  0098  00000072           	ddw	__ccovbit3_4/(0+8)	; CC_ADDR
  7978  009C  00000001           	ddw	1	; NUM_POINTS
  7979  00A0  00000003           	ddw	__ccovbit3_4& (0+7)	; OFFSET
  7980  00A4  00000000           	ddw	0	; Reserved
  7981  00A8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  7982  00AC  00000004           	ddw	4	; NUM_RANGES
  7983  00B0  0000067B           	ddw	__ccov12_start_blk3	; block 3 START_ADDR
  7984  00B4  0000067D           	ddw	__end_of_ADC_Initialize	; block 3 END_ADDR
  7985  00B8  00000678           	ddw	__ccov11_start_blk2	; block 2 START_ADDR
  7986  00BC  0000067B           	ddw	__ccov11_end_blk2	; block 2 END_ADDR
  7987  00C0  00000677           	ddw	__ccov10_start_blk1	; block 1 START_ADDR
  7988  00C4  00000678           	ddw	__ccov10_end_blk1	; block 1 END_ADDR
  7989  00C8  00000674           	ddw	_ADC_Initialize	; block 0 START_ADDR
  7990  00CC  00000677           	ddw	__ccov9_end_blk0	; block 0 END_ADDR
  7991                           
  7992                           ; Function: ADC_GetConversion, coverage: 9,7,5,3,2,1,0
  7993  00D0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  7994  00D4  00000072           	ddw	__ccovbit9_5/(0+8)	; CC_ADDR
  7995  00D8  00000001           	ddw	1	; NUM_POINTS
  7996  00DC  00000002           	ddw	__ccovbit9_5& (0+7)	; OFFSET
  7997  00E0  00000000           	ddw	0	; Reserved
  7998  00E4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  7999  00E8  00000007           	ddw	7	; NUM_RANGES
  8000  00EC  00000534           	ddw	__ccov28_start_blk9	; block 9 START_ADDR
  8001  00F0  00000536           	ddw	__end_of_ADC_GetConversion	; block 9 END_ADDR
  8002  00F4  00000533           	ddw	__ccov27_start_blk7	; block 7 START_ADDR
  8003  00F8  00000534           	ddw	__ccov27_end_blk7	; block 7 END_ADDR
  8004  00FC  0000052F           	ddw	__ccov26_start_blk5	; block 5 START_ADDR
  8005  0100  00000533           	ddw	__ccov26_end_blk5	; block 5 END_ADDR
  8006  0104  0000052D           	ddw	__ccov25_start_blk3	; block 3 START_ADDR
  8007  0108  0000052F           	ddw	__ccov25_end_blk3	; block 3 END_ADDR
  8008  010C  00000529           	ddw	__ccov24_start_blk2	; block 2 START_ADDR
  8009  0110  0000052D           	ddw	__ccov24_end_blk2	; block 2 END_ADDR
  8010  0114  00000528           	ddw	__ccov23_start_blk1	; block 1 START_ADDR
  8011  0118  00000529           	ddw	__ccov23_end_blk1	; block 1 END_ADDR
  8012  011C  0000051D           	ddw	_ADC_GetConversion	; block 0 START_ADDR
  8013  0120  00000528           	ddw	__ccov22_end_blk0	; block 0 END_ADDR
  8014                           
  8015                           ; Function: PIN_MANAGER_Initialize, coverage: 6,5,4,3,2,1,0
  8016  0124  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8017  0128  00000072           	ddw	__ccovbit6_6/(0+8)	; CC_ADDR
  8018  012C  00000001           	ddw	1	; NUM_POINTS
  8019  0130  00000001           	ddw	__ccovbit6_6& (0+7)	; OFFSET
  8020  0134  00000000           	ddw	0	; Reserved
  8021  0138  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8022  013C  00000007           	ddw	7	; NUM_RANGES
  8023  0140  000005D7           	ddw	__ccov37_start_blk6	; block 6 START_ADDR
  8024  0144  000005D9           	ddw	__end_of_PIN_MANAGER_Initialize	; block 6 END_ADDR
  8025  0148  000005D3           	ddw	__ccov36_start_blk5	; block 5 START_ADDR
  8026  014C  000005D7           	ddw	__ccov36_end_blk5	; block 5 END_ADDR
  8027  0150  000005CE           	ddw	__ccov35_start_blk4	; block 4 START_ADDR
  8028  0154  000005D3           	ddw	__ccov35_end_blk4	; block 4 END_ADDR
  8029  0158  000005CB           	ddw	__ccov34_start_blk3	; block 3 START_ADDR
  8030  015C  000005CE           	ddw	__ccov34_end_blk3	; block 3 END_ADDR
  8031  0160  000005C9           	ddw	__ccov33_start_blk2	; block 2 START_ADDR
  8032  0164  000005CB           	ddw	__ccov33_end_blk2	; block 2 END_ADDR
  8033  0168  000005C6           	ddw	__ccov32_start_blk1	; block 1 START_ADDR
  8034  016C  000005C9           	ddw	__ccov32_end_blk1	; block 1 END_ADDR
  8035  0170  000005C3           	ddw	_PIN_MANAGER_Initialize	; block 0 START_ADDR
  8036  0174  000005C6           	ddw	__ccov31_end_blk0	; block 0 END_ADDR
  8037                           
  8038                           ; Function: INTERRUPT_InterruptManager, coverage: 1,0
  8039  0178  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8040  017C  00000072           	ddw	__ccovbit1_7/(0+8)	; CC_ADDR
  8041  0180  00000001           	ddw	1	; NUM_POINTS
  8042  0184  00000000           	ddw	__ccovbit1_7& (0+7)	; OFFSET
  8043  0188  00000000           	ddw	0	; Reserved
  8044  018C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8045  0190  00000002           	ddw	2	; NUM_RANGES
  8046  0194  0000000A           	ddw	__ccov40_start_blk1	; block 1 START_ADDR
  8047  0198  0000000F           	ddw	__ccov40_end_blk1	; block 1 END_ADDR
  8048  019C  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8049  01A0  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8050                           
  8051                           ; Function: INTERRUPT_InterruptManager, coverage: 2,1,0
  8052  01A4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8053  01A8  00000071           	ddw	__ccovbit2_8/(0+8)	; CC_ADDR
  8054  01AC  00000001           	ddw	1	; NUM_POINTS
  8055  01B0  00000007           	ddw	__ccovbit2_8& (0+7)	; OFFSET
  8056  01B4  00000000           	ddw	0	; Reserved
  8057  01B8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8058  01BC  00000003           	ddw	3	; NUM_RANGES
  8059  01C0  0000000F           	ddw	__ccov41_start_blk2	; block 2 START_ADDR
  8060  01C4  00000014           	ddw	__ccov41_end_blk2	; block 2 END_ADDR
  8061  01C8  0000000A           	ddw	__ccov40_start_blk1	; block 1 START_ADDR
  8062  01CC  0000000F           	ddw	__ccov40_end_blk1	; block 1 END_ADDR
  8063  01D0  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8064  01D4  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8065                           
  8066                           ; Function: INTERRUPT_InterruptManager, coverage: 3,0
  8067  01D8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8068  01DC  00000071           	ddw	__ccovbit3_9/(0+8)	; CC_ADDR
  8069  01E0  00000001           	ddw	1	; NUM_POINTS
  8070  01E4  00000006           	ddw	__ccovbit3_9& (0+7)	; OFFSET
  8071  01E8  00000000           	ddw	0	; Reserved
  8072  01EC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8073  01F0  00000002           	ddw	2	; NUM_RANGES
  8074  01F4  00000014           	ddw	__ccov42_start_blk3	; block 3 START_ADDR
  8075  01F8  00000019           	ddw	__ccov42_end_blk3	; block 3 END_ADDR
  8076  01FC  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8077  0200  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8078                           
  8079                           ; Function: INTERRUPT_InterruptManager, coverage: 5,4,3,0
  8080  0204  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8081  0208  00000071           	ddw	__ccovbit5_10/(0+8)	; CC_ADDR
  8082  020C  00000001           	ddw	1	; NUM_POINTS
  8083  0210  00000005           	ddw	__ccovbit5_10& (0+7)	; OFFSET
  8084  0214  00000000           	ddw	0	; Reserved
  8085  0218  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8086  021C  00000004           	ddw	4	; NUM_RANGES
  8087  0220  0000001E           	ddw	__ccov44_start_blk5	; block 5 START_ADDR
  8088  0224  00000024           	ddw	__ccov44_end_blk5	; block 5 END_ADDR
  8089  0228  00000019           	ddw	__ccov43_start_blk4	; block 4 START_ADDR
  8090  022C  0000001E           	ddw	__ccov43_end_blk4	; block 4 END_ADDR
  8091  0230  00000014           	ddw	__ccov42_start_blk3	; block 3 START_ADDR
  8092  0234  00000019           	ddw	__ccov42_end_blk3	; block 3 END_ADDR
  8093  0238  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8094  023C  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8095                           
  8096                           ; Function: INTERRUPT_InterruptManager, coverage: 6,5,4,3,0
  8097  0240  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8098  0244  00000071           	ddw	__ccovbit6_11/(0+8)	; CC_ADDR
  8099  0248  00000001           	ddw	1	; NUM_POINTS
  8100  024C  00000004           	ddw	__ccovbit6_11& (0+7)	; OFFSET
  8101  0250  00000000           	ddw	0	; Reserved
  8102  0254  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8103  0258  00000005           	ddw	5	; NUM_RANGES
  8104  025C  00000024           	ddw	__ccov45_start_blk6	; block 6 START_ADDR
  8105  0260  00000029           	ddw	__ccov45_end_blk6	; block 6 END_ADDR
  8106  0264  0000001E           	ddw	__ccov44_start_blk5	; block 5 START_ADDR
  8107  0268  00000024           	ddw	__ccov44_end_blk5	; block 5 END_ADDR
  8108  026C  00000019           	ddw	__ccov43_start_blk4	; block 4 START_ADDR
  8109  0270  0000001E           	ddw	__ccov43_end_blk4	; block 4 END_ADDR
  8110  0274  00000014           	ddw	__ccov42_start_blk3	; block 3 START_ADDR
  8111  0278  00000019           	ddw	__ccov42_end_blk3	; block 3 END_ADDR
  8112  027C  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8113  0280  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8114                           
  8115                           ; Function: INTERRUPT_InterruptManager, coverage: 10,4,3,0
  8116  0284  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8117  0288  00000071           	ddw	__ccovbit10_12/(0+8)	; CC_ADDR
  8118  028C  00000001           	ddw	1	; NUM_POINTS
  8119  0290  00000003           	ddw	__ccovbit10_12& (0+7)	; OFFSET
  8120  0294  00000000           	ddw	0	; Reserved
  8121  0298  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8122  029C  00000004           	ddw	4	; NUM_RANGES
  8123  02A0  00000029           	ddw	__ccov46_start_blk10	; block 10 START_ADDR
  8124  02A4  0000002A           	ddw	__ccov46_end_blk10	; block 10 END_ADDR
  8125  02A8  00000019           	ddw	__ccov43_start_blk4	; block 4 START_ADDR
  8126  02AC  0000001E           	ddw	__ccov43_end_blk4	; block 4 END_ADDR
  8127  02B0  00000014           	ddw	__ccov42_start_blk3	; block 3 START_ADDR
  8128  02B4  00000019           	ddw	__ccov42_end_blk3	; block 3 END_ADDR
  8129  02B8  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8130  02BC  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8131                           
  8132                           ; Function: INTERRUPT_InterruptManager, coverage: 12,0
  8133  02C0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8134  02C4  00000071           	ddw	__ccovbit12_13/(0+8)	; CC_ADDR
  8135  02C8  00000001           	ddw	1	; NUM_POINTS
  8136  02CC  00000002           	ddw	__ccovbit12_13& (0+7)	; OFFSET
  8137  02D0  00000000           	ddw	0	; Reserved
  8138  02D4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8139  02D8  00000002           	ddw	2	; NUM_RANGES
  8140  02DC  0000002A           	ddw	__ccov47_start_blk12	; block 12 START_ADDR
  8141  02E0  0000002D           	ddw	__end_of_INTERRUPT_InterruptManager	; block 12 END_ADDR
  8142  02E4  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8143  02E8  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8144                           
  8145                           ; Function: TMR2_Initialize, coverage: 6,5,4,3,2,1,0
  8146  02EC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8147  02F0  00000071           	ddw	__ccovbit6_14/(0+8)	; CC_ADDR
  8148  02F4  00000001           	ddw	1	; NUM_POINTS
  8149  02F8  00000001           	ddw	__ccovbit6_14& (0+7)	; OFFSET
  8150  02FC  00000000           	ddw	0	; Reserved
  8151  0300  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8152  0304  00000007           	ddw	7	; NUM_RANGES
  8153  0308  000005FE           	ddw	__ccov54_start_blk6	; block 6 START_ADDR
  8154  030C  00000600           	ddw	__end_of_TMR2_Initialize	; block 6 END_ADDR
  8155  0310  000005FB           	ddw	__ccov53_start_blk5	; block 5 START_ADDR
  8156  0314  000005FE           	ddw	__ccov53_end_blk5	; block 5 END_ADDR
  8157  0318  000005F4           	ddw	__ccov52_start_blk4	; block 4 START_ADDR
  8158  031C  000005FB           	ddw	__ccov52_end_blk4	; block 4 END_ADDR
  8159  0320  000005F2           	ddw	__ccov51_start_blk3	; block 3 START_ADDR
  8160  0324  000005F4           	ddw	__ccov51_end_blk3	; block 3 END_ADDR
  8161  0328  000005F1           	ddw	__ccov50_start_blk2	; block 2 START_ADDR
  8162  032C  000005F2           	ddw	__ccov50_end_blk2	; block 2 END_ADDR
  8163  0330  000005F0           	ddw	__ccov49_start_blk1	; block 1 START_ADDR
  8164  0334  000005F1           	ddw	__ccov49_end_blk1	; block 1 END_ADDR
  8165  0338  000005ED           	ddw	_TMR2_Initialize	; block 0 START_ADDR
  8166  033C  000005F0           	ddw	__ccov48_end_blk0	; block 0 END_ADDR
  8167                           
  8168                           ; Function: TMR2_StartTimer, coverage: 1,0
  8169  0340  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8170  0344  00000071           	ddw	__ccovbit1_15/(0+8)	; CC_ADDR
  8171  0348  00000001           	ddw	1	; NUM_POINTS
  8172  034C  00000000           	ddw	__ccovbit1_15& (0+7)	; OFFSET
  8173  0350  00000000           	ddw	0	; Reserved
  8174  0354  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8175  0358  00000002           	ddw	2	; NUM_RANGES
  8176  035C  000006B9           	ddw	__ccov56_start_blk1	; block 1 START_ADDR
  8177  0360  000006BB           	ddw	__end_of_TMR2_StartTimer	; block 1 END_ADDR
  8178  0364  000006B7           	ddw	_TMR2_StartTimer	; block 0 START_ADDR
  8179  0368  000006B9           	ddw	__ccov55_end_blk0	; block 0 END_ADDR
  8180                           
  8181                           ; Function: TMR2_ISR, coverage: 2,1,0
  8182  036C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8183  0370  00000070           	ddw	__ccovbit2_16/(0+8)	; CC_ADDR
  8184  0374  00000001           	ddw	1	; NUM_POINTS
  8185  0378  00000007           	ddw	__ccovbit2_16& (0+7)	; OFFSET
  8186  037C  00000000           	ddw	0	; Reserved
  8187  0380  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8188  0384  00000003           	ddw	3	; NUM_RANGES
  8189  0388  0000063E           	ddw	__ccov67_start_blk2	; block 2 START_ADDR
  8190  038C  00000644           	ddw	__ccov67_end_blk2	; block 2 END_ADDR
  8191  0390  00000638           	ddw	__ccov66_start_blk1	; block 1 START_ADDR
  8192  0394  0000063E           	ddw	__ccov66_end_blk1	; block 1 END_ADDR
  8193  0398  00000636           	ddw	_TMR2_ISR	; block 0 START_ADDR
  8194  039C  00000638           	ddw	__ccov65_end_blk0	; block 0 END_ADDR
  8195                           
  8196                           ; Function: TMR2_ISR, coverage: 4,1,0
  8197  03A0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8198  03A4  00000070           	ddw	__ccovbit4_17/(0+8)	; CC_ADDR
  8199  03A8  00000001           	ddw	1	; NUM_POINTS
  8200  03AC  00000006           	ddw	__ccovbit4_17& (0+7)	; OFFSET
  8201  03B0  00000000           	ddw	0	; Reserved
  8202  03B4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8203  03B8  00000003           	ddw	3	; NUM_RANGES
  8204  03BC  00000644           	ddw	__ccov68_start_blk4	; block 4 START_ADDR
  8205  03C0  00000646           	ddw	__end_of_TMR2_ISR	; block 4 END_ADDR
  8206  03C4  00000638           	ddw	__ccov66_start_blk1	; block 1 START_ADDR
  8207  03C8  0000063E           	ddw	__ccov66_end_blk1	; block 1 END_ADDR
  8208  03CC  00000636           	ddw	_TMR2_ISR	; block 0 START_ADDR
  8209  03D0  00000638           	ddw	__ccov65_end_blk0	; block 0 END_ADDR
  8210                           
  8211                           ; Function: TMR2_SetInterruptHandler, coverage: 1,0
  8212  03D4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8213  03D8  00000070           	ddw	__ccovbit1_18/(0+8)	; CC_ADDR
  8214  03DC  00000001           	ddw	1	; NUM_POINTS
  8215  03E0  00000005           	ddw	__ccovbit1_18& (0+7)	; OFFSET
  8216  03E4  00000000           	ddw	0	; Reserved
  8217  03E8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8218  03EC  00000002           	ddw	2	; NUM_RANGES
  8219  03F0  00000692           	ddw	__ccov70_start_blk1	; block 1 START_ADDR
  8220  03F4  00000694           	ddw	__end_of_TMR2_SetInterruptHandler	; block 1 END_ADDR
  8221  03F8  0000068D           	ddw	_TMR2_SetInterruptHandler	; block 0 START_ADDR
  8222  03FC  00000692           	ddw	__ccov69_end_blk0	; block 0 END_ADDR
  8223                           
  8224                           ; Function: TMR2_DefaultInterruptHandler, coverage: 0
  8225  0400  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8226  0404  00000070           	ddw	__ccovbit0_19/(0+8)	; CC_ADDR
  8227  0408  00000001           	ddw	1	; NUM_POINTS
  8228  040C  00000004           	ddw	__ccovbit0_19& (0+7)	; OFFSET
  8229  0410  00000000           	ddw	0	; Reserved
  8230  0414  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8231  0418  00000001           	ddw	1	; NUM_RANGES
  8232  041C  000006CA           	ddw	_TMR2_DefaultInterruptHandler	; block 0 START_ADDR
  8233  0420  000006CC           	ddw	__end_of_TMR2_DefaultInterruptHandler	; block 0 END_ADDR
  8234                           
  8235                           ; Function: TMR0_Initialize, coverage: 6,5,4,3,2,1,0
  8236  0424  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8237  0428  00000070           	ddw	__ccovbit6_20/(0+8)	; CC_ADDR
  8238  042C  00000001           	ddw	1	; NUM_POINTS
  8239  0430  00000003           	ddw	__ccovbit6_20& (0+7)	; OFFSET
  8240  0434  00000000           	ddw	0	; Reserved
  8241  0438  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8242  043C  00000007           	ddw	7	; NUM_RANGES
  8243  0440  00000593           	ddw	__ccov78_start_blk6	; block 6 START_ADDR
  8244  0444  00000595           	ddw	__end_of_TMR0_Initialize	; block 6 END_ADDR
  8245  0448  0000058C           	ddw	__ccov77_start_blk5	; block 5 START_ADDR
  8246  044C  00000593           	ddw	__ccov77_end_blk5	; block 5 END_ADDR
  8247  0450  0000058B           	ddw	__ccov76_start_blk4	; block 4 START_ADDR
  8248  0454  0000058C           	ddw	__ccov76_end_blk4	; block 4 END_ADDR
  8249  0458  0000058A           	ddw	__ccov75_start_blk3	; block 3 START_ADDR
  8250  045C  0000058B           	ddw	__ccov75_end_blk3	; block 3 END_ADDR
  8251  0460  00000586           	ddw	__ccov74_start_blk2	; block 2 START_ADDR
  8252  0464  0000058A           	ddw	__ccov74_end_blk2	; block 2 END_ADDR
  8253  0468  00000583           	ddw	__ccov73_start_blk1	; block 1 START_ADDR
  8254  046C  00000586           	ddw	__ccov73_end_blk1	; block 1 END_ADDR
  8255  0470  0000057E           	ddw	_TMR0_Initialize	; block 0 START_ADDR
  8256  0474  00000583           	ddw	__ccov72_end_blk0	; block 0 END_ADDR
  8257                           
  8258                           ; Function: TMR0_ISR, coverage: 3,2,1,0
  8259  0478  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8260  047C  00000070           	ddw	__ccovbit3_21/(0+8)	; CC_ADDR
  8261  0480  00000001           	ddw	1	; NUM_POINTS
  8262  0484  00000002           	ddw	__ccovbit3_21& (0+7)	; OFFSET
  8263  0488  00000000           	ddw	0	; Reserved
  8264  048C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8265  0490  00000004           	ddw	4	; NUM_RANGES
  8266  0494  0000062E           	ddw	__ccov88_start_blk3	; block 3 START_ADDR
  8267  0498  00000634           	ddw	__ccov88_end_blk3	; block 3 END_ADDR
  8268  049C  00000628           	ddw	__ccov87_start_blk2	; block 2 START_ADDR
  8269  04A0  0000062E           	ddw	__ccov87_end_blk2	; block 2 END_ADDR
  8270  04A4  00000625           	ddw	__ccov86_start_blk1	; block 1 START_ADDR
  8271  04A8  00000628           	ddw	__ccov86_end_blk1	; block 1 END_ADDR
  8272  04AC  00000624           	ddw	_TMR0_ISR	; block 0 START_ADDR
  8273  04B0  00000625           	ddw	__ccov85_end_blk0	; block 0 END_ADDR
  8274                           
  8275                           ; Function: TMR0_ISR, coverage: 5,2,1,0
  8276  04B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8277  04B8  00000070           	ddw	__ccovbit5_22/(0+8)	; CC_ADDR
  8278  04BC  00000001           	ddw	1	; NUM_POINTS
  8279  04C0  00000001           	ddw	__ccovbit5_22& (0+7)	; OFFSET
  8280  04C4  00000000           	ddw	0	; Reserved
  8281  04C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8282  04CC  00000004           	ddw	4	; NUM_RANGES
  8283  04D0  00000634           	ddw	__ccov89_start_blk5	; block 5 START_ADDR
  8284  04D4  00000636           	ddw	__end_of_TMR0_ISR	; block 5 END_ADDR
  8285  04D8  00000628           	ddw	__ccov87_start_blk2	; block 2 START_ADDR
  8286  04DC  0000062E           	ddw	__ccov87_end_blk2	; block 2 END_ADDR
  8287  04E0  00000625           	ddw	__ccov86_start_blk1	; block 1 START_ADDR
  8288  04E4  00000628           	ddw	__ccov86_end_blk1	; block 1 END_ADDR
  8289  04E8  00000624           	ddw	_TMR0_ISR	; block 0 START_ADDR
  8290  04EC  00000625           	ddw	__ccov85_end_blk0	; block 0 END_ADDR
  8291                           
  8292                           ; Function: TMR0_SetInterruptHandler, coverage: 1,0
  8293  04F0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8294  04F4  00000070           	ddw	__ccovbit1_23/(0+8)	; CC_ADDR
  8295  04F8  00000001           	ddw	1	; NUM_POINTS
  8296  04FC  00000000           	ddw	__ccovbit1_23& (0+7)	; OFFSET
  8297  0500  00000000           	ddw	0	; Reserved
  8298  0504  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8299  0508  00000002           	ddw	2	; NUM_RANGES
  8300  050C  00000699           	ddw	__ccov91_start_blk1	; block 1 START_ADDR
  8301  0510  0000069B           	ddw	__end_of_TMR0_SetInterruptHandler	; block 1 END_ADDR
  8302  0514  00000694           	ddw	_TMR0_SetInterruptHandler	; block 0 START_ADDR
  8303  0518  00000699           	ddw	__ccov90_end_blk0	; block 0 END_ADDR
  8304                           
  8305                           ; Function: TMR0_DefaultInterruptHandler, coverage: 0
  8306  051C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8307  0520  00000033           	ddw	__ccovbit0_24/(0+8)	; CC_ADDR
  8308  0524  00000001           	ddw	1	; NUM_POINTS
  8309  0528  00000006           	ddw	__ccovbit0_24& (0+7)	; OFFSET
  8310  052C  00000000           	ddw	0	; Reserved
  8311  0530  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8312  0534  00000001           	ddw	1	; NUM_RANGES
  8313  0538  000006BB           	ddw	_TMR0_DefaultInterruptHandler	; block 0 START_ADDR
  8314  053C  000006BE           	ddw	__end_of_TMR0_DefaultInterruptHandler	; block 0 END_ADDR
  8315                           
  8316                           ; Function: start_tone, coverage: 1,0
  8317  0540  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8318  0544  00000033           	ddw	__ccovbit1_25/(0+8)	; CC_ADDR
  8319  0548  00000001           	ddw	1	; NUM_POINTS
  8320  054C  00000005           	ddw	__ccovbit1_25& (0+7)	; OFFSET
  8321  0550  00000000           	ddw	0	; Reserved
  8322  0554  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8323  0558  00000002           	ddw	2	; NUM_RANGES
  8324  055C  000006AA           	ddw	__ccov94_start_blk1	; block 1 START_ADDR
  8325  0560  000006AD           	ddw	__end_of_start_tone	; block 1 END_ADDR
  8326  0564  000006A7           	ddw	_start_tone	; block 0 START_ADDR
  8327  0568  000006AA           	ddw	__ccov93_end_blk0	; block 0 END_ADDR
  8328                           
  8329                           ; Function: stop_tone, coverage: 1,0
  8330  056C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8331  0570  00000033           	ddw	__ccovbit1_26/(0+8)	; CC_ADDR
  8332  0574  00000001           	ddw	1	; NUM_POINTS
  8333  0578  00000004           	ddw	__ccovbit1_26& (0+7)	; OFFSET
  8334  057C  00000000           	ddw	0	; Reserved
  8335  0580  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8336  0584  00000002           	ddw	2	; NUM_RANGES
  8337  0588  000006A4           	ddw	__ccov96_start_blk1	; block 1 START_ADDR
  8338  058C  000006A7           	ddw	__end_of_stop_tone	; block 1 END_ADDR
  8339  0590  000006A1           	ddw	_stop_tone	; block 0 START_ADDR
  8340  0594  000006A4           	ddw	__ccov95_end_blk0	; block 0 END_ADDR
  8341                           
  8342                           ; Function: beep_short, coverage: 2,1,0
  8343  0598  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8344  059C  00000033           	ddw	__ccovbit2_27/(0+8)	; CC_ADDR
  8345  05A0  00000001           	ddw	1	; NUM_POINTS
  8346  05A4  00000003           	ddw	__ccovbit2_27& (0+7)	; OFFSET
  8347  05A8  00000000           	ddw	0	; Reserved
  8348  05AC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8349  05B0  00000003           	ddw	3	; NUM_RANGES
  8350  05B4  000004F3           	ddw	__ccov99_start_blk2	; block 2 START_ADDR
  8351  05B8  000004F7           	ddw	__ccov99_end_blk2	; block 2 END_ADDR
  8352  05BC  000004EE           	ddw	__ccov98_start_blk1	; block 1 START_ADDR
  8353  05C0  000004F3           	ddw	__ccov98_end_blk1	; block 1 END_ADDR
  8354  05C4  000004EA           	ddw	_beep_short	; block 0 START_ADDR
  8355  05C8  000004EE           	ddw	__ccov97_end_blk0	; block 0 END_ADDR
  8356                           
  8357                           ; Function: beep_short, coverage: 6,5,4,1,0
  8358  05CC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8359  05D0  00000033           	ddw	__ccovbit6_28/(0+8)	; CC_ADDR
  8360  05D4  00000001           	ddw	1	; NUM_POINTS
  8361  05D8  00000002           	ddw	__ccovbit6_28& (0+7)	; OFFSET
  8362  05DC  00000000           	ddw	0	; Reserved
  8363  05E0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8364  05E4  00000005           	ddw	5	; NUM_RANGES
  8365  05E8  000004FD           	ddw	__ccov102_start_blk6	; block 6 START_ADDR
  8366  05EC  00000501           	ddw	__ccov102_end_blk6	; block 6 END_ADDR
  8367  05F0  000004FC           	ddw	__ccov101_start_blk5	; block 5 START_ADDR
  8368  05F4  000004FD           	ddw	__ccov101_end_blk5	; block 5 END_ADDR
  8369  05F8  000004F7           	ddw	__ccov100_start_blk4	; block 4 START_ADDR
  8370  05FC  000004FC           	ddw	__ccov100_end_blk4	; block 4 END_ADDR
  8371  0600  000004EE           	ddw	__ccov98_start_blk1	; block 1 START_ADDR
  8372  0604  000004F3           	ddw	__ccov98_end_blk1	; block 1 END_ADDR
  8373  0608  000004EA           	ddw	_beep_short	; block 0 START_ADDR
  8374  060C  000004EE           	ddw	__ccov97_end_blk0	; block 0 END_ADDR
  8375                           
  8376                           ; Function: beep_short, coverage: 8,0
  8377  0610  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8378  0614  00000033           	ddw	__ccovbit8_29/(0+8)	; CC_ADDR
  8379  0618  00000001           	ddw	1	; NUM_POINTS
  8380  061C  00000001           	ddw	__ccovbit8_29& (0+7)	; OFFSET
  8381  0620  00000000           	ddw	0	; Reserved
  8382  0624  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8383  0628  00000002           	ddw	2	; NUM_RANGES
  8384  062C  00000501           	ddw	__ccov103_start_blk8	; block 8 START_ADDR
  8385  0630  00000504           	ddw	__end_of_beep_short	; block 8 END_ADDR
  8386  0634  000004EA           	ddw	_beep_short	; block 0 START_ADDR
  8387  0638  000004EE           	ddw	__ccov97_end_blk0	; block 0 END_ADDR
  8388                           
  8389                           ; Function: beep_long, coverage: 2,1,0
  8390  063C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8391  0640  00000033           	ddw	__ccovbit2_30/(0+8)	; CC_ADDR
  8392  0644  00000001           	ddw	1	; NUM_POINTS
  8393  0648  00000000           	ddw	__ccovbit2_30& (0+7)	; OFFSET
  8394  064C  00000000           	ddw	0	; Reserved
  8395  0650  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8396  0654  00000003           	ddw	3	; NUM_RANGES
  8397  0658  00000540           	ddw	__ccov106_start_blk2	; block 2 START_ADDR
  8398  065C  00000543           	ddw	__ccov106_end_blk2	; block 2 END_ADDR
  8399  0660  0000053A           	ddw	__ccov105_start_blk1	; block 1 START_ADDR
  8400  0664  00000540           	ddw	__ccov105_end_blk1	; block 1 END_ADDR
  8401  0668  00000536           	ddw	_beep_long	; block 0 START_ADDR
  8402  066C  0000053A           	ddw	__ccov104_end_blk0	; block 0 END_ADDR
  8403                           
  8404                           ; Function: beep_long, coverage: 6,5,4,1,0
  8405  0670  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8406  0674  00000032           	ddw	__ccovbit6_31/(0+8)	; CC_ADDR
  8407  0678  00000001           	ddw	1	; NUM_POINTS
  8408  067C  00000007           	ddw	__ccovbit6_31& (0+7)	; OFFSET
  8409  0680  00000000           	ddw	0	; Reserved
  8410  0684  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8411  0688  00000005           	ddw	5	; NUM_RANGES
  8412  068C  00000548           	ddw	__ccov109_start_blk6	; block 6 START_ADDR
  8413  0690  0000054C           	ddw	__ccov109_end_blk6	; block 6 END_ADDR
  8414  0694  00000547           	ddw	__ccov108_start_blk5	; block 5 START_ADDR
  8415  0698  00000548           	ddw	__ccov108_end_blk5	; block 5 END_ADDR
  8416  069C  00000543           	ddw	__ccov107_start_blk4	; block 4 START_ADDR
  8417  06A0  00000547           	ddw	__ccov107_end_blk4	; block 4 END_ADDR
  8418  06A4  0000053A           	ddw	__ccov105_start_blk1	; block 1 START_ADDR
  8419  06A8  00000540           	ddw	__ccov105_end_blk1	; block 1 END_ADDR
  8420  06AC  00000536           	ddw	_beep_long	; block 0 START_ADDR
  8421  06B0  0000053A           	ddw	__ccov104_end_blk0	; block 0 END_ADDR
  8422                           
  8423                           ; Function: beep_long, coverage: 8,0
  8424  06B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8425  06B8  00000032           	ddw	__ccovbit8_32/(0+8)	; CC_ADDR
  8426  06BC  00000001           	ddw	1	; NUM_POINTS
  8427  06C0  00000006           	ddw	__ccovbit8_32& (0+7)	; OFFSET
  8428  06C4  00000000           	ddw	0	; Reserved
  8429  06C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8430  06CC  00000002           	ddw	2	; NUM_RANGES
  8431  06D0  0000054C           	ddw	__ccov110_start_blk8	; block 8 START_ADDR
  8432  06D4  0000054F           	ddw	__end_of_beep_long	; block 8 END_ADDR
  8433  06D8  00000536           	ddw	_beep_long	; block 0 START_ADDR
  8434  06DC  0000053A           	ddw	__ccov104_end_blk0	; block 0 END_ADDR
  8435                           
  8436                           ; Function: beep_double, coverage: 1,0
  8437  06E0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8438  06E4  00000032           	ddw	__ccovbit1_33/(0+8)	; CC_ADDR
  8439  06E8  00000001           	ddw	1	; NUM_POINTS
  8440  06EC  00000005           	ddw	__ccovbit1_33& (0+7)	; OFFSET
  8441  06F0  00000000           	ddw	0	; Reserved
  8442  06F4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8443  06F8  00000002           	ddw	2	; NUM_RANGES
  8444  06FC  00000616           	ddw	__ccov112_start_blk1	; block 1 START_ADDR
  8445  0700  0000061C           	ddw	__ccov112_end_blk1	; block 1 END_ADDR
  8446  0704  00000612           	ddw	_beep_double	; block 0 START_ADDR
  8447  0708  00000616           	ddw	__ccov111_end_blk0	; block 0 END_ADDR
  8448                           
  8449                           ; Function: beep_double, coverage: 3,0
  8450  070C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8451  0710  00000032           	ddw	__ccovbit3_34/(0+8)	; CC_ADDR
  8452  0714  00000001           	ddw	1	; NUM_POINTS
  8453  0718  00000004           	ddw	__ccovbit3_34& (0+7)	; OFFSET
  8454  071C  00000000           	ddw	0	; Reserved
  8455  0720  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8456  0724  00000002           	ddw	2	; NUM_RANGES
  8457  0728  0000061C           	ddw	__ccov113_start_blk3	; block 3 START_ADDR
  8458  072C  00000621           	ddw	__ccov113_end_blk3	; block 3 END_ADDR
  8459  0730  00000612           	ddw	_beep_double	; block 0 START_ADDR
  8460  0734  00000616           	ddw	__ccov111_end_blk0	; block 0 END_ADDR
  8461                           
  8462                           ; Function: beep_double, coverage: 5,0
  8463  0738  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8464  073C  00000032           	ddw	__ccovbit5_35/(0+8)	; CC_ADDR
  8465  0740  00000001           	ddw	1	; NUM_POINTS
  8466  0744  00000003           	ddw	__ccovbit5_35& (0+7)	; OFFSET
  8467  0748  00000000           	ddw	0	; Reserved
  8468  074C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8469  0750  00000002           	ddw	2	; NUM_RANGES
  8470  0754  00000621           	ddw	__ccov114_start_blk5	; block 5 START_ADDR
  8471  0758  00000624           	ddw	__end_of_beep_double	; block 5 END_ADDR
  8472  075C  00000612           	ddw	_beep_double	; block 0 START_ADDR
  8473  0760  00000616           	ddw	__ccov111_end_blk0	; block 0 END_ADDR
  8474                           
  8475                           ; Function: go_close, coverage: 1,0
  8476  0764  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8477  0768  00000032           	ddw	__ccovbit1_36/(0+8)	; CC_ADDR
  8478  076C  00000001           	ddw	1	; NUM_POINTS
  8479  0770  00000002           	ddw	__ccovbit1_36& (0+7)	; OFFSET
  8480  0774  00000000           	ddw	0	; Reserved
  8481  0778  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8482  077C  00000002           	ddw	2	; NUM_RANGES
  8483  0780  000003EE           	ddw	__ccov116_start_blk1	; block 1 START_ADDR
  8484  0784  000003F4           	ddw	__ccov116_end_blk1	; block 1 END_ADDR
  8485  0788  000003EA           	ddw	_go_close	; block 0 START_ADDR
  8486  078C  000003EE           	ddw	__ccov115_end_blk0	; block 0 END_ADDR
  8487                           
  8488                           ; Function: go_close, coverage: 2,1,0
  8489  0790  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8490  0794  00000032           	ddw	__ccovbit2_37/(0+8)	; CC_ADDR
  8491  0798  00000001           	ddw	1	; NUM_POINTS
  8492  079C  00000001           	ddw	__ccovbit2_37& (0+7)	; OFFSET
  8493  07A0  00000000           	ddw	0	; Reserved
  8494  07A4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8495  07A8  00000003           	ddw	3	; NUM_RANGES
  8496  07AC  000003F4           	ddw	__ccov117_start_blk2	; block 2 START_ADDR
  8497  07B0  000003F9           	ddw	__ccov117_end_blk2	; block 2 END_ADDR
  8498  07B4  000003EE           	ddw	__ccov116_start_blk1	; block 1 START_ADDR
  8499  07B8  000003F4           	ddw	__ccov116_end_blk1	; block 1 END_ADDR
  8500  07BC  000003EA           	ddw	_go_close	; block 0 START_ADDR
  8501  07C0  000003EE           	ddw	__ccov115_end_blk0	; block 0 END_ADDR
  8502                           
  8503                           ; Function: go_close, coverage: 4,3,2,1,0
  8504  07C4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8505  07C8  00000032           	ddw	__ccovbit4_38/(0+8)	; CC_ADDR
  8506  07CC  00000001           	ddw	1	; NUM_POINTS
  8507  07D0  00000000           	ddw	__ccovbit4_38& (0+7)	; OFFSET
  8508  07D4  00000000           	ddw	0	; Reserved
  8509  07D8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8510  07DC  00000005           	ddw	5	; NUM_RANGES
  8511  07E0  000003FE           	ddw	__ccov119_start_blk4	; block 4 START_ADDR
  8512  07E4  00000411           	ddw	__ccov119_end_blk4	; block 4 END_ADDR
  8513  07E8  000003F9           	ddw	__ccov118_start_blk3	; block 3 START_ADDR
  8514  07EC  000003FE           	ddw	__ccov118_end_blk3	; block 3 END_ADDR
  8515  07F0  000003F4           	ddw	__ccov117_start_blk2	; block 2 START_ADDR
  8516  07F4  000003F9           	ddw	__ccov117_end_blk2	; block 2 END_ADDR
  8517  07F8  000003EE           	ddw	__ccov116_start_blk1	; block 1 START_ADDR
  8518  07FC  000003F4           	ddw	__ccov116_end_blk1	; block 1 END_ADDR
  8519  0800  000003EA           	ddw	_go_close	; block 0 START_ADDR
  8520  0804  000003EE           	ddw	__ccov115_end_blk0	; block 0 END_ADDR
  8521                           
  8522                           ; Function: go_close, coverage: 6,0
  8523  0808  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8524  080C  00000031           	ddw	__ccovbit6_39/(0+8)	; CC_ADDR
  8525  0810  00000001           	ddw	1	; NUM_POINTS
  8526  0814  00000007           	ddw	__ccovbit6_39& (0+7)	; OFFSET
  8527  0818  00000000           	ddw	0	; Reserved
  8528  081C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8529  0820  00000002           	ddw	2	; NUM_RANGES
  8530  0824  00000411           	ddw	__ccov120_start_blk6	; block 6 START_ADDR
  8531  0828  00000414           	ddw	__end_of_go_close	; block 6 END_ADDR
  8532  082C  000003EA           	ddw	_go_close	; block 0 START_ADDR
  8533  0830  000003EE           	ddw	__ccov115_end_blk0	; block 0 END_ADDR
  8534                           
  8535                           ; Function: go_close_short, coverage: 1,0
  8536  0834  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8537  0838  00000031           	ddw	__ccovbit1_40/(0+8)	; CC_ADDR
  8538  083C  00000001           	ddw	1	; NUM_POINTS
  8539  0840  00000006           	ddw	__ccovbit1_40& (0+7)	; OFFSET
  8540  0844  00000000           	ddw	0	; Reserved
  8541  0848  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8542  084C  00000002           	ddw	2	; NUM_RANGES
  8543  0850  00000418           	ddw	__ccov122_start_blk1	; block 1 START_ADDR
  8544  0854  0000041E           	ddw	__ccov122_end_blk1	; block 1 END_ADDR
  8545  0858  00000414           	ddw	_go_close_short	; block 0 START_ADDR
  8546  085C  00000418           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  8547                           
  8548                           ; Function: go_close_short, coverage: 2,1,0
  8549  0860  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8550  0864  00000031           	ddw	__ccovbit2_41/(0+8)	; CC_ADDR
  8551  0868  00000001           	ddw	1	; NUM_POINTS
  8552  086C  00000005           	ddw	__ccovbit2_41& (0+7)	; OFFSET
  8553  0870  00000000           	ddw	0	; Reserved
  8554  0874  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8555  0878  00000003           	ddw	3	; NUM_RANGES
  8556  087C  0000041E           	ddw	__ccov123_start_blk2	; block 2 START_ADDR
  8557  0880  00000423           	ddw	__ccov123_end_blk2	; block 2 END_ADDR
  8558  0884  00000418           	ddw	__ccov122_start_blk1	; block 1 START_ADDR
  8559  0888  0000041E           	ddw	__ccov122_end_blk1	; block 1 END_ADDR
  8560  088C  00000414           	ddw	_go_close_short	; block 0 START_ADDR
  8561  0890  00000418           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  8562                           
  8563                           ; Function: go_close_short, coverage: 4,3,2,1,0
  8564  0894  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8565  0898  00000031           	ddw	__ccovbit4_42/(0+8)	; CC_ADDR
  8566  089C  00000001           	ddw	1	; NUM_POINTS
  8567  08A0  00000004           	ddw	__ccovbit4_42& (0+7)	; OFFSET
  8568  08A4  00000000           	ddw	0	; Reserved
  8569  08A8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8570  08AC  00000005           	ddw	5	; NUM_RANGES
  8571  08B0  00000428           	ddw	__ccov125_start_blk4	; block 4 START_ADDR
  8572  08B4  0000043B           	ddw	__ccov125_end_blk4	; block 4 END_ADDR
  8573  08B8  00000423           	ddw	__ccov124_start_blk3	; block 3 START_ADDR
  8574  08BC  00000428           	ddw	__ccov124_end_blk3	; block 3 END_ADDR
  8575  08C0  0000041E           	ddw	__ccov123_start_blk2	; block 2 START_ADDR
  8576  08C4  00000423           	ddw	__ccov123_end_blk2	; block 2 END_ADDR
  8577  08C8  00000418           	ddw	__ccov122_start_blk1	; block 1 START_ADDR
  8578  08CC  0000041E           	ddw	__ccov122_end_blk1	; block 1 END_ADDR
  8579  08D0  00000414           	ddw	_go_close_short	; block 0 START_ADDR
  8580  08D4  00000418           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  8581                           
  8582                           ; Function: go_close_short, coverage: 6,0
  8583  08D8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8584  08DC  00000031           	ddw	__ccovbit6_43/(0+8)	; CC_ADDR
  8585  08E0  00000001           	ddw	1	; NUM_POINTS
  8586  08E4  00000003           	ddw	__ccovbit6_43& (0+7)	; OFFSET
  8587  08E8  00000000           	ddw	0	; Reserved
  8588  08EC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8589  08F0  00000002           	ddw	2	; NUM_RANGES
  8590  08F4  0000043B           	ddw	__ccov126_start_blk6	; block 6 START_ADDR
  8591  08F8  0000043E           	ddw	__end_of_go_close_short	; block 6 END_ADDR
  8592  08FC  00000414           	ddw	_go_close_short	; block 0 START_ADDR
  8593  0900  00000418           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  8594                           
  8595                           ; Function: go_open, coverage: 1,0
  8596  0904  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8597  0908  00000031           	ddw	__ccovbit1_44/(0+8)	; CC_ADDR
  8598  090C  00000001           	ddw	1	; NUM_POINTS
  8599  0910  00000002           	ddw	__ccovbit1_44& (0+7)	; OFFSET
  8600  0914  00000000           	ddw	0	; Reserved
  8601  0918  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8602  091C  00000002           	ddw	2	; NUM_RANGES
  8603  0920  000004D1           	ddw	__ccov128_start_blk1	; block 1 START_ADDR
  8604  0924  000004D7           	ddw	__ccov128_end_blk1	; block 1 END_ADDR
  8605  0928  000004CD           	ddw	_go_open	; block 0 START_ADDR
  8606  092C  000004D1           	ddw	__ccov127_end_blk0	; block 0 END_ADDR
  8607                           
  8608                           ; Function: go_open, coverage: 2,1,0
  8609  0930  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8610  0934  00000031           	ddw	__ccovbit2_45/(0+8)	; CC_ADDR
  8611  0938  00000001           	ddw	1	; NUM_POINTS
  8612  093C  00000001           	ddw	__ccovbit2_45& (0+7)	; OFFSET
  8613  0940  00000000           	ddw	0	; Reserved
  8614  0944  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8615  0948  00000003           	ddw	3	; NUM_RANGES
  8616  094C  000004D7           	ddw	__ccov129_start_blk2	; block 2 START_ADDR
  8617  0950  000004DC           	ddw	__ccov129_end_blk2	; block 2 END_ADDR
  8618  0954  000004D1           	ddw	__ccov128_start_blk1	; block 1 START_ADDR
  8619  0958  000004D7           	ddw	__ccov128_end_blk1	; block 1 END_ADDR
  8620  095C  000004CD           	ddw	_go_open	; block 0 START_ADDR
  8621  0960  000004D1           	ddw	__ccov127_end_blk0	; block 0 END_ADDR
  8622                           
  8623                           ; Function: go_open, coverage: 5,4,3,2,1,0
  8624  0964  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8625  0968  00000031           	ddw	__ccovbit5_46/(0+8)	; CC_ADDR
  8626  096C  00000001           	ddw	1	; NUM_POINTS
  8627  0970  00000000           	ddw	__ccovbit5_46& (0+7)	; OFFSET
  8628  0974  00000000           	ddw	0	; Reserved
  8629  0978  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8630  097C  00000006           	ddw	6	; NUM_RANGES
  8631  0980  000004E5           	ddw	__ccov132_start_blk5	; block 5 START_ADDR
  8632  0984  000004E7           	ddw	__ccov132_end_blk5	; block 5 END_ADDR
  8633  0988  000004E1           	ddw	__ccov131_start_blk4	; block 4 START_ADDR
  8634  098C  000004E5           	ddw	__ccov131_end_blk4	; block 4 END_ADDR
  8635  0990  000004DC           	ddw	__ccov130_start_blk3	; block 3 START_ADDR
  8636  0994  000004E1           	ddw	__ccov130_end_blk3	; block 3 END_ADDR
  8637  0998  000004D7           	ddw	__ccov129_start_blk2	; block 2 START_ADDR
  8638  099C  000004DC           	ddw	__ccov129_end_blk2	; block 2 END_ADDR
  8639  09A0  000004D1           	ddw	__ccov128_start_blk1	; block 1 START_ADDR
  8640  09A4  000004D7           	ddw	__ccov128_end_blk1	; block 1 END_ADDR
  8641  09A8  000004CD           	ddw	_go_open	; block 0 START_ADDR
  8642  09AC  000004D1           	ddw	__ccov127_end_blk0	; block 0 END_ADDR
  8643                           
  8644                           ; Function: go_open, coverage: 8,0
  8645  09B0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8646  09B4  00000030           	ddw	__ccovbit8_47/(0+8)	; CC_ADDR
  8647  09B8  00000001           	ddw	1	; NUM_POINTS
  8648  09BC  00000007           	ddw	__ccovbit8_47& (0+7)	; OFFSET
  8649  09C0  00000000           	ddw	0	; Reserved
  8650  09C4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8651  09C8  00000002           	ddw	2	; NUM_RANGES
  8652  09CC  000004E7           	ddw	__ccov133_start_blk8	; block 8 START_ADDR
  8653  09D0  000004EA           	ddw	__end_of_go_open	; block 8 END_ADDR
  8654  09D4  000004CD           	ddw	_go_open	; block 0 START_ADDR
  8655  09D8  000004D1           	ddw	__ccov127_end_blk0	; block 0 END_ADDR
  8656                           
  8657                           ; Function: go_close_alt, coverage: 1,0
  8658  09DC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8659  09E0  00000030           	ddw	__ccovbit1_48/(0+8)	; CC_ADDR
  8660  09E4  00000001           	ddw	1	; NUM_POINTS
  8661  09E8  00000006           	ddw	__ccovbit1_48& (0+7)	; OFFSET
  8662  09EC  00000000           	ddw	0	; Reserved
  8663  09F0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8664  09F4  00000002           	ddw	2	; NUM_RANGES
  8665  09F8  000005B0           	ddw	__ccov135_start_blk1	; block 1 START_ADDR
  8666  09FC  000005B6           	ddw	__ccov135_end_blk1	; block 1 END_ADDR
  8667  0A00  000005AC           	ddw	_go_close_alt	; block 0 START_ADDR
  8668  0A04  000005B0           	ddw	__ccov134_end_blk0	; block 0 END_ADDR
  8669                           
  8670                           ; Function: go_close_alt, coverage: 2,0
  8671  0A08  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8672  0A0C  00000030           	ddw	__ccovbit2_49/(0+8)	; CC_ADDR
  8673  0A10  00000001           	ddw	1	; NUM_POINTS
  8674  0A14  00000005           	ddw	__ccovbit2_49& (0+7)	; OFFSET
  8675  0A18  00000000           	ddw	0	; Reserved
  8676  0A1C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8677  0A20  00000002           	ddw	2	; NUM_RANGES
  8678  0A24  000005B6           	ddw	__ccov136_start_blk2	; block 2 START_ADDR
  8679  0A28  000005BC           	ddw	__ccov136_end_blk2	; block 2 END_ADDR
  8680  0A2C  000005AC           	ddw	_go_close_alt	; block 0 START_ADDR
  8681  0A30  000005B0           	ddw	__ccov134_end_blk0	; block 0 END_ADDR
  8682                           
  8683                           ; Function: go_close_alt, coverage: 3,0
  8684  0A34  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8685  0A38  00000030           	ddw	__ccovbit3_50/(0+8)	; CC_ADDR
  8686  0A3C  00000001           	ddw	1	; NUM_POINTS
  8687  0A40  00000004           	ddw	__ccovbit3_50& (0+7)	; OFFSET
  8688  0A44  00000000           	ddw	0	; Reserved
  8689  0A48  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8690  0A4C  00000002           	ddw	2	; NUM_RANGES
  8691  0A50  000005BC           	ddw	__ccov137_start_blk3	; block 3 START_ADDR
  8692  0A54  000005C1           	ddw	__ccov137_end_blk3	; block 3 END_ADDR
  8693  0A58  000005AC           	ddw	_go_close_alt	; block 0 START_ADDR
  8694  0A5C  000005B0           	ddw	__ccov134_end_blk0	; block 0 END_ADDR
  8695                           
  8696                           ; Function: go_close_alt, coverage: 5,0
  8697  0A60  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8698  0A64  00000030           	ddw	__ccovbit5_51/(0+8)	; CC_ADDR
  8699  0A68  00000001           	ddw	1	; NUM_POINTS
  8700  0A6C  00000003           	ddw	__ccovbit5_51& (0+7)	; OFFSET
  8701  0A70  00000000           	ddw	0	; Reserved
  8702  0A74  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8703  0A78  00000002           	ddw	2	; NUM_RANGES
  8704  0A7C  000005C1           	ddw	__ccov138_start_blk5	; block 5 START_ADDR
  8705  0A80  000005C3           	ddw	__end_of_go_close_alt	; block 5 END_ADDR
  8706  0A84  000005AC           	ddw	_go_close_alt	; block 0 START_ADDR
  8707  0A88  000005B0           	ddw	__ccov134_end_blk0	; block 0 END_ADDR
  8708                           
  8709                           ; Function: go_open_alt, coverage: 1,0
  8710  0A8C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8711  0A90  00000030           	ddw	__ccovbit1_52/(0+8)	; CC_ADDR
  8712  0A94  00000001           	ddw	1	; NUM_POINTS
  8713  0A98  00000002           	ddw	__ccovbit1_52& (0+7)	; OFFSET
  8714  0A9C  00000000           	ddw	0	; Reserved
  8715  0AA0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8716  0AA4  00000002           	ddw	2	; NUM_RANGES
  8717  0AA8  00000604           	ddw	__ccov140_start_blk1	; block 1 START_ADDR
  8718  0AAC  0000060A           	ddw	__ccov140_end_blk1	; block 1 END_ADDR
  8719  0AB0  00000600           	ddw	_go_open_alt	; block 0 START_ADDR
  8720  0AB4  00000604           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  8721                           
  8722                           ; Function: go_open_alt, coverage: 2,1,0
  8723  0AB8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8724  0ABC  00000030           	ddw	__ccovbit2_53/(0+8)	; CC_ADDR
  8725  0AC0  00000001           	ddw	1	; NUM_POINTS
  8726  0AC4  00000001           	ddw	__ccovbit2_53& (0+7)	; OFFSET
  8727  0AC8  00000000           	ddw	0	; Reserved
  8728  0ACC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8729  0AD0  00000003           	ddw	3	; NUM_RANGES
  8730  0AD4  0000060A           	ddw	__ccov141_start_blk2	; block 2 START_ADDR
  8731  0AD8  0000060F           	ddw	__ccov141_end_blk2	; block 2 END_ADDR
  8732  0ADC  00000604           	ddw	__ccov140_start_blk1	; block 1 START_ADDR
  8733  0AE0  0000060A           	ddw	__ccov140_end_blk1	; block 1 END_ADDR
  8734  0AE4  00000600           	ddw	_go_open_alt	; block 0 START_ADDR
  8735  0AE8  00000604           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  8736                           
  8737                           ; Function: go_open_alt, coverage: 4,0
  8738  0AEC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8739  0AF0  00000030           	ddw	__ccovbit4_54/(0+8)	; CC_ADDR
  8740  0AF4  00000001           	ddw	1	; NUM_POINTS
  8741  0AF8  00000000           	ddw	__ccovbit4_54& (0+7)	; OFFSET
  8742  0AFC  00000000           	ddw	0	; Reserved
  8743  0B00  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8744  0B04  00000002           	ddw	2	; NUM_RANGES
  8745  0B08  0000060F           	ddw	__ccov142_start_blk4	; block 4 START_ADDR
  8746  0B0C  00000612           	ddw	__end_of_go_open_alt	; block 4 END_ADDR
  8747  0B10  00000600           	ddw	_go_open_alt	; block 0 START_ADDR
  8748  0B14  00000604           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  8749                           
  8750                           ; Function: rele_off, coverage: 1,0
  8751  0B18  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8752  0B1C  0000002F           	ddw	__ccovbit1_55/(0+8)	; CC_ADDR
  8753  0B20  00000001           	ddw	1	; NUM_POINTS
  8754  0B24  00000007           	ddw	__ccovbit1_55& (0+7)	; OFFSET
  8755  0B28  00000000           	ddw	0	; Reserved
  8756  0B2C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8757  0B30  00000002           	ddw	2	; NUM_RANGES
  8758  0B34  0000059E           	ddw	__ccov144_start_blk1	; block 1 START_ADDR
  8759  0B38  000005A2           	ddw	__ccov144_end_blk1	; block 1 END_ADDR
  8760  0B3C  00000595           	ddw	_rele_off	; block 0 START_ADDR
  8761  0B40  0000059E           	ddw	__ccov143_end_blk0	; block 0 END_ADDR
  8762                           
  8763                           ; Function: rele_off, coverage: 2,0
  8764  0B44  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8765  0B48  0000002F           	ddw	__ccovbit2_56/(0+8)	; CC_ADDR
  8766  0B4C  00000001           	ddw	1	; NUM_POINTS
  8767  0B50  00000006           	ddw	__ccovbit2_56& (0+7)	; OFFSET
  8768  0B54  00000000           	ddw	0	; Reserved
  8769  0B58  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8770  0B5C  00000002           	ddw	2	; NUM_RANGES
  8771  0B60  000005A2           	ddw	__ccov145_start_blk2	; block 2 START_ADDR
  8772  0B64  000005A5           	ddw	__ccov145_end_blk2	; block 2 END_ADDR
  8773  0B68  00000595           	ddw	_rele_off	; block 0 START_ADDR
  8774  0B6C  0000059E           	ddw	__ccov143_end_blk0	; block 0 END_ADDR
  8775                           
  8776                           ; Function: rele_off, coverage: 5,4,3,0
  8777  0B70  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8778  0B74  0000002F           	ddw	__ccovbit5_57/(0+8)	; CC_ADDR
  8779  0B78  00000001           	ddw	1	; NUM_POINTS
  8780  0B7C  00000005           	ddw	__ccovbit5_57& (0+7)	; OFFSET
  8781  0B80  00000000           	ddw	0	; Reserved
  8782  0B84  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8783  0B88  00000004           	ddw	4	; NUM_RANGES
  8784  0B8C  000005AA           	ddw	__ccov148_start_blk5	; block 5 START_ADDR
  8785  0B90  000005AC           	ddw	__end_of_rele_off	; block 5 END_ADDR
  8786  0B94  000005A6           	ddw	__ccov147_start_blk4	; block 4 START_ADDR
  8787  0B98  000005AA           	ddw	__ccov147_end_blk4	; block 4 END_ADDR
  8788  0B9C  000005A5           	ddw	__ccov146_start_blk3	; block 3 START_ADDR
  8789  0BA0  000005A6           	ddw	__ccov146_end_blk3	; block 3 END_ADDR
  8790  0BA4  00000595           	ddw	_rele_off	; block 0 START_ADDR
  8791  0BA8  0000059E           	ddw	__ccov143_end_blk0	; block 0 END_ADDR
  8792                           
  8793                           ; Function: close, coverage: 1,0
  8794  0BAC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8795  0BB0  0000002F           	ddw	__ccovbit1_58/(0+8)	; CC_ADDR
  8796  0BB4  00000001           	ddw	1	; NUM_POINTS
  8797  0BB8  00000004           	ddw	__ccovbit1_58& (0+7)	; OFFSET
  8798  0BBC  00000000           	ddw	0	; Reserved
  8799  0BC0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8800  0BC4  00000002           	ddw	2	; NUM_RANGES
  8801  0BC8  000004B0           	ddw	__ccov150_start_blk1	; block 1 START_ADDR
  8802  0BCC  000004B6           	ddw	__ccov150_end_blk1	; block 1 END_ADDR
  8803  0BD0  000004AC           	ddw	_close	; block 0 START_ADDR
  8804  0BD4  000004B0           	ddw	__ccov149_end_blk0	; block 0 END_ADDR
  8805                           
  8806                           ; Function: close, coverage: 3,2,0
  8807  0BD8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8808  0BDC  0000002F           	ddw	__ccovbit3_59/(0+8)	; CC_ADDR
  8809  0BE0  00000001           	ddw	1	; NUM_POINTS
  8810  0BE4  00000003           	ddw	__ccovbit3_59& (0+7)	; OFFSET
  8811  0BE8  00000000           	ddw	0	; Reserved
  8812  0BEC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8813  0BF0  00000003           	ddw	3	; NUM_RANGES
  8814  0BF4  000004BA           	ddw	__ccov152_start_blk3	; block 3 START_ADDR
  8815  0BF8  000004C0           	ddw	__ccov152_end_blk3	; block 3 END_ADDR
  8816  0BFC  000004B6           	ddw	__ccov151_start_blk2	; block 2 START_ADDR
  8817  0C00  000004BA           	ddw	__ccov151_end_blk2	; block 2 END_ADDR
  8818  0C04  000004AC           	ddw	_close	; block 0 START_ADDR
  8819  0C08  000004B0           	ddw	__ccov149_end_blk0	; block 0 END_ADDR
  8820                           
  8821                           ; Function: close, coverage: 4,2,0
  8822  0C0C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8823  0C10  0000002F           	ddw	__ccovbit4_60/(0+8)	; CC_ADDR
  8824  0C14  00000001           	ddw	1	; NUM_POINTS
  8825  0C18  00000002           	ddw	__ccovbit4_60& (0+7)	; OFFSET
  8826  0C1C  00000000           	ddw	0	; Reserved
  8827  0C20  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8828  0C24  00000003           	ddw	3	; NUM_RANGES
  8829  0C28  000004C0           	ddw	__ccov153_start_blk4	; block 4 START_ADDR
  8830  0C2C  000004C6           	ddw	__ccov153_end_blk4	; block 4 END_ADDR
  8831  0C30  000004B6           	ddw	__ccov151_start_blk2	; block 2 START_ADDR
  8832  0C34  000004BA           	ddw	__ccov151_end_blk2	; block 2 END_ADDR
  8833  0C38  000004AC           	ddw	_close	; block 0 START_ADDR
  8834  0C3C  000004B0           	ddw	__ccov149_end_blk0	; block 0 END_ADDR
  8835                           
  8836                           ; Function: close, coverage: 5,4,2,0
  8837  0C40  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8838  0C44  0000002F           	ddw	__ccovbit5_61/(0+8)	; CC_ADDR
  8839  0C48  00000001           	ddw	1	; NUM_POINTS
  8840  0C4C  00000001           	ddw	__ccovbit5_61& (0+7)	; OFFSET
  8841  0C50  00000000           	ddw	0	; Reserved
  8842  0C54  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8843  0C58  00000004           	ddw	4	; NUM_RANGES
  8844  0C5C  000004C6           	ddw	__ccov154_start_blk5	; block 5 START_ADDR
  8845  0C60  000004CA           	ddw	__ccov154_end_blk5	; block 5 END_ADDR
  8846  0C64  000004C0           	ddw	__ccov153_start_blk4	; block 4 START_ADDR
  8847  0C68  000004C6           	ddw	__ccov153_end_blk4	; block 4 END_ADDR
  8848  0C6C  000004B6           	ddw	__ccov151_start_blk2	; block 2 START_ADDR
  8849  0C70  000004BA           	ddw	__ccov151_end_blk2	; block 2 END_ADDR
  8850  0C74  000004AC           	ddw	_close	; block 0 START_ADDR
  8851  0C78  000004B0           	ddw	__ccov149_end_blk0	; block 0 END_ADDR
  8852                           
  8853                           ; Function: close, coverage: 9,0
  8854  0C7C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8855  0C80  0000002F           	ddw	__ccovbit9_62/(0+8)	; CC_ADDR
  8856  0C84  00000001           	ddw	1	; NUM_POINTS
  8857  0C88  00000000           	ddw	__ccovbit9_62& (0+7)	; OFFSET
  8858  0C8C  00000000           	ddw	0	; Reserved
  8859  0C90  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8860  0C94  00000002           	ddw	2	; NUM_RANGES
  8861  0C98  000004CA           	ddw	__ccov155_start_blk9	; block 9 START_ADDR
  8862  0C9C  000004CD           	ddw	__end_of_close	; block 9 END_ADDR
  8863  0CA0  000004AC           	ddw	_close	; block 0 START_ADDR
  8864  0CA4  000004B0           	ddw	__ccov149_end_blk0	; block 0 END_ADDR
  8865                           
  8866                           ; Function: open, coverage: 1,0
  8867  0CA8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8868  0CAC  0000002E           	ddw	__ccovbit1_63/(0+8)	; CC_ADDR
  8869  0CB0  00000001           	ddw	1	; NUM_POINTS
  8870  0CB4  00000007           	ddw	__ccovbit1_63& (0+7)	; OFFSET
  8871  0CB8  00000000           	ddw	0	; Reserved
  8872  0CBC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8873  0CC0  00000002           	ddw	2	; NUM_RANGES
  8874  0CC4  0000048F           	ddw	__ccov157_start_blk1	; block 1 START_ADDR
  8875  0CC8  00000495           	ddw	__ccov157_end_blk1	; block 1 END_ADDR
  8876  0CCC  0000048B           	ddw	_open	; block 0 START_ADDR
  8877  0CD0  0000048F           	ddw	__ccov156_end_blk0	; block 0 END_ADDR
  8878                           
  8879                           ; Function: open, coverage: 3,2,0
  8880  0CD4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8881  0CD8  0000002E           	ddw	__ccovbit3_64/(0+8)	; CC_ADDR
  8882  0CDC  00000001           	ddw	1	; NUM_POINTS
  8883  0CE0  00000006           	ddw	__ccovbit3_64& (0+7)	; OFFSET
  8884  0CE4  00000000           	ddw	0	; Reserved
  8885  0CE8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8886  0CEC  00000003           	ddw	3	; NUM_RANGES
  8887  0CF0  00000499           	ddw	__ccov159_start_blk3	; block 3 START_ADDR
  8888  0CF4  0000049F           	ddw	__ccov159_end_blk3	; block 3 END_ADDR
  8889  0CF8  00000495           	ddw	__ccov158_start_blk2	; block 2 START_ADDR
  8890  0CFC  00000499           	ddw	__ccov158_end_blk2	; block 2 END_ADDR
  8891  0D00  0000048B           	ddw	_open	; block 0 START_ADDR
  8892  0D04  0000048F           	ddw	__ccov156_end_blk0	; block 0 END_ADDR
  8893                           
  8894                           ; Function: open, coverage: 4,2,0
  8895  0D08  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8896  0D0C  0000002E           	ddw	__ccovbit4_65/(0+8)	; CC_ADDR
  8897  0D10  00000001           	ddw	1	; NUM_POINTS
  8898  0D14  00000005           	ddw	__ccovbit4_65& (0+7)	; OFFSET
  8899  0D18  00000000           	ddw	0	; Reserved
  8900  0D1C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8901  0D20  00000003           	ddw	3	; NUM_RANGES
  8902  0D24  0000049F           	ddw	__ccov160_start_blk4	; block 4 START_ADDR
  8903  0D28  000004A5           	ddw	__ccov160_end_blk4	; block 4 END_ADDR
  8904  0D2C  00000495           	ddw	__ccov158_start_blk2	; block 2 START_ADDR
  8905  0D30  00000499           	ddw	__ccov158_end_blk2	; block 2 END_ADDR
  8906  0D34  0000048B           	ddw	_open	; block 0 START_ADDR
  8907  0D38  0000048F           	ddw	__ccov156_end_blk0	; block 0 END_ADDR
  8908                           
  8909                           ; Function: open, coverage: 5,4,2,0
  8910  0D3C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8911  0D40  0000002E           	ddw	__ccovbit5_66/(0+8)	; CC_ADDR
  8912  0D44  00000001           	ddw	1	; NUM_POINTS
  8913  0D48  00000004           	ddw	__ccovbit5_66& (0+7)	; OFFSET
  8914  0D4C  00000000           	ddw	0	; Reserved
  8915  0D50  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8916  0D54  00000004           	ddw	4	; NUM_RANGES
  8917  0D58  000004A5           	ddw	__ccov161_start_blk5	; block 5 START_ADDR
  8918  0D5C  000004A9           	ddw	__ccov161_end_blk5	; block 5 END_ADDR
  8919  0D60  0000049F           	ddw	__ccov160_start_blk4	; block 4 START_ADDR
  8920  0D64  000004A5           	ddw	__ccov160_end_blk4	; block 4 END_ADDR
  8921  0D68  00000495           	ddw	__ccov158_start_blk2	; block 2 START_ADDR
  8922  0D6C  00000499           	ddw	__ccov158_end_blk2	; block 2 END_ADDR
  8923  0D70  0000048B           	ddw	_open	; block 0 START_ADDR
  8924  0D74  0000048F           	ddw	__ccov156_end_blk0	; block 0 END_ADDR
  8925                           
  8926                           ; Function: open, coverage: 9,0
  8927  0D78  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8928  0D7C  0000002E           	ddw	__ccovbit9_67/(0+8)	; CC_ADDR
  8929  0D80  00000001           	ddw	1	; NUM_POINTS
  8930  0D84  00000003           	ddw	__ccovbit9_67& (0+7)	; OFFSET
  8931  0D88  00000000           	ddw	0	; Reserved
  8932  0D8C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8933  0D90  00000002           	ddw	2	; NUM_RANGES
  8934  0D94  000004A9           	ddw	__ccov162_start_blk9	; block 9 START_ADDR
  8935  0D98  000004AC           	ddw	__end_of_open	; block 9 END_ADDR
  8936  0D9C  0000048B           	ddw	_open	; block 0 START_ADDR
  8937  0DA0  0000048F           	ddw	__ccov156_end_blk0	; block 0 END_ADDR
  8938                           
  8939                           ; Function: rele_tick, coverage: 1,0
  8940  0DA4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8941  0DA8  0000002E           	ddw	__ccovbit1_68/(0+8)	; CC_ADDR
  8942  0DAC  00000001           	ddw	1	; NUM_POINTS
  8943  0DB0  00000002           	ddw	__ccovbit1_68& (0+7)	; OFFSET
  8944  0DB4  00000000           	ddw	0	; Reserved
  8945  0DB8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8946  0DBC  00000002           	ddw	2	; NUM_RANGES
  8947  0DC0  00000198           	ddw	__ccov164_start_blk1	; block 1 START_ADDR
  8948  0DC4  0000019F           	ddw	__ccov164_end_blk1	; block 1 END_ADDR
  8949  0DC8  00000194           	ddw	_rele_tick	; block 0 START_ADDR
  8950  0DCC  00000198           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  8951                           
  8952                           ; Function: rele_tick, coverage: 4,3,0
  8953  0DD0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8954  0DD4  0000002E           	ddw	__ccovbit4_69/(0+8)	; CC_ADDR
  8955  0DD8  00000001           	ddw	1	; NUM_POINTS
  8956  0DDC  00000001           	ddw	__ccovbit4_69& (0+7)	; OFFSET
  8957  0DE0  00000000           	ddw	0	; Reserved
  8958  0DE4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8959  0DE8  00000003           	ddw	3	; NUM_RANGES
  8960  0DEC  000001A3           	ddw	__ccov166_start_blk4	; block 4 START_ADDR
  8961  0DF0  000001AB           	ddw	__ccov166_end_blk4	; block 4 END_ADDR
  8962  0DF4  0000019F           	ddw	__ccov165_start_blk3	; block 3 START_ADDR
  8963  0DF8  000001A3           	ddw	__ccov165_end_blk3	; block 3 END_ADDR
  8964  0DFC  00000194           	ddw	_rele_tick	; block 0 START_ADDR
  8965  0E00  00000198           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  8966                           
  8967                           ; Function: rele_tick, coverage: 6,5,4,3,0
  8968  0E04  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8969  0E08  0000002E           	ddw	__ccovbit6_70/(0+8)	; CC_ADDR
  8970  0E0C  00000001           	ddw	1	; NUM_POINTS
  8971  0E10  00000000           	ddw	__ccovbit6_70& (0+7)	; OFFSET
  8972  0E14  00000000           	ddw	0	; Reserved
  8973  0E18  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8974  0E1C  00000005           	ddw	5	; NUM_RANGES
  8975  0E20  000001AF           	ddw	__ccov168_start_blk6	; block 6 START_ADDR
  8976  0E24  000001B6           	ddw	__ccov168_end_blk6	; block 6 END_ADDR
  8977  0E28  000001AB           	ddw	__ccov167_start_blk5	; block 5 START_ADDR
  8978  0E2C  000001AF           	ddw	__ccov167_end_blk5	; block 5 END_ADDR
  8979  0E30  000001A3           	ddw	__ccov166_start_blk4	; block 4 START_ADDR
  8980  0E34  000001AB           	ddw	__ccov166_end_blk4	; block 4 END_ADDR
  8981  0E38  0000019F           	ddw	__ccov165_start_blk3	; block 3 START_ADDR
  8982  0E3C  000001A3           	ddw	__ccov165_end_blk3	; block 3 END_ADDR
  8983  0E40  00000194           	ddw	_rele_tick	; block 0 START_ADDR
  8984  0E44  00000198           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  8985                           
  8986                           ; Function: rele_tick, coverage: 7,6,5,4,3,0
  8987  0E48  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8988  0E4C  0000002D           	ddw	__ccovbit7_71/(0+8)	; CC_ADDR
  8989  0E50  00000001           	ddw	1	; NUM_POINTS
  8990  0E54  00000007           	ddw	__ccovbit7_71& (0+7)	; OFFSET
  8991  0E58  00000000           	ddw	0	; Reserved
  8992  0E5C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8993  0E60  00000006           	ddw	6	; NUM_RANGES
  8994  0E64  000001B6           	ddw	__ccov169_start_blk7	; block 7 START_ADDR
  8995  0E68  000001BA           	ddw	__ccov169_end_blk7	; block 7 END_ADDR
  8996  0E6C  000001AF           	ddw	__ccov168_start_blk6	; block 6 START_ADDR
  8997  0E70  000001B6           	ddw	__ccov168_end_blk6	; block 6 END_ADDR
  8998  0E74  000001AB           	ddw	__ccov167_start_blk5	; block 5 START_ADDR
  8999  0E78  000001AF           	ddw	__ccov167_end_blk5	; block 5 END_ADDR
  9000  0E7C  000001A3           	ddw	__ccov166_start_blk4	; block 4 START_ADDR
  9001  0E80  000001AB           	ddw	__ccov166_end_blk4	; block 4 END_ADDR
  9002  0E84  0000019F           	ddw	__ccov165_start_blk3	; block 3 START_ADDR
  9003  0E88  000001A3           	ddw	__ccov165_end_blk3	; block 3 END_ADDR
  9004  0E8C  00000194           	ddw	_rele_tick	; block 0 START_ADDR
  9005  0E90  00000198           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  9006                           
  9007                           ; Function: rele_tick, coverage: 10,3,0
  9008  0E94  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9009  0E98  0000002D           	ddw	__ccovbit10_72/(0+8)	; CC_ADDR
  9010  0E9C  00000001           	ddw	1	; NUM_POINTS
  9011  0EA0  00000006           	ddw	__ccovbit10_72& (0+7)	; OFFSET
  9012  0EA4  00000000           	ddw	0	; Reserved
  9013  0EA8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9014  0EAC  00000003           	ddw	3	; NUM_RANGES
  9015  0EB0  000001BA           	ddw	__ccov170_start_blk10	; block 10 START_ADDR
  9016  0EB4  000001C0           	ddw	__ccov170_end_blk10	; block 10 END_ADDR
  9017  0EB8  0000019F           	ddw	__ccov165_start_blk3	; block 3 START_ADDR
  9018  0EBC  000001A3           	ddw	__ccov165_end_blk3	; block 3 END_ADDR
  9019  0EC0  00000194           	ddw	_rele_tick	; block 0 START_ADDR
  9020  0EC4  00000198           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  9021                           
  9022                           ; Function: rele_tick, coverage: 14,13,12,11,10,3,0
  9023  0EC8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9024  0ECC  0000002D           	ddw	__ccovbit14_73/(0+8)	; CC_ADDR
  9025  0ED0  00000001           	ddw	1	; NUM_POINTS
  9026  0ED4  00000005           	ddw	__ccovbit14_73& (0+7)	; OFFSET
  9027  0ED8  00000000           	ddw	0	; Reserved
  9028  0EDC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9029  0EE0  00000007           	ddw	7	; NUM_RANGES
  9030  0EE4  000001CD           	ddw	__ccov174_start_blk14	; block 14 START_ADDR
  9031  0EE8  000001D3           	ddw	__ccov174_end_blk14	; block 14 END_ADDR
  9032  0EEC  000001CC           	ddw	__ccov173_start_blk13	; block 13 START_ADDR
  9033  0EF0  000001CD           	ddw	__ccov173_end_blk13	; block 13 END_ADDR
  9034  0EF4  000001C6           	ddw	__ccov172_start_blk12	; block 12 START_ADDR
  9035  0EF8  000001CC           	ddw	__ccov172_end_blk12	; block 12 END_ADDR
  9036  0EFC  000001C0           	ddw	__ccov171_start_blk11	; block 11 START_ADDR
  9037  0F00  000001C6           	ddw	__ccov171_end_blk11	; block 11 END_ADDR
  9038  0F04  000001BA           	ddw	__ccov170_start_blk10	; block 10 START_ADDR
  9039  0F08  000001C0           	ddw	__ccov170_end_blk10	; block 10 END_ADDR
  9040  0F0C  0000019F           	ddw	__ccov165_start_blk3	; block 3 START_ADDR
  9041  0F10  000001A3           	ddw	__ccov165_end_blk3	; block 3 END_ADDR
  9042  0F14  00000194           	ddw	_rele_tick	; block 0 START_ADDR
  9043  0F18  00000198           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  9044                           
  9045                           ; Function: rele_tick, coverage: 15,12,11,10,3,0
  9046  0F1C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9047  0F20  0000002D           	ddw	__ccovbit15_74/(0+8)	; CC_ADDR
  9048  0F24  00000001           	ddw	1	; NUM_POINTS
  9049  0F28  00000004           	ddw	__ccovbit15_74& (0+7)	; OFFSET
  9050  0F2C  00000000           	ddw	0	; Reserved
  9051  0F30  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9052  0F34  00000006           	ddw	6	; NUM_RANGES
  9053  0F38  000001D3           	ddw	__ccov175_start_blk15	; block 15 START_ADDR
  9054  0F3C  000001D6           	ddw	__ccov175_end_blk15	; block 15 END_ADDR
  9055  0F40  000001C6           	ddw	__ccov172_start_blk12	; block 12 START_ADDR
  9056  0F44  000001CC           	ddw	__ccov172_end_blk12	; block 12 END_ADDR
  9057  0F48  000001C0           	ddw	__ccov171_start_blk11	; block 11 START_ADDR
  9058  0F4C  000001C6           	ddw	__ccov171_end_blk11	; block 11 END_ADDR
  9059  0F50  000001BA           	ddw	__ccov170_start_blk10	; block 10 START_ADDR
  9060  0F54  000001C0           	ddw	__ccov170_end_blk10	; block 10 END_ADDR
  9061  0F58  0000019F           	ddw	__ccov165_start_blk3	; block 3 START_ADDR
  9062  0F5C  000001A3           	ddw	__ccov165_end_blk3	; block 3 END_ADDR
  9063  0F60  00000194           	ddw	_rele_tick	; block 0 START_ADDR
  9064  0F64  00000198           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  9065                           
  9066                           ; Function: rele_tick, coverage: 18,11,10,3,0
  9067  0F68  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9068  0F6C  0000002D           	ddw	__ccovbit18_75/(0+8)	; CC_ADDR
  9069  0F70  00000001           	ddw	1	; NUM_POINTS
  9070  0F74  00000003           	ddw	__ccovbit18_75& (0+7)	; OFFSET
  9071  0F78  00000000           	ddw	0	; Reserved
  9072  0F7C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9073  0F80  00000005           	ddw	5	; NUM_RANGES
  9074  0F84  000001D6           	ddw	__ccov176_start_blk18	; block 18 START_ADDR
  9075  0F88  000001DB           	ddw	__ccov176_end_blk18	; block 18 END_ADDR
  9076  0F8C  000001C0           	ddw	__ccov171_start_blk11	; block 11 START_ADDR
  9077  0F90  000001C6           	ddw	__ccov171_end_blk11	; block 11 END_ADDR
  9078  0F94  000001BA           	ddw	__ccov170_start_blk10	; block 10 START_ADDR
  9079  0F98  000001C0           	ddw	__ccov170_end_blk10	; block 10 END_ADDR
  9080  0F9C  0000019F           	ddw	__ccov165_start_blk3	; block 3 START_ADDR
  9081  0FA0  000001A3           	ddw	__ccov165_end_blk3	; block 3 END_ADDR
  9082  0FA4  00000194           	ddw	_rele_tick	; block 0 START_ADDR
  9083  0FA8  00000198           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  9084                           
  9085                           ; Function: rele_tick, coverage: 20,11,10,3,0
  9086  0FAC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9087  0FB0  0000002D           	ddw	__ccovbit20_76/(0+8)	; CC_ADDR
  9088  0FB4  00000001           	ddw	1	; NUM_POINTS
  9089  0FB8  00000002           	ddw	__ccovbit20_76& (0+7)	; OFFSET
  9090  0FBC  00000000           	ddw	0	; Reserved
  9091  0FC0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9092  0FC4  00000005           	ddw	5	; NUM_RANGES
  9093  0FC8  000001DB           	ddw	__ccov177_start_blk20	; block 20 START_ADDR
  9094  0FCC  000001E2           	ddw	__ccov177_end_blk20	; block 20 END_ADDR
  9095  0FD0  000001C0           	ddw	__ccov171_start_blk11	; block 11 START_ADDR
  9096  0FD4  000001C6           	ddw	__ccov171_end_blk11	; block 11 END_ADDR
  9097  0FD8  000001BA           	ddw	__ccov170_start_blk10	; block 10 START_ADDR
  9098  0FDC  000001C0           	ddw	__ccov170_end_blk10	; block 10 END_ADDR
  9099  0FE0  0000019F           	ddw	__ccov165_start_blk3	; block 3 START_ADDR
  9100  0FE4  000001A3           	ddw	__ccov165_end_blk3	; block 3 END_ADDR
  9101  0FE8  00000194           	ddw	_rele_tick	; block 0 START_ADDR
  9102  0FEC  00000198           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  9103                           
  9104                           ; Function: rele_tick, coverage: 22,21,20,11,10,3,0
  9105  0FF0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9106  0FF4  0000002D           	ddw	__ccovbit22_77/(0+8)	; CC_ADDR
  9107  0FF8  00000001           	ddw	1	; NUM_POINTS
  9108  0FFC  00000001           	ddw	__ccovbit22_77& (0+7)	; OFFSET
  9109  1000  00000000           	ddw	0	; Reserved
  9110  1004  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9111  1008  00000007           	ddw	7	; NUM_RANGES
  9112  100C  000001E6           	ddw	__ccov179_start_blk22	; block 22 START_ADDR
  9113  1010  000001ED           	ddw	__ccov179_end_blk22	; block 22 END_ADDR
  9114  1014  000001E2           	ddw	__ccov178_start_blk21	; block 21 START_ADDR
  9115  1018  000001E6           	ddw	__ccov178_end_blk21	; block 21 END_ADDR
  9116  101C  000001DB           	ddw	__ccov177_start_blk20	; block 20 START_ADDR
  9117  1020  000001E2           	ddw	__ccov177_end_blk20	; block 20 END_ADDR
  9118  1024  000001C0           	ddw	__ccov171_start_blk11	; block 11 START_ADDR
  9119  1028  000001C6           	ddw	__ccov171_end_blk11	; block 11 END_ADDR
  9120  102C  000001BA           	ddw	__ccov170_start_blk10	; block 10 START_ADDR
  9121  1030  000001C0           	ddw	__ccov170_end_blk10	; block 10 END_ADDR
  9122  1034  0000019F           	ddw	__ccov165_start_blk3	; block 3 START_ADDR
  9123  1038  000001A3           	ddw	__ccov165_end_blk3	; block 3 END_ADDR
  9124  103C  00000194           	ddw	_rele_tick	; block 0 START_ADDR
  9125  1040  00000198           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  9126                           
  9127                           ; Function: rele_tick, coverage: 23,22,21,20,11,10,3,0
  9128  1044  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9129  1048  0000002D           	ddw	__ccovbit23_78/(0+8)	; CC_ADDR
  9130  104C  00000001           	ddw	1	; NUM_POINTS
  9131  1050  00000000           	ddw	__ccovbit23_78& (0+7)	; OFFSET
  9132  1054  00000000           	ddw	0	; Reserved
  9133  1058  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9134  105C  00000008           	ddw	8	; NUM_RANGES
  9135  1060  000001ED           	ddw	__ccov180_start_blk23	; block 23 START_ADDR
  9136  1064  000001F1           	ddw	__ccov180_end_blk23	; block 23 END_ADDR
  9137  1068  000001E6           	ddw	__ccov179_start_blk22	; block 22 START_ADDR
  9138  106C  000001ED           	ddw	__ccov179_end_blk22	; block 22 END_ADDR
  9139  1070  000001E2           	ddw	__ccov178_start_blk21	; block 21 START_ADDR
  9140  1074  000001E6           	ddw	__ccov178_end_blk21	; block 21 END_ADDR
  9141  1078  000001DB           	ddw	__ccov177_start_blk20	; block 20 START_ADDR
  9142  107C  000001E2           	ddw	__ccov177_end_blk20	; block 20 END_ADDR
  9143  1080  000001C0           	ddw	__ccov171_start_blk11	; block 11 START_ADDR
  9144  1084  000001C6           	ddw	__ccov171_end_blk11	; block 11 END_ADDR
  9145  1088  000001BA           	ddw	__ccov170_start_blk10	; block 10 START_ADDR
  9146  108C  000001C0           	ddw	__ccov170_end_blk10	; block 10 END_ADDR
  9147  1090  0000019F           	ddw	__ccov165_start_blk3	; block 3 START_ADDR
  9148  1094  000001A3           	ddw	__ccov165_end_blk3	; block 3 END_ADDR
  9149  1098  00000194           	ddw	_rele_tick	; block 0 START_ADDR
  9150  109C  00000198           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  9151                           
  9152                           ; Function: rele_tick, coverage: 27,0
  9153  10A0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9154  10A4  0000002C           	ddw	__ccovbit27_79/(0+8)	; CC_ADDR
  9155  10A8  00000001           	ddw	1	; NUM_POINTS
  9156  10AC  00000007           	ddw	__ccovbit27_79& (0+7)	; OFFSET
  9157  10B0  00000000           	ddw	0	; Reserved
  9158  10B4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9159  10B8  00000002           	ddw	2	; NUM_RANGES
  9160  10BC  000001F1           	ddw	__ccov181_start_blk27	; block 27 START_ADDR
  9161  10C0  000001F3           	ddw	__end_of_rele_tick	; block 27 END_ADDR
  9162  10C4  00000194           	ddw	_rele_tick	; block 0 START_ADDR
  9163  10C8  00000198           	ddw	__ccov163_end_blk0	; block 0 END_ADDR
  9164                           
  9165                           ; Function: start_alarm, coverage: 2,1,0
  9166  10CC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9167  10D0  0000002C           	ddw	__ccovbit2_80/(0+8)	; CC_ADDR
  9168  10D4  00000001           	ddw	1	; NUM_POINTS
  9169  10D8  00000006           	ddw	__ccovbit2_80& (0+7)	; OFFSET
  9170  10DC  00000000           	ddw	0	; Reserved
  9171  10E0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9172  10E4  00000003           	ddw	3	; NUM_RANGES
  9173  10E8  0000068B           	ddw	__ccov184_start_blk2	; block 2 START_ADDR
  9174  10EC  0000068D           	ddw	__end_of_start_alarm	; block 2 END_ADDR
  9175  10F0  00000689           	ddw	__ccov183_start_blk1	; block 1 START_ADDR
  9176  10F4  0000068B           	ddw	__ccov183_end_blk1	; block 1 END_ADDR
  9177  10F8  00000685           	ddw	_start_alarm	; block 0 START_ADDR
  9178  10FC  00000689           	ddw	__ccov182_end_blk0	; block 0 END_ADDR
  9179                           
  9180                           ; Function: clear_alarm, coverage: 1,0
  9181  1100  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9182  1104  0000002C           	ddw	__ccovbit1_81/(0+8)	; CC_ADDR
  9183  1108  00000001           	ddw	1	; NUM_POINTS
  9184  110C  00000005           	ddw	__ccovbit1_81& (0+7)	; OFFSET
  9185  1110  00000000           	ddw	0	; Reserved
  9186  1114  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9187  1118  00000002           	ddw	2	; NUM_RANGES
  9188  111C  000006B4           	ddw	__ccov186_start_blk1	; block 1 START_ADDR
  9189  1120  000006B7           	ddw	__end_of_clear_alarm	; block 1 END_ADDR
  9190  1124  000006B2           	ddw	_clear_alarm	; block 0 START_ADDR
  9191  1128  000006B4           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9192                           
  9193                           ; Function: fun_work, coverage: 1,0
  9194  112C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9195  1130  0000002C           	ddw	__ccovbit1_82/(0+8)	; CC_ADDR
  9196  1134  00000001           	ddw	1	; NUM_POINTS
  9197  1138  00000004           	ddw	__ccovbit1_82& (0+7)	; OFFSET
  9198  113C  00000000           	ddw	0	; Reserved
  9199  1140  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9200  1144  00000002           	ddw	2	; NUM_RANGES
  9201  1148  0000023F           	ddw	__ccov188_start_blk1	; block 1 START_ADDR
  9202  114C  00000245           	ddw	__ccov188_end_blk1	; block 1 END_ADDR
  9203  1150  0000023B           	ddw	_fun_work	; block 0 START_ADDR
  9204  1154  0000023F           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9205                           
  9206                           ; Function: fun_work, coverage: 2,1,0
  9207  1158  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9208  115C  0000002C           	ddw	__ccovbit2_83/(0+8)	; CC_ADDR
  9209  1160  00000001           	ddw	1	; NUM_POINTS
  9210  1164  00000003           	ddw	__ccovbit2_83& (0+7)	; OFFSET
  9211  1168  00000000           	ddw	0	; Reserved
  9212  116C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9213  1170  00000003           	ddw	3	; NUM_RANGES
  9214  1174  00000245           	ddw	__ccov189_start_blk2	; block 2 START_ADDR
  9215  1178  0000024A           	ddw	__ccov189_end_blk2	; block 2 END_ADDR
  9216  117C  0000023F           	ddw	__ccov188_start_blk1	; block 1 START_ADDR
  9217  1180  00000245           	ddw	__ccov188_end_blk1	; block 1 END_ADDR
  9218  1184  0000023B           	ddw	_fun_work	; block 0 START_ADDR
  9219  1188  0000023F           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9220                           
  9221                           ; Function: fun_work, coverage: 3,2,1,0
  9222  118C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9223  1190  0000002C           	ddw	__ccovbit3_84/(0+8)	; CC_ADDR
  9224  1194  00000001           	ddw	1	; NUM_POINTS
  9225  1198  00000002           	ddw	__ccovbit3_84& (0+7)	; OFFSET
  9226  119C  00000000           	ddw	0	; Reserved
  9227  11A0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9228  11A4  00000004           	ddw	4	; NUM_RANGES
  9229  11A8  0000024A           	ddw	__ccov190_start_blk3	; block 3 START_ADDR
  9230  11AC  0000024F           	ddw	__ccov190_end_blk3	; block 3 END_ADDR
  9231  11B0  00000245           	ddw	__ccov189_start_blk2	; block 2 START_ADDR
  9232  11B4  0000024A           	ddw	__ccov189_end_blk2	; block 2 END_ADDR
  9233  11B8  0000023F           	ddw	__ccov188_start_blk1	; block 1 START_ADDR
  9234  11BC  00000245           	ddw	__ccov188_end_blk1	; block 1 END_ADDR
  9235  11C0  0000023B           	ddw	_fun_work	; block 0 START_ADDR
  9236  11C4  0000023F           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9237                           
  9238                           ; Function: fun_work, coverage: 4,3,2,1,0
  9239  11C8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9240  11CC  0000002C           	ddw	__ccovbit4_85/(0+8)	; CC_ADDR
  9241  11D0  00000001           	ddw	1	; NUM_POINTS
  9242  11D4  00000001           	ddw	__ccovbit4_85& (0+7)	; OFFSET
  9243  11D8  00000000           	ddw	0	; Reserved
  9244  11DC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9245  11E0  00000005           	ddw	5	; NUM_RANGES
  9246  11E4  0000024F           	ddw	__ccov191_start_blk4	; block 4 START_ADDR
  9247  11E8  00000254           	ddw	__ccov191_end_blk4	; block 4 END_ADDR
  9248  11EC  0000024A           	ddw	__ccov190_start_blk3	; block 3 START_ADDR
  9249  11F0  0000024F           	ddw	__ccov190_end_blk3	; block 3 END_ADDR
  9250  11F4  00000245           	ddw	__ccov189_start_blk2	; block 2 START_ADDR
  9251  11F8  0000024A           	ddw	__ccov189_end_blk2	; block 2 END_ADDR
  9252  11FC  0000023F           	ddw	__ccov188_start_blk1	; block 1 START_ADDR
  9253  1200  00000245           	ddw	__ccov188_end_blk1	; block 1 END_ADDR
  9254  1204  0000023B           	ddw	_fun_work	; block 0 START_ADDR
  9255  1208  0000023F           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9256                           
  9257                           ; Function: fun_work, coverage: 5,4,3,2,1,0
  9258  120C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9259  1210  0000002C           	ddw	__ccovbit5_86/(0+8)	; CC_ADDR
  9260  1214  00000001           	ddw	1	; NUM_POINTS
  9261  1218  00000000           	ddw	__ccovbit5_86& (0+7)	; OFFSET
  9262  121C  00000000           	ddw	0	; Reserved
  9263  1220  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9264  1224  00000006           	ddw	6	; NUM_RANGES
  9265  1228  00000254           	ddw	__ccov192_start_blk5	; block 5 START_ADDR
  9266  122C  00000259           	ddw	__ccov192_end_blk5	; block 5 END_ADDR
  9267  1230  0000024F           	ddw	__ccov191_start_blk4	; block 4 START_ADDR
  9268  1234  00000254           	ddw	__ccov191_end_blk4	; block 4 END_ADDR
  9269  1238  0000024A           	ddw	__ccov190_start_blk3	; block 3 START_ADDR
  9270  123C  0000024F           	ddw	__ccov190_end_blk3	; block 3 END_ADDR
  9271  1240  00000245           	ddw	__ccov189_start_blk2	; block 2 START_ADDR
  9272  1244  0000024A           	ddw	__ccov189_end_blk2	; block 2 END_ADDR
  9273  1248  0000023F           	ddw	__ccov188_start_blk1	; block 1 START_ADDR
  9274  124C  00000245           	ddw	__ccov188_end_blk1	; block 1 END_ADDR
  9275  1250  0000023B           	ddw	_fun_work	; block 0 START_ADDR
  9276  1254  0000023F           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9277                           
  9278                           ; Function: fun_work, coverage: 7,6,5,4,3,2,1,0
  9279  1258  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9280  125C  0000002B           	ddw	__ccovbit7_87/(0+8)	; CC_ADDR
  9281  1260  00000001           	ddw	1	; NUM_POINTS
  9282  1264  00000007           	ddw	__ccovbit7_87& (0+7)	; OFFSET
  9283  1268  00000000           	ddw	0	; Reserved
  9284  126C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9285  1270  00000008           	ddw	8	; NUM_RANGES
  9286  1274  0000025B           	ddw	__ccov194_start_blk7	; block 7 START_ADDR
  9287  1278  0000025F           	ddw	__ccov194_end_blk7	; block 7 END_ADDR
  9288  127C  00000259           	ddw	__ccov193_start_blk6	; block 6 START_ADDR
  9289  1280  0000025B           	ddw	__ccov193_end_blk6	; block 6 END_ADDR
  9290  1284  00000254           	ddw	__ccov192_start_blk5	; block 5 START_ADDR
  9291  1288  00000259           	ddw	__ccov192_end_blk5	; block 5 END_ADDR
  9292  128C  0000024F           	ddw	__ccov191_start_blk4	; block 4 START_ADDR
  9293  1290  00000254           	ddw	__ccov191_end_blk4	; block 4 END_ADDR
  9294  1294  0000024A           	ddw	__ccov190_start_blk3	; block 3 START_ADDR
  9295  1298  0000024F           	ddw	__ccov190_end_blk3	; block 3 END_ADDR
  9296  129C  00000245           	ddw	__ccov189_start_blk2	; block 2 START_ADDR
  9297  12A0  0000024A           	ddw	__ccov189_end_blk2	; block 2 END_ADDR
  9298  12A4  0000023F           	ddw	__ccov188_start_blk1	; block 1 START_ADDR
  9299  12A8  00000245           	ddw	__ccov188_end_blk1	; block 1 END_ADDR
  9300  12AC  0000023B           	ddw	_fun_work	; block 0 START_ADDR
  9301  12B0  0000023F           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9302                           
  9303                           ; Function: fun_work, coverage: 10,9,0
  9304  12B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9305  12B8  0000002B           	ddw	__ccovbit10_88/(0+8)	; CC_ADDR
  9306  12BC  00000001           	ddw	1	; NUM_POINTS
  9307  12C0  00000006           	ddw	__ccovbit10_88& (0+7)	; OFFSET
  9308  12C4  00000000           	ddw	0	; Reserved
  9309  12C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9310  12CC  00000003           	ddw	3	; NUM_RANGES
  9311  12D0  00000263           	ddw	__ccov196_start_blk10	; block 10 START_ADDR
  9312  12D4  00000269           	ddw	__ccov196_end_blk10	; block 10 END_ADDR
  9313  12D8  0000025F           	ddw	__ccov195_start_blk9	; block 9 START_ADDR
  9314  12DC  00000263           	ddw	__ccov195_end_blk9	; block 9 END_ADDR
  9315  12E0  0000023B           	ddw	_fun_work	; block 0 START_ADDR
  9316  12E4  0000023F           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9317                           
  9318                           ; Function: fun_work, coverage: 11,10,9,0
  9319  12E8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9320  12EC  0000002B           	ddw	__ccovbit11_89/(0+8)	; CC_ADDR
  9321  12F0  00000001           	ddw	1	; NUM_POINTS
  9322  12F4  00000005           	ddw	__ccovbit11_89& (0+7)	; OFFSET
  9323  12F8  00000000           	ddw	0	; Reserved
  9324  12FC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9325  1300  00000004           	ddw	4	; NUM_RANGES
  9326  1304  00000269           	ddw	__ccov197_start_blk11	; block 11 START_ADDR
  9327  1308  0000026E           	ddw	__ccov197_end_blk11	; block 11 END_ADDR
  9328  130C  00000263           	ddw	__ccov196_start_blk10	; block 10 START_ADDR
  9329  1310  00000269           	ddw	__ccov196_end_blk10	; block 10 END_ADDR
  9330  1314  0000025F           	ddw	__ccov195_start_blk9	; block 9 START_ADDR
  9331  1318  00000263           	ddw	__ccov195_end_blk9	; block 9 END_ADDR
  9332  131C  0000023B           	ddw	_fun_work	; block 0 START_ADDR
  9333  1320  0000023F           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9334                           
  9335                           ; Function: fun_work, coverage: 12,11,10,9,0
  9336  1324  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9337  1328  0000002B           	ddw	__ccovbit12_90/(0+8)	; CC_ADDR
  9338  132C  00000001           	ddw	1	; NUM_POINTS
  9339  1330  00000004           	ddw	__ccovbit12_90& (0+7)	; OFFSET
  9340  1334  00000000           	ddw	0	; Reserved
  9341  1338  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9342  133C  00000005           	ddw	5	; NUM_RANGES
  9343  1340  0000026E           	ddw	__ccov198_start_blk12	; block 12 START_ADDR
  9344  1344  00000273           	ddw	__ccov198_end_blk12	; block 12 END_ADDR
  9345  1348  00000269           	ddw	__ccov197_start_blk11	; block 11 START_ADDR
  9346  134C  0000026E           	ddw	__ccov197_end_blk11	; block 11 END_ADDR
  9347  1350  00000263           	ddw	__ccov196_start_blk10	; block 10 START_ADDR
  9348  1354  00000269           	ddw	__ccov196_end_blk10	; block 10 END_ADDR
  9349  1358  0000025F           	ddw	__ccov195_start_blk9	; block 9 START_ADDR
  9350  135C  00000263           	ddw	__ccov195_end_blk9	; block 9 END_ADDR
  9351  1360  0000023B           	ddw	_fun_work	; block 0 START_ADDR
  9352  1364  0000023F           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9353                           
  9354                           ; Function: fun_work, coverage: 13,12,11,10,9,0
  9355  1368  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9356  136C  0000002B           	ddw	__ccovbit13_91/(0+8)	; CC_ADDR
  9357  1370  00000001           	ddw	1	; NUM_POINTS
  9358  1374  00000003           	ddw	__ccovbit13_91& (0+7)	; OFFSET
  9359  1378  00000000           	ddw	0	; Reserved
  9360  137C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9361  1380  00000006           	ddw	6	; NUM_RANGES
  9362  1384  00000273           	ddw	__ccov199_start_blk13	; block 13 START_ADDR
  9363  1388  00000278           	ddw	__ccov199_end_blk13	; block 13 END_ADDR
  9364  138C  0000026E           	ddw	__ccov198_start_blk12	; block 12 START_ADDR
  9365  1390  00000273           	ddw	__ccov198_end_blk12	; block 12 END_ADDR
  9366  1394  00000269           	ddw	__ccov197_start_blk11	; block 11 START_ADDR
  9367  1398  0000026E           	ddw	__ccov197_end_blk11	; block 11 END_ADDR
  9368  139C  00000263           	ddw	__ccov196_start_blk10	; block 10 START_ADDR
  9369  13A0  00000269           	ddw	__ccov196_end_blk10	; block 10 END_ADDR
  9370  13A4  0000025F           	ddw	__ccov195_start_blk9	; block 9 START_ADDR
  9371  13A8  00000263           	ddw	__ccov195_end_blk9	; block 9 END_ADDR
  9372  13AC  0000023B           	ddw	_fun_work	; block 0 START_ADDR
  9373  13B0  0000023F           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9374                           
  9375                           ; Function: fun_work, coverage: 15,14,13,12,11,10,9,0
  9376  13B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9377  13B8  0000002B           	ddw	__ccovbit15_92/(0+8)	; CC_ADDR
  9378  13BC  00000001           	ddw	1	; NUM_POINTS
  9379  13C0  00000002           	ddw	__ccovbit15_92& (0+7)	; OFFSET
  9380  13C4  00000000           	ddw	0	; Reserved
  9381  13C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9382  13CC  00000008           	ddw	8	; NUM_RANGES
  9383  13D0  0000027C           	ddw	__ccov201_start_blk15	; block 15 START_ADDR
  9384  13D4  00000280           	ddw	__ccov201_end_blk15	; block 15 END_ADDR
  9385  13D8  00000278           	ddw	__ccov200_start_blk14	; block 14 START_ADDR
  9386  13DC  0000027C           	ddw	__ccov200_end_blk14	; block 14 END_ADDR
  9387  13E0  00000273           	ddw	__ccov199_start_blk13	; block 13 START_ADDR
  9388  13E4  00000278           	ddw	__ccov199_end_blk13	; block 13 END_ADDR
  9389  13E8  0000026E           	ddw	__ccov198_start_blk12	; block 12 START_ADDR
  9390  13EC  00000273           	ddw	__ccov198_end_blk12	; block 12 END_ADDR
  9391  13F0  00000269           	ddw	__ccov197_start_blk11	; block 11 START_ADDR
  9392  13F4  0000026E           	ddw	__ccov197_end_blk11	; block 11 END_ADDR
  9393  13F8  00000263           	ddw	__ccov196_start_blk10	; block 10 START_ADDR
  9394  13FC  00000269           	ddw	__ccov196_end_blk10	; block 10 END_ADDR
  9395  1400  0000025F           	ddw	__ccov195_start_blk9	; block 9 START_ADDR
  9396  1404  00000263           	ddw	__ccov195_end_blk9	; block 9 END_ADDR
  9397  1408  0000023B           	ddw	_fun_work	; block 0 START_ADDR
  9398  140C  0000023F           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9399                           
  9400                           ; Function: fun_work, coverage: 17,9,0
  9401  1410  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9402  1414  0000002B           	ddw	__ccovbit17_93/(0+8)	; CC_ADDR
  9403  1418  00000001           	ddw	1	; NUM_POINTS
  9404  141C  00000001           	ddw	__ccovbit17_93& (0+7)	; OFFSET
  9405  1420  00000000           	ddw	0	; Reserved
  9406  1424  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9407  1428  00000003           	ddw	3	; NUM_RANGES
  9408  142C  00000280           	ddw	__ccov202_start_blk17	; block 17 START_ADDR
  9409  1430  00000283           	ddw	__end_of_fun_work	; block 17 END_ADDR
  9410  1434  0000025F           	ddw	__ccov195_start_blk9	; block 9 START_ADDR
  9411  1438  00000263           	ddw	__ccov195_end_blk9	; block 9 END_ADDR
  9412  143C  0000023B           	ddw	_fun_work	; block 0 START_ADDR
  9413  1440  0000023F           	ddw	__ccov187_end_blk0	; block 0 END_ADDR
  9414                           
  9415                           ; Function: switch_wm, coverage: 1,0
  9416  1444  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9417  1448  0000002B           	ddw	__ccovbit1_94/(0+8)	; CC_ADDR
  9418  144C  00000001           	ddw	1	; NUM_POINTS
  9419  1450  00000000           	ddw	__ccovbit1_94& (0+7)	; OFFSET
  9420  1454  00000000           	ddw	0	; Reserved
  9421  1458  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9422  145C  00000002           	ddw	2	; NUM_RANGES
  9423  1460  000003C2           	ddw	__ccov204_start_blk1	; block 1 START_ADDR
  9424  1464  000003C8           	ddw	__ccov204_end_blk1	; block 1 END_ADDR
  9425  1468  000003BE           	ddw	_switch_wm	; block 0 START_ADDR
  9426  146C  000003C2           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9427                           
  9428                           ; Function: switch_wm, coverage: 4,3,2,1,0
  9429  1470  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9430  1474  0000002A           	ddw	__ccovbit4_95/(0+8)	; CC_ADDR
  9431  1478  00000001           	ddw	1	; NUM_POINTS
  9432  147C  00000007           	ddw	__ccovbit4_95& (0+7)	; OFFSET
  9433  1480  00000000           	ddw	0	; Reserved
  9434  1484  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9435  1488  00000005           	ddw	5	; NUM_RANGES
  9436  148C  000003CD           	ddw	__ccov207_start_blk4	; block 4 START_ADDR
  9437  1490  000003D4           	ddw	__ccov207_end_blk4	; block 4 END_ADDR
  9438  1494  000003CA           	ddw	__ccov206_start_blk3	; block 3 START_ADDR
  9439  1498  000003CD           	ddw	__ccov206_end_blk3	; block 3 END_ADDR
  9440  149C  000003C8           	ddw	__ccov205_start_blk2	; block 2 START_ADDR
  9441  14A0  000003CA           	ddw	__ccov205_end_blk2	; block 2 END_ADDR
  9442  14A4  000003C2           	ddw	__ccov204_start_blk1	; block 1 START_ADDR
  9443  14A8  000003C8           	ddw	__ccov204_end_blk1	; block 1 END_ADDR
  9444  14AC  000003BE           	ddw	_switch_wm	; block 0 START_ADDR
  9445  14B0  000003C2           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9446                           
  9447                           ; Function: switch_wm, coverage: 6,0
  9448  14B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9449  14B8  0000002A           	ddw	__ccovbit6_96/(0+8)	; CC_ADDR
  9450  14BC  00000001           	ddw	1	; NUM_POINTS
  9451  14C0  00000006           	ddw	__ccovbit6_96& (0+7)	; OFFSET
  9452  14C4  00000000           	ddw	0	; Reserved
  9453  14C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9454  14CC  00000002           	ddw	2	; NUM_RANGES
  9455  14D0  000003D4           	ddw	__ccov208_start_blk6	; block 6 START_ADDR
  9456  14D4  000003DA           	ddw	__ccov208_end_blk6	; block 6 END_ADDR
  9457  14D8  000003BE           	ddw	_switch_wm	; block 0 START_ADDR
  9458  14DC  000003C2           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9459                           
  9460                           ; Function: switch_wm, coverage: 7,6,0
  9461  14E0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9462  14E4  0000002A           	ddw	__ccovbit7_97/(0+8)	; CC_ADDR
  9463  14E8  00000001           	ddw	1	; NUM_POINTS
  9464  14EC  00000005           	ddw	__ccovbit7_97& (0+7)	; OFFSET
  9465  14F0  00000000           	ddw	0	; Reserved
  9466  14F4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9467  14F8  00000003           	ddw	3	; NUM_RANGES
  9468  14FC  000003DA           	ddw	__ccov209_start_blk7	; block 7 START_ADDR
  9469  1500  000003DF           	ddw	__ccov209_end_blk7	; block 7 END_ADDR
  9470  1504  000003D4           	ddw	__ccov208_start_blk6	; block 6 START_ADDR
  9471  1508  000003DA           	ddw	__ccov208_end_blk6	; block 6 END_ADDR
  9472  150C  000003BE           	ddw	_switch_wm	; block 0 START_ADDR
  9473  1510  000003C2           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9474                           
  9475                           ; Function: switch_wm, coverage: 10,9,8,7,6,0
  9476  1514  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9477  1518  0000002A           	ddw	__ccovbit10_98/(0+8)	; CC_ADDR
  9478  151C  00000001           	ddw	1	; NUM_POINTS
  9479  1520  00000004           	ddw	__ccovbit10_98& (0+7)	; OFFSET
  9480  1524  00000000           	ddw	0	; Reserved
  9481  1528  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9482  152C  00000006           	ddw	6	; NUM_RANGES
  9483  1530  000003E4           	ddw	__ccov212_start_blk10	; block 10 START_ADDR
  9484  1534  000003E8           	ddw	__ccov212_end_blk10	; block 10 END_ADDR
  9485  1538  000003E1           	ddw	__ccov211_start_blk9	; block 9 START_ADDR
  9486  153C  000003E4           	ddw	__ccov211_end_blk9	; block 9 END_ADDR
  9487  1540  000003DF           	ddw	__ccov210_start_blk8	; block 8 START_ADDR
  9488  1544  000003E1           	ddw	__ccov210_end_blk8	; block 8 END_ADDR
  9489  1548  000003DA           	ddw	__ccov209_start_blk7	; block 7 START_ADDR
  9490  154C  000003DF           	ddw	__ccov209_end_blk7	; block 7 END_ADDR
  9491  1550  000003D4           	ddw	__ccov208_start_blk6	; block 6 START_ADDR
  9492  1554  000003DA           	ddw	__ccov208_end_blk6	; block 6 END_ADDR
  9493  1558  000003BE           	ddw	_switch_wm	; block 0 START_ADDR
  9494  155C  000003C2           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9495                           
  9496                           ; Function: switch_wm, coverage: 14,0
  9497  1560  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9498  1564  0000002A           	ddw	__ccovbit14_99/(0+8)	; CC_ADDR
  9499  1568  00000001           	ddw	1	; NUM_POINTS
  9500  156C  00000003           	ddw	__ccovbit14_99& (0+7)	; OFFSET
  9501  1570  00000000           	ddw	0	; Reserved
  9502  1574  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9503  1578  00000002           	ddw	2	; NUM_RANGES
  9504  157C  000003E8           	ddw	__ccov213_start_blk14	; block 14 START_ADDR
  9505  1580  000003EA           	ddw	__end_of_switch_wm	; block 14 END_ADDR
  9506  1584  000003BE           	ddw	_switch_wm	; block 0 START_ADDR
  9507  1588  000003C2           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9508                           
  9509                           ; Function: autorotation_work, coverage: 1,0
  9510  158C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9511  1590  0000002A           	ddw	__ccovbit1_100/(0+8)	; CC_ADDR
  9512  1594  00000001           	ddw	1	; NUM_POINTS
  9513  1598  00000002           	ddw	__ccovbit1_100& (0+7)	; OFFSET
  9514  159C  00000000           	ddw	0	; Reserved
  9515  15A0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9516  15A4  00000002           	ddw	2	; NUM_RANGES
  9517  15A8  000000D7           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
  9518  15AC  000000DC           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
  9519  15B0  000000C8           	ddw	_autorotation_work	; block 0 START_ADDR
  9520  15B4  000000D7           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9521                           
  9522                           ; Function: autorotation_work, coverage: 2,1,0
  9523  15B8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9524  15BC  0000002A           	ddw	__ccovbit2_101/(0+8)	; CC_ADDR
  9525  15C0  00000001           	ddw	1	; NUM_POINTS
  9526  15C4  00000001           	ddw	__ccovbit2_101& (0+7)	; OFFSET
  9527  15C8  00000000           	ddw	0	; Reserved
  9528  15CC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9529  15D0  00000003           	ddw	3	; NUM_RANGES
  9530  15D4  000000DC           	ddw	__ccov216_start_blk2	; block 2 START_ADDR
  9531  15D8  000000E1           	ddw	__ccov216_end_blk2	; block 2 END_ADDR
  9532  15DC  000000D7           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
  9533  15E0  000000DC           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
  9534  15E4  000000C8           	ddw	_autorotation_work	; block 0 START_ADDR
  9535  15E8  000000D7           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9536                           
  9537                           ; Function: autorotation_work, coverage: 3,2,1,0
  9538  15EC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9539  15F0  0000002A           	ddw	__ccovbit3_102/(0+8)	; CC_ADDR
  9540  15F4  00000001           	ddw	1	; NUM_POINTS
  9541  15F8  00000000           	ddw	__ccovbit3_102& (0+7)	; OFFSET
  9542  15FC  00000000           	ddw	0	; Reserved
  9543  1600  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9544  1604  00000004           	ddw	4	; NUM_RANGES
  9545  1608  000000E1           	ddw	__ccov217_start_blk3	; block 3 START_ADDR
  9546  160C  000000E6           	ddw	__ccov217_end_blk3	; block 3 END_ADDR
  9547  1610  000000DC           	ddw	__ccov216_start_blk2	; block 2 START_ADDR
  9548  1614  000000E1           	ddw	__ccov216_end_blk2	; block 2 END_ADDR
  9549  1618  000000D7           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
  9550  161C  000000DC           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
  9551  1620  000000C8           	ddw	_autorotation_work	; block 0 START_ADDR
  9552  1624  000000D7           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9553                           
  9554                           ; Function: autorotation_work, coverage: 4,3,2,1,0
  9555  1628  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9556  162C  00000029           	ddw	__ccovbit4_103/(0+8)	; CC_ADDR
  9557  1630  00000001           	ddw	1	; NUM_POINTS
  9558  1634  00000007           	ddw	__ccovbit4_103& (0+7)	; OFFSET
  9559  1638  00000000           	ddw	0	; Reserved
  9560  163C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9561  1640  00000005           	ddw	5	; NUM_RANGES
  9562  1644  000000E6           	ddw	__ccov218_start_blk4	; block 4 START_ADDR
  9563  1648  000000EB           	ddw	__ccov218_end_blk4	; block 4 END_ADDR
  9564  164C  000000E1           	ddw	__ccov217_start_blk3	; block 3 START_ADDR
  9565  1650  000000E6           	ddw	__ccov217_end_blk3	; block 3 END_ADDR
  9566  1654  000000DC           	ddw	__ccov216_start_blk2	; block 2 START_ADDR
  9567  1658  000000E1           	ddw	__ccov216_end_blk2	; block 2 END_ADDR
  9568  165C  000000D7           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
  9569  1660  000000DC           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
  9570  1664  000000C8           	ddw	_autorotation_work	; block 0 START_ADDR
  9571  1668  000000D7           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9572                           
  9573                           ; Function: autorotation_work, coverage: 5,4,3,2,1,0
  9574  166C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9575  1670  00000029           	ddw	__ccovbit5_104/(0+8)	; CC_ADDR
  9576  1674  00000001           	ddw	1	; NUM_POINTS
  9577  1678  00000006           	ddw	__ccovbit5_104& (0+7)	; OFFSET
  9578  167C  00000000           	ddw	0	; Reserved
  9579  1680  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9580  1684  00000006           	ddw	6	; NUM_RANGES
  9581  1688  000000EB           	ddw	__ccov219_start_blk5	; block 5 START_ADDR
  9582  168C  000000F0           	ddw	__ccov219_end_blk5	; block 5 END_ADDR
  9583  1690  000000E6           	ddw	__ccov218_start_blk4	; block 4 START_ADDR
  9584  1694  000000EB           	ddw	__ccov218_end_blk4	; block 4 END_ADDR
  9585  1698  000000E1           	ddw	__ccov217_start_blk3	; block 3 START_ADDR
  9586  169C  000000E6           	ddw	__ccov217_end_blk3	; block 3 END_ADDR
  9587  16A0  000000DC           	ddw	__ccov216_start_blk2	; block 2 START_ADDR
  9588  16A4  000000E1           	ddw	__ccov216_end_blk2	; block 2 END_ADDR
  9589  16A8  000000D7           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
  9590  16AC  000000DC           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
  9591  16B0  000000C8           	ddw	_autorotation_work	; block 0 START_ADDR
  9592  16B4  000000D7           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9593                           
  9594                           ; Function: autorotation_work, coverage: 8,7,6,5,4,3,2,1,0
  9595  16B8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9596  16BC  00000029           	ddw	__ccovbit8_105/(0+8)	; CC_ADDR
  9597  16C0  00000001           	ddw	1	; NUM_POINTS
  9598  16C4  00000005           	ddw	__ccovbit8_105& (0+7)	; OFFSET
  9599  16C8  00000000           	ddw	0	; Reserved
  9600  16CC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9601  16D0  00000009           	ddw	9	; NUM_RANGES
  9602  16D4  000000F7           	ddw	__ccov222_start_blk8	; block 8 START_ADDR
  9603  16D8  000000FD           	ddw	__ccov222_end_blk8	; block 8 END_ADDR
  9604  16DC  000000F3           	ddw	__ccov221_start_blk7	; block 7 START_ADDR
  9605  16E0  000000F7           	ddw	__ccov221_end_blk7	; block 7 END_ADDR
  9606  16E4  000000F0           	ddw	__ccov220_start_blk6	; block 6 START_ADDR
  9607  16E8  000000F3           	ddw	__ccov220_end_blk6	; block 6 END_ADDR
  9608  16EC  000000EB           	ddw	__ccov219_start_blk5	; block 5 START_ADDR
  9609  16F0  000000F0           	ddw	__ccov219_end_blk5	; block 5 END_ADDR
  9610  16F4  000000E6           	ddw	__ccov218_start_blk4	; block 4 START_ADDR
  9611  16F8  000000EB           	ddw	__ccov218_end_blk4	; block 4 END_ADDR
  9612  16FC  000000E1           	ddw	__ccov217_start_blk3	; block 3 START_ADDR
  9613  1700  000000E6           	ddw	__ccov217_end_blk3	; block 3 END_ADDR
  9614  1704  000000DC           	ddw	__ccov216_start_blk2	; block 2 START_ADDR
  9615  1708  000000E1           	ddw	__ccov216_end_blk2	; block 2 END_ADDR
  9616  170C  000000D7           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
  9617  1710  000000DC           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
  9618  1714  000000C8           	ddw	_autorotation_work	; block 0 START_ADDR
  9619  1718  000000D7           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9620                           
  9621                           ; Function: autorotation_work, coverage: 11,10,0
  9622  171C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9623  1720  00000029           	ddw	__ccovbit11_106/(0+8)	; CC_ADDR
  9624  1724  00000001           	ddw	1	; NUM_POINTS
  9625  1728  00000004           	ddw	__ccovbit11_106& (0+7)	; OFFSET
  9626  172C  00000000           	ddw	0	; Reserved
  9627  1730  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9628  1734  00000003           	ddw	3	; NUM_RANGES
  9629  1738  0000010B           	ddw	__ccov224_start_blk11	; block 11 START_ADDR
  9630  173C  00000110           	ddw	__ccov224_end_blk11	; block 11 END_ADDR
  9631  1740  000000FD           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9632  1744  0000010B           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9633  1748  000000C8           	ddw	_autorotation_work	; block 0 START_ADDR
  9634  174C  000000D7           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9635                           
  9636                           ; Function: autorotation_work, coverage: 12,11,10,0
  9637  1750  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9638  1754  00000029           	ddw	__ccovbit12_107/(0+8)	; CC_ADDR
  9639  1758  00000001           	ddw	1	; NUM_POINTS
  9640  175C  00000003           	ddw	__ccovbit12_107& (0+7)	; OFFSET
  9641  1760  00000000           	ddw	0	; Reserved
  9642  1764  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9643  1768  00000004           	ddw	4	; NUM_RANGES
  9644  176C  00000110           	ddw	__ccov225_start_blk12	; block 12 START_ADDR
  9645  1770  00000115           	ddw	__ccov225_end_blk12	; block 12 END_ADDR
  9646  1774  0000010B           	ddw	__ccov224_start_blk11	; block 11 START_ADDR
  9647  1778  00000110           	ddw	__ccov224_end_blk11	; block 11 END_ADDR
  9648  177C  000000FD           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9649  1780  0000010B           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9650  1784  000000C8           	ddw	_autorotation_work	; block 0 START_ADDR
  9651  1788  000000D7           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9652                           
  9653                           ; Function: autorotation_work, coverage: 13,12,11,10,0
  9654  178C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9655  1790  00000029           	ddw	__ccovbit13_108/(0+8)	; CC_ADDR
  9656  1794  00000001           	ddw	1	; NUM_POINTS
  9657  1798  00000002           	ddw	__ccovbit13_108& (0+7)	; OFFSET
  9658  179C  00000000           	ddw	0	; Reserved
  9659  17A0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9660  17A4  00000005           	ddw	5	; NUM_RANGES
  9661  17A8  00000115           	ddw	__ccov226_start_blk13	; block 13 START_ADDR
  9662  17AC  0000011A           	ddw	__ccov226_end_blk13	; block 13 END_ADDR
  9663  17B0  00000110           	ddw	__ccov225_start_blk12	; block 12 START_ADDR
  9664  17B4  00000115           	ddw	__ccov225_end_blk12	; block 12 END_ADDR
  9665  17B8  0000010B           	ddw	__ccov224_start_blk11	; block 11 START_ADDR
  9666  17BC  00000110           	ddw	__ccov224_end_blk11	; block 11 END_ADDR
  9667  17C0  000000FD           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9668  17C4  0000010B           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9669  17C8  000000C8           	ddw	_autorotation_work	; block 0 START_ADDR
  9670  17CC  000000D7           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9671                           
  9672                           ; Function: autorotation_work, coverage: 14,13,12,11,10,0
  9673  17D0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9674  17D4  00000029           	ddw	__ccovbit14_109/(0+8)	; CC_ADDR
  9675  17D8  00000001           	ddw	1	; NUM_POINTS
  9676  17DC  00000001           	ddw	__ccovbit14_109& (0+7)	; OFFSET
  9677  17E0  00000000           	ddw	0	; Reserved
  9678  17E4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9679  17E8  00000006           	ddw	6	; NUM_RANGES
  9680  17EC  0000011A           	ddw	__ccov227_start_blk14	; block 14 START_ADDR
  9681  17F0  0000011F           	ddw	__ccov227_end_blk14	; block 14 END_ADDR
  9682  17F4  00000115           	ddw	__ccov226_start_blk13	; block 13 START_ADDR
  9683  17F8  0000011A           	ddw	__ccov226_end_blk13	; block 13 END_ADDR
  9684  17FC  00000110           	ddw	__ccov225_start_blk12	; block 12 START_ADDR
  9685  1800  00000115           	ddw	__ccov225_end_blk12	; block 12 END_ADDR
  9686  1804  0000010B           	ddw	__ccov224_start_blk11	; block 11 START_ADDR
  9687  1808  00000110           	ddw	__ccov224_end_blk11	; block 11 END_ADDR
  9688  180C  000000FD           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9689  1810  0000010B           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9690  1814  000000C8           	ddw	_autorotation_work	; block 0 START_ADDR
  9691  1818  000000D7           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9692                           
  9693                           ; Function: autorotation_work, coverage: 15,14,13,12,11,10,0
  9694  181C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9695  1820  00000029           	ddw	__ccovbit15_110/(0+8)	; CC_ADDR
  9696  1824  00000001           	ddw	1	; NUM_POINTS
  9697  1828  00000000           	ddw	__ccovbit15_110& (0+7)	; OFFSET
  9698  182C  00000000           	ddw	0	; Reserved
  9699  1830  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9700  1834  00000007           	ddw	7	; NUM_RANGES
  9701  1838  0000011F           	ddw	__ccov228_start_blk15	; block 15 START_ADDR
  9702  183C  00000124           	ddw	__ccov228_end_blk15	; block 15 END_ADDR
  9703  1840  0000011A           	ddw	__ccov227_start_blk14	; block 14 START_ADDR
  9704  1844  0000011F           	ddw	__ccov227_end_blk14	; block 14 END_ADDR
  9705  1848  00000115           	ddw	__ccov226_start_blk13	; block 13 START_ADDR
  9706  184C  0000011A           	ddw	__ccov226_end_blk13	; block 13 END_ADDR
  9707  1850  00000110           	ddw	__ccov225_start_blk12	; block 12 START_ADDR
  9708  1854  00000115           	ddw	__ccov225_end_blk12	; block 12 END_ADDR
  9709  1858  0000010B           	ddw	__ccov224_start_blk11	; block 11 START_ADDR
  9710  185C  00000110           	ddw	__ccov224_end_blk11	; block 11 END_ADDR
  9711  1860  000000FD           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9712  1864  0000010B           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9713  1868  000000C8           	ddw	_autorotation_work	; block 0 START_ADDR
  9714  186C  000000D7           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9715                           
  9716                           ; Function: autorotation_work, coverage: 17,16,15,14,13,12,11,10,0
  9717  1870  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9718  1874  00000028           	ddw	__ccovbit17_111/(0+8)	; CC_ADDR
  9719  1878  00000001           	ddw	1	; NUM_POINTS
  9720  187C  00000007           	ddw	__ccovbit17_111& (0+7)	; OFFSET
  9721  1880  00000000           	ddw	0	; Reserved
  9722  1884  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9723  1888  00000009           	ddw	9	; NUM_RANGES
  9724  188C  00000127           	ddw	__ccov230_start_blk17	; block 17 START_ADDR
  9725  1890  0000012F           	ddw	__ccov230_end_blk17	; block 17 END_ADDR
  9726  1894  00000124           	ddw	__ccov229_start_blk16	; block 16 START_ADDR
  9727  1898  00000127           	ddw	__ccov229_end_blk16	; block 16 END_ADDR
  9728  189C  0000011F           	ddw	__ccov228_start_blk15	; block 15 START_ADDR
  9729  18A0  00000124           	ddw	__ccov228_end_blk15	; block 15 END_ADDR
  9730  18A4  0000011A           	ddw	__ccov227_start_blk14	; block 14 START_ADDR
  9731  18A8  0000011F           	ddw	__ccov227_end_blk14	; block 14 END_ADDR
  9732  18AC  00000115           	ddw	__ccov226_start_blk13	; block 13 START_ADDR
  9733  18B0  0000011A           	ddw	__ccov226_end_blk13	; block 13 END_ADDR
  9734  18B4  00000110           	ddw	__ccov225_start_blk12	; block 12 START_ADDR
  9735  18B8  00000115           	ddw	__ccov225_end_blk12	; block 12 END_ADDR
  9736  18BC  0000010B           	ddw	__ccov224_start_blk11	; block 11 START_ADDR
  9737  18C0  00000110           	ddw	__ccov224_end_blk11	; block 11 END_ADDR
  9738  18C4  000000FD           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9739  18C8  0000010B           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9740  18CC  000000C8           	ddw	_autorotation_work	; block 0 START_ADDR
  9741  18D0  000000D7           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9742                           
  9743                           ; Function: autorotation_work, coverage: 19,10,0
  9744  18D4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9745  18D8  00000028           	ddw	__ccovbit19_112/(0+8)	; CC_ADDR
  9746  18DC  00000001           	ddw	1	; NUM_POINTS
  9747  18E0  00000006           	ddw	__ccovbit19_112& (0+7)	; OFFSET
  9748  18E4  00000000           	ddw	0	; Reserved
  9749  18E8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9750  18EC  00000003           	ddw	3	; NUM_RANGES
  9751  18F0  0000012F           	ddw	__ccov231_start_blk19	; block 19 START_ADDR
  9752  18F4  00000131           	ddw	__end_of_autorotation_work	; block 19 END_ADDR
  9753  18F8  000000FD           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9754  18FC  0000010B           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9755  1900  000000C8           	ddw	_autorotation_work	; block 0 START_ADDR
  9756  1904  000000D7           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9757                           
  9758                           ; Function: minute_tick, coverage: 1,0
  9759  1908  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9760  190C  00000028           	ddw	__ccovbit1_113/(0+8)	; CC_ADDR
  9761  1910  00000001           	ddw	1	; NUM_POINTS
  9762  1914  00000005           	ddw	__ccovbit1_113& (0+7)	; OFFSET
  9763  1918  00000000           	ddw	0	; Reserved
  9764  191C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9765  1920  00000002           	ddw	2	; NUM_RANGES
  9766  1924  00000555           	ddw	__ccov233_start_blk1	; block 1 START_ADDR
  9767  1928  00000559           	ddw	__ccov233_end_blk1	; block 1 END_ADDR
  9768  192C  0000054F           	ddw	_minute_tick	; block 0 START_ADDR
  9769  1930  00000555           	ddw	__ccov232_end_blk0	; block 0 END_ADDR
  9770                           
  9771                           ; Function: minute_tick, coverage: 3,0
  9772  1934  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9773  1938  00000028           	ddw	__ccovbit3_114/(0+8)	; CC_ADDR
  9774  193C  00000001           	ddw	1	; NUM_POINTS
  9775  1940  00000004           	ddw	__ccovbit3_114& (0+7)	; OFFSET
  9776  1944  00000000           	ddw	0	; Reserved
  9777  1948  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9778  194C  00000002           	ddw	2	; NUM_RANGES
  9779  1950  00000559           	ddw	__ccov234_start_blk3	; block 3 START_ADDR
  9780  1954  0000055F           	ddw	__ccov234_end_blk3	; block 3 END_ADDR
  9781  1958  0000054F           	ddw	_minute_tick	; block 0 START_ADDR
  9782  195C  00000555           	ddw	__ccov232_end_blk0	; block 0 END_ADDR
  9783                           
  9784                           ; Function: minute_tick, coverage: 5,4,3,0
  9785  1960  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9786  1964  00000028           	ddw	__ccovbit5_115/(0+8)	; CC_ADDR
  9787  1968  00000001           	ddw	1	; NUM_POINTS
  9788  196C  00000003           	ddw	__ccovbit5_115& (0+7)	; OFFSET
  9789  1970  00000000           	ddw	0	; Reserved
  9790  1974  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9791  1978  00000004           	ddw	4	; NUM_RANGES
  9792  197C  00000560           	ddw	__ccov236_start_blk5	; block 5 START_ADDR
  9793  1980  00000565           	ddw	__ccov236_end_blk5	; block 5 END_ADDR
  9794  1984  0000055F           	ddw	__ccov235_start_blk4	; block 4 START_ADDR
  9795  1988  00000560           	ddw	__ccov235_end_blk4	; block 4 END_ADDR
  9796  198C  00000559           	ddw	__ccov234_start_blk3	; block 3 START_ADDR
  9797  1990  0000055F           	ddw	__ccov234_end_blk3	; block 3 END_ADDR
  9798  1994  0000054F           	ddw	_minute_tick	; block 0 START_ADDR
  9799  1998  00000555           	ddw	__ccov232_end_blk0	; block 0 END_ADDR
  9800                           
  9801                           ; Function: minute_tick, coverage: 8,0
  9802  199C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9803  19A0  00000028           	ddw	__ccovbit8_116/(0+8)	; CC_ADDR
  9804  19A4  00000001           	ddw	1	; NUM_POINTS
  9805  19A8  00000002           	ddw	__ccovbit8_116& (0+7)	; OFFSET
  9806  19AC  00000000           	ddw	0	; Reserved
  9807  19B0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9808  19B4  00000002           	ddw	2	; NUM_RANGES
  9809  19B8  00000565           	ddw	__ccov237_start_blk8	; block 8 START_ADDR
  9810  19BC  00000567           	ddw	__end_of_minute_tick	; block 8 END_ADDR
  9811  19C0  0000054F           	ddw	_minute_tick	; block 0 START_ADDR
  9812  19C4  00000555           	ddw	__ccov232_end_blk0	; block 0 END_ADDR
  9813                           
  9814                           ; Function: sec_30_work, coverage: 1,0
  9815  19C8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9816  19CC  00000028           	ddw	__ccovbit1_117/(0+8)	; CC_ADDR
  9817  19D0  00000001           	ddw	1	; NUM_POINTS
  9818  19D4  00000001           	ddw	__ccovbit1_117& (0+7)	; OFFSET
  9819  19D8  00000000           	ddw	0	; Reserved
  9820  19DC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9821  19E0  00000002           	ddw	2	; NUM_RANGES
  9822  19E4  0000064A           	ddw	__ccov239_start_blk1	; block 1 START_ADDR
  9823  19E8  0000064E           	ddw	__ccov239_end_blk1	; block 1 END_ADDR
  9824  19EC  00000646           	ddw	_sec_30_work	; block 0 START_ADDR
  9825  19F0  0000064A           	ddw	__ccov238_end_blk0	; block 0 END_ADDR
  9826                           
  9827                           ; Function: sec_30_work, coverage: 3,0
  9828  19F4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9829  19F8  00000028           	ddw	__ccovbit3_118/(0+8)	; CC_ADDR
  9830  19FC  00000001           	ddw	1	; NUM_POINTS
  9831  1A00  00000000           	ddw	__ccovbit3_118& (0+7)	; OFFSET
  9832  1A04  00000000           	ddw	0	; Reserved
  9833  1A08  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9834  1A0C  00000002           	ddw	2	; NUM_RANGES
  9835  1A10  0000064E           	ddw	__ccov240_start_blk3	; block 3 START_ADDR
  9836  1A14  00000654           	ddw	__ccov240_end_blk3	; block 3 END_ADDR
  9837  1A18  00000646           	ddw	_sec_30_work	; block 0 START_ADDR
  9838  1A1C  0000064A           	ddw	__ccov238_end_blk0	; block 0 END_ADDR
  9839                           
  9840                           ; Function: sec_30_work, coverage: 5,0
  9841  1A20  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9842  1A24  00000027           	ddw	__ccovbit5_119/(0+8)	; CC_ADDR
  9843  1A28  00000001           	ddw	1	; NUM_POINTS
  9844  1A2C  00000007           	ddw	__ccovbit5_119& (0+7)	; OFFSET
  9845  1A30  00000000           	ddw	0	; Reserved
  9846  1A34  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9847  1A38  00000002           	ddw	2	; NUM_RANGES
  9848  1A3C  00000654           	ddw	__ccov241_start_blk5	; block 5 START_ADDR
  9849  1A40  00000656           	ddw	__end_of_sec_30_work	; block 5 END_ADDR
  9850  1A44  00000646           	ddw	_sec_30_work	; block 0 START_ADDR
  9851  1A48  0000064A           	ddw	__ccov238_end_blk0	; block 0 END_ADDR
  9852                           
  9853                           ; Function: sec_work, coverage: 3,2,1,0
  9854  1A4C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9855  1A50  00000027           	ddw	__ccovbit3_120/(0+8)	; CC_ADDR
  9856  1A54  00000001           	ddw	1	; NUM_POINTS
  9857  1A58  00000006           	ddw	__ccovbit3_120& (0+7)	; OFFSET
  9858  1A5C  00000000           	ddw	0	; Reserved
  9859  1A60  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9860  1A64  00000004           	ddw	4	; NUM_RANGES
  9861  1A68  00000057           	ddw	__ccov245_start_blk3	; block 3 START_ADDR
  9862  1A6C  0000005B           	ddw	__ccov245_end_blk3	; block 3 END_ADDR
  9863  1A70  00000052           	ddw	__ccov244_start_blk2	; block 2 START_ADDR
  9864  1A74  00000057           	ddw	__ccov244_end_blk2	; block 2 END_ADDR
  9865  1A78  0000004E           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
  9866  1A7C  00000052           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
  9867  1A80  00000049           	ddw	_sec_work	; block 0 START_ADDR
  9868  1A84  0000004E           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
  9869                           
  9870                           ; Function: sec_work, coverage: 4,2,1,0
  9871  1A88  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9872  1A8C  00000027           	ddw	__ccovbit4_121/(0+8)	; CC_ADDR
  9873  1A90  00000001           	ddw	1	; NUM_POINTS
  9874  1A94  00000005           	ddw	__ccovbit4_121& (0+7)	; OFFSET
  9875  1A98  00000000           	ddw	0	; Reserved
  9876  1A9C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9877  1AA0  00000004           	ddw	4	; NUM_RANGES
  9878  1AA4  0000005B           	ddw	__ccov246_start_blk4	; block 4 START_ADDR
  9879  1AA8  0000005D           	ddw	__ccov246_end_blk4	; block 4 END_ADDR
  9880  1AAC  00000052           	ddw	__ccov244_start_blk2	; block 2 START_ADDR
  9881  1AB0  00000057           	ddw	__ccov244_end_blk2	; block 2 END_ADDR
  9882  1AB4  0000004E           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
  9883  1AB8  00000052           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
  9884  1ABC  00000049           	ddw	_sec_work	; block 0 START_ADDR
  9885  1AC0  0000004E           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
  9886                           
  9887                           ; Function: sec_work, coverage: 8,7,6,1,0
  9888  1AC4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9889  1AC8  00000027           	ddw	__ccovbit8_122/(0+8)	; CC_ADDR
  9890  1ACC  00000001           	ddw	1	; NUM_POINTS
  9891  1AD0  00000004           	ddw	__ccovbit8_122& (0+7)	; OFFSET
  9892  1AD4  00000000           	ddw	0	; Reserved
  9893  1AD8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9894  1ADC  00000005           	ddw	5	; NUM_RANGES
  9895  1AE0  00000065           	ddw	__ccov249_start_blk8	; block 8 START_ADDR
  9896  1AE4  00000070           	ddw	__ccov249_end_blk8	; block 8 END_ADDR
  9897  1AE8  00000061           	ddw	__ccov248_start_blk7	; block 7 START_ADDR
  9898  1AEC  00000065           	ddw	__ccov248_end_blk7	; block 7 END_ADDR
  9899  1AF0  0000005D           	ddw	__ccov247_start_blk6	; block 6 START_ADDR
  9900  1AF4  00000061           	ddw	__ccov247_end_blk6	; block 6 END_ADDR
  9901  1AF8  0000004E           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
  9902  1AFC  00000052           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
  9903  1B00  00000049           	ddw	_sec_work	; block 0 START_ADDR
  9904  1B04  0000004E           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
  9905                           
  9906                           ; Function: sec_work, coverage: 10,7,6,1,0
  9907  1B08  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9908  1B0C  00000027           	ddw	__ccovbit10_123/(0+8)	; CC_ADDR
  9909  1B10  00000001           	ddw	1	; NUM_POINTS
  9910  1B14  00000003           	ddw	__ccovbit10_123& (0+7)	; OFFSET
  9911  1B18  00000000           	ddw	0	; Reserved
  9912  1B1C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9913  1B20  00000005           	ddw	5	; NUM_RANGES
  9914  1B24  00000070           	ddw	__ccov250_start_blk10	; block 10 START_ADDR
  9915  1B28  00000074           	ddw	__ccov250_end_blk10	; block 10 END_ADDR
  9916  1B2C  00000061           	ddw	__ccov248_start_blk7	; block 7 START_ADDR
  9917  1B30  00000065           	ddw	__ccov248_end_blk7	; block 7 END_ADDR
  9918  1B34  0000005D           	ddw	__ccov247_start_blk6	; block 6 START_ADDR
  9919  1B38  00000061           	ddw	__ccov247_end_blk6	; block 6 END_ADDR
  9920  1B3C  0000004E           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
  9921  1B40  00000052           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
  9922  1B44  00000049           	ddw	_sec_work	; block 0 START_ADDR
  9923  1B48  0000004E           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
  9924                           
  9925                           ; Function: sec_work, coverage: 14,13,12,6,1,0
  9926  1B4C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9927  1B50  00000027           	ddw	__ccovbit14_124/(0+8)	; CC_ADDR
  9928  1B54  00000001           	ddw	1	; NUM_POINTS
  9929  1B58  00000002           	ddw	__ccovbit14_124& (0+7)	; OFFSET
  9930  1B5C  00000000           	ddw	0	; Reserved
  9931  1B60  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9932  1B64  00000006           	ddw	6	; NUM_RANGES
  9933  1B68  0000007F           	ddw	__ccov253_start_blk14	; block 14 START_ADDR
  9934  1B6C  00000086           	ddw	__ccov253_end_blk14	; block 14 END_ADDR
  9935  1B70  00000078           	ddw	__ccov252_start_blk13	; block 13 START_ADDR
  9936  1B74  0000007F           	ddw	__ccov252_end_blk13	; block 13 END_ADDR
  9937  1B78  00000074           	ddw	__ccov251_start_blk12	; block 12 START_ADDR
  9938  1B7C  00000078           	ddw	__ccov251_end_blk12	; block 12 END_ADDR
  9939  1B80  0000005D           	ddw	__ccov247_start_blk6	; block 6 START_ADDR
  9940  1B84  00000061           	ddw	__ccov247_end_blk6	; block 6 END_ADDR
  9941  1B88  0000004E           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
  9942  1B8C  00000052           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
  9943  1B90  00000049           	ddw	_sec_work	; block 0 START_ADDR
  9944  1B94  0000004E           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
  9945                           
  9946                           ; Function: sec_work, coverage: 16,13,12,6,1,0
  9947  1B98  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9948  1B9C  00000027           	ddw	__ccovbit16_125/(0+8)	; CC_ADDR
  9949  1BA0  00000001           	ddw	1	; NUM_POINTS
  9950  1BA4  00000001           	ddw	__ccovbit16_125& (0+7)	; OFFSET
  9951  1BA8  00000000           	ddw	0	; Reserved
  9952  1BAC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9953  1BB0  00000006           	ddw	6	; NUM_RANGES
  9954  1BB4  00000086           	ddw	__ccov254_start_blk16	; block 16 START_ADDR
  9955  1BB8  0000008A           	ddw	__ccov254_end_blk16	; block 16 END_ADDR
  9956  1BBC  00000078           	ddw	__ccov252_start_blk13	; block 13 START_ADDR
  9957  1BC0  0000007F           	ddw	__ccov252_end_blk13	; block 13 END_ADDR
  9958  1BC4  00000074           	ddw	__ccov251_start_blk12	; block 12 START_ADDR
  9959  1BC8  00000078           	ddw	__ccov251_end_blk12	; block 12 END_ADDR
  9960  1BCC  0000005D           	ddw	__ccov247_start_blk6	; block 6 START_ADDR
  9961  1BD0  00000061           	ddw	__ccov247_end_blk6	; block 6 END_ADDR
  9962  1BD4  0000004E           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
  9963  1BD8  00000052           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
  9964  1BDC  00000049           	ddw	_sec_work	; block 0 START_ADDR
  9965  1BE0  0000004E           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
  9966                           
  9967                           ; Function: sec_work, coverage: 18,13,12,6,1,0
  9968  1BE4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9969  1BE8  00000027           	ddw	__ccovbit18_126/(0+8)	; CC_ADDR
  9970  1BEC  00000001           	ddw	1	; NUM_POINTS
  9971  1BF0  00000000           	ddw	__ccovbit18_126& (0+7)	; OFFSET
  9972  1BF4  00000000           	ddw	0	; Reserved
  9973  1BF8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9974  1BFC  00000006           	ddw	6	; NUM_RANGES
  9975  1C00  0000008A           	ddw	__ccov255_start_blk18	; block 18 START_ADDR
  9976  1C04  0000009A           	ddw	__ccov255_end_blk18	; block 18 END_ADDR
  9977  1C08  00000078           	ddw	__ccov252_start_blk13	; block 13 START_ADDR
  9978  1C0C  0000007F           	ddw	__ccov252_end_blk13	; block 13 END_ADDR
  9979  1C10  00000074           	ddw	__ccov251_start_blk12	; block 12 START_ADDR
  9980  1C14  00000078           	ddw	__ccov251_end_blk12	; block 12 END_ADDR
  9981  1C18  0000005D           	ddw	__ccov247_start_blk6	; block 6 START_ADDR
  9982  1C1C  00000061           	ddw	__ccov247_end_blk6	; block 6 END_ADDR
  9983  1C20  0000004E           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
  9984  1C24  00000052           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
  9985  1C28  00000049           	ddw	_sec_work	; block 0 START_ADDR
  9986  1C2C  0000004E           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
  9987                           
  9988                           ; Function: sec_work, coverage: 19,12,6,1,0
  9989  1C30  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9990  1C34  00000026           	ddw	__ccovbit19_127/(0+8)	; CC_ADDR
  9991  1C38  00000001           	ddw	1	; NUM_POINTS
  9992  1C3C  00000007           	ddw	__ccovbit19_127& (0+7)	; OFFSET
  9993  1C40  00000000           	ddw	0	; Reserved
  9994  1C44  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9995  1C48  00000005           	ddw	5	; NUM_RANGES
  9996  1C4C  0000009A           	ddw	__ccov256_start_blk19	; block 19 START_ADDR
  9997  1C50  000000A0           	ddw	__ccov256_end_blk19	; block 19 END_ADDR
  9998  1C54  00000074           	ddw	__ccov251_start_blk12	; block 12 START_ADDR
  9999  1C58  00000078           	ddw	__ccov251_end_blk12	; block 12 END_ADDR
 10000  1C5C  0000005D           	ddw	__ccov247_start_blk6	; block 6 START_ADDR
 10001  1C60  00000061           	ddw	__ccov247_end_blk6	; block 6 END_ADDR
 10002  1C64  0000004E           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
 10003  1C68  00000052           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
 10004  1C6C  00000049           	ddw	_sec_work	; block 0 START_ADDR
 10005  1C70  0000004E           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
 10006                           
 10007                           ; Function: sec_work, coverage: 21,20,19,12,6,1,0
 10008  1C74  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10009  1C78  00000026           	ddw	__ccovbit21_128/(0+8)	; CC_ADDR
 10010  1C7C  00000001           	ddw	1	; NUM_POINTS
 10011  1C80  00000006           	ddw	__ccovbit21_128& (0+7)	; OFFSET
 10012  1C84  00000000           	ddw	0	; Reserved
 10013  1C88  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10014  1C8C  00000007           	ddw	7	; NUM_RANGES
 10015  1C90  000000A4           	ddw	__ccov258_start_blk21	; block 21 START_ADDR
 10016  1C94  000000AB           	ddw	__ccov258_end_blk21	; block 21 END_ADDR
 10017  1C98  000000A0           	ddw	__ccov257_start_blk20	; block 20 START_ADDR
 10018  1C9C  000000A4           	ddw	__ccov257_end_blk20	; block 20 END_ADDR
 10019  1CA0  0000009A           	ddw	__ccov256_start_blk19	; block 19 START_ADDR
 10020  1CA4  000000A0           	ddw	__ccov256_end_blk19	; block 19 END_ADDR
 10021  1CA8  00000074           	ddw	__ccov251_start_blk12	; block 12 START_ADDR
 10022  1CAC  00000078           	ddw	__ccov251_end_blk12	; block 12 END_ADDR
 10023  1CB0  0000005D           	ddw	__ccov247_start_blk6	; block 6 START_ADDR
 10024  1CB4  00000061           	ddw	__ccov247_end_blk6	; block 6 END_ADDR
 10025  1CB8  0000004E           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
 10026  1CBC  00000052           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
 10027  1CC0  00000049           	ddw	_sec_work	; block 0 START_ADDR
 10028  1CC4  0000004E           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
 10029                           
 10030                           ; Function: sec_work, coverage: 23,22,21,20,19,12,6,1,0
 10031  1CC8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10032  1CCC  00000026           	ddw	__ccovbit23_129/(0+8)	; CC_ADDR
 10033  1CD0  00000001           	ddw	1	; NUM_POINTS
 10034  1CD4  00000005           	ddw	__ccovbit23_129& (0+7)	; OFFSET
 10035  1CD8  00000000           	ddw	0	; Reserved
 10036  1CDC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10037  1CE0  00000009           	ddw	9	; NUM_RANGES
 10038  1CE4  000000B8           	ddw	__ccov260_start_blk23	; block 23 START_ADDR
 10039  1CE8  000000BA           	ddw	__ccov260_end_blk23	; block 23 END_ADDR
 10040  1CEC  000000AB           	ddw	__ccov259_start_blk22	; block 22 START_ADDR
 10041  1CF0  000000B8           	ddw	__ccov259_end_blk22	; block 22 END_ADDR
 10042  1CF4  000000A4           	ddw	__ccov258_start_blk21	; block 21 START_ADDR
 10043  1CF8  000000AB           	ddw	__ccov258_end_blk21	; block 21 END_ADDR
 10044  1CFC  000000A0           	ddw	__ccov257_start_blk20	; block 20 START_ADDR
 10045  1D00  000000A4           	ddw	__ccov257_end_blk20	; block 20 END_ADDR
 10046  1D04  0000009A           	ddw	__ccov256_start_blk19	; block 19 START_ADDR
 10047  1D08  000000A0           	ddw	__ccov256_end_blk19	; block 19 END_ADDR
 10048  1D0C  00000074           	ddw	__ccov251_start_blk12	; block 12 START_ADDR
 10049  1D10  00000078           	ddw	__ccov251_end_blk12	; block 12 END_ADDR
 10050  1D14  0000005D           	ddw	__ccov247_start_blk6	; block 6 START_ADDR
 10051  1D18  00000061           	ddw	__ccov247_end_blk6	; block 6 END_ADDR
 10052  1D1C  0000004E           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
 10053  1D20  00000052           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
 10054  1D24  00000049           	ddw	_sec_work	; block 0 START_ADDR
 10055  1D28  0000004E           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
 10056                           
 10057                           ; Function: sec_work, coverage: 29,28,27,12,6,1,0
 10058  1D2C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10059  1D30  00000026           	ddw	__ccovbit29_130/(0+8)	; CC_ADDR
 10060  1D34  00000001           	ddw	1	; NUM_POINTS
 10061  1D38  00000004           	ddw	__ccovbit29_130& (0+7)	; OFFSET
 10062  1D3C  00000000           	ddw	0	; Reserved
 10063  1D40  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10064  1D44  00000007           	ddw	7	; NUM_RANGES
 10065  1D48  000000C3           	ddw	__ccov263_start_blk29	; block 29 START_ADDR
 10066  1D4C  000000C6           	ddw	__ccov263_end_blk29	; block 29 END_ADDR
 10067  1D50  000000C0           	ddw	__ccov262_start_blk28	; block 28 START_ADDR
 10068  1D54  000000C3           	ddw	__ccov262_end_blk28	; block 28 END_ADDR
 10069  1D58  000000BA           	ddw	__ccov261_start_blk27	; block 27 START_ADDR
 10070  1D5C  000000C0           	ddw	__ccov261_end_blk27	; block 27 END_ADDR
 10071  1D60  00000074           	ddw	__ccov251_start_blk12	; block 12 START_ADDR
 10072  1D64  00000078           	ddw	__ccov251_end_blk12	; block 12 END_ADDR
 10073  1D68  0000005D           	ddw	__ccov247_start_blk6	; block 6 START_ADDR
 10074  1D6C  00000061           	ddw	__ccov247_end_blk6	; block 6 END_ADDR
 10075  1D70  0000004E           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
 10076  1D74  00000052           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
 10077  1D78  00000049           	ddw	_sec_work	; block 0 START_ADDR
 10078  1D7C  0000004E           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
 10079                           
 10080                           ; Function: sec_work, coverage: 31,27,12,6,1,0
 10081  1D80  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10082  1D84  00000026           	ddw	__ccovbit31_131/(0+8)	; CC_ADDR
 10083  1D88  00000001           	ddw	1	; NUM_POINTS
 10084  1D8C  00000003           	ddw	__ccovbit31_131& (0+7)	; OFFSET
 10085  1D90  00000000           	ddw	0	; Reserved
 10086  1D94  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10087  1D98  00000006           	ddw	6	; NUM_RANGES
 10088  1D9C  000000C6           	ddw	__ccov264_start_blk31	; block 31 START_ADDR
 10089  1DA0  000000C8           	ddw	__end_of_sec_work	; block 31 END_ADDR
 10090  1DA4  000000BA           	ddw	__ccov261_start_blk27	; block 27 START_ADDR
 10091  1DA8  000000C0           	ddw	__ccov261_end_blk27	; block 27 END_ADDR
 10092  1DAC  00000074           	ddw	__ccov251_start_blk12	; block 12 START_ADDR
 10093  1DB0  00000078           	ddw	__ccov251_end_blk12	; block 12 END_ADDR
 10094  1DB4  0000005D           	ddw	__ccov247_start_blk6	; block 6 START_ADDR
 10095  1DB8  00000061           	ddw	__ccov247_end_blk6	; block 6 END_ADDR
 10096  1DBC  0000004E           	ddw	__ccov243_start_blk1	; block 1 START_ADDR
 10097  1DC0  00000052           	ddw	__ccov243_end_blk1	; block 1 END_ADDR
 10098  1DC4  00000049           	ddw	_sec_work	; block 0 START_ADDR
 10099  1DC8  0000004E           	ddw	__ccov242_end_blk0	; block 0 END_ADDR
 10100                           
 10101                           ; Function: ms_200_work, coverage: 1,0
 10102  1DCC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10103  1DD0  00000026           	ddw	__ccovbit1_132/(0+8)	; CC_ADDR
 10104  1DD4  00000001           	ddw	1	; NUM_POINTS
 10105  1DD8  00000002           	ddw	__ccovbit1_132& (0+7)	; OFFSET
 10106  1DDC  00000000           	ddw	0	; Reserved
 10107  1DE0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10108  1DE4  00000002           	ddw	2	; NUM_RANGES
 10109  1DE8  00000287           	ddw	__ccov266_start_blk1	; block 1 START_ADDR
 10110  1DEC  0000028D           	ddw	__ccov266_end_blk1	; block 1 END_ADDR
 10111  1DF0  00000283           	ddw	_ms_200_work	; block 0 START_ADDR
 10112  1DF4  00000287           	ddw	__ccov265_end_blk0	; block 0 END_ADDR
 10113                           
 10114                           ; Function: ms_200_work, coverage: 2,0
 10115  1DF8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10116  1DFC  00000026           	ddw	__ccovbit2_133/(0+8)	; CC_ADDR
 10117  1E00  00000001           	ddw	1	; NUM_POINTS
 10118  1E04  00000001           	ddw	__ccovbit2_133& (0+7)	; OFFSET
 10119  1E08  00000000           	ddw	0	; Reserved
 10120  1E0C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10121  1E10  00000002           	ddw	2	; NUM_RANGES
 10122  1E14  0000028D           	ddw	__ccov267_start_blk2	; block 2 START_ADDR
 10123  1E18  00000292           	ddw	__ccov267_end_blk2	; block 2 END_ADDR
 10124  1E1C  00000283           	ddw	_ms_200_work	; block 0 START_ADDR
 10125  1E20  00000287           	ddw	__ccov265_end_blk0	; block 0 END_ADDR
 10126                           
 10127                           ; Function: ms_200_work, coverage: 4,1,0
 10128  1E24  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10129  1E28  00000026           	ddw	__ccovbit4_134/(0+8)	; CC_ADDR
 10130  1E2C  00000001           	ddw	1	; NUM_POINTS
 10131  1E30  00000000           	ddw	__ccovbit4_134& (0+7)	; OFFSET
 10132  1E34  00000000           	ddw	0	; Reserved
 10133  1E38  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10134  1E3C  00000003           	ddw	3	; NUM_RANGES
 10135  1E40  00000292           	ddw	__ccov268_start_blk4	; block 4 START_ADDR
 10136  1E44  00000298           	ddw	__ccov268_end_blk4	; block 4 END_ADDR
 10137  1E48  00000287           	ddw	__ccov266_start_blk1	; block 1 START_ADDR
 10138  1E4C  0000028D           	ddw	__ccov266_end_blk1	; block 1 END_ADDR
 10139  1E50  00000283           	ddw	_ms_200_work	; block 0 START_ADDR
 10140  1E54  00000287           	ddw	__ccov265_end_blk0	; block 0 END_ADDR
 10141                           
 10142                           ; Function: ms_200_work, coverage: 5,4,1,0
 10143  1E58  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10144  1E5C  00000025           	ddw	__ccovbit5_135/(0+8)	; CC_ADDR
 10145  1E60  00000001           	ddw	1	; NUM_POINTS
 10146  1E64  00000007           	ddw	__ccovbit5_135& (0+7)	; OFFSET
 10147  1E68  00000000           	ddw	0	; Reserved
 10148  1E6C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10149  1E70  00000004           	ddw	4	; NUM_RANGES
 10150  1E74  00000298           	ddw	__ccov269_start_blk5	; block 5 START_ADDR
 10151  1E78  0000029D           	ddw	__ccov269_end_blk5	; block 5 END_ADDR
 10152  1E7C  00000292           	ddw	__ccov268_start_blk4	; block 4 START_ADDR
 10153  1E80  00000298           	ddw	__ccov268_end_blk4	; block 4 END_ADDR
 10154  1E84  00000287           	ddw	__ccov266_start_blk1	; block 1 START_ADDR
 10155  1E88  0000028D           	ddw	__ccov266_end_blk1	; block 1 END_ADDR
 10156  1E8C  00000283           	ddw	_ms_200_work	; block 0 START_ADDR
 10157  1E90  00000287           	ddw	__ccov265_end_blk0	; block 0 END_ADDR
 10158                           
 10159                           ; Function: ms_200_work, coverage: 8,0
 10160  1E94  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10161  1E98  00000025           	ddw	__ccovbit8_136/(0+8)	; CC_ADDR
 10162  1E9C  00000001           	ddw	1	; NUM_POINTS
 10163  1EA0  00000006           	ddw	__ccovbit8_136& (0+7)	; OFFSET
 10164  1EA4  00000000           	ddw	0	; Reserved
 10165  1EA8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10166  1EAC  00000002           	ddw	2	; NUM_RANGES
 10167  1EB0  0000029D           	ddw	__ccov270_start_blk8	; block 8 START_ADDR
 10168  1EB4  000002A3           	ddw	__ccov270_end_blk8	; block 8 END_ADDR
 10169  1EB8  00000283           	ddw	_ms_200_work	; block 0 START_ADDR
 10170  1EBC  00000287           	ddw	__ccov265_end_blk0	; block 0 END_ADDR
 10171                           
 10172                           ; Function: ms_200_work, coverage: 10,9,8,0
 10173  1EC0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10174  1EC4  00000025           	ddw	__ccovbit10_137/(0+8)	; CC_ADDR
 10175  1EC8  00000001           	ddw	1	; NUM_POINTS
 10176  1ECC  00000005           	ddw	__ccovbit10_137& (0+7)	; OFFSET
 10177  1ED0  00000000           	ddw	0	; Reserved
 10178  1ED4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10179  1ED8  00000004           	ddw	4	; NUM_RANGES
 10180  1EDC  000002A8           	ddw	__ccov272_start_blk10	; block 10 START_ADDR
 10181  1EE0  000002AF           	ddw	__ccov272_end_blk10	; block 10 END_ADDR
 10182  1EE4  000002A3           	ddw	__ccov271_start_blk9	; block 9 START_ADDR
 10183  1EE8  000002A8           	ddw	__ccov271_end_blk9	; block 9 END_ADDR
 10184  1EEC  0000029D           	ddw	__ccov270_start_blk8	; block 8 START_ADDR
 10185  1EF0  000002A3           	ddw	__ccov270_end_blk8	; block 8 END_ADDR
 10186  1EF4  00000283           	ddw	_ms_200_work	; block 0 START_ADDR
 10187  1EF8  00000287           	ddw	__ccov265_end_blk0	; block 0 END_ADDR
 10188                           
 10189                           ; Function: ms_200_work, coverage: 14,13,9,8,0
 10190  1EFC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10191  1F00  00000025           	ddw	__ccovbit14_138/(0+8)	; CC_ADDR
 10192  1F04  00000001           	ddw	1	; NUM_POINTS
 10193  1F08  00000004           	ddw	__ccovbit14_138& (0+7)	; OFFSET
 10194  1F0C  00000000           	ddw	0	; Reserved
 10195  1F10  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10196  1F14  00000005           	ddw	5	; NUM_RANGES
 10197  1F18  000002B4           	ddw	__ccov274_start_blk14	; block 14 START_ADDR
 10198  1F1C  000002B8           	ddw	__ccov274_end_blk14	; block 14 END_ADDR
 10199  1F20  000002AF           	ddw	__ccov273_start_blk13	; block 13 START_ADDR
 10200  1F24  000002B4           	ddw	__ccov273_end_blk13	; block 13 END_ADDR
 10201  1F28  000002A3           	ddw	__ccov271_start_blk9	; block 9 START_ADDR
 10202  1F2C  000002A8           	ddw	__ccov271_end_blk9	; block 9 END_ADDR
 10203  1F30  0000029D           	ddw	__ccov270_start_blk8	; block 8 START_ADDR
 10204  1F34  000002A3           	ddw	__ccov270_end_blk8	; block 8 END_ADDR
 10205  1F38  00000283           	ddw	_ms_200_work	; block 0 START_ADDR
 10206  1F3C  00000287           	ddw	__ccov265_end_blk0	; block 0 END_ADDR
 10207                           
 10208                           ; Function: ms_200_work, coverage: 16,13,9,8,0
 10209  1F40  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10210  1F44  00000025           	ddw	__ccovbit16_139/(0+8)	; CC_ADDR
 10211  1F48  00000001           	ddw	1	; NUM_POINTS
 10212  1F4C  00000003           	ddw	__ccovbit16_139& (0+7)	; OFFSET
 10213  1F50  00000000           	ddw	0	; Reserved
 10214  1F54  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10215  1F58  00000005           	ddw	5	; NUM_RANGES
 10216  1F5C  000002B8           	ddw	__ccov275_start_blk16	; block 16 START_ADDR
 10217  1F60  000002BF           	ddw	__ccov275_end_blk16	; block 16 END_ADDR
 10218  1F64  000002AF           	ddw	__ccov273_start_blk13	; block 13 START_ADDR
 10219  1F68  000002B4           	ddw	__ccov273_end_blk13	; block 13 END_ADDR
 10220  1F6C  000002A3           	ddw	__ccov271_start_blk9	; block 9 START_ADDR
 10221  1F70  000002A8           	ddw	__ccov271_end_blk9	; block 9 END_ADDR
 10222  1F74  0000029D           	ddw	__ccov270_start_blk8	; block 8 START_ADDR
 10223  1F78  000002A3           	ddw	__ccov270_end_blk8	; block 8 END_ADDR
 10224  1F7C  00000283           	ddw	_ms_200_work	; block 0 START_ADDR
 10225  1F80  00000287           	ddw	__ccov265_end_blk0	; block 0 END_ADDR
 10226                           
 10227                           ; Function: ms_200_work, coverage: 17,16,13,9,8,0
 10228  1F84  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10229  1F88  00000025           	ddw	__ccovbit17_140/(0+8)	; CC_ADDR
 10230  1F8C  00000001           	ddw	1	; NUM_POINTS
 10231  1F90  00000002           	ddw	__ccovbit17_140& (0+7)	; OFFSET
 10232  1F94  00000000           	ddw	0	; Reserved
 10233  1F98  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10234  1F9C  00000006           	ddw	6	; NUM_RANGES
 10235  1FA0  000002BF           	ddw	__ccov276_start_blk17	; block 17 START_ADDR
 10236  1FA4  000002C3           	ddw	__ccov276_end_blk17	; block 17 END_ADDR
 10237  1FA8  000002B8           	ddw	__ccov275_start_blk16	; block 16 START_ADDR
 10238  1FAC  000002BF           	ddw	__ccov275_end_blk16	; block 16 END_ADDR
 10239  1FB0  000002AF           	ddw	__ccov273_start_blk13	; block 13 START_ADDR
 10240  1FB4  000002B4           	ddw	__ccov273_end_blk13	; block 13 END_ADDR
 10241  1FB8  000002A3           	ddw	__ccov271_start_blk9	; block 9 START_ADDR
 10242  1FBC  000002A8           	ddw	__ccov271_end_blk9	; block 9 END_ADDR
 10243  1FC0  0000029D           	ddw	__ccov270_start_blk8	; block 8 START_ADDR
 10244  1FC4  000002A3           	ddw	__ccov270_end_blk8	; block 8 END_ADDR
 10245  1FC8  00000283           	ddw	_ms_200_work	; block 0 START_ADDR
 10246  1FCC  00000287           	ddw	__ccov265_end_blk0	; block 0 END_ADDR
 10247                           
 10248                           ; Function: ms_200_work, coverage: 22,0
 10249  1FD0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10250  1FD4  00000025           	ddw	__ccovbit22_141/(0+8)	; CC_ADDR
 10251  1FD8  00000001           	ddw	1	; NUM_POINTS
 10252  1FDC  00000001           	ddw	__ccovbit22_141& (0+7)	; OFFSET
 10253  1FE0  00000000           	ddw	0	; Reserved
 10254  1FE4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10255  1FE8  00000002           	ddw	2	; NUM_RANGES
 10256  1FEC  000002C3           	ddw	__ccov277_start_blk22	; block 22 START_ADDR
 10257  1FF0  000002C6           	ddw	__end_of_ms_200_work	; block 22 END_ADDR
 10258  1FF4  00000283           	ddw	_ms_200_work	; block 0 START_ADDR
 10259  1FF8  00000287           	ddw	__ccov265_end_blk0	; block 0 END_ADDR
 10260                           
 10261                           ; Function: ms_100_work, coverage: 1,0
 10262  1FFC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10263  2000  00000025           	ddw	__ccovbit1_142/(0+8)	; CC_ADDR
 10264  2004  00000001           	ddw	1	; NUM_POINTS
 10265  2008  00000000           	ddw	__ccovbit1_142& (0+7)	; OFFSET
 10266  200C  00000000           	ddw	0	; Reserved
 10267  2010  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10268  2014  00000002           	ddw	2	; NUM_RANGES
 10269  2018  0000065A           	ddw	__ccov279_start_blk1	; block 1 START_ADDR
 10270  201C  00000660           	ddw	__ccov279_end_blk1	; block 1 END_ADDR
 10271  2020  00000656           	ddw	_ms_100_work	; block 0 START_ADDR
 10272  2024  0000065A           	ddw	__ccov278_end_blk0	; block 0 END_ADDR
 10273                           
 10274                           ; Function: ms_100_work, coverage: 2,0
 10275  2028  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10276  202C  00000024           	ddw	__ccovbit2_143/(0+8)	; CC_ADDR
 10277  2030  00000001           	ddw	1	; NUM_POINTS
 10278  2034  00000007           	ddw	__ccovbit2_143& (0+7)	; OFFSET
 10279  2038  00000000           	ddw	0	; Reserved
 10280  203C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10281  2040  00000002           	ddw	2	; NUM_RANGES
 10282  2044  00000660           	ddw	__ccov280_start_blk2	; block 2 START_ADDR
 10283  2048  00000663           	ddw	__ccov280_end_blk2	; block 2 END_ADDR
 10284  204C  00000656           	ddw	_ms_100_work	; block 0 START_ADDR
 10285  2050  0000065A           	ddw	__ccov278_end_blk0	; block 0 END_ADDR
 10286                           
 10287                           ; Function: ms_100_work, coverage: 4,0
 10288  2054  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10289  2058  00000024           	ddw	__ccovbit4_144/(0+8)	; CC_ADDR
 10290  205C  00000001           	ddw	1	; NUM_POINTS
 10291  2060  00000006           	ddw	__ccovbit4_144& (0+7)	; OFFSET
 10292  2064  00000000           	ddw	0	; Reserved
 10293  2068  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10294  206C  00000002           	ddw	2	; NUM_RANGES
 10295  2070  00000663           	ddw	__ccov281_start_blk4	; block 4 START_ADDR
 10296  2074  00000665           	ddw	__end_of_ms_100_work	; block 4 END_ADDR
 10297  2078  00000656           	ddw	_ms_100_work	; block 0 START_ADDR
 10298  207C  0000065A           	ddw	__ccov278_end_blk0	; block 0 END_ADDR
 10299                           
 10300                           ; Function: ms_tick, coverage: 3,2,1,0
 10301  2080  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10302  2084  00000024           	ddw	__ccovbit3_145/(0+8)	; CC_ADDR
 10303  2088  00000001           	ddw	1	; NUM_POINTS
 10304  208C  00000005           	ddw	__ccovbit3_145& (0+7)	; OFFSET
 10305  2090  00000000           	ddw	0	; Reserved
 10306  2094  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10307  2098  00000004           	ddw	4	; NUM_RANGES
 10308  209C  000002D5           	ddw	__ccov285_start_blk3	; block 3 START_ADDR
 10309  20A0  000002DC           	ddw	__ccov285_end_blk3	; block 3 END_ADDR
 10310  20A4  000002D1           	ddw	__ccov284_start_blk2	; block 2 START_ADDR
 10311  20A8  000002D5           	ddw	__ccov284_end_blk2	; block 2 END_ADDR
 10312  20AC  000002CB           	ddw	__ccov283_start_blk1	; block 1 START_ADDR
 10313  20B0  000002D1           	ddw	__ccov283_end_blk1	; block 1 END_ADDR
 10314  20B4  000002C6           	ddw	_ms_tick	; block 0 START_ADDR
 10315  20B8  000002CB           	ddw	__ccov282_end_blk0	; block 0 END_ADDR
 10316                           
 10317                           ; Function: ms_tick, coverage: 4,3,2,1,0
 10318  20BC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10319  20C0  00000024           	ddw	__ccovbit4_146/(0+8)	; CC_ADDR
 10320  20C4  00000001           	ddw	1	; NUM_POINTS
 10321  20C8  00000004           	ddw	__ccovbit4_146& (0+7)	; OFFSET
 10322  20CC  00000000           	ddw	0	; Reserved
 10323  20D0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10324  20D4  00000005           	ddw	5	; NUM_RANGES
 10325  20D8  000002DC           	ddw	__ccov286_start_blk4	; block 4 START_ADDR
 10326  20DC  000002E0           	ddw	__ccov286_end_blk4	; block 4 END_ADDR
 10327  20E0  000002D5           	ddw	__ccov285_start_blk3	; block 3 START_ADDR
 10328  20E4  000002DC           	ddw	__ccov285_end_blk3	; block 3 END_ADDR
 10329  20E8  000002D1           	ddw	__ccov284_start_blk2	; block 2 START_ADDR
 10330  20EC  000002D5           	ddw	__ccov284_end_blk2	; block 2 END_ADDR
 10331  20F0  000002CB           	ddw	__ccov283_start_blk1	; block 1 START_ADDR
 10332  20F4  000002D1           	ddw	__ccov283_end_blk1	; block 1 END_ADDR
 10333  20F8  000002C6           	ddw	_ms_tick	; block 0 START_ADDR
 10334  20FC  000002CB           	ddw	__ccov282_end_blk0	; block 0 END_ADDR
 10335                           
 10336                           ; Function: ms_tick, coverage: 12,11,10,9,8,7,1,0
 10337  2100  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10338  2104  00000024           	ddw	__ccovbit12_147/(0+8)	; CC_ADDR
 10339  2108  00000001           	ddw	1	; NUM_POINTS
 10340  210C  00000003           	ddw	__ccovbit12_147& (0+7)	; OFFSET
 10341  2110  00000000           	ddw	0	; Reserved
 10342  2114  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10343  2118  00000008           	ddw	8	; NUM_RANGES
 10344  211C  000002F5           	ddw	__ccov292_start_blk12	; block 12 START_ADDR
 10345  2120  000002F8           	ddw	__ccov292_end_blk12	; block 12 END_ADDR
 10346  2124  000002ED           	ddw	__ccov291_start_blk11	; block 11 START_ADDR
 10347  2128  000002F5           	ddw	__ccov291_end_blk11	; block 11 END_ADDR
 10348  212C  000002EA           	ddw	__ccov290_start_blk10	; block 10 START_ADDR
 10349  2130  000002ED           	ddw	__ccov290_end_blk10	; block 10 END_ADDR
 10350  2134  000002E2           	ddw	__ccov289_start_blk9	; block 9 START_ADDR
 10351  2138  000002EA           	ddw	__ccov289_end_blk9	; block 9 END_ADDR
 10352  213C  000002E1           	ddw	__ccov288_start_blk8	; block 8 START_ADDR
 10353  2140  000002E2           	ddw	__ccov288_end_blk8	; block 8 END_ADDR
 10354  2144  000002E0           	ddw	__ccov287_start_blk7	; block 7 START_ADDR
 10355  2148  000002E1           	ddw	__ccov287_end_blk7	; block 7 END_ADDR
 10356  214C  000002CB           	ddw	__ccov283_start_blk1	; block 1 START_ADDR
 10357  2150  000002D1           	ddw	__ccov283_end_blk1	; block 1 END_ADDR
 10358  2154  000002C6           	ddw	_ms_tick	; block 0 START_ADDR
 10359  2158  000002CB           	ddw	__ccov282_end_blk0	; block 0 END_ADDR
 10360                           
 10361                           ; Function: ms_tick, coverage: 18,17,16,9,8,7,1,0
 10362  215C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10363  2160  00000024           	ddw	__ccovbit18_148/(0+8)	; CC_ADDR
 10364  2164  00000001           	ddw	1	; NUM_POINTS
 10365  2168  00000002           	ddw	__ccovbit18_148& (0+7)	; OFFSET
 10366  216C  00000000           	ddw	0	; Reserved
 10367  2170  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10368  2174  00000008           	ddw	8	; NUM_RANGES
 10369  2178  00000302           	ddw	__ccov295_start_blk18	; block 18 START_ADDR
 10370  217C  00000306           	ddw	__ccov295_end_blk18	; block 18 END_ADDR
 10371  2180  000002FF           	ddw	__ccov294_start_blk17	; block 17 START_ADDR
 10372  2184  00000302           	ddw	__ccov294_end_blk17	; block 17 END_ADDR
 10373  2188  000002F8           	ddw	__ccov293_start_blk16	; block 16 START_ADDR
 10374  218C  000002FF           	ddw	__ccov293_end_blk16	; block 16 END_ADDR
 10375  2190  000002E2           	ddw	__ccov289_start_blk9	; block 9 START_ADDR
 10376  2194  000002EA           	ddw	__ccov289_end_blk9	; block 9 END_ADDR
 10377  2198  000002E1           	ddw	__ccov288_start_blk8	; block 8 START_ADDR
 10378  219C  000002E2           	ddw	__ccov288_end_blk8	; block 8 END_ADDR
 10379  21A0  000002E0           	ddw	__ccov287_start_blk7	; block 7 START_ADDR
 10380  21A4  000002E1           	ddw	__ccov287_end_blk7	; block 7 END_ADDR
 10381  21A8  000002CB           	ddw	__ccov283_start_blk1	; block 1 START_ADDR
 10382  21AC  000002D1           	ddw	__ccov283_end_blk1	; block 1 END_ADDR
 10383  21B0  000002C6           	ddw	_ms_tick	; block 0 START_ADDR
 10384  21B4  000002CB           	ddw	__ccov282_end_blk0	; block 0 END_ADDR
 10385                           
 10386                           ; Function: ms_tick, coverage: 20,16,9,8,7,1,0
 10387  21B8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10388  21BC  00000024           	ddw	__ccovbit20_149/(0+8)	; CC_ADDR
 10389  21C0  00000001           	ddw	1	; NUM_POINTS
 10390  21C4  00000001           	ddw	__ccovbit20_149& (0+7)	; OFFSET
 10391  21C8  00000000           	ddw	0	; Reserved
 10392  21CC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10393  21D0  00000007           	ddw	7	; NUM_RANGES
 10394  21D4  00000306           	ddw	__ccov296_start_blk20	; block 20 START_ADDR
 10395  21D8  00000308           	ddw	__end_of_ms_tick	; block 20 END_ADDR
 10396  21DC  000002F8           	ddw	__ccov293_start_blk16	; block 16 START_ADDR
 10397  21E0  000002FF           	ddw	__ccov293_end_blk16	; block 16 END_ADDR
 10398  21E4  000002E2           	ddw	__ccov289_start_blk9	; block 9 START_ADDR
 10399  21E8  000002EA           	ddw	__ccov289_end_blk9	; block 9 END_ADDR
 10400  21EC  000002E1           	ddw	__ccov288_start_blk8	; block 8 START_ADDR
 10401  21F0  000002E2           	ddw	__ccov288_end_blk8	; block 8 END_ADDR
 10402  21F4  000002E0           	ddw	__ccov287_start_blk7	; block 7 START_ADDR
 10403  21F8  000002E1           	ddw	__ccov287_end_blk7	; block 7 END_ADDR
 10404  21FC  000002CB           	ddw	__ccov283_start_blk1	; block 1 START_ADDR
 10405  2200  000002D1           	ddw	__ccov283_end_blk1	; block 1 END_ADDR
 10406  2204  000002C6           	ddw	_ms_tick	; block 0 START_ADDR
 10407  2208  000002CB           	ddw	__ccov282_end_blk0	; block 0 END_ADDR
 10408                           
 10409                           ; Function: eeprom_set, coverage: 2,1,0
 10410  220C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10411  2210  00000024           	ddw	__ccovbit2_150/(0+8)	; CC_ADDR
 10412  2214  00000001           	ddw	1	; NUM_POINTS
 10413  2218  00000000           	ddw	__ccovbit2_150& (0+7)	; OFFSET
 10414  221C  00000000           	ddw	0	; Reserved
 10415  2220  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10416  2224  00000003           	ddw	3	; NUM_RANGES
 10417  2228  00000574           	ddw	__ccov299_start_blk2	; block 2 START_ADDR
 10418  222C  0000057B           	ddw	__ccov299_end_blk2	; block 2 END_ADDR
 10419  2230  0000056F           	ddw	__ccov298_start_blk1	; block 1 START_ADDR
 10420  2234  00000574           	ddw	__ccov298_end_blk1	; block 1 END_ADDR
 10421  2238  00000567           	ddw	_eeprom_set	; block 0 START_ADDR
 10422  223C  0000056F           	ddw	__ccov297_end_blk0	; block 0 END_ADDR
 10423                           
 10424                           ; Function: eeprom_set, coverage: 4,1,0
 10425  2240  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10426  2244  00000023           	ddw	__ccovbit4_151/(0+8)	; CC_ADDR
 10427  2248  00000001           	ddw	1	; NUM_POINTS
 10428  224C  00000007           	ddw	__ccovbit4_151& (0+7)	; OFFSET
 10429  2250  00000000           	ddw	0	; Reserved
 10430  2254  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10431  2258  00000003           	ddw	3	; NUM_RANGES
 10432  225C  0000057B           	ddw	__ccov300_start_blk4	; block 4 START_ADDR
 10433  2260  0000057E           	ddw	__end_of_eeprom_set	; block 4 END_ADDR
 10434  2264  0000056F           	ddw	__ccov298_start_blk1	; block 1 START_ADDR
 10435  2268  00000574           	ddw	__ccov298_end_blk1	; block 1 END_ADDR
 10436  226C  00000567           	ddw	_eeprom_set	; block 0 START_ADDR
 10437  2270  0000056F           	ddw	__ccov297_end_blk0	; block 0 END_ADDR
 10438                           
 10439                           ; Function: hardware_work, coverage: 1,0
 10440  2274  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10441  2278  00000023           	ddw	__ccovbit1_152/(0+8)	; CC_ADDR
 10442  227C  00000001           	ddw	1	; NUM_POINTS
 10443  2280  00000006           	ddw	__ccovbit1_152& (0+7)	; OFFSET
 10444  2284  00000000           	ddw	0	; Reserved
 10445  2288  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10446  228C  00000002           	ddw	2	; NUM_RANGES
 10447  2290  00000374           	ddw	__ccov302_start_blk1	; block 1 START_ADDR
 10448  2294  00000377           	ddw	__ccov302_end_blk1	; block 1 END_ADDR
 10449  2298  00000348           	ddw	_hardware_work	; block 0 START_ADDR
 10450  229C  00000374           	ddw	__ccov301_end_blk0	; block 0 END_ADDR
 10451                           
 10452                           ; Function: hardware_work, coverage: 4,3,2,0
 10453  22A0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10454  22A4  00000023           	ddw	__ccovbit4_153/(0+8)	; CC_ADDR
 10455  22A8  00000001           	ddw	1	; NUM_POINTS
 10456  22AC  00000005           	ddw	__ccovbit4_153& (0+7)	; OFFSET
 10457  22B0  00000000           	ddw	0	; Reserved
 10458  22B4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10459  22B8  00000004           	ddw	4	; NUM_RANGES
 10460  22BC  0000037C           	ddw	__ccov305_start_blk4	; block 4 START_ADDR
 10461  22C0  00000380           	ddw	__ccov305_end_blk4	; block 4 END_ADDR
 10462  22C4  0000037B           	ddw	__ccov304_start_blk3	; block 3 START_ADDR
 10463  22C8  0000037C           	ddw	__ccov304_end_blk3	; block 3 END_ADDR
 10464  22CC  00000377           	ddw	__ccov303_start_blk2	; block 2 START_ADDR
 10465  22D0  0000037B           	ddw	__ccov303_end_blk2	; block 2 END_ADDR
 10466  22D4  00000348           	ddw	_hardware_work	; block 0 START_ADDR
 10467  22D8  00000374           	ddw	__ccov301_end_blk0	; block 0 END_ADDR
 10468                           
 10469                           ; Function: hardware_work, coverage: 7,2,0
 10470  22DC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10471  22E0  00000023           	ddw	__ccovbit7_154/(0+8)	; CC_ADDR
 10472  22E4  00000001           	ddw	1	; NUM_POINTS
 10473  22E8  00000004           	ddw	__ccovbit7_154& (0+7)	; OFFSET
 10474  22EC  00000000           	ddw	0	; Reserved
 10475  22F0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10476  22F4  00000003           	ddw	3	; NUM_RANGES
 10477  22F8  00000380           	ddw	__ccov306_start_blk7	; block 7 START_ADDR
 10478  22FC  00000383           	ddw	__end_of_hardware_work	; block 7 END_ADDR
 10479  2300  00000377           	ddw	__ccov303_start_blk2	; block 2 START_ADDR
 10480  2304  0000037B           	ddw	__ccov303_end_blk2	; block 2 END_ADDR
 10481  2308  00000348           	ddw	_hardware_work	; block 0 START_ADDR
 10482  230C  00000374           	ddw	__ccov301_end_blk0	; block 0 END_ADDR
 10483                           
 10484                           ; Function: zummer_switch, coverage: 3,1,0
 10485  2310  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10486  2314  00000023           	ddw	__ccovbit3_155/(0+8)	; CC_ADDR
 10487  2318  00000001           	ddw	1	; NUM_POINTS
 10488  231C  00000003           	ddw	__ccovbit3_155& (0+7)	; OFFSET
 10489  2320  00000000           	ddw	0	; Reserved
 10490  2324  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10491  2328  00000002           	ddw	2	; NUM_RANGES
 10492  232C  00000671           	ddw	__ccov309_start_blk3	; block 3 START_ADDR
 10493  2330  00000674           	ddw	__end_of_zummer_switch	; block 3 END_ADDR
 10494  2334  00000665           	ddw	_zummer_switch	; block 1 START_ADDR
 10495  2338  00000671           	ddw	__ccov308_end_blk1	; block 1 END_ADDR
 10496                           
 10497                           ; Function: get_wsp, coverage: 14,13,11,8,6,5,3,1,0
 10498  233C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10499  2340  00000023           	ddw	__ccovbit14_156/(0+8)	; CC_ADDR
 10500  2344  00000001           	ddw	1	; NUM_POINTS
 10501  2348  00000002           	ddw	__ccovbit14_156& (0+7)	; OFFSET
 10502  234C  00000000           	ddw	0	; Reserved
 10503  2350  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10504  2354  00000009           	ddw	9	; NUM_RANGES
 10505  2358  0000015A           	ddw	__ccov318_start_blk14	; block 14 START_ADDR
 10506  235C  00000160           	ddw	__ccov318_end_blk14	; block 14 END_ADDR
 10507  2360  00000150           	ddw	__ccov317_start_blk13	; block 13 START_ADDR
 10508  2364  0000015A           	ddw	__ccov317_end_blk13	; block 13 END_ADDR
 10509  2368  0000014E           	ddw	__ccov316_start_blk11	; block 11 START_ADDR
 10510  236C  00000150           	ddw	__ccov316_end_blk11	; block 11 END_ADDR
 10511  2370  0000014C           	ddw	__ccov315_start_blk8	; block 8 START_ADDR
 10512  2374  0000014E           	ddw	__ccov315_end_blk8	; block 8 END_ADDR
 10513  2378  00000141           	ddw	__ccov314_start_blk6	; block 6 START_ADDR
 10514  237C  0000014C           	ddw	__ccov314_end_blk6	; block 6 END_ADDR
 10515  2380  00000139           	ddw	__ccov313_start_blk5	; block 5 START_ADDR
 10516  2384  00000141           	ddw	__ccov313_end_blk5	; block 5 END_ADDR
 10517  2388  00000137           	ddw	__ccov312_start_blk3	; block 3 START_ADDR
 10518  238C  00000139           	ddw	__ccov312_end_blk3	; block 3 END_ADDR
 10519  2390  00000135           	ddw	__ccov311_start_blk1	; block 1 START_ADDR
 10520  2394  00000137           	ddw	__ccov311_end_blk1	; block 1 END_ADDR
 10521  2398  00000131           	ddw	_get_wsp	; block 0 START_ADDR
 10522  239C  00000135           	ddw	__ccov310_end_blk0	; block 0 END_ADDR
 10523                           
 10524                           ; Function: get_wsp, coverage: 16,13,11,8,6,5,3,1,0
 10525  23A0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10526  23A4  00000023           	ddw	__ccovbit16_157/(0+8)	; CC_ADDR
 10527  23A8  00000001           	ddw	1	; NUM_POINTS
 10528  23AC  00000001           	ddw	__ccovbit16_157& (0+7)	; OFFSET
 10529  23B0  00000000           	ddw	0	; Reserved
 10530  23B4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10531  23B8  00000009           	ddw	9	; NUM_RANGES
 10532  23BC  00000160           	ddw	__ccov319_start_blk16	; block 16 START_ADDR
 10533  23C0  0000016A           	ddw	__ccov319_end_blk16	; block 16 END_ADDR
 10534  23C4  00000150           	ddw	__ccov317_start_blk13	; block 13 START_ADDR
 10535  23C8  0000015A           	ddw	__ccov317_end_blk13	; block 13 END_ADDR
 10536  23CC  0000014E           	ddw	__ccov316_start_blk11	; block 11 START_ADDR
 10537  23D0  00000150           	ddw	__ccov316_end_blk11	; block 11 END_ADDR
 10538  23D4  0000014C           	ddw	__ccov315_start_blk8	; block 8 START_ADDR
 10539  23D8  0000014E           	ddw	__ccov315_end_blk8	; block 8 END_ADDR
 10540  23DC  00000141           	ddw	__ccov314_start_blk6	; block 6 START_ADDR
 10541  23E0  0000014C           	ddw	__ccov314_end_blk6	; block 6 END_ADDR
 10542  23E4  00000139           	ddw	__ccov313_start_blk5	; block 5 START_ADDR
 10543  23E8  00000141           	ddw	__ccov313_end_blk5	; block 5 END_ADDR
 10544  23EC  00000137           	ddw	__ccov312_start_blk3	; block 3 START_ADDR
 10545  23F0  00000139           	ddw	__ccov312_end_blk3	; block 3 END_ADDR
 10546  23F4  00000135           	ddw	__ccov311_start_blk1	; block 1 START_ADDR
 10547  23F8  00000137           	ddw	__ccov311_end_blk1	; block 1 END_ADDR
 10548  23FC  00000131           	ddw	_get_wsp	; block 0 START_ADDR
 10549  2400  00000135           	ddw	__ccov310_end_blk0	; block 0 END_ADDR
 10550                           
 10551                           ; Function: get_wsp, coverage: 17,16,13,11,8,6,5,3,1,0
 10552  2404  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10553  2408  00000023           	ddw	__ccovbit17_158/(0+8)	; CC_ADDR
 10554  240C  00000001           	ddw	1	; NUM_POINTS
 10555  2410  00000000           	ddw	__ccovbit17_158& (0+7)	; OFFSET
 10556  2414  00000000           	ddw	0	; Reserved
 10557  2418  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10558  241C  0000000A           	ddw	10	; NUM_RANGES
 10559  2420  0000016A           	ddw	__ccov320_start_blk17	; block 17 START_ADDR
 10560  2424  0000016F           	ddw	__ccov320_end_blk17	; block 17 END_ADDR
 10561  2428  00000160           	ddw	__ccov319_start_blk16	; block 16 START_ADDR
 10562  242C  0000016A           	ddw	__ccov319_end_blk16	; block 16 END_ADDR
 10563  2430  00000150           	ddw	__ccov317_start_blk13	; block 13 START_ADDR
 10564  2434  0000015A           	ddw	__ccov317_end_blk13	; block 13 END_ADDR
 10565  2438  0000014E           	ddw	__ccov316_start_blk11	; block 11 START_ADDR
 10566  243C  00000150           	ddw	__ccov316_end_blk11	; block 11 END_ADDR
 10567  2440  0000014C           	ddw	__ccov315_start_blk8	; block 8 START_ADDR
 10568  2444  0000014E           	ddw	__ccov315_end_blk8	; block 8 END_ADDR
 10569  2448  00000141           	ddw	__ccov314_start_blk6	; block 6 START_ADDR
 10570  244C  0000014C           	ddw	__ccov314_end_blk6	; block 6 END_ADDR
 10571  2450  00000139           	ddw	__ccov313_start_blk5	; block 5 START_ADDR
 10572  2454  00000141           	ddw	__ccov313_end_blk5	; block 5 END_ADDR
 10573  2458  00000137           	ddw	__ccov312_start_blk3	; block 3 START_ADDR
 10574  245C  00000139           	ddw	__ccov312_end_blk3	; block 3 END_ADDR
 10575  2460  00000135           	ddw	__ccov311_start_blk1	; block 1 START_ADDR
 10576  2464  00000137           	ddw	__ccov311_end_blk1	; block 1 END_ADDR
 10577  2468  00000131           	ddw	_get_wsp	; block 0 START_ADDR
 10578  246C  00000135           	ddw	__ccov310_end_blk0	; block 0 END_ADDR
 10579                           
 10580                           ; Function: get_wsp, coverage: 22,21,20,13,11,8,6,5,3,1,0
 10581  2470  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10582  2474  00000022           	ddw	__ccovbit22_159/(0+8)	; CC_ADDR
 10583  2478  00000001           	ddw	1	; NUM_POINTS
 10584  247C  00000007           	ddw	__ccovbit22_159& (0+7)	; OFFSET
 10585  2480  00000000           	ddw	0	; Reserved
 10586  2484  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10587  2488  0000000B           	ddw	11	; NUM_RANGES
 10588  248C  00000179           	ddw	__ccov323_start_blk22	; block 22 START_ADDR
 10589  2490  0000017F           	ddw	__ccov323_end_blk22	; block 22 END_ADDR
 10590  2494  00000176           	ddw	__ccov322_start_blk21	; block 21 START_ADDR
 10591  2498  00000179           	ddw	__ccov322_end_blk21	; block 21 END_ADDR
 10592  249C  0000016F           	ddw	__ccov321_start_blk20	; block 20 START_ADDR
 10593  24A0  00000176           	ddw	__ccov321_end_blk20	; block 20 END_ADDR
 10594  24A4  00000150           	ddw	__ccov317_start_blk13	; block 13 START_ADDR
 10595  24A8  0000015A           	ddw	__ccov317_end_blk13	; block 13 END_ADDR
 10596  24AC  0000014E           	ddw	__ccov316_start_blk11	; block 11 START_ADDR
 10597  24B0  00000150           	ddw	__ccov316_end_blk11	; block 11 END_ADDR
 10598  24B4  0000014C           	ddw	__ccov315_start_blk8	; block 8 START_ADDR
 10599  24B8  0000014E           	ddw	__ccov315_end_blk8	; block 8 END_ADDR
 10600  24BC  00000141           	ddw	__ccov314_start_blk6	; block 6 START_ADDR
 10601  24C0  0000014C           	ddw	__ccov314_end_blk6	; block 6 END_ADDR
 10602  24C4  00000139           	ddw	__ccov313_start_blk5	; block 5 START_ADDR
 10603  24C8  00000141           	ddw	__ccov313_end_blk5	; block 5 END_ADDR
 10604  24CC  00000137           	ddw	__ccov312_start_blk3	; block 3 START_ADDR
 10605  24D0  00000139           	ddw	__ccov312_end_blk3	; block 3 END_ADDR
 10606  24D4  00000135           	ddw	__ccov311_start_blk1	; block 1 START_ADDR
 10607  24D8  00000137           	ddw	__ccov311_end_blk1	; block 1 END_ADDR
 10608  24DC  00000131           	ddw	_get_wsp	; block 0 START_ADDR
 10609  24E0  00000135           	ddw	__ccov310_end_blk0	; block 0 END_ADDR
 10610                           
 10611                           ; Function: get_wsp, coverage: 26,25,24,20,13,11,8,6,5,3,1,0
 10612  24E4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10613  24E8  00000022           	ddw	__ccovbit26_160/(0+8)	; CC_ADDR
 10614  24EC  00000001           	ddw	1	; NUM_POINTS
 10615  24F0  00000006           	ddw	__ccovbit26_160& (0+7)	; OFFSET
 10616  24F4  00000000           	ddw	0	; Reserved
 10617  24F8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10618  24FC  0000000C           	ddw	12	; NUM_RANGES
 10619  2500  00000189           	ddw	__ccov326_start_blk26	; block 26 START_ADDR
 10620  2504  0000018F           	ddw	__ccov326_end_blk26	; block 26 END_ADDR
 10621  2508  00000186           	ddw	__ccov325_start_blk25	; block 25 START_ADDR
 10622  250C  00000189           	ddw	__ccov325_end_blk25	; block 25 END_ADDR
 10623  2510  0000017F           	ddw	__ccov324_start_blk24	; block 24 START_ADDR
 10624  2514  00000186           	ddw	__ccov324_end_blk24	; block 24 END_ADDR
 10625  2518  0000016F           	ddw	__ccov321_start_blk20	; block 20 START_ADDR
 10626  251C  00000176           	ddw	__ccov321_end_blk20	; block 20 END_ADDR
 10627  2520  00000150           	ddw	__ccov317_start_blk13	; block 13 START_ADDR
 10628  2524  0000015A           	ddw	__ccov317_end_blk13	; block 13 END_ADDR
 10629  2528  0000014E           	ddw	__ccov316_start_blk11	; block 11 START_ADDR
 10630  252C  00000150           	ddw	__ccov316_end_blk11	; block 11 END_ADDR
 10631  2530  0000014C           	ddw	__ccov315_start_blk8	; block 8 START_ADDR
 10632  2534  0000014E           	ddw	__ccov315_end_blk8	; block 8 END_ADDR
 10633  2538  00000141           	ddw	__ccov314_start_blk6	; block 6 START_ADDR
 10634  253C  0000014C           	ddw	__ccov314_end_blk6	; block 6 END_ADDR
 10635  2540  00000139           	ddw	__ccov313_start_blk5	; block 5 START_ADDR
 10636  2544  00000141           	ddw	__ccov313_end_blk5	; block 5 END_ADDR
 10637  2548  00000137           	ddw	__ccov312_start_blk3	; block 3 START_ADDR
 10638  254C  00000139           	ddw	__ccov312_end_blk3	; block 3 END_ADDR
 10639  2550  00000135           	ddw	__ccov311_start_blk1	; block 1 START_ADDR
 10640  2554  00000137           	ddw	__ccov311_end_blk1	; block 1 END_ADDR
 10641  2558  00000131           	ddw	_get_wsp	; block 0 START_ADDR
 10642  255C  00000135           	ddw	__ccov310_end_blk0	; block 0 END_ADDR
 10643                           
 10644                           ; Function: get_wsp, coverage: 28,24,20,13,11,8,6,5,3,1,0
 10645  2560  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10646  2564  00000022           	ddw	__ccovbit28_161/(0+8)	; CC_ADDR
 10647  2568  00000001           	ddw	1	; NUM_POINTS
 10648  256C  00000005           	ddw	__ccovbit28_161& (0+7)	; OFFSET
 10649  2570  00000000           	ddw	0	; Reserved
 10650  2574  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10651  2578  0000000B           	ddw	11	; NUM_RANGES
 10652  257C  0000018F           	ddw	__ccov327_start_blk28	; block 28 START_ADDR
 10653  2580  00000191           	ddw	__ccov327_end_blk28	; block 28 END_ADDR
 10654  2584  0000017F           	ddw	__ccov324_start_blk24	; block 24 START_ADDR
 10655  2588  00000186           	ddw	__ccov324_end_blk24	; block 24 END_ADDR
 10656  258C  0000016F           	ddw	__ccov321_start_blk20	; block 20 START_ADDR
 10657  2590  00000176           	ddw	__ccov321_end_blk20	; block 20 END_ADDR
 10658  2594  00000150           	ddw	__ccov317_start_blk13	; block 13 START_ADDR
 10659  2598  0000015A           	ddw	__ccov317_end_blk13	; block 13 END_ADDR
 10660  259C  0000014E           	ddw	__ccov316_start_blk11	; block 11 START_ADDR
 10661  25A0  00000150           	ddw	__ccov316_end_blk11	; block 11 END_ADDR
 10662  25A4  0000014C           	ddw	__ccov315_start_blk8	; block 8 START_ADDR
 10663  25A8  0000014E           	ddw	__ccov315_end_blk8	; block 8 END_ADDR
 10664  25AC  00000141           	ddw	__ccov314_start_blk6	; block 6 START_ADDR
 10665  25B0  0000014C           	ddw	__ccov314_end_blk6	; block 6 END_ADDR
 10666  25B4  00000139           	ddw	__ccov313_start_blk5	; block 5 START_ADDR
 10667  25B8  00000141           	ddw	__ccov313_end_blk5	; block 5 END_ADDR
 10668  25BC  00000137           	ddw	__ccov312_start_blk3	; block 3 START_ADDR
 10669  25C0  00000139           	ddw	__ccov312_end_blk3	; block 3 END_ADDR
 10670  25C4  00000135           	ddw	__ccov311_start_blk1	; block 1 START_ADDR
 10671  25C8  00000137           	ddw	__ccov311_end_blk1	; block 1 END_ADDR
 10672  25CC  00000131           	ddw	_get_wsp	; block 0 START_ADDR
 10673  25D0  00000135           	ddw	__ccov310_end_blk0	; block 0 END_ADDR
 10674                           
 10675                           ; Function: get_wsp, coverage: 30,0
 10676  25D4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10677  25D8  00000022           	ddw	__ccovbit30_162/(0+8)	; CC_ADDR
 10678  25DC  00000001           	ddw	1	; NUM_POINTS
 10679  25E0  00000004           	ddw	__ccovbit30_162& (0+7)	; OFFSET
 10680  25E4  00000000           	ddw	0	; Reserved
 10681  25E8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10682  25EC  00000002           	ddw	2	; NUM_RANGES
 10683  25F0  00000191           	ddw	__ccov328_start_blk30	; block 30 START_ADDR
 10684  25F4  00000194           	ddw	__end_of_get_wsp	; block 30 END_ADDR
 10685  25F8  00000131           	ddw	_get_wsp	; block 0 START_ADDR
 10686  25FC  00000135           	ddw	__ccov310_end_blk0	; block 0 END_ADDR
 10687                           
 10688                           ; Function: get_fun, coverage: 11,10,8,5,3,1,0
 10689  2600  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10690  2604  00000022           	ddw	__ccovbit11_163/(0+8)	; CC_ADDR
 10691  2608  00000001           	ddw	1	; NUM_POINTS
 10692  260C  00000003           	ddw	__ccovbit11_163& (0+7)	; OFFSET
 10693  2610  00000000           	ddw	0	; Reserved
 10694  2614  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10695  2618  00000007           	ddw	7	; NUM_RANGES
 10696  261C  0000020A           	ddw	__ccov335_start_blk11	; block 11 START_ADDR
 10697  2620  00000210           	ddw	__ccov335_end_blk11	; block 11 END_ADDR
 10698  2624  00000205           	ddw	__ccov334_start_blk10	; block 10 START_ADDR
 10699  2628  0000020A           	ddw	__ccov334_end_blk10	; block 10 END_ADDR
 10700  262C  00000203           	ddw	__ccov333_start_blk8	; block 8 START_ADDR
 10701  2630  00000205           	ddw	__ccov333_end_blk8	; block 8 END_ADDR
 10702  2634  00000201           	ddw	__ccov332_start_blk5	; block 5 START_ADDR
 10703  2638  00000203           	ddw	__ccov332_end_blk5	; block 5 END_ADDR
 10704  263C  000001F9           	ddw	__ccov331_start_blk3	; block 3 START_ADDR
 10705  2640  00000201           	ddw	__ccov331_end_blk3	; block 3 END_ADDR
 10706  2644  000001F7           	ddw	__ccov330_start_blk1	; block 1 START_ADDR
 10707  2648  000001F9           	ddw	__ccov330_end_blk1	; block 1 END_ADDR
 10708  264C  000001F3           	ddw	_get_fun	; block 0 START_ADDR
 10709  2650  000001F7           	ddw	__ccov329_end_blk0	; block 0 END_ADDR
 10710                           
 10711                           ; Function: get_fun, coverage: 13,10,8,5,3,1,0
 10712  2654  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10713  2658  00000022           	ddw	__ccovbit13_164/(0+8)	; CC_ADDR
 10714  265C  00000001           	ddw	1	; NUM_POINTS
 10715  2660  00000002           	ddw	__ccovbit13_164& (0+7)	; OFFSET
 10716  2664  00000000           	ddw	0	; Reserved
 10717  2668  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10718  266C  00000007           	ddw	7	; NUM_RANGES
 10719  2670  00000210           	ddw	__ccov336_start_blk13	; block 13 START_ADDR
 10720  2674  00000215           	ddw	__ccov336_end_blk13	; block 13 END_ADDR
 10721  2678  00000205           	ddw	__ccov334_start_blk10	; block 10 START_ADDR
 10722  267C  0000020A           	ddw	__ccov334_end_blk10	; block 10 END_ADDR
 10723  2680  00000203           	ddw	__ccov333_start_blk8	; block 8 START_ADDR
 10724  2684  00000205           	ddw	__ccov333_end_blk8	; block 8 END_ADDR
 10725  2688  00000201           	ddw	__ccov332_start_blk5	; block 5 START_ADDR
 10726  268C  00000203           	ddw	__ccov332_end_blk5	; block 5 END_ADDR
 10727  2690  000001F9           	ddw	__ccov331_start_blk3	; block 3 START_ADDR
 10728  2694  00000201           	ddw	__ccov331_end_blk3	; block 3 END_ADDR
 10729  2698  000001F7           	ddw	__ccov330_start_blk1	; block 1 START_ADDR
 10730  269C  000001F9           	ddw	__ccov330_end_blk1	; block 1 END_ADDR
 10731  26A0  000001F3           	ddw	_get_fun	; block 0 START_ADDR
 10732  26A4  000001F7           	ddw	__ccov329_end_blk0	; block 0 END_ADDR
 10733                           
 10734                           ; Function: get_fun, coverage: 21,20,19,18,16,10,8,5,3,1,0
 10735  26A8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10736  26AC  00000022           	ddw	__ccovbit21_165/(0+8)	; CC_ADDR
 10737  26B0  00000001           	ddw	1	; NUM_POINTS
 10738  26B4  00000001           	ddw	__ccovbit21_165& (0+7)	; OFFSET
 10739  26B8  00000000           	ddw	0	; Reserved
 10740  26BC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10741  26C0  0000000B           	ddw	11	; NUM_RANGES
 10742  26C4  00000224           	ddw	__ccov341_start_blk21	; block 21 START_ADDR
 10743  26C8  00000227           	ddw	__ccov341_end_blk21	; block 21 END_ADDR
 10744  26CC  00000223           	ddw	__ccov340_start_blk20	; block 20 START_ADDR
 10745  26D0  00000224           	ddw	__ccov340_end_blk20	; block 20 END_ADDR
 10746  26D4  0000021F           	ddw	__ccov339_start_blk19	; block 19 START_ADDR
 10747  26D8  00000223           	ddw	__ccov339_end_blk19	; block 19 END_ADDR
 10748  26DC  00000217           	ddw	__ccov338_start_blk18	; block 18 START_ADDR
 10749  26E0  0000021F           	ddw	__ccov338_end_blk18	; block 18 END_ADDR
 10750  26E4  00000215           	ddw	__ccov337_start_blk16	; block 16 START_ADDR
 10751  26E8  00000217           	ddw	__ccov337_end_blk16	; block 16 END_ADDR
 10752  26EC  00000205           	ddw	__ccov334_start_blk10	; block 10 START_ADDR
 10753  26F0  0000020A           	ddw	__ccov334_end_blk10	; block 10 END_ADDR
 10754  26F4  00000203           	ddw	__ccov333_start_blk8	; block 8 START_ADDR
 10755  26F8  00000205           	ddw	__ccov333_end_blk8	; block 8 END_ADDR
 10756  26FC  00000201           	ddw	__ccov332_start_blk5	; block 5 START_ADDR
 10757  2700  00000203           	ddw	__ccov332_end_blk5	; block 5 END_ADDR
 10758  2704  000001F9           	ddw	__ccov331_start_blk3	; block 3 START_ADDR
 10759  2708  00000201           	ddw	__ccov331_end_blk3	; block 3 END_ADDR
 10760  270C  000001F7           	ddw	__ccov330_start_blk1	; block 1 START_ADDR
 10761  2710  000001F9           	ddw	__ccov330_end_blk1	; block 1 END_ADDR
 10762  2714  000001F3           	ddw	_get_fun	; block 0 START_ADDR
 10763  2718  000001F7           	ddw	__ccov329_end_blk0	; block 0 END_ADDR
 10764                           
 10765                           ; Function: get_fun, coverage: 23,18,16,10,8,5,3,1,0
 10766  271C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10767  2720  00000022           	ddw	__ccovbit23_166/(0+8)	; CC_ADDR
 10768  2724  00000001           	ddw	1	; NUM_POINTS
 10769  2728  00000000           	ddw	__ccovbit23_166& (0+7)	; OFFSET
 10770  272C  00000000           	ddw	0	; Reserved
 10771  2730  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10772  2734  00000009           	ddw	9	; NUM_RANGES
 10773  2738  00000227           	ddw	__ccov342_start_blk23	; block 23 START_ADDR
 10774  273C  0000022F           	ddw	__ccov342_end_blk23	; block 23 END_ADDR
 10775  2740  00000217           	ddw	__ccov338_start_blk18	; block 18 START_ADDR
 10776  2744  0000021F           	ddw	__ccov338_end_blk18	; block 18 END_ADDR
 10777  2748  00000215           	ddw	__ccov337_start_blk16	; block 16 START_ADDR
 10778  274C  00000217           	ddw	__ccov337_end_blk16	; block 16 END_ADDR
 10779  2750  00000205           	ddw	__ccov334_start_blk10	; block 10 START_ADDR
 10780  2754  0000020A           	ddw	__ccov334_end_blk10	; block 10 END_ADDR
 10781  2758  00000203           	ddw	__ccov333_start_blk8	; block 8 START_ADDR
 10782  275C  00000205           	ddw	__ccov333_end_blk8	; block 8 END_ADDR
 10783  2760  00000201           	ddw	__ccov332_start_blk5	; block 5 START_ADDR
 10784  2764  00000203           	ddw	__ccov332_end_blk5	; block 5 END_ADDR
 10785  2768  000001F9           	ddw	__ccov331_start_blk3	; block 3 START_ADDR
 10786  276C  00000201           	ddw	__ccov331_end_blk3	; block 3 END_ADDR
 10787  2770  000001F7           	ddw	__ccov330_start_blk1	; block 1 START_ADDR
 10788  2774  000001F9           	ddw	__ccov330_end_blk1	; block 1 END_ADDR
 10789  2778  000001F3           	ddw	_get_fun	; block 0 START_ADDR
 10790  277C  000001F7           	ddw	__ccov329_end_blk0	; block 0 END_ADDR
 10791                           
 10792                           ; Function: get_fun, coverage: 26,25,24,23,18,16,10,8,5,3,1,0
 10793  2780  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10794  2784  00000021           	ddw	__ccovbit26_167/(0+8)	; CC_ADDR
 10795  2788  00000001           	ddw	1	; NUM_POINTS
 10796  278C  00000007           	ddw	__ccovbit26_167& (0+7)	; OFFSET
 10797  2790  00000000           	ddw	0	; Reserved
 10798  2794  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10799  2798  0000000C           	ddw	12	; NUM_RANGES
 10800  279C  00000234           	ddw	__ccov345_start_blk26	; block 26 START_ADDR
 10801  27A0  00000236           	ddw	__ccov345_end_blk26	; block 26 END_ADDR
 10802  27A4  00000233           	ddw	__ccov344_start_blk25	; block 25 START_ADDR
 10803  27A8  00000234           	ddw	__ccov344_end_blk25	; block 25 END_ADDR
 10804  27AC  0000022F           	ddw	__ccov343_start_blk24	; block 24 START_ADDR
 10805  27B0  00000233           	ddw	__ccov343_end_blk24	; block 24 END_ADDR
 10806  27B4  00000227           	ddw	__ccov342_start_blk23	; block 23 START_ADDR
 10807  27B8  0000022F           	ddw	__ccov342_end_blk23	; block 23 END_ADDR
 10808  27BC  00000217           	ddw	__ccov338_start_blk18	; block 18 START_ADDR
 10809  27C0  0000021F           	ddw	__ccov338_end_blk18	; block 18 END_ADDR
 10810  27C4  00000215           	ddw	__ccov337_start_blk16	; block 16 START_ADDR
 10811  27C8  00000217           	ddw	__ccov337_end_blk16	; block 16 END_ADDR
 10812  27CC  00000205           	ddw	__ccov334_start_blk10	; block 10 START_ADDR
 10813  27D0  0000020A           	ddw	__ccov334_end_blk10	; block 10 END_ADDR
 10814  27D4  00000203           	ddw	__ccov333_start_blk8	; block 8 START_ADDR
 10815  27D8  00000205           	ddw	__ccov333_end_blk8	; block 8 END_ADDR
 10816  27DC  00000201           	ddw	__ccov332_start_blk5	; block 5 START_ADDR
 10817  27E0  00000203           	ddw	__ccov332_end_blk5	; block 5 END_ADDR
 10818  27E4  000001F9           	ddw	__ccov331_start_blk3	; block 3 START_ADDR
 10819  27E8  00000201           	ddw	__ccov331_end_blk3	; block 3 END_ADDR
 10820  27EC  000001F7           	ddw	__ccov330_start_blk1	; block 1 START_ADDR
 10821  27F0  000001F9           	ddw	__ccov330_end_blk1	; block 1 END_ADDR
 10822  27F4  000001F3           	ddw	_get_fun	; block 0 START_ADDR
 10823  27F8  000001F7           	ddw	__ccov329_end_blk0	; block 0 END_ADDR
 10824                           
 10825                           ; Function: get_fun, coverage: 29,18,16,10,8,5,3,1,0
 10826  27FC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10827  2800  00000021           	ddw	__ccovbit29_168/(0+8)	; CC_ADDR
 10828  2804  00000001           	ddw	1	; NUM_POINTS
 10829  2808  00000006           	ddw	__ccovbit29_168& (0+7)	; OFFSET
 10830  280C  00000000           	ddw	0	; Reserved
 10831  2810  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10832  2814  00000009           	ddw	9	; NUM_RANGES
 10833  2818  00000236           	ddw	__ccov346_start_blk29	; block 29 START_ADDR
 10834  281C  00000238           	ddw	__ccov346_end_blk29	; block 29 END_ADDR
 10835  2820  00000217           	ddw	__ccov338_start_blk18	; block 18 START_ADDR
 10836  2824  0000021F           	ddw	__ccov338_end_blk18	; block 18 END_ADDR
 10837  2828  00000215           	ddw	__ccov337_start_blk16	; block 16 START_ADDR
 10838  282C  00000217           	ddw	__ccov337_end_blk16	; block 16 END_ADDR
 10839  2830  00000205           	ddw	__ccov334_start_blk10	; block 10 START_ADDR
 10840  2834  0000020A           	ddw	__ccov334_end_blk10	; block 10 END_ADDR
 10841  2838  00000203           	ddw	__ccov333_start_blk8	; block 8 START_ADDR
 10842  283C  00000205           	ddw	__ccov333_end_blk8	; block 8 END_ADDR
 10843  2840  00000201           	ddw	__ccov332_start_blk5	; block 5 START_ADDR
 10844  2844  00000203           	ddw	__ccov332_end_blk5	; block 5 END_ADDR
 10845  2848  000001F9           	ddw	__ccov331_start_blk3	; block 3 START_ADDR
 10846  284C  00000201           	ddw	__ccov331_end_blk3	; block 3 END_ADDR
 10847  2850  000001F7           	ddw	__ccov330_start_blk1	; block 1 START_ADDR
 10848  2854  000001F9           	ddw	__ccov330_end_blk1	; block 1 END_ADDR
 10849  2858  000001F3           	ddw	_get_fun	; block 0 START_ADDR
 10850  285C  000001F7           	ddw	__ccov329_end_blk0	; block 0 END_ADDR
 10851                           
 10852                           ; Function: get_fun, coverage: 31,0
 10853  2860  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10854  2864  00000021           	ddw	__ccovbit31_169/(0+8)	; CC_ADDR
 10855  2868  00000001           	ddw	1	; NUM_POINTS
 10856  286C  00000005           	ddw	__ccovbit31_169& (0+7)	; OFFSET
 10857  2870  00000000           	ddw	0	; Reserved
 10858  2874  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10859  2878  00000002           	ddw	2	; NUM_RANGES
 10860  287C  00000238           	ddw	__ccov347_start_blk31	; block 31 START_ADDR
 10861  2880  0000023B           	ddw	__end_of_get_fun	; block 31 END_ADDR
 10862  2884  000001F3           	ddw	_get_fun	; block 0 START_ADDR
 10863  2888  000001F7           	ddw	__ccov329_end_blk0	; block 0 END_ADDR
 10864                           
 10865                           ; Function: get_jump, coverage: 5,4,3,1,0
 10866  288C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10867  2890  00000021           	ddw	__ccovbit5_170/(0+8)	; CC_ADDR
 10868  2894  00000001           	ddw	1	; NUM_POINTS
 10869  2898  00000004           	ddw	__ccovbit5_170& (0+7)	; OFFSET
 10870  289C  00000000           	ddw	0	; Reserved
 10871  28A0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10872  28A4  00000005           	ddw	5	; NUM_RANGES
 10873  28A8  00000390           	ddw	__ccov352_start_blk5	; block 5 START_ADDR
 10874  28AC  00000396           	ddw	__ccov352_end_blk5	; block 5 END_ADDR
 10875  28B0  0000038B           	ddw	__ccov351_start_blk4	; block 4 START_ADDR
 10876  28B4  00000390           	ddw	__ccov351_end_blk4	; block 4 END_ADDR
 10877  28B8  00000389           	ddw	__ccov350_start_blk3	; block 3 START_ADDR
 10878  28BC  0000038B           	ddw	__ccov350_end_blk3	; block 3 END_ADDR
 10879  28C0  00000387           	ddw	__ccov349_start_blk1	; block 1 START_ADDR
 10880  28C4  00000389           	ddw	__ccov349_end_blk1	; block 1 END_ADDR
 10881  28C8  00000383           	ddw	_get_jump	; block 0 START_ADDR
 10882  28CC  00000387           	ddw	__ccov348_end_blk0	; block 0 END_ADDR
 10883                           
 10884                           ; Function: get_jump, coverage: 7,4,3,1,0
 10885  28D0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10886  28D4  00000021           	ddw	__ccovbit7_171/(0+8)	; CC_ADDR
 10887  28D8  00000001           	ddw	1	; NUM_POINTS
 10888  28DC  00000003           	ddw	__ccovbit7_171& (0+7)	; OFFSET
 10889  28E0  00000000           	ddw	0	; Reserved
 10890  28E4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10891  28E8  00000005           	ddw	5	; NUM_RANGES
 10892  28EC  00000396           	ddw	__ccov353_start_blk7	; block 7 START_ADDR
 10893  28F0  0000039B           	ddw	__ccov353_end_blk7	; block 7 END_ADDR
 10894  28F4  0000038B           	ddw	__ccov351_start_blk4	; block 4 START_ADDR
 10895  28F8  00000390           	ddw	__ccov351_end_blk4	; block 4 END_ADDR
 10896  28FC  00000389           	ddw	__ccov350_start_blk3	; block 3 START_ADDR
 10897  2900  0000038B           	ddw	__ccov350_end_blk3	; block 3 END_ADDR
 10898  2904  00000387           	ddw	__ccov349_start_blk1	; block 1 START_ADDR
 10899  2908  00000389           	ddw	__ccov349_end_blk1	; block 1 END_ADDR
 10900  290C  00000383           	ddw	_get_jump	; block 0 START_ADDR
 10901  2910  00000387           	ddw	__ccov348_end_blk0	; block 0 END_ADDR
 10902                           
 10903                           ; Function: get_jump, coverage: 12,11,10,9,4,3,1,0
 10904  2914  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10905  2918  00000021           	ddw	__ccovbit12_172/(0+8)	; CC_ADDR
 10906  291C  00000001           	ddw	1	; NUM_POINTS
 10907  2920  00000002           	ddw	__ccovbit12_172& (0+7)	; OFFSET
 10908  2924  00000000           	ddw	0	; Reserved
 10909  2928  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10910  292C  00000008           	ddw	8	; NUM_RANGES
 10911  2930  000003A7           	ddw	__ccov357_start_blk12	; block 12 START_ADDR
 10912  2934  000003AA           	ddw	__ccov357_end_blk12	; block 12 END_ADDR
 10913  2938  000003A6           	ddw	__ccov356_start_blk11	; block 11 START_ADDR
 10914  293C  000003A7           	ddw	__ccov356_end_blk11	; block 11 END_ADDR
 10915  2940  000003A2           	ddw	__ccov355_start_blk10	; block 10 START_ADDR
 10916  2944  000003A6           	ddw	__ccov355_end_blk10	; block 10 END_ADDR
 10917  2948  0000039B           	ddw	__ccov354_start_blk9	; block 9 START_ADDR
 10918  294C  000003A2           	ddw	__ccov354_end_blk9	; block 9 END_ADDR
 10919  2950  0000038B           	ddw	__ccov351_start_blk4	; block 4 START_ADDR
 10920  2954  00000390           	ddw	__ccov351_end_blk4	; block 4 END_ADDR
 10921  2958  00000389           	ddw	__ccov350_start_blk3	; block 3 START_ADDR
 10922  295C  0000038B           	ddw	__ccov350_end_blk3	; block 3 END_ADDR
 10923  2960  00000387           	ddw	__ccov349_start_blk1	; block 1 START_ADDR
 10924  2964  00000389           	ddw	__ccov349_end_blk1	; block 1 END_ADDR
 10925  2968  00000383           	ddw	_get_jump	; block 0 START_ADDR
 10926  296C  00000387           	ddw	__ccov348_end_blk0	; block 0 END_ADDR
 10927                           
 10928                           ; Function: get_jump, coverage: 14,9,4,3,1,0
 10929  2970  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10930  2974  00000021           	ddw	__ccovbit14_173/(0+8)	; CC_ADDR
 10931  2978  00000001           	ddw	1	; NUM_POINTS
 10932  297C  00000001           	ddw	__ccovbit14_173& (0+7)	; OFFSET
 10933  2980  00000000           	ddw	0	; Reserved
 10934  2984  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10935  2988  00000006           	ddw	6	; NUM_RANGES
 10936  298C  000003AA           	ddw	__ccov358_start_blk14	; block 14 START_ADDR
 10937  2990  000003B2           	ddw	__ccov358_end_blk14	; block 14 END_ADDR
 10938  2994  0000039B           	ddw	__ccov354_start_blk9	; block 9 START_ADDR
 10939  2998  000003A2           	ddw	__ccov354_end_blk9	; block 9 END_ADDR
 10940  299C  0000038B           	ddw	__ccov351_start_blk4	; block 4 START_ADDR
 10941  29A0  00000390           	ddw	__ccov351_end_blk4	; block 4 END_ADDR
 10942  29A4  00000389           	ddw	__ccov350_start_blk3	; block 3 START_ADDR
 10943  29A8  0000038B           	ddw	__ccov350_end_blk3	; block 3 END_ADDR
 10944  29AC  00000387           	ddw	__ccov349_start_blk1	; block 1 START_ADDR
 10945  29B0  00000389           	ddw	__ccov349_end_blk1	; block 1 END_ADDR
 10946  29B4  00000383           	ddw	_get_jump	; block 0 START_ADDR
 10947  29B8  00000387           	ddw	__ccov348_end_blk0	; block 0 END_ADDR
 10948                           
 10949                           ; Function: get_jump, coverage: 17,16,15,14,9,4,3,1,0
 10950  29BC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10951  29C0  00000021           	ddw	__ccovbit17_174/(0+8)	; CC_ADDR
 10952  29C4  00000001           	ddw	1	; NUM_POINTS
 10953  29C8  00000000           	ddw	__ccovbit17_174& (0+7)	; OFFSET
 10954  29CC  00000000           	ddw	0	; Reserved
 10955  29D0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10956  29D4  00000009           	ddw	9	; NUM_RANGES
 10957  29D8  000003B7           	ddw	__ccov361_start_blk17	; block 17 START_ADDR
 10958  29DC  000003B9           	ddw	__ccov361_end_blk17	; block 17 END_ADDR
 10959  29E0  000003B6           	ddw	__ccov360_start_blk16	; block 16 START_ADDR
 10960  29E4  000003B7           	ddw	__ccov360_end_blk16	; block 16 END_ADDR
 10961  29E8  000003B2           	ddw	__ccov359_start_blk15	; block 15 START_ADDR
 10962  29EC  000003B6           	ddw	__ccov359_end_blk15	; block 15 END_ADDR
 10963  29F0  000003AA           	ddw	__ccov358_start_blk14	; block 14 START_ADDR
 10964  29F4  000003B2           	ddw	__ccov358_end_blk14	; block 14 END_ADDR
 10965  29F8  0000039B           	ddw	__ccov354_start_blk9	; block 9 START_ADDR
 10966  29FC  000003A2           	ddw	__ccov354_end_blk9	; block 9 END_ADDR
 10967  2A00  0000038B           	ddw	__ccov351_start_blk4	; block 4 START_ADDR
 10968  2A04  00000390           	ddw	__ccov351_end_blk4	; block 4 END_ADDR
 10969  2A08  00000389           	ddw	__ccov350_start_blk3	; block 3 START_ADDR
 10970  2A0C  0000038B           	ddw	__ccov350_end_blk3	; block 3 END_ADDR
 10971  2A10  00000387           	ddw	__ccov349_start_blk1	; block 1 START_ADDR
 10972  2A14  00000389           	ddw	__ccov349_end_blk1	; block 1 END_ADDR
 10973  2A18  00000383           	ddw	_get_jump	; block 0 START_ADDR
 10974  2A1C  00000387           	ddw	__ccov348_end_blk0	; block 0 END_ADDR
 10975                           
 10976                           ; Function: get_jump, coverage: 20,9,4,3,1,0
 10977  2A20  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10978  2A24  00000020           	ddw	__ccovbit20_175/(0+8)	; CC_ADDR
 10979  2A28  00000001           	ddw	1	; NUM_POINTS
 10980  2A2C  00000007           	ddw	__ccovbit20_175& (0+7)	; OFFSET
 10981  2A30  00000000           	ddw	0	; Reserved
 10982  2A34  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10983  2A38  00000006           	ddw	6	; NUM_RANGES
 10984  2A3C  000003B9           	ddw	__ccov362_start_blk20	; block 20 START_ADDR
 10985  2A40  000003BB           	ddw	__ccov362_end_blk20	; block 20 END_ADDR
 10986  2A44  0000039B           	ddw	__ccov354_start_blk9	; block 9 START_ADDR
 10987  2A48  000003A2           	ddw	__ccov354_end_blk9	; block 9 END_ADDR
 10988  2A4C  0000038B           	ddw	__ccov351_start_blk4	; block 4 START_ADDR
 10989  2A50  00000390           	ddw	__ccov351_end_blk4	; block 4 END_ADDR
 10990  2A54  00000389           	ddw	__ccov350_start_blk3	; block 3 START_ADDR
 10991  2A58  0000038B           	ddw	__ccov350_end_blk3	; block 3 END_ADDR
 10992  2A5C  00000387           	ddw	__ccov349_start_blk1	; block 1 START_ADDR
 10993  2A60  00000389           	ddw	__ccov349_end_blk1	; block 1 END_ADDR
 10994  2A64  00000383           	ddw	_get_jump	; block 0 START_ADDR
 10995  2A68  00000387           	ddw	__ccov348_end_blk0	; block 0 END_ADDR
 10996                           
 10997                           ; Function: get_jump, coverage: 22,0
 10998  2A6C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10999  2A70  00000020           	ddw	__ccovbit22_176/(0+8)	; CC_ADDR
 11000  2A74  00000001           	ddw	1	; NUM_POINTS
 11001  2A78  00000006           	ddw	__ccovbit22_176& (0+7)	; OFFSET
 11002  2A7C  00000000           	ddw	0	; Reserved
 11003  2A80  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11004  2A84  00000002           	ddw	2	; NUM_RANGES
 11005  2A88  000003BB           	ddw	__ccov363_start_blk22	; block 22 START_ADDR
 11006  2A8C  000003BE           	ddw	__end_of_get_jump	; block 22 END_ADDR
 11007  2A90  00000383           	ddw	_get_jump	; block 0 START_ADDR
 11008  2A94  00000387           	ddw	__ccov348_end_blk0	; block 0 END_ADDR
 11009                           
 11010                           ; Function: start_setup, coverage: 31,30,29,28,27,26,25,24,23,22,21,18,15,12,9,6,4,3,2,1
      +                          ,0
 11011  2A98  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11012  2A9C  00000020           	ddw	__ccovbit31_177/(0+8)	; CC_ADDR
 11013  2AA0  00000001           	ddw	1	; NUM_POINTS
 11014  2AA4  00000005           	ddw	__ccovbit31_177& (0+7)	; OFFSET
 11015  2AA8  00000000           	ddw	0	; Reserved
 11016  2AAC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11017  2AB0  00000015           	ddw	21	; NUM_RANGES
 11018  2AB4  00000346           	ddw	__ccov384_start_blk31	; block 31 START_ADDR
 11019  2AB8  00000348           	ddw	__end_of_start_setup	; block 31 END_ADDR
 11020  2ABC  00000345           	ddw	__ccov383_start_blk30	; block 30 START_ADDR
 11021  2AC0  00000346           	ddw	__ccov383_end_blk30	; block 30 END_ADDR
 11022  2AC4  00000343           	ddw	__ccov382_start_blk29	; block 29 START_ADDR
 11023  2AC8  00000345           	ddw	__ccov382_end_blk29	; block 29 END_ADDR
 11024  2ACC  00000341           	ddw	__ccov381_start_blk28	; block 28 START_ADDR
 11025  2AD0  00000343           	ddw	__ccov381_end_blk28	; block 28 END_ADDR
 11026  2AD4  00000340           	ddw	__ccov380_start_blk27	; block 27 START_ADDR
 11027  2AD8  00000341           	ddw	__ccov380_end_blk27	; block 27 END_ADDR
 11028  2ADC  0000033E           	ddw	__ccov379_start_blk26	; block 26 START_ADDR
 11029  2AE0  00000340           	ddw	__ccov379_end_blk26	; block 26 END_ADDR
 11030  2AE4  0000033C           	ddw	__ccov378_start_blk25	; block 25 START_ADDR
 11031  2AE8  0000033E           	ddw	__ccov378_end_blk25	; block 25 END_ADDR
 11032  2AEC  0000033A           	ddw	__ccov377_start_blk24	; block 24 START_ADDR
 11033  2AF0  0000033C           	ddw	__ccov377_end_blk24	; block 24 END_ADDR
 11034  2AF4  00000338           	ddw	__ccov376_start_blk23	; block 23 START_ADDR
 11035  2AF8  0000033A           	ddw	__ccov376_end_blk23	; block 23 END_ADDR
 11036  2AFC  00000331           	ddw	__ccov375_start_blk22	; block 22 START_ADDR
 11037  2B00  00000338           	ddw	__ccov375_end_blk22	; block 22 END_ADDR
 11038  2B04  00000330           	ddw	__ccov374_start_blk21	; block 21 START_ADDR
 11039  2B08  00000331           	ddw	__ccov374_end_blk21	; block 21 END_ADDR
 11040  2B0C  0000032F           	ddw	__ccov373_start_blk18	; block 18 START_ADDR
 11041  2B10  00000330           	ddw	__ccov373_end_blk18	; block 18 END_ADDR
 11042  2B14  0000032E           	ddw	__ccov372_start_blk15	; block 15 START_ADDR
 11043  2B18  0000032F           	ddw	__ccov372_end_blk15	; block 15 END_ADDR
 11044  2B1C  0000032D           	ddw	__ccov371_start_blk12	; block 12 START_ADDR
 11045  2B20  0000032E           	ddw	__ccov371_end_blk12	; block 12 END_ADDR
 11046  2B24  0000032C           	ddw	__ccov370_start_blk9	; block 9 START_ADDR
 11047  2B28  0000032D           	ddw	__ccov370_end_blk9	; block 9 END_ADDR
 11048  2B2C  0000032A           	ddw	__ccov369_start_blk6	; block 6 START_ADDR
 11049  2B30  0000032C           	ddw	__ccov369_end_blk6	; block 6 END_ADDR
 11050  2B34  00000321           	ddw	__ccov368_start_blk4	; block 4 START_ADDR
 11051  2B38  0000032A           	ddw	__ccov368_end_blk4	; block 4 END_ADDR
 11052  2B3C  0000031E           	ddw	__ccov367_start_blk3	; block 3 START_ADDR
 11053  2B40  00000321           	ddw	__ccov367_end_blk3	; block 3 END_ADDR
 11054  2B44  0000030C           	ddw	__ccov366_start_blk2	; block 2 START_ADDR
 11055  2B48  0000031E           	ddw	__ccov366_end_blk2	; block 2 END_ADDR
 11056  2B4C  0000030B           	ddw	__ccov365_start_blk1	; block 1 START_ADDR
 11057  2B50  0000030C           	ddw	__ccov365_end_blk1	; block 1 END_ADDR
 11058  2B54  00000308           	ddw	_start_setup	; block 0 START_ADDR
 11059  2B58  0000030B           	ddw	__ccov364_end_blk0	; block 0 END_ADDR
 11060                           
 11061                           ; Function: main, coverage: 4,3,2,1,0
 11062  2B5C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11063  2B60  00000020           	ddw	__ccovbit4_178/(0+8)	; CC_ADDR
 11064  2B64  00000001           	ddw	1	; NUM_POINTS
 11065  2B68  00000004           	ddw	__ccovbit4_178& (0+7)	; OFFSET
 11066  2B6C  00000000           	ddw	0	; Reserved
 11067  2B70  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11068  2B74  00000005           	ddw	5	; NUM_RANGES
 11069  2B78  00000449           	ddw	__ccov389_start_blk4	; block 4 START_ADDR
 11070  2B7C  0000045E           	ddw	__ccov389_end_blk4	; block 4 END_ADDR
 11071  2B80  00000445           	ddw	__ccov388_start_blk3	; block 3 START_ADDR
 11072  2B84  00000449           	ddw	__ccov388_end_blk3	; block 3 END_ADDR
 11073  2B88  00000442           	ddw	__ccov387_start_blk2	; block 2 START_ADDR
 11074  2B8C  00000445           	ddw	__ccov387_end_blk2	; block 2 END_ADDR
 11075  2B90  00000441           	ddw	__ccov386_start_blk1	; block 1 START_ADDR
 11076  2B94  00000442           	ddw	__ccov386_end_blk1	; block 1 END_ADDR
 11077  2B98  0000043E           	ddw	_main	; block 0 START_ADDR
 11078  2B9C  00000441           	ddw	__ccov385_end_blk0	; block 0 END_ADDR
 11079                           
 11080                           ; Function: main, coverage: 6,3,2,1,0
 11081  2BA0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11082  2BA4  00000020           	ddw	__ccovbit6_179/(0+8)	; CC_ADDR
 11083  2BA8  00000001           	ddw	1	; NUM_POINTS
 11084  2BAC  00000003           	ddw	__ccovbit6_179& (0+7)	; OFFSET
 11085  2BB0  00000000           	ddw	0	; Reserved
 11086  2BB4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11087  2BB8  00000005           	ddw	5	; NUM_RANGES
 11088  2BBC  0000045E           	ddw	__ccov390_start_blk6	; block 6 START_ADDR
 11089  2BC0  00000464           	ddw	__ccov390_end_blk6	; block 6 END_ADDR
 11090  2BC4  00000445           	ddw	__ccov388_start_blk3	; block 3 START_ADDR
 11091  2BC8  00000449           	ddw	__ccov388_end_blk3	; block 3 END_ADDR
 11092  2BCC  00000442           	ddw	__ccov387_start_blk2	; block 2 START_ADDR
 11093  2BD0  00000445           	ddw	__ccov387_end_blk2	; block 2 END_ADDR
 11094  2BD4  00000441           	ddw	__ccov386_start_blk1	; block 1 START_ADDR
 11095  2BD8  00000442           	ddw	__ccov386_end_blk1	; block 1 END_ADDR
 11096  2BDC  0000043E           	ddw	_main	; block 0 START_ADDR
 11097  2BE0  00000441           	ddw	__ccov385_end_blk0	; block 0 END_ADDR
 11098                           
 11099                           ; Function: EEPROM_WriteByte, coverage: 9,8,7,6,5,4,3,2,0
 11100  2BE4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11101  2BE8  00000020           	ddw	__ccovbit9_180/(0+8)	; CC_ADDR
 11102  2BEC  00000001           	ddw	1	; NUM_POINTS
 11103  2BF0  00000002           	ddw	__ccovbit9_180& (0+7)	; OFFSET
 11104  2BF4  00000000           	ddw	0	; Reserved
 11105  2BF8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11106  2BFC  00000008           	ddw	8	; NUM_RANGES
 11107  2C00  00000488           	ddw	__ccov399_start_blk9	; block 9 START_ADDR
 11108  2C04  0000048B           	ddw	__end_of_EEPROM_WriteByte	; block 9 END_ADDR
 11109  2C08  00000486           	ddw	__ccov398_start_blk8	; block 8 START_ADDR
 11110  2C0C  00000488           	ddw	__ccov398_end_blk8	; block 8 END_ADDR
 11111  2C10  00000480           	ddw	__ccov397_start_blk7	; block 7 START_ADDR
 11112  2C14  00000486           	ddw	__ccov397_end_blk7	; block 7 END_ADDR
 11113  2C18  0000047F           	ddw	__ccov396_start_blk6	; block 6 START_ADDR
 11114  2C1C  00000480           	ddw	__ccov396_end_blk6	; block 6 END_ADDR
 11115  2C20  0000047A           	ddw	__ccov395_start_blk5	; block 5 START_ADDR
 11116  2C24  0000047F           	ddw	__ccov395_end_blk5	; block 5 END_ADDR
 11117  2C28  00000470           	ddw	__ccov394_start_blk4	; block 4 START_ADDR
 11118  2C2C  0000047A           	ddw	__ccov394_end_blk4	; block 4 END_ADDR
 11119  2C30  0000046B           	ddw	__ccov393_start_blk3	; block 3 START_ADDR
 11120  2C34  00000470           	ddw	__ccov393_end_blk3	; block 3 END_ADDR
 11121  2C38  00000465           	ddw	_EEPROM_WriteByte	; block 2 START_ADDR
 11122  2C3C  0000046B           	ddw	__ccov392_end_blk2	; block 2 END_ADDR
 11123                           
 11124                           ; Function: EEPROM_ReadByte, coverage: 3,2,0
 11125  2C40  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11126  2C44  00000020           	ddw	__ccovbit3_181/(0+8)	; CC_ADDR
 11127  2C48  00000001           	ddw	1	; NUM_POINTS
 11128  2C4C  00000001           	ddw	__ccovbit3_181& (0+7)	; OFFSET
 11129  2C50  00000000           	ddw	0	; Reserved
 11130  2C54  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11131  2C58  00000002           	ddw	2	; NUM_RANGES
 11132  2C5C  0000050A           	ddw	__ccov402_start_blk3	; block 3 START_ADDR
 11133  2C60  00000511           	ddw	__ccov402_end_blk3	; block 3 END_ADDR
 11134  2C64  00000504           	ddw	_EEPROM_ReadByte	; block 2 START_ADDR
 11135  2C68  0000050A           	ddw	__ccov401_end_blk2	; block 2 END_ADDR
 11136                           
 11137                           ; Function: EEPROM_ReadByte, coverage: 8,6,5,3,2,0
 11138  2C6C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11139  2C70  00000020           	ddw	__ccovbit8_182/(0+8)	; CC_ADDR
 11140  2C74  00000001           	ddw	1	; NUM_POINTS
 11141  2C78  00000000           	ddw	__ccovbit8_182& (0+7)	; OFFSET
 11142  2C7C  00000000           	ddw	0	; Reserved
 11143  2C80  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11144  2C84  00000005           	ddw	5	; NUM_RANGES
 11145  2C88  0000051A           	ddw	__ccov405_start_blk8	; block 8 START_ADDR
 11146  2C8C  0000051D           	ddw	__end_of_EEPROM_ReadByte	; block 8 END_ADDR
 11147  2C90  00000518           	ddw	__ccov404_start_blk6	; block 6 START_ADDR
 11148  2C94  0000051A           	ddw	__ccov404_end_blk6	; block 6 END_ADDR
 11149  2C98  00000511           	ddw	__ccov403_start_blk5	; block 5 START_ADDR
 11150  2C9C  00000518           	ddw	__ccov403_end_blk5	; block 5 END_ADDR
 11151  2CA0  0000050A           	ddw	__ccov402_start_blk3	; block 3 START_ADDR
 11152  2CA4  00000511           	ddw	__ccov402_end_blk3	; block 3 END_ADDR
 11153  2CA8  00000504           	ddw	_EEPROM_ReadByte	; block 2 START_ADDR
 11154  2CAC  0000050A           	ddw	__ccov401_end_blk2	; block 2 END_ADDR
 11155  007E                     btemp	set	126	;btemp
 11156  007E                     int$flags	set	126
 11157  007E                     wtemp0	set	126
 11158                           
 11159                           	psect	idloc
 11160                           
 11161                           ;Config register IDLOC0 @ 0x8000
 11162                           ;	unspecified, using default values
 11163  8000                     	org	32768
 11164  8000  3FFF               	dw	16383
 11165                           
 11166                           ;Config register IDLOC1 @ 0x8001
 11167                           ;	unspecified, using default values
 11168  8001                     	org	32769
 11169  8001  3FFF               	dw	16383
 11170                           
 11171                           ;Config register IDLOC2 @ 0x8002
 11172                           ;	unspecified, using default values
 11173  8002                     	org	32770
 11174  8002  3FFF               	dw	16383
 11175                           
 11176                           ;Config register IDLOC3 @ 0x8003
 11177                           ;	unspecified, using default values
 11178  8003                     	org	32771
 11179  8003  3FFF               	dw	16383
 11180                           
 11181                           	psect	config
 11182                           
 11183                           ;Config register CONFIG1 @ 0x8007
 11184                           ;	Oscillator Selection
 11185                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11186                           ;	Watchdog Timer Enable
 11187                           ;	WDTE = ON, WDT enabled
 11188                           ;	Power-up Timer Enable
 11189                           ;	PWRTE = ON, PWRT enabled
 11190                           ;	MCLR Pin Function Select
 11191                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11192                           ;	Flash Program Memory Code Protection
 11193                           ;	CP = OFF, Program memory code protection is disabled
 11194                           ;	Data Memory Code Protection
 11195                           ;	CPD = OFF, Data memory code protection is disabled
 11196                           ;	Brown-out Reset Enable
 11197                           ;	BOREN = ON, Brown-out Reset enabled
 11198                           ;	Clock Out Enable
 11199                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11200                           ;	Internal/External Switchover
 11201                           ;	IESO = ON, Internal/External Switchover mode is enabled
 11202                           ;	Fail-Safe Clock Monitor Enable
 11203                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 11204  8007                     	org	32775
 11205  8007  3FDC               	dw	16348
 11206                           
 11207                           ;Config register CONFIG2 @ 0x8008
 11208                           ;	Flash Memory Self-Write Protection
 11209                           ;	WRT = OFF, Write protection off
 11210                           ;	PLL Enable
 11211                           ;	PLLEN = OFF, 4x PLL disabled
 11212                           ;	Stack Overflow/Underflow Reset Enable
 11213                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11214                           ;	Brown-out Reset Voltage Selection
 11215                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11216                           ;	Low-Voltage Programming Enable
 11217                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 11218  8008                     	org	32776
 11219  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    24
    Data        0
    BSS         36
    Persistent  37
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      14
    BANK0            80      2      58
    BANK1            32      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> zummer_switch(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> zummer_switch(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ms_tick(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ms_tick(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_get_wsp
    _switch_wm->_rele_off
    _eeprom_set->_EEPROM_WriteByte
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _get_wsp->_ADC_GetConversion
    _open->_rele_off
    _close->_rele_off

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _ms_tick->_sec_work
    _sec_work->_minute_tick
    _sec_work->_sec_30_work

Critical Paths under _main in BANK0

    _main->_get_wsp
    _start_setup->_eeprom_set

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1549
                  _autorotation_work
                              _close
                           _fun_work
                            _get_fun
                           _get_jump
                            _get_wsp
                      _hardware_work
                        _start_setup
                          _switch_wm
 ---------------------------------------------------------------------------------
 (1) _switch_wm                                            1     1      0       0
                                              3 COMMON     1     1      0
                           _rele_off
 ---------------------------------------------------------------------------------
 (1) _start_setup                                          0     0      0    1453
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                         _eeprom_set
 ---------------------------------------------------------------------------------
 (2) _eeprom_set                                           2     2      0     757
                                              0 BANK0      2     2      0
                    _EEPROM_ReadByte
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_WriteByte                                     4     3      1     692
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _EEPROM_ReadByte                                      3     3      0      31
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     348
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      1     1      0     174
                                              4 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hardware_work                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_wsp                                              4     4      0      96
                                              4 COMMON     2     2      0
                                              0 BANK0      2     2      0
                  _ADC_GetConversion
                        _clear_alarm
                        _start_alarm
 ---------------------------------------------------------------------------------
 (2) _start_alarm                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clear_alarm                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    2     2      0      31
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_jump                                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_fun                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _fun_work                                             1     1      0       0
                                              3 COMMON     1     1      0
                              _close
                               _open
 ---------------------------------------------------------------------------------
 (2) _open                                                 0     0      0       0
                            _go_open
                        _go_open_alt
                           _rele_off
 ---------------------------------------------------------------------------------
 (3) _go_open_alt                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _close                                                0     0      0       0
                           _go_close
                       _go_close_alt
                           _rele_off
 ---------------------------------------------------------------------------------
 (2) _rele_off                                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _go_close_alt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _go_close                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _autorotation_work                                    1     1      0       0
                                              2 COMMON     1     1      0
                     _go_close_short
                            _go_open
 ---------------------------------------------------------------------------------
 (3) _go_open                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_close_short                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                            _ms_tick *
 ---------------------------------------------------------------------------------
 (7) _ms_tick                                              0     0      0       0
                        _ms_100_work
                        _ms_200_work
                           _sec_work
                          _stop_tone
 ---------------------------------------------------------------------------------
 (8) _stop_tone                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _sec_work                                             1     1      0       0
                                              1 COMMON     1     1      0
                        _minute_tick
                          _rele_tick
                        _sec_30_work
 ---------------------------------------------------------------------------------
 (9) _sec_30_work                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _rele_tick                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _minute_tick                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _ms_200_work                                          0     0      0       0
                        _beep_double
                          _beep_long
                         _beep_short
 ---------------------------------------------------------------------------------
 (9) _beep_double                                          0     0      0       0
                          _beep_long
                         _beep_short
 ---------------------------------------------------------------------------------
 (9) _beep_short                                           0     0      0       0
                         _start_tone
 ---------------------------------------------------------------------------------
 (9) _beep_long                                            0     0      0       0
                         _start_tone
 ---------------------------------------------------------------------------------
 (10) _start_tone                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ms_100_work                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _zummer_switch *
 ---------------------------------------------------------------------------------
 (7) _zummer_switch                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _autorotation_work
     _go_close_short
     _go_open
   _close
     _go_close
     _go_close_alt
     _rele_off
   _fun_work
     _close
     _open
       _go_open
       _go_open_alt
       _rele_off
   _get_fun
   _get_jump
   _get_wsp
     _ADC_GetConversion
     _clear_alarm
     _start_alarm
   _hardware_work
   _start_setup
     _SYSTEM_Initialize
       _ADC_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR2_Initialize
         _TMR2_SetInterruptHandler
       _WDT_Initialize
     _TMR0_SetInterruptHandler
     _TMR2_SetInterruptHandler
     _TMR2_StartTimer
     _eeprom_set
       _EEPROM_ReadByte
       _EEPROM_WriteByte
   _switch_wm
     _rele_off

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _zummer_switch *
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _ms_tick *
       _ms_100_work
       _ms_200_work
         _beep_double
           _beep_long
             _start_tone
           _beep_short
             _start_tone
         _beep_long
         _beep_short
       _sec_work
         _minute_tick
         _rele_tick
         _sec_30_work
       _stop_tone

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      48       4        0.0%
BITBANK0            50      0      14       5       25.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      3A       6       72.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      48       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu May 19 14:17:03 2022

                       __ccov116_end_blk1 03F4                         __ccov140_end_blk1 060A  
                       __ccov204_end_blk1 03C8                         __ccov124_end_blk3 0428  
                       __ccov300_end_blk4 057E                         __ccov108_end_blk5 0548  
                       __ccov132_end_blk5 04E7                         __ccov220_end_blk6 00F3  
                      __ccov212_end_blk10 03E8                       __ccov111_start_blk0 0612  
                     __ccov103_start_blk8 0501                        __pcodecov_info_hdr 0000  
        __end_of_TMR2_SetInterruptHandler 0694                        get_fun@fun_counter 004A  
                       __ccov301_end_blk0 0374                         __ccov117_end_blk2 03F9  
                       __ccov141_end_blk2 060F                         __ccov205_end_blk2 03CA  
                       __ccov125_end_blk4 043B                         __ccov109_end_blk6 054C  
                       __ccov221_end_blk7 00F7                         __ccov133_end_blk8 04EA  
                                      l23 05EB                                        l26 0683  
                                      l61 052F                                        l29 06B0  
                                      l46 067B                                        l64 0534  
                                      l90 05D7                                        _RD 0CA8  
                                      _WR 0CA9                             ?_go_close_alt 0073  
                                      _ff 0079                 __end_of_autorotation_work 0131  
                         _timer0ReloadVal 0057                         __ccov214_end_blk0 00D7  
                       __ccov134_end_blk0 05B0                         __ccov310_end_blk0 0135  
                       __ccov150_end_blk1 04B6                         __ccov302_end_blk1 0377  
                       __ccov118_end_blk3 03FE                         __ccov206_end_blk3 03CD  
                       __ccov142_end_blk4 0612                         __ccov126_end_blk6 043E  
                       __ccov222_end_blk8 00FD                        __ccov213_end_blk14 03EA  
                     __ccov389_start_blk4 0449                       __ccov397_start_blk7 0480  
                                     l135 05FE                                       l400 012F  
                                     l321 0411                                       l138 06B9  
                                     l325 043B                                       l341 060F  
                                     l501 01F7                                       l157 0692  
                                     l334 05BC                                       l351 04C0  
                                     l336 05B6                                       l344 05A2  
                                     l520 0387                                       l329 04E7  
                                     l337 05C1                                       l345 05A5  
                                     l193 0699                                       l177 0593  
                                     l346 05AA                                       l354 04CA  
                                     l362 04A9                                       l514 0238  
                                     l522 0389                                       l523 038B  
                                     l349 04B6                                       l357 0495  
                                     l382 06B4                                       l390 03D4  
                                     l359 049F                                       l471 0380  
                                     l543 0331                                       l464 057B  
                                     l544 0346                                       l529 03BB  
                                     l482 0135                                       l387 0280  
                                     l379 068B                                       l467 0377  
                                     l395 03E8                                       l484 0137  
                                     l469 037C                                       l573 0466  
                                     l549 0441                                       l582 051A  
                                     l495 0191                                       l575 046B  
                                     l576 0488                                       l579 0505  
                                     _GIE 005F                                       u250 05B0  
                             _start_alarm 0685                                       u251 05AF  
                                     u260 05B6                                       u261 05B5  
                                     u270 05BC                                       _PR2 001B  
                                     u271 05BB                                       u280 0604  
                                     u281 0603                                       u290 060A  
                                     u291 0609                      __ccov334_start_blk10 0205  
                    __ccov174_start_blk14 01CD                      __ccov318_start_blk14 015A  
                    __ccov342_start_blk23 0227                      __ccov254_start_blk16 0086  
                    __ccov326_start_blk26 0189                      __ccov262_start_blk28 00C0  
                       __ccov127_end_blk0 04D1                         __ccov143_end_blk0 059E  
                       __ccov215_end_blk1 00DC                         __ccov135_end_blk1 05B6  
                       __ccov311_end_blk1 0137                         __ccov151_end_blk2 04BA  
                       __ccov303_end_blk2 037B                         __ccov119_end_blk4 0411  
                       __ccov207_end_blk4 03D4                               _start_setup 0308  
                            ?_go_open_alt 0073                           _TMR2_Initialize 05ED  
                      __ccov22_start_blk0 051D                                       wreg 0009  
                       __ccov232_end_blk0 0555                         __ccov128_end_blk1 04D7  
                       __ccov144_end_blk1 05A2                         __ccov216_end_blk2 00E1  
                       __ccov136_end_blk2 05BC                         __ccov240_end_blk3 0654  
                       __ccov152_end_blk3 04C0                         __ccov312_end_blk3 0139  
                       __ccov304_end_blk3 037C                         __ccov160_end_blk4 04A5  
                       __ccov208_end_blk6 03DA                        __ccov230_end_blk17 012F  
                            ?_sec_30_work 0073                       __ccov104_start_blk0 0536  
                     __ccov112_start_blk1 0616                       __ccov120_start_blk6 0411  
                                    l2000 05CB                                      l2010 0681  
                                    l2002 05CE                                      l2004 05D3  
                                    l2020 05F2                                      l2012 06AD  
                                    l2030 0678                                      l2006 067D  
                                    l2022 05F4                                      l2014 05ED  
                                    l2200 048F                                      l2008 0680  
                                    l2040 058B                                      l2032 057E  
                                    l2024 05FB                                      l2016 05F0  
                                    l2050 03F4                                      l2202 0499  
                                    l2026 0674                                      l2042 058C  
                                    l2034 0583                                      l2018 05F1  
                                    l2060 04D7                                      l2052 03F9  
                                    l2204 04A5                                      l2028 0677  
                                    l2036 0586                                      l2300 03CA  
                                    l2062 04DC                                      l2054 03FE  
                                    l2046 03EA                                      l2070 0595  
                                    l2038 058A                                      l2310 03E4  
                                    l2302 03CD                                      l2064 04E1  
                                    l2056 04CD                                      l2320 00E6  
                                    l2312 00C8                                      l2048 03EE  
                                    l2072 059E                                      l2400 0224  
                                    l2304 03DA                                      l2066 04E5  
                                    l2058 04D1                                      l2322 00EB  
                                    l2314 00D7                                      l2330 00FD  
                                    l2074 05A6                                      l2410 0236  
                                    l2402 0227                                      l2306 03DF  
                                    l2180 0414                                      l2340 011F  
                                    l2332 010B                                      l2324 00F0  
                                    l2316 00DC                                      l1380 05AC  
                                    l2404 022F                                      l2420 03A2  
                                    l2412 0383                                      l2164 05D9  
                                    l2308 03E1                                      l2182 0418  
                                    l2342 0124                                      l2334 0110  
                                    l2326 00F3                                      l2318 00E1  
                                    l1382 05B0                                      l2190 04AC  
                                    l2270 024A                                      l2406 0233  
                                    l2430 03B6                                      l2422 03A6  
                                    l2414 0390                                      l2184 041E  
                                    l2344 0127                                      l2336 0115  
                                    l2328 00F7                                      l2192 04B0  
                                    l1384 0600                                      l2272 024F  
                                    l2280 025F                                      l2264 023B  
                                    l2408 0234                                      l2432 03B7  
                                    l2424 03A7                                      l2416 0396  
                                    l2600 0139                                      l2186 0423  
                                    l2338 011A                                      l2194 04BA  
                                    l1386 0604                                      l2290 0278  
                                    l2282 0263                                      l2274 0254  
                                    l2266 023F                                      l2434 03B9  
                                    l2426 03AA                                      l2418 039B  
                                    l2610 015A                                      l2602 0141  
                                    l2178 06B7                                      l2188 0428  
                                    l2196 04C6                                      l1388 060A  
                                    l2292 027C                                      l2284 0269  
                                    l2276 0259                                      l2268 0245  
                                    l2380 01F9                                      l2428 03B2  
                                    l2620 0179                                      l2612 0160  
                                    l2604 014C                                      l2198 048B  
                                    l2286 026E                                      l2278 025B  
                                    l2390 0210                                      l2382 0201  
                                    l2622 017F                                      l2614 016A  
                                    l2606 014E                                      l1670 037B  
                                    l2630 0308                                      l2294 03BE  
                                    l2288 0273                                      l2392 0215  
                                    l2384 0203                                      l2624 0186  
                                    l2616 016F                                      l2608 0150  
                                    l2552 0505                                      l2640 032A  
                                    l2632 030B                                      l2296 03C2  
                                    l2394 0217                                      l2386 0205  
                                    l2378 01F3                                      l2626 0189  
                                    l2618 0176                                      l1666 0348  
                                    l2554 050A                                      l2570 0480  
                                    l2562 0466                                      l2650 0330  
                                    l2642 032C                                      l2634 030C  
                                    l2298 03C8                                      l2396 021F  
                                    l2388 020A                                      l2580 052D  
                                    l2628 018F                                      l1668 0374  
                                    l2556 0511                                      l2572 0486  
                                    l2564 0470                                      l2660 0340  
                                    l2652 0338                                      l2644 032D  
                                    l2636 031E                                      l2398 0223  
                                    l2582 0533                                      l2574 051E  
                                    l2590 06B2                                      l2558 0518  
                                    l2566 047A                                      l2662 0341  
                                    l2654 033A                                      l2646 032E  
                                    l2638 0321                                      l2576 0528  
                                    l1936 068D                                      l2568 047F  
                                    l2592 0567                                      l2664 0343  
                                    l2656 033C                                      l2648 032F  
                                    l2578 0529                                      l2586 0685  
                                    l1938 0694                                      l2594 056F  
                                    l2666 0345                                      l2658 033E  
                                    l2690 045E                                      l2682 043E  
                                    l2588 0689                                      l2596 0574  
                                    l2684 0442                                      l2598 0131  
                                    l2686 0445                                      l2688 0449  
                                    l1994 05C3                                      l1996 05C6  
                                    l1998 05C9                         __ccov233_end_blk1 0559  
                       __ccov129_end_blk2 04DC                         __ccov145_end_blk2 05A5  
                       __ccov401_end_blk2 050A                         __ccov217_end_blk3 00E6  
                       __ccov137_end_blk3 05C1                         __ccov153_end_blk4 04C6  
                       __ccov305_end_blk4 0380                         __ccov241_end_blk5 0656  
                       __ccov161_end_blk5 04A9                         __ccov313_end_blk5 0141  
                       __ccov209_end_blk7 03DF                                      u1110 036E  
                                    u1030 034E                                      u1111 036B  
                                    u1031 034B                                      u2000 04A5  
                                    u1104 0368                                      u2001 04A4  
                                    u1130 0374                                      u1050 0356  
                                    u1131 0373                                      u1051 0353  
                                    u2100 023F                                      u1140 037B  
                                    u1124 0370                                      u1044 0350  
                                    u2101 023E                                      u1141 037A  
                                    u2110 0245                                      u1070 035E  
                                    u2111 0244                                      u1071 035B  
                                    u2200 0278                                      u2120 024A  
                                    u1064 0358                                      u2201 0277  
                                    u2121 0249                                      u2130 024F  
                                    u1090 0366                                      u2210 03C2  
                                    u2131 024E                                      u1091 0363  
                                    u2211 03C1                                      u2300 00F0  
                                    u2140 0254                                      u1084 0360  
                                    u2220 03C8                                      u2301 00EF  
                                    u2141 0253                                      u2221 03C7  
                                    _LATA 010C                                      u2310 010B  
                                    u2150 0259                                      u2230 03DA  
                                    u2311 010A                                      u2151 0258  
                                    u2231 03D9                                      _LATC 010E  
                                    u2320 0110                                      u1600 03F9  
                                    u2160 0263                                      u2240 03DF  
                                    u2321 010F                                      u1601 03F8  
                                    u2161 0262                                      u2241 03DE  
                                    u1610 04D1                                      u2330 0115  
                                    u2250 00D7                                      u2170 0269  
                                    u1611 04D0                                      u2331 0114  
                                    u2315 0107                                      u2251 00D6  
                                    u2171 0268                                      u1620 04D7  
                                    u2340 011A                                      u2260 00DC  
                                    u2180 026E                                      u2420 01F7  
                                    u1621 04D6                                      u2341 0119  
                                    u2261 00DB                                      u2181 026D  
                                    u2421 01F6                                      u1630 04DC  
                                    u2350 011F                                      u2270 00E1  
                                    u2190 0273                                      u2430 020A  
                                    u1631 04DB                                      u2351 011E  
                                    u2271 00E0                                      u2255 00D3  
                                    u2191 0272                                      u2431 0209  
                                    u2360 0124                                      u2280 00E6  
                                    u1640 059E                                      u2440 021F  
                                    u2361 0123                                      u2281 00E5  
                                    u1641 059D                                      u2441 021E  
                                    u2290 00EB                                      u2450 022F  
                                    u2291 00EA                                      u2451 022E  
                                    u1580 03EE                                      u2460 0387  
                                    u2700 0135                                      u2620 050A  
                                    u1581 03ED                                      u2461 0386  
                                    u2701 0134                                      u2621 0509  
                                    u1590 03F4                                      u2470 0390  
                                    u2710 015A                                      u2630 0511  
                                    u1591 03F3                                      u2471 038F  
                                    u2711 0159                                      u2631 0510  
                                    u1920 0418                                      u2480 03A2  
                                    u2720 016A                                      u2640 046B  
                                    u1921 0417                                      u2481 03A1  
                                    u2721 0169                                      u2641 046A  
                                    u1930 041E                                      u2490 03B2  
                                    u2730 0176                                      u1931 041D  
                                    u2491 03B1                                      u2731 0175  
                                    u1940 0423                                      u2740 0186  
                                    u2660 0485                                      u1941 0422  
                                    u2741 0185                                      u2661 0483  
                                    u1950 04B0                                      u2750 0449  
                                    u1951 04AF                                      u2655 046F  
                                    u2751 0448                                      u1960 04BA  
                                    u2680 0533                                      u1961 04B9  
                                    u2681 0532                                      u1970 04C6  
                                    u2674 0486                                      u2690 0574  
                                    u1971 04C5                                      u2827 013C  
                                    u2691 0573                                      u1980 048F  
                                    u1981 048E                                      u2837 052A  
                                    u1990 0499                                      u1991 0498  
                                    u2847 01FC                                      _TMR0 0015  
                                    _TMR2 001A                                      _WREN 0CAA  
                                    _WPUA 020C                                      _WPUC 020E  
                       __ccov242_end_blk0 004E                         __ccov330_end_blk1 01F9  
                       __ccov234_end_blk3 055F                         __ccov146_end_blk3 05A6  
                       __ccov402_end_blk3 0511                         __ccov218_end_blk4 00EB  
                       __ccov138_end_blk5 05C3                         __ccov154_end_blk5 04CA  
                       __ccov314_end_blk6 014C                                      _main 043E  
                       __ccov306_end_blk7 0383                         __ccov162_end_blk9 04AC  
                      __ccov223_end_blk10 010B                                      _open 048B  
                      __ccov231_end_blk19 0131                       __ccov398_start_blk8 0486  
                                    fsr0h 0005                                      indf0 0000  
                                    fsr0l 0004                      EEPROM_WriteByte@addr 0078  
                                    btemp 007E                           ?_go_close_short 0073  
                                    start 002D                         __ccov163_end_blk0 0198  
                       __ccov139_end_blk0 0604                         __ccov243_end_blk1 0052  
                       __ccov331_end_blk3 0201                         __ccov235_end_blk4 0560  
                       __ccov147_end_blk4 05AA                         __ccov219_end_blk5 00F0  
                       __ccov403_end_blk5 0518                         __ccov315_end_blk8 014E  
                       __ccov155_end_blk9 04CD                        __ccov31_start_blk0 05C3  
                      __ccov23_start_blk1 0528                         __ccov156_end_blk0 048F  
                       __ccov308_end_blk1 0671                         __ccov164_end_blk1 019F  
                       __ccov244_end_blk2 0057                         __ccov236_end_blk5 0565  
                       __ccov148_end_blk5 05AC                         __ccov332_end_blk5 0203  
                       __ccov404_end_blk6 051A                        __ccov224_end_blk11 0110  
                      __ccov320_end_blk17 016F                       __ccov121_start_blk0 0414  
                     __ccov105_start_blk1 053A                       __ccov113_start_blk3 061C  
                          ??_go_close_alt 0075                      __ccov200_start_blk14 0278  
                       __ccov149_end_blk0 04B0                         __ccov157_end_blk1 0495  
                       __ccov309_end_blk3 0674                         __ccov165_end_blk3 01A3  
                       __ccov245_end_blk3 005B                         __ccov237_end_blk8 0567  
                       __ccov333_end_blk8 0205                         __ccov405_end_blk8 051D  
                 __end_of_TMR0_Initialize 0595            ??_TMR0_DefaultInterruptHandler 0073  
           __end_of_OSCILLATOR_Initialize 0685                                     ?_main 0073  
                       __ccov238_end_blk0 064A                         __ccov182_end_blk0 0689  
                       __ccov158_end_blk2 0499                         __ccov190_end_blk3 024F  
                       __ccov350_end_blk3 038B                         __ccov166_end_blk4 01AB  
                       __ccov246_end_blk4 005D                         __ccov270_end_blk8 02A3  
                                   _EEADR 0191                                     ?_open 0073  
                      __ccov225_end_blk12 0115                        __ccov321_end_blk20 0176  
                     __ccov399_start_blk9 0488                              __ccovbit0_24 019E  
                            __ccovbit0_19 0384                              __ccovbit1_15 0388  
                            __ccovbit1_23 0380                              __ccovbit1_40 018E  
                            __ccovbit1_25 019D                              __ccovbit1_33 0195  
                            __ccovbit1_18 0385                              __ccovbit1_26 019C  
                            __ccovbit1_36 0192                              __ccovbit1_44 018A  
                            __ccovbit1_52 0182                              __ccovbit2_30 0198  
                            __ccovbit1_55 017F                              __ccovbit1_63 0177  
                            __ccovbit2_16 0387                              __ccovbit1_48 0186  
                            __ccovbit2_41 018D                              __ccovbit1_81 0165  
                            __ccovbit1_58 017C                              __ccovbit1_82 0164  
                            __ccovbit2_27 019B                              __ccovbit1_68 0172  
                            __ccovbit3_21 0382                              __ccovbit2_37 0191  
                            __ccovbit2_45 0189                              __ccovbit2_53 0181  
                            __ccovbit1_94 0158                              __ccovbit2_56 017E  
                            __ccovbit2_80 0166                              __ccovbit2_49 0185  
                            __ccovbit3_34 0194                              __ccovbit3_50 0184  
                            __ccovbit2_83 0163                                     _T2CON 001C  
                            __ccovbit3_64 0176                              __ccovbit4_17 0386  
                            __ccovbit5_10 038D                              __ccovbit4_42 018C  
                            __ccovbit3_59 017B                              __ccovbit4_60 017A  
                            __ccovbit3_84 0162                              __ccovbit5_22 0381  
                            __ccovbit4_38 0190                              __ccovbit4_54 0180  
                            __ccovbit4_65 0175                              __ccovbit6_11 038C  
                            __ccovbit5_35 0193                              __ccovbit5_51 0183  
                            __ccovbit6_20 0383                              __ccovbit5_61 0179  
                            __ccovbit4_69 0171                              __ccovbit4_85 0161  
                            __ccovbit6_14 0389                              __ccovbit5_46 0188  
                            __ccovbit6_31 0197                              __ccovbit4_95 0157  
                            __ccovbit5_57 017D                              __ccovbit5_66 0174  
                            __ccovbit6_43 018B                              __ccovbit6_28 019A  
                            __ccovbit6_70 0170                              __ccovbit5_86 0160  
                            __ccovbit6_39 018F                              __ccovbit7_71 016F  
                            __ccovbit8_32 0196                              __ccovbit6_96 0156  
                        __end_of_RELE_GAP 06D1                              __ccovbit8_29 0199  
                            __ccovbit8_47 0187                              __ccovbit7_87 015F  
                            __ccovbit7_97 0155                              __ccovbit9_62 0178  
                            __ccovbit9_67 0173                                     i1l113 0029  
                                   i1l114 002A                                     i1l108 0014  
                                   i1l302 06A4                                     i1l312 054C  
                                   i1l160 06CA                                     i1l154 0644  
                                   i1l307 0501                                     i1l411 0654  
                                   i1l317 0621                                     i1l190 0634  
                                   i1l406 0565                                     i1l414 005D  
                                   i1l415 005B                                     i1l432 029D  
                                   i1l442 02C3                                     i1l419 009A  
                                   i1l196 06BB                                     i1l372 01D3  
                                   i1l460 0306                                     i1l365 019F  
                                   i1l429 00C6                                     i1l366 01F1  
                                   i1l447 0660                                     i1l367 01BA  
                                   i1l448 0663                                     i1l474 0665  
                                   i1l299 06AA                                     i1l476 0671  
                    __ccov335_start_blk11 020A                      __ccov175_start_blk15 01D3  
                    __ccov343_start_blk24 022F                      __ccov319_start_blk16 0160  
                    __ccov255_start_blk18 008A                      __ccov327_start_blk28 018F  
                    __ccov263_start_blk29 00C3                                     _TRISA 008C  
                                   _TRISC 008E                           ??_hardware_work 0075  
                       __ccov239_end_blk1 064E                         __ccov183_end_blk1 068B  
                       __ccov159_end_blk3 049F                         __ccov191_end_blk4 0254  
                       __ccov351_end_blk4 0390                         __ccov167_end_blk5 01AF  
                       __ccov247_end_blk6 0061                         __ccov271_end_blk9 02A8  
               ?_TMR0_SetInterruptHandler 0075                        __ccov40_start_blk1 000A  
                      __ccov32_start_blk1 05C6                        __ccov24_start_blk2 0529  
                        __end_of_TMR0_ISR 0636                           __end_of_get_fun 023B  
                        __end_of_TMR2_ISR 0646                           __end_of_get_wsp 0194  
                         __end_of_go_open 04EA                         __ccov280_end_blk2 0663  
                       __ccov184_end_blk2 068D                         __ccov192_end_blk5 0259  
                       __ccov352_end_blk5 0396                         __ccov168_end_blk6 01B6  
                       __ccov248_end_blk7 0065                        __ccov170_end_blk10 01C0  
                      __ccov250_end_blk10 0074                        __ccov226_end_blk13 011A  
                      __ccov322_end_blk21 0179                                     _close 04AC  
                          _WDT_Initialize 06AD                       __ccov122_start_blk1 0418  
                     __ccov106_start_blk2 0540                       __ccov130_start_blk3 04DC  
                     __ccov114_start_blk5 0621                       __ccov210_start_blk8 03DF  
                         __end_of_ms_tick 0308                         __ccov265_end_blk0 0287  
                       __ccov329_end_blk0 01F7                         __ccov185_end_blk0 06B4  
                       __ccov281_end_blk4 0665                         __ccov193_end_blk6 025B  
                       __ccov169_end_blk7 01BA                         __ccov353_end_blk7 039B  
                       __ccov249_end_blk8 0070                            __pbitbssCOMMON 0380  
                      _SHORT_ZUMMER_DELAY 06D7                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                       __ccov282_end_blk0 02CB                         __ccov266_end_blk1 028D  
                       __ccov186_end_blk1 06B7                         __ccov194_end_blk7 025F  
                       __ccov354_end_blk9 03A2                         __ccov370_end_blk9 032D  
                      __ccov171_end_blk11 01C6                        __ccov251_end_blk12 0078  
                      __ccov227_end_blk14 011F                        __ccov323_end_blk22 017F  
                         _TMR2_StartTimer 06B7                            __pcodecov_info 0000  
                       __ccov187_end_blk0 023F                         __ccov283_end_blk1 02D1  
                       __ccov267_end_blk2 0292                         __ccov195_end_blk9 0263  
                      __ccov41_start_blk2 000F                        __ccov33_start_blk2 05C9  
                      __ccov25_start_blk3 052D                           __initialization 002E  
                          eeprom_set@vers 0059                         __ccov348_end_blk0 0387  
                       __ccov364_end_blk0 030B                         __ccov188_end_blk1 0245  
                       __ccov284_end_blk2 02D5                         __ccov268_end_blk4 0298  
                            __end_of_main 0465                        __ccov316_end_blk11 0150  
                      __ccov172_end_blk12 01CC                        __ccov340_end_blk20 0224  
                      __ccov252_end_blk13 007F                        __ccov180_end_blk23 01F1  
                      __ccov260_end_blk23 00BA                        __ccov228_end_blk15 0124  
                      __ccov324_end_blk24 0186                              __end_of_open 04AC  
                     __ccov115_start_blk0 03EA                       __ccov203_start_blk0 03BE  
                     __ccov123_start_blk2 041E                       __ccov107_start_blk4 0543  
                     __ccov131_start_blk4 04E1                       __ccov211_start_blk9 03E1  
                    __ccov201_start_blk15 027C                         __ccov349_end_blk1 0389  
                       __ccov365_end_blk1 030C                         __ccov189_end_blk2 024A  
                       __ccov285_end_blk3 02DC                         __ccov269_end_blk5 029D  
                 __end_of_TMR2_Initialize 0600               ?_INTERRUPT_InterruptManager 0073  
                _TMR2_SetInterruptHandler 068D                                    ??_main 0079  
                                  ??_open 0076                         __ccov278_end_blk0 065A  
                       __ccov366_end_blk2 031E                         __ccov286_end_blk4 02E0  
                       __ccov390_end_blk6 0464                        __ccov173_end_blk13 01CD  
                      __ccov341_end_blk21 0227                        __ccov317_end_blk13 015A  
                      __ccov253_end_blk14 0086                        __ccov229_end_blk16 0127  
                      __ccov325_end_blk25 0189                        __ccov181_end_blk27 01F3  
                      __ccov261_end_blk27 00C0                              ?_minute_tick 0073  
                    __ccov272_start_blk10 02A8                      __ccov336_start_blk13 0210  
                    __ccov328_start_blk30 0191                      __ccov264_start_blk31 00C6  
                    __ccov360_start_blk16 03B6                      __ccov344_start_blk25 0233  
                    __ccov176_start_blk18 01D6                      __ccov256_start_blk19 009A  
                       __ccov279_end_blk1 0660                         __ccov367_end_blk3 0321  
                       __ccov287_end_blk7 02E1                    __end_of_WDT_Initialize 06B2  
                      __ccov50_start_blk2 05F1                        __ccov42_start_blk3 0014  
                      __ccov34_start_blk3 05CB                        __ccov26_start_blk5 052F  
                       __ccov392_end_blk2 046B                         __ccov368_end_blk4 032A  
                       __ccov288_end_blk8 02E2                                    ?_close 0073  
                                  _ADCON0 009D                                    _ADCON1 009E  
                      __ccov334_end_blk10 020A                        __ccov174_end_blk14 01D3  
                      __ccov318_end_blk14 0160                        __ccov342_end_blk23 022F  
                      __ccov254_end_blk16 008A                        __ccov326_end_blk26 018F  
                      __ccov262_end_blk28 00C3                             __ccovbit10_12 038B  
                           __ccovbit10_72 016E                             __ccovbit12_13 038A  
                           __ccovbit10_88 015E                             __ccovbit10_98 0154  
                           __ccovbit11_89 015D                             __ccovbit12_90 015C  
                           __ccovbit20_76 016A                                    _ADRESH 009C  
                           __ccovbit13_91 015B                                    _ADRESL 009B  
                     __ccov116_start_blk1 03EE                       __ccov140_start_blk1 0604  
                     __ccov204_start_blk1 03C2                       __ccov124_start_blk3 0423  
                     __ccov300_start_blk4 057B                       __ccov108_start_blk5 0547  
                     __ccov132_start_blk5 04E5                             __ccovbit14_73 016D  
                     __ccov220_start_blk6 00F0                                    _EEDATA 0193  
                           __ccovbit22_77 0169                             __ccovbit15_74 016C  
                           __ccovbit14_99 0153                             __ccovbit15_92 015A  
                           __ccovbit23_78 0168                                    _EECON2 0196  
                           __ccovbit17_93 0159                             __ccovbit18_75 016B  
                           __ccovbit27_79 0167                                    _APFCON 011D  
                                  _ANSELA 018C                                    _ANSELC 018E  
                           __ccovbit1_100 0152                             __ccovbit1_113 0145  
                           __ccovbit1_132 0132                             __ccovbit1_117 0141  
                           __ccovbit1_142 0128                             __ccovbit1_152 011E  
                           __ccovbit2_101 0151                             __ccovbit2_133 0131  
                           __ccovbit2_150 0120                             __ccovbit2_143 0127  
                           __ccovbit3_102 0150                             __ccovbit3_120 013E  
                           __ccovbit3_114 0144                             __ccovbit3_118 0140  
                           __ccovbit3_145 0125                                    _BORCON 0116  
                           __ccovbit3_155 011B                             __ccovbit3_181 0101  
                           __ccovbit4_103 014F                             __ccovbit4_121 013D  
                           __ccovbit4_134 0130                             __ccovbit4_151 011F  
                           __ccovbit4_144 0126                             __ccovbit4_153 011D  
                           __ccovbit4_146 0124                             __ccovbit5_104 014E  
                           __ccovbit4_178 0104                             __ccovbit5_115 0143  
                           __ccovbit5_119 013F                             __ccovbit5_135 012F  
                           __ccovbit5_170 010C                             __ccovbit6_179 0103  
                           __ccovbit7_154 011C                             __ccovbit7_171 010B  
                           __ccovbit8_105 014D                             __ccovbit8_122 013C  
                           __ccovbit8_116 0142                             __ccovbit8_136 012E  
                           __ccovbit8_182 0100                             __ccovbit9_180 0102  
                                  i1l2100 00A0                                    i1l2110 00C0  
                                  i1l2102 00A4                                    i1l2120 0292  
                                  i1l2112 00C3                                    i1l2104 00AB  
                                  i1l2130 02AF                                    i1l2122 0298  
                                  i1l2114 0283                                    i1l2106 00B8  
                                  i1l2140 065A                                    i1l2132 02B4  
                                  i1l2124 02A3                                    i1l2116 0287  
                                  i1l2108 00BA                                    i1l2044 06A1  
                                  i1l2220 02DC                                    i1l2212 02C6  
                                  i1l2134 02B8                                    i1l2126 02A8  
                                  i1l2118 028D                                    i1l2230 02ED  
                                  i1l2222 02E0                                    i1l2214 02CB  
                                  i1l2136 02BF                                    i1l2080 0052  
                                  i1l2240 0302                                    i1l2232 02F5  
                                  i1l2224 02E1                                    i1l2216 02D1  
                                  i1l2250 0624                                    i1l2138 0656  
                                  i1l2090 0074                                    i1l2082 0057  
                                  i1l2226 02E2                                    i1l2218 02D5  
                                  i1l2252 0625                                    i1l2092 0078  
                                  i1l2084 0061                                    i1l2076 0049  
                                  i1l2228 02EA                                    i1l2236 02F8  
                                  i1l2260 0638                                    i1l2254 0628  
                                  i1l2094 007F                                    i1l2086 0065  
                                  i1l2078 004E                                    i1l2238 02FF  
                                  i1l2262 063E                         __ccov297_end_blk0 056F  
                       __ccov385_end_blk0 0441                                    i1l2248 0665  
                                  i1l2256 062E                                    i1l2096 0086  
                                  i1l2088 0070                                    u201_20 02D1  
                                  u201_21 02D0                         __ccov393_end_blk3 0470  
                                  i1l2098 008A                                    i1l2258 0636  
                       __ccov369_end_blk6 032C                                    i1l1910 06A7  
                       __ccov289_end_blk9 02EA                                    i1l1920 04FC  
                                  i1l1912 04EA                                    u202_20 02DC  
                                  u202_21 02DB                                    i1l1930 0543  
                                  i1l1922 04FD                                    i1l1914 04EE  
                                  i1l2490 000A                                    i1l1932 0547  
                                  i1l1924 0536                                    i1l1916 04F3  
                                  i1l1940 0612                                    i1l2492 000F  
                                  i1l1934 0548                                    i1l1926 053A  
                                  i1l1918 04F7                                    i1l1942 0616  
                                  i1l2494 0019                                    i1l1928 0540  
                                  i1l1944 061C                                    i1l1960 01C0  
                                  i1l1952 01A3                                    u203_20 02EA  
                                  i1l2496 001E                                    i1l2488 0006  
                                  u203_21 02E9                                    i1l1970 01DB  
                                  i1l1962 01C6                                    i1l1954 01AB  
                                  i1l1946 0194                                    i1l2498 0024  
                                  i1l1980 0555                                    i1l1972 01E2  
                                  i1l1964 01CC                                    i1l1956 01AF  
                                  i1l1948 0198                                    i1l1982 0559  
                                  i1l1974 01E6                                    i1l1966 01CD  
                                  i1l1958 01B6                                    i1l1990 064A  
                                  u140_20 04EE                                    i1l1984 055F  
                                  i1l1976 01ED                                    i1l1968 01D6  
                                  i1l1992 064E                                    u204_20 02FF  
                                  u140_21 04ED                                    u204_21 02FE  
                                  i1l1986 0560                                    i1l1978 054F  
                                  i1l1988 0646                                    u141_20 04F3  
                                  u141_21 04F2                                    u206_20 066F  
                                  u142_20 053A                                    u150_20 01C0  
                                  u206_21 066C                                    u142_21 0539  
                                  u150_21 01BF                                    u143_20 0540  
                                  u151_20 01C6                                    u143_21 053F  
                                  u151_21 01C5                                    u207_24 0671  
                                  u208_20 062E                                    u144_20 0616  
                                  u152_20 01CC                                    u208_21 062D  
                                  u144_21 0615                                    u152_21 01CB  
                                  u153_20 01E2                                    u145_20 0198  
                                  u209_20 063E                                    u153_21 01E1  
                                  u145_21 0197                                    u209_21 063D  
                                  u154_20 01ED                                    u146_20 019E  
                                  u170_20 007F                                    u250_20 000A  
                                  u154_21 01EC                                    u146_21 019D  
                                  u170_21 007E                                    u250_21 0009  
                                  u155_20 0555                                    u147_20 01A3  
                                  u171_20 0086                                    u251_20 000F  
                                  u155_21 0554                                    u147_21 01A2  
                                  u171_21 0085                                    u251_21 000E  
                                  u180_20 02AE                                    u156_20 055F  
                                  u148_20 01AB                                    u172_20 00A0  
                                  u252_20 0019                                    u180_21 02AD  
                                  u156_21 055E                                    u148_21 01AA  
                                  u172_21 009F                                    u252_21 0018  
                                  u181_20 02B4                                    u149_20 01B6  
                                  u157_20 064A                                    u173_20 00AB  
                                  u165_20 0052                                    u253_20 001E  
                                  u181_21 02B3                                    u149_21 01B5  
                                  u157_21 0649                                    u173_21 00AA  
                                  u165_21 0051                                    u253_21 001D  
                                  u182_20 02BF                                    u174_20 00C0  
                                  u166_20 0057                                    u254_20 0024  
                                  u182_21 02BE                                    u174_21 00BF  
                                  u166_21 0056                                    u254_21 0023  
                                  u183_20 065A                                    u175_20 0287  
                                  u167_20 0061                                    u183_21 0659  
                                  u175_21 0286                                    u167_21 0060  
                                  u184_20 0660                                    u176_20 028D  
                                  u168_20 0065                                    u184_21 065F  
                                  u176_21 028C                                    u168_21 0064  
                                  u177_20 0298                                    u169_20 0078  
                                  u177_21 0297                                    u169_21 0077  
                                  u178_20 02A3                                    u178_21 02A2  
                        __ccov10_end_blk1 0678                                    u179_20 02A8  
                                  u179_21 02A7                          _GOOD_WSP_VOLTAGE 06BE  
                                  _OSCCON 0099                                    _WDTCON 0097  
                       __ccov298_end_blk1 0574                         __ccov386_end_blk1 0442  
                       __ccov394_end_blk4 047A                        __ccov335_end_blk11 0210  
                      __ccov175_end_blk15 01D6                        __ccov343_end_blk24 0233  
                      __ccov319_end_blk16 016A                        __ccov255_end_blk18 009A  
                      __ccov327_end_blk28 0191                        __ccov263_end_blk29 00C6  
                        __ccov11_end_blk2 067B                         __ccov299_end_blk2 057B  
                       __ccov387_end_blk2 0445                         __ccov395_end_blk5 047F  
                        __ccov12_end_blk3 067D                        __ccov51_start_blk3 05F2  
                      __ccov43_start_blk4 0019                        __ccov35_start_blk4 05CE  
                      __ccov27_start_blk7 0533                          __end_of_get_jump 03BE  
                        __end_of_go_close 0414                         __ccov388_end_blk3 0449  
                       __ccov396_end_blk6 0480                        __ccov272_end_blk10 02AF  
                      __ccov336_end_blk13 0215                        __ccov328_end_blk30 0194  
                      __ccov264_end_blk31 00C8                        __ccov360_end_blk16 03B7  
                      __ccov344_end_blk25 0234                        __ccov176_end_blk18 01DB  
                      __ccov256_end_blk19 00A0                       __ccov301_start_blk0 0348  
                     __ccov117_start_blk2 03F4                       __ccov141_start_blk2 060A  
                     __ccov205_start_blk2 03C8                       __ccov125_start_blk4 0428  
                     __ccov109_start_blk6 0548                       __ccov221_start_blk7 00F3  
                     __ccov133_start_blk8 04E7               __end_of_MELODY_REPEAT_DELAY 06CD  
                    __ccov202_start_blk17 0280                          ?_TMR0_Initialize 0073  
                       __ccov389_end_blk4 045E                         __ccov397_end_blk7 0486  
                       ??_EEPROM_ReadByte 0075                          __end_of_fun_work 0283  
                        __ccov22_end_blk0 0528                  __end_of_EEPROM_WriteByte 048B  
                        __end_of_sec_work 00C8                                 ??_get_fun 0075  
                        __end_of_rele_off 05AC                                 ??_get_wsp 0077  
                       __ccov398_end_blk8 0488                                 ??_go_open 0075  
                      __ccov177_end_blk20 01E2                        __ccov257_end_blk20 00A4  
                      __ccov273_end_blk13 02B4                        __ccov337_end_blk16 0217  
                      __ccov361_end_blk17 03B9                        __ccov345_end_blk26 0236  
                        __ccov31_end_blk0 05C6                          __ccov23_end_blk1 0529  
           __end_of_RELE_POWER_WORK_DELAY 06D3                      __ccov177_start_blk20 01DB  
                    __ccov257_start_blk20 00A0                      __ccov273_start_blk13 02AF  
                    __ccov337_start_blk16 0215                      __ccov361_start_blk17 03B7  
                    __ccov345_start_blk26 0234                         __ccov399_end_blk9 048B  
                               ??_ms_tick 0075                           ?_WDT_Initialize 0073  
                        __ccov40_end_blk1 000F                          __ccov32_end_blk1 05C9  
                        __ccov24_end_blk2 052D                        __ccov52_start_blk4 05F4  
                      __ccov44_start_blk5 001E                        __ccov36_start_blk5 05D3  
                      __ccov28_start_blk9 0534                    EEPROM_WriteByte@status 0397  
                ADC_GetConversion@channel 0076                     _HIGH_WATER_RESISTANSE 06C6  
                 __end_of_TMR2_StartTimer 06BB  TMR0_SetInterruptHandler@InterruptHandler 0075  
TMR2_SetInterruptHandler@InterruptHandler 0075                        __ccov290_end_blk10 02ED  
                      __ccov362_end_blk20 03BB                        __ccov178_end_blk21 01E6  
                      __ccov258_end_blk21 00AB                        __ccov274_end_blk14 02B8  
                      __ccov338_end_blk18 021F                        __ccov346_end_blk29 0238  
                        __ccov41_end_blk2 0014                          __ccov33_end_blk2 05CB  
                        __ccov25_end_blk3 052F                       __ccov214_start_blk0 00C8  
                     __ccov134_start_blk0 05AC                       __ccov310_start_blk0 0131  
                     __ccov150_start_blk1 04B0                       __ccov302_start_blk1 0374  
                     __ccov118_start_blk3 03F9                       __ccov206_start_blk3 03CA  
                     __ccov142_start_blk4 060F                       __ccov126_start_blk6 043B  
                     __ccov222_start_blk8 00F7                      __end_of_go_close_alt 05C3  
                       _SYSTEM_Initialize 05D9                          __ccov50_end_blk2 05F2  
                        __ccov42_end_blk3 0019                          __ccov34_end_blk3 05CE  
                        __ccov26_end_blk5 0533                   __end_of__initialization 0046  
                      _AUTOROTATION_DELAY 06C2                        ?_SYSTEM_Initialize 0073  
                      __ccov355_end_blk10 03A6                        __ccov291_end_blk11 02F5  
                      __ccov371_end_blk12 032E                        __ccov179_end_blk22 01ED  
                      __ccov259_end_blk22 00B8                        __ccov363_end_blk22 03BE  
                      __ccov347_end_blk31 023B                        __ccov275_end_blk16 02BF  
                      __ccov339_end_blk19 0223                          __ccov51_end_blk3 05F4  
                        __ccov43_end_blk4 001E                          __ccov35_end_blk4 05D3  
                        __ccov27_end_blk7 0534                             _UP_RESISTANSE 06C4  
                        __ccov52_end_blk4 05FB                          __ccov44_end_blk5 0024  
                        __ccov36_end_blk5 05D7                        __ccov53_start_blk5 05FB  
                      __ccov45_start_blk6 0024                          __ccov28_end_blk9 0536  
                      __ccov37_start_blk6 05D7                            __pcstackCOMMON 0073  
                     ??_SYSTEM_Initialize 0078                     __end_of_zummer_switch 0674  
                               ?_TMR0_ISR 0073                        __ccov196_end_blk10 0269  
                      __ccov356_end_blk11 03A7                        __ccov292_end_blk12 02F8  
                      __ccov372_end_blk15 032F                        __ccov276_end_blk17 02C3  
                      __ccov380_end_blk27 0341                                 ?_TMR2_ISR 0073  
                           __end_of_close 04CD                          __ccov53_end_blk5 05FE  
                        __ccov45_end_blk6 0029                          __ccov37_end_blk6 05D9  
                     __ccov127_start_blk0 04CD                       __ccov143_start_blk0 0595  
                     __ccov215_start_blk1 00D7                       __ccov135_start_blk1 05B0  
                     __ccov311_start_blk1 0135                       __ccov151_start_blk2 04B6  
                     __ccov303_start_blk2 0377                       __ccov119_start_blk4 03FE  
                     __ccov207_start_blk4 03CD                          ?_TMR2_Initialize 0073  
                        __ccov70_end_blk1 0694                          __ccov54_end_blk6 0600  
                            ?_start_alarm 0073               get_wsp@bad_measures_counter 004B  
                      __ccov197_end_blk11 026E                        __ccov357_end_blk12 03AA  
                      __ccov277_end_blk22 02C6                        __ccov293_end_blk16 02FF  
                      __ccov373_end_blk18 0330                        __ccov381_end_blk28 0343  
                        __ccov71_end_blk0 06CC                          __ccov39_end_blk0 000A  
                        __ccov55_end_blk0 06B9                            _OPTION_REGbits 0095  
                            ?_start_setup 0073                      __ccov290_start_blk10 02EA  
                    __ccov362_start_blk20 03B9                      __ccov178_start_blk21 01E2  
                    __ccov258_start_blk21 00A4                      __ccov274_start_blk14 02B4  
                    __ccov338_start_blk18 0217                      __ccov346_start_blk29 0236  
                        __ccov72_end_blk0 0583                          __ccov48_end_blk0 05F0  
                        __ccov56_end_blk1 06BB                        __ccov70_start_blk1 0692  
                      __ccov54_start_blk6 05FE                                   ??_close 0076  
                         __ccov1_end_blk0 05EB                                _beep_short 04EA  
               __end_of_SYSTEM_Initialize 05ED                          ??_go_close_short 0075  
                      __ccov198_end_blk12 0273                        __ccov374_end_blk21 0331  
                      __ccov358_end_blk14 03B2                        __ccov294_end_blk17 0302  
                      __ccov382_end_blk29 0345                          __ccov65_end_blk0 0638  
                        __ccov73_end_blk1 0586                          __ccov49_end_blk1 05F1  
                     __ccov232_start_blk0 054F                       __ccov128_start_blk1 04D1  
                     __ccov144_start_blk1 059E                       __ccov216_start_blk2 00DC  
                     __ccov136_start_blk2 05B6                       __ccov240_start_blk3 064E  
                     __ccov152_start_blk3 04BA                       __ccov312_start_blk3 0137  
                     __ccov304_start_blk3 037B                       __ccov160_start_blk4 049F  
                     __ccov208_start_blk6 03D4                                __pbssBANK0 0034  
                         __ccov2_end_blk1 05ED                          __ccov90_end_blk0 0699  
                        __ccov66_end_blk1 063E                          __ccov74_end_blk2 058A  
                         __ccov3_end_blk0 0680                        __ccov199_end_blk13 0278  
                      __ccov383_end_blk30 0346                        __ccov375_end_blk22 0338  
                      __ccov359_end_blk15 03B6                        __ccov295_end_blk18 0306  
                        __ccov91_end_blk1 069B                          __ccov67_end_blk2 0644  
                        __ccov75_end_blk3 058B                           __ccov4_end_blk1 0681  
                              __pmaintext 043E                          __ccov92_end_blk0 06BE  
                      __ccov71_start_blk0 06CA                        __ccov39_start_blk0 0004  
                      __ccov55_start_blk0 06B7                          __ccov68_end_blk4 0646  
                        __ccov76_end_blk4 058C          __end_of_TMR0_SetInterruptHandler 069B  
                         __ccov5_end_blk2 0683                                ??_TMR0_ISR 0073  
                              ??_TMR2_ISR 0075                           _time_rele_power 0045  
                      __ccov296_end_blk20 0308                        __ccov384_end_blk31 0348  
                      __ccov376_end_blk23 033A                                __pintentry 0004  
                        __ccov85_end_blk0 0625                          __ccov93_end_blk0 06AA  
                        __ccov69_end_blk0 0692                          __ccov77_end_blk5 0593  
                     __ccov233_start_blk1 0555                       __ccov129_start_blk2 04D7  
                     __ccov145_start_blk2 05A2                       __ccov401_start_blk2 0504  
                     __ccov217_start_blk3 00E1                       __ccov137_start_blk3 05BC  
                     __ccov153_start_blk4 04C0                       __ccov305_start_blk4 037C  
                     __ccov241_start_blk5 0654                       __ccov161_start_blk5 04A5  
                     __ccov313_start_blk5 0139                       __ccov209_start_blk7 03DA  
                          __ccovbit10_123 013B                            __ccovbit10_137 012D  
                          __ccovbit11_106 014C                            __ccovbit11_163 0113  
                          __ccovbit12_107 014B                            __ccovbit12_147 0123  
                          __ccovbit12_172 010A                            __ccovbit20_149 0121  
                          __ccovbit20_175 0107                            __ccovbit13_108 014A  
                          __ccovbit21_128 0136                            __ccovbit13_164 0112  
                          __ccovbit21_165 0111                            __ccovbit14_124 013A  
                          __ccovbit14_109 0149                            __ccovbit22_141 0129  
                          __ccovbit14_138 012C                            __ccovbit30_162 0114  
                          __ccovbit14_156 011A                            __ccovbit14_173 0109  
                          __ccovbit15_110 0148                            __ccovbit22_159 0117  
                          __ccovbit22_176 0106                      __ccov212_start_blk10 03E4  
                          __ccovbit31_131 0133                            __ccovbit23_129 0135  
                          __ccovbit23_166 0110                            __ccovbit31_169 010D  
                          __ccovbit31_177 0105                            __ccovbit16_125 0139  
                          __ccovbit16_139 012B                            __ccovbit16_157 0119  
                          __ccovbit17_111 0147                            __ccovbit17_140 012A  
                          __ccovbit17_158 0118                            __ccovbit17_174 0108  
                          __ccovbit18_126 0138                            __ccovbit26_160 0116  
                          __ccovbit18_148 0122                            __ccovbit26_167 010F  
                          __ccovbit19_112 0146                            __ccovbit19_127 0137  
                         __ccov6_end_blk3 0685                            __ccovbit28_161 0115  
                          __ccovbit29_130 0134                            __ccovbit29_168 010E  
                        __ccov86_end_blk1 0628                          __ccov94_end_blk1 06AD  
                        __ccov78_end_blk6 0595                         _time_rele_control 0043  
                         __ccov7_end_blk0 06B0                        __ccov377_end_blk24 033C  
                        __ccov95_end_blk0 06A4                          __ccov87_end_blk2 062E  
                              _eeprom_set 0567                      __ccov355_start_blk10 03A2  
                    __ccov291_start_blk11 02ED                      __ccov371_start_blk12 032D  
                    __ccov179_start_blk22 01E6                      __ccov259_start_blk22 00AB  
                    __ccov363_start_blk22 03BB                      __ccov347_start_blk31 0238  
                    __ccov275_start_blk16 02B8                      __ccov339_start_blk19 021F  
                         __ccov8_end_blk1 06B2                                   _OSCTUNE 0098  
                        __ccov96_end_blk1 06A7                          __ccov88_end_blk3 0634  
                      __ccov72_start_blk0 057E                        __ccov48_start_blk0 05ED  
                      __ccov56_start_blk1 06B9                         __end_of_beep_long 054F  
                         __ccov9_end_blk0 0677                          ?_TMR2_StartTimer 0073  
                               ?_get_jump 0073                        __ccov378_end_blk25 033E  
                               ?_go_close 0073                          __ccov97_end_blk0 04EE  
                        __ccov89_end_blk5 0636                       __ccov242_start_blk0 0049  
                     __ccov330_start_blk1 01F7                       __ccov234_start_blk3 0559  
                     __ccov146_start_blk3 05A5                       __ccov402_start_blk3 050A  
                     __ccov218_start_blk4 00E6                       __ccov138_start_blk5 05C1  
                     __ccov154_start_blk5 04C6                       __ccov314_start_blk6 0141  
                     __ccov306_start_blk7 0380                       __ccov162_start_blk9 04A9  
                        __ccov98_end_blk1 04F3                                 ?_fun_work 0073  
                       __ccov1_start_blk0 05D9                        __ccov379_end_blk26 0340  
                               ?_sec_work 0073                          __ccov99_end_blk2 04F7  
                               ?_rele_off 0073                      _ADC_InterruptHandler 0047  
              ??_TMR2_SetInterruptHandler 0077                        __ccov65_start_blk0 0636  
                      __ccov73_start_blk1 0583                        __ccov49_start_blk1 05F0  
                           ??_beep_double 0073     __end_of_RELE_POWER_AUTOROTATION_DELAY 06D2  
           _RELE_POWER_AUTOROTATION_DELAY 06D1                       __ccov163_start_blk0 0194  
                     __ccov139_start_blk0 0600                       __ccov243_start_blk1 004E  
                     __ccov331_start_blk3 01F9                       __ccov235_start_blk4 055F  
                     __ccov147_start_blk4 05A6                       __ccov219_start_blk5 00EB  
                     __ccov403_start_blk5 0511                       __ccov315_start_blk8 014C  
                     __ccov155_start_blk9 04CA                      __ccov213_start_blk14 03E8  
                __end_of_GOOD_WSP_VOLTAGE 06C0                                   __ptext1 03BE  
                                 __ptext2 0308                                   __ptext3 0567  
                                 __ptext4 0465                                   __ptext5 0504  
                                 __ptext6 06B7                                   __ptext7 05D9  
                                 __ptext8 06AD                                   __ptext9 05ED  
                                 _get_fun 01F3                                   _get_wsp 0131  
                                 _go_open 04CD                         __ccov2_start_blk1 05EB  
                   _OSCILLATOR_Initialize 067D                                 _T2CONbits 001C  
                    __ccov196_start_blk10 0263                      __ccov356_start_blk11 03A6  
                    __ccov292_start_blk12 02F5                      __ccov372_start_blk15 032E  
                    __ccov276_start_blk17 02BF                      __ccov380_start_blk27 0340  
                ??_PIN_MANAGER_Initialize 0075                                   _ms_tick 02C6  
                   __end_of_hardware_work 0383                        __ccov90_start_blk0 0694  
                      __ccov66_start_blk1 0638                        __ccov74_start_blk2 0586  
                             ?_beep_short 0073                                   clrloop0 069C  
                              ??_get_jump 0075                                ??_go_close 0075  
                       __end_of_rele_tick 01F3                      end_of_initialization 0046  
                     __ccov156_start_blk0 048B                       __ccov308_start_blk1 0665  
                     __ccov164_start_blk1 0198                       __ccov244_start_blk2 0052  
                     __ccov236_start_blk5 0560                       __ccov148_start_blk5 05AA  
                     __ccov332_start_blk5 0201                       __ccov404_start_blk6 0518  
                              ??_fun_work 0076                         __ccov3_start_blk0 067D  
                         _EEPROM_ReadByte 0504                                ??_sec_work 0074  
                              ??_rele_off 0075                             ??_clear_alarm 0075  
                           ??_ms_100_work 0073                        __ccov91_start_blk1 0699  
                      __ccov67_start_blk2 063E                        __ccov75_start_blk3 058A  
                           ??_ms_200_work 0073                            _FUN_MEAS_COUNT 06D4  
                     __ccov149_start_blk0 04AC                       __ccov157_start_blk1 048F  
                     __ccov309_start_blk3 0671                       __ccov165_start_blk3 019F  
                     __ccov245_start_blk3 0057                       __ccov237_start_blk8 0565  
                     __ccov333_start_blk8 0203                       __ccov405_start_blk8 051A  
                            _go_close_alt 05AC                      __ccov230_start_blk17 0127  
                        ??_WDT_Initialize 0075              __end_of_LOW_WATER_RESISTANSE 06CA  
                _TMR0_SetInterruptHandler 0694                                 _PORTAbits 000C  
                               _PORTCbits 000E                         ?_EEPROM_WriteByte 0075  
                       __end_of_stop_tone 06A7                       __end_of_beep_double 0624  
                       __end_of_switch_wm 03EA                         __ccov4_start_blk1 0680  
                             ?_eeprom_set 0073                        ??_EEPROM_WriteByte 0076  
                    __ccov197_start_blk11 0269                      __ccov357_start_blk12 03A7  
                    __ccov277_start_blk22 02C3                      __ccov293_start_blk16 02F8  
                    __ccov373_start_blk18 032F                      __ccov381_start_blk28 0341  
                               _TRISAbits 008C                                 _TRISCbits 008E  
                      __ccov92_start_blk0 06BB                        __ccov68_start_blk4 0644  
                      __ccov76_start_blk4 058B                       __ccov238_start_blk0 0646  
                     __ccov182_start_blk0 0685                       __ccov158_start_blk2 0495  
                     __ccov190_start_blk3 024A                       __ccov350_start_blk3 0389  
                     __ccov166_start_blk4 01A3                       __ccov246_start_blk4 005B  
                     __ccov270_start_blk8 029D                        EEPROM_WriteByte@dt 0075  
                              _start_tone 06A7                         __ccov5_start_blk2 0681  
                              get_wsp@res 0058                    __end_of_FUN_MEAS_COUNT 06D5  
                      __ccov85_start_blk0 0624                        __ccov93_start_blk0 06A7  
                      __ccov69_start_blk0 068D                        __ccov77_start_blk5 058C  
    __end_of_TMR2_DefaultInterruptHandler 06CC              _TMR2_DefaultInterruptHandler 06CA  
                             __ccovbit1_1 0396                               __ccovbit1_3 0394  
                             __ccovbit1_7 0390                               __ccovbit3_2 0395  
                             __ccovbit3_4 0393                               __ccovbit2_8 038F  
                             __ccovbit3_9 038E                               __ccovbit6_6 0391  
                             __ccovbit9_5 0392                       __end_of_clear_alarm 06B7  
                     __ccov239_start_blk1 064A                       __ccov183_start_blk1 0689  
                     __ccov159_start_blk3 0499                       __ccov191_start_blk4 024F  
                     __ccov351_start_blk4 038B                       __ccov167_start_blk5 01AB  
                     __ccov247_start_blk6 005D                       __ccov271_start_blk9 02A3  
                    __ccov223_start_blk10 00FD                      __ccov231_start_blk19 012F  
                          _ADC_Initialize 0674                    ?_OSCILLATOR_Initialize 0073  
                           __pbitbssBANK0 0100                       __end_of_ms_100_work 0665  
                     __end_of_ms_200_work 02C6                         __ccov6_start_blk3 0683  
                           ??_go_open_alt 0075                       start_initialization 002E  
                    __ccov198_start_blk12 026E                      __ccov374_start_blk21 0330  
                    __ccov358_start_blk14 03AA                      __ccov294_start_blk17 02FF  
                    __ccov382_start_blk29 0343                         __ccov46_end_blk10 002A  
                   _RELE_POWER_WORK_DELAY 06D2                             ??_sec_30_work 0073  
                      __ccov86_start_blk1 0625                        __ccov94_start_blk1 06AA  
                      __ccov78_start_blk6 0593                   __end_of_EEPROM_ReadByte 051D  
                     __ccov280_start_blk2 0660                       __ccov184_start_blk2 068B  
                     __ccov192_start_blk5 0254                       __ccov352_start_blk5 0390  
                     __ccov168_start_blk6 01AF                       __ccov248_start_blk7 0061  
                       __ccov47_end_blk12 002D                         __ccov7_start_blk0 06AD  
                     __ccov46_start_blk10 0029                          _beep_short_count 007D  
                      __ccov95_start_blk0 06A1                        __ccov87_start_blk2 0628  
                             _beep_double 0612                    __end_of_ADC_Initialize 067D  
                     __ccov265_start_blk0 0283                       __ccov329_start_blk0 01F3  
                     __ccov185_start_blk0 06B2                       __ccov281_start_blk4 0663  
                     __ccov193_start_blk6 0259                       __ccov169_start_blk7 01B6  
                     __ccov353_start_blk7 0396                       __ccov249_start_blk8 0065  
           ?_TMR2_DefaultInterruptHandler 0073                      __ccov224_start_blk11 010B  
                    __ccov320_start_blk17 016A                         __ccov8_start_blk1 06B0  
                       _AUTOROTATION_DAYS 06CE                               __pbssCOMMON 0079  
                               ___latbits 0000                             __pcstackBANK0 0058  
                    __ccov199_start_blk13 0273                      __ccov383_start_blk30 0345  
                    __ccov375_start_blk22 0331                      __ccov359_start_blk15 03B2  
                    __ccov295_start_blk18 0302                        __ccov96_start_blk1 06A4  
                      __ccov88_start_blk3 062E                       __end_of_go_open_alt 0612  
                            sec_work@iled 004C                               ?_start_tone 0073  
                     __ccov282_start_blk0 02C6                       __ccov266_start_blk1 0287  
                     __ccov186_start_blk1 06B4                       __ccov194_start_blk7 025B  
                     __ccov354_start_blk9 039B                       __ccov370_start_blk9 032C  
                               _beep_long 0536                       __end_of_sec_30_work 0656  
                    _LOW_WATER_RESISTANSE 06C8                     _TMR0_InterruptHandler 0053  
                               __pnvBANK0 0053                         __ccov9_start_blk0 0674  
                             _clear_alarm 06B2                    _PIN_MANAGER_Initialize 05C3  
                     __ccov47_start_blk12 002A                               _ms_100_work 0656  
                      __ccov97_start_blk0 04EA                        __ccov89_start_blk5 0634  
                             _ms_200_work 0283                           ?_ADC_Initialize 0073  
                     __ccov187_start_blk0 023B                       __ccov283_start_blk1 02CB  
                     __ccov267_start_blk2 028D                       __ccov195_start_blk9 025F  
            ??_INTERRUPT_InterruptManager 0075                      __ccov225_start_blk12 0110  
                    __ccov321_start_blk20 016F                 __end_of_AUTOROTATION_DAYS 06CF  
                                ?_get_fun 0073                                  ?_get_wsp 0073  
                                ?_go_open 0073                             ??_minute_tick 0073  
                                ?_ms_tick 0073                      __ccov296_start_blk20 0306  
                    __ccov384_start_blk31 0346                      __ccov376_start_blk23 0338  
                            ??_beep_short 0073                            _WSP_MEAS_COUNT 06D5  
                      __ccov98_start_blk1 04EE                          ?_EEPROM_ReadByte 0073  
                               _sec_count 0052                       __ccov348_start_blk0 0383  
                     __ccov364_start_blk0 0308                       __ccov188_start_blk1 023F  
                     __ccov284_start_blk2 02D1                       __ccov268_start_blk4 0292  
                       ??_TMR0_Initialize 0077                                ?_beep_long 0073  
                                _LATAbits 010C                                  _LATCbits 010E  
                               _rele_tick 0194                                 clear_ram0 069B  
                                _PIE1bits 0091                                  _RELE_GAP 06D0  
              ??_TMR0_SetInterruptHandler 0077                                  _PIR1bits 0011  
                               _time_meas 004F                          _time_moving_wait 0050  
                                _TMR0_ISR 0624                                 _time_tone 003F  
                      __ccov99_start_blk2 04F3                                  _TMR2_ISR 0636  
                           _zummer_switch 0665                        __end_of_beep_short 0504  
                     __ccov349_start_blk1 0387                       __ccov365_start_blk1 030B  
                     __ccov189_start_blk2 0245                       __ccov285_start_blk3 02D5  
                     __ccov269_start_blk5 0298                           _beep_long_count 004E  
                              _ADCON0bits 009D                      __ccov170_start_blk10 01BA  
                    __ccov250_start_blk10 0070                      __ccov226_start_blk13 0115  
                    __ccov322_start_blk21 0176                              ??_eeprom_set 0058  
          ??_TMR2_DefaultInterruptHandler 0073                               _go_open_alt 0600  
               ?_TMR2_SetInterruptHandler 0075                    __end_of_WSP_MEAS_COUNT 06D6  
                               _stop_tone 06A1                                 _switch_wm 03BE  
                    __ccov377_start_blk24 033A                               _sec_30_work 0646  
                         ms_tick@ms_count 0039                       __end_of_minute_tick 0567  
                     __ccov278_start_blk0 0656                       __ccov366_start_blk2 030C  
                     __ccov286_start_blk4 02DC                       __ccov390_start_blk6 045E  
                       _beep_double_count 004D                         ??_TMR2_Initialize 0077  
                              ?_rele_tick 0073                     __end_of_UP_RESISTANSE 06C6  
                     _MELODY_REPEAT_DELAY 06CC                         _ADC_GetConversion 051D  
                         _JUMP_MEAS_COUNT 06D3                        __end_of_eeprom_set 057E  
                          ?_zummer_switch 0073                   ??_OSCILLATOR_Initialize 0075  
                      ?_ADC_GetConversion 0073                       __ccov279_start_blk1 065A  
                     __ccov367_start_blk3 031E                       __ccov287_start_blk7 02E0  
                           ??_start_alarm 0075                __end_of_SHORT_ZUMMER_DELAY 06D8  
                    __ccov171_start_blk11 01C0                      __ccov251_start_blk12 0074  
                    __ccov227_start_blk14 011A                      __ccov323_start_blk22 0179  
                              _ANSELAbits 018C                                _ANSELCbits 018E  
                     ??_ADC_GetConversion 0075                             ??_start_setup 0079  
                              ?_stop_tone 0073                             _time_rele_gap 0041  
                              ?_switch_wm 0073                      __ccov378_start_blk25 033C  
                                __ptext10 068D                                  __ptext11 057E  
                                __ptext20 051D                                  __ptext12 0694  
                                __ptext21 0383                                  __ptext13 05C3  
                                __ptext30 00C8                                  __ptext22 01F3  
                                __ptext14 067D                                  __ptext31 04CD  
                                __ptext23 023B                                  __ptext15 0674  
                                __ptext40 0194                                  __ptext32 0414  
                                __ptext24 048B                                  __ptext16 0348  
                                __ptext41 054F                                  __ptext25 0600  
                                __ptext17 0131                                  __ptext50 0665  
                                __ptext42 0283                                  __ptext34 0636  
                                __ptext26 04AC                                  __ptext18 0685  
                                __ptext43 0612                                  __ptext35 06CA  
                                __ptext27 0595                                  __ptext19 06B2  
                                __ptext44 04EA                                  __ptext36 02C6  
                                __ptext28 05AC                                  __ptext45 0536  
                                __ptext37 06A1                                  __ptext29 03EA  
                                __ptext46 06A7                                  __ptext38 0049  
                                __ptext47 0656                                  __ptext39 0646  
                                __ptext48 0624                                  __ptext49 06BB  
                                _get_jump 0383                                  _go_close 03EA  
                         _BAD_WSP_VOLTAGE 06C0                       __ccov392_start_blk2 0465  
                     __ccov368_start_blk4 0321                       __ccov288_start_blk8 02E1  
                           _time_rotation 0034                               ??_beep_long 0073  
                                _fun_work 023B      __end_of_TMR0_DefaultInterruptHandler 06BE  
            _TMR0_DefaultInterruptHandler 06BB                                  _sec_work 0049  
               __end_of_ADC_GetConversion 0536                                  _rele_off 0595  
                       _MOVING_WAIT_DELAY 06CD                              ?_beep_double 0073  
                                int$flags 007E                         ??_TMR2_StartTimer 0075  
      __end_of_INTERRUPT_InterruptManager 002D                _INTERRUPT_InterruptManager 0004  
                     __ccov297_start_blk0 0567                       __ccov385_start_blk0 043E  
                     __ccov393_start_blk3 046B                       __ccov369_start_blk6 032A  
                     __ccov289_start_blk9 02E2                            ms_tick@s_count 0037  
                    __ccov316_start_blk11 014E                      __ccov172_start_blk12 01C6  
                    __ccov340_start_blk20 0223                      __ccov252_start_blk13 0078  
                    __ccov180_start_blk23 01ED                      __ccov260_start_blk23 00B8  
                    __ccov228_start_blk15 011F                      __ccov324_start_blk24 017F  
                    get_jump@jump_counter 0049                               _minute_tick 054F  
                              _INTCONbits 000B                        __ccov10_start_blk1 0677  
           __end_of_HIGH_WATER_RESISTANSE 06C8                            __pstringtext10 06C8  
                          __pstringtext11 06D0                            __pstringtext12 06D1  
                          __pstringtext13 06D2                            __pstringtext14 06D3  
                          __pstringtext15 06D4                            __pstringtext16 06D5  
                          __pstringtext17 06D6                            __pstringtext18 06D7  
                     __ccov100_start_blk4 04F7                      __ccov379_start_blk26 033E  
                           _hardware_work 0348                       __end_of_start_alarm 068D  
                     __end_of_start_setup 0348                                  intlevel1 0000  
                            ??_start_tone 0073                       __ccov298_start_blk1 056F  
                     __ccov386_start_blk1 0441                       __ccov394_start_blk4 0470  
                 __end_of_JUMP_MEAS_COUNT 06D4                   ?_PIN_MANAGER_Initialize 0073  
                             ??_rele_tick 0073                 __end_of_MOVING_WAIT_DELAY 06CE  
                       _LONG_ZUMMER_DELAY 06D6                       EEPROM_ReadByte@addr 0077  
                      __ccov11_start_blk2 0678                          ??_ADC_Initialize 0075  
                            ?_clear_alarm 0073                            _go_close_short 0414  
           ?_TMR0_DefaultInterruptHandler 0073                           ??_zummer_switch 0073  
                       __ccov100_end_blk4 04FC                        __ccov200_end_blk14 027C  
                     __ccov101_start_blk5 04FC                              ?_ms_100_work 0073  
                            ?_ms_200_work 0073                         __ccov101_end_blk5 04FD  
                       __ccov102_end_blk6 0501                         __ccov110_end_blk8 054F  
                           __pstringtext1 06BE                             __pstringtext2 06C0  
                           __pstringtext3 06C2                             __pstringtext4 06C4  
                           __pstringtext5 06CC                             __pstringtext6 06CD  
                           __pstringtext7 06CE                             __pstringtext8 06CF  
                           __pstringtext9 06C6                        __ccov201_end_blk15 0280  
                     __ccov299_start_blk2 0574                       __ccov387_start_blk2 0442  
                     __ccov395_start_blk5 047A                        __end_of_start_tone 06AD  
                              _OPTION_REG 0095                         _time_zummer_short 003D  
                    __ccov173_start_blk13 01CC                      __ccov341_start_blk21 0224  
                    __ccov317_start_blk13 0150                      __ccov253_start_blk14 007F  
                    __ccov229_start_blk16 0124                      __ccov325_start_blk25 0186  
                    __ccov181_start_blk27 01F1                      __ccov261_start_blk27 00BA  
     __end_of_FRIMWARE_VERSION_EEPROM_ADR 06D0               _FRIMWARE_VERSION_EEPROM_ADR 06CF  
                             _time_melody 0051                         _autorotation_work 00C8  
                       __ccov111_end_blk0 0616                         __ccov103_end_blk8 0504  
                         _TMR0_Initialize 057E                __end_of_AUTOROTATION_DELAY 06C4  
                      __ccov12_start_blk3 067B                   __end_of_BAD_WSP_VOLTAGE 06C2  
                      ?_autorotation_work 0073                               ??_stop_tone 0073  
                             ??_switch_wm 0076                         __ccov104_end_blk0 053A  
                       __ccov112_end_blk1 061C                            ?_hardware_work 0073  
                       __ccov120_end_blk6 0414                        __ccov202_end_blk17 0283  
                     __ccov102_start_blk6 04FD                       __ccov110_start_blk8 054C  
                       __ccov121_end_blk0 0418                         __ccov105_end_blk1 0540  
                       __ccov113_end_blk3 0621                          _time_zummer_long 003B  
          __end_of_PIN_MANAGER_Initialize 05D9                       ??_autorotation_work 0075  
               __end_of_LONG_ZUMMER_DELAY 06D7                          _EEPROM_WriteByte 0465  
                       __ccov122_end_blk1 041E                         __ccov106_end_blk2 0543  
                       __ccov130_end_blk3 04E1                         __ccov114_end_blk5 0624  
                       __ccov210_end_blk8 03E1                       __ccov388_start_blk3 0445  
                     __ccov396_start_blk6 047F                    __end_of_go_close_short 043E  
                   _TMR2_InterruptHandler 0055                         __ccov115_end_blk0 03EE  
                       __ccov203_end_blk0 03C2                         __ccov123_end_blk2 0423  
                       __ccov107_end_blk4 0547                         __ccov131_end_blk4 04E5  
                       __ccov211_end_blk9 03E4  
