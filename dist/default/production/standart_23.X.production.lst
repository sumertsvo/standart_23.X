

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Apr 26 17:56:16 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1823
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.40
    53                           ; Generated 17/11/2021 GMT
    54                           ; 
    55                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F1823 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000E                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  008C                     	;# 
   115  008E                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  010C                     	;# 
   130  010E                     	;# 
   131  0111                     	;# 
   132  0112                     	;# 
   133  0113                     	;# 
   134  0114                     	;# 
   135  0115                     	;# 
   136  0116                     	;# 
   137  0117                     	;# 
   138  0118                     	;# 
   139  0119                     	;# 
   140  011A                     	;# 
   141  011B                     	;# 
   142  011D                     	;# 
   143  011D                     	;# 
   144  018C                     	;# 
   145  018E                     	;# 
   146  0191                     	;# 
   147  0191                     	;# 
   148  0192                     	;# 
   149  0193                     	;# 
   150  0193                     	;# 
   151  0193                     	;# 
   152  0194                     	;# 
   153  0195                     	;# 
   154  0196                     	;# 
   155  0199                     	;# 
   156  019A                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019C                     	;# 
   162  019C                     	;# 
   163  019D                     	;# 
   164  019E                     	;# 
   165  019F                     	;# 
   166  020C                     	;# 
   167  020E                     	;# 
   168  0211                     	;# 
   169  0211                     	;# 
   170  0212                     	;# 
   171  0212                     	;# 
   172  0213                     	;# 
   173  0213                     	;# 
   174  0214                     	;# 
   175  0214                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  0291                     	;# 
   184  0291                     	;# 
   185  0292                     	;# 
   186  0293                     	;# 
   187  0294                     	;# 
   188  0295                     	;# 
   189  0295                     	;# 
   190  0296                     	;# 
   191  0391                     	;# 
   192  0392                     	;# 
   193  0393                     	;# 
   194  039A                     	;# 
   195  039C                     	;# 
   196  039D                     	;# 
   197  039E                     	;# 
   198  039F                     	;# 
   199  0FE4                     	;# 
   200  0FE5                     	;# 
   201  0FE6                     	;# 
   202  0FE7                     	;# 
   203  0FE8                     	;# 
   204  0FE9                     	;# 
   205  0FEA                     	;# 
   206  0FEB                     	;# 
   207  0FED                     	;# 
   208  0FEE                     	;# 
   209  0FEF                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000E                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  008C                     	;# 
   238  008E                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0097                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009A                     	;# 
   247  009B                     	;# 
   248  009B                     	;# 
   249  009C                     	;# 
   250  009D                     	;# 
   251  009E                     	;# 
   252  010C                     	;# 
   253  010E                     	;# 
   254  0111                     	;# 
   255  0112                     	;# 
   256  0113                     	;# 
   257  0114                     	;# 
   258  0115                     	;# 
   259  0116                     	;# 
   260  0117                     	;# 
   261  0118                     	;# 
   262  0119                     	;# 
   263  011A                     	;# 
   264  011B                     	;# 
   265  011D                     	;# 
   266  011D                     	;# 
   267  018C                     	;# 
   268  018E                     	;# 
   269  0191                     	;# 
   270  0191                     	;# 
   271  0192                     	;# 
   272  0193                     	;# 
   273  0193                     	;# 
   274  0193                     	;# 
   275  0194                     	;# 
   276  0195                     	;# 
   277  0196                     	;# 
   278  0199                     	;# 
   279  019A                     	;# 
   280  019B                     	;# 
   281  019B                     	;# 
   282  019B                     	;# 
   283  019B                     	;# 
   284  019C                     	;# 
   285  019C                     	;# 
   286  019D                     	;# 
   287  019E                     	;# 
   288  019F                     	;# 
   289  020C                     	;# 
   290  020E                     	;# 
   291  0211                     	;# 
   292  0211                     	;# 
   293  0212                     	;# 
   294  0212                     	;# 
   295  0213                     	;# 
   296  0213                     	;# 
   297  0214                     	;# 
   298  0214                     	;# 
   299  0215                     	;# 
   300  0215                     	;# 
   301  0215                     	;# 
   302  0216                     	;# 
   303  0216                     	;# 
   304  0217                     	;# 
   305  0217                     	;# 
   306  0291                     	;# 
   307  0291                     	;# 
   308  0292                     	;# 
   309  0293                     	;# 
   310  0294                     	;# 
   311  0295                     	;# 
   312  0295                     	;# 
   313  0296                     	;# 
   314  0391                     	;# 
   315  0392                     	;# 
   316  0393                     	;# 
   317  039A                     	;# 
   318  039C                     	;# 
   319  039D                     	;# 
   320  039E                     	;# 
   321  039F                     	;# 
   322  0FE4                     	;# 
   323  0FE5                     	;# 
   324  0FE6                     	;# 
   325  0FE7                     	;# 
   326  0FE8                     	;# 
   327  0FE9                     	;# 
   328  0FEA                     	;# 
   329  0FEB                     	;# 
   330  0FED                     	;# 
   331  0FEE                     	;# 
   332  0FEF                     	;# 
   333  0000                     	;# 
   334  0001                     	;# 
   335  0002                     	;# 
   336  0003                     	;# 
   337  0004                     	;# 
   338  0005                     	;# 
   339  0006                     	;# 
   340  0007                     	;# 
   341  0008                     	;# 
   342  0009                     	;# 
   343  000A                     	;# 
   344  000B                     	;# 
   345  000C                     	;# 
   346  000E                     	;# 
   347  0011                     	;# 
   348  0012                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0016                     	;# 
   352  0017                     	;# 
   353  0018                     	;# 
   354  0019                     	;# 
   355  001A                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001E                     	;# 
   359  001F                     	;# 
   360  008C                     	;# 
   361  008E                     	;# 
   362  0091                     	;# 
   363  0092                     	;# 
   364  0095                     	;# 
   365  0096                     	;# 
   366  0097                     	;# 
   367  0098                     	;# 
   368  0099                     	;# 
   369  009A                     	;# 
   370  009B                     	;# 
   371  009B                     	;# 
   372  009C                     	;# 
   373  009D                     	;# 
   374  009E                     	;# 
   375  010C                     	;# 
   376  010E                     	;# 
   377  0111                     	;# 
   378  0112                     	;# 
   379  0113                     	;# 
   380  0114                     	;# 
   381  0115                     	;# 
   382  0116                     	;# 
   383  0117                     	;# 
   384  0118                     	;# 
   385  0119                     	;# 
   386  011A                     	;# 
   387  011B                     	;# 
   388  011D                     	;# 
   389  011D                     	;# 
   390  018C                     	;# 
   391  018E                     	;# 
   392  0191                     	;# 
   393  0191                     	;# 
   394  0192                     	;# 
   395  0193                     	;# 
   396  0193                     	;# 
   397  0193                     	;# 
   398  0194                     	;# 
   399  0195                     	;# 
   400  0196                     	;# 
   401  0199                     	;# 
   402  019A                     	;# 
   403  019B                     	;# 
   404  019B                     	;# 
   405  019B                     	;# 
   406  019B                     	;# 
   407  019C                     	;# 
   408  019C                     	;# 
   409  019D                     	;# 
   410  019E                     	;# 
   411  019F                     	;# 
   412  020C                     	;# 
   413  020E                     	;# 
   414  0211                     	;# 
   415  0211                     	;# 
   416  0212                     	;# 
   417  0212                     	;# 
   418  0213                     	;# 
   419  0213                     	;# 
   420  0214                     	;# 
   421  0214                     	;# 
   422  0215                     	;# 
   423  0215                     	;# 
   424  0215                     	;# 
   425  0216                     	;# 
   426  0216                     	;# 
   427  0217                     	;# 
   428  0217                     	;# 
   429  0291                     	;# 
   430  0291                     	;# 
   431  0292                     	;# 
   432  0293                     	;# 
   433  0294                     	;# 
   434  0295                     	;# 
   435  0295                     	;# 
   436  0296                     	;# 
   437  0391                     	;# 
   438  0392                     	;# 
   439  0393                     	;# 
   440  039A                     	;# 
   441  039C                     	;# 
   442  039D                     	;# 
   443  039E                     	;# 
   444  039F                     	;# 
   445  0FE4                     	;# 
   446  0FE5                     	;# 
   447  0FE6                     	;# 
   448  0FE7                     	;# 
   449  0FE8                     	;# 
   450  0FE9                     	;# 
   451  0FEA                     	;# 
   452  0FEB                     	;# 
   453  0FED                     	;# 
   454  0FEE                     	;# 
   455  0FEF                     	;# 
   456  0000                     	;# 
   457  0001                     	;# 
   458  0002                     	;# 
   459  0003                     	;# 
   460  0004                     	;# 
   461  0005                     	;# 
   462  0006                     	;# 
   463  0007                     	;# 
   464  0008                     	;# 
   465  0009                     	;# 
   466  000A                     	;# 
   467  000B                     	;# 
   468  000C                     	;# 
   469  000E                     	;# 
   470  0011                     	;# 
   471  0012                     	;# 
   472  0015                     	;# 
   473  0016                     	;# 
   474  0016                     	;# 
   475  0017                     	;# 
   476  0018                     	;# 
   477  0019                     	;# 
   478  001A                     	;# 
   479  001B                     	;# 
   480  001C                     	;# 
   481  001E                     	;# 
   482  001F                     	;# 
   483  008C                     	;# 
   484  008E                     	;# 
   485  0091                     	;# 
   486  0092                     	;# 
   487  0095                     	;# 
   488  0096                     	;# 
   489  0097                     	;# 
   490  0098                     	;# 
   491  0099                     	;# 
   492  009A                     	;# 
   493  009B                     	;# 
   494  009B                     	;# 
   495  009C                     	;# 
   496  009D                     	;# 
   497  009E                     	;# 
   498  010C                     	;# 
   499  010E                     	;# 
   500  0111                     	;# 
   501  0112                     	;# 
   502  0113                     	;# 
   503  0114                     	;# 
   504  0115                     	;# 
   505  0116                     	;# 
   506  0117                     	;# 
   507  0118                     	;# 
   508  0119                     	;# 
   509  011A                     	;# 
   510  011B                     	;# 
   511  011D                     	;# 
   512  011D                     	;# 
   513  018C                     	;# 
   514  018E                     	;# 
   515  0191                     	;# 
   516  0191                     	;# 
   517  0192                     	;# 
   518  0193                     	;# 
   519  0193                     	;# 
   520  0193                     	;# 
   521  0194                     	;# 
   522  0195                     	;# 
   523  0196                     	;# 
   524  0199                     	;# 
   525  019A                     	;# 
   526  019B                     	;# 
   527  019B                     	;# 
   528  019B                     	;# 
   529  019B                     	;# 
   530  019C                     	;# 
   531  019C                     	;# 
   532  019D                     	;# 
   533  019E                     	;# 
   534  019F                     	;# 
   535  020C                     	;# 
   536  020E                     	;# 
   537  0211                     	;# 
   538  0211                     	;# 
   539  0212                     	;# 
   540  0212                     	;# 
   541  0213                     	;# 
   542  0213                     	;# 
   543  0214                     	;# 
   544  0214                     	;# 
   545  0215                     	;# 
   546  0215                     	;# 
   547  0215                     	;# 
   548  0216                     	;# 
   549  0216                     	;# 
   550  0217                     	;# 
   551  0217                     	;# 
   552  0291                     	;# 
   553  0291                     	;# 
   554  0292                     	;# 
   555  0293                     	;# 
   556  0294                     	;# 
   557  0295                     	;# 
   558  0295                     	;# 
   559  0296                     	;# 
   560  0391                     	;# 
   561  0392                     	;# 
   562  0393                     	;# 
   563  039A                     	;# 
   564  039C                     	;# 
   565  039D                     	;# 
   566  039E                     	;# 
   567  039F                     	;# 
   568  0FE4                     	;# 
   569  0FE5                     	;# 
   570  0FE6                     	;# 
   571  0FE7                     	;# 
   572  0FE8                     	;# 
   573  0FE9                     	;# 
   574  0FEA                     	;# 
   575  0FEB                     	;# 
   576  0FED                     	;# 
   577  0FEE                     	;# 
   578  0FEF                     	;# 
   579  0000                     	;# 
   580  0001                     	;# 
   581  0002                     	;# 
   582  0003                     	;# 
   583  0004                     	;# 
   584  0005                     	;# 
   585  0006                     	;# 
   586  0007                     	;# 
   587  0008                     	;# 
   588  0009                     	;# 
   589  000A                     	;# 
   590  000B                     	;# 
   591  000C                     	;# 
   592  000E                     	;# 
   593  0011                     	;# 
   594  0012                     	;# 
   595  0015                     	;# 
   596  0016                     	;# 
   597  0016                     	;# 
   598  0017                     	;# 
   599  0018                     	;# 
   600  0019                     	;# 
   601  001A                     	;# 
   602  001B                     	;# 
   603  001C                     	;# 
   604  001E                     	;# 
   605  001F                     	;# 
   606  008C                     	;# 
   607  008E                     	;# 
   608  0091                     	;# 
   609  0092                     	;# 
   610  0095                     	;# 
   611  0096                     	;# 
   612  0097                     	;# 
   613  0098                     	;# 
   614  0099                     	;# 
   615  009A                     	;# 
   616  009B                     	;# 
   617  009B                     	;# 
   618  009C                     	;# 
   619  009D                     	;# 
   620  009E                     	;# 
   621  010C                     	;# 
   622  010E                     	;# 
   623  0111                     	;# 
   624  0112                     	;# 
   625  0113                     	;# 
   626  0114                     	;# 
   627  0115                     	;# 
   628  0116                     	;# 
   629  0117                     	;# 
   630  0118                     	;# 
   631  0119                     	;# 
   632  011A                     	;# 
   633  011B                     	;# 
   634  011D                     	;# 
   635  011D                     	;# 
   636  018C                     	;# 
   637  018E                     	;# 
   638  0191                     	;# 
   639  0191                     	;# 
   640  0192                     	;# 
   641  0193                     	;# 
   642  0193                     	;# 
   643  0193                     	;# 
   644  0194                     	;# 
   645  0195                     	;# 
   646  0196                     	;# 
   647  0199                     	;# 
   648  019A                     	;# 
   649  019B                     	;# 
   650  019B                     	;# 
   651  019B                     	;# 
   652  019B                     	;# 
   653  019C                     	;# 
   654  019C                     	;# 
   655  019D                     	;# 
   656  019E                     	;# 
   657  019F                     	;# 
   658  020C                     	;# 
   659  020E                     	;# 
   660  0211                     	;# 
   661  0211                     	;# 
   662  0212                     	;# 
   663  0212                     	;# 
   664  0213                     	;# 
   665  0213                     	;# 
   666  0214                     	;# 
   667  0214                     	;# 
   668  0215                     	;# 
   669  0215                     	;# 
   670  0215                     	;# 
   671  0216                     	;# 
   672  0216                     	;# 
   673  0217                     	;# 
   674  0217                     	;# 
   675  0291                     	;# 
   676  0291                     	;# 
   677  0292                     	;# 
   678  0293                     	;# 
   679  0294                     	;# 
   680  0295                     	;# 
   681  0295                     	;# 
   682  0296                     	;# 
   683  0391                     	;# 
   684  0392                     	;# 
   685  0393                     	;# 
   686  039A                     	;# 
   687  039C                     	;# 
   688  039D                     	;# 
   689  039E                     	;# 
   690  039F                     	;# 
   691  0FE4                     	;# 
   692  0FE5                     	;# 
   693  0FE6                     	;# 
   694  0FE7                     	;# 
   695  0FE8                     	;# 
   696  0FE9                     	;# 
   697  0FEA                     	;# 
   698  0FEB                     	;# 
   699  0FED                     	;# 
   700  0FEE                     	;# 
   701  0FEF                     	;# 
   702  0000                     	;# 
   703  0001                     	;# 
   704  0002                     	;# 
   705  0003                     	;# 
   706  0004                     	;# 
   707  0005                     	;# 
   708  0006                     	;# 
   709  0007                     	;# 
   710  0008                     	;# 
   711  0009                     	;# 
   712  000A                     	;# 
   713  000B                     	;# 
   714  000C                     	;# 
   715  000E                     	;# 
   716  0011                     	;# 
   717  0012                     	;# 
   718  0015                     	;# 
   719  0016                     	;# 
   720  0016                     	;# 
   721  0017                     	;# 
   722  0018                     	;# 
   723  0019                     	;# 
   724  001A                     	;# 
   725  001B                     	;# 
   726  001C                     	;# 
   727  001E                     	;# 
   728  001F                     	;# 
   729  008C                     	;# 
   730  008E                     	;# 
   731  0091                     	;# 
   732  0092                     	;# 
   733  0095                     	;# 
   734  0096                     	;# 
   735  0097                     	;# 
   736  0098                     	;# 
   737  0099                     	;# 
   738  009A                     	;# 
   739  009B                     	;# 
   740  009B                     	;# 
   741  009C                     	;# 
   742  009D                     	;# 
   743  009E                     	;# 
   744  010C                     	;# 
   745  010E                     	;# 
   746  0111                     	;# 
   747  0112                     	;# 
   748  0113                     	;# 
   749  0114                     	;# 
   750  0115                     	;# 
   751  0116                     	;# 
   752  0117                     	;# 
   753  0118                     	;# 
   754  0119                     	;# 
   755  011A                     	;# 
   756  011B                     	;# 
   757  011D                     	;# 
   758  011D                     	;# 
   759  018C                     	;# 
   760  018E                     	;# 
   761  0191                     	;# 
   762  0191                     	;# 
   763  0192                     	;# 
   764  0193                     	;# 
   765  0193                     	;# 
   766  0193                     	;# 
   767  0194                     	;# 
   768  0195                     	;# 
   769  0196                     	;# 
   770  0199                     	;# 
   771  019A                     	;# 
   772  019B                     	;# 
   773  019B                     	;# 
   774  019B                     	;# 
   775  019B                     	;# 
   776  019C                     	;# 
   777  019C                     	;# 
   778  019D                     	;# 
   779  019E                     	;# 
   780  019F                     	;# 
   781  020C                     	;# 
   782  020E                     	;# 
   783  0211                     	;# 
   784  0211                     	;# 
   785  0212                     	;# 
   786  0212                     	;# 
   787  0213                     	;# 
   788  0213                     	;# 
   789  0214                     	;# 
   790  0214                     	;# 
   791  0215                     	;# 
   792  0215                     	;# 
   793  0215                     	;# 
   794  0216                     	;# 
   795  0216                     	;# 
   796  0217                     	;# 
   797  0217                     	;# 
   798  0291                     	;# 
   799  0291                     	;# 
   800  0292                     	;# 
   801  0293                     	;# 
   802  0294                     	;# 
   803  0295                     	;# 
   804  0295                     	;# 
   805  0296                     	;# 
   806  0391                     	;# 
   807  0392                     	;# 
   808  0393                     	;# 
   809  039A                     	;# 
   810  039C                     	;# 
   811  039D                     	;# 
   812  039E                     	;# 
   813  039F                     	;# 
   814  0FE4                     	;# 
   815  0FE5                     	;# 
   816  0FE6                     	;# 
   817  0FE7                     	;# 
   818  0FE8                     	;# 
   819  0FE9                     	;# 
   820  0FEA                     	;# 
   821  0FEB                     	;# 
   822  0FED                     	;# 
   823  0FEE                     	;# 
   824  0FEF                     	;# 
   825  0000                     	;# 
   826  0001                     	;# 
   827  0002                     	;# 
   828  0003                     	;# 
   829  0004                     	;# 
   830  0005                     	;# 
   831  0006                     	;# 
   832  0007                     	;# 
   833  0008                     	;# 
   834  0009                     	;# 
   835  000A                     	;# 
   836  000B                     	;# 
   837  000C                     	;# 
   838  000E                     	;# 
   839  0011                     	;# 
   840  0012                     	;# 
   841  0015                     	;# 
   842  0016                     	;# 
   843  0016                     	;# 
   844  0017                     	;# 
   845  0018                     	;# 
   846  0019                     	;# 
   847  001A                     	;# 
   848  001B                     	;# 
   849  001C                     	;# 
   850  001E                     	;# 
   851  001F                     	;# 
   852  008C                     	;# 
   853  008E                     	;# 
   854  0091                     	;# 
   855  0092                     	;# 
   856  0095                     	;# 
   857  0096                     	;# 
   858  0097                     	;# 
   859  0098                     	;# 
   860  0099                     	;# 
   861  009A                     	;# 
   862  009B                     	;# 
   863  009B                     	;# 
   864  009C                     	;# 
   865  009D                     	;# 
   866  009E                     	;# 
   867  010C                     	;# 
   868  010E                     	;# 
   869  0111                     	;# 
   870  0112                     	;# 
   871  0113                     	;# 
   872  0114                     	;# 
   873  0115                     	;# 
   874  0116                     	;# 
   875  0117                     	;# 
   876  0118                     	;# 
   877  0119                     	;# 
   878  011A                     	;# 
   879  011B                     	;# 
   880  011D                     	;# 
   881  011D                     	;# 
   882  018C                     	;# 
   883  018E                     	;# 
   884  0191                     	;# 
   885  0191                     	;# 
   886  0192                     	;# 
   887  0193                     	;# 
   888  0193                     	;# 
   889  0193                     	;# 
   890  0194                     	;# 
   891  0195                     	;# 
   892  0196                     	;# 
   893  0199                     	;# 
   894  019A                     	;# 
   895  019B                     	;# 
   896  019B                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019C                     	;# 
   900  019C                     	;# 
   901  019D                     	;# 
   902  019E                     	;# 
   903  019F                     	;# 
   904  020C                     	;# 
   905  020E                     	;# 
   906  0211                     	;# 
   907  0211                     	;# 
   908  0212                     	;# 
   909  0212                     	;# 
   910  0213                     	;# 
   911  0213                     	;# 
   912  0214                     	;# 
   913  0214                     	;# 
   914  0215                     	;# 
   915  0215                     	;# 
   916  0215                     	;# 
   917  0216                     	;# 
   918  0216                     	;# 
   919  0217                     	;# 
   920  0217                     	;# 
   921  0291                     	;# 
   922  0291                     	;# 
   923  0292                     	;# 
   924  0293                     	;# 
   925  0294                     	;# 
   926  0295                     	;# 
   927  0295                     	;# 
   928  0296                     	;# 
   929  0391                     	;# 
   930  0392                     	;# 
   931  0393                     	;# 
   932  039A                     	;# 
   933  039C                     	;# 
   934  039D                     	;# 
   935  039E                     	;# 
   936  039F                     	;# 
   937  0FE4                     	;# 
   938  0FE5                     	;# 
   939  0FE6                     	;# 
   940  0FE7                     	;# 
   941  0FE8                     	;# 
   942  0FE9                     	;# 
   943  0FEA                     	;# 
   944  0FEB                     	;# 
   945  0FED                     	;# 
   946  0FEE                     	;# 
   947  0FEF                     	;# 
   948  0000                     	;# 
   949  0001                     	;# 
   950  0002                     	;# 
   951  0003                     	;# 
   952  0004                     	;# 
   953  0005                     	;# 
   954  0006                     	;# 
   955  0007                     	;# 
   956  0008                     	;# 
   957  0009                     	;# 
   958  000A                     	;# 
   959  000B                     	;# 
   960  000C                     	;# 
   961  000E                     	;# 
   962  0011                     	;# 
   963  0012                     	;# 
   964  0015                     	;# 
   965  0016                     	;# 
   966  0016                     	;# 
   967  0017                     	;# 
   968  0018                     	;# 
   969  0019                     	;# 
   970  001A                     	;# 
   971  001B                     	;# 
   972  001C                     	;# 
   973  001E                     	;# 
   974  001F                     	;# 
   975  008C                     	;# 
   976  008E                     	;# 
   977  0091                     	;# 
   978  0092                     	;# 
   979  0095                     	;# 
   980  0096                     	;# 
   981  0097                     	;# 
   982  0098                     	;# 
   983  0099                     	;# 
   984  009A                     	;# 
   985  009B                     	;# 
   986  009B                     	;# 
   987  009C                     	;# 
   988  009D                     	;# 
   989  009E                     	;# 
   990  010C                     	;# 
   991  010E                     	;# 
   992  0111                     	;# 
   993  0112                     	;# 
   994  0113                     	;# 
   995  0114                     	;# 
   996  0115                     	;# 
   997  0116                     	;# 
   998  0117                     	;# 
   999  0118                     	;# 
  1000  0119                     	;# 
  1001  011A                     	;# 
  1002  011B                     	;# 
  1003  011D                     	;# 
  1004  011D                     	;# 
  1005  018C                     	;# 
  1006  018E                     	;# 
  1007  0191                     	;# 
  1008  0191                     	;# 
  1009  0192                     	;# 
  1010  0193                     	;# 
  1011  0193                     	;# 
  1012  0193                     	;# 
  1013  0194                     	;# 
  1014  0195                     	;# 
  1015  0196                     	;# 
  1016  0199                     	;# 
  1017  019A                     	;# 
  1018  019B                     	;# 
  1019  019B                     	;# 
  1020  019B                     	;# 
  1021  019B                     	;# 
  1022  019C                     	;# 
  1023  019C                     	;# 
  1024  019D                     	;# 
  1025  019E                     	;# 
  1026  019F                     	;# 
  1027  020C                     	;# 
  1028  020E                     	;# 
  1029  0211                     	;# 
  1030  0211                     	;# 
  1031  0212                     	;# 
  1032  0212                     	;# 
  1033  0213                     	;# 
  1034  0213                     	;# 
  1035  0214                     	;# 
  1036  0214                     	;# 
  1037  0215                     	;# 
  1038  0215                     	;# 
  1039  0215                     	;# 
  1040  0216                     	;# 
  1041  0216                     	;# 
  1042  0217                     	;# 
  1043  0217                     	;# 
  1044  0291                     	;# 
  1045  0291                     	;# 
  1046  0292                     	;# 
  1047  0293                     	;# 
  1048  0294                     	;# 
  1049  0295                     	;# 
  1050  0295                     	;# 
  1051  0296                     	;# 
  1052  0391                     	;# 
  1053  0392                     	;# 
  1054  0393                     	;# 
  1055  039A                     	;# 
  1056  039C                     	;# 
  1057  039D                     	;# 
  1058  039E                     	;# 
  1059  039F                     	;# 
  1060  0FE4                     	;# 
  1061  0FE5                     	;# 
  1062  0FE6                     	;# 
  1063  0FE7                     	;# 
  1064  0FE8                     	;# 
  1065  0FE9                     	;# 
  1066  0FEA                     	;# 
  1067  0FEB                     	;# 
  1068  0FED                     	;# 
  1069  0FEE                     	;# 
  1070  0FEF                     	;# 
  1071                           
  1072                           	psect	stringtext1
  1073  030C                     __pstringtext1:
  1074  030C                     _GOOD_WSP_VOLTAGE:
  1075  030C  3440               	retlw	64
  1076  030D  349C               	retlw	156
  1077  030E  3400               	retlw	0
  1078  030F  3400               	retlw	0
  1079  0310                     __end_of_GOOD_WSP_VOLTAGE:
  1080                           
  1081                           	psect	stringtext2
  1082  0310                     __pstringtext2:
  1083  0310                     _BAD_WSP_VOLTAGE:
  1084  0310  3420               	retlw	32
  1085  0311  344E               	retlw	78
  1086  0312  3400               	retlw	0
  1087  0313  3400               	retlw	0
  1088  0314                     __end_of_BAD_WSP_VOLTAGE:
  1089                           
  1090                           	psect	stringtext3
  1091  0314                     __pstringtext3:
  1092  0314                     _ROTATION_TIME:
  1093  0314  3400               	retlw	0
  1094  0315  3475               	retlw	117
  1095  0316  3400               	retlw	0
  1096  0317  3400               	retlw	0
  1097  0318                     __end_of_ROTATION_TIME:
  1098                           
  1099                           	psect	nvBANK0
  1100  002E                     __pnvBANK0:
  1101  002E                     _TMR0_InterruptHandler:
  1102  002E                     	ds	2
  1103  0030                     _TMR2_InterruptHandler:
  1104  0030                     	ds	2
  1105  0032                     _time_pow:
  1106  0032                     	ds	1
  1107  0033                     _timer0ReloadVal:
  1108  0033                     	ds	1
  1109  0015                     _TMR0	set	21
  1110  001C                     _T2CONbits	set	28
  1111  001C                     _T2CON	set	28
  1112  001A                     _TMR2	set	26
  1113  001B                     _PR2	set	27
  1114  0011                     _PIR1bits	set	17
  1115  000B                     _INTCONbits	set	11
  1116  008E                     _TRISCbits	set	142
  1117  008C                     _TRISAbits	set	140
  1118  0095                     _OPTION_REG	set	149
  1119  0091                     _PIE1bits	set	145
  1120  0095                     _OPTION_REGbits	set	149
  1121  008E                     _TRISC	set	142
  1122  008C                     _TRISA	set	140
  1123  009D                     _ADCON0bits	set	157
  1124  009D                     _ADCON0	set	157
  1125  009C                     _ADRESH	set	156
  1126  009B                     _ADRESL	set	155
  1127  009E                     _ADCON1	set	158
  1128  0097                     _WDTCON	set	151
  1129  0098                     _OSCTUNE	set	152
  1130  0099                     _OSCCON	set	153
  1131  010E                     _LATCbits	set	270
  1132  010C                     _LATAbits	set	268
  1133  011D                     _APFCON	set	285
  1134  010E                     _LATC	set	270
  1135  010C                     _LATA	set	268
  1136  0116                     _BORCON	set	278
  1137  018C                     _ANSELAbits	set	396
  1138  018E                     _ANSELCbits	set	398
  1139  018C                     _ANSELA	set	396
  1140  018E                     _ANSELC	set	398
  1141  020E                     _WPUCbits	set	526
  1142  020C                     _WPUAbits	set	524
  1143  020E                     _WPUC	set	526
  1144  020C                     _WPUA	set	524
  1145                           
  1146                           	psect	cinit
  1147  0027                     start_initialization:	
  1148                           ; #config settings
  1149                           
  1150  0027                     __initialization:
  1151                           
  1152                           ; Clear objects allocated to COMMON
  1153  0027  01F8               	clrf	__pbssCOMMON& (0+127)
  1154  0028  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1155  0029  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1156  002A  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1157  002B  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1158  002C  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  1159                           
  1160                           ; Clear objects allocated to BANK0
  1161  002D  3020               	movlw	low __pbssBANK0
  1162  002E  0084               	movwf	4
  1163  002F  3000               	movlw	high __pbssBANK0
  1164  0030  0085               	movwf	5
  1165  0031  300E               	movlw	14
  1166  0032  3182  22F5  3180   	fcall	clear_ram0
  1167  0035                     end_of_initialization:	
  1168                           ;End of C runtime variable initialization code
  1169                           
  1170  0035                     __end_of__initialization:
  1171  0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1172  0036  0020               	movlb	0
  1173  0037  2AAC               	ljmp	_main	;jump to C main() function
  1174                           
  1175                           	psect	bssCOMMON
  1176  0078                     __pbssCOMMON:
  1177  0078                     Sec_tick_work@iled:
  1178  0078                     	ds	1
  1179  0079                     _jump_counter:
  1180  0079                     	ds	1
  1181  007A                     _measures:
  1182  007A                     	ds	1
  1183  007B                     _fun_counter:
  1184  007B                     	ds	1
  1185  007C                     _time_con:
  1186  007C                     	ds	1
  1187  007D                     _FLAGS:
  1188  007D                     	ds	1
  1189                           
  1190                           	psect	bssBANK0
  1191  0020                     __pbssBANK0:
  1192  0020                     _time_s:
  1193  0020                     	ds	4
  1194  0024                     _fresult:
  1195  0024                     	ds	2
  1196  0026                     _jresult:
  1197  0026                     	ds	2
  1198  0028                     _result:
  1199  0028                     	ds	2
  1200  002A                     TMR2_ISR@CountCallBack:
  1201  002A                     	ds	2
  1202  002C                     _ADC_InterruptHandler:
  1203  002C                     	ds	2
  1204                           
  1205                           	psect	clrtext
  1206  02F5                     clear_ram0:	
  1207                           ;	Called with FSR0 containing the base address, and
  1208                           ;	WREG with the size to clear
  1209                           
  1210  02F5  0064               	clrwdt	;clear the watchdog before getting into this loop
  1211  02F6                     clrloop0:
  1212  02F6  0180               	clrf	0	;clear RAM location pointed to by FSR
  1213  02F7  3101               	addfsr 0,1
  1214  02F8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1215  02F9  2AF6               	goto	clrloop0	;have we reached the end yet?
  1216  02FA  3400               	retlw	0	;all done for this memory range, return
  1217                           
  1218                           	psect	cstackCOMMON
  1219  0070                     __pcstackCOMMON:
  1220  0070                     ?_PIN_MANAGER_Initialize:
  1221  0070                     ?_OSCILLATOR_Initialize:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     ?_WDT_Initialize:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     ?_TMR2_Initialize:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0070                     ?_TMR0_Initialize:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     ?_ADC_Initialize:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     ?_TMR0_ISR:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ??_TMR0_ISR:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242  0070                     ?_TMR2_ISR:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245  0070                     ?_TMR2_DefaultInterruptHandler:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248  0070                     ??_TMR2_DefaultInterruptHandler:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251  0070                     ?_TMR2_CallBack:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254  0070                     ?_TMR0_DefaultInterruptHandler:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257  0070                     ??_TMR0_DefaultInterruptHandler:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260  0070                     ?_SYSTEM_Initialize:	
  1261                           ; 1 bytes @ 0x0
  1262                           
  1263  0070                     ?_INTERRUPT_InterruptManager:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266  0070                     ?_TMR2_StartTimer:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269  0070                     ?_switch_zum:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272  0070                     ??_switch_zum:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275  0070                     ?_toggle_tone:	
  1276                           ; 1 bytes @ 0x0
  1277                           
  1278  0070                     ??_toggle_tone:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281  0070                     ?_go_close:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284  0070                     ?_go_open:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287  0070                     ?_go_close_alt:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290  0070                     ??_go_close_alt:	
  1291                           ; 1 bytes @ 0x0
  1292                           
  1293  0070                     ?_get_measure:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296  0070                     ?_get_fun:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0070                     ?_get_jump:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0070                     ?_rele_tick:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0070                     ??_rele_tick:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0070                     ?_Sec_tick_work:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0070                     ?_povorot:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0070                     ?_fun_work:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0070                     ?_switch_wm:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320  0070                     ?_start_setup:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323  0070                     ?_main:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0070                     ?i1_go_close:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329  0070                     ??i1_go_close:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332  0070                     ?_ADC_GetConversion:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335  0070                     ?_start_alarm:	
  1336                           ; 2 bytes @ 0x0
  1337                           
  1338                           
  1339                           ; 2 bytes @ 0x0
  1340  0070                     	ds	1
  1341  0071                     ??_start_alarm:
  1342                           
  1343                           ; 1 bytes @ 0x1
  1344  0071                     	ds	1
  1345  0072                     ??_ADC_GetConversion:
  1346                           
  1347                           ; 1 bytes @ 0x2
  1348  0072                     	ds	1
  1349  0073                     ADC_GetConversion@channel:
  1350                           
  1351                           ; 1 bytes @ 0x3
  1352  0073                     	ds	1
  1353  0074                     ??_get_measure:
  1354  0074                     ??_get_fun:	
  1355                           ; 1 bytes @ 0x4
  1356                           
  1357  0074                     ??_get_jump:	
  1358                           ; 1 bytes @ 0x4
  1359                           
  1360                           
  1361                           ; 1 bytes @ 0x4
  1362  0074                     	ds	1
  1363  0075                     get_measure@res:
  1364  0075                     get_fun@res:	
  1365                           ; 2 bytes @ 0x5
  1366                           
  1367  0075                     get_jump@res:	
  1368                           ; 2 bytes @ 0x5
  1369                           
  1370                           
  1371                           ; 2 bytes @ 0x5
  1372  0075                     	ds	2
  1373  0077                     ??_Sec_tick_work:
  1374                           
  1375                           ; 1 bytes @ 0x7
  1376  0077                     	ds	1
  1377  0078                     ??_TMR2_ISR:
  1378  0078                     ??_TMR2_CallBack:	
  1379                           ; 1 bytes @ 0x8
  1380                           
  1381  0078                     ??_INTERRUPT_InterruptManager:	
  1382                           ; 1 bytes @ 0x8
  1383                           
  1384                           
  1385                           	psect	cstackBANK0
  1386  0034                     __pcstackBANK0:	
  1387                           ; 1 bytes @ 0x8
  1388                           
  1389  0034                     ??_PIN_MANAGER_Initialize:
  1390  0034                     ??_OSCILLATOR_Initialize:	
  1391                           ; 1 bytes @ 0x0
  1392                           
  1393  0034                     ??_WDT_Initialize:	
  1394                           ; 1 bytes @ 0x0
  1395                           
  1396  0034                     ??_ADC_Initialize:	
  1397                           ; 1 bytes @ 0x0
  1398                           
  1399  0034                     ?_TMR2_SetInterruptHandler:	
  1400                           ; 1 bytes @ 0x0
  1401                           
  1402  0034                     ?_TMR0_SetInterruptHandler:	
  1403                           ; 1 bytes @ 0x0
  1404                           
  1405  0034                     ??_TMR2_StartTimer:	
  1406                           ; 1 bytes @ 0x0
  1407                           
  1408  0034                     ??_go_close:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411  0034                     ??_go_open:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414  0034                     ??_switch_wm:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417  0034                     TMR2_SetInterruptHandler@InterruptHandler:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420  0034                     TMR0_SetInterruptHandler@InterruptHandler:	
  1421                           ; 2 bytes @ 0x0
  1422                           
  1423                           
  1424                           ; 2 bytes @ 0x0
  1425  0034                     	ds	1
  1426  0035                     ??_povorot:
  1427  0035                     ??_fun_work:	
  1428                           ; 1 bytes @ 0x1
  1429                           
  1430                           
  1431                           ; 1 bytes @ 0x1
  1432  0035                     	ds	1
  1433  0036                     ??_TMR2_Initialize:
  1434  0036                     ??_TMR0_Initialize:	
  1435                           ; 1 bytes @ 0x2
  1436                           
  1437  0036                     ??_TMR2_SetInterruptHandler:	
  1438                           ; 1 bytes @ 0x2
  1439                           
  1440  0036                     ??_TMR0_SetInterruptHandler:	
  1441                           ; 1 bytes @ 0x2
  1442                           
  1443                           
  1444                           ; 1 bytes @ 0x2
  1445  0036                     	ds	1
  1446  0037                     ??_SYSTEM_Initialize:
  1447  0037                     ??_start_setup:	
  1448                           ; 1 bytes @ 0x3
  1449                           
  1450  0037                     ??_main:	
  1451                           ; 1 bytes @ 0x3
  1452                           
  1453                           
  1454                           	psect	maintext
  1455  02AC                     __pmaintext:	
  1456                           ; 1 bytes @ 0x3
  1457 ;;
  1458 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1459 ;;
  1460 ;; *************** function _main *****************
  1461 ;; Defined at:
  1462 ;;		line 288 in file "main.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;		None
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;		None
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      void 
  1469 ;; Registers used:
  1470 ;;		wreg, status,2, status,0, pclath, cstack
  1471 ;; Tracked objects:
  1472 ;;		On entry : B1F/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMMON   BANK0   BANK1
  1476 ;;      Params:         0       0       0
  1477 ;;      Locals:         0       0       0
  1478 ;;      Temps:          0       0       0
  1479 ;;      Totals:         0       0       0
  1480 ;;Total ram usage:        0 bytes
  1481 ;; Hardware stack levels required when called: 11
  1482 ;; This function calls:
  1483 ;;		_fun_work
  1484 ;;		_povorot
  1485 ;;		_start_setup
  1486 ;;		_switch_wm
  1487 ;; This function is called by:
  1488 ;;		Startup code after reset
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492  02AC                     _main:	
  1493                           ;psect for function _main
  1494                           
  1495  02AC                     l1719:	
  1496                           ;incstack = 0
  1497                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1498                           
  1499                           
  1500                           ;main.c: 290:     start_setup();
  1501  02AC  3181  212F  3182   	fcall	_start_setup
  1502  02AF                     l419:	
  1503                           ;main.c: 293:         if (~FLAGS.bits.ALARM) {
  1504                           
  1505                           
  1506                           ;main.c: 294:            fun_work();
  1507  02AF  3181  21FE  3182   	fcall	_fun_work
  1508                           
  1509                           ;main.c: 295:            povorot();
  1510  02B2  3181  2165  3182   	fcall	_povorot
  1511  02B5                     l1721:
  1512                           
  1513                           ;main.c: 296:            switch_wm();
  1514  02B5  3182  22DE  3182   	fcall	_switch_wm
  1515  02B8  2AAF               	goto	l419
  1516  02B9  2826               	ljmp	start
  1517  02BA                     __end_of_main:
  1518                           
  1519                           	psect	text1
  1520  02DE                     __ptext1:	
  1521 ;; *************** function _switch_wm *****************
  1522 ;; Defined at:
  1523 ;;		line 242 in file "main.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		None
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMMON   BANK0   BANK1
  1537 ;;      Params:         0       0       0
  1538 ;;      Locals:         0       0       0
  1539 ;;      Temps:          0       0       0
  1540 ;;      Totals:         0       0       0
  1541 ;;Total ram usage:        0 bytes
  1542 ;; Hardware stack levels used: 1
  1543 ;; Hardware stack levels required when called: 7
  1544 ;; This function calls:
  1545 ;;		Nothing
  1546 ;; This function is called by:
  1547 ;;		_main
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551  02DE                     _switch_wm:	
  1552                           ;psect for function _switch_wm
  1553                           
  1554  02DE                     l1661:	
  1555                           ;incstack = 0
  1556                           ; Regs used in _switch_wm: []
  1557                           
  1558                           
  1559                           ;main.c: 243:     if (FLAGS.bits.JUMP) {
  1560  02DE  1E7D               	btfss	_FLAGS,4
  1561  02DF  2AE1               	goto	u771
  1562  02E0  2AE2               	goto	u770
  1563  02E1                     u771:
  1564  02E1  2AE4               	goto	l383
  1565  02E2                     u770:
  1566  02E2                     l1663:
  1567                           
  1568                           ;main.c: 244:         FLAGS.bits.WORK_MODE = 1;
  1569  02E2  14FD               	bsf	_FLAGS,1
  1570                           
  1571                           ;main.c: 245:     } else {
  1572  02E3  2AE5               	goto	l385
  1573  02E4                     l383:
  1574                           
  1575                           ;main.c: 246:         FLAGS.bits.WORK_MODE = 0;
  1576  02E4  10FD               	bcf	_FLAGS,1
  1577  02E5                     l385:
  1578  02E5  0008               	return
  1579  02E6                     __end_of_switch_wm:
  1580                           
  1581                           	psect	text2
  1582  012F                     __ptext2:	
  1583 ;; *************** function _start_setup *****************
  1584 ;; Defined at:
  1585 ;;		line 250 in file "main.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;		None
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;		None
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		wreg, status,2, status,0, pclath, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1
  1599 ;;      Params:         0       0       0
  1600 ;;      Locals:         0       0       0
  1601 ;;      Temps:          0       0       0
  1602 ;;      Totals:         0       0       0
  1603 ;;Total ram usage:        0 bytes
  1604 ;; Hardware stack levels used: 1
  1605 ;; Hardware stack levels required when called: 10
  1606 ;; This function calls:
  1607 ;;		_SYSTEM_Initialize
  1608 ;;		_TMR0_SetInterruptHandler
  1609 ;;		_TMR2_SetInterruptHandler
  1610 ;;		_TMR2_StartTimer
  1611 ;; This function is called by:
  1612 ;;		_main
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616  012F                     _start_setup:	
  1617                           ;psect for function _start_setup
  1618                           
  1619  012F                     l1665:	
  1620                           ;incstack = 0
  1621                           ; Regs used in _start_setup: [wreg+status,2+status,0+pclath+cstack]
  1622                           
  1623                           
  1624                           ;main.c: 252:     SYSTEM_Initialize();
  1625  012F  3182  2255  3181   	fcall	_SYSTEM_Initialize
  1626  0132                     l1667:
  1627                           
  1628                           ;main.c: 253:     (INTCONbits.GIE = 1);
  1629  0132  178B               	bsf	11,7	;volatile
  1630  0133                     l1669:
  1631                           
  1632                           ;main.c: 254:     (INTCONbits.PEIE = 1);
  1633  0133  170B               	bsf	11,6	;volatile
  1634                           
  1635                           ;main.c: 257:     TMR0_SetInterruptHandler(switch_zum);
  1636  0134  307B               	movlw	low _switch_zum
  1637  0135  0020               	movlb	0	; select bank0
  1638  0136  00B4               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1639  0137  3002               	movlw	high _switch_zum
  1640  0138  00B5               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1641  0139  3183  2301  3181   	fcall	_TMR0_SetInterruptHandler
  1642                           
  1643                           ;main.c: 258:     TMR2_SetInterruptHandler(Sec_tick_work);
  1644  013C  3038               	movlw	low _Sec_tick_work
  1645  013D  0020               	movlb	0	; select bank0
  1646  013E  00B4               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  1647  013F  3000               	movlw	high _Sec_tick_work
  1648  0140  00B5               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  1649  0141  3182  22FB  3181   	fcall	_TMR2_SetInterruptHandler
  1650  0144                     l1671:
  1651                           
  1652                           ;main.c: 259:     TMR2_StartTimer();
  1653  0144  3183  231C  3181   	fcall	_TMR2_StartTimer
  1654  0147                     l1673:
  1655  0147  0023               	movlb	3	; select bank3
  1656  0148  118E               	bcf	14,3	;volatile
  1657  0149                     l1675:
  1658  0149  0024               	movlb	4	; select bank4
  1659  014A  108C               	bcf	12,1	;volatile
  1660  014B                     l1677:
  1661  014B  0022               	movlb	2	; select bank2
  1662  014C  108C               	bcf	12,1	;volatile
  1663  014D                     l1679:
  1664  014D  0021               	movlb	1	; select bank1
  1665  014E  148C               	bsf	12,1	;volatile
  1666  014F                     l1681:
  1667  014F  0023               	movlb	3	; select bank3
  1668  0150  108C               	bcf	12,1	;volatile
  1669  0151                     l1683:
  1670  0151  0024               	movlb	4	; select bank4
  1671  0152  110E               	bcf	14,2	;volatile
  1672  0153                     l1685:
  1673  0153  0022               	movlb	2	; select bank2
  1674  0154  110E               	bcf	14,2	;volatile
  1675  0155                     l1687:
  1676  0155  0021               	movlb	1	; select bank1
  1677  0156  150E               	bsf	14,2	;volatile
  1678  0157                     l1689:
  1679  0157  0023               	movlb	3	; select bank3
  1680  0158  110E               	bcf	14,2	;volatile
  1681  0159                     l1691:
  1682  0159  0022               	movlb	2	; select bank2
  1683  015A  128E               	bcf	14,5	;volatile
  1684  015B                     l1693:
  1685  015B  120E               	bcf	14,4	;volatile
  1686  015C                     l1695:
  1687  015C  0021               	movlb	1	; select bank1
  1688  015D  100E               	bcf	14,0	;volatile
  1689  015E                     l1697:
  1690  015E  0022               	movlb	2	; select bank2
  1691  015F  100E               	bcf	14,0	;volatile
  1692  0160                     l1699:
  1693                           
  1694                           ;main.c: 282:     INTCONbits.TMR0IE = 0;
  1695  0160  128B               	bcf	11,5	;volatile
  1696  0161                     l1701:
  1697                           
  1698                           ;main.c: 283:     FLAGS.value = 0;
  1699  0161  01FD               	clrf	_FLAGS
  1700  0162                     l1703:
  1701                           
  1702                           ;main.c: 285:     time_pow = 0;
  1703  0162  0020               	movlb	0	; select bank0
  1704  0163  01B2               	clrf	_time_pow
  1705  0164                     l414:
  1706  0164  0008               	return
  1707  0165                     __end_of_start_setup:
  1708                           
  1709                           	psect	text3
  1710  031C                     __ptext3:	
  1711 ;; *************** function _TMR2_StartTimer *****************
  1712 ;; Defined at:
  1713 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		None
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMMON   BANK0   BANK1
  1727 ;;      Params:         0       0       0
  1728 ;;      Locals:         0       0       0
  1729 ;;      Temps:          0       0       0
  1730 ;;      Totals:         0       0       0
  1731 ;;Total ram usage:        0 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 7
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_start_setup
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741  031C                     _TMR2_StartTimer:	
  1742                           ;psect for function _TMR2_StartTimer
  1743                           
  1744  031C                     l1593:	
  1745                           ;incstack = 0
  1746                           ; Regs used in _TMR2_StartTimer: []
  1747                           
  1748                           
  1749                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  1750  031C  0020               	movlb	0	; select bank0
  1751  031D  151C               	bsf	28,2	;volatile
  1752  031E                     l140:
  1753  031E  0008               	return
  1754  031F                     __end_of_TMR2_StartTimer:
  1755                           
  1756                           	psect	text4
  1757  0255                     __ptext4:	
  1758 ;; *************** function _SYSTEM_Initialize *****************
  1759 ;; Defined at:
  1760 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;		None
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;		None
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  1    wreg      void 
  1767 ;; Registers used:
  1768 ;;		wreg, status,2, status,0, pclath, cstack
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMMON   BANK0   BANK1
  1774 ;;      Params:         0       0       0
  1775 ;;      Locals:         0       0       0
  1776 ;;      Temps:          0       0       0
  1777 ;;      Totals:         0       0       0
  1778 ;;Total ram usage:        0 bytes
  1779 ;; Hardware stack levels used: 1
  1780 ;; Hardware stack levels required when called: 9
  1781 ;; This function calls:
  1782 ;;		_ADC_Initialize
  1783 ;;		_OSCILLATOR_Initialize
  1784 ;;		_PIN_MANAGER_Initialize
  1785 ;;		_TMR0_Initialize
  1786 ;;		_TMR2_Initialize
  1787 ;;		_WDT_Initialize
  1788 ;; This function is called by:
  1789 ;;		_start_setup
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793  0255                     _SYSTEM_Initialize:	
  1794                           ;psect for function _SYSTEM_Initialize
  1795                           
  1796  0255                     l1591:	
  1797                           ;incstack = 0
  1798                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1799                           
  1800                           
  1801                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1802  0255  3182  2240  3182   	fcall	_PIN_MANAGER_Initialize
  1803                           
  1804                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1805  0258  3182  22EE  3182   	fcall	_OSCILLATOR_Initialize
  1806                           
  1807                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1808  025B  3183  2318  3182   	fcall	_WDT_Initialize
  1809                           
  1810                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  1811  025E  3182  2268  3182   	fcall	_TMR2_Initialize
  1812                           
  1813                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  1814  0261  3182  222B  3182   	fcall	_TMR0_Initialize
  1815                           
  1816                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  1817  0264  3182  22E6  3182   	fcall	_ADC_Initialize
  1818  0267                     l23:
  1819  0267  0008               	return
  1820  0268                     __end_of_SYSTEM_Initialize:
  1821                           
  1822                           	psect	text5
  1823  0318                     __ptext5:	
  1824 ;; *************** function _WDT_Initialize *****************
  1825 ;; Defined at:
  1826 ;;		line 71 in file "mcc_generated_files/mcc.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;		None
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;		None
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMMON   BANK0   BANK1
  1840 ;;      Params:         0       0       0
  1841 ;;      Locals:         0       0       0
  1842 ;;      Temps:          0       0       0
  1843 ;;      Totals:         0       0       0
  1844 ;;Total ram usage:        0 bytes
  1845 ;; Hardware stack levels used: 1
  1846 ;; Hardware stack levels required when called: 7
  1847 ;; This function calls:
  1848 ;;		Nothing
  1849 ;; This function is called by:
  1850 ;;		_SYSTEM_Initialize
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854  0318                     _WDT_Initialize:	
  1855                           ;psect for function _WDT_Initialize
  1856                           
  1857  0318                     l1539:	
  1858                           ;incstack = 0
  1859                           ; Regs used in _WDT_Initialize: [wreg]
  1860                           
  1861                           
  1862                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x16;
  1863  0318  3016               	movlw	22
  1864  0319  0021               	movlb	1	; select bank1
  1865  031A  0097               	movwf	23	;volatile
  1866  031B                     l29:
  1867  031B  0008               	return
  1868  031C                     __end_of_WDT_Initialize:
  1869                           
  1870                           	psect	text6
  1871  0268                     __ptext6:	
  1872 ;; *************** function _TMR2_Initialize *****************
  1873 ;; Defined at:
  1874 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;		None
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;		None
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  1    wreg      void 
  1881 ;; Registers used:
  1882 ;;		wreg, status,2, status,0, pclath, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMMON   BANK0   BANK1
  1888 ;;      Params:         0       0       0
  1889 ;;      Locals:         0       0       0
  1890 ;;      Temps:          0       0       0
  1891 ;;      Totals:         0       0       0
  1892 ;;Total ram usage:        0 bytes
  1893 ;; Hardware stack levels used: 1
  1894 ;; Hardware stack levels required when called: 8
  1895 ;; This function calls:
  1896 ;;		_TMR2_SetInterruptHandler
  1897 ;; This function is called by:
  1898 ;;		_SYSTEM_Initialize
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902  0268                     _TMR2_Initialize:	
  1903                           ;psect for function _TMR2_Initialize
  1904                           
  1905  0268                     l1541:	
  1906                           ;incstack = 0
  1907                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1908                           
  1909                           
  1910                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x8D;
  1911  0268  308D               	movlw	141
  1912  0269  0020               	movlb	0	; select bank0
  1913  026A  009B               	movwf	27	;volatile
  1914  026B                     l1543:
  1915                           
  1916                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  1917  026B  019A               	clrf	26	;volatile
  1918  026C                     l1545:
  1919                           
  1920                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  1921  026C  1091               	bcf	17,1	;volatile
  1922  026D                     l1547:
  1923                           
  1924                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  1925  026D  0021               	movlb	1	; select bank1
  1926  026E  1491               	bsf	17,1	;volatile
  1927  026F                     l1549:
  1928                           
  1929                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  1930  026F  301F               	movlw	low _TMR2_DefaultInterruptHandler
  1931  0270  0020               	movlb	0	; select bank0
  1932  0271  00B4               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  1933  0272  3003               	movlw	high _TMR2_DefaultInterruptHandler
  1934  0273  00B5               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  1935  0274  3182  22FB  3182   	fcall	_TMR2_SetInterruptHandler
  1936  0277                     l1551:
  1937                           
  1938                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x57;
  1939  0277  3057               	movlw	87
  1940  0278  0020               	movlb	0	; select bank0
  1941  0279  009C               	movwf	28	;volatile
  1942  027A                     l137:
  1943  027A  0008               	return
  1944  027B                     __end_of_TMR2_Initialize:
  1945                           
  1946                           	psect	text7
  1947  02FB                     __ptext7:	
  1948 ;; *************** function _TMR2_SetInterruptHandler *****************
  1949 ;; Defined at:
  1950 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  1953 ;;		 -> Sec_tick_work(1), TMR2_DefaultInterruptHandler(1), 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;		None
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      void 
  1958 ;; Registers used:
  1959 ;;		wreg
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMMON   BANK0   BANK1
  1965 ;;      Params:         0       2       0
  1966 ;;      Locals:         0       0       0
  1967 ;;      Temps:          0       0       0
  1968 ;;      Totals:         0       2       0
  1969 ;;Total ram usage:        2 bytes
  1970 ;; Hardware stack levels used: 1
  1971 ;; Hardware stack levels required when called: 7
  1972 ;; This function calls:
  1973 ;;		Nothing
  1974 ;; This function is called by:
  1975 ;;		_TMR2_Initialize
  1976 ;;		_start_setup
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980  02FB                     _TMR2_SetInterruptHandler:	
  1981                           ;psect for function _TMR2_SetInterruptHandler
  1982                           
  1983  02FB                     l1427:	
  1984                           ;incstack = 0
  1985                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  1986                           
  1987                           
  1988                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  1989  02FB  0020               	movlb	0	; select bank0
  1990  02FC  0835               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  1991  02FD  00B1               	movwf	_TMR2_InterruptHandler+1
  1992  02FE  0834               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  1993  02FF  00B0               	movwf	_TMR2_InterruptHandler
  1994  0300                     l165:
  1995  0300  0008               	return
  1996  0301                     __end_of_TMR2_SetInterruptHandler:
  1997                           
  1998                           	psect	text8
  1999  022B                     __ptext8:	
  2000 ;; *************** function _TMR0_Initialize *****************
  2001 ;; Defined at:
  2002 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;		None
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      void 
  2009 ;; Registers used:
  2010 ;;		wreg, status,2, status,0, pclath, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMMON   BANK0   BANK1
  2016 ;;      Params:         0       0       0
  2017 ;;      Locals:         0       0       0
  2018 ;;      Temps:          0       1       0
  2019 ;;      Totals:         0       1       0
  2020 ;;Total ram usage:        1 bytes
  2021 ;; Hardware stack levels used: 1
  2022 ;; Hardware stack levels required when called: 8
  2023 ;; This function calls:
  2024 ;;		_TMR0_SetInterruptHandler
  2025 ;; This function is called by:
  2026 ;;		_SYSTEM_Initialize
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030  022B                     _TMR0_Initialize:	
  2031                           ;psect for function _TMR0_Initialize
  2032                           
  2033  022B                     l1553:	
  2034                           ;incstack = 0
  2035                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2036                           
  2037                           
  2038                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  2039  022B  0021               	movlb	1	; select bank1
  2040  022C  0815               	movf	21,w	;volatile
  2041  022D  39C0               	andlw	192
  2042  022E  3817               	iorlw	23
  2043  022F  0095               	movwf	21	;volatile
  2044  0230                     l1555:
  2045                           
  2046                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x16;
  2047  0230  3016               	movlw	22
  2048  0231  0020               	movlb	0	; select bank0
  2049  0232  0095               	movwf	21	;volatile
  2050  0233                     l1557:
  2051                           
  2052                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 22;
  2053  0233  3016               	movlw	22
  2054  0234  00B6               	movwf	??_TMR0_Initialize
  2055  0235  0836               	movf	??_TMR0_Initialize,w
  2056  0236  00B3               	movwf	_timer0ReloadVal	;volatile
  2057  0237                     l1559:
  2058                           
  2059                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  2060  0237  110B               	bcf	11,2	;volatile
  2061  0238                     l1561:
  2062                           
  2063                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2064  0238  3020               	movlw	low _TMR0_DefaultInterruptHandler
  2065  0239  00B4               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2066  023A  3003               	movlw	high _TMR0_DefaultInterruptHandler
  2067  023B  00B5               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2068  023C  3183  2301  3182   	fcall	_TMR0_SetInterruptHandler
  2069  023F                     l185:
  2070  023F  0008               	return
  2071  0240                     __end_of_TMR0_Initialize:
  2072                           
  2073                           	psect	text9
  2074  0301                     __ptext9:	
  2075 ;; *************** function _TMR0_SetInterruptHandler *****************
  2076 ;; Defined at:
  2077 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2080 ;;		 -> switch_zum(1), TMR0_DefaultInterruptHandler(1), 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;		None
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  1    wreg      void 
  2085 ;; Registers used:
  2086 ;;		wreg
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMMON   BANK0   BANK1
  2092 ;;      Params:         0       2       0
  2093 ;;      Locals:         0       0       0
  2094 ;;      Temps:          0       0       0
  2095 ;;      Totals:         0       2       0
  2096 ;;Total ram usage:        2 bytes
  2097 ;; Hardware stack levels used: 1
  2098 ;; Hardware stack levels required when called: 7
  2099 ;; This function calls:
  2100 ;;		Nothing
  2101 ;; This function is called by:
  2102 ;;		_TMR0_Initialize
  2103 ;;		_start_setup
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107  0301                     _TMR0_SetInterruptHandler:	
  2108                           ;psect for function _TMR0_SetInterruptHandler
  2109                           
  2110  0301                     l1429:	
  2111                           ;incstack = 0
  2112                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2113                           
  2114                           
  2115                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  2116  0301  0020               	movlb	0	; select bank0
  2117  0302  0835               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2118  0303  00AF               	movwf	_TMR0_InterruptHandler+1
  2119  0304  0834               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2120  0305  00AE               	movwf	_TMR0_InterruptHandler
  2121  0306                     l201:
  2122  0306  0008               	return
  2123  0307                     __end_of_TMR0_SetInterruptHandler:
  2124                           
  2125                           	psect	text10
  2126  0240                     __ptext10:	
  2127 ;; *************** function _PIN_MANAGER_Initialize *****************
  2128 ;; Defined at:
  2129 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1
  2143 ;;      Params:         0       0       0
  2144 ;;      Locals:         0       0       0
  2145 ;;      Temps:          0       0       0
  2146 ;;      Totals:         0       0       0
  2147 ;;Total ram usage:        0 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; Hardware stack levels required when called: 7
  2150 ;; This function calls:
  2151 ;;		Nothing
  2152 ;; This function is called by:
  2153 ;;		_SYSTEM_Initialize
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157  0240                     _PIN_MANAGER_Initialize:	
  2158                           ;psect for function _PIN_MANAGER_Initialize
  2159                           
  2160  0240                     l1521:	
  2161                           ;incstack = 0
  2162                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2163                           
  2164                           
  2165                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2166  0240  0022               	movlb	2	; select bank2
  2167  0241  018C               	clrf	12	;volatile
  2168                           
  2169                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  2170  0242  018E               	clrf	14	;volatile
  2171  0243                     l1523:
  2172                           
  2173                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x0F;
  2174  0243  300F               	movlw	15
  2175  0244  0021               	movlb	1	; select bank1
  2176  0245  008C               	movwf	12	;volatile
  2177  0246                     l1525:
  2178                           
  2179                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x0C;
  2180  0246  300C               	movlw	12
  2181  0247  008E               	movwf	14	;volatile
  2182  0248                     l1527:
  2183                           
  2184                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x0C;
  2185  0248  300C               	movlw	12
  2186  0249  0023               	movlb	3	; select bank3
  2187  024A  008E               	movwf	14	;volatile
  2188  024B                     l1529:
  2189                           
  2190                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x07;
  2191  024B  3007               	movlw	7
  2192  024C  008C               	movwf	12	;volatile
  2193                           
  2194                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  2195  024D  0024               	movlb	4	; select bank4
  2196  024E  018C               	clrf	12	;volatile
  2197                           
  2198                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  2199  024F  018E               	clrf	14	;volatile
  2200  0250                     l1531:
  2201                           
  2202                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2203  0250  0021               	movlb	1	; select bank1
  2204  0251  1795               	bsf	21,7	;volatile
  2205                           
  2206                           ;mcc_generated_files/pin_manager.c: 86:     APFCON = 0x00;
  2207  0252  0022               	movlb	2	; select bank2
  2208  0253  019D               	clrf	29	;volatile
  2209  0254                     l90:
  2210  0254  0008               	return
  2211  0255                     __end_of_PIN_MANAGER_Initialize:
  2212                           
  2213                           	psect	text11
  2214  02EE                     __ptext11:	
  2215 ;; *************** function _OSCILLATOR_Initialize *****************
  2216 ;; Defined at:
  2217 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;		None
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMMON   BANK0   BANK1
  2231 ;;      Params:         0       0       0
  2232 ;;      Locals:         0       0       0
  2233 ;;      Temps:          0       0       0
  2234 ;;      Totals:         0       0       0
  2235 ;;Total ram usage:        0 bytes
  2236 ;; Hardware stack levels used: 1
  2237 ;; Hardware stack levels required when called: 7
  2238 ;; This function calls:
  2239 ;;		Nothing
  2240 ;; This function is called by:
  2241 ;;		_SYSTEM_Initialize
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245  02EE                     _OSCILLATOR_Initialize:	
  2246                           ;psect for function _OSCILLATOR_Initialize
  2247                           
  2248  02EE                     l1533:	
  2249                           ;incstack = 0
  2250                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2251                           
  2252                           
  2253                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x68;
  2254  02EE  3068               	movlw	104
  2255  02EF  0021               	movlb	1	; select bank1
  2256  02F0  0099               	movwf	25	;volatile
  2257  02F1                     l1535:
  2258                           
  2259                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  2260  02F1  0198               	clrf	24	;volatile
  2261  02F2                     l1537:
  2262                           
  2263                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  2264  02F2  0022               	movlb	2	; select bank2
  2265  02F3  0196               	clrf	22	;volatile
  2266  02F4                     l26:
  2267  02F4  0008               	return
  2268  02F5                     __end_of_OSCILLATOR_Initialize:
  2269                           
  2270                           	psect	text12
  2271  02E6                     __ptext12:	
  2272 ;; *************** function _ADC_Initialize *****************
  2273 ;; Defined at:
  2274 ;;		line 67 in file "mcc_generated_files/adc.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		wreg, status,2
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1
  2288 ;;      Params:         0       0       0
  2289 ;;      Locals:         0       0       0
  2290 ;;      Temps:          0       0       0
  2291 ;;      Totals:         0       0       0
  2292 ;;Total ram usage:        0 bytes
  2293 ;; Hardware stack levels used: 1
  2294 ;; Hardware stack levels required when called: 7
  2295 ;; This function calls:
  2296 ;;		Nothing
  2297 ;; This function is called by:
  2298 ;;		_SYSTEM_Initialize
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302  02E6                     _ADC_Initialize:	
  2303                           ;psect for function _ADC_Initialize
  2304                           
  2305  02E6                     l1563:	
  2306                           ;incstack = 0
  2307                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  2308                           
  2309                           
  2310                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x40;
  2311  02E6  3040               	movlw	64
  2312  02E7  0021               	movlb	1	; select bank1
  2313  02E8  009E               	movwf	30	;volatile
  2314  02E9                     l1565:
  2315                           
  2316                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  2317  02E9  019B               	clrf	27	;volatile
  2318  02EA                     l1567:
  2319                           
  2320                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  2321  02EA  019C               	clrf	28	;volatile
  2322                           
  2323                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  2324  02EB  3001               	movlw	1
  2325  02EC  009D               	movwf	29	;volatile
  2326  02ED                     l46:
  2327  02ED  0008               	return
  2328  02EE                     __end_of_ADC_Initialize:
  2329                           
  2330                           	psect	text13
  2331  0165                     __ptext13:	
  2332 ;; *************** function _povorot *****************
  2333 ;; Defined at:
  2334 ;;		line 214 in file "main.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;		None
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;		None
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		wreg, status,2, status,0, pclath, cstack
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1
  2348 ;;      Params:         0       0       0
  2349 ;;      Locals:         0       0       0
  2350 ;;      Temps:          0       1       0
  2351 ;;      Totals:         0       1       0
  2352 ;;Total ram usage:        1 bytes
  2353 ;; Hardware stack levels used: 1
  2354 ;; Hardware stack levels required when called: 8
  2355 ;; This function calls:
  2356 ;;		_go_close
  2357 ;;		_go_open
  2358 ;; This function is called by:
  2359 ;;		_main
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363  0165                     _povorot:	
  2364                           ;psect for function _povorot
  2365                           
  2366  0165                     l1639:	
  2367                           ;incstack = 0
  2368                           ; Regs used in _povorot: [wreg+status,2+status,0+pclath+cstack]
  2369                           
  2370                           
  2371                           ;main.c: 215:     if (time_s > ROTATION_TIME &&
  2372  0165  0020               	movlb	0	; select bank0
  2373  0166  1BA3               	btfsc	_time_s+3,7
  2374  0167  2975               	goto	u701
  2375  0168  0823               	movf	_time_s+3,w
  2376  0169  1D03               	btfss	3,2
  2377  016A  2976               	goto	u700
  2378  016B  0822               	movf	_time_s+2,w
  2379  016C  1D03               	btfss	3,2
  2380  016D  2976               	goto	u700
  2381  016E  3001               	movlw	1
  2382  016F  0220               	subwf	_time_s,w
  2383  0170  3075               	movlw	117
  2384  0171  3B21               	subwfb	_time_s+1,w
  2385  0172  1C03               	btfss	3,0
  2386  0173  2975               	goto	u701
  2387  0174  2976               	goto	u700
  2388  0175                     u701:
  2389  0175  2995               	goto	l373
  2390  0176                     u700:
  2391  0176                     l1641:
  2392  0176  1D7D               	btfss	_FLAGS,2
  2393  0177  2979               	goto	u711
  2394  0178  297A               	goto	u710
  2395  0179                     u711:
  2396  0179  2995               	goto	l373
  2397  017A                     u710:
  2398  017A                     l1643:
  2399  017A  1CFD               	btfss	_FLAGS,1
  2400  017B  297D               	goto	u721
  2401  017C  297E               	goto	u720
  2402  017D                     u721:
  2403  017D  2995               	goto	l373
  2404  017E                     u720:
  2405  017E                     l1645:
  2406                           
  2407                           ;main.c: 219:             ) {;main.c: 220:         go_open();
  2408  017E  3182  22D4  3181   	fcall	_go_open
  2409  0181                     l1647:
  2410                           
  2411                           ;main.c: 221:         _delay((unsigned long)((5)*(4000000/4000.0)));
  2412  0181  3007               	movlw	7
  2413  0182  0020               	movlb	0	; select bank0
  2414  0183  00B5               	movwf	??_povorot
  2415  0184  307D               	movlw	125
  2416  0185                     u837:
  2417  0185  0B89               	decfsz	9,f
  2418  0186  2985               	goto	u837
  2419  0187  0BB5               	decfsz	??_povorot,f
  2420  0188  2985               	goto	u837
  2421  0189                     l1649:
  2422                           
  2423                           ;main.c: 222:         go_close();
  2424  0189  3181  2196  3181   	fcall	_go_close
  2425                           
  2426                           ;main.c: 223:         time_s = 0;
  2427  018C  3000               	movlw	0
  2428  018D  0020               	movlb	0	; select bank0
  2429  018E  00A3               	movwf	_time_s+3
  2430  018F  3000               	movlw	0
  2431  0190  00A2               	movwf	_time_s+2
  2432  0191  3000               	movlw	0
  2433  0192  00A1               	movwf	_time_s+1
  2434  0193  3000               	movlw	0
  2435  0194  00A0               	movwf	_time_s
  2436  0195                     l373:
  2437  0195  0008               	return
  2438  0196                     __end_of_povorot:
  2439                           
  2440                           	psect	text14
  2441  01FE                     __ptext14:	
  2442 ;; *************** function _fun_work *****************
  2443 ;; Defined at:
  2444 ;;		line 227 in file "main.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;		None
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;		None
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, status,2, status,0, pclath, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1
  2458 ;;      Params:         0       0       0
  2459 ;;      Locals:         0       0       0
  2460 ;;      Temps:          0       0       0
  2461 ;;      Totals:         0       0       0
  2462 ;;Total ram usage:        0 bytes
  2463 ;; Hardware stack levels used: 1
  2464 ;; Hardware stack levels required when called: 8
  2465 ;; This function calls:
  2466 ;;		_go_close
  2467 ;;		_go_open
  2468 ;; This function is called by:
  2469 ;;		_main
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473  01FE                     _fun_work:	
  2474                           ;psect for function _fun_work
  2475                           
  2476  01FE                     l1651:	
  2477                           ;incstack = 0
  2478                           ; Regs used in _fun_work: [wreg+status,2+status,0+pclath+cstack]
  2479                           
  2480                           
  2481                           ;main.c: 229:     {;main.c: 230:         if (~FLAGS.bits.FUN_NEW) {
  2482  01FE  1D7D               	btfss	_FLAGS,2
  2483  01FF  2A01               	goto	u731
  2484  0200  2A02               	goto	u730
  2485  0201                     u731:
  2486  0201  2A0C               	goto	l376
  2487  0202                     u730:
  2488  0202                     l1653:
  2489                           
  2490                           ;main.c: 231:             go_close();
  2491  0202  3181  2196  3181   	fcall	_go_close
  2492  0205                     l1655:
  2493                           
  2494                           ;main.c: 232:             FLAGS.bits.FUN_OLD = FLAGS.bits.FUN_NEW;
  2495  0205  19FD               	btfsc	_FLAGS,3
  2496  0206  2A08               	goto	u741
  2497  0207  2A0A               	goto	u740
  2498  0208                     u741:
  2499  0208  157D               	bsf	_FLAGS,2
  2500  0209  2A0B               	goto	u754
  2501  020A                     u740:
  2502  020A  117D               	bcf	_FLAGS,2
  2503  020B                     u754:
  2504  020B  2A14               	goto	l380
  2505  020C                     l376:
  2506                           
  2507                           ;main.c: 235:         if (FLAGS.bits.FUN_NEW && ~FLAGS.bits.ALARM) {
  2508  020C  1DFD               	btfss	_FLAGS,3
  2509  020D  2A0F               	goto	u761
  2510  020E  2A10               	goto	u760
  2511  020F                     u761:
  2512  020F  2A14               	goto	l380
  2513  0210                     u760:
  2514  0210                     l1657:
  2515                           
  2516                           ;main.c: 236:             go_open();
  2517  0210  3182  22D4  3181   	fcall	_go_open
  2518  0213  2A05               	goto	l1655
  2519  0214                     l380:
  2520  0214  0008               	return
  2521  0215                     __end_of_fun_work:
  2522                           
  2523                           	psect	text15
  2524  02D4                     __ptext15:	
  2525 ;; *************** function _go_open *****************
  2526 ;; Defined at:
  2527 ;;		line 82 in file "main.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;		None
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;		None
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      void 
  2534 ;; Registers used:
  2535 ;;		wreg
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMMON   BANK0   BANK1
  2541 ;;      Params:         0       0       0
  2542 ;;      Locals:         0       0       0
  2543 ;;      Temps:          0       1       0
  2544 ;;      Totals:         0       1       0
  2545 ;;Total ram usage:        1 bytes
  2546 ;; Hardware stack levels used: 1
  2547 ;; Hardware stack levels required when called: 7
  2548 ;; This function calls:
  2549 ;;		Nothing
  2550 ;; This function is called by:
  2551 ;;		_povorot
  2552 ;;		_fun_work
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556  02D4                     _go_open:	
  2557                           ;psect for function _go_open
  2558                           
  2559  02D4                     l279:	
  2560                           ;incstack = 0
  2561                           ; Regs used in _go_open: [wreg]
  2562                           ;main.c: 83:     do { LATCbits.LATC4 = 0; } while(0);
  2563                           
  2564  02D4  0022               	movlb	2	; select bank2
  2565  02D5  120E               	bcf	14,4	;volatile
  2566  02D6                     l281:	
  2567                           ;main.c: 84:     do { LATCbits.LATC5 = 1; } while(0);
  2568                           
  2569  02D6  168E               	bsf	14,5	;volatile
  2570  02D7                     l1617:
  2571                           
  2572                           ;main.c: 85:     time_pow = 10;
  2573  02D7  300A               	movlw	10
  2574  02D8  0020               	movlb	0	; select bank0
  2575  02D9  00B4               	movwf	??_go_open
  2576  02DA  0834               	movf	??_go_open,w
  2577  02DB  00B2               	movwf	_time_pow
  2578  02DC                     l1619:
  2579                           
  2580                           ;main.c: 86:     FLAGS.bits.RELE_POW = 1;
  2581  02DC  177D               	bsf	_FLAGS,6
  2582  02DD                     l283:
  2583  02DD  0008               	return
  2584  02DE                     __end_of_go_open:
  2585                           
  2586                           	psect	text16
  2587  0196                     __ptext16:	
  2588 ;; *************** function _go_close *****************
  2589 ;; Defined at:
  2590 ;;		line 70 in file "main.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;		None
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;		None
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMMON   BANK0   BANK1
  2604 ;;      Params:         0       0       0
  2605 ;;      Locals:         0       0       0
  2606 ;;      Temps:          0       1       0
  2607 ;;      Totals:         0       1       0
  2608 ;;Total ram usage:        1 bytes
  2609 ;; Hardware stack levels used: 1
  2610 ;; Hardware stack levels required when called: 7
  2611 ;; This function calls:
  2612 ;;		Nothing
  2613 ;; This function is called by:
  2614 ;;		_povorot
  2615 ;;		_fun_work
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619  0196                     _go_close:	
  2620                           ;psect for function _go_close
  2621                           
  2622  0196                     l1603:	
  2623                           ;incstack = 0
  2624                           ; Regs used in _go_close: [wreg]
  2625                           
  2626                           
  2627                           ;main.c: 71:     time_s = 0;
  2628  0196  3000               	movlw	0
  2629  0197  0020               	movlb	0	; select bank0
  2630  0198  00A3               	movwf	_time_s+3
  2631  0199  3000               	movlw	0
  2632  019A  00A2               	movwf	_time_s+2
  2633  019B  3000               	movlw	0
  2634  019C  00A1               	movwf	_time_s+1
  2635  019D  3000               	movlw	0
  2636  019E  00A0               	movwf	_time_s
  2637  019F                     l1605:
  2638                           
  2639                           ;main.c: 72:     FLAGS.bits.FUN_OLD = 0;
  2640  019F  117D               	bcf	_FLAGS,2
  2641  01A0                     l1607:
  2642  01A0  0022               	movlb	2	; select bank2
  2643  01A1  160E               	bsf	14,4	;volatile
  2644  01A2                     l273:
  2645                           
  2646                           ;main.c: 74:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2647  01A2  30C8               	movlw	200
  2648  01A3                     u847:
  2649  01A3  3200               	nop2
  2650  01A4  0B89               	decfsz	9,f
  2651  01A5  29A3               	goto	u847
  2652  01A6                     l1609:
  2653  01A6  0022               	movlb	2	; select bank2
  2654  01A7  168E               	bsf	14,5	;volatile
  2655  01A8                     l275:
  2656                           
  2657                           ;main.c: 76:     time_pow = 10;
  2658  01A8  300A               	movlw	10
  2659  01A9  0020               	movlb	0	; select bank0
  2660  01AA  00B4               	movwf	??_go_close
  2661  01AB  0834               	movf	??_go_close,w
  2662  01AC  00B2               	movwf	_time_pow
  2663  01AD                     l1611:
  2664                           
  2665                           ;main.c: 77:     FLAGS.bits.RELE_POW = 1;
  2666  01AD  177D               	bsf	_FLAGS,6
  2667  01AE                     l1613:
  2668                           
  2669                           ;main.c: 78:     FLAGS.bits.RELE_CON = 1;
  2670  01AE  17FD               	bsf	_FLAGS,7
  2671  01AF                     l276:
  2672  01AF  0008               	return
  2673  01B0                     __end_of_go_close:
  2674                           
  2675                           	psect	intentry
  2676  0004                     __pintentry:	
  2677 ;; *************** function _INTERRUPT_InterruptManager *****************
  2678 ;; Defined at:
  2679 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;		None
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;		None
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      void 
  2686 ;; Registers used:
  2687 ;;		wreg, status,2, status,0, pclath, cstack
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMMON   BANK0   BANK1
  2693 ;;      Params:         0       0       0
  2694 ;;      Locals:         0       0       0
  2695 ;;      Temps:          0       0       0
  2696 ;;      Totals:         0       0       0
  2697 ;;Total ram usage:        0 bytes
  2698 ;; Hardware stack levels used: 1
  2699 ;; Hardware stack levels required when called: 6
  2700 ;; This function calls:
  2701 ;;		_TMR0_ISR
  2702 ;;		_TMR2_ISR
  2703 ;; This function is called by:
  2704 ;;		Interrupt level 1
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708  0004                     _INTERRUPT_InterruptManager:
  2709                           
  2710                           ;incstack = 0
  2711  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2712                           
  2713                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2714  0005  3180               	pagesel	$
  2715  0006                     i1l1705:
  2716                           
  2717                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  2718  0006  1E8B               	btfss	11,5	;volatile
  2719  0007  2809               	goto	u78_21
  2720  0008  280A               	goto	u78_20
  2721  0009                     u78_21:
  2722  0009  2812               	goto	i1l108
  2723  000A                     u78_20:
  2724  000A                     i1l1707:
  2725  000A  1D0B               	btfss	11,2	;volatile
  2726  000B  280D               	goto	u79_21
  2727  000C  280E               	goto	u79_20
  2728  000D                     u79_21:
  2729  000D  2812               	goto	i1l108
  2730  000E                     u79_20:
  2731  000E                     i1l1709:
  2732                           
  2733                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  2734  000E  3182  229C  3180   	fcall	_TMR0_ISR
  2735                           
  2736                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  2737  0011  2824               	goto	i1l114
  2738  0012                     i1l108:	
  2739                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  2740                           
  2741  0012  1F0B               	btfss	11,6	;volatile
  2742  0013  2815               	goto	u80_21
  2743  0014  2816               	goto	u80_20
  2744  0015                     u80_21:
  2745  0015  2824               	goto	i1l114
  2746  0016                     u80_20:
  2747  0016                     i1l1711:
  2748                           
  2749                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  2750  0016  0021               	movlb	1	; select bank1
  2751  0017  1C91               	btfss	17,1	;volatile
  2752  0018  281A               	goto	u81_21
  2753  0019  281B               	goto	u81_20
  2754  001A                     u81_21:
  2755  001A  2824               	goto	i1l113
  2756  001B                     u81_20:
  2757  001B                     i1l1713:
  2758  001B  0020               	movlb	0	; select bank0
  2759  001C  1C91               	btfss	17,1	;volatile
  2760  001D  281F               	goto	u82_21
  2761  001E  2820               	goto	u82_20
  2762  001F                     u82_21:
  2763  001F  2824               	goto	i1l113
  2764  0020                     u82_20:
  2765  0020                     i1l1715:
  2766                           
  2767                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
  2768  0020  3182  2215  3180   	fcall	_TMR2_ISR
  2769                           
  2770                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  2771  0023  2824               	goto	i1l114
  2772  0024                     i1l113:	
  2773                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  2774                           
  2775  0024                     i1l114:
  2776  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2777  0025  0009               	retfie
  2778  0026                     __end_of_INTERRUPT_InterruptManager:
  2779                           
  2780                           	psect	text18
  2781  0215                     __ptext18:	
  2782 ;; *************** function _TMR2_ISR *****************
  2783 ;; Defined at:
  2784 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;		None
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;		None
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      void 
  2791 ;; Registers used:
  2792 ;;		wreg, status,2, status,0, pclath, cstack
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMMON   BANK0   BANK1
  2798 ;;      Params:         0       0       0
  2799 ;;      Locals:         0       0       0
  2800 ;;      Temps:          0       0       0
  2801 ;;      Totals:         0       0       0
  2802 ;;Total ram usage:        0 bytes
  2803 ;; Hardware stack levels used: 1
  2804 ;; Hardware stack levels required when called: 5
  2805 ;; This function calls:
  2806 ;;		_TMR2_CallBack
  2807 ;; This function is called by:
  2808 ;;		_INTERRUPT_InterruptManager
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812  0215                     _TMR2_ISR:	
  2813                           ;psect for function _TMR2_ISR
  2814                           
  2815  0215                     i1l1631:	
  2816                           ;incstack = 0
  2817                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  2818                           
  2819                           
  2820                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
  2821  0215  0020               	movlb	0	; select bank0
  2822  0216  1091               	bcf	17,1	;volatile
  2823  0217                     i1l1633:
  2824                           
  2825                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 10)
  2826  0217  3001               	movlw	1
  2827  0218  07AA               	addwf	TMR2_ISR@CountCallBack,f	;volatile
  2828  0219  3000               	movlw	0
  2829  021A  3DAB               	addwfc	TMR2_ISR@CountCallBack+1,f	;volatile
  2830  021B  3000               	movlw	0
  2831  021C  022B               	subwf	TMR2_ISR@CountCallBack+1,w	;volatile
  2832  021D  300A               	movlw	10
  2833  021E  1903               	skipnz
  2834  021F  022A               	subwf	TMR2_ISR@CountCallBack,w	;volatile
  2835  0220  1C03               	skipc
  2836  0221  2A23               	goto	u69_21
  2837  0222  2A24               	goto	u69_20
  2838  0223                     u69_21:
  2839  0223  2A2A               	goto	i1l158
  2840  0224                     u69_20:
  2841  0224                     i1l1635:
  2842                           
  2843                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
  2844  0224  3182  22BA  3182   	fcall	_TMR2_CallBack
  2845  0227                     i1l1637:
  2846                           
  2847                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
  2848  0227  0020               	movlb	0	; select bank0
  2849  0228  01AA               	clrf	TMR2_ISR@CountCallBack	;volatile
  2850  0229  01AB               	clrf	TMR2_ISR@CountCallBack+1	;volatile
  2851  022A                     i1l158:
  2852  022A  0008               	return
  2853  022B                     __end_of_TMR2_ISR:
  2854                           
  2855                           	psect	text19
  2856  02BA                     __ptext19:	
  2857 ;; *************** function _TMR2_CallBack *****************
  2858 ;; Defined at:
  2859 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;		None
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, status,2, status,0, pclath, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMMON   BANK0   BANK1
  2873 ;;      Params:         0       0       0
  2874 ;;      Locals:         0       0       0
  2875 ;;      Temps:          0       0       0
  2876 ;;      Totals:         0       0       0
  2877 ;;Total ram usage:        0 bytes
  2878 ;; Hardware stack levels used: 1
  2879 ;; Hardware stack levels required when called: 4
  2880 ;; This function calls:
  2881 ;;		Absolute function
  2882 ;;		_Sec_tick_work
  2883 ;;		_TMR2_DefaultInterruptHandler
  2884 ;; This function is called by:
  2885 ;;		_TMR2_ISR
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889  02BA                     _TMR2_CallBack:	
  2890                           ;psect for function _TMR2_CallBack
  2891                           
  2892  02BA                     i1l1595:	
  2893                           ;incstack = 0
  2894                           ; Regs used in _TMR2_CallBack: [wreg+status,2+status,0+pclath+cstack]
  2895                           
  2896                           
  2897                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
  2898  02BA  0020               	movlb	0	; select bank0
  2899  02BB  0830               	movf	_TMR2_InterruptHandler,w
  2900  02BC  0431               	iorwf	_TMR2_InterruptHandler+1,w
  2901  02BD  1903               	btfsc	3,2
  2902  02BE  2AC0               	goto	u64_21
  2903  02BF  2AC1               	goto	u64_20
  2904  02C0                     u64_21:
  2905  02C0  2AC6               	goto	i1l162
  2906  02C1                     u64_20:
  2907  02C1                     i1l1597:
  2908                           
  2909                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
  2910  02C1  0831               	movf	_TMR2_InterruptHandler+1,w
  2911  02C2  008A               	movwf	10
  2912  02C3  0830               	movf	_TMR2_InterruptHandler,w
  2913  02C4  000A               	callw
  2914  02C5  3182               	pagesel	$
  2915  02C6                     i1l162:
  2916  02C6  0008               	return
  2917  02C7                     __end_of_TMR2_CallBack:
  2918                           
  2919                           	psect	text20
  2920  0038                     __ptext20:	
  2921 ;; *************** function _Sec_tick_work *****************
  2922 ;; Defined at:
  2923 ;;		line 191 in file "main.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;		None
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;		None
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      void 
  2930 ;; Registers used:
  2931 ;;		wreg, status,2, status,0, pclath, cstack
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMMON   BANK0   BANK1
  2937 ;;      Params:         0       0       0
  2938 ;;      Locals:         0       0       0
  2939 ;;      Temps:          1       0       0
  2940 ;;      Totals:         1       0       0
  2941 ;;Total ram usage:        1 bytes
  2942 ;; Hardware stack levels used: 1
  2943 ;; Hardware stack levels required when called: 3
  2944 ;; This function calls:
  2945 ;;		_get_fun
  2946 ;;		_get_jump
  2947 ;;		_get_measure
  2948 ;;		_rele_tick
  2949 ;;		_toggle_tone
  2950 ;; This function is called by:
  2951 ;;		_start_setup
  2952 ;;		_TMR2_CallBack
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956  0038                     _Sec_tick_work:	
  2957                           ;psect for function _Sec_tick_work
  2958                           
  2959  0038                     i1l1569:	
  2960                           ;incstack = 0
  2961                           ; Regs used in _Sec_tick_work: [wreg+status,2+status,0+pclath+cstack]
  2962                           
  2963                           
  2964                           ;main.c: 192:     time_s++;
  2965  0038  3001               	movlw	1
  2966  0039  0020               	movlb	0	; select bank0
  2967  003A  07A0               	addwf	_time_s,f
  2968  003B  3000               	movlw	0
  2969  003C  3DA1               	addwfc	_time_s+1,f
  2970  003D  3000               	movlw	0
  2971  003E  3DA2               	addwfc	_time_s+2,f
  2972  003F  3000               	movlw	0
  2973  0040  3DA3               	addwfc	_time_s+3,f
  2974  0041                     i1l1571:
  2975                           
  2976                           ;main.c: 193:     rele_tick();
  2977  0041  3181  21B0  3180   	fcall	_rele_tick
  2978  0044  0064               	clrwdt	;# 
  2979  0045                     i1l1573:
  2980                           
  2981                           ;main.c: 195:     if (FLAGS.bits.ALARM) {
  2982  0045  1C7D               	btfss	_FLAGS,0
  2983  0046  2848               	goto	u58_21
  2984  0047  2849               	goto	u58_20
  2985  0048                     u58_21:
  2986  0048  2859               	goto	i1l1579
  2987  0049                     u58_20:
  2988  0049                     i1l1575:
  2989  0049  1003               	clrc
  2990  004A  0022               	movlb	2	; select bank2
  2991  004B  1E0C               	btfss	12,4	;volatile
  2992  004C  1403               	setc
  2993  004D  1803               	btfsc	3,0
  2994  004E  2850               	goto	u59_21
  2995  004F  2853               	goto	u59_20
  2996  0050                     u59_21:
  2997  0050  0022               	movlb	2	; select bank2
  2998  0051  160C               	bsf	12,4	;volatile
  2999  0052  2855               	goto	u60_24
  3000  0053                     u59_20:
  3001  0053  0022               	movlb	2	; select bank2
  3002  0054  120C               	bcf	12,4	;volatile
  3003  0055                     u60_24:
  3004  0055                     i1l1577:
  3005                           
  3006                           ;main.c: 197:         toggle_tone();
  3007  0055  3182  22C7  3180   	fcall	_toggle_tone
  3008                           
  3009                           ;main.c: 198:     } else {
  3010  0058  2879               	goto	i1l369
  3011  0059                     i1l1579:
  3012                           
  3013                           ;main.c: 199:         get_measure();
  3014  0059  3180  20F8  3180   	fcall	_get_measure
  3015                           
  3016                           ;main.c: 200:         get_jump();
  3017  005C  3180  20BB  3180   	fcall	_get_jump
  3018                           
  3019                           ;main.c: 201:         get_fun();
  3020  005F  3180  207A  3180   	fcall	_get_fun
  3021  0062                     i1l1581:
  3022                           
  3023                           ;main.c: 202:         static char iled;;main.c: 203:         iled++;
  3024  0062  3001               	movlw	1
  3025  0063  00F7               	movwf	??_Sec_tick_work
  3026  0064  0877               	movf	??_Sec_tick_work,w
  3027  0065  07F8               	addwf	Sec_tick_work@iled,f
  3028  0066                     i1l1583:
  3029                           
  3030                           ;main.c: 204:         if (iled > 2) {
  3031  0066  3003               	movlw	3
  3032  0067  0278               	subwf	Sec_tick_work@iled,w
  3033  0068  1C03               	skipc
  3034  0069  286B               	goto	u61_21
  3035  006A  286C               	goto	u61_20
  3036  006B                     u61_21:
  3037  006B  2879               	goto	i1l369
  3038  006C                     u61_20:
  3039  006C                     i1l1585:
  3040  006C  1003               	clrc
  3041  006D  0022               	movlb	2	; select bank2
  3042  006E  1E0C               	btfss	12,4	;volatile
  3043  006F  1403               	setc
  3044  0070  1803               	btfsc	3,0
  3045  0071  2873               	goto	u62_21
  3046  0072  2876               	goto	u62_20
  3047  0073                     u62_21:
  3048  0073  0022               	movlb	2	; select bank2
  3049  0074  160C               	bsf	12,4	;volatile
  3050  0075  2878               	goto	u63_24
  3051  0076                     u62_20:
  3052  0076  0022               	movlb	2	; select bank2
  3053  0077  120C               	bcf	12,4	;volatile
  3054  0078                     u63_24:
  3055  0078                     i1l1587:
  3056                           
  3057                           ;main.c: 206:             iled = 0;
  3058  0078  01F8               	clrf	Sec_tick_work@iled
  3059  0079                     i1l369:
  3060  0079  0008               	return
  3061  007A                     __end_of_Sec_tick_work:
  3062                           
  3063                           	psect	text21
  3064  031F                     __ptext21:	
  3065 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  3066 ;; Defined at:
  3067 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;		None
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;		None
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  1    wreg      void 
  3074 ;; Registers used:
  3075 ;;		None
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMMON   BANK0   BANK1
  3081 ;;      Params:         0       0       0
  3082 ;;      Locals:         0       0       0
  3083 ;;      Temps:          0       0       0
  3084 ;;      Totals:         0       0       0
  3085 ;;Total ram usage:        0 bytes
  3086 ;; Hardware stack levels used: 1
  3087 ;; This function calls:
  3088 ;;		Nothing
  3089 ;; This function is called by:
  3090 ;;		_TMR2_Initialize
  3091 ;;		_TMR2_CallBack
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095  031F                     _TMR2_DefaultInterruptHandler:	
  3096                           ;psect for function _TMR2_DefaultInterruptHandler
  3097                           
  3098  031F                     i1l168:	
  3099                           ;incstack = 0
  3100                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  3101                           
  3102  031F  0008               	return
  3103  0320                     __end_of_TMR2_DefaultInterruptHandler:
  3104                           
  3105                           	psect	text22
  3106  02C7                     __ptext22:	
  3107 ;; *************** function _toggle_tone *****************
  3108 ;; Defined at:
  3109 ;;		line 64 in file "main.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;		None
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      void 
  3116 ;; Registers used:
  3117 ;;		status,0
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMMON   BANK0   BANK1
  3123 ;;      Params:         0       0       0
  3124 ;;      Locals:         0       0       0
  3125 ;;      Temps:          0       0       0
  3126 ;;      Totals:         0       0       0
  3127 ;;Total ram usage:        0 bytes
  3128 ;; Hardware stack levels used: 1
  3129 ;; This function calls:
  3130 ;;		Nothing
  3131 ;; This function is called by:
  3132 ;;		_Sec_tick_work
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136  02C7                     _toggle_tone:	
  3137                           ;psect for function _toggle_tone
  3138                           
  3139  02C7                     i1l1431:	
  3140                           ;incstack = 0
  3141                           ; Regs used in _toggle_tone: [status,0]
  3142                           
  3143                           
  3144                           ;main.c: 65:     TRISAbits.TRISA5 = ~TRISAbits.TRISA5;
  3145  02C7  1003               	clrc
  3146  02C8  0021               	movlb	1	; select bank1
  3147  02C9  1E8C               	btfss	12,5	;volatile
  3148  02CA  1403               	setc
  3149  02CB  1803               	btfsc	3,0
  3150  02CC  2ACE               	goto	u44_21
  3151  02CD  2AD1               	goto	u44_20
  3152  02CE                     u44_21:
  3153  02CE  0021               	movlb	1	; select bank1
  3154  02CF  168C               	bsf	12,5	;volatile
  3155  02D0  2AD3               	goto	u45_24
  3156  02D1                     u44_20:
  3157  02D1  0021               	movlb	1	; select bank1
  3158  02D2  128C               	bcf	12,5	;volatile
  3159  02D3                     u45_24:
  3160  02D3                     i1l269:
  3161  02D3  0008               	return
  3162  02D4                     __end_of_toggle_tone:
  3163                           
  3164                           	psect	text23
  3165  01B0                     __ptext23:	
  3166 ;; *************** function _rele_tick *****************
  3167 ;; Defined at:
  3168 ;;		line 166 in file "main.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;		None
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMMON   BANK0   BANK1
  3182 ;;      Params:         0       0       0
  3183 ;;      Locals:         0       0       0
  3184 ;;      Temps:          0       0       0
  3185 ;;      Totals:         0       0       0
  3186 ;;Total ram usage:        0 bytes
  3187 ;; Hardware stack levels used: 1
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		_Sec_tick_work
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195  01B0                     _rele_tick:	
  3196                           ;psect for function _rele_tick
  3197                           
  3198  01B0                     i1l1511:	
  3199                           ;incstack = 0
  3200                           ; Regs used in _rele_tick: [wreg+status,2+status,0]
  3201                           
  3202                           
  3203                           ;main.c: 167:     if (FLAGS.bits.RELE_POW) {
  3204  01B0  1F7D               	btfss	_FLAGS,6
  3205  01B1  29B3               	goto	u55_21
  3206  01B2  29B4               	goto	u55_20
  3207  01B3                     u55_21:
  3208  01B3  29C9               	goto	i1l357
  3209  01B4                     u55_20:
  3210  01B4                     i1l1513:
  3211                           
  3212                           ;main.c: 168:         if (time_pow > 0) time_pow--;
  3213  01B4  0020               	movlb	0	; select bank0
  3214  01B5  0832               	movf	_time_pow,w
  3215  01B6  1903               	btfsc	3,2
  3216  01B7  29B9               	goto	u56_21
  3217  01B8  29BA               	goto	u56_20
  3218  01B9                     u56_21:
  3219  01B9  29BC               	goto	i1l351
  3220  01BA                     u56_20:
  3221  01BA                     i1l1515:
  3222  01BA  3001               	movlw	1
  3223  01BB  02B2               	subwf	_time_pow,f
  3224  01BC                     i1l351:
  3225                           
  3226                           ;main.c: 169:         if (time_pow <= 0) {
  3227  01BC  0832               	movf	_time_pow,w
  3228  01BD  1D03               	btfss	3,2
  3229  01BE  29C0               	goto	u57_21
  3230  01BF  29C1               	goto	u57_20
  3231  01C0                     u57_21:
  3232  01C0  29C9               	goto	i1l357
  3233  01C1                     u57_20:
  3234  01C1                     i1l353:	
  3235                           ;main.c: 170:             do { LATCbits.LATC5 = 0; } while(0);
  3236                           
  3237  01C1  0022               	movlb	2	; select bank2
  3238  01C2  128E               	bcf	14,5	;volatile
  3239  01C3                     i1l1517:
  3240                           
  3241                           ;main.c: 171:             _delay((unsigned long)((1)*(4000000/4000.0)));
  3242  01C3  30C8               	movlw	200
  3243  01C4                     u85_27:
  3244  01C4  3200               	nop2
  3245  01C5  0B89               	decfsz	9,f
  3246  01C6  29C4               	goto	u85_27
  3247  01C7                     i1l1519:
  3248  01C7  0022               	movlb	2	; select bank2
  3249  01C8  120E               	bcf	14,4	;volatile
  3250  01C9                     i1l357:
  3251  01C9  0008               	return
  3252  01CA                     __end_of_rele_tick:
  3253                           
  3254                           	psect	text24
  3255  00F8                     __ptext24:	
  3256 ;; *************** function _get_measure *****************
  3257 ;; Defined at:
  3258 ;;		line 114 in file "main.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;		None
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;  res             2    5[COMMON] unsigned int 
  3263 ;; Return value:  Size  Location     Type
  3264 ;;                  1    wreg      void 
  3265 ;; Registers used:
  3266 ;;		wreg, status,2, status,0, pclath, cstack
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 0/0
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMMON   BANK0   BANK1
  3272 ;;      Params:         0       0       0
  3273 ;;      Locals:         2       0       0
  3274 ;;      Temps:          1       0       0
  3275 ;;      Totals:         3       0       0
  3276 ;;Total ram usage:        3 bytes
  3277 ;; Hardware stack levels used: 1
  3278 ;; Hardware stack levels required when called: 2
  3279 ;; This function calls:
  3280 ;;		_ADC_GetConversion
  3281 ;;		_start_alarm
  3282 ;; This function is called by:
  3283 ;;		_Sec_tick_work
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287  00F8                     _get_measure:	
  3288                           ;psect for function _get_measure
  3289                           
  3290  00F8                     i1l307:	
  3291                           ;incstack = 0
  3292                           ; Regs used in _get_measure: [wreg+status,2+status,0+pclath+cstack]
  3293                           ;main.c: 115:     do { LATCbits.LATC1 = 1; } while(0);
  3294                           
  3295  00F8  0022               	movlb	2	; select bank2
  3296  00F9  148E               	bsf	14,1	;volatile
  3297  00FA                     i1l309:	
  3298                           ;main.c: 116:     do { ANSELCbits.ANSC3 = 1; } while(0);
  3299                           
  3300  00FA  0023               	movlb	3	; select bank3
  3301  00FB  158E               	bsf	14,3	;volatile
  3302  00FC                     i1l1435:
  3303                           
  3304                           ;main.c: 117:     unsigned res = ADC_GetConversion(PIN_WSP_STATE);
  3305  00FC  3007               	movlw	7
  3306  00FD  3181  21E4  3180   	fcall	_ADC_GetConversion
  3307  0100  0871               	movf	?_ADC_GetConversion+1,w
  3308  0101  00F6               	movwf	get_measure@res+1
  3309  0102  0870               	movf	?_ADC_GetConversion,w
  3310  0103  00F5               	movwf	get_measure@res
  3311  0104                     i1l1437:
  3312  0104  0023               	movlb	3	; select bank3
  3313  0105  118E               	bcf	14,3	;volatile
  3314  0106                     i1l1439:
  3315                           
  3316                           ;main.c: 119:     result = res;
  3317  0106  0876               	movf	get_measure@res+1,w
  3318  0107  0020               	movlb	0	; select bank0
  3319  0108  00A9               	movwf	_result+1
  3320  0109  0875               	movf	get_measure@res,w
  3321  010A  00A8               	movwf	_result
  3322  010B                     i1l1441:
  3323  010B  0022               	movlb	2	; select bank2
  3324  010C  108E               	bcf	14,1	;volatile
  3325  010D                     i1l1443:
  3326                           
  3327                           ;main.c: 122:     if (res < BAD_WSP_VOLTAGE) measures++;
  3328  010D  304E               	movlw	78
  3329  010E  0276               	subwf	get_measure@res+1,w
  3330  010F  3020               	movlw	32
  3331  0110  1903               	skipnz
  3332  0111  0275               	subwf	get_measure@res,w
  3333  0112  1803               	skipnc
  3334  0113  2915               	goto	u46_21
  3335  0114  2916               	goto	u46_20
  3336  0115                     u46_21:
  3337  0115  291B               	goto	i1l1447
  3338  0116                     u46_20:
  3339  0116                     i1l1445:
  3340  0116  3001               	movlw	1
  3341  0117  00F4               	movwf	??_get_measure
  3342  0118  0874               	movf	??_get_measure,w
  3343  0119  07FA               	addwf	_measures,f
  3344  011A  2925               	goto	i1l1451
  3345  011B                     i1l1447:
  3346  011B  309C               	movlw	156
  3347  011C  0276               	subwf	get_measure@res+1,w
  3348  011D  3041               	movlw	65
  3349  011E  1903               	skipnz
  3350  011F  0275               	subwf	get_measure@res,w
  3351  0120  1C03               	skipc
  3352  0121  2923               	goto	u47_21
  3353  0122  2924               	goto	u47_20
  3354  0123                     u47_21:
  3355  0123  2925               	goto	i1l1451
  3356  0124                     u47_20:
  3357  0124                     i1l1449:
  3358  0124  01FA               	clrf	_measures
  3359  0125                     i1l1451:
  3360                           
  3361                           ;main.c: 124:     if (measures > 2) start_alarm();
  3362  0125  3003               	movlw	3
  3363  0126  027A               	subwf	_measures,w
  3364  0127  1C03               	skipc
  3365  0128  292A               	goto	u48_21
  3366  0129  292B               	goto	u48_20
  3367  012A                     u48_21:
  3368  012A  292E               	goto	i1l319
  3369  012B                     u48_20:
  3370  012B                     i1l1453:
  3371  012B  3182  228C  3180   	fcall	_start_alarm
  3372  012E                     i1l319:
  3373  012E  0008               	return
  3374  012F                     __end_of_get_measure:
  3375                           
  3376                           	psect	text25
  3377  028C                     __ptext25:	
  3378 ;; *************** function _start_alarm *****************
  3379 ;; Defined at:
  3380 ;;		line 101 in file "main.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  2  299[None  ] int 
  3387 ;; Registers used:
  3388 ;;		wreg, status,2, status,0, pclath, cstack
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMMON   BANK0   BANK1
  3394 ;;      Params:         0       0       0
  3395 ;;      Locals:         0       0       0
  3396 ;;      Temps:          0       0       0
  3397 ;;      Totals:         0       0       0
  3398 ;;Total ram usage:        0 bytes
  3399 ;; Hardware stack levels used: 1
  3400 ;; Hardware stack levels required when called: 1
  3401 ;; This function calls:
  3402 ;;		_go_close_alt
  3403 ;;		i1_go_close
  3404 ;; This function is called by:
  3405 ;;		_get_measure
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409  028C                     _start_alarm:	
  3410                           ;psect for function _start_alarm
  3411                           
  3412  028C                     i1l1421:	
  3413                           ;incstack = 0
  3414                           ; Regs used in _start_alarm: [wreg+status,2+status,0+pclath+cstack]
  3415                           
  3416                           
  3417                           ;main.c: 102:     FLAGS.bits.ALARM = 1;
  3418  028C  147D               	bsf	_FLAGS,0
  3419  028D                     i1l300:	
  3420                           ;main.c: 103:     do { LATCbits.LATC0 = 1; } while(0);
  3421                           
  3422  028D  0022               	movlb	2	; select bank2
  3423  028E  140E               	bsf	14,0	;volatile
  3424  028F                     i1l301:
  3425                           
  3426                           ;main.c: 104:     INTCONbits.TMR0IE = 1;
  3427  028F  168B               	bsf	11,5	;volatile
  3428                           
  3429                           ;main.c: 106:      if (FLAGS.bits.WORK_MODE) {
  3430  0290  1CFD               	btfss	_FLAGS,1
  3431  0291  2A93               	goto	u43_21
  3432  0292  2A94               	goto	u43_20
  3433  0293                     u43_21:
  3434  0293  2A98               	goto	i1l1425
  3435  0294                     u43_20:
  3436  0294                     i1l1423:
  3437                           
  3438                           ;main.c: 107:                 go_close_alt();
  3439  0294  3183  2307  3182   	fcall	_go_close_alt
  3440                           
  3441                           ;main.c: 108:             } else {
  3442  0297  2A9B               	goto	i1l304
  3443  0298                     i1l1425:
  3444                           
  3445                           ;main.c: 109:                 go_close();
  3446  0298  3181  21CA  3182   	fcall	i1_go_close
  3447  029B                     i1l304:
  3448  029B  0008               	return
  3449  029C                     __end_of_start_alarm:
  3450                           
  3451                           	psect	text26
  3452  01CA                     __ptext26:	
  3453 ;; *************** function i1_go_close *****************
  3454 ;; Defined at:
  3455 ;;		line 70 in file "main.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;		None
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;		None
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1    wreg      void 
  3462 ;; Registers used:
  3463 ;;		wreg
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMMON   BANK0   BANK1
  3469 ;;      Params:         0       0       0
  3470 ;;      Locals:         0       0       0
  3471 ;;      Temps:          1       0       0
  3472 ;;      Totals:         1       0       0
  3473 ;;Total ram usage:        1 bytes
  3474 ;; Hardware stack levels used: 1
  3475 ;; This function calls:
  3476 ;;		Nothing
  3477 ;; This function is called by:
  3478 ;;		_start_alarm
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482  01CA                     i1_go_close:	
  3483                           ;psect for function i1_go_close
  3484                           
  3485  01CA                     i1l1395:	
  3486                           ;incstack = 0
  3487                           ; Regs used in i1_go_close: [wreg]
  3488                           
  3489                           
  3490                           ;main.c: 71:     time_s = 0;
  3491  01CA  3000               	movlw	0
  3492  01CB  0020               	movlb	0	; select bank0
  3493  01CC  00A3               	movwf	_time_s+3
  3494  01CD  3000               	movlw	0
  3495  01CE  00A2               	movwf	_time_s+2
  3496  01CF  3000               	movlw	0
  3497  01D0  00A1               	movwf	_time_s+1
  3498  01D1  3000               	movlw	0
  3499  01D2  00A0               	movwf	_time_s
  3500  01D3                     i1l1397:
  3501                           
  3502                           ;main.c: 72:     FLAGS.bits.FUN_OLD = 0;
  3503  01D3  117D               	bcf	_FLAGS,2
  3504  01D4                     i1l1399:
  3505  01D4  0022               	movlb	2	; select bank2
  3506  01D5  160E               	bsf	14,4	;volatile
  3507  01D6                     i1l273:
  3508                           
  3509                           ;main.c: 74:     _delay((unsigned long)((1)*(4000000/4000.0)));
  3510  01D6  30C8               	movlw	200
  3511  01D7                     u86_27:
  3512  01D7  3200               	nop2
  3513  01D8  0B89               	decfsz	9,f
  3514  01D9  29D7               	goto	u86_27
  3515  01DA                     i1l1401:
  3516  01DA  0022               	movlb	2	; select bank2
  3517  01DB  168E               	bsf	14,5	;volatile
  3518  01DC                     i1l275:
  3519                           
  3520                           ;main.c: 76:     time_pow = 10;
  3521  01DC  300A               	movlw	10
  3522  01DD  00F0               	movwf	??i1_go_close
  3523  01DE  0870               	movf	??i1_go_close,w
  3524  01DF  0020               	movlb	0	; select bank0
  3525  01E0  00B2               	movwf	_time_pow
  3526  01E1                     i1l1403:
  3527                           
  3528                           ;main.c: 77:     FLAGS.bits.RELE_POW = 1;
  3529  01E1  177D               	bsf	_FLAGS,6
  3530  01E2                     i1l1405:
  3531                           
  3532                           ;main.c: 78:     FLAGS.bits.RELE_CON = 1;
  3533  01E2  17FD               	bsf	_FLAGS,7
  3534  01E3                     i1l276:
  3535  01E3  0008               	return
  3536  01E4                     __end_ofi1_go_close:
  3537                           
  3538                           	psect	text27
  3539  0307                     __ptext27:	
  3540 ;; *************** function _go_close_alt *****************
  3541 ;; Defined at:
  3542 ;;		line 90 in file "main.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;		None
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;		None
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  1    wreg      void 
  3549 ;; Registers used:
  3550 ;;		None
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMMON   BANK0   BANK1
  3556 ;;      Params:         0       0       0
  3557 ;;      Locals:         0       0       0
  3558 ;;      Temps:          0       0       0
  3559 ;;      Totals:         0       0       0
  3560 ;;Total ram usage:        0 bytes
  3561 ;; Hardware stack levels used: 1
  3562 ;; This function calls:
  3563 ;;		Nothing
  3564 ;; This function is called by:
  3565 ;;		_start_alarm
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569  0307                     _go_close_alt:	
  3570                           ;psect for function _go_close_alt
  3571                           
  3572  0307                     i1l1393:	
  3573                           ;incstack = 0
  3574                           ; Regs used in _go_close_alt: []
  3575                           
  3576                           
  3577                           ;main.c: 91:     FLAGS.bits.FUN_OLD = 0;
  3578  0307  117D               	bcf	_FLAGS,2
  3579  0308                     i1l286:	
  3580                           ;main.c: 92:     do { LATCbits.LATC4 = 0; } while(0);
  3581                           
  3582  0308  0022               	movlb	2	; select bank2
  3583  0309  120E               	bcf	14,4	;volatile
  3584  030A                     i1l288:	
  3585                           ;main.c: 93:     do { LATCbits.LATC5 = 1; } while(0);
  3586                           
  3587  030A  168E               	bsf	14,5	;volatile
  3588  030B                     i1l290:
  3589  030B  0008               	return
  3590  030C                     __end_of_go_close_alt:
  3591                           
  3592                           	psect	text28
  3593  00BB                     __ptext28:	
  3594 ;; *************** function _get_jump *****************
  3595 ;; Defined at:
  3596 ;;		line 148 in file "main.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  res             2    5[COMMON] unsigned int 
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  1    wreg      void 
  3603 ;; Registers used:
  3604 ;;		wreg, status,2, status,0, pclath, cstack
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMMON   BANK0   BANK1
  3610 ;;      Params:         0       0       0
  3611 ;;      Locals:         2       0       0
  3612 ;;      Temps:          1       0       0
  3613 ;;      Totals:         3       0       0
  3614 ;;Total ram usage:        3 bytes
  3615 ;; Hardware stack levels used: 1
  3616 ;; Hardware stack levels required when called: 1
  3617 ;; This function calls:
  3618 ;;		_ADC_GetConversion
  3619 ;; This function is called by:
  3620 ;;		_Sec_tick_work
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624  00BB                     _get_jump:	
  3625                           ;psect for function _get_jump
  3626                           
  3627  00BB                     i1l338:	
  3628                           ;incstack = 0
  3629                           ; Regs used in _get_jump: [wreg+status,2+status,0+pclath+cstack]
  3630                           ;main.c: 149:     do { ANSELAbits.ANSA1 = 1; } while(0);
  3631                           
  3632  00BB  0023               	movlb	3	; select bank3
  3633  00BC  148C               	bsf	12,1	;volatile
  3634  00BD                     i1l1485:
  3635                           
  3636                           ;main.c: 150:     unsigned res = ADC_GetConversion(PIN_JUMP_STATE);
  3637  00BD  3001               	movlw	1
  3638  00BE  3181  21E4  3180   	fcall	_ADC_GetConversion
  3639  00C1  0871               	movf	?_ADC_GetConversion+1,w
  3640  00C2  00F6               	movwf	get_jump@res+1
  3641  00C3  0870               	movf	?_ADC_GetConversion,w
  3642  00C4  00F5               	movwf	get_jump@res
  3643  00C5                     i1l1487:
  3644  00C5  0023               	movlb	3	; select bank3
  3645  00C6  108C               	bcf	12,1	;volatile
  3646  00C7                     i1l1489:
  3647                           
  3648                           ;main.c: 152:     jresult = res;
  3649  00C7  0876               	movf	get_jump@res+1,w
  3650  00C8  0020               	movlb	0	; select bank0
  3651  00C9  00A7               	movwf	_jresult+1
  3652  00CA  0875               	movf	get_jump@res,w
  3653  00CB  00A6               	movwf	_jresult
  3654  00CC                     i1l1491:
  3655                           
  3656                           ;main.c: 153:     if (res < 6000) jump_counter--;
  3657  00CC  3017               	movlw	23
  3658  00CD  0276               	subwf	get_jump@res+1,w
  3659  00CE  3070               	movlw	112
  3660  00CF  1903               	skipnz
  3661  00D0  0275               	subwf	get_jump@res,w
  3662  00D1  1803               	skipnc
  3663  00D2  28D4               	goto	u52_21
  3664  00D3  28D5               	goto	u52_20
  3665  00D4                     u52_21:
  3666  00D4  28DA               	goto	i1l1495
  3667  00D5                     u52_20:
  3668  00D5                     i1l1493:
  3669  00D5  30FF               	movlw	255
  3670  00D6  00F4               	movwf	??_get_jump
  3671  00D7  0874               	movf	??_get_jump,w
  3672  00D8  07F9               	addwf	_jump_counter,f
  3673  00D9  28DE               	goto	i1l1497
  3674  00DA                     i1l1495:
  3675  00DA  3001               	movlw	1
  3676  00DB  00F4               	movwf	??_get_jump
  3677  00DC  0874               	movf	??_get_jump,w
  3678  00DD  07F9               	addwf	_jump_counter,f
  3679  00DE                     i1l1497:
  3680                           
  3681                           ;main.c: 156:     if (jump_counter > 10) {
  3682  00DE  0879               	movf	_jump_counter,w
  3683  00DF  3A80               	xorlw	128
  3684  00E0  3E75               	addlw	-139
  3685  00E1  1C03               	skipc
  3686  00E2  28E4               	goto	u53_21
  3687  00E3  28E5               	goto	u53_20
  3688  00E4                     u53_21:
  3689  00E4  28EB               	goto	i1l1503
  3690  00E5                     u53_20:
  3691  00E5                     i1l1499:
  3692                           
  3693                           ;main.c: 157:         jump_counter = 10;
  3694  00E5  300A               	movlw	10
  3695  00E6  00F4               	movwf	??_get_jump
  3696  00E7  0874               	movf	??_get_jump,w
  3697  00E8  00F9               	movwf	_jump_counter
  3698  00E9                     i1l1501:
  3699                           
  3700                           ;main.c: 158:         FLAGS.bits.JUMP = 1;
  3701  00E9  167D               	bsf	_FLAGS,4
  3702                           
  3703                           ;main.c: 159:     } else if (jump_counter<-10) {
  3704  00EA  28F7               	goto	i1l347
  3705  00EB                     i1l1503:
  3706  00EB  0879               	movf	_jump_counter,w
  3707  00EC  3A80               	xorlw	128
  3708  00ED  3E8A               	addlw	138
  3709  00EE  1803               	skipnc
  3710  00EF  28F1               	goto	u54_21
  3711  00F0  28F2               	goto	u54_20
  3712  00F1                     u54_21:
  3713  00F1  28F7               	goto	i1l347
  3714  00F2                     u54_20:
  3715  00F2                     i1l1505:
  3716                           
  3717                           ;main.c: 160:         jump_counter = -10;
  3718  00F2  30F6               	movlw	246
  3719  00F3  00F4               	movwf	??_get_jump
  3720  00F4  0874               	movf	??_get_jump,w
  3721  00F5  00F9               	movwf	_jump_counter
  3722  00F6                     i1l1507:
  3723                           
  3724                           ;main.c: 161:         FLAGS.bits.JUMP = 0;
  3725  00F6  127D               	bcf	_FLAGS,4
  3726  00F7                     i1l347:
  3727  00F7  0008               	return
  3728  00F8                     __end_of_get_jump:
  3729                           
  3730                           	psect	text29
  3731  007A                     __ptext29:	
  3732 ;; *************** function _get_fun *****************
  3733 ;; Defined at:
  3734 ;;		line 128 in file "main.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;		None
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;  res             2    5[COMMON] unsigned int 
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      void 
  3741 ;; Registers used:
  3742 ;;		wreg, status,2, status,0, pclath, cstack
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMMON   BANK0   BANK1
  3748 ;;      Params:         0       0       0
  3749 ;;      Locals:         2       0       0
  3750 ;;      Temps:          1       0       0
  3751 ;;      Totals:         3       0       0
  3752 ;;Total ram usage:        3 bytes
  3753 ;; Hardware stack levels used: 1
  3754 ;; Hardware stack levels required when called: 1
  3755 ;; This function calls:
  3756 ;;		_ADC_GetConversion
  3757 ;; This function is called by:
  3758 ;;		_Sec_tick_work
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762  007A                     _get_fun:	
  3763                           ;psect for function _get_fun
  3764                           
  3765  007A                     i1l322:	
  3766                           ;incstack = 0
  3767                           ; Regs used in _get_fun: [wreg+status,2+status,0+pclath+cstack]
  3768                           ;main.c: 129:     do { LATCbits.LATC1 = 1; } while(0);
  3769                           
  3770  007A  0022               	movlb	2	; select bank2
  3771  007B  148E               	bsf	14,1	;volatile
  3772  007C                     i1l324:	
  3773                           ;main.c: 130:     do { ANSELCbits.ANSC2 = 1; } while(0);
  3774                           
  3775  007C  0023               	movlb	3	; select bank3
  3776  007D  150E               	bsf	14,2	;volatile
  3777  007E                     i1l1457:
  3778                           
  3779                           ;main.c: 131:     unsigned res = ADC_GetConversion(PIN_FUN_STATE);
  3780  007E  3006               	movlw	6
  3781  007F  3181  21E4  3180   	fcall	_ADC_GetConversion
  3782  0082  0871               	movf	?_ADC_GetConversion+1,w
  3783  0083  00F6               	movwf	get_fun@res+1
  3784  0084  0870               	movf	?_ADC_GetConversion,w
  3785  0085  00F5               	movwf	get_fun@res
  3786  0086                     i1l1459:
  3787  0086  0023               	movlb	3	; select bank3
  3788  0087  110E               	bcf	14,2	;volatile
  3789  0088                     i1l1461:
  3790  0088  0022               	movlb	2	; select bank2
  3791  0089  108E               	bcf	14,1	;volatile
  3792  008A                     i1l1463:
  3793                           
  3794                           ;main.c: 134:     fresult = res;
  3795  008A  0876               	movf	get_fun@res+1,w
  3796  008B  0020               	movlb	0	; select bank0
  3797  008C  00A5               	movwf	_fresult+1
  3798  008D  0875               	movf	get_fun@res,w
  3799  008E  00A4               	movwf	_fresult
  3800  008F                     i1l1465:
  3801                           
  3802                           ;main.c: 135:     if (res < 6000) fun_counter--;
  3803  008F  3017               	movlw	23
  3804  0090  0276               	subwf	get_fun@res+1,w
  3805  0091  3070               	movlw	112
  3806  0092  1903               	skipnz
  3807  0093  0275               	subwf	get_fun@res,w
  3808  0094  1803               	skipnc
  3809  0095  2897               	goto	u49_21
  3810  0096  2898               	goto	u49_20
  3811  0097                     u49_21:
  3812  0097  289D               	goto	i1l1469
  3813  0098                     u49_20:
  3814  0098                     i1l1467:
  3815  0098  30FF               	movlw	255
  3816  0099  00F4               	movwf	??_get_fun
  3817  009A  0874               	movf	??_get_fun,w
  3818  009B  07FB               	addwf	_fun_counter,f
  3819  009C  28A1               	goto	i1l1471
  3820  009D                     i1l1469:
  3821  009D  3001               	movlw	1
  3822  009E  00F4               	movwf	??_get_fun
  3823  009F  0874               	movf	??_get_fun,w
  3824  00A0  07FB               	addwf	_fun_counter,f
  3825  00A1                     i1l1471:
  3826                           
  3827                           ;main.c: 138:     if (fun_counter > 10) {
  3828  00A1  087B               	movf	_fun_counter,w
  3829  00A2  3A80               	xorlw	128
  3830  00A3  3E75               	addlw	-139
  3831  00A4  1C03               	skipc
  3832  00A5  28A7               	goto	u50_21
  3833  00A6  28A8               	goto	u50_20
  3834  00A7                     u50_21:
  3835  00A7  28AE               	goto	i1l1477
  3836  00A8                     u50_20:
  3837  00A8                     i1l1473:
  3838                           
  3839                           ;main.c: 139:         fun_counter = 10;
  3840  00A8  300A               	movlw	10
  3841  00A9  00F4               	movwf	??_get_fun
  3842  00AA  0874               	movf	??_get_fun,w
  3843  00AB  00FB               	movwf	_fun_counter
  3844  00AC                     i1l1475:
  3845                           
  3846                           ;main.c: 140:         FLAGS.bits.FUN_NEW = 1;
  3847  00AC  15FD               	bsf	_FLAGS,3
  3848                           
  3849                           ;main.c: 141:     } else if (fun_counter<-10) {
  3850  00AD  28BA               	goto	i1l335
  3851  00AE                     i1l1477:
  3852  00AE  087B               	movf	_fun_counter,w
  3853  00AF  3A80               	xorlw	128
  3854  00B0  3E8A               	addlw	138
  3855  00B1  1803               	skipnc
  3856  00B2  28B4               	goto	u51_21
  3857  00B3  28B5               	goto	u51_20
  3858  00B4                     u51_21:
  3859  00B4  28BA               	goto	i1l335
  3860  00B5                     u51_20:
  3861  00B5                     i1l1479:
  3862                           
  3863                           ;main.c: 142:         fun_counter = -10;
  3864  00B5  30F6               	movlw	246
  3865  00B6  00F4               	movwf	??_get_fun
  3866  00B7  0874               	movf	??_get_fun,w
  3867  00B8  00FB               	movwf	_fun_counter
  3868  00B9                     i1l1481:
  3869                           
  3870                           ;main.c: 143:         FLAGS.bits.FUN_NEW = 0;
  3871  00B9  11FD               	bcf	_FLAGS,3
  3872  00BA                     i1l335:
  3873  00BA  0008               	return
  3874  00BB                     __end_of_get_fun:
  3875                           
  3876                           	psect	text30
  3877  01E4                     __ptext30:	
  3878 ;; *************** function _ADC_GetConversion *****************
  3879 ;; Defined at:
  3880 ;;		line 112 in file "mcc_generated_files/adc.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;  channel         1    wreg     enum E2178
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;  channel         1    3[COMMON] enum E2178
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  2    0[COMMON] unsigned short 
  3887 ;; Registers used:
  3888 ;;		wreg, status,2, status,0
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMMON   BANK0   BANK1
  3894 ;;      Params:         2       0       0
  3895 ;;      Locals:         1       0       0
  3896 ;;      Temps:          1       0       0
  3897 ;;      Totals:         4       0       0
  3898 ;;Total ram usage:        4 bytes
  3899 ;; Hardware stack levels used: 1
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_get_measure
  3904 ;;		_get_fun
  3905 ;;		_get_jump
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909  01E4                     _ADC_GetConversion:	
  3910                           ;psect for function _ADC_GetConversion
  3911                           
  3912                           
  3913                           ;incstack = 0
  3914                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3915                           ;ADC_GetConversion@channel stored from wreg
  3916  01E4  00F3               	movwf	ADC_GetConversion@channel
  3917  01E5                     i1l1409:
  3918                           
  3919                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  3920  01E5  0873               	movf	ADC_GetConversion@channel,w
  3921  01E6  00F2               	movwf	??_ADC_GetConversion
  3922  01E7  0DF2               	rlf	??_ADC_GetConversion,f
  3923  01E8  0DF2               	rlf	??_ADC_GetConversion,f
  3924  01E9  0021               	movlb	1	; select bank1
  3925  01EA  081D               	movf	29,w	;volatile
  3926  01EB  0672               	xorwf	??_ADC_GetConversion,w
  3927  01EC  3983               	andlw	-125
  3928  01ED  0672               	xorwf	??_ADC_GetConversion,w
  3929  01EE  009D               	movwf	29	;volatile
  3930  01EF                     i1l1411:
  3931                           
  3932                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  3933  01EF  141D               	bsf	29,0	;volatile
  3934  01F0                     i1l1413:
  3935                           
  3936                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  3937  01F0  3200               	nop2	;2 cycle nop
  3938  01F1  3200               	nop2	;2 cycle nop
  3939  01F2  0000               	nop
  3940  01F3                     i1l1415:
  3941                           
  3942                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  3943  01F3  0021               	movlb	1	; select bank1
  3944  01F4  149D               	bsf	29,1	;volatile
  3945  01F5                     i1l61:	
  3946                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  3947                           
  3948                           
  3949                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  3950  01F5  189D               	btfsc	29,1	;volatile
  3951  01F6  29F8               	goto	u42_21
  3952  01F7  29F9               	goto	u42_20
  3953  01F8                     u42_21:
  3954  01F8  29F5               	goto	i1l61
  3955  01F9                     u42_20:
  3956  01F9                     i1l1417:
  3957                           
  3958                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3959  01F9  081C               	movf	28,w	;volatile
  3960  01FA  00F1               	movwf	?_ADC_GetConversion+1
  3961  01FB  081B               	movf	27,w	;volatile
  3962  01FC  00F0               	movwf	?_ADC_GetConversion
  3963  01FD                     i1l64:
  3964  01FD  0008               	return
  3965  01FE                     __end_of_ADC_GetConversion:
  3966                           
  3967                           	psect	text31
  3968  029C                     __ptext31:	
  3969 ;; *************** function _TMR0_ISR *****************
  3970 ;; Defined at:
  3971 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;		None
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;		None
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  1    wreg      void 
  3978 ;; Registers used:
  3979 ;;		wreg, status,2, status,0, pclath, cstack
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMMON   BANK0   BANK1
  3985 ;;      Params:         0       0       0
  3986 ;;      Locals:         0       0       0
  3987 ;;      Temps:          0       0       0
  3988 ;;      Totals:         0       0       0
  3989 ;;Total ram usage:        0 bytes
  3990 ;; Hardware stack levels used: 1
  3991 ;; Hardware stack levels required when called: 1
  3992 ;; This function calls:
  3993 ;;		Absolute function
  3994 ;;		_TMR0_DefaultInterruptHandler
  3995 ;;		_switch_zum
  3996 ;; This function is called by:
  3997 ;;		_INTERRUPT_InterruptManager
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001  029C                     _TMR0_ISR:	
  4002                           ;psect for function _TMR0_ISR
  4003                           
  4004  029C                     i1l1623:	
  4005                           ;incstack = 0
  4006                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  4007                           
  4008                           
  4009                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  4010  029C  110B               	bcf	11,2	;volatile
  4011  029D                     i1l1625:
  4012                           
  4013                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  4014  029D  0020               	movlb	0	; select bank0
  4015  029E  0833               	movf	_timer0ReloadVal,w	;volatile
  4016  029F  0095               	movwf	21	;volatile
  4017  02A0                     i1l1627:
  4018                           
  4019                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  4020  02A0  082E               	movf	_TMR0_InterruptHandler,w
  4021  02A1  042F               	iorwf	_TMR0_InterruptHandler+1,w
  4022  02A2  1903               	btfsc	3,2
  4023  02A3  2AA5               	goto	u68_21
  4024  02A4  2AA6               	goto	u68_20
  4025  02A5                     u68_21:
  4026  02A5  2AAB               	goto	i1l198
  4027  02A6                     u68_20:
  4028  02A6                     i1l1629:
  4029                           
  4030                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  4031  02A6  082F               	movf	_TMR0_InterruptHandler+1,w
  4032  02A7  008A               	movwf	10
  4033  02A8  082E               	movf	_TMR0_InterruptHandler,w
  4034  02A9  000A               	callw
  4035  02AA  3182               	pagesel	$
  4036  02AB                     i1l198:
  4037  02AB  0008               	return
  4038  02AC                     __end_of_TMR0_ISR:
  4039                           
  4040                           	psect	text32
  4041  0320                     __ptext32:	
  4042 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4043 ;; Defined at:
  4044 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;		None
  4047 ;; Auto vars:     Size  Location     Type
  4048 ;;		None
  4049 ;; Return value:  Size  Location     Type
  4050 ;;                  1    wreg      void 
  4051 ;; Registers used:
  4052 ;;		None
  4053 ;; Tracked objects:
  4054 ;;		On entry : 0/0
  4055 ;;		On exit  : 0/0
  4056 ;;		Unchanged: 0/0
  4057 ;; Data sizes:     COMMON   BANK0   BANK1
  4058 ;;      Params:         0       0       0
  4059 ;;      Locals:         0       0       0
  4060 ;;      Temps:          0       0       0
  4061 ;;      Totals:         0       0       0
  4062 ;;Total ram usage:        0 bytes
  4063 ;; Hardware stack levels used: 1
  4064 ;; This function calls:
  4065 ;;		Nothing
  4066 ;; This function is called by:
  4067 ;;		_TMR0_Initialize
  4068 ;;		_TMR0_ISR
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072  0320                     _TMR0_DefaultInterruptHandler:	
  4073                           ;psect for function _TMR0_DefaultInterruptHandler
  4074                           
  4075  0320                     i1l204:	
  4076                           ;incstack = 0
  4077                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  4078                           
  4079  0320  0008               	return
  4080  0321                     __end_of_TMR0_DefaultInterruptHandler:
  4081                           
  4082                           	psect	text33
  4083  027B                     __ptext33:	
  4084 ;; *************** function _switch_zum *****************
  4085 ;; Defined at:
  4086 ;;		line 58 in file "main.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;		None
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;		None
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  1    wreg      void 
  4093 ;; Registers used:
  4094 ;;		status,0
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMMON   BANK0   BANK1
  4100 ;;      Params:         0       0       0
  4101 ;;      Locals:         0       0       0
  4102 ;;      Temps:          0       0       0
  4103 ;;      Totals:         0       0       0
  4104 ;;Total ram usage:        0 bytes
  4105 ;; Hardware stack levels used: 1
  4106 ;; This function calls:
  4107 ;;		Nothing
  4108 ;; This function is called by:
  4109 ;;		_start_setup
  4110 ;;		_TMR0_ISR
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114  027B                     _switch_zum:	
  4115                           ;psect for function _switch_zum
  4116                           
  4117  027B                     i1l1599:	
  4118                           ;incstack = 0
  4119                           ; Regs used in _switch_zum: [status,0]
  4120                           
  4121                           
  4122                           ;main.c: 59:     if (FLAGS.bits.ALARM) do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0)
      +                          ;
  4123  027B  1C7D               	btfss	_FLAGS,0
  4124  027C  2A7E               	goto	u65_21
  4125  027D  2A7F               	goto	u65_20
  4126  027E                     u65_21:
  4127  027E  2A8B               	goto	i1l266
  4128  027F                     u65_20:
  4129  027F                     i1l1601:
  4130  027F  1003               	clrc
  4131  0280  0022               	movlb	2	; select bank2
  4132  0281  1E8C               	btfss	12,5	;volatile
  4133  0282  1403               	setc
  4134  0283  1803               	btfsc	3,0
  4135  0284  2A86               	goto	u66_21
  4136  0285  2A89               	goto	u66_20
  4137  0286                     u66_21:
  4138  0286  0022               	movlb	2	; select bank2
  4139  0287  168C               	bsf	12,5	;volatile
  4140  0288  2A8B               	goto	u67_24
  4141  0289                     u66_20:
  4142  0289  0022               	movlb	2	; select bank2
  4143  028A  128C               	bcf	12,5	;volatile
  4144  028B                     u67_24:
  4145  028B                     i1l266:
  4146  028B  0008               	return
  4147  028C                     __end_of_switch_zum:
  4148  007E                     btemp	set	126	;btemp
  4149  007E                     int$flags	set	126
  4150  007E                     wtemp0	set	126
  4151                           
  4152                           	psect	idloc
  4153                           
  4154                           ;Config register IDLOC0 @ 0x8000
  4155                           ;	unspecified, using default values
  4156  8000                     	org	32768
  4157  8000  3FFF               	dw	16383
  4158                           
  4159                           ;Config register IDLOC1 @ 0x8001
  4160                           ;	unspecified, using default values
  4161  8001                     	org	32769
  4162  8001  3FFF               	dw	16383
  4163                           
  4164                           ;Config register IDLOC2 @ 0x8002
  4165                           ;	unspecified, using default values
  4166  8002                     	org	32770
  4167  8002  3FFF               	dw	16383
  4168                           
  4169                           ;Config register IDLOC3 @ 0x8003
  4170                           ;	unspecified, using default values
  4171  8003                     	org	32771
  4172  8003  3FFF               	dw	16383
  4173                           
  4174                           	psect	config
  4175                           
  4176                           ;Config register CONFIG1 @ 0x8007
  4177                           ;	Oscillator Selection
  4178                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4179                           ;	Watchdog Timer Enable
  4180                           ;	WDTE = OFF, WDT disabled
  4181                           ;	Power-up Timer Enable
  4182                           ;	PWRTE = OFF, PWRT disabled
  4183                           ;	MCLR Pin Function Select
  4184                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4185                           ;	Flash Program Memory Code Protection
  4186                           ;	CP = OFF, Program memory code protection is disabled
  4187                           ;	Data Memory Code Protection
  4188                           ;	CPD = OFF, Data memory code protection is disabled
  4189                           ;	Brown-out Reset Enable
  4190                           ;	BOREN = ON, Brown-out Reset enabled
  4191                           ;	Clock Out Enable
  4192                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4193                           ;	Internal/External Switchover
  4194                           ;	IESO = ON, Internal/External Switchover mode is enabled
  4195                           ;	Fail-Safe Clock Monitor Enable
  4196                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4197  8007                     	org	32775
  4198  8007  3FE4               	dw	16356
  4199                           
  4200                           ;Config register CONFIG2 @ 0x8008
  4201                           ;	Flash Memory Self-Write Protection
  4202                           ;	WRT = OFF, Write protection off
  4203                           ;	PLL Enable
  4204                           ;	PLLEN = OFF, 4x PLL disabled
  4205                           ;	Stack Overflow/Underflow Reset Enable
  4206                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4207                           ;	Brown-out Reset Voltage Selection
  4208                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4209                           ;	Low-Voltage Programming Enable
  4210                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4211  8008                     	org	32776
  4212  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    12
    Data        0
    BSS         20
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      3      23
    BANK1            32      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> switch_zum(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> switch_zum(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Sec_tick_work(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Sec_tick_work(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR2_CallBack->_Sec_tick_work
    _Sec_tick_work->_get_fun
    _Sec_tick_work->_get_jump
    _Sec_tick_work->_get_measure
    _get_measure->_ADC_GetConversion
    _start_alarm->i1_go_close
    _get_jump->_ADC_GetConversion
    _get_fun->_ADC_GetConversion

Critical Paths under _main in BANK0

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _povorot->_go_close
    _povorot->_go_open
    _fun_work->_go_close
    _fun_work->_go_open

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     696
                           _fun_work
                            _povorot
                        _start_setup
                          _switch_wm
 ---------------------------------------------------------------------------------
 (1) _switch_wm                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_setup                                          0     0      0     696
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     348
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      1     1      0     174
                                              2 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _povorot                                              1     1      0       0
                                              1 BANK0      1     1      0
                           _go_close
                            _go_open
 ---------------------------------------------------------------------------------
 (1) _fun_work                                             0     0      0       0
                           _go_close
                            _go_open
 ---------------------------------------------------------------------------------
 (2) _go_open                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _go_close                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     223
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0     223
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR2_CallBack                                        0     0      0     223
                   Absolute function *
                      _Sec_tick_work *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Sec_tick_work                                        1     1      0     223
                                              7 COMMON     1     1      0
                            _get_fun
                           _get_jump
                        _get_measure
                          _rele_tick
                        _toggle_tone
 ---------------------------------------------------------------------------------
 (9) _toggle_tone                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _rele_tick                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _get_measure                                          3     3      0      89
                                              4 COMMON     3     3      0
                  _ADC_GetConversion
                        _start_alarm
 ---------------------------------------------------------------------------------
 (10) _start_alarm                                         0     0      0       0
                       _go_close_alt
                         i1_go_close
 ---------------------------------------------------------------------------------
 (11) i1_go_close                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _go_close_alt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _get_jump                                             3     3      0      67
                                              4 COMMON     3     3      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (9) _get_fun                                              3     3      0      67
                                              4 COMMON     3     3      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (10) _ADC_GetConversion                                   4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                         _switch_zum *
 ---------------------------------------------------------------------------------
 (7) _switch_zum                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _fun_work
     _go_close
     _go_open
   _povorot
     _go_close
     _go_open
   _start_setup
     _SYSTEM_Initialize
       _ADC_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR2_Initialize
         _TMR2_SetInterruptHandler
       _WDT_Initialize
     _TMR0_SetInterruptHandler
     _TMR2_SetInterruptHandler
     _TMR2_StartTimer
   _switch_wm

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _switch_zum *
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _Sec_tick_work *
         _get_fun
           _ADC_GetConversion
         _get_jump
           _ADC_GetConversion
         _get_measure
           _ADC_GetConversion
           _start_alarm
             _go_close_alt
             i1_go_close
         _rele_tick
         _toggle_tone
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      25       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      3      17       6       28.7%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      25       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Apr 26 17:56:16 2022

        __end_of_TMR2_SetInterruptHandler 0301                                        l23 0267  
                                      l26 02F4                                        l29 031B  
                                      l46 02ED                                        l90 0254  
                           ?_go_close_alt 0070                           _timer0ReloadVal 0033  
                                     l201 0306                                       l140 031E  
                                     l137 027A                                       l165 0300  
                                     l414 0164                                       l273 01A2  
                                     l281 02D6                                       l185 023F  
                                     l275 01A8                                       l283 02DD  
                                     l419 02AF                                       l276 01AF  
                                     l380 0214                                       l373 0195  
                                     l279 02D4                                       l383 02E4  
                                     l376 020C                                       l385 02E5  
                             _start_alarm 028C                                       _PR2 001B  
                                     u700 0176                                       u701 0175  
                                     u710 017A                                       u711 0179  
                                     u720 017E                                       u721 017D  
                                     u730 0202                                       u731 0201  
                                     u740 020A                                       u741 0208  
                                     u760 0210                                       u761 020F  
                                     u754 020B                                       u770 02E2  
                                     u771 02E1                                       u837 0185  
                                     u847 01A3                               _start_setup 012F  
                         _TMR2_Initialize 0268                                       wreg 0009  
                              i1_go_close 01CA                               get_jump@res 0075  
                                    l1521 0240                                      l1611 01AD  
                                    l1603 0196                                      l1531 0250  
                                    l1523 0243                                      l1427 02FB  
                                    l1613 01AE                                      l1605 019F  
                                    l1533 02EE                                      l1525 0246  
                                    l1429 0301                                      l1541 0268  
                                    l1701 0161                                      l1607 01A0  
                                    l1535 02F1                                      l1527 0248  
                                    l1551 0277                                      l1543 026B  
                                    l1703 0162                                      l1609 01A6  
                                    l1617 02D7                                      l1641 0176  
                                    l1537 02F2                                      l1529 024B  
                                    l1561 0238                                      l1553 022B  
                                    l1545 026C                                      l1721 02B5  
                                    l1619 02DC                                      l1651 01FE  
                                    l1643 017A                                      l1563 02E6  
                                    l1555 0230                                      l1547 026D  
                                    l1539 0318                                      l1653 0202  
                                    l1645 017E                                      l1565 02E9  
                                    l1557 0233                                      l1549 026F  
                                    l1661 02DE                                      l1655 0205  
                                    l1647 0181                                      l1639 0165  
                                    l1567 02EA                                      l1559 0237  
                                    l1591 0255                                      l1671 0144  
                                    l1663 02E2                                      l1719 02AC  
                                    l1657 0210                                      l1649 0189  
                                    l1593 031C                                      l1681 014F  
                                    l1673 0147                                      l1665 012F  
                                    l1691 0159                                      l1683 0151  
                                    l1675 0149                                      l1667 0132  
                                    l1693 015B                                      l1685 0153  
                                    l1677 014B                                      l1669 0133  
                                    l1695 015C                                      l1687 0155  
                                    l1679 014D                                      l1697 015E  
                                    l1689 0157                                      l1699 0160  
                                    _LATA 010C                                      _LATC 010E  
                                    i1l61 01F5                                      i1l64 01FD  
                                    _TMR0 0015                                      _TMR2 001A  
                                    _WPUA 020C                                      _WPUC 020E  
                                    _main 02AC                                      fsr0h 0005  
                                    indf0 0000                                      fsr0l 0004  
                                    btemp 007E                                      start 0026  
                          ??_go_close_alt 0070                   __end_of_TMR0_Initialize 0240  
          ??_TMR0_DefaultInterruptHandler 0070             __end_of_OSCILLATOR_Initialize 02F5  
                                   ?_main 0070                                     _FLAGS 007D  
                                   _T2CON 001C                                     i1l113 0024  
                                   i1l114 0024                                     i1l204 0320  
                                   i1l300 028D                                     i1l108 0012  
                                   i1l301 028F                                     i1l304 029B  
                                   i1l322 007A                                     i1l162 02C6  
                                   i1l307 00F8                                     i1l324 007C  
                                   i1l309 00FA                                     i1l158 022A  
                                   i1l335 00BA                                     i1l319 012E  
                                   i1l351 01BC                                     i1l168 031F  
                                   i1l273 01D6                                     i1l353 01C1  
                                   i1l266 028B                                     i1l338 00BB  
                                   i1l290 030B                                     i1l347 00F7  
                                   i1l275 01DC                                     i1l276 01E3  
                                   i1l357 01C9                                     i1l269 02D3  
                                   i1l198 02AB                                     i1l286 0308  
                                   i1l288 030A                                     i1l369 0079  
                                   u42_20 01F9                                     u50_20 00A8  
                                   u42_21 01F8                                     u50_21 00A7  
                                   u51_20 00B5                                     u43_20 0294  
                                   u51_21 00B4                                     u43_21 0293  
                                   u52_20 00D5                                     u44_20 02D1  
                                   u52_21 00D4                                     u44_21 02CE  
                                   u60_24 0055                                     u53_20 00E5  
                                   u61_20 006C                                     u53_21 00E4  
                                   u61_21 006B                                     u45_24 02D3  
                                   u54_20 00F2                                     u46_20 0116  
                                   u62_20 0076                                     u54_21 00F1  
                                   u46_21 0115                                     u62_21 0073  
                                   u47_20 0124                                     u55_20 01B4  
                                   u47_21 0123                                     u55_21 01B3  
                                   u63_24 0078                                     u48_20 012B  
                                   u56_20 01BA                                     u64_20 02C1  
                                   u80_20 0016                                     u48_21 012A  
                                   u56_21 01B9                                     u64_21 02C0  
                                   u80_21 0015                                     u65_20 027F  
                                   u49_20 0098                                     u57_20 01C1  
                                   u81_20 001B                                     u65_21 027E  
                                   u49_21 0097                                     u57_21 01C0  
                                   u81_21 001A                                     _TRISA 008C  
                                   _TRISC 008E                                     u66_20 0289  
                                   u58_20 0049                                     u82_20 0020  
                                   u66_21 0286                                     u58_21 0048  
                                   u82_21 001F                                     u59_20 0053  
                                   u59_21 0050                                     u67_24 028B  
                                   u68_20 02A6                                     u68_21 02A5  
                                   u69_20 0224                                     u69_21 0223  
                                   u85_27 01C4                                     u78_20 000A  
                                   u78_21 0009                                     u86_27 01D7  
                                   u79_20 000E                                     u79_21 000D  
               ?_TMR0_SetInterruptHandler 0034                          __end_of_TMR0_ISR 02AC  
                         __end_of_get_fun 00BB                          __end_of_TMR2_ISR 022B  
                         __end_of_go_open 02DE                            _WDT_Initialize 0318  
                                   pclath 000A                           __end_of_povorot 0196  
                                   status 0003                                     wtemp0 007E  
                         _TMR2_StartTimer 031C                           __initialization 0027  
                            __end_of_main 02BA                   __end_of_TMR2_Initialize 027B  
             ?_INTERRUPT_InterruptManager 0070                  _TMR2_SetInterruptHandler 02FB  
                                  ??_main 0037                    __end_of_WDT_Initialize 031C  
                             ?i1_go_close 0070                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _APFCON 011D  
                                  _ANSELA 018C                                    _ANSELC 018E  
                                  _BORCON 0116                                    i1l1401 01DA  
                                  i1l1411 01EF                                    i1l1403 01E1  
                                  i1l1413 01F0                                    i1l1501 00E9  
                                  i1l1405 01E2                                    i1l1421 028C  
                                  i1l1415 01F3                                    i1l1503 00EB  
                                  i1l1423 0294                                    i1l1511 01B0  
                                  i1l1431 02C7                                    i1l1601 027F  
                                  i1l1417 01F9                                    i1l1409 01E5  
                                  i1l1505 00F2                                    i1l1425 0298  
                                  i1l1441 010B                                    i1l1513 01B4  
                                  i1l1507 00F6                                    i1l1451 0125  
                                  i1l1443 010D                                    i1l1435 00FC  
                                  i1l1515 01BA                                    i1l1461 0088  
                                  i1l1453 012B                                    i1l1445 0116  
                                  i1l1437 0104                                    i1l1517 01C3  
                                  i1l1623 029C                                    i1l1471 00A1  
                                  i1l1463 008A                                    i1l1447 011B  
                                  i1l1439 0106                                    i1l1519 01C7  
                                  i1l1631 0215                                    i1l1711 0016  
                                  i1l1625 029D                                    i1l1481 00B9  
                                  i1l1473 00A8                                    i1l1465 008F  
                                  i1l1457 007E                                    i1l1393 0307  
                                  i1l1449 0124                                    i1l1633 0217  
                                  i1l1713 001B                                    i1l1705 0006  
                                  i1l1627 02A0                                    i1l1475 00AC  
                                  i1l1467 0098                                    i1l1459 0086  
                                  i1l1491 00CC                                    i1l1395 01CA  
                                  i1l1571 0041                                    i1l1635 0224  
                                  i1l1715 0020                                    i1l1707 000A  
                                  i1l1629 02A6                                    i1l1477 00AE  
                                  i1l1469 009D                                    i1l1493 00D5  
                                  i1l1485 00BD                                    i1l1397 01D3  
                                  i1l1581 0062                                    i1l1573 0045  
                                  i1l1637 0227                                    i1l1709 000E  
                                  i1l1479 00B5                                    i1l1495 00DA  
                                  i1l1487 00C5                                    i1l1399 01D4  
                                  i1l1583 0066                                    i1l1575 0049  
                                  i1l1497 00DE                                    i1l1489 00C7  
                                  i1l1585 006C                                    i1l1577 0055  
                                  i1l1569 0038                                    i1l1499 00E5  
                                  i1l1587 0078                                    i1l1579 0059  
                                  i1l1595 02BA                                    i1l1597 02C1  
                                  i1l1599 027B                          _GOOD_WSP_VOLTAGE 030C  
                                  _OSCCON 0099                                    _WDTCON 0097  
                        __end_of_get_jump 00F8                          __end_of_go_close 01B0  
                        ?_TMR0_Initialize 0070                          __end_of_fun_work 0215  
                                  _time_s 0020                                    _result 0028  
                               ??_get_fun 0074                                 ??_go_open 0034  
                         ?_WDT_Initialize 0070                            get_measure@res 0075  
                ADC_GetConversion@channel 0073                                 ??_povorot 0035  
                 __end_of_TMR2_StartTimer 031F  TMR0_SetInterruptHandler@InterruptHandler 0034  
TMR2_SetInterruptHandler@InterruptHandler 0034                      __end_of_go_close_alt 030C  
                       _SYSTEM_Initialize 0255                   __end_of__initialization 0035  
                   __end_of_TMR2_CallBack 02C7                        ?_SYSTEM_Initialize 0070  
                            ?_toggle_tone 0070                            __pcstackCOMMON 0070  
                     ??_SYSTEM_Initialize 0037                                 ?_TMR0_ISR 0070  
                               ?_TMR2_ISR 0070                     __end_of_ROTATION_TIME 0318  
                        ?_TMR2_Initialize 0070                              ?_start_alarm 0070  
                          _OPTION_REGbits 0095                              ?_start_setup 0070  
               __end_of_SYSTEM_Initialize 0268                                __pbssBANK0 0020  
                           _Sec_tick_work 0038                                __pmaintext 02AC  
        __end_of_TMR0_SetInterruptHandler 0307                                ??_TMR0_ISR 0070  
                              ??_TMR2_ISR 0078                                __pintentry 0004  
                       Sec_tick_work@iled 0078                                   _OSCTUNE 0098  
                        ?_TMR2_StartTimer 0070                                 ?_get_jump 0070  
                               ?_go_close 0070                            ?_Sec_tick_work 0070  
                               ?_fun_work 0070                      _ADC_InterruptHandler 002C  
              ??_TMR2_SetInterruptHandler 0036                  __end_of_GOOD_WSP_VOLTAGE 0310  
                                 __ptext1 02DE                                   __ptext2 012F  
                                 __ptext3 031C                                   __ptext4 0255  
                                 __ptext5 0318                                   __ptext6 0268  
                                 __ptext7 02FB                                   __ptext8 022B  
                                 __ptext9 0301                                   _get_fun 007A  
                                 _go_open 02D4                     _OSCILLATOR_Initialize 02EE  
                               _T2CONbits 001C                                   _fresult 0024  
                                 _jresult 0026                  ??_PIN_MANAGER_Initialize 0034  
                            ??i1_go_close 0070                                   _povorot 0165  
                                 clrloop0 02F6                                ??_get_jump 0074  
                              ??_go_close 0034                         __end_of_rele_tick 01CA  
                    end_of_initialization 0035                                ??_fun_work 0035  
                      __end_ofi1_go_close 01E4                              _go_close_alt 0307  
                        ??_WDT_Initialize 0034                  _TMR0_SetInterruptHandler 0301  
                       __end_of_switch_wm 02E6                                 _TRISAbits 008C  
                               _TRISCbits 008E                           ??_Sec_tick_work 0077  
                              get_fun@res 0075                             ??_get_measure 0074  
                              _switch_zum 027B      __end_of_TMR2_DefaultInterruptHandler 0320  
            _TMR2_DefaultInterruptHandler 031F                            _ADC_Initialize 02E6  
                  ?_OSCILLATOR_Initialize 0070                       start_initialization 0027  
                  __end_of_ADC_Initialize 02EE                       __end_of_get_measure 012F  
           ?_TMR2_DefaultInterruptHandler 0070                               __pbssCOMMON 0078  
                               ___latbits 0000                             __pcstackBANK0 0034  
                   _TMR0_InterruptHandler 002E                                 __pnvBANK0 002E  
                  _PIN_MANAGER_Initialize 0240                               ?_switch_zum 0070  
                         ?_ADC_Initialize 0070              ??_INTERRUPT_InterruptManager 0078  
                                ?_get_fun 0070                                  ?_go_open 0070  
                                ?_povorot 0070                         ??_TMR0_Initialize 0036  
                                _LATAbits 010C                                  _LATCbits 010E  
                               _rele_tick 01B0                                 clear_ram0 02F5  
                           _TMR2_CallBack 02BA                                  _PIE1bits 0091  
                             _get_measure 00F8                ??_TMR0_SetInterruptHandler 0036  
                                _PIR1bits 0011                                  _TMR0_ISR 029C  
                                _TMR2_ISR 0215                             _ROTATION_TIME 0314  
                              _ADCON0bits 009D                                  _WPUAbits 020C  
                                _WPUCbits 020E            ??_TMR2_DefaultInterruptHandler 0070  
               ?_TMR2_SetInterruptHandler 0034                                 _switch_wm 02DE  
                       ??_TMR2_Initialize 0036                            ?_TMR2_CallBack 0070  
                              ?_rele_tick 0070                             ??_toggle_tone 0070  
                       _ADC_GetConversion 01E4                   ??_OSCILLATOR_Initialize 0034  
                      ?_ADC_GetConversion 0070                             ??_start_alarm 0071  
                              _ANSELAbits 018C                                _ANSELCbits 018E  
                            _jump_counter 0079                               _fun_counter 007B  
                     ??_ADC_GetConversion 0072                             ??_start_setup 0037  
                              ?_switch_wm 0070                                  __ptext10 0240  
                                __ptext11 02EE                                  __ptext20 0038  
                                __ptext12 02E6                                  __ptext21 031F  
                                __ptext13 0165                                  __ptext30 01E4  
                                __ptext22 02C7                                  __ptext14 01FE  
                                __ptext31 029C                                  __ptext23 01B0  
                                __ptext15 02D4                                  __ptext32 0320  
                                __ptext24 00F8                                  __ptext16 0196  
                                __ptext33 027B                                  __ptext25 028C  
                                __ptext26 01CA                                  __ptext18 0215  
                                __ptext27 0307                                  __ptext19 02BA  
                                __ptext28 00BB                                  __ptext29 007A  
                                _get_jump 00BB                                  _go_close 0196  
                   __end_of_Sec_tick_work 007A                           _BAD_WSP_VOLTAGE 0310  
                                _measures 007A                                  _fun_work 01FE  
    __end_of_TMR0_DefaultInterruptHandler 0321              _TMR0_DefaultInterruptHandler 0320  
               __end_of_ADC_GetConversion 01FE                                  _time_con 007C  
                                _time_pow 0032                                  int$flags 007E  
                       ??_TMR2_StartTimer 0034                       __end_of_toggle_tone 02D4  
      __end_of_INTERRUPT_InterruptManager 0026                _INTERRUPT_InterruptManager 0004  
                              _INTCONbits 000B                       __end_of_start_alarm 029C  
                     __end_of_start_setup 0165                                  intlevel1 0000  
                         ??_TMR2_CallBack 0078                   ?_PIN_MANAGER_Initialize 0070  
                             ??_rele_tick 0070                          ??_ADC_Initialize 0034  
           ?_TMR0_DefaultInterruptHandler 0070                              ??_switch_zum 0070  
                           __pstringtext1 030C                             __pstringtext2 0310  
                           __pstringtext3 0314                                _OPTION_REG 0095  
                   TMR2_ISR@CountCallBack 002A                           _TMR0_Initialize 022B  
                 __end_of_BAD_WSP_VOLTAGE 0314                               ??_switch_wm 0034  
                      __end_of_switch_zum 028C            __end_of_PIN_MANAGER_Initialize 0255  
                   _TMR2_InterruptHandler 0030                               _toggle_tone 02C7  
                            ?_get_measure 0070  
