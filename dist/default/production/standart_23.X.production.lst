

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jun 21 13:49:43 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1823
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    22                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cinit,global,class=CODE,merge=1,delta=2
    24                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
    25                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    26                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
    27                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	clrtext,global,class=CODE,delta=2
    29                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    30                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    31                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2,codecov
    32                           	psect	text1,local,class=CODE,merge=1,delta=2,codecov
    33                           	psect	text2,local,class=CODE,merge=1,delta=2,codecov
    34                           	psect	text3,local,class=CODE,merge=1,delta=2,codecov
    35                           	psect	text4,local,class=CODE,merge=1,delta=2,codecov
    36                           	psect	text5,local,class=CODE,merge=1,delta=2,codecov
    37                           	psect	text6,local,class=CODE,merge=1,delta=2,codecov
    38                           	psect	text7,local,class=CODE,merge=1,delta=2,codecov
    39                           	psect	text8,local,class=CODE,merge=1,delta=2,codecov
    40                           	psect	text9,local,class=CODE,merge=1,delta=2,codecov
    41                           	psect	text10,local,class=CODE,merge=1,delta=2,codecov
    42                           	psect	text11,local,class=CODE,merge=1,delta=2,codecov
    43                           	psect	text12,local,class=CODE,merge=1,delta=2,codecov
    44                           	psect	text13,local,class=CODE,merge=1,delta=2,codecov
    45                           	psect	text14,local,class=CODE,merge=1,delta=2,codecov
    46                           	psect	text15,local,class=CODE,merge=1,delta=2,codecov
    47                           	psect	text16,local,class=CODE,merge=1,delta=2,codecov
    48                           	psect	text17,local,class=CODE,merge=1,delta=2,codecov
    49                           	psect	text18,local,class=CODE,merge=1,delta=2,codecov
    50                           	psect	text19,local,class=CODE,merge=1,delta=2,codecov
    51                           	psect	text20,local,class=CODE,merge=1,delta=2,codecov
    52                           	psect	text21,local,class=CODE,merge=1,delta=2,codecov
    53                           	psect	text22,local,class=CODE,merge=1,delta=2,codecov
    54                           	psect	text23,local,class=CODE,merge=1,delta=2,codecov
    55                           	psect	text24,local,class=CODE,merge=1,delta=2,codecov
    56                           	psect	text25,local,class=CODE,merge=1,delta=2,codecov
    57                           	psect	text26,local,class=CODE,merge=1,delta=2,codecov
    58                           	psect	text27,local,class=CODE,merge=1,delta=2,codecov
    59                           	psect	text28,local,class=CODE,merge=1,delta=2,codecov
    60                           	psect	text29,local,class=CODE,merge=1,delta=2,codecov
    61                           	psect	text30,local,class=CODE,merge=1,delta=2,codecov
    62                           	psect	text31,local,class=CODE,merge=1,delta=2,codecov
    63                           	psect	text32,local,class=CODE,merge=1,delta=2,codecov
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	text34,local,class=CODE,merge=1,delta=2,codecov
    66                           	psect	text35,local,class=CODE,merge=1,delta=2,codecov
    67                           	psect	text36,local,class=CODE,merge=1,delta=2,codecov
    68                           	psect	text37,local,class=CODE,merge=1,delta=2,codecov
    69                           	psect	text38,local,class=CODE,merge=1,delta=2,codecov
    70                           	psect	text39,local,class=CODE,merge=1,delta=2,codecov
    71                           	psect	text40,local,class=CODE,merge=1,delta=2,codecov
    72                           	psect	text41,local,class=CODE,merge=1,delta=2,codecov
    73                           	psect	text42,local,class=CODE,merge=1,delta=2,codecov
    74                           	psect	text43,local,class=CODE,merge=1,delta=2,codecov
    75                           	psect	text44,local,class=CODE,merge=1,delta=2,codecov
    76                           	psect	text45,local,class=CODE,merge=1,delta=2,codecov
    77                           	psect	text46,local,class=CODE,merge=1,delta=2,codecov
    78                           	psect	text47,local,class=CODE,merge=1,delta=2,codecov
    79                           	psect	text48,local,class=CODE,merge=1,delta=2,codecov
    80                           	psect	text49,local,class=CODE,merge=1,delta=2,codecov
    81                           	psect	text50,local,class=CODE,merge=1,delta=2,codecov
    82                           	psect	codecov_info_hdr,global,note,abs,reloc=1,space=6,split=0,delta=1,noexec
    83                           	psect	codecov_info,global,note,abs,reloc=1,space=6,split=0,delta=1,noexec
    84                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    85                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    86                           	dabs	1,0x7E,2
    87  0000                     
    88                           ; Version 2.40
    89                           ; Generated 17/11/2021 GMT
    90                           ; 
    91                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution. Publication is not required when
   105                           ;        this file is used in an embedded application.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC16F1823 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000E                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001C                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  008C                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0095                     	;# 
   155  0096                     	;# 
   156  0097                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009A                     	;# 
   160  009B                     	;# 
   161  009B                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  010C                     	;# 
   166  010E                     	;# 
   167  0111                     	;# 
   168  0112                     	;# 
   169  0113                     	;# 
   170  0114                     	;# 
   171  0115                     	;# 
   172  0116                     	;# 
   173  0117                     	;# 
   174  0118                     	;# 
   175  0119                     	;# 
   176  011A                     	;# 
   177  011B                     	;# 
   178  011D                     	;# 
   179  011D                     	;# 
   180  018C                     	;# 
   181  018E                     	;# 
   182  0191                     	;# 
   183  0191                     	;# 
   184  0192                     	;# 
   185  0193                     	;# 
   186  0193                     	;# 
   187  0193                     	;# 
   188  0194                     	;# 
   189  0195                     	;# 
   190  0196                     	;# 
   191  0199                     	;# 
   192  019A                     	;# 
   193  019B                     	;# 
   194  019B                     	;# 
   195  019B                     	;# 
   196  019B                     	;# 
   197  019C                     	;# 
   198  019C                     	;# 
   199  019D                     	;# 
   200  019E                     	;# 
   201  019F                     	;# 
   202  020C                     	;# 
   203  020E                     	;# 
   204  0211                     	;# 
   205  0211                     	;# 
   206  0212                     	;# 
   207  0212                     	;# 
   208  0213                     	;# 
   209  0213                     	;# 
   210  0214                     	;# 
   211  0214                     	;# 
   212  0215                     	;# 
   213  0215                     	;# 
   214  0215                     	;# 
   215  0216                     	;# 
   216  0216                     	;# 
   217  0217                     	;# 
   218  0217                     	;# 
   219  0291                     	;# 
   220  0291                     	;# 
   221  0292                     	;# 
   222  0293                     	;# 
   223  0294                     	;# 
   224  0295                     	;# 
   225  0295                     	;# 
   226  0296                     	;# 
   227  0391                     	;# 
   228  0392                     	;# 
   229  0393                     	;# 
   230  039A                     	;# 
   231  039C                     	;# 
   232  039D                     	;# 
   233  039E                     	;# 
   234  039F                     	;# 
   235  0FE4                     	;# 
   236  0FE5                     	;# 
   237  0FE6                     	;# 
   238  0FE7                     	;# 
   239  0FE8                     	;# 
   240  0FE9                     	;# 
   241  0FEA                     	;# 
   242  0FEB                     	;# 
   243  0FED                     	;# 
   244  0FEE                     	;# 
   245  0FEF                     	;# 
   246  0000                     	;# 
   247  0001                     	;# 
   248  0002                     	;# 
   249  0003                     	;# 
   250  0004                     	;# 
   251  0005                     	;# 
   252  0006                     	;# 
   253  0007                     	;# 
   254  0008                     	;# 
   255  0009                     	;# 
   256  000A                     	;# 
   257  000B                     	;# 
   258  000C                     	;# 
   259  000E                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0016                     	;# 
   265  0017                     	;# 
   266  0018                     	;# 
   267  0019                     	;# 
   268  001A                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001E                     	;# 
   272  001F                     	;# 
   273  008C                     	;# 
   274  008E                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  010C                     	;# 
   289  010E                     	;# 
   290  0111                     	;# 
   291  0112                     	;# 
   292  0113                     	;# 
   293  0114                     	;# 
   294  0115                     	;# 
   295  0116                     	;# 
   296  0117                     	;# 
   297  0118                     	;# 
   298  0119                     	;# 
   299  011A                     	;# 
   300  011B                     	;# 
   301  011D                     	;# 
   302  011D                     	;# 
   303  018C                     	;# 
   304  018E                     	;# 
   305  0191                     	;# 
   306  0191                     	;# 
   307  0192                     	;# 
   308  0193                     	;# 
   309  0193                     	;# 
   310  0193                     	;# 
   311  0194                     	;# 
   312  0195                     	;# 
   313  0196                     	;# 
   314  0199                     	;# 
   315  019A                     	;# 
   316  019B                     	;# 
   317  019B                     	;# 
   318  019B                     	;# 
   319  019B                     	;# 
   320  019C                     	;# 
   321  019C                     	;# 
   322  019D                     	;# 
   323  019E                     	;# 
   324  019F                     	;# 
   325  020C                     	;# 
   326  020E                     	;# 
   327  0211                     	;# 
   328  0211                     	;# 
   329  0212                     	;# 
   330  0212                     	;# 
   331  0213                     	;# 
   332  0213                     	;# 
   333  0214                     	;# 
   334  0214                     	;# 
   335  0215                     	;# 
   336  0215                     	;# 
   337  0215                     	;# 
   338  0216                     	;# 
   339  0216                     	;# 
   340  0217                     	;# 
   341  0217                     	;# 
   342  0291                     	;# 
   343  0291                     	;# 
   344  0292                     	;# 
   345  0293                     	;# 
   346  0294                     	;# 
   347  0295                     	;# 
   348  0295                     	;# 
   349  0296                     	;# 
   350  0391                     	;# 
   351  0392                     	;# 
   352  0393                     	;# 
   353  039A                     	;# 
   354  039C                     	;# 
   355  039D                     	;# 
   356  039E                     	;# 
   357  039F                     	;# 
   358  0FE4                     	;# 
   359  0FE5                     	;# 
   360  0FE6                     	;# 
   361  0FE7                     	;# 
   362  0FE8                     	;# 
   363  0FE9                     	;# 
   364  0FEA                     	;# 
   365  0FEB                     	;# 
   366  0FED                     	;# 
   367  0FEE                     	;# 
   368  0FEF                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0008                     	;# 
   378  0009                     	;# 
   379  000A                     	;# 
   380  000B                     	;# 
   381  000C                     	;# 
   382  000E                     	;# 
   383  0011                     	;# 
   384  0012                     	;# 
   385  0015                     	;# 
   386  0016                     	;# 
   387  0016                     	;# 
   388  0017                     	;# 
   389  0018                     	;# 
   390  0019                     	;# 
   391  001A                     	;# 
   392  001B                     	;# 
   393  001C                     	;# 
   394  001E                     	;# 
   395  001F                     	;# 
   396  008C                     	;# 
   397  008E                     	;# 
   398  0091                     	;# 
   399  0092                     	;# 
   400  0095                     	;# 
   401  0096                     	;# 
   402  0097                     	;# 
   403  0098                     	;# 
   404  0099                     	;# 
   405  009A                     	;# 
   406  009B                     	;# 
   407  009B                     	;# 
   408  009C                     	;# 
   409  009D                     	;# 
   410  009E                     	;# 
   411  010C                     	;# 
   412  010E                     	;# 
   413  0111                     	;# 
   414  0112                     	;# 
   415  0113                     	;# 
   416  0114                     	;# 
   417  0115                     	;# 
   418  0116                     	;# 
   419  0117                     	;# 
   420  0118                     	;# 
   421  0119                     	;# 
   422  011A                     	;# 
   423  011B                     	;# 
   424  011D                     	;# 
   425  011D                     	;# 
   426  018C                     	;# 
   427  018E                     	;# 
   428  0191                     	;# 
   429  0191                     	;# 
   430  0192                     	;# 
   431  0193                     	;# 
   432  0193                     	;# 
   433  0193                     	;# 
   434  0194                     	;# 
   435  0195                     	;# 
   436  0196                     	;# 
   437  0199                     	;# 
   438  019A                     	;# 
   439  019B                     	;# 
   440  019B                     	;# 
   441  019B                     	;# 
   442  019B                     	;# 
   443  019C                     	;# 
   444  019C                     	;# 
   445  019D                     	;# 
   446  019E                     	;# 
   447  019F                     	;# 
   448  020C                     	;# 
   449  020E                     	;# 
   450  0211                     	;# 
   451  0211                     	;# 
   452  0212                     	;# 
   453  0212                     	;# 
   454  0213                     	;# 
   455  0213                     	;# 
   456  0214                     	;# 
   457  0214                     	;# 
   458  0215                     	;# 
   459  0215                     	;# 
   460  0215                     	;# 
   461  0216                     	;# 
   462  0216                     	;# 
   463  0217                     	;# 
   464  0217                     	;# 
   465  0291                     	;# 
   466  0291                     	;# 
   467  0292                     	;# 
   468  0293                     	;# 
   469  0294                     	;# 
   470  0295                     	;# 
   471  0295                     	;# 
   472  0296                     	;# 
   473  0391                     	;# 
   474  0392                     	;# 
   475  0393                     	;# 
   476  039A                     	;# 
   477  039C                     	;# 
   478  039D                     	;# 
   479  039E                     	;# 
   480  039F                     	;# 
   481  0FE4                     	;# 
   482  0FE5                     	;# 
   483  0FE6                     	;# 
   484  0FE7                     	;# 
   485  0FE8                     	;# 
   486  0FE9                     	;# 
   487  0FEA                     	;# 
   488  0FEB                     	;# 
   489  0FED                     	;# 
   490  0FEE                     	;# 
   491  0FEF                     	;# 
   492  0000                     	;# 
   493  0001                     	;# 
   494  0002                     	;# 
   495  0003                     	;# 
   496  0004                     	;# 
   497  0005                     	;# 
   498  0006                     	;# 
   499  0007                     	;# 
   500  0008                     	;# 
   501  0009                     	;# 
   502  000A                     	;# 
   503  000B                     	;# 
   504  000C                     	;# 
   505  000E                     	;# 
   506  0011                     	;# 
   507  0012                     	;# 
   508  0015                     	;# 
   509  0016                     	;# 
   510  0016                     	;# 
   511  0017                     	;# 
   512  0018                     	;# 
   513  0019                     	;# 
   514  001A                     	;# 
   515  001B                     	;# 
   516  001C                     	;# 
   517  001E                     	;# 
   518  001F                     	;# 
   519  008C                     	;# 
   520  008E                     	;# 
   521  0091                     	;# 
   522  0092                     	;# 
   523  0095                     	;# 
   524  0096                     	;# 
   525  0097                     	;# 
   526  0098                     	;# 
   527  0099                     	;# 
   528  009A                     	;# 
   529  009B                     	;# 
   530  009B                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  010C                     	;# 
   535  010E                     	;# 
   536  0111                     	;# 
   537  0112                     	;# 
   538  0113                     	;# 
   539  0114                     	;# 
   540  0115                     	;# 
   541  0116                     	;# 
   542  0117                     	;# 
   543  0118                     	;# 
   544  0119                     	;# 
   545  011A                     	;# 
   546  011B                     	;# 
   547  011D                     	;# 
   548  011D                     	;# 
   549  018C                     	;# 
   550  018E                     	;# 
   551  0191                     	;# 
   552  0191                     	;# 
   553  0192                     	;# 
   554  0193                     	;# 
   555  0193                     	;# 
   556  0193                     	;# 
   557  0194                     	;# 
   558  0195                     	;# 
   559  0196                     	;# 
   560  0199                     	;# 
   561  019A                     	;# 
   562  019B                     	;# 
   563  019B                     	;# 
   564  019B                     	;# 
   565  019B                     	;# 
   566  019C                     	;# 
   567  019C                     	;# 
   568  019D                     	;# 
   569  019E                     	;# 
   570  019F                     	;# 
   571  020C                     	;# 
   572  020E                     	;# 
   573  0211                     	;# 
   574  0211                     	;# 
   575  0212                     	;# 
   576  0212                     	;# 
   577  0213                     	;# 
   578  0213                     	;# 
   579  0214                     	;# 
   580  0214                     	;# 
   581  0215                     	;# 
   582  0215                     	;# 
   583  0215                     	;# 
   584  0216                     	;# 
   585  0216                     	;# 
   586  0217                     	;# 
   587  0217                     	;# 
   588  0291                     	;# 
   589  0291                     	;# 
   590  0292                     	;# 
   591  0293                     	;# 
   592  0294                     	;# 
   593  0295                     	;# 
   594  0295                     	;# 
   595  0296                     	;# 
   596  0391                     	;# 
   597  0392                     	;# 
   598  0393                     	;# 
   599  039A                     	;# 
   600  039C                     	;# 
   601  039D                     	;# 
   602  039E                     	;# 
   603  039F                     	;# 
   604  0FE4                     	;# 
   605  0FE5                     	;# 
   606  0FE6                     	;# 
   607  0FE7                     	;# 
   608  0FE8                     	;# 
   609  0FE9                     	;# 
   610  0FEA                     	;# 
   611  0FEB                     	;# 
   612  0FED                     	;# 
   613  0FEE                     	;# 
   614  0FEF                     	;# 
   615  0000                     	;# 
   616  0001                     	;# 
   617  0002                     	;# 
   618  0003                     	;# 
   619  0004                     	;# 
   620  0005                     	;# 
   621  0006                     	;# 
   622  0007                     	;# 
   623  0008                     	;# 
   624  0009                     	;# 
   625  000A                     	;# 
   626  000B                     	;# 
   627  000C                     	;# 
   628  000E                     	;# 
   629  0011                     	;# 
   630  0012                     	;# 
   631  0015                     	;# 
   632  0016                     	;# 
   633  0016                     	;# 
   634  0017                     	;# 
   635  0018                     	;# 
   636  0019                     	;# 
   637  001A                     	;# 
   638  001B                     	;# 
   639  001C                     	;# 
   640  001E                     	;# 
   641  001F                     	;# 
   642  008C                     	;# 
   643  008E                     	;# 
   644  0091                     	;# 
   645  0092                     	;# 
   646  0095                     	;# 
   647  0096                     	;# 
   648  0097                     	;# 
   649  0098                     	;# 
   650  0099                     	;# 
   651  009A                     	;# 
   652  009B                     	;# 
   653  009B                     	;# 
   654  009C                     	;# 
   655  009D                     	;# 
   656  009E                     	;# 
   657  010C                     	;# 
   658  010E                     	;# 
   659  0111                     	;# 
   660  0112                     	;# 
   661  0113                     	;# 
   662  0114                     	;# 
   663  0115                     	;# 
   664  0116                     	;# 
   665  0117                     	;# 
   666  0118                     	;# 
   667  0119                     	;# 
   668  011A                     	;# 
   669  011B                     	;# 
   670  011D                     	;# 
   671  011D                     	;# 
   672  018C                     	;# 
   673  018E                     	;# 
   674  0191                     	;# 
   675  0191                     	;# 
   676  0192                     	;# 
   677  0193                     	;# 
   678  0193                     	;# 
   679  0193                     	;# 
   680  0194                     	;# 
   681  0195                     	;# 
   682  0196                     	;# 
   683  0199                     	;# 
   684  019A                     	;# 
   685  019B                     	;# 
   686  019B                     	;# 
   687  019B                     	;# 
   688  019B                     	;# 
   689  019C                     	;# 
   690  019C                     	;# 
   691  019D                     	;# 
   692  019E                     	;# 
   693  019F                     	;# 
   694  020C                     	;# 
   695  020E                     	;# 
   696  0211                     	;# 
   697  0211                     	;# 
   698  0212                     	;# 
   699  0212                     	;# 
   700  0213                     	;# 
   701  0213                     	;# 
   702  0214                     	;# 
   703  0214                     	;# 
   704  0215                     	;# 
   705  0215                     	;# 
   706  0215                     	;# 
   707  0216                     	;# 
   708  0216                     	;# 
   709  0217                     	;# 
   710  0217                     	;# 
   711  0291                     	;# 
   712  0291                     	;# 
   713  0292                     	;# 
   714  0293                     	;# 
   715  0294                     	;# 
   716  0295                     	;# 
   717  0295                     	;# 
   718  0296                     	;# 
   719  0391                     	;# 
   720  0392                     	;# 
   721  0393                     	;# 
   722  039A                     	;# 
   723  039C                     	;# 
   724  039D                     	;# 
   725  039E                     	;# 
   726  039F                     	;# 
   727  0FE4                     	;# 
   728  0FE5                     	;# 
   729  0FE6                     	;# 
   730  0FE7                     	;# 
   731  0FE8                     	;# 
   732  0FE9                     	;# 
   733  0FEA                     	;# 
   734  0FEB                     	;# 
   735  0FED                     	;# 
   736  0FEE                     	;# 
   737  0FEF                     	;# 
   738  0000                     	;# 
   739  0001                     	;# 
   740  0002                     	;# 
   741  0003                     	;# 
   742  0004                     	;# 
   743  0005                     	;# 
   744  0006                     	;# 
   745  0007                     	;# 
   746  0008                     	;# 
   747  0009                     	;# 
   748  000A                     	;# 
   749  000B                     	;# 
   750  000C                     	;# 
   751  000E                     	;# 
   752  0011                     	;# 
   753  0012                     	;# 
   754  0015                     	;# 
   755  0016                     	;# 
   756  0016                     	;# 
   757  0017                     	;# 
   758  0018                     	;# 
   759  0019                     	;# 
   760  001A                     	;# 
   761  001B                     	;# 
   762  001C                     	;# 
   763  001E                     	;# 
   764  001F                     	;# 
   765  008C                     	;# 
   766  008E                     	;# 
   767  0091                     	;# 
   768  0092                     	;# 
   769  0095                     	;# 
   770  0096                     	;# 
   771  0097                     	;# 
   772  0098                     	;# 
   773  0099                     	;# 
   774  009A                     	;# 
   775  009B                     	;# 
   776  009B                     	;# 
   777  009C                     	;# 
   778  009D                     	;# 
   779  009E                     	;# 
   780  010C                     	;# 
   781  010E                     	;# 
   782  0111                     	;# 
   783  0112                     	;# 
   784  0113                     	;# 
   785  0114                     	;# 
   786  0115                     	;# 
   787  0116                     	;# 
   788  0117                     	;# 
   789  0118                     	;# 
   790  0119                     	;# 
   791  011A                     	;# 
   792  011B                     	;# 
   793  011D                     	;# 
   794  011D                     	;# 
   795  018C                     	;# 
   796  018E                     	;# 
   797  0191                     	;# 
   798  0191                     	;# 
   799  0192                     	;# 
   800  0193                     	;# 
   801  0193                     	;# 
   802  0193                     	;# 
   803  0194                     	;# 
   804  0195                     	;# 
   805  0196                     	;# 
   806  0199                     	;# 
   807  019A                     	;# 
   808  019B                     	;# 
   809  019B                     	;# 
   810  019B                     	;# 
   811  019B                     	;# 
   812  019C                     	;# 
   813  019C                     	;# 
   814  019D                     	;# 
   815  019E                     	;# 
   816  019F                     	;# 
   817  020C                     	;# 
   818  020E                     	;# 
   819  0211                     	;# 
   820  0211                     	;# 
   821  0212                     	;# 
   822  0212                     	;# 
   823  0213                     	;# 
   824  0213                     	;# 
   825  0214                     	;# 
   826  0214                     	;# 
   827  0215                     	;# 
   828  0215                     	;# 
   829  0215                     	;# 
   830  0216                     	;# 
   831  0216                     	;# 
   832  0217                     	;# 
   833  0217                     	;# 
   834  0291                     	;# 
   835  0291                     	;# 
   836  0292                     	;# 
   837  0293                     	;# 
   838  0294                     	;# 
   839  0295                     	;# 
   840  0295                     	;# 
   841  0296                     	;# 
   842  0391                     	;# 
   843  0392                     	;# 
   844  0393                     	;# 
   845  039A                     	;# 
   846  039C                     	;# 
   847  039D                     	;# 
   848  039E                     	;# 
   849  039F                     	;# 
   850  0FE4                     	;# 
   851  0FE5                     	;# 
   852  0FE6                     	;# 
   853  0FE7                     	;# 
   854  0FE8                     	;# 
   855  0FE9                     	;# 
   856  0FEA                     	;# 
   857  0FEB                     	;# 
   858  0FED                     	;# 
   859  0FEE                     	;# 
   860  0FEF                     	;# 
   861  0000                     	;# 
   862  0001                     	;# 
   863  0002                     	;# 
   864  0003                     	;# 
   865  0004                     	;# 
   866  0005                     	;# 
   867  0006                     	;# 
   868  0007                     	;# 
   869  0008                     	;# 
   870  0009                     	;# 
   871  000A                     	;# 
   872  000B                     	;# 
   873  000C                     	;# 
   874  000E                     	;# 
   875  0011                     	;# 
   876  0012                     	;# 
   877  0015                     	;# 
   878  0016                     	;# 
   879  0016                     	;# 
   880  0017                     	;# 
   881  0018                     	;# 
   882  0019                     	;# 
   883  001A                     	;# 
   884  001B                     	;# 
   885  001C                     	;# 
   886  001E                     	;# 
   887  001F                     	;# 
   888  008C                     	;# 
   889  008E                     	;# 
   890  0091                     	;# 
   891  0092                     	;# 
   892  0095                     	;# 
   893  0096                     	;# 
   894  0097                     	;# 
   895  0098                     	;# 
   896  0099                     	;# 
   897  009A                     	;# 
   898  009B                     	;# 
   899  009B                     	;# 
   900  009C                     	;# 
   901  009D                     	;# 
   902  009E                     	;# 
   903  010C                     	;# 
   904  010E                     	;# 
   905  0111                     	;# 
   906  0112                     	;# 
   907  0113                     	;# 
   908  0114                     	;# 
   909  0115                     	;# 
   910  0116                     	;# 
   911  0117                     	;# 
   912  0118                     	;# 
   913  0119                     	;# 
   914  011A                     	;# 
   915  011B                     	;# 
   916  011D                     	;# 
   917  011D                     	;# 
   918  018C                     	;# 
   919  018E                     	;# 
   920  0191                     	;# 
   921  0191                     	;# 
   922  0192                     	;# 
   923  0193                     	;# 
   924  0193                     	;# 
   925  0193                     	;# 
   926  0194                     	;# 
   927  0195                     	;# 
   928  0196                     	;# 
   929  0199                     	;# 
   930  019A                     	;# 
   931  019B                     	;# 
   932  019B                     	;# 
   933  019B                     	;# 
   934  019B                     	;# 
   935  019C                     	;# 
   936  019C                     	;# 
   937  019D                     	;# 
   938  019E                     	;# 
   939  019F                     	;# 
   940  020C                     	;# 
   941  020E                     	;# 
   942  0211                     	;# 
   943  0211                     	;# 
   944  0212                     	;# 
   945  0212                     	;# 
   946  0213                     	;# 
   947  0213                     	;# 
   948  0214                     	;# 
   949  0214                     	;# 
   950  0215                     	;# 
   951  0215                     	;# 
   952  0215                     	;# 
   953  0216                     	;# 
   954  0216                     	;# 
   955  0217                     	;# 
   956  0217                     	;# 
   957  0291                     	;# 
   958  0291                     	;# 
   959  0292                     	;# 
   960  0293                     	;# 
   961  0294                     	;# 
   962  0295                     	;# 
   963  0295                     	;# 
   964  0296                     	;# 
   965  0391                     	;# 
   966  0392                     	;# 
   967  0393                     	;# 
   968  039A                     	;# 
   969  039C                     	;# 
   970  039D                     	;# 
   971  039E                     	;# 
   972  039F                     	;# 
   973  0FE4                     	;# 
   974  0FE5                     	;# 
   975  0FE6                     	;# 
   976  0FE7                     	;# 
   977  0FE8                     	;# 
   978  0FE9                     	;# 
   979  0FEA                     	;# 
   980  0FEB                     	;# 
   981  0FED                     	;# 
   982  0FEE                     	;# 
   983  0FEF                     	;# 
   984  0000                     	;# 
   985  0001                     	;# 
   986  0002                     	;# 
   987  0003                     	;# 
   988  0004                     	;# 
   989  0005                     	;# 
   990  0006                     	;# 
   991  0007                     	;# 
   992  0008                     	;# 
   993  0009                     	;# 
   994  000A                     	;# 
   995  000B                     	;# 
   996  000C                     	;# 
   997  000E                     	;# 
   998  0011                     	;# 
   999  0012                     	;# 
  1000  0015                     	;# 
  1001  0016                     	;# 
  1002  0016                     	;# 
  1003  0017                     	;# 
  1004  0018                     	;# 
  1005  0019                     	;# 
  1006  001A                     	;# 
  1007  001B                     	;# 
  1008  001C                     	;# 
  1009  001E                     	;# 
  1010  001F                     	;# 
  1011  008C                     	;# 
  1012  008E                     	;# 
  1013  0091                     	;# 
  1014  0092                     	;# 
  1015  0095                     	;# 
  1016  0096                     	;# 
  1017  0097                     	;# 
  1018  0098                     	;# 
  1019  0099                     	;# 
  1020  009A                     	;# 
  1021  009B                     	;# 
  1022  009B                     	;# 
  1023  009C                     	;# 
  1024  009D                     	;# 
  1025  009E                     	;# 
  1026  010C                     	;# 
  1027  010E                     	;# 
  1028  0111                     	;# 
  1029  0112                     	;# 
  1030  0113                     	;# 
  1031  0114                     	;# 
  1032  0115                     	;# 
  1033  0116                     	;# 
  1034  0117                     	;# 
  1035  0118                     	;# 
  1036  0119                     	;# 
  1037  011A                     	;# 
  1038  011B                     	;# 
  1039  011D                     	;# 
  1040  011D                     	;# 
  1041  018C                     	;# 
  1042  018E                     	;# 
  1043  0191                     	;# 
  1044  0191                     	;# 
  1045  0192                     	;# 
  1046  0193                     	;# 
  1047  0193                     	;# 
  1048  0193                     	;# 
  1049  0194                     	;# 
  1050  0195                     	;# 
  1051  0196                     	;# 
  1052  0199                     	;# 
  1053  019A                     	;# 
  1054  019B                     	;# 
  1055  019B                     	;# 
  1056  019B                     	;# 
  1057  019B                     	;# 
  1058  019C                     	;# 
  1059  019C                     	;# 
  1060  019D                     	;# 
  1061  019E                     	;# 
  1062  019F                     	;# 
  1063  020C                     	;# 
  1064  020E                     	;# 
  1065  0211                     	;# 
  1066  0211                     	;# 
  1067  0212                     	;# 
  1068  0212                     	;# 
  1069  0213                     	;# 
  1070  0213                     	;# 
  1071  0214                     	;# 
  1072  0214                     	;# 
  1073  0215                     	;# 
  1074  0215                     	;# 
  1075  0215                     	;# 
  1076  0216                     	;# 
  1077  0216                     	;# 
  1078  0217                     	;# 
  1079  0217                     	;# 
  1080  0291                     	;# 
  1081  0291                     	;# 
  1082  0292                     	;# 
  1083  0293                     	;# 
  1084  0294                     	;# 
  1085  0295                     	;# 
  1086  0295                     	;# 
  1087  0296                     	;# 
  1088  0391                     	;# 
  1089  0392                     	;# 
  1090  0393                     	;# 
  1091  039A                     	;# 
  1092  039C                     	;# 
  1093  039D                     	;# 
  1094  039E                     	;# 
  1095  039F                     	;# 
  1096  0FE4                     	;# 
  1097  0FE5                     	;# 
  1098  0FE6                     	;# 
  1099  0FE7                     	;# 
  1100  0FE8                     	;# 
  1101  0FE9                     	;# 
  1102  0FEA                     	;# 
  1103  0FEB                     	;# 
  1104  0FED                     	;# 
  1105  0FEE                     	;# 
  1106  0FEF                     	;# 
  1107  0000                     	;# 
  1108  0001                     	;# 
  1109  0002                     	;# 
  1110  0003                     	;# 
  1111  0004                     	;# 
  1112  0005                     	;# 
  1113  0006                     	;# 
  1114  0007                     	;# 
  1115  0008                     	;# 
  1116  0009                     	;# 
  1117  000A                     	;# 
  1118  000B                     	;# 
  1119  000C                     	;# 
  1120  000E                     	;# 
  1121  0011                     	;# 
  1122  0012                     	;# 
  1123  0015                     	;# 
  1124  0016                     	;# 
  1125  0016                     	;# 
  1126  0017                     	;# 
  1127  0018                     	;# 
  1128  0019                     	;# 
  1129  001A                     	;# 
  1130  001B                     	;# 
  1131  001C                     	;# 
  1132  001E                     	;# 
  1133  001F                     	;# 
  1134  008C                     	;# 
  1135  008E                     	;# 
  1136  0091                     	;# 
  1137  0092                     	;# 
  1138  0095                     	;# 
  1139  0096                     	;# 
  1140  0097                     	;# 
  1141  0098                     	;# 
  1142  0099                     	;# 
  1143  009A                     	;# 
  1144  009B                     	;# 
  1145  009B                     	;# 
  1146  009C                     	;# 
  1147  009D                     	;# 
  1148  009E                     	;# 
  1149  010C                     	;# 
  1150  010E                     	;# 
  1151  0111                     	;# 
  1152  0112                     	;# 
  1153  0113                     	;# 
  1154  0114                     	;# 
  1155  0115                     	;# 
  1156  0116                     	;# 
  1157  0117                     	;# 
  1158  0118                     	;# 
  1159  0119                     	;# 
  1160  011A                     	;# 
  1161  011B                     	;# 
  1162  011D                     	;# 
  1163  011D                     	;# 
  1164  018C                     	;# 
  1165  018E                     	;# 
  1166  0191                     	;# 
  1167  0191                     	;# 
  1168  0192                     	;# 
  1169  0193                     	;# 
  1170  0193                     	;# 
  1171  0193                     	;# 
  1172  0194                     	;# 
  1173  0195                     	;# 
  1174  0196                     	;# 
  1175  0199                     	;# 
  1176  019A                     	;# 
  1177  019B                     	;# 
  1178  019B                     	;# 
  1179  019B                     	;# 
  1180  019B                     	;# 
  1181  019C                     	;# 
  1182  019C                     	;# 
  1183  019D                     	;# 
  1184  019E                     	;# 
  1185  019F                     	;# 
  1186  020C                     	;# 
  1187  020E                     	;# 
  1188  0211                     	;# 
  1189  0211                     	;# 
  1190  0212                     	;# 
  1191  0212                     	;# 
  1192  0213                     	;# 
  1193  0213                     	;# 
  1194  0214                     	;# 
  1195  0214                     	;# 
  1196  0215                     	;# 
  1197  0215                     	;# 
  1198  0215                     	;# 
  1199  0216                     	;# 
  1200  0216                     	;# 
  1201  0217                     	;# 
  1202  0217                     	;# 
  1203  0291                     	;# 
  1204  0291                     	;# 
  1205  0292                     	;# 
  1206  0293                     	;# 
  1207  0294                     	;# 
  1208  0295                     	;# 
  1209  0295                     	;# 
  1210  0296                     	;# 
  1211  0391                     	;# 
  1212  0392                     	;# 
  1213  0393                     	;# 
  1214  039A                     	;# 
  1215  039C                     	;# 
  1216  039D                     	;# 
  1217  039E                     	;# 
  1218  039F                     	;# 
  1219  0FE4                     	;# 
  1220  0FE5                     	;# 
  1221  0FE6                     	;# 
  1222  0FE7                     	;# 
  1223  0FE8                     	;# 
  1224  0FE9                     	;# 
  1225  0FEA                     	;# 
  1226  0FEB                     	;# 
  1227  0FED                     	;# 
  1228  0FEE                     	;# 
  1229  0FEF                     	;# 
  1230                           
  1231                           	psect	stringtext1
  1232  06B0                     __pstringtext1:
  1233  06B0                     _AUTOROTATION_DELAY:
  1234  06B0  342C               	retlw	44
  1235  06B1  3401               	retlw	1
  1236  06B2  3400               	retlw	0
  1237  06B3                     __end_of_AUTOROTATION_DELAY:
  1238                           
  1239                           	psect	stringtext2
  1240  06B6                     __pstringtext2:
  1241  06B6                     _GOOD_WSP_VOLTAGE:
  1242  06B6  348E               	retlw	142
  1243  06B7  3400               	retlw	0
  1244  06B8                     __end_of_GOOD_WSP_VOLTAGE:
  1245                           
  1246                           	psect	stringtext3
  1247  06B8                     __pstringtext3:
  1248  06B8                     _BAD_WSP_VOLTAGE:
  1249  06B8  3480               	retlw	128
  1250  06B9  3400               	retlw	0
  1251  06BA                     __end_of_BAD_WSP_VOLTAGE:
  1252                           
  1253                           	psect	stringtext4
  1254  06BA                     __pstringtext4:
  1255  06BA                     _UP_RESISTANSE:
  1256  06BA  3420               	retlw	32
  1257  06BB  344E               	retlw	78
  1258  06BC                     __end_of_UP_RESISTANSE:
  1259                           
  1260                           	psect	stringtext5
  1261  06BC                     __pstringtext5:
  1262  06BC                     _AUTOROTATION_DAYS:
  1263  06BC  340E               	retlw	14
  1264  06BD  3400               	retlw	0
  1265  06BE                     __end_of_AUTOROTATION_DAYS:
  1266                           
  1267                           	psect	stringtext6
  1268  06C4                     __pstringtext6:
  1269  06C4                     _MELODY_REPEAT_DELAY:
  1270  06C4  341E               	retlw	30
  1271  06C5                     __end_of_MELODY_REPEAT_DELAY:
  1272                           
  1273                           	psect	stringtext7
  1274  06C5                     __pstringtext7:
  1275  06C5                     _MOVING_WAIT_DELAY:
  1276  06C5  3401               	retlw	1
  1277  06C6                     __end_of_MOVING_WAIT_DELAY:
  1278                           
  1279                           	psect	stringtext8
  1280  06C6                     __pstringtext8:
  1281  06C6                     _FRIMWARE_VERSION_EEPROM_ADR:
  1282  06C6  3401               	retlw	1
  1283  06C7                     __end_of_FRIMWARE_VERSION_EEPROM_ADR:
  1284                           
  1285                           	psect	stringtext9
  1286  06BE                     __pstringtext9:
  1287  06BE                     _HIGH_WATER_RESISTANSE:
  1288  06BE  34A8               	retlw	168
  1289  06BF  3461               	retlw	97
  1290  06C0                     __end_of_HIGH_WATER_RESISTANSE:
  1291                           
  1292                           	psect	stringtext10
  1293  06C0                     __pstringtext10:
  1294  06C0                     _LOW_WATER_RESISTANSE:
  1295  06C0  3420               	retlw	32
  1296  06C1  344E               	retlw	78
  1297  06C2                     __end_of_LOW_WATER_RESISTANSE:
  1298                           
  1299                           	psect	stringtext11
  1300  06C7                     __pstringtext11:
  1301  06C7                     _RELE_GAP:
  1302  06C7  3401               	retlw	1
  1303  06C8                     __end_of_RELE_GAP:
  1304                           
  1305                           	psect	stringtext12
  1306  06C8                     __pstringtext12:
  1307  06C8                     _RELE_POWER_AUTOROTATION_DELAY:
  1308  06C8  3419               	retlw	25
  1309  06C9                     __end_of_RELE_POWER_AUTOROTATION_DELAY:
  1310                           
  1311                           	psect	stringtext13
  1312  06C9                     __pstringtext13:
  1313  06C9                     _RELE_POWER_WORK_DELAY:
  1314  06C9  3478               	retlw	120
  1315  06CA                     __end_of_RELE_POWER_WORK_DELAY:
  1316                           
  1317                           	psect	stringtext14
  1318  06CA                     __pstringtext14:
  1319  06CA                     _JUMP_MEAS_COUNT:
  1320  06CA  340A               	retlw	10
  1321  06CB                     __end_of_JUMP_MEAS_COUNT:
  1322                           
  1323                           	psect	stringtext15
  1324  06CB                     __pstringtext15:
  1325  06CB                     _FUN_MEAS_COUNT:
  1326  06CB  340A               	retlw	10
  1327  06CC                     __end_of_FUN_MEAS_COUNT:
  1328                           
  1329                           	psect	stringtext16
  1330  06CC                     __pstringtext16:
  1331  06CC                     _WSP_MEAS_COUNT:
  1332  06CC  3404               	retlw	4
  1333  06CD                     __end_of_WSP_MEAS_COUNT:
  1334                           
  1335                           	psect	stringtext17
  1336  06CD                     __pstringtext17:
  1337  06CD                     _LONG_ZUMMER_DELAY:
  1338  06CD  3482               	retlw	130
  1339  06CE                     __end_of_LONG_ZUMMER_DELAY:
  1340                           
  1341                           	psect	stringtext18
  1342  06CE                     __pstringtext18:
  1343  06CE                     _SHORT_ZUMMER_DELAY:
  1344  06CE  341E               	retlw	30
  1345  06CF                     __end_of_SHORT_ZUMMER_DELAY:
  1346                           
  1347                           	psect	nvBANK0
  1348  0053                     __pnvBANK0:
  1349  0053                     _TMR0_InterruptHandler:
  1350  0053                     	ds	2
  1351  0055                     _TMR2_InterruptHandler:
  1352  0055                     	ds	2
  1353  0057                     _timer0ReloadVal:
  1354  0057                     	ds	1
  1355  000C                     _PORTAbits	set	12
  1356  000E                     _PORTCbits	set	14
  1357  0015                     _TMR0	set	21
  1358  001C                     _T2CONbits	set	28
  1359  001C                     _T2CON	set	28
  1360  001A                     _TMR2	set	26
  1361  001B                     _PR2	set	27
  1362  0011                     _PIR1bits	set	17
  1363  000B                     _INTCONbits	set	11
  1364  005F                     _GIE	set	95
  1365  008C                     _TRISAbits	set	140
  1366  008E                     _TRISCbits	set	142
  1367  0095                     _OPTION_REG	set	149
  1368  0091                     _PIE1bits	set	145
  1369  0095                     _OPTION_REGbits	set	149
  1370  008E                     _TRISC	set	142
  1371  008C                     _TRISA	set	140
  1372  009D                     _ADCON0bits	set	157
  1373  009D                     _ADCON0	set	157
  1374  009C                     _ADRESH	set	156
  1375  009B                     _ADRESL	set	155
  1376  009E                     _ADCON1	set	158
  1377  0097                     _WDTCON	set	151
  1378  0098                     _OSCTUNE	set	152
  1379  0099                     _OSCCON	set	153
  1380  010C                     _LATAbits	set	268
  1381  010E                     _LATCbits	set	270
  1382  011D                     _APFCON	set	285
  1383  010E                     _LATC	set	270
  1384  010C                     _LATA	set	268
  1385  0116                     _BORCON	set	278
  1386  0191                     _EEADR	set	401
  1387  0196                     _EECON2	set	406
  1388  0193                     _EEDATA	set	403
  1389  018C                     _ANSELAbits	set	396
  1390  018E                     _ANSELCbits	set	398
  1391  018C                     _ANSELA	set	396
  1392  018E                     _ANSELC	set	398
  1393  0CA8                     _RD	set	3240
  1394  0CAA                     _WREN	set	3242
  1395  0CA9                     _WR	set	3241
  1396  020E                     _WPUC	set	526
  1397  020C                     _WPUA	set	524
  1398                           
  1399                           	psect	cinit
  1400  002E                     start_initialization:	
  1401                           ; #config settings
  1402                           
  1403  002E                     __initialization:
  1404                           
  1405                           ; Clear objects allocated to BITCOMMON
  1406  002E  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  1407  002F  01F1               	clrf	((__pbitbssCOMMON/(0+8)+1))& (0+127)
  1408  0030  01F2               	clrf	((__pbitbssCOMMON/(0+8)+2))& (0+127)
  1409                           
  1410                           ; Clear objects allocated to COMMON
  1411  0031  01F9               	clrf	__pbssCOMMON& (0+127)
  1412  0032  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  1413  0033  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  1414  0034  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  1415  0035  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
  1416                           
  1417                           ; Clear objects allocated to BITBANK0
  1418  0036  3020               	movlw	low (__pbitbssBANK0/(0+8))
  1419  0037  0084               	movwf	4
  1420  0038  3000               	movlw	high (__pbitbssBANK0/(0+8))
  1421  0039  0085               	movwf	5
  1422  003A  3014               	movlw	20
  1423  003B  3186  2690  3180   	fcall	clear_ram0
  1424                           
  1425                           ; Clear objects allocated to BANK0
  1426  003E  3034               	movlw	low __pbssBANK0
  1427  003F  0084               	movwf	4
  1428  0040  3000               	movlw	high __pbssBANK0
  1429  0041  0085               	movwf	5
  1430  0042  301F               	movlw	31
  1431  0043  3186  2690  3180   	fcall	clear_ram0
  1432  0046                     end_of_initialization:	
  1433                           ;End of C runtime variable initialization code
  1434                           
  1435  0046                     __end_of__initialization:
  1436  0046  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1437  0047  0020               	movlb	0
  1438  0048  2C12               	ljmp	_main	;jump to C main() function
  1439                           
  1440                           	psect	bitbssCOMMON
  1441  0380                     __pbitbssCOMMON:
  1442  0380                     __ccovbit1_23:
  1443  0380                     	ds	1
  1444  0381                     __ccovbit5_22:
  1445  0381                     	ds	1
  1446  0382                     __ccovbit3_21:
  1447  0382                     	ds	1
  1448  0383                     __ccovbit6_20:
  1449  0383                     	ds	1
  1450  0384                     __ccovbit0_19:
  1451  0384                     	ds	1
  1452  0385                     __ccovbit1_18:
  1453  0385                     	ds	1
  1454  0386                     __ccovbit4_17:
  1455  0386                     	ds	1
  1456  0387                     __ccovbit2_16:
  1457  0387                     	ds	1
  1458  0388                     __ccovbit1_15:
  1459  0388                     	ds	1
  1460  0389                     __ccovbit6_14:
  1461  0389                     	ds	1
  1462  038A                     __ccovbit12_13:
  1463  038A                     	ds	1
  1464  038B                     __ccovbit10_12:
  1465  038B                     	ds	1
  1466  038C                     __ccovbit6_11:
  1467  038C                     	ds	1
  1468  038D                     __ccovbit5_10:
  1469  038D                     	ds	1
  1470  038E                     __ccovbit3_9:
  1471  038E                     	ds	1
  1472  038F                     __ccovbit2_8:
  1473  038F                     	ds	1
  1474  0390                     __ccovbit1_7:
  1475  0390                     	ds	1
  1476  0391                     __ccovbit6_6:
  1477  0391                     	ds	1
  1478  0392                     __ccovbit9_5:
  1479  0392                     	ds	1
  1480  0393                     __ccovbit3_4:
  1481  0393                     	ds	1
  1482  0394                     __ccovbit1_3:
  1483  0394                     	ds	1
  1484  0395                     __ccovbit3_2:
  1485  0395                     	ds	1
  1486  0396                     __ccovbit1_1:
  1487  0396                     	ds	1
  1488  0397                     EEPROM_WriteByte@status:
  1489  0397                     	ds	1
  1490                           
  1491                           	psect	bssCOMMON
  1492  0079                     __pbssCOMMON:
  1493  0079                     _ff:
  1494  0079                     	ds	4
  1495  007D                     _beep_short_count:
  1496  007D                     	ds	1
  1497                           
  1498                           	psect	bitbssBANK0
  1499  0100                     __pbitbssBANK0:
  1500  0100                     __ccovbit8_182:
  1501  0100                     	ds	1
  1502  0101                     __ccovbit3_181:
  1503  0101                     	ds	1
  1504  0102                     __ccovbit9_180:
  1505  0102                     	ds	1
  1506  0103                     __ccovbit6_179:
  1507  0103                     	ds	1
  1508  0104                     __ccovbit4_178:
  1509  0104                     	ds	1
  1510  0105                     __ccovbit31_177:
  1511  0105                     	ds	1
  1512  0106                     __ccovbit22_176:
  1513  0106                     	ds	1
  1514  0107                     __ccovbit20_175:
  1515  0107                     	ds	1
  1516  0108                     __ccovbit17_174:
  1517  0108                     	ds	1
  1518  0109                     __ccovbit14_173:
  1519  0109                     	ds	1
  1520  010A                     __ccovbit12_172:
  1521  010A                     	ds	1
  1522  010B                     __ccovbit7_171:
  1523  010B                     	ds	1
  1524  010C                     __ccovbit5_170:
  1525  010C                     	ds	1
  1526  010D                     __ccovbit31_169:
  1527  010D                     	ds	1
  1528  010E                     __ccovbit29_168:
  1529  010E                     	ds	1
  1530  010F                     __ccovbit26_167:
  1531  010F                     	ds	1
  1532  0110                     __ccovbit23_166:
  1533  0110                     	ds	1
  1534  0111                     __ccovbit21_165:
  1535  0111                     	ds	1
  1536  0112                     __ccovbit13_164:
  1537  0112                     	ds	1
  1538  0113                     __ccovbit11_163:
  1539  0113                     	ds	1
  1540  0114                     __ccovbit30_162:
  1541  0114                     	ds	1
  1542  0115                     __ccovbit28_161:
  1543  0115                     	ds	1
  1544  0116                     __ccovbit26_160:
  1545  0116                     	ds	1
  1546  0117                     __ccovbit22_159:
  1547  0117                     	ds	1
  1548  0118                     __ccovbit17_158:
  1549  0118                     	ds	1
  1550  0119                     __ccovbit16_157:
  1551  0119                     	ds	1
  1552  011A                     __ccovbit14_156:
  1553  011A                     	ds	1
  1554  011B                     __ccovbit3_155:
  1555  011B                     	ds	1
  1556  011C                     __ccovbit7_154:
  1557  011C                     	ds	1
  1558  011D                     __ccovbit4_153:
  1559  011D                     	ds	1
  1560  011E                     __ccovbit1_152:
  1561  011E                     	ds	1
  1562  011F                     __ccovbit4_151:
  1563  011F                     	ds	1
  1564  0120                     __ccovbit2_150:
  1565  0120                     	ds	1
  1566  0121                     __ccovbit20_149:
  1567  0121                     	ds	1
  1568  0122                     __ccovbit18_148:
  1569  0122                     	ds	1
  1570  0123                     __ccovbit12_147:
  1571  0123                     	ds	1
  1572  0124                     __ccovbit4_146:
  1573  0124                     	ds	1
  1574  0125                     __ccovbit3_145:
  1575  0125                     	ds	1
  1576  0126                     __ccovbit4_144:
  1577  0126                     	ds	1
  1578  0127                     __ccovbit2_143:
  1579  0127                     	ds	1
  1580  0128                     __ccovbit1_142:
  1581  0128                     	ds	1
  1582  0129                     __ccovbit22_141:
  1583  0129                     	ds	1
  1584  012A                     __ccovbit17_140:
  1585  012A                     	ds	1
  1586  012B                     __ccovbit16_139:
  1587  012B                     	ds	1
  1588  012C                     __ccovbit14_138:
  1589  012C                     	ds	1
  1590  012D                     __ccovbit10_137:
  1591  012D                     	ds	1
  1592  012E                     __ccovbit8_136:
  1593  012E                     	ds	1
  1594  012F                     __ccovbit5_135:
  1595  012F                     	ds	1
  1596  0130                     __ccovbit4_134:
  1597  0130                     	ds	1
  1598  0131                     __ccovbit2_133:
  1599  0131                     	ds	1
  1600  0132                     __ccovbit1_132:
  1601  0132                     	ds	1
  1602  0133                     __ccovbit31_131:
  1603  0133                     	ds	1
  1604  0134                     __ccovbit29_130:
  1605  0134                     	ds	1
  1606  0135                     __ccovbit23_129:
  1607  0135                     	ds	1
  1608  0136                     __ccovbit21_128:
  1609  0136                     	ds	1
  1610  0137                     __ccovbit19_127:
  1611  0137                     	ds	1
  1612  0138                     __ccovbit18_126:
  1613  0138                     	ds	1
  1614  0139                     __ccovbit16_125:
  1615  0139                     	ds	1
  1616  013A                     __ccovbit14_124:
  1617  013A                     	ds	1
  1618  013B                     __ccovbit10_123:
  1619  013B                     	ds	1
  1620  013C                     __ccovbit8_122:
  1621  013C                     	ds	1
  1622  013D                     __ccovbit4_121:
  1623  013D                     	ds	1
  1624  013E                     __ccovbit3_120:
  1625  013E                     	ds	1
  1626  013F                     __ccovbit5_119:
  1627  013F                     	ds	1
  1628  0140                     __ccovbit3_118:
  1629  0140                     	ds	1
  1630  0141                     __ccovbit1_117:
  1631  0141                     	ds	1
  1632  0142                     __ccovbit8_116:
  1633  0142                     	ds	1
  1634  0143                     __ccovbit5_115:
  1635  0143                     	ds	1
  1636  0144                     __ccovbit3_114:
  1637  0144                     	ds	1
  1638  0145                     __ccovbit1_113:
  1639  0145                     	ds	1
  1640  0146                     __ccovbit17_112:
  1641  0146                     	ds	1
  1642  0147                     __ccovbit15_111:
  1643  0147                     	ds	1
  1644  0148                     __ccovbit13_110:
  1645  0148                     	ds	1
  1646  0149                     __ccovbit12_109:
  1647  0149                     	ds	1
  1648  014A                     __ccovbit11_108:
  1649  014A                     	ds	1
  1650  014B                     __ccovbit10_107:
  1651  014B                     	ds	1
  1652  014C                     __ccovbit7_106:
  1653  014C                     	ds	1
  1654  014D                     __ccovbit4_105:
  1655  014D                     	ds	1
  1656  014E                     __ccovbit3_104:
  1657  014E                     	ds	1
  1658  014F                     __ccovbit2_103:
  1659  014F                     	ds	1
  1660  0150                     __ccovbit1_102:
  1661  0150                     	ds	1
  1662  0151                     __ccovbit14_101:
  1663  0151                     	ds	1
  1664  0152                     __ccovbit10_100:
  1665  0152                     	ds	1
  1666  0153                     __ccovbit7_99:
  1667  0153                     	ds	1
  1668  0154                     __ccovbit6_98:
  1669  0154                     	ds	1
  1670  0155                     __ccovbit4_97:
  1671  0155                     	ds	1
  1672  0156                     __ccovbit1_96:
  1673  0156                     	ds	1
  1674  0157                     __ccovbit19_95:
  1675  0157                     	ds	1
  1676  0158                     __ccovbit17_94:
  1677  0158                     	ds	1
  1678  0159                     __ccovbit15_93:
  1679  0159                     	ds	1
  1680  015A                     __ccovbit14_92:
  1681  015A                     	ds	1
  1682  015B                     __ccovbit13_91:
  1683  015B                     	ds	1
  1684  015C                     __ccovbit12_90:
  1685  015C                     	ds	1
  1686  015D                     __ccovbit11_89:
  1687  015D                     	ds	1
  1688  015E                     __ccovbit8_88:
  1689  015E                     	ds	1
  1690  015F                     __ccovbit6_87:
  1691  015F                     	ds	1
  1692  0160                     __ccovbit5_86:
  1693  0160                     	ds	1
  1694  0161                     __ccovbit4_85:
  1695  0161                     	ds	1
  1696  0162                     __ccovbit3_84:
  1697  0162                     	ds	1
  1698  0163                     __ccovbit2_83:
  1699  0163                     	ds	1
  1700  0164                     __ccovbit1_82:
  1701  0164                     	ds	1
  1702  0165                     __ccovbit1_81:
  1703  0165                     	ds	1
  1704  0166                     __ccovbit2_80:
  1705  0166                     	ds	1
  1706  0167                     __ccovbit27_79:
  1707  0167                     	ds	1
  1708  0168                     __ccovbit23_78:
  1709  0168                     	ds	1
  1710  0169                     __ccovbit22_77:
  1711  0169                     	ds	1
  1712  016A                     __ccovbit20_76:
  1713  016A                     	ds	1
  1714  016B                     __ccovbit18_75:
  1715  016B                     	ds	1
  1716  016C                     __ccovbit15_74:
  1717  016C                     	ds	1
  1718  016D                     __ccovbit14_73:
  1719  016D                     	ds	1
  1720  016E                     __ccovbit10_72:
  1721  016E                     	ds	1
  1722  016F                     __ccovbit7_71:
  1723  016F                     	ds	1
  1724  0170                     __ccovbit6_70:
  1725  0170                     	ds	1
  1726  0171                     __ccovbit4_69:
  1727  0171                     	ds	1
  1728  0172                     __ccovbit1_68:
  1729  0172                     	ds	1
  1730  0173                     __ccovbit9_67:
  1731  0173                     	ds	1
  1732  0174                     __ccovbit5_66:
  1733  0174                     	ds	1
  1734  0175                     __ccovbit4_65:
  1735  0175                     	ds	1
  1736  0176                     __ccovbit3_64:
  1737  0176                     	ds	1
  1738  0177                     __ccovbit1_63:
  1739  0177                     	ds	1
  1740  0178                     __ccovbit9_62:
  1741  0178                     	ds	1
  1742  0179                     __ccovbit5_61:
  1743  0179                     	ds	1
  1744  017A                     __ccovbit4_60:
  1745  017A                     	ds	1
  1746  017B                     __ccovbit3_59:
  1747  017B                     	ds	1
  1748  017C                     __ccovbit1_58:
  1749  017C                     	ds	1
  1750  017D                     __ccovbit4_57:
  1751  017D                     	ds	1
  1752  017E                     __ccovbit2_56:
  1753  017E                     	ds	1
  1754  017F                     __ccovbit1_55:
  1755  017F                     	ds	1
  1756  0180                     __ccovbit4_54:
  1757  0180                     	ds	1
  1758  0181                     __ccovbit2_53:
  1759  0181                     	ds	1
  1760  0182                     __ccovbit1_52:
  1761  0182                     	ds	1
  1762  0183                     __ccovbit5_51:
  1763  0183                     	ds	1
  1764  0184                     __ccovbit3_50:
  1765  0184                     	ds	1
  1766  0185                     __ccovbit2_49:
  1767  0185                     	ds	1
  1768  0186                     __ccovbit1_48:
  1769  0186                     	ds	1
  1770  0187                     __ccovbit7_47:
  1771  0187                     	ds	1
  1772  0188                     __ccovbit4_46:
  1773  0188                     	ds	1
  1774  0189                     __ccovbit2_45:
  1775  0189                     	ds	1
  1776  018A                     __ccovbit1_44:
  1777  018A                     	ds	1
  1778  018B                     __ccovbit6_43:
  1779  018B                     	ds	1
  1780  018C                     __ccovbit4_42:
  1781  018C                     	ds	1
  1782  018D                     __ccovbit2_41:
  1783  018D                     	ds	1
  1784  018E                     __ccovbit1_40:
  1785  018E                     	ds	1
  1786  018F                     __ccovbit6_39:
  1787  018F                     	ds	1
  1788  0190                     __ccovbit4_38:
  1789  0190                     	ds	1
  1790  0191                     __ccovbit2_37:
  1791  0191                     	ds	1
  1792  0192                     __ccovbit1_36:
  1793  0192                     	ds	1
  1794  0193                     __ccovbit5_35:
  1795  0193                     	ds	1
  1796  0194                     __ccovbit3_34:
  1797  0194                     	ds	1
  1798  0195                     __ccovbit1_33:
  1799  0195                     	ds	1
  1800  0196                     __ccovbit8_32:
  1801  0196                     	ds	1
  1802  0197                     __ccovbit6_31:
  1803  0197                     	ds	1
  1804  0198                     __ccovbit2_30:
  1805  0198                     	ds	1
  1806  0199                     __ccovbit8_29:
  1807  0199                     	ds	1
  1808  019A                     __ccovbit6_28:
  1809  019A                     	ds	1
  1810  019B                     __ccovbit2_27:
  1811  019B                     	ds	1
  1812  019C                     __ccovbit1_26:
  1813  019C                     	ds	1
  1814  019D                     __ccovbit1_25:
  1815  019D                     	ds	1
  1816  019E                     __ccovbit0_24:
  1817  019E                     	ds	1
  1818                           
  1819                           	psect	bssBANK0
  1820  0034                     __pbssBANK0:
  1821  0034                     _time_rotation:
  1822  0034                     	ds	3
  1823  0037                     ms_tick@s_count:
  1824  0037                     	ds	2
  1825  0039                     ms_tick@ms_count:
  1826  0039                     	ds	2
  1827  003B                     _time_zummer_long:
  1828  003B                     	ds	2
  1829  003D                     _time_zummer_short:
  1830  003D                     	ds	2
  1831  003F                     _time_tone:
  1832  003F                     	ds	2
  1833  0041                     _time_rele_gap:
  1834  0041                     	ds	2
  1835  0043                     _time_rele_control:
  1836  0043                     	ds	2
  1837  0045                     _time_rele_power:
  1838  0045                     	ds	2
  1839  0047                     _ADC_InterruptHandler:
  1840  0047                     	ds	2
  1841  0049                     get_jump@jump_counter:
  1842  0049                     	ds	1
  1843  004A                     get_fun@fun_counter:
  1844  004A                     	ds	1
  1845  004B                     get_wsp@bad_measures_counter:
  1846  004B                     	ds	1
  1847  004C                     sec_work@iled:
  1848  004C                     	ds	1
  1849  004D                     _beep_double_count:
  1850  004D                     	ds	1
  1851  004E                     _beep_long_count:
  1852  004E                     	ds	1
  1853  004F                     _time_meas:
  1854  004F                     	ds	1
  1855  0050                     _time_moving_wait:
  1856  0050                     	ds	1
  1857  0051                     _time_melody:
  1858  0051                     	ds	1
  1859  0052                     _sec_count:
  1860  0052                     	ds	1
  1861                           
  1862                           	psect	clrtext
  1863  0690                     clear_ram0:	
  1864                           ;	Called with FSR0 containing the base address, and
  1865                           ;	WREG with the size to clear
  1866                           
  1867  0690  0064               	clrwdt	;clear the watchdog before getting into this loop
  1868  0691                     clrloop0:
  1869  0691  0180               	clrf	0	;clear RAM location pointed to by FSR
  1870  0692  3101               	addfsr 0,1
  1871  0693  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1872  0694  2E91               	goto	clrloop0	;have we reached the end yet?
  1873  0695  3400               	retlw	0	;all done for this memory range, return
  1874                           
  1875                           	psect	cstackCOMMON
  1876  0073                     __pcstackCOMMON:
  1877  0073                     ?_PIN_MANAGER_Initialize:
  1878  0073                     ?_OSCILLATOR_Initialize:	
  1879                           ; 1 bytes @ 0x0
  1880                           
  1881  0073                     ?_WDT_Initialize:	
  1882                           ; 1 bytes @ 0x0
  1883                           
  1884  0073                     ?_TMR2_Initialize:	
  1885                           ; 1 bytes @ 0x0
  1886                           
  1887  0073                     ?_ADC_Initialize:	
  1888                           ; 1 bytes @ 0x0
  1889                           
  1890  0073                     ?_TMR0_Initialize:	
  1891                           ; 1 bytes @ 0x0
  1892                           
  1893  0073                     ?_TMR0_ISR:	
  1894                           ; 1 bytes @ 0x0
  1895                           
  1896  0073                     ??_TMR0_ISR:	
  1897                           ; 1 bytes @ 0x0
  1898                           
  1899  0073                     ?_TMR2_ISR:	
  1900                           ; 1 bytes @ 0x0
  1901                           
  1902  0073                     ?_TMR2_DefaultInterruptHandler:	
  1903                           ; 1 bytes @ 0x0
  1904                           
  1905  0073                     ??_TMR2_DefaultInterruptHandler:	
  1906                           ; 1 bytes @ 0x0
  1907                           
  1908  0073                     ?_TMR0_DefaultInterruptHandler:	
  1909                           ; 1 bytes @ 0x0
  1910                           
  1911  0073                     ??_TMR0_DefaultInterruptHandler:	
  1912                           ; 1 bytes @ 0x0
  1913                           
  1914  0073                     ?_EEPROM_ReadByte:	
  1915                           ; 1 bytes @ 0x0
  1916                           
  1917  0073                     ?_SYSTEM_Initialize:	
  1918                           ; 1 bytes @ 0x0
  1919                           
  1920  0073                     ?_ADC_GetConversion:	
  1921                           ; 1 bytes @ 0x0
  1922                           
  1923  0073                     ?_INTERRUPT_InterruptManager:	
  1924                           ; 1 bytes @ 0x0
  1925                           
  1926  0073                     ?_TMR2_StartTimer:	
  1927                           ; 1 bytes @ 0x0
  1928                           
  1929  0073                     ?_start_tone:	
  1930                           ; 1 bytes @ 0x0
  1931                           
  1932  0073                     ??_start_tone:	
  1933                           ; 1 bytes @ 0x0
  1934                           
  1935  0073                     ?_stop_tone:	
  1936                           ; 1 bytes @ 0x0
  1937                           
  1938  0073                     ??_stop_tone:	
  1939                           ; 1 bytes @ 0x0
  1940                           
  1941  0073                     ?_beep_short:	
  1942                           ; 1 bytes @ 0x0
  1943                           
  1944  0073                     ??_beep_short:	
  1945                           ; 1 bytes @ 0x0
  1946                           
  1947  0073                     ?_beep_long:	
  1948                           ; 1 bytes @ 0x0
  1949                           
  1950  0073                     ??_beep_long:	
  1951                           ; 1 bytes @ 0x0
  1952                           
  1953  0073                     ?_beep_double:	
  1954                           ; 1 bytes @ 0x0
  1955                           
  1956  0073                     ??_beep_double:	
  1957                           ; 1 bytes @ 0x0
  1958                           
  1959  0073                     ?_go_close:	
  1960                           ; 1 bytes @ 0x0
  1961                           
  1962  0073                     ?_go_close_short:	
  1963                           ; 1 bytes @ 0x0
  1964                           
  1965  0073                     ?_go_open:	
  1966                           ; 1 bytes @ 0x0
  1967                           
  1968  0073                     ?_go_close_alt:	
  1969                           ; 1 bytes @ 0x0
  1970                           
  1971  0073                     ?_go_open_alt:	
  1972                           ; 1 bytes @ 0x0
  1973                           
  1974  0073                     ?_rele_off:	
  1975                           ; 1 bytes @ 0x0
  1976                           
  1977  0073                     ?_close:	
  1978                           ; 1 bytes @ 0x0
  1979                           
  1980  0073                     ?_open:	
  1981                           ; 1 bytes @ 0x0
  1982                           
  1983  0073                     ?_rele_tick:	
  1984                           ; 1 bytes @ 0x0
  1985                           
  1986  0073                     ??_rele_tick:	
  1987                           ; 1 bytes @ 0x0
  1988                           
  1989  0073                     ?_start_alarm:	
  1990                           ; 1 bytes @ 0x0
  1991                           
  1992  0073                     ?_clear_alarm:	
  1993                           ; 1 bytes @ 0x0
  1994                           
  1995  0073                     ?_fun_work:	
  1996                           ; 1 bytes @ 0x0
  1997                           
  1998  0073                     ?_switch_wm:	
  1999                           ; 1 bytes @ 0x0
  2000                           
  2001  0073                     ?_autorotation_work:	
  2002                           ; 1 bytes @ 0x0
  2003                           
  2004  0073                     ?_minute_tick:	
  2005                           ; 1 bytes @ 0x0
  2006                           
  2007  0073                     ??_minute_tick:	
  2008                           ; 1 bytes @ 0x0
  2009                           
  2010  0073                     ?_sec_30_work:	
  2011                           ; 1 bytes @ 0x0
  2012                           
  2013  0073                     ??_sec_30_work:	
  2014                           ; 1 bytes @ 0x0
  2015                           
  2016  0073                     ?_sec_work:	
  2017                           ; 1 bytes @ 0x0
  2018                           
  2019  0073                     ?_ms_200_work:	
  2020                           ; 1 bytes @ 0x0
  2021                           
  2022  0073                     ??_ms_200_work:	
  2023                           ; 1 bytes @ 0x0
  2024                           
  2025  0073                     ?_ms_100_work:	
  2026                           ; 1 bytes @ 0x0
  2027                           
  2028  0073                     ??_ms_100_work:	
  2029                           ; 1 bytes @ 0x0
  2030                           
  2031  0073                     ?_ms_tick:	
  2032                           ; 1 bytes @ 0x0
  2033                           
  2034  0073                     ?_eeprom_set:	
  2035                           ; 1 bytes @ 0x0
  2036                           
  2037  0073                     ?_hardware_work:	
  2038                           ; 1 bytes @ 0x0
  2039                           
  2040  0073                     ?_zummer_switch:	
  2041                           ; 1 bytes @ 0x0
  2042                           
  2043  0073                     ??_zummer_switch:	
  2044                           ; 1 bytes @ 0x0
  2045                           
  2046  0073                     ?_get_wsp:	
  2047                           ; 1 bytes @ 0x0
  2048                           
  2049  0073                     ?_get_fun:	
  2050                           ; 1 bytes @ 0x0
  2051                           
  2052  0073                     ?_get_jump:	
  2053                           ; 1 bytes @ 0x0
  2054                           
  2055  0073                     ?_start_setup:	
  2056                           ; 1 bytes @ 0x0
  2057                           
  2058  0073                     ?_main:	
  2059                           ; 1 bytes @ 0x0
  2060                           
  2061                           
  2062                           ; 1 bytes @ 0x0
  2063  0073                     	ds	1
  2064  0074                     ??_sec_work:
  2065                           
  2066                           ; 1 bytes @ 0x1
  2067  0074                     	ds	1
  2068  0075                     ??_PIN_MANAGER_Initialize:
  2069  0075                     ??_OSCILLATOR_Initialize:	
  2070                           ; 1 bytes @ 0x2
  2071                           
  2072  0075                     ??_WDT_Initialize:	
  2073                           ; 1 bytes @ 0x2
  2074                           
  2075  0075                     ??_ADC_Initialize:	
  2076                           ; 1 bytes @ 0x2
  2077                           
  2078  0075                     ??_TMR2_ISR:	
  2079                           ; 1 bytes @ 0x2
  2080                           
  2081  0075                     ?_TMR2_SetInterruptHandler:	
  2082                           ; 1 bytes @ 0x2
  2083                           
  2084  0075                     ?_TMR0_SetInterruptHandler:	
  2085                           ; 1 bytes @ 0x2
  2086                           
  2087  0075                     ??_EEPROM_ReadByte:	
  2088                           ; 1 bytes @ 0x2
  2089                           
  2090  0075                     ?_EEPROM_WriteByte:	
  2091                           ; 1 bytes @ 0x2
  2092                           
  2093  0075                     ??_ADC_GetConversion:	
  2094                           ; 1 bytes @ 0x2
  2095                           
  2096  0075                     ??_INTERRUPT_InterruptManager:	
  2097                           ; 1 bytes @ 0x2
  2098                           
  2099  0075                     ??_TMR2_StartTimer:	
  2100                           ; 1 bytes @ 0x2
  2101                           
  2102  0075                     ??_go_close:	
  2103                           ; 1 bytes @ 0x2
  2104                           
  2105  0075                     ??_go_close_short:	
  2106                           ; 1 bytes @ 0x2
  2107                           
  2108  0075                     ??_go_open:	
  2109                           ; 1 bytes @ 0x2
  2110                           
  2111  0075                     ??_go_close_alt:	
  2112                           ; 1 bytes @ 0x2
  2113                           
  2114  0075                     ??_go_open_alt:	
  2115                           ; 1 bytes @ 0x2
  2116                           
  2117  0075                     ??_rele_off:	
  2118                           ; 1 bytes @ 0x2
  2119                           
  2120  0075                     ??_close:	
  2121                           ; 1 bytes @ 0x2
  2122                           
  2123  0075                     ??_open:	
  2124                           ; 1 bytes @ 0x2
  2125                           
  2126  0075                     ??_start_alarm:	
  2127                           ; 1 bytes @ 0x2
  2128                           
  2129  0075                     ??_clear_alarm:	
  2130                           ; 1 bytes @ 0x2
  2131                           
  2132  0075                     ??_fun_work:	
  2133                           ; 1 bytes @ 0x2
  2134                           
  2135  0075                     ??_switch_wm:	
  2136                           ; 1 bytes @ 0x2
  2137                           
  2138  0075                     ??_autorotation_work:	
  2139                           ; 1 bytes @ 0x2
  2140                           
  2141  0075                     ??_ms_tick:	
  2142                           ; 1 bytes @ 0x2
  2143                           
  2144  0075                     ??_hardware_work:	
  2145                           ; 1 bytes @ 0x2
  2146                           
  2147  0075                     ??_get_fun:	
  2148                           ; 1 bytes @ 0x2
  2149                           
  2150  0075                     ??_get_jump:	
  2151                           ; 1 bytes @ 0x2
  2152                           
  2153  0075                     EEPROM_WriteByte@dt:	
  2154                           ; 1 bytes @ 0x2
  2155                           
  2156  0075                     TMR2_SetInterruptHandler@InterruptHandler:	
  2157                           ; 1 bytes @ 0x2
  2158                           
  2159  0075                     TMR0_SetInterruptHandler@InterruptHandler:	
  2160                           ; 2 bytes @ 0x2
  2161                           
  2162                           
  2163                           ; 2 bytes @ 0x2
  2164  0075                     	ds	1
  2165  0076                     ??_EEPROM_WriteByte:
  2166  0076                     ADC_GetConversion@channel:	
  2167                           ; 1 bytes @ 0x3
  2168                           
  2169                           
  2170                           ; 1 bytes @ 0x3
  2171  0076                     	ds	1
  2172  0077                     ??_TMR2_Initialize:
  2173  0077                     ??_TMR0_Initialize:	
  2174                           ; 1 bytes @ 0x4
  2175                           
  2176  0077                     ??_TMR2_SetInterruptHandler:	
  2177                           ; 1 bytes @ 0x4
  2178                           
  2179  0077                     ??_TMR0_SetInterruptHandler:	
  2180                           ; 1 bytes @ 0x4
  2181                           
  2182  0077                     ??_get_wsp:	
  2183                           ; 1 bytes @ 0x4
  2184                           
  2185  0077                     EEPROM_ReadByte@addr:	
  2186                           ; 1 bytes @ 0x4
  2187                           
  2188                           
  2189                           ; 1 bytes @ 0x4
  2190  0077                     	ds	1
  2191  0078                     ??_SYSTEM_Initialize:
  2192  0078                     EEPROM_WriteByte@addr:	
  2193                           ; 1 bytes @ 0x5
  2194                           
  2195                           
  2196                           ; 1 bytes @ 0x5
  2197  0078                     	ds	1
  2198  0079                     ??_start_setup:
  2199  0079                     ??_main:	
  2200                           ; 1 bytes @ 0x6
  2201                           
  2202                           
  2203                           	psect	cstackBANK0
  2204  0058                     __pcstackBANK0:	
  2205                           ; 1 bytes @ 0x6
  2206                           
  2207  0058                     ??_eeprom_set:
  2208  0058                     get_wsp@res:	
  2209                           ; 1 bytes @ 0x0
  2210                           
  2211                           
  2212                           ; 2 bytes @ 0x0
  2213  0058                     	ds	1
  2214  0059                     eeprom_set@vers:
  2215                           
  2216                           ; 1 bytes @ 0x1
  2217  0059                     	ds	1
  2218                           
  2219                           	psect	maintext
  2220  0412                     __pmaintext:	
  2221 ;;
  2222 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2223 ;;
  2224 ;; *************** function _main *****************
  2225 ;; Defined at:
  2226 ;;		line 832 in file "main.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;		None
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;		None
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  1    wreg      void 
  2233 ;; Registers used:
  2234 ;;		wreg, status,2, status,0, pclath, cstack
  2235 ;; Tracked objects:
  2236 ;;		On entry : B1F/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMMON   BANK0   BANK1
  2240 ;;      Params:         0       0       0
  2241 ;;      Locals:         0       0       0
  2242 ;;      Temps:          0       0       0
  2243 ;;      Totals:         0       0       0
  2244 ;;Total ram usage:        0 bytes
  2245 ;; Hardware stack levels required when called: 11
  2246 ;; This function calls:
  2247 ;;		_autorotation_work
  2248 ;;		_close
  2249 ;;		_fun_work
  2250 ;;		_get_fun
  2251 ;;		_get_jump
  2252 ;;		_get_wsp
  2253 ;;		_hardware_work
  2254 ;;		_start_setup
  2255 ;;		_switch_wm
  2256 ;; This function is called by:
  2257 ;;		Startup code after reset
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261  0412                     _main:	
  2262                           ;psect for function _main
  2263                           
  2264                           
  2265                           ;incstack = 0
  2266                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  2267  0412                     l2680:
  2268                           
  2269                           ;main.c: 834:     start_setup();
  2270  0412  3183  2306  3184   	fcall	_start_setup
  2271  0415                     __ccov383_end_blk0:
  2272  0415                     __ccov384_start_blk1:
  2273  0415                     l549:	
  2274                           ;main.c: 837:     while (1) {
  2275                           
  2276  0415  0064               	clrwdt	;# 
  2277  0416                     __ccov384_end_blk1:
  2278  0416                     __ccov385_start_blk2:
  2279  0416                     l2682:
  2280                           
  2281                           ;main.c: 841:         hardware_work();
  2282  0416  3183  2346  3184   	fcall	_hardware_work
  2283  0419                     __ccov385_end_blk2:
  2284  0419                     __ccov386_start_blk3:
  2285  0419                     l2684:
  2286                           
  2287                           ;main.c: 845:         if (!ff.bits.ALARM_ON) {
  2288  0419  1879               	btfsc	_ff,0
  2289  041A  2C1C               	goto	u2771
  2290  041B  2C1D               	goto	u2770
  2291  041C                     u2771:
  2292  041C  2C32               	goto	l2688
  2293  041D                     __ccov386_end_blk3:
  2294  041D                     u2770:
  2295  041D                     __ccov387_start_blk4:
  2296  041D                     l2686:
  2297  041D  0020               	movlb	0	; select bank0
  2298  041E  1620               	bsf	__ccovbit4_178/(0+8),__ccovbit4_178& (0+7)	;volatile
  2299                           
  2300                           ;main.c: 847:             get_jump();
  2301  041F  3183  2381  3184   	fcall	_get_jump
  2302                           
  2303                           ;main.c: 848:             switch_wm();
  2304  0422  3183  23BC  3184   	fcall	_switch_wm
  2305                           
  2306                           ;main.c: 850:             get_fun();
  2307  0425  3182  2239  3184   	fcall	_get_fun
  2308                           
  2309                           ;main.c: 851:             fun_work();
  2310  0428  3181  21E7  3184   	fcall	_fun_work
  2311                           
  2312                           ;main.c: 853:             get_wsp();
  2313  042B  3180  20CA  3184   	fcall	_get_wsp
  2314                           
  2315                           ;main.c: 855:              autorotation_work();
  2316  042E  3181  218D  3184   	fcall	_autorotation_work
  2317                           
  2318                           ;main.c: 857:         } else {
  2319  0431  2C15               	goto	l549
  2320  0432                     __ccov387_end_blk4:
  2321  0432                     __ccov388_start_blk6:
  2322  0432                     l2688:
  2323  0432  0020               	movlb	0	; select bank0
  2324  0433  15A0               	bsf	__ccovbit6_179/(0+8),__ccovbit6_179& (0+7)	;volatile
  2325                           
  2326                           ;main.c: 858:             close();
  2327  0434  3184  2483  3184   	fcall	_close
  2328  0437  2C15               	goto	l549
  2329  0438                     __ccov388_end_blk6:
  2330  0438  282D               	ljmp	start
  2331  0439                     __end_of_main:
  2332                           
  2333                           	psect	text1
  2334  03BC                     __ptext1:	
  2335 ;; *************** function _switch_wm *****************
  2336 ;; Defined at:
  2337 ;;		line 357 in file "main.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;		None
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;		None
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      void 
  2344 ;; Registers used:
  2345 ;;		wreg, status,2, status,0, pclath, cstack
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMMON   BANK0   BANK1
  2351 ;;      Params:         0       0       0
  2352 ;;      Locals:         0       0       0
  2353 ;;      Temps:          1       0       0
  2354 ;;      Totals:         1       0       0
  2355 ;;Total ram usage:        1 bytes
  2356 ;; Hardware stack levels used: 1
  2357 ;; Hardware stack levels required when called: 8
  2358 ;; This function calls:
  2359 ;;		_rele_off
  2360 ;; This function is called by:
  2361 ;;		_main
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365  03BC                     _switch_wm:	
  2366                           ;psect for function _switch_wm
  2367                           
  2368                           
  2369                           ;incstack = 0
  2370                           ; Regs used in _switch_wm: [wreg+status,2+status,0+pclath+cstack]
  2371  03BC                     l2296:
  2372                           
  2373                           ;main.c: 358:     if (ff.bits.JUMP_LOW) {
  2374  03BC  1FF9               	btfss	_ff,7
  2375  03BD  2BBF               	goto	u2251
  2376  03BE  2BC0               	goto	u2250
  2377  03BF                     u2251:
  2378  03BF  2BD2               	goto	l390
  2379  03C0                     __ccov203_end_blk0:
  2380  03C0                     u2250:
  2381  03C0                     __ccov204_start_blk1:
  2382  03C0                     l2298:
  2383  03C0  0020               	movlb	0	; select bank0
  2384  03C1  172A               	bsf	__ccovbit1_96/(0+8),__ccovbit1_96& (0+7)	;volatile
  2385                           
  2386                           ;main.c: 359:         if (!ff.bits.UNIVERSAL_VORK_MODE_ON) {
  2387  03C2  1AFB               	btfsc	_ff+2,5
  2388  03C3  2BC5               	goto	u2261
  2389  03C4  2BC6               	goto	u2260
  2390  03C5                     u2261:
  2391  03C5  2BE6               	goto	l395
  2392  03C6                     __ccov204_end_blk1:
  2393  03C6                     u2260:
  2394  03C6                     __ccov205_start_blk2:
  2395  03C6                     l2300:
  2396                           
  2397                           ;main.c: 360:             ff.bits.NORMAL_WORK_MODE_ON = 0;
  2398  03C6  127B               	bcf	_ff+2,4
  2399                           
  2400                           ;main.c: 361:             ff.bits.UNIVERSAL_VORK_MODE_ON = 1;
  2401  03C7  16FB               	bsf	_ff+2,5
  2402  03C8                     __ccov205_end_blk2:
  2403  03C8                     __ccov206_start_blk3:
  2404  03C8                     l2302:
  2405                           
  2406                           ;main.c: 362:             rele_off();
  2407  03C8  3185  25B9  3183   	fcall	_rele_off
  2408  03CB                     __ccov206_end_blk3:
  2409  03CB                     __ccov207_start_blk4:
  2410  03CB                     l2304:
  2411  03CB  0020               	movlb	0	; select bank0
  2412  03CC  16AA               	bsf	__ccovbit4_97/(0+8),__ccovbit4_97& (0+7)	;volatile
  2413                           
  2414                           ;main.c: 364:             beep_long_count = 2;
  2415  03CD  3002               	movlw	2
  2416  03CE  00F5               	movwf	??_switch_wm
  2417  03CF  0875               	movf	??_switch_wm,w
  2418  03D0  00CE               	movwf	_beep_long_count
  2419  03D1  2BE6               	goto	l395
  2420  03D2                     __ccov207_end_blk4:
  2421  03D2                     __ccov208_start_blk6:
  2422  03D2                     l390:
  2423  03D2  0020               	movlb	0	; select bank0
  2424  03D3  162A               	bsf	__ccovbit6_98/(0+8),__ccovbit6_98& (0+7)	;volatile
  2425  03D4  1C7A               	btfss	_ff+1,0
  2426  03D5  2BD7               	goto	u2271
  2427  03D6  2BD8               	goto	u2270
  2428  03D7                     u2271:
  2429  03D7  2BE6               	goto	l395
  2430  03D8                     __ccov208_end_blk6:
  2431  03D8                     u2270:
  2432  03D8                     __ccov209_start_blk7:
  2433  03D8                     l2306:
  2434  03D8  15AA               	bsf	__ccovbit7_99/(0+8),__ccovbit7_99& (0+7)	;volatile
  2435                           
  2436                           ;main.c: 367:         if (!ff.bits.NORMAL_WORK_MODE_ON) {
  2437  03D9  1A7B               	btfsc	_ff+2,4
  2438  03DA  2BDC               	goto	u2281
  2439  03DB  2BDD               	goto	u2280
  2440  03DC                     u2281:
  2441  03DC  2BE6               	goto	l395
  2442  03DD                     __ccov209_end_blk7:
  2443  03DD                     u2280:
  2444  03DD                     __ccov210_start_blk8:
  2445  03DD                     l2308:
  2446                           
  2447                           ;main.c: 368:             ff.bits.NORMAL_WORK_MODE_ON = 1;
  2448  03DD  167B               	bsf	_ff+2,4
  2449                           
  2450                           ;main.c: 369:             ff.bits.UNIVERSAL_VORK_MODE_ON = 0;
  2451  03DE  12FB               	bcf	_ff+2,5
  2452  03DF                     __ccov210_end_blk8:
  2453  03DF                     __ccov211_start_blk9:
  2454  03DF                     l2310:
  2455                           
  2456                           ;main.c: 370:             rele_off();
  2457  03DF  3185  25B9  3183   	fcall	_rele_off
  2458  03E2                     __ccov211_end_blk9:
  2459  03E2                     __ccov212_start_blk10:
  2460  03E2                     l2312:
  2461  03E2  0020               	movlb	0	; select bank0
  2462  03E3  152A               	bsf	__ccovbit10_100/(0+8),__ccovbit10_100& (0+7)	;volatile
  2463                           
  2464                           ;main.c: 372:             beep_long_count = 1;
  2465  03E4  01CE               	clrf	_beep_long_count
  2466  03E5  0ACE               	incf	_beep_long_count,f
  2467  03E6                     __ccov212_end_blk10:
  2468  03E6                     __ccov213_start_blk14:
  2469  03E6                     l395:
  2470  03E6  14AA               	bsf	__ccovbit14_101/(0+8),__ccovbit14_101& (0+7)	;volatile
  2471  03E7  0008               	return
  2472  03E8                     __end_of_switch_wm:
  2473  03E8                     
  2474                           	psect	text2
  2475  0306                     __ptext2:	
  2476 ;; *************** function _start_setup *****************
  2477 ;; Defined at:
  2478 ;;		line 752 in file "main.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;		None
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;		None
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      void 
  2485 ;; Registers used:
  2486 ;;		wreg, status,2, status,0, pclath, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1
  2492 ;;      Params:         0       0       0
  2493 ;;      Locals:         0       0       0
  2494 ;;      Temps:          0       0       0
  2495 ;;      Totals:         0       0       0
  2496 ;;Total ram usage:        0 bytes
  2497 ;; Hardware stack levels used: 1
  2498 ;; Hardware stack levels required when called: 10
  2499 ;; This function calls:
  2500 ;;		_SYSTEM_Initialize
  2501 ;;		_TMR0_SetInterruptHandler
  2502 ;;		_TMR2_SetInterruptHandler
  2503 ;;		_TMR2_StartTimer
  2504 ;;		_eeprom_set
  2505 ;; This function is called by:
  2506 ;;		_main
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510  0306                     _start_setup:	
  2511                           ;psect for function _start_setup
  2512                           
  2513                           
  2514                           ;incstack = 0
  2515                           ; Regs used in _start_setup: [wreg+status,2+status,0+pclath+cstack]
  2516  0306                     l2628:
  2517                           
  2518                           ;main.c: 754:     SYSTEM_Initialize();
  2519  0306  3185  25CE  3183   	fcall	_SYSTEM_Initialize
  2520  0309                     __ccov362_end_blk0:
  2521  0309                     __ccov363_start_blk1:
  2522  0309                     l2630:
  2523                           
  2524                           ;main.c: 755:     (INTCONbits.GIE = 1);
  2525  0309  178B               	bsf	11,7	;volatile
  2526  030A                     __ccov363_end_blk1:
  2527  030A                     __ccov364_start_blk2:
  2528  030A                     l2632:
  2529                           
  2530                           ;main.c: 756:     (INTCONbits.PEIE = 1);
  2531  030A  170B               	bsf	11,6	;volatile
  2532                           
  2533                           ;main.c: 759:     eeprom_set();
  2534  030B  3185  255E  3183   	fcall	_eeprom_set
  2535                           
  2536                           ;main.c: 761:     TMR0_SetInterruptHandler(zummer_switch);
  2537  030E  305A               	movlw	low _zummer_switch
  2538  030F  00F5               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2539  0310  3006               	movlw	high _zummer_switch
  2540  0311  00F6               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2541  0312  3186  2689  3183   	fcall	_TMR0_SetInterruptHandler
  2542                           
  2543                           ;main.c: 762:     TMR2_SetInterruptHandler(ms_tick);
  2544  0315  30C4               	movlw	low _ms_tick
  2545  0316  00F5               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2546  0317  3002               	movlw	high _ms_tick
  2547  0318  00F6               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2548  0319  3186  2682  3183   	fcall	_TMR2_SetInterruptHandler
  2549  031C                     __ccov364_end_blk2:
  2550  031C                     __ccov365_start_blk3:
  2551  031C                     l2634:
  2552                           
  2553                           ;main.c: 763:     TMR2_StartTimer();
  2554  031C  3186  26AC  3183   	fcall	_TMR2_StartTimer
  2555  031F                     __ccov365_end_blk3:
  2556  031F                     __ccov366_start_blk4:
  2557  031F                     l2636:
  2558                           
  2559                           ;main.c: 780:     INTCONbits.TMR0IE = 0;
  2560  031F  128B               	bcf	11,5	;volatile
  2561                           
  2562                           ;main.c: 781:     ff.value = 0;
  2563  0320  3000               	movlw	0
  2564  0321  00FC               	movwf	_ff+3
  2565  0322  3000               	movlw	0
  2566  0323  00FB               	movwf	_ff+2
  2567  0324  3000               	movlw	0
  2568  0325  00FA               	movwf	_ff+1
  2569  0326  3000               	movlw	0
  2570  0327  00F9               	movwf	_ff
  2571  0328                     __ccov366_end_blk4:
  2572  0328                     __ccov367_start_blk6:
  2573  0328                     l2638:
  2574  0328  0022               	movlb	2	; select bank2
  2575  0329  128E               	bcf	14,5	;volatile
  2576  032A                     __ccov367_end_blk6:
  2577  032A                     __ccov368_start_blk9:
  2578  032A                     l2640:
  2579  032A  120E               	bcf	14,4	;volatile
  2580  032B                     __ccov368_end_blk9:
  2581  032B                     __ccov369_start_blk12:
  2582  032B                     l2642:
  2583  032B  100E               	bcf	14,0	;volatile
  2584  032C                     __ccov369_end_blk12:
  2585  032C                     __ccov370_start_blk15:
  2586  032C                     l2644:
  2587  032C  108E               	bcf	14,1	;volatile
  2588  032D                     __ccov370_end_blk15:
  2589  032D                     __ccov371_start_blk18:
  2590  032D                     l2646:
  2591  032D  128C               	bcf	12,5	;volatile
  2592  032E                     __ccov371_end_blk18:
  2593  032E                     __ccov372_start_blk21:
  2594  032E                     l2648:
  2595  032E  120C               	bcf	12,4	;volatile
  2596  032F                     __ccov372_end_blk21:
  2597  032F                     __ccov373_start_blk22:
  2598  032F                     l543:
  2599                           
  2600                           ;main.c: 790:     time_rotation = 0;
  2601  032F  3000               	movlw	0
  2602  0330  0020               	movlb	0	; select bank0
  2603  0331  00B4               	movwf	_time_rotation
  2604  0332  3000               	movlw	0
  2605  0333  00B5               	movwf	_time_rotation+1
  2606  0334  3000               	movlw	0
  2607  0335  00B6               	movwf	_time_rotation+2
  2608  0336                     __ccov373_end_blk22:
  2609  0336                     __ccov374_start_blk23:
  2610  0336                     l2650:
  2611                           
  2612                           ;main.c: 791:     time_rele_power = 0;
  2613  0336  01C5               	clrf	_time_rele_power
  2614  0337  01C6               	clrf	_time_rele_power+1
  2615  0338                     __ccov374_end_blk23:
  2616  0338                     __ccov375_start_blk24:
  2617  0338                     l2652:
  2618                           
  2619                           ;main.c: 792:     time_rele_control = 0;
  2620  0338  01C3               	clrf	_time_rele_control
  2621  0339  01C4               	clrf	_time_rele_control+1
  2622  033A                     __ccov375_end_blk24:
  2623  033A                     __ccov376_start_blk25:
  2624  033A                     l2654:
  2625                           
  2626                           ;main.c: 793:     time_rele_gap = 0;
  2627  033A  01C1               	clrf	_time_rele_gap
  2628  033B  01C2               	clrf	_time_rele_gap+1
  2629  033C                     __ccov376_end_blk25:
  2630  033C                     __ccov377_start_blk26:
  2631  033C                     l2656:
  2632                           
  2633                           ;main.c: 794:     time_tone = 0;
  2634  033C  01BF               	clrf	_time_tone
  2635  033D  01C0               	clrf	_time_tone+1
  2636  033E                     __ccov377_end_blk26:
  2637  033E                     __ccov378_start_blk27:
  2638  033E                     l2658:
  2639                           
  2640                           ;main.c: 799:     time_melody = 0;
  2641  033E  01D1               	clrf	_time_melody
  2642  033F                     __ccov378_end_blk27:
  2643  033F                     __ccov379_start_blk28:
  2644  033F                     l2660:
  2645                           
  2646                           ;main.c: 800:     time_zummer_short = 0;
  2647  033F  01BD               	clrf	_time_zummer_short
  2648  0340  01BE               	clrf	_time_zummer_short+1
  2649  0341                     __ccov379_end_blk28:
  2650  0341                     __ccov380_start_blk29:
  2651  0341                     l2662:
  2652                           
  2653                           ;main.c: 801:     time_zummer_long = 0;
  2654  0341  01BB               	clrf	_time_zummer_long
  2655  0342  01BC               	clrf	_time_zummer_long+1
  2656  0343                     __ccov380_end_blk29:
  2657  0343                     __ccov381_start_blk30:
  2658  0343                     l2664:
  2659                           
  2660                           ;main.c: 804:     time_meas = 0;
  2661  0343  01CF               	clrf	_time_meas
  2662  0344                     __ccov381_end_blk30:
  2663  0344                     __ccov382_start_blk31:
  2664  0344                     l544:
  2665  0344  16A0               	bsf	__ccovbit31_177/(0+8),__ccovbit31_177& (0+7)	;volatile
  2666  0345  0008               	return
  2667  0346                     __end_of_start_setup:
  2668  0346                     
  2669                           	psect	text3
  2670  055E                     __ptext3:	
  2671 ;; *************** function _eeprom_set *****************
  2672 ;; Defined at:
  2673 ;;		line 560 in file "main.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;		None
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  vers            1    1[BANK0 ] unsigned char 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  1    wreg      void 
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0, pclath, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMMON   BANK0   BANK1
  2687 ;;      Params:         0       0       0
  2688 ;;      Locals:         0       1       0
  2689 ;;      Temps:          0       1       0
  2690 ;;      Totals:         0       2       0
  2691 ;;Total ram usage:        2 bytes
  2692 ;; Hardware stack levels used: 1
  2693 ;; Hardware stack levels required when called: 8
  2694 ;; This function calls:
  2695 ;;		_EEPROM_ReadByte
  2696 ;;		_EEPROM_WriteByte
  2697 ;; This function is called by:
  2698 ;;		_start_setup
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702  055E                     _eeprom_set:	
  2703                           ;psect for function _eeprom_set
  2704                           
  2705                           
  2706                           ;incstack = 0
  2707                           ; Regs used in _eeprom_set: [wreg+status,2+status,0+pclath+cstack]
  2708  055E                     l2590:
  2709                           
  2710                           ;main.c: 561:     char vers = EEPROM_ReadByte(FRIMWARE_VERSION_EEPROM_ADR);
  2711  055E  3001               	movlw	1
  2712  055F  3184  24FB  3185   	fcall	_EEPROM_ReadByte
  2713  0562  0020               	movlb	0	; select bank0
  2714  0563  00D8               	movwf	??_eeprom_set
  2715  0564  0858               	movf	??_eeprom_set,w
  2716  0565  00D9               	movwf	eeprom_set@vers
  2717  0566                     __ccov295_end_blk0:
  2718  0566                     __ccov296_start_blk1:
  2719  0566                     l2592:
  2720                           
  2721                           ;main.c: 562:     if (vers == 0xFF) {
  2722  0566  0A59               	incf	eeprom_set@vers,w
  2723  0567  1D03               	btfss	3,2
  2724  0568  2D6A               	goto	u2711
  2725  0569  2D6B               	goto	u2710
  2726  056A                     u2711:
  2727  056A  2D72               	goto	l464
  2728  056B                     __ccov296_end_blk1:
  2729  056B                     u2710:
  2730  056B                     __ccov297_start_blk2:
  2731  056B                     l2594:
  2732  056B  1424               	bsf	__ccovbit2_150/(0+8),__ccovbit2_150& (0+7)	;volatile
  2733                           
  2734                           ;main.c: 563:         EEPROM_WriteByte(FRIMWARE_VERSION_EEPROM_ADR, 1);
  2735  056C  01F5               	clrf	EEPROM_WriteByte@dt
  2736  056D  0AF5               	incf	EEPROM_WriteByte@dt,f
  2737  056E  3001               	movlw	1
  2738  056F  3184  2439  3185   	fcall	_EEPROM_WriteByte
  2739  0572                     __ccov297_end_blk2:
  2740  0572                     __ccov298_start_blk4:
  2741  0572                     l464:
  2742  0572  0020               	movlb	0	; select bank0
  2743  0573  17A3               	bsf	__ccovbit4_151/(0+8),__ccovbit4_151& (0+7)	;volatile
  2744  0574  0008               	return
  2745  0575                     __end_of_eeprom_set:
  2746  0575                     
  2747                           	psect	text4
  2748  0439                     __ptext4:	
  2749 ;; *************** function _EEPROM_WriteByte *****************
  2750 ;; Defined at:
  2751 ;;		line 6 in file "eeprom.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  addr            1    wreg     unsigned char 
  2754 ;;  dt              1    2[COMMON] unsigned char 
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  addr            1    5[COMMON] unsigned char 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1
  2766 ;;      Params:         1       0       0
  2767 ;;      Locals:         1       0       0
  2768 ;;      Temps:          2       0       0
  2769 ;;      Totals:         4       0       0
  2770 ;;Total ram usage:        4 bytes
  2771 ;; Hardware stack levels used: 1
  2772 ;; Hardware stack levels required when called: 7
  2773 ;; This function calls:
  2774 ;;		Nothing
  2775 ;; This function is called by:
  2776 ;;		_eeprom_set
  2777 ;;		_EEPROM_WriteWord
  2778 ;;		_EEPROM_Writeint24
  2779 ;;		_EEPROM_WriteString
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783  0439                     _EEPROM_WriteByte:	
  2784                           ;psect for function _EEPROM_WriteByte
  2785                           
  2786                           
  2787                           ;incstack = 0
  2788                           ; Regs used in _EEPROM_WriteByte: [wreg]
  2789                           ;EEPROM_WriteByte@addr stored from wreg
  2790  0439  00F8               	movwf	EEPROM_WriteByte@addr
  2791  043A                     l2560:
  2792  043A                     l573:	
  2793                           ;eeprom.c: 7:    static __bit status;;eeprom.c: 8:     while (WR);
  2794                           
  2795  043A  0023               	movlb	3	; select bank3
  2796  043B  1895               	btfsc	21,1	;volsfr
  2797  043C  2C3E               	goto	u2661
  2798  043D  2C3F               	goto	u2660
  2799  043E                     u2661:
  2800  043E  2C3A               	goto	l573
  2801  043F                     __ccov390_end_blk2:
  2802  043F                     u2660:
  2803  043F                     __ccov391_start_blk3:
  2804  043F                     l575:
  2805                           
  2806                           ;eeprom.c: 9:     status = GIE;
  2807  043F  13F2               	bcf	EEPROM_WriteByte@status/(0+8),EEPROM_WriteByte@status& (0+7)
  2808  0440  1F8B               	btfss	11,7	;volatile
  2809  0441  2C43               	goto	u2675
  2810  0442  17F2               	bsf	EEPROM_WriteByte@status/(0+8),EEPROM_WriteByte@status& (0+7)
  2811  0443                     u2675:
  2812                           
  2813                           ;eeprom.c: 10:     GIE = 0;
  2814  0443  138B               	bcf	11,7	;volatile
  2815  0444                     __ccov391_end_blk3:
  2816  0444                     __ccov392_start_blk4:
  2817  0444                     l2562:
  2818                           
  2819                           ;eeprom.c: 11:     EEADR = addr;
  2820  0444  0878               	movf	EEPROM_WriteByte@addr,w
  2821  0445  00F6               	movwf	??_EEPROM_WriteByte
  2822  0446  01F7               	clrf	??_EEPROM_WriteByte+1
  2823  0447  0876               	movf	??_EEPROM_WriteByte,w
  2824  0448  0023               	movlb	3	; select bank3
  2825  0449  0091               	movwf	17	;volatile
  2826  044A  0877               	movf	??_EEPROM_WriteByte+1,w
  2827  044B  0092               	movwf	18	;volatile
  2828                           
  2829                           ;eeprom.c: 12:     EEDATA = dt;
  2830  044C  0875               	movf	EEPROM_WriteByte@dt,w
  2831  044D  0093               	movwf	19	;volatile
  2832  044E                     __ccov392_end_blk4:
  2833  044E                     __ccov393_start_blk5:
  2834  044E                     l2564:
  2835                           
  2836                           ;eeprom.c: 13:     WREN = 1;
  2837  044E  1515               	bsf	21,2	;volsfr
  2838                           
  2839                           ;eeprom.c: 14:     EECON2 = 0x55;
  2840  044F  3055               	movlw	85
  2841  0450  0096               	movwf	22	;volsfr
  2842                           
  2843                           ;eeprom.c: 15:     EECON2 = 0xAA;
  2844  0451  30AA               	movlw	170
  2845  0452  0096               	movwf	22	;volsfr
  2846  0453                     __ccov393_end_blk5:
  2847  0453                     __ccov394_start_blk6:
  2848  0453                     l2566:
  2849                           
  2850                           ;eeprom.c: 16:     WR = 1;
  2851  0453  1495               	bsf	21,1	;volsfr
  2852  0454                     __ccov394_end_blk6:
  2853  0454                     __ccov395_start_blk7:
  2854  0454                     l2568:
  2855                           
  2856                           ;eeprom.c: 17:     GIE = status;
  2857  0454  1BF2               	btfsc	EEPROM_WriteByte@status/(0+8),EEPROM_WriteByte@status& (0+7)
  2858  0455  2C57               	goto	u2681
  2859  0456  2C59               	goto	u2680
  2860  0457                     u2681:
  2861  0457  178B               	bsf	11,7	;volatile
  2862  0458  2C5A               	goto	u2694
  2863  0459                     u2680:
  2864  0459  138B               	bcf	11,7	;volatile
  2865  045A                     __ccov395_end_blk7:
  2866  045A                     u2694:
  2867  045A                     __ccov396_start_blk8:
  2868  045A                     l2570:
  2869                           
  2870                           ;eeprom.c: 18:     WREN = 0;
  2871  045A  0023               	movlb	3	; select bank3
  2872  045B  1115               	bcf	21,2	;volsfr
  2873  045C                     __ccov396_end_blk8:
  2874  045C                     __ccov397_start_blk9:
  2875  045C                     l576:
  2876  045C  0020               	movlb	0	; select bank0
  2877  045D  1520               	bsf	__ccovbit9_180/(0+8),__ccovbit9_180& (0+7)	;volatile
  2878  045E  0008               	return
  2879  045F                     __end_of_EEPROM_WriteByte:
  2880  045F                     
  2881                           	psect	text5
  2882  04FB                     __ptext5:	
  2883 ;; *************** function _EEPROM_ReadByte *****************
  2884 ;; Defined at:
  2885 ;;		line 21 in file "eeprom.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;  addr            1    wreg     unsigned char 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  addr            1    4[COMMON] unsigned char 
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  1    wreg      unsigned char 
  2892 ;; Registers used:
  2893 ;;		wreg
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMMON   BANK0   BANK1
  2899 ;;      Params:         0       0       0
  2900 ;;      Locals:         1       0       0
  2901 ;;      Temps:          2       0       0
  2902 ;;      Totals:         3       0       0
  2903 ;;Total ram usage:        3 bytes
  2904 ;; Hardware stack levels used: 1
  2905 ;; Hardware stack levels required when called: 7
  2906 ;; This function calls:
  2907 ;;		Nothing
  2908 ;; This function is called by:
  2909 ;;		_eeprom_set
  2910 ;;		_EEPROM_ReadWord
  2911 ;;		_EEPROM_Readint24
  2912 ;;		_EEPROM_ReadString
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916  04FB                     _EEPROM_ReadByte:	
  2917                           ;psect for function _EEPROM_ReadByte
  2918                           
  2919                           
  2920                           ;incstack = 0
  2921                           ; Regs used in _EEPROM_ReadByte: [wreg]
  2922                           ;EEPROM_ReadByte@addr stored from wreg
  2923  04FB  00F7               	movwf	EEPROM_ReadByte@addr
  2924  04FC                     l2550:
  2925  04FC                     l579:	
  2926                           ;eeprom.c: 22:     while (RD || WR);
  2927                           
  2928  04FC  0023               	movlb	3	; select bank3
  2929  04FD  1815               	btfsc	21,0	;volsfr
  2930  04FE  2D00               	goto	u2641
  2931  04FF  2D01               	goto	u2640
  2932  0500                     u2641:
  2933  0500  2CFC               	goto	l579
  2934  0501                     __ccov399_end_blk2:
  2935  0501                     u2640:
  2936  0501                     __ccov400_start_blk3:
  2937  0501                     l2552:
  2938  0501  0020               	movlb	0	; select bank0
  2939  0502  14A0               	bsf	__ccovbit3_181/(0+8),__ccovbit3_181& (0+7)	;volatile
  2940  0503  0023               	movlb	3	; select bank3
  2941  0504  1895               	btfsc	21,1	;volsfr
  2942  0505  2D07               	goto	u2651
  2943  0506  2D08               	goto	u2650
  2944  0507                     u2651:
  2945  0507  2CFC               	goto	l579
  2946  0508                     __ccov400_end_blk3:
  2947  0508                     u2650:
  2948  0508                     __ccov401_start_blk5:
  2949  0508                     l2554:
  2950                           
  2951                           ;eeprom.c: 23:     EEADR = addr;
  2952  0508  0877               	movf	EEPROM_ReadByte@addr,w
  2953  0509  00F5               	movwf	??_EEPROM_ReadByte
  2954  050A  01F6               	clrf	??_EEPROM_ReadByte+1
  2955  050B  0875               	movf	??_EEPROM_ReadByte,w
  2956  050C  0091               	movwf	17	;volatile
  2957  050D  0876               	movf	??_EEPROM_ReadByte+1,w
  2958  050E  0092               	movwf	18	;volatile
  2959  050F                     __ccov401_end_blk5:
  2960  050F                     __ccov402_start_blk6:
  2961  050F                     l2556:
  2962                           
  2963                           ;eeprom.c: 24:     RD = 1;
  2964  050F  1415               	bsf	21,0	;volsfr
  2965                           
  2966                           ;eeprom.c: 25:     return EEDATA;
  2967  0510  0813               	movf	19,w	;volatile
  2968  0511                     __ccov402_end_blk6:
  2969  0511                     __ccov403_start_blk8:
  2970  0511                     l582:
  2971  0511  0020               	movlb	0	; select bank0
  2972  0512  1420               	bsf	__ccovbit8_182/(0+8),__ccovbit8_182& (0+7)	;volatile
  2973  0513  0008               	return
  2974  0514                     __end_of_EEPROM_ReadByte:
  2975  0514                     
  2976                           	psect	text6
  2977  06AC                     __ptext6:	
  2978 ;; *************** function _TMR2_StartTimer *****************
  2979 ;; Defined at:
  2980 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;		None
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;		None
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      void 
  2987 ;; Registers used:
  2988 ;;		None
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMMON   BANK0   BANK1
  2994 ;;      Params:         0       0       0
  2995 ;;      Locals:         0       0       0
  2996 ;;      Temps:          0       0       0
  2997 ;;      Totals:         0       0       0
  2998 ;;Total ram usage:        0 bytes
  2999 ;; Hardware stack levels used: 1
  3000 ;; Hardware stack levels required when called: 7
  3001 ;; This function calls:
  3002 ;;		Nothing
  3003 ;; This function is called by:
  3004 ;;		_start_setup
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008  06AC                     _TMR2_StartTimer:	
  3009                           ;psect for function _TMR2_StartTimer
  3010                           
  3011                           
  3012                           ;incstack = 0
  3013                           ; Regs used in _TMR2_StartTimer: []
  3014  06AC                     l2176:
  3015                           
  3016                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  3017  06AC  0020               	movlb	0	; select bank0
  3018  06AD  151C               	bsf	28,2	;volatile
  3019  06AE                     __ccov55_end_blk0:
  3020  06AE                     __ccov56_start_blk1:
  3021  06AE                     l138:
  3022  06AE  1471               	bsf	__ccovbit1_15/(0+8),__ccovbit1_15& (0+7)	;volatile
  3023  06AF  0008               	return
  3024  06B0                     __end_of_TMR2_StartTimer:
  3025  06B0                     
  3026                           	psect	text7
  3027  05CE                     __ptext7:	
  3028 ;; *************** function _SYSTEM_Initialize *****************
  3029 ;; Defined at:
  3030 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2, status,0, pclath, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1
  3044 ;;      Params:         0       0       0
  3045 ;;      Locals:         0       0       0
  3046 ;;      Temps:          0       0       0
  3047 ;;      Totals:         0       0       0
  3048 ;;Total ram usage:        0 bytes
  3049 ;; Hardware stack levels used: 1
  3050 ;; Hardware stack levels required when called: 9
  3051 ;; This function calls:
  3052 ;;		_ADC_Initialize
  3053 ;;		_OSCILLATOR_Initialize
  3054 ;;		_PIN_MANAGER_Initialize
  3055 ;;		_TMR0_Initialize
  3056 ;;		_TMR2_Initialize
  3057 ;;		_WDT_Initialize
  3058 ;; This function is called by:
  3059 ;;		_start_setup
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063  05CE                     _SYSTEM_Initialize:	
  3064                           ;psect for function _SYSTEM_Initialize
  3065                           
  3066                           
  3067                           ;incstack = 0
  3068                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3069  05CE                     l2162:
  3070                           
  3071                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3072  05CE  3185  25A3  3185   	fcall	_PIN_MANAGER_Initialize
  3073                           
  3074                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3075  05D1  3186  2672  3185   	fcall	_OSCILLATOR_Initialize
  3076                           
  3077                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  3078  05D4  3186  26A2  3185   	fcall	_WDT_Initialize
  3079                           
  3080                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  3081  05D7  3185  25E2  3185   	fcall	_TMR2_Initialize
  3082                           
  3083                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  3084  05DA  3186  2669  3185   	fcall	_ADC_Initialize
  3085                           
  3086                           ;mcc_generated_files/mcc.c: 58:     TMR0_Initialize();
  3087  05DD  3185  2575  3185   	fcall	_TMR0_Initialize
  3088  05E0                     __ccov1_end_blk0:
  3089  05E0                     __ccov2_start_blk1:
  3090  05E0                     l23:
  3091  05E0  1772               	bsf	__ccovbit1_1/(0+8),__ccovbit1_1& (0+7)	;volatile
  3092  05E1  0008               	return
  3093  05E2                     __end_of_SYSTEM_Initialize:
  3094  05E2                     
  3095                           	psect	text8
  3096  06A2                     __ptext8:	
  3097 ;; *************** function _WDT_Initialize *****************
  3098 ;; Defined at:
  3099 ;;		line 71 in file "mcc_generated_files/mcc.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;		None
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;		None
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  1    wreg      void 
  3106 ;; Registers used:
  3107 ;;		wreg
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMMON   BANK0   BANK1
  3113 ;;      Params:         0       0       0
  3114 ;;      Locals:         0       0       0
  3115 ;;      Temps:          0       0       0
  3116 ;;      Totals:         0       0       0
  3117 ;;Total ram usage:        0 bytes
  3118 ;; Hardware stack levels used: 1
  3119 ;; Hardware stack levels required when called: 7
  3120 ;; This function calls:
  3121 ;;		Nothing
  3122 ;; This function is called by:
  3123 ;;		_SYSTEM_Initialize
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127  06A2                     _WDT_Initialize:	
  3128                           ;psect for function _WDT_Initialize
  3129                           
  3130                           
  3131                           ;incstack = 0
  3132                           ; Regs used in _WDT_Initialize: [wreg]
  3133  06A2                     l2008:
  3134                           
  3135                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x0A;
  3136  06A2  300A               	movlw	10
  3137  06A3  0021               	movlb	1	; select bank1
  3138  06A4  0097               	movwf	23	;volatile
  3139  06A5                     __ccov7_end_blk0:
  3140  06A5                     __ccov8_start_blk1:
  3141  06A5                     l29:
  3142  06A5  1672               	bsf	__ccovbit1_3/(0+8),__ccovbit1_3& (0+7)	;volatile
  3143  06A6  0008               	return
  3144  06A7                     __end_of_WDT_Initialize:
  3145  06A7                     
  3146                           	psect	text9
  3147  05E2                     __ptext9:	
  3148 ;; *************** function _TMR2_Initialize *****************
  3149 ;; Defined at:
  3150 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;		None
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      void 
  3157 ;; Registers used:
  3158 ;;		wreg, status,2, status,0, pclath, cstack
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMMON   BANK0   BANK1
  3164 ;;      Params:         0       0       0
  3165 ;;      Locals:         0       0       0
  3166 ;;      Temps:          0       0       0
  3167 ;;      Totals:         0       0       0
  3168 ;;Total ram usage:        0 bytes
  3169 ;; Hardware stack levels used: 1
  3170 ;; Hardware stack levels required when called: 8
  3171 ;; This function calls:
  3172 ;;		_TMR2_SetInterruptHandler
  3173 ;; This function is called by:
  3174 ;;		_SYSTEM_Initialize
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178  05E2                     _TMR2_Initialize:	
  3179                           ;psect for function _TMR2_Initialize
  3180                           
  3181                           
  3182                           ;incstack = 0
  3183                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3184  05E2                     l2010:
  3185                           
  3186                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x63;
  3187  05E2  3063               	movlw	99
  3188  05E3  0020               	movlb	0	; select bank0
  3189  05E4  009B               	movwf	27	;volatile
  3190  05E5                     __ccov48_end_blk0:
  3191  05E5                     __ccov49_start_blk1:
  3192  05E5                     l2012:
  3193                           
  3194                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  3195  05E5  019A               	clrf	26	;volatile
  3196  05E6                     __ccov49_end_blk1:
  3197  05E6                     __ccov50_start_blk2:
  3198  05E6                     l2014:
  3199                           
  3200                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  3201  05E6  1091               	bcf	17,1	;volatile
  3202  05E7                     __ccov50_end_blk2:
  3203  05E7                     __ccov51_start_blk3:
  3204  05E7                     l2016:
  3205                           
  3206                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  3207  05E7  0021               	movlb	1	; select bank1
  3208  05E8  1491               	bsf	17,1	;volatile
  3209  05E9                     __ccov51_end_blk3:
  3210  05E9                     __ccov52_start_blk4:
  3211  05E9                     l2018:
  3212                           
  3213                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  3214  05E9  30C2               	movlw	low _TMR2_DefaultInterruptHandler
  3215  05EA  00F5               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  3216  05EB  3006               	movlw	high _TMR2_DefaultInterruptHandler
  3217  05EC  00F6               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  3218  05ED  3186  2682  3185   	fcall	_TMR2_SetInterruptHandler
  3219  05F0                     __ccov52_end_blk4:
  3220  05F0                     __ccov53_start_blk5:
  3221  05F0                     l2020:
  3222                           
  3223                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x4D;
  3224  05F0  304D               	movlw	77
  3225  05F1  0020               	movlb	0	; select bank0
  3226  05F2  009C               	movwf	28	;volatile
  3227  05F3                     __ccov53_end_blk5:
  3228  05F3                     __ccov54_start_blk6:
  3229  05F3                     l135:
  3230  05F3  14F1               	bsf	__ccovbit6_14/(0+8),__ccovbit6_14& (0+7)	;volatile
  3231  05F4  0008               	return
  3232  05F5                     __end_of_TMR2_Initialize:
  3233  05F5                     
  3234                           	psect	text10
  3235  0682                     __ptext10:	
  3236 ;; *************** function _TMR2_SetInterruptHandler *****************
  3237 ;; Defined at:
  3238 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  3241 ;;		 -> ms_tick(1), TMR2_DefaultInterruptHandler(1), 
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;		None
  3244 ;; Return value:  Size  Location     Type
  3245 ;;                  1    wreg      void 
  3246 ;; Registers used:
  3247 ;;		wreg
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMMON   BANK0   BANK1
  3253 ;;      Params:         2       0       0
  3254 ;;      Locals:         0       0       0
  3255 ;;      Temps:          0       0       0
  3256 ;;      Totals:         2       0       0
  3257 ;;Total ram usage:        2 bytes
  3258 ;; Hardware stack levels used: 1
  3259 ;; Hardware stack levels required when called: 7
  3260 ;; This function calls:
  3261 ;;		Nothing
  3262 ;; This function is called by:
  3263 ;;		_TMR2_Initialize
  3264 ;;		_start_setup
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268  0682                     _TMR2_SetInterruptHandler:	
  3269                           ;psect for function _TMR2_SetInterruptHandler
  3270                           
  3271                           
  3272                           ;incstack = 0
  3273                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  3274  0682                     l1932:
  3275                           
  3276                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
  3277  0682  0876               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  3278  0683  0020               	movlb	0	; select bank0
  3279  0684  00D6               	movwf	_TMR2_InterruptHandler+1
  3280  0685  0875               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  3281  0686  00D5               	movwf	_TMR2_InterruptHandler
  3282  0687                     __ccov69_end_blk0:
  3283  0687                     __ccov70_start_blk1:
  3284  0687                     l157:
  3285  0687  16F0               	bsf	__ccovbit1_18/(0+8),__ccovbit1_18& (0+7)	;volatile
  3286  0688  0008               	return
  3287  0689                     __end_of_TMR2_SetInterruptHandler:
  3288  0689                     
  3289                           	psect	text11
  3290  0575                     __ptext11:	
  3291 ;; *************** function _TMR0_Initialize *****************
  3292 ;; Defined at:
  3293 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;		None
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;		None
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      void 
  3300 ;; Registers used:
  3301 ;;		wreg, status,2, status,0, pclath, cstack
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMMON   BANK0   BANK1
  3307 ;;      Params:         0       0       0
  3308 ;;      Locals:         0       0       0
  3309 ;;      Temps:          1       0       0
  3310 ;;      Totals:         1       0       0
  3311 ;;Total ram usage:        1 bytes
  3312 ;; Hardware stack levels used: 1
  3313 ;; Hardware stack levels required when called: 8
  3314 ;; This function calls:
  3315 ;;		_TMR0_SetInterruptHandler
  3316 ;; This function is called by:
  3317 ;;		_SYSTEM_Initialize
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321  0575                     _TMR0_Initialize:	
  3322                           ;psect for function _TMR0_Initialize
  3323                           
  3324                           
  3325                           ;incstack = 0
  3326                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3327  0575                     l2028:
  3328                           
  3329                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD1 
      +                          & 0x3F));
  3330  0575  0021               	movlb	1	; select bank1
  3331  0576  0815               	movf	21,w	;volatile
  3332  0577  39C0               	andlw	192
  3333  0578  3811               	iorlw	17
  3334  0579  0095               	movwf	21	;volatile
  3335  057A                     __ccov72_end_blk0:
  3336  057A                     __ccov73_start_blk1:
  3337  057A                     l2030:
  3338                           
  3339                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x83;
  3340  057A  3083               	movlw	131
  3341  057B  0020               	movlb	0	; select bank0
  3342  057C  0095               	movwf	21	;volatile
  3343  057D                     __ccov73_end_blk1:
  3344  057D                     __ccov74_start_blk2:
  3345  057D                     l2032:
  3346                           
  3347                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 131;
  3348  057D  3083               	movlw	131
  3349  057E  00F7               	movwf	??_TMR0_Initialize
  3350  057F  0877               	movf	??_TMR0_Initialize,w
  3351  0580  00D7               	movwf	_timer0ReloadVal	;volatile
  3352  0581                     __ccov74_end_blk2:
  3353  0581                     __ccov75_start_blk3:
  3354  0581                     l2034:
  3355                           
  3356                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  3357  0581  110B               	bcf	11,2	;volatile
  3358  0582                     __ccov75_end_blk3:
  3359  0582                     __ccov76_start_blk4:
  3360  0582                     l2036:
  3361                           
  3362                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  3363  0582  168B               	bsf	11,5	;volatile
  3364  0583                     __ccov76_end_blk4:
  3365  0583                     __ccov77_start_blk5:
  3366  0583                     l2038:
  3367                           
  3368                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3369  0583  30B3               	movlw	low _TMR0_DefaultInterruptHandler
  3370  0584  00F5               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3371  0585  3006               	movlw	high _TMR0_DefaultInterruptHandler
  3372  0586  00F6               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3373  0587  3186  2689  3185   	fcall	_TMR0_SetInterruptHandler
  3374  058A                     __ccov77_end_blk5:
  3375  058A                     __ccov78_start_blk6:
  3376  058A                     l177:
  3377  058A  15F0               	bsf	__ccovbit6_20/(0+8),__ccovbit6_20& (0+7)	;volatile
  3378  058B  0008               	return
  3379  058C                     __end_of_TMR0_Initialize:
  3380  058C                     
  3381                           	psect	text12
  3382  0689                     __ptext12:	
  3383 ;; *************** function _TMR0_SetInterruptHandler *****************
  3384 ;; Defined at:
  3385 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  3388 ;;		 -> zummer_switch(1), TMR0_DefaultInterruptHandler(1), 
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;		None
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  1    wreg      void 
  3393 ;; Registers used:
  3394 ;;		wreg
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMMON   BANK0   BANK1
  3400 ;;      Params:         2       0       0
  3401 ;;      Locals:         0       0       0
  3402 ;;      Temps:          0       0       0
  3403 ;;      Totals:         2       0       0
  3404 ;;Total ram usage:        2 bytes
  3405 ;; Hardware stack levels used: 1
  3406 ;; Hardware stack levels required when called: 7
  3407 ;; This function calls:
  3408 ;;		Nothing
  3409 ;; This function is called by:
  3410 ;;		_TMR0_Initialize
  3411 ;;		_start_setup
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415  0689                     _TMR0_SetInterruptHandler:	
  3416                           ;psect for function _TMR0_SetInterruptHandler
  3417                           
  3418                           
  3419                           ;incstack = 0
  3420                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  3421  0689                     l1934:
  3422                           
  3423                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  3424  0689  0876               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  3425  068A  0020               	movlb	0	; select bank0
  3426  068B  00D4               	movwf	_TMR0_InterruptHandler+1
  3427  068C  0875               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  3428  068D  00D3               	movwf	_TMR0_InterruptHandler
  3429  068E                     __ccov90_end_blk0:
  3430  068E                     __ccov91_start_blk1:
  3431  068E                     l193:
  3432  068E  1470               	bsf	__ccovbit1_23/(0+8),__ccovbit1_23& (0+7)	;volatile
  3433  068F  0008               	return
  3434  0690                     __end_of_TMR0_SetInterruptHandler:
  3435  0690                     
  3436                           	psect	text13
  3437  05A3                     __ptext13:	
  3438 ;; *************** function _PIN_MANAGER_Initialize *****************
  3439 ;; Defined at:
  3440 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;		None
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg, status,2
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMMON   BANK0   BANK1
  3454 ;;      Params:         0       0       0
  3455 ;;      Locals:         0       0       0
  3456 ;;      Temps:          0       0       0
  3457 ;;      Totals:         0       0       0
  3458 ;;Total ram usage:        0 bytes
  3459 ;; Hardware stack levels used: 1
  3460 ;; Hardware stack levels required when called: 7
  3461 ;; This function calls:
  3462 ;;		Nothing
  3463 ;; This function is called by:
  3464 ;;		_SYSTEM_Initialize
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468  05A3                     _PIN_MANAGER_Initialize:	
  3469                           ;psect for function _PIN_MANAGER_Initialize
  3470                           
  3471                           
  3472                           ;incstack = 0
  3473                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3474  05A3                     l1990:
  3475                           
  3476                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3477  05A3  0022               	movlb	2	; select bank2
  3478  05A4  018C               	clrf	12	;volatile
  3479                           
  3480                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  3481  05A5  018E               	clrf	14	;volatile
  3482  05A6                     __ccov31_end_blk0:
  3483  05A6                     __ccov32_start_blk1:
  3484  05A6                     l1992:
  3485                           
  3486                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x0F;
  3487  05A6  300F               	movlw	15
  3488  05A7  0021               	movlb	1	; select bank1
  3489  05A8  008C               	movwf	12	;volatile
  3490  05A9                     __ccov32_end_blk1:
  3491  05A9                     __ccov33_start_blk2:
  3492  05A9                     l1994:
  3493                           
  3494                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x0C;
  3495  05A9  300C               	movlw	12
  3496  05AA  008E               	movwf	14	;volatile
  3497  05AB                     __ccov33_end_blk2:
  3498  05AB                     __ccov34_start_blk3:
  3499  05AB                     l1996:
  3500                           
  3501                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x08;
  3502  05AB  3008               	movlw	8
  3503  05AC  0023               	movlb	3	; select bank3
  3504  05AD  008E               	movwf	14	;volatile
  3505  05AE                     __ccov34_end_blk3:
  3506  05AE                     __ccov35_start_blk4:
  3507  05AE                     l1998:
  3508                           
  3509                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x05;
  3510  05AE  3005               	movlw	5
  3511  05AF  008C               	movwf	12	;volatile
  3512                           
  3513                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  3514  05B0  0024               	movlb	4	; select bank4
  3515  05B1  018C               	clrf	12	;volatile
  3516                           
  3517                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  3518  05B2  018E               	clrf	14	;volatile
  3519  05B3                     __ccov35_end_blk4:
  3520  05B3                     __ccov36_start_blk5:
  3521  05B3                     l2000:
  3522                           
  3523                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  3524  05B3  0021               	movlb	1	; select bank1
  3525  05B4  1795               	bsf	21,7	;volatile
  3526                           
  3527                           ;mcc_generated_files/pin_manager.c: 86:     APFCON = 0x00;
  3528  05B5  0022               	movlb	2	; select bank2
  3529  05B6  019D               	clrf	29	;volatile
  3530  05B7                     __ccov36_end_blk5:
  3531  05B7                     __ccov37_start_blk6:
  3532  05B7                     l90:
  3533  05B7  14F2               	bsf	__ccovbit6_6/(0+8),__ccovbit6_6& (0+7)	;volatile
  3534  05B8  0008               	return
  3535  05B9                     __end_of_PIN_MANAGER_Initialize:
  3536  05B9                     
  3537                           	psect	text14
  3538  0672                     __ptext14:	
  3539 ;; *************** function _OSCILLATOR_Initialize *****************
  3540 ;; Defined at:
  3541 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;		None
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;		None
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  1    wreg      void 
  3548 ;; Registers used:
  3549 ;;		wreg, status,2
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMMON   BANK0   BANK1
  3555 ;;      Params:         0       0       0
  3556 ;;      Locals:         0       0       0
  3557 ;;      Temps:          0       0       0
  3558 ;;      Totals:         0       0       0
  3559 ;;Total ram usage:        0 bytes
  3560 ;; Hardware stack levels used: 1
  3561 ;; Hardware stack levels required when called: 7
  3562 ;; This function calls:
  3563 ;;		Nothing
  3564 ;; This function is called by:
  3565 ;;		_SYSTEM_Initialize
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569  0672                     _OSCILLATOR_Initialize:	
  3570                           ;psect for function _OSCILLATOR_Initialize
  3571                           
  3572                           
  3573                           ;incstack = 0
  3574                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3575  0672                     l2002:
  3576                           
  3577                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x78;
  3578  0672  3078               	movlw	120
  3579  0673  0021               	movlb	1	; select bank1
  3580  0674  0099               	movwf	25	;volatile
  3581  0675                     __ccov3_end_blk0:
  3582  0675                     __ccov4_start_blk1:
  3583  0675                     l2004:
  3584                           
  3585                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  3586  0675  0198               	clrf	24	;volatile
  3587  0676                     __ccov4_end_blk1:
  3588  0676                     __ccov5_start_blk2:
  3589  0676                     l2006:
  3590                           
  3591                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  3592  0676  0022               	movlb	2	; select bank2
  3593  0677  0196               	clrf	22	;volatile
  3594  0678                     __ccov5_end_blk2:
  3595  0678                     __ccov6_start_blk3:
  3596  0678                     l26:
  3597  0678  16F2               	bsf	__ccovbit3_2/(0+8),__ccovbit3_2& (0+7)	;volatile
  3598  0679  0008               	return
  3599  067A                     __end_of_OSCILLATOR_Initialize:
  3600  067A                     
  3601                           	psect	text15
  3602  0669                     __ptext15:	
  3603 ;; *************** function _ADC_Initialize *****************
  3604 ;; Defined at:
  3605 ;;		line 67 in file "mcc_generated_files/adc.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      void 
  3612 ;; Registers used:
  3613 ;;		wreg, status,2
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMMON   BANK0   BANK1
  3619 ;;      Params:         0       0       0
  3620 ;;      Locals:         0       0       0
  3621 ;;      Temps:          0       0       0
  3622 ;;      Totals:         0       0       0
  3623 ;;Total ram usage:        0 bytes
  3624 ;; Hardware stack levels used: 1
  3625 ;; Hardware stack levels required when called: 7
  3626 ;; This function calls:
  3627 ;;		Nothing
  3628 ;; This function is called by:
  3629 ;;		_SYSTEM_Initialize
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633  0669                     _ADC_Initialize:	
  3634                           ;psect for function _ADC_Initialize
  3635                           
  3636                           
  3637                           ;incstack = 0
  3638                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3639  0669                     l2022:
  3640                           
  3641                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x50;
  3642  0669  3050               	movlw	80
  3643  066A  0021               	movlb	1	; select bank1
  3644  066B  009E               	movwf	30	;volatile
  3645  066C                     __ccov9_end_blk0:
  3646  066C                     __ccov10_start_blk1:
  3647  066C                     l2024:
  3648                           
  3649                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  3650  066C  019B               	clrf	27	;volatile
  3651  066D                     __ccov10_end_blk1:
  3652  066D                     __ccov11_start_blk2:
  3653  066D                     l2026:
  3654                           
  3655                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  3656  066D  019C               	clrf	28	;volatile
  3657                           
  3658                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x1D;
  3659  066E  301D               	movlw	29
  3660  066F  009D               	movwf	29	;volatile
  3661  0670                     __ccov11_end_blk2:
  3662  0670                     __ccov12_start_blk3:
  3663  0670                     l46:
  3664  0670  15F2               	bsf	__ccovbit3_4/(0+8),__ccovbit3_4& (0+7)	;volatile
  3665  0671  0008               	return
  3666  0672                     __end_of_ADC_Initialize:
  3667  0672                     
  3668                           	psect	text16
  3669  0346                     __ptext16:	
  3670 ;; *************** function _hardware_work *****************
  3671 ;; Defined at:
  3672 ;;		line 568 in file "main.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;		None
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;		None
  3677 ;; Return value:  Size  Location     Type
  3678 ;;                  1    wreg      void 
  3679 ;; Registers used:
  3680 ;;		None
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMMON   BANK0   BANK1
  3686 ;;      Params:         0       0       0
  3687 ;;      Locals:         0       0       0
  3688 ;;      Temps:          0       0       0
  3689 ;;      Totals:         0       0       0
  3690 ;;Total ram usage:        0 bytes
  3691 ;; Hardware stack levels used: 1
  3692 ;; Hardware stack levels required when called: 7
  3693 ;; This function calls:
  3694 ;;		Nothing
  3695 ;; This function is called by:
  3696 ;;		_main
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700  0346                     _hardware_work:	
  3701                           ;psect for function _hardware_work
  3702                           
  3703                           
  3704                           ;incstack = 0
  3705                           ; Regs used in _hardware_work: []
  3706  0346                     l1662:
  3707                           
  3708                           ;main.c: 569:     LATCbits.LATC0 = ff.bits.ALARM_ON;
  3709  0346  1879               	btfsc	_ff,0
  3710  0347  2B49               	goto	u1031
  3711  0348  2B4C               	goto	u1030
  3712  0349                     u1031:
  3713  0349  0022               	movlb	2	; select bank2
  3714  034A  140E               	bsf	14,0	;volatile
  3715  034B  2B4E               	goto	u1044
  3716  034C                     u1030:
  3717  034C  0022               	movlb	2	; select bank2
  3718  034D  100E               	bcf	14,0	;volatile
  3719  034E                     u1044:
  3720                           
  3721                           ;main.c: 570:     LATCbits.LATC1 = ff.bits.MEAS_ON;
  3722  034E  1BFB               	btfsc	_ff+2,7
  3723  034F  2B51               	goto	u1051
  3724  0350  2B54               	goto	u1050
  3725  0351                     u1051:
  3726  0351  0022               	movlb	2	; select bank2
  3727  0352  148E               	bsf	14,1	;volatile
  3728  0353  2B56               	goto	u1064
  3729  0354                     u1050:
  3730  0354  0022               	movlb	2	; select bank2
  3731  0355  108E               	bcf	14,1	;volatile
  3732  0356                     u1064:
  3733                           
  3734                           ;main.c: 571:     LATCbits.LATC4 = ff.bits.RELE_CONTROL_ON;
  3735  0356  1B7A               	btfsc	_ff+1,6
  3736  0357  2B59               	goto	u1071
  3737  0358  2B5C               	goto	u1070
  3738  0359                     u1071:
  3739  0359  0022               	movlb	2	; select bank2
  3740  035A  160E               	bsf	14,4	;volatile
  3741  035B  2B5E               	goto	u1084
  3742  035C                     u1070:
  3743  035C  0022               	movlb	2	; select bank2
  3744  035D  120E               	bcf	14,4	;volatile
  3745  035E                     u1084:
  3746                           
  3747                           ;main.c: 572:     LATCbits.LATC5 = ff.bits.RELE_POWER_ON;
  3748  035E  1AFA               	btfsc	_ff+1,5
  3749  035F  2B61               	goto	u1091
  3750  0360  2B64               	goto	u1090
  3751  0361                     u1091:
  3752  0361  0022               	movlb	2	; select bank2
  3753  0362  168E               	bsf	14,5	;volatile
  3754  0363  2B66               	goto	u1104
  3755  0364                     u1090:
  3756  0364  0022               	movlb	2	; select bank2
  3757  0365  128E               	bcf	14,5	;volatile
  3758  0366                     u1104:
  3759                           
  3760                           ;main.c: 573:     LATAbits.LATA4 = ff.bits.LED_ON;
  3761  0366  1B7B               	btfsc	_ff+2,6
  3762  0367  2B69               	goto	u1111
  3763  0368  2B6C               	goto	u1110
  3764  0369                     u1111:
  3765  0369  0022               	movlb	2	; select bank2
  3766  036A  160C               	bsf	12,4	;volatile
  3767  036B  2B6E               	goto	u1124
  3768  036C                     u1110:
  3769  036C  0022               	movlb	2	; select bank2
  3770  036D  120C               	bcf	12,4	;volatile
  3771  036E                     u1124:
  3772                           
  3773                           ;main.c: 575:     if (ff.bits.TONE_ON) {
  3774  036E  1FFA               	btfss	_ff+1,7
  3775  036F  2B71               	goto	u1131
  3776  0370  2B72               	goto	u1130
  3777  0371                     u1131:
  3778  0371  2B75               	goto	l467
  3779  0372                     __ccov299_end_blk0:
  3780  0372                     u1130:
  3781  0372                     __ccov300_start_blk1:
  3782  0372                     l1664:
  3783  0372  0020               	movlb	0	; select bank0
  3784  0373  1723               	bsf	__ccovbit1_152/(0+8),__ccovbit1_152& (0+7)	;volatile
  3785                           
  3786                           ;main.c: 576:         INTCONbits.TMR0IE = 1;
  3787  0374  168B               	bsf	11,5	;volatile
  3788  0375                     __ccov300_end_blk1:
  3789  0375                     __ccov301_start_blk2:
  3790  0375                     l467:	
  3791                           ;main.c: 577:     };
  3792                           
  3793                           
  3794                           ;main.c: 578:     if (ff.bits.TONE_OFF) {
  3795  0375  1C7B               	btfss	_ff+2,0
  3796  0376  2B78               	goto	u1141
  3797  0377  2B79               	goto	u1140
  3798  0378                     u1141:
  3799  0378  2B7E               	goto	l471
  3800  0379                     __ccov301_end_blk2:
  3801  0379                     u1140:
  3802  0379                     __ccov302_start_blk3:
  3803  0379                     l1666:
  3804                           
  3805                           ;main.c: 579:         INTCONbits.TMR0IE = 0;
  3806  0379  128B               	bcf	11,5	;volatile
  3807  037A                     __ccov302_end_blk3:
  3808  037A                     __ccov303_start_blk4:
  3809  037A                     l469:	
  3810                           ;main.c: 580:         do { LATAbits.LATA5 = 0; } while(0);
  3811                           
  3812  037A  0020               	movlb	0	; select bank0
  3813  037B  16A3               	bsf	__ccovbit4_153/(0+8),__ccovbit4_153& (0+7)	;volatile
  3814  037C  0022               	movlb	2	; select bank2
  3815  037D  128C               	bcf	12,5	;volatile
  3816  037E                     __ccov303_end_blk4:
  3817  037E                     __ccov304_start_blk7:
  3818  037E                     l471:
  3819  037E  0020               	movlb	0	; select bank0
  3820  037F  1623               	bsf	__ccovbit7_154/(0+8),__ccovbit7_154& (0+7)	;volatile
  3821  0380  0008               	return
  3822  0381                     __end_of_hardware_work:
  3823  0381                     
  3824                           	psect	text17
  3825  00CA                     __ptext17:	
  3826 ;; *************** function _get_wsp *****************
  3827 ;; Defined at:
  3828 ;;		line 593 in file "main.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;		None
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  res             2    0[BANK0 ] unsigned int 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  1    wreg      void 
  3835 ;; Registers used:
  3836 ;;		wreg, status,2, status,0, pclath, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMMON   BANK0   BANK1
  3842 ;;      Params:         0       0       0
  3843 ;;      Locals:         0       2       0
  3844 ;;      Temps:          2       0       0
  3845 ;;      Totals:         2       2       0
  3846 ;;Total ram usage:        4 bytes
  3847 ;; Hardware stack levels used: 1
  3848 ;; Hardware stack levels required when called: 8
  3849 ;; This function calls:
  3850 ;;		_ADC_GetConversion
  3851 ;;		_clear_alarm
  3852 ;;		_start_alarm
  3853 ;; This function is called by:
  3854 ;;		_main
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858  00CA                     _get_wsp:	
  3859                           ;psect for function _get_wsp
  3860                           
  3861                           
  3862                           ;incstack = 0
  3863                           ; Regs used in _get_wsp: [wreg+status,2+status,0+pclath+cstack]
  3864  00CA                     l2596:
  3865                           
  3866                           ;main.c: 595:     if (ff.bits.ALLOW_MEASURE) {
  3867  00CA  1E79               	btfss	_ff,4
  3868  00CB  28CD               	goto	u2721
  3869  00CC  28CE               	goto	u2720
  3870  00CD                     u2721:
  3871  00CD  292A               	goto	l495
  3872  00CE                     __ccov308_end_blk0:
  3873  00CE                     u2720:
  3874  00CE                     __ccov309_start_blk1:
  3875  00CE                     l482:	
  3876                           ;main.c: 597:         static signed char bad_measures_counter = 0;;main.c: 598:         
      +                          do { LATCbits.LATC1 = 1; } while(0);
  3877                           
  3878  00CE  0022               	movlb	2	; select bank2
  3879  00CF  148E               	bsf	14,1	;volatile
  3880  00D0                     __ccov309_end_blk1:
  3881  00D0                     __ccov310_start_blk3:
  3882  00D0                     l484:	
  3883                           ;main.c: 599:         do { ANSELCbits.ANSC3 = 1; } while(0);
  3884                           
  3885  00D0  0023               	movlb	3	; select bank3
  3886  00D1  158E               	bsf	14,3	;volatile
  3887  00D2                     __ccov310_end_blk3:
  3888  00D2                     __ccov311_start_blk5:
  3889  00D2                     l2598:
  3890                           
  3891                           ;main.c: 600:         _delay((unsigned long)((1)*(16000000/4000.0)));
  3892  00D2  3006               	movlw	6
  3893  00D3  00F7               	movwf	??_get_wsp
  3894  00D4  3030               	movlw	48
  3895  00D5                     u2847:
  3896  00D5  0B89               	decfsz	9,f
  3897  00D6  28D5               	goto	u2847
  3898  00D7  0BF7               	decfsz	??_get_wsp,f
  3899  00D8  28D5               	goto	u2847
  3900  00D9  3200               	nop2
  3901  00DA                     __ccov311_end_blk5:
  3902  00DA                     __ccov312_start_blk6:
  3903  00DA                     l2600:
  3904                           
  3905                           ;main.c: 601:         unsigned res = ADC_GetConversion(PIN_WSP_STATE);
  3906  00DA  3007               	movlw	7
  3907  00DB  3185  2514  3180   	fcall	_ADC_GetConversion
  3908  00DE  00F7               	movwf	??_get_wsp
  3909  00DF  01F8               	clrf	??_get_wsp+1
  3910  00E0  0877               	movf	??_get_wsp,w
  3911  00E1  0020               	movlb	0	; select bank0
  3912  00E2  00D8               	movwf	get_wsp@res
  3913  00E3  0878               	movf	??_get_wsp+1,w
  3914  00E4  00D9               	movwf	get_wsp@res+1
  3915  00E5                     __ccov312_end_blk6:
  3916  00E5                     __ccov313_start_blk8:
  3917  00E5                     l2602:
  3918  00E5  0023               	movlb	3	; select bank3
  3919  00E6  118E               	bcf	14,3	;volatile
  3920  00E7                     __ccov313_end_blk8:
  3921  00E7                     __ccov314_start_blk11:
  3922  00E7                     l2604:
  3923  00E7  0022               	movlb	2	; select bank2
  3924  00E8  108E               	bcf	14,1	;volatile
  3925  00E9                     __ccov314_end_blk11:
  3926  00E9                     __ccov315_start_blk13:
  3927  00E9                     l2606:
  3928                           
  3929                           ;main.c: 604:         if (res < BAD_WSP_VOLTAGE) {
  3930  00E9  3000               	movlw	0
  3931  00EA  0020               	movlb	0	; select bank0
  3932  00EB  0259               	subwf	get_wsp@res+1,w
  3933  00EC  3080               	movlw	128
  3934  00ED  1903               	skipnz
  3935  00EE  0258               	subwf	get_wsp@res,w
  3936  00EF  1803               	skipnc
  3937  00F0  28F2               	goto	u2731
  3938  00F1  28F3               	goto	u2730
  3939  00F2                     u2731:
  3940  00F2  28F9               	goto	l2610
  3941  00F3                     __ccov315_end_blk13:
  3942  00F3                     u2730:
  3943  00F3                     __ccov316_start_blk14:
  3944  00F3                     l2608:
  3945  00F3  1523               	bsf	__ccovbit14_156/(0+8),__ccovbit14_156& (0+7)	;volatile
  3946                           
  3947                           ;main.c: 605:             bad_measures_counter++;
  3948  00F4  3001               	movlw	1
  3949  00F5  00F7               	movwf	??_get_wsp
  3950  00F6  0877               	movf	??_get_wsp,w
  3951  00F7  07CB               	addwf	get_wsp@bad_measures_counter,f
  3952                           
  3953                           ;main.c: 606:         } else {
  3954  00F8  2908               	goto	l2614
  3955  00F9                     __ccov316_end_blk14:
  3956  00F9                     __ccov317_start_blk16:
  3957  00F9                     l2610:
  3958  00F9  14A3               	bsf	__ccovbit16_157/(0+8),__ccovbit16_157& (0+7)	;volatile
  3959                           
  3960                           ;main.c: 607:             if (res > GOOD_WSP_VOLTAGE) {
  3961  00FA  3000               	movlw	0
  3962  00FB  0259               	subwf	get_wsp@res+1,w
  3963  00FC  308F               	movlw	143
  3964  00FD  1903               	skipnz
  3965  00FE  0258               	subwf	get_wsp@res,w
  3966  00FF  1C03               	skipc
  3967  0100  2902               	goto	u2741
  3968  0101  2903               	goto	u2740
  3969  0102                     u2741:
  3970  0102  2908               	goto	l2614
  3971  0103                     __ccov317_end_blk16:
  3972  0103                     u2740:
  3973  0103                     __ccov318_start_blk17:
  3974  0103                     l2612:
  3975  0103  1423               	bsf	__ccovbit17_158/(0+8),__ccovbit17_158& (0+7)	;volatile
  3976                           
  3977                           ;main.c: 608:                 bad_measures_counter--;
  3978  0104  30FF               	movlw	255
  3979  0105  00F7               	movwf	??_get_wsp
  3980  0106  0877               	movf	??_get_wsp,w
  3981  0107  07CB               	addwf	get_wsp@bad_measures_counter,f
  3982  0108                     __ccov318_end_blk17:
  3983  0108                     __ccov319_start_blk20:
  3984  0108                     l2614:
  3985                           
  3986                           ;main.c: 611:         if (bad_measures_counter > WSP_MEAS_COUNT) {
  3987  0108  084B               	movf	get_wsp@bad_measures_counter,w
  3988  0109  3A80               	xorlw	128
  3989  010A  3E7B               	addlw	-133
  3990  010B  1C03               	skipc
  3991  010C  290E               	goto	u2751
  3992  010D  290F               	goto	u2750
  3993  010E                     u2751:
  3994  010E  2918               	goto	l2620
  3995  010F                     __ccov319_end_blk20:
  3996  010F                     u2750:
  3997  010F                     __ccov320_start_blk21:
  3998  010F                     l2616:
  3999                           
  4000                           ;main.c: 612:             start_alarm();
  4001  010F  3186  267A  3180   	fcall	_start_alarm
  4002  0112                     __ccov320_end_blk21:
  4003  0112                     __ccov321_start_blk22:
  4004  0112                     l2618:
  4005  0112  0020               	movlb	0	; select bank0
  4006  0113  17A2               	bsf	__ccovbit22_159/(0+8),__ccovbit22_159& (0+7)	;volatile
  4007                           
  4008                           ;main.c: 613:             bad_measures_counter = WSP_MEAS_COUNT;
  4009  0114  3004               	movlw	4
  4010  0115  00F7               	movwf	??_get_wsp
  4011  0116  0877               	movf	??_get_wsp,w
  4012  0117  00CB               	movwf	get_wsp@bad_measures_counter
  4013  0118                     __ccov321_end_blk22:
  4014  0118                     __ccov322_start_blk24:
  4015  0118                     l2620:
  4016                           
  4017                           ;main.c: 615:         if (bad_measures_counter < -WSP_MEAS_COUNT) {
  4018  0118  084B               	movf	get_wsp@bad_measures_counter,w
  4019  0119  3A80               	xorlw	128
  4020  011A  3E84               	addlw	132
  4021  011B  1803               	skipnc
  4022  011C  291E               	goto	u2761
  4023  011D  291F               	goto	u2760
  4024  011E                     u2761:
  4025  011E  2928               	goto	l2626
  4026  011F                     __ccov322_end_blk24:
  4027  011F                     u2760:
  4028  011F                     __ccov323_start_blk25:
  4029  011F                     l2622:
  4030                           
  4031                           ;main.c: 616:             clear_alarm();
  4032  011F  3186  26A7  3180   	fcall	_clear_alarm
  4033  0122                     __ccov323_end_blk25:
  4034  0122                     __ccov324_start_blk26:
  4035  0122                     l2624:
  4036  0122  0020               	movlb	0	; select bank0
  4037  0123  1722               	bsf	__ccovbit26_160/(0+8),__ccovbit26_160& (0+7)	;volatile
  4038                           
  4039                           ;main.c: 617:             bad_measures_counter = -WSP_MEAS_COUNT;
  4040  0124  30FC               	movlw	252
  4041  0125  00F7               	movwf	??_get_wsp
  4042  0126  0877               	movf	??_get_wsp,w
  4043  0127  00CB               	movwf	get_wsp@bad_measures_counter
  4044  0128                     __ccov324_end_blk26:
  4045  0128                     __ccov325_start_blk28:
  4046  0128                     l2626:
  4047  0128  16A2               	bsf	__ccovbit28_161/(0+8),__ccovbit28_161& (0+7)	;volatile
  4048                           
  4049                           ;main.c: 619:         ff.bits.ALLOW_MEASURE = 0;
  4050  0129  1279               	bcf	_ff,4
  4051  012A                     __ccov325_end_blk28:
  4052  012A                     __ccov326_start_blk30:
  4053  012A                     l495:
  4054  012A  0020               	movlb	0	; select bank0
  4055  012B  1622               	bsf	__ccovbit30_162/(0+8),__ccovbit30_162& (0+7)	;volatile
  4056  012C  0008               	return
  4057  012D                     __end_of_get_wsp:
  4058  012D                     
  4059                           	psect	text18
  4060  067A                     __ptext18:	
  4061 ;; *************** function _start_alarm *****************
  4062 ;; Defined at:
  4063 ;;		line 318 in file "main.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;		None
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;		None
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  1    wreg      void 
  4070 ;; Registers used:
  4071 ;;		status,2
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMMON   BANK0   BANK1
  4077 ;;      Params:         0       0       0
  4078 ;;      Locals:         0       0       0
  4079 ;;      Temps:          0       0       0
  4080 ;;      Totals:         0       0       0
  4081 ;;Total ram usage:        0 bytes
  4082 ;; Hardware stack levels used: 1
  4083 ;; Hardware stack levels required when called: 7
  4084 ;; This function calls:
  4085 ;;		Nothing
  4086 ;; This function is called by:
  4087 ;;		_get_wsp
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091  067A                     _start_alarm:	
  4092                           ;psect for function _start_alarm
  4093                           
  4094                           
  4095                           ;incstack = 0
  4096                           ; Regs used in _start_alarm: [status,2]
  4097  067A                     l2584:
  4098                           
  4099                           ;main.c: 319:     ff.bits.ALARM_ON = 1;
  4100  067A  1479               	bsf	_ff,0
  4101                           
  4102                           ;main.c: 320:     ff.bits.ALARM_OFF = 0;
  4103  067B  10F9               	bcf	_ff,1
  4104                           
  4105                           ;main.c: 321:     ff.bits.MELODY_ON = 1;
  4106  067C  14FC               	bsf	_ff+3,1
  4107                           
  4108                           ;main.c: 322:     ff.bits.SIREN = 1;
  4109  067D  14FB               	bsf	_ff+2,1
  4110  067E                     __ccov180_end_blk0:
  4111  067E                     __ccov181_start_blk1:
  4112  067E                     l2586:
  4113                           
  4114                           ;main.c: 323:     sec_count=0;
  4115  067E  0020               	movlb	0	; select bank0
  4116  067F  01D2               	clrf	_sec_count
  4117  0680                     __ccov181_end_blk1:
  4118  0680                     __ccov182_start_blk2:
  4119  0680                     l379:
  4120  0680  172C               	bsf	__ccovbit2_80/(0+8),__ccovbit2_80& (0+7)	;volatile
  4121  0681  0008               	return
  4122  0682                     __end_of_start_alarm:
  4123  0682                     
  4124                           	psect	text19
  4125  06A7                     __ptext19:	
  4126 ;; *************** function _clear_alarm *****************
  4127 ;; Defined at:
  4128 ;;		line 326 in file "main.c"
  4129 ;; Parameters:    Size  Location     Type
  4130 ;;		None
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;		None
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  1    wreg      void 
  4135 ;; Registers used:
  4136 ;;		None
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMMON   BANK0   BANK1
  4142 ;;      Params:         0       0       0
  4143 ;;      Locals:         0       0       0
  4144 ;;      Temps:          0       0       0
  4145 ;;      Totals:         0       0       0
  4146 ;;Total ram usage:        0 bytes
  4147 ;; Hardware stack levels used: 1
  4148 ;; Hardware stack levels required when called: 7
  4149 ;; This function calls:
  4150 ;;		Nothing
  4151 ;; This function is called by:
  4152 ;;		_get_wsp
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156  06A7                     _clear_alarm:	
  4157                           ;psect for function _clear_alarm
  4158                           
  4159                           
  4160                           ;incstack = 0
  4161                           ; Regs used in _clear_alarm: []
  4162  06A7                     l2588:
  4163                           
  4164                           ;main.c: 327:     ff.bits.ALARM_ON = 0;
  4165  06A7  1079               	bcf	_ff,0
  4166                           
  4167                           ;main.c: 328:     ff.bits.ALARM_OFF = 1;
  4168  06A8  14F9               	bsf	_ff,1
  4169  06A9                     __ccov183_end_blk0:
  4170  06A9                     __ccov184_start_blk1:
  4171  06A9                     l382:
  4172  06A9  0020               	movlb	0	; select bank0
  4173  06AA  16AC               	bsf	__ccovbit1_81/(0+8),__ccovbit1_81& (0+7)	;volatile
  4174  06AB  0008               	return
  4175  06AC                     __end_of_clear_alarm:
  4176  06AC                     
  4177                           	psect	text20
  4178  0514                     __ptext20:	
  4179 ;; *************** function _ADC_GetConversion *****************
  4180 ;; Defined at:
  4181 ;;		line 112 in file "mcc_generated_files/adc.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  channel         1    wreg     enum E2178
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;  channel         1    3[COMMON] enum E2178
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      unsigned char 
  4188 ;; Registers used:
  4189 ;;		wreg, status,2, status,0
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMMON   BANK0   BANK1
  4195 ;;      Params:         0       0       0
  4196 ;;      Locals:         1       0       0
  4197 ;;      Temps:          1       0       0
  4198 ;;      Totals:         2       0       0
  4199 ;;Total ram usage:        2 bytes
  4200 ;; Hardware stack levels used: 1
  4201 ;; Hardware stack levels required when called: 7
  4202 ;; This function calls:
  4203 ;;		Nothing
  4204 ;; This function is called by:
  4205 ;;		_get_wsp
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209  0514                     _ADC_GetConversion:	
  4210                           ;psect for function _ADC_GetConversion
  4211                           
  4212                           
  4213                           ;incstack = 0
  4214                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  4215                           ;ADC_GetConversion@channel stored from wreg
  4216  0514  00F6               	movwf	ADC_GetConversion@channel
  4217  0515                     l2572:
  4218                           
  4219                           ;mcc_generated_files/adc.c: 112: char ADC_GetConversion(adc_channel_t channel);mcc_gener
      +                          ated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = channel;
  4220  0515  0876               	movf	ADC_GetConversion@channel,w
  4221  0516  00F5               	movwf	??_ADC_GetConversion
  4222  0517  0DF5               	rlf	??_ADC_GetConversion,f
  4223  0518  0DF5               	rlf	??_ADC_GetConversion,f
  4224  0519  0021               	movlb	1	; select bank1
  4225  051A  081D               	movf	29,w	;volatile
  4226  051B  0675               	xorwf	??_ADC_GetConversion,w
  4227  051C  3983               	andlw	-125
  4228  051D  0675               	xorwf	??_ADC_GetConversion,w
  4229  051E  009D               	movwf	29	;volatile
  4230  051F                     __ccov22_end_blk0:
  4231  051F                     __ccov23_start_blk1:
  4232  051F                     l2574:
  4233                           
  4234                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  4235  051F  141D               	bsf	29,0	;volatile
  4236  0520                     __ccov23_end_blk1:
  4237  0520                     __ccov24_start_blk2:
  4238  0520                     l2576:
  4239                           
  4240                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  4241  0520  3006               	movlw	6
  4242  0521                     u2857:
  4243  0521  0B89               	decfsz	9,f
  4244  0522  2D21               	goto	u2857
  4245  0523  3200               	nop2
  4246  0524                     __ccov24_end_blk2:
  4247  0524                     __ccov25_start_blk3:
  4248  0524                     l2578:
  4249                           
  4250                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  4251  0524  0021               	movlb	1	; select bank1
  4252  0525  149D               	bsf	29,1	;volatile
  4253  0526                     __ccov25_end_blk3:
  4254  0526                     __ccov26_start_blk5:
  4255  0526                     l61:	
  4256                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  4257                           
  4258                           
  4259                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  4260  0526  189D               	btfsc	29,1	;volatile
  4261  0527  2D29               	goto	u2701
  4262  0528  2D2A               	goto	u2700
  4263  0529                     u2701:
  4264  0529  2D26               	goto	l61
  4265  052A                     __ccov26_end_blk5:
  4266  052A                     u2700:
  4267  052A                     __ccov27_start_blk7:
  4268  052A                     l2580:
  4269                           
  4270                           ;mcc_generated_files/adc.c: 132:     return (ADRESH);
  4271  052A  081C               	movf	28,w	;volatile
  4272  052B                     __ccov27_end_blk7:
  4273  052B                     __ccov28_start_blk9:
  4274  052B                     l64:
  4275  052B  1572               	bsf	__ccovbit9_5/(0+8),__ccovbit9_5& (0+7)	;volatile
  4276  052C  0008               	return
  4277  052D                     __end_of_ADC_GetConversion:
  4278  052D                     
  4279                           	psect	text21
  4280  0381                     __ptext21:	
  4281 ;; *************** function _get_jump *****************
  4282 ;; Defined at:
  4283 ;;		line 688 in file "main.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;		None
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;		None
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  1    wreg      void 
  4290 ;; Registers used:
  4291 ;;		wreg, status,2, status,0
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMMON   BANK0   BANK1
  4297 ;;      Params:         0       0       0
  4298 ;;      Locals:         0       0       0
  4299 ;;      Temps:          1       0       0
  4300 ;;      Totals:         1       0       0
  4301 ;;Total ram usage:        1 bytes
  4302 ;; Hardware stack levels used: 1
  4303 ;; Hardware stack levels required when called: 7
  4304 ;; This function calls:
  4305 ;;		Nothing
  4306 ;; This function is called by:
  4307 ;;		_main
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311  0381                     _get_jump:	
  4312                           ;psect for function _get_jump
  4313                           
  4314                           
  4315                           ;incstack = 0
  4316                           ; Regs used in _get_jump: [wreg+status,2+status,0]
  4317  0381                     l2410:
  4318                           
  4319                           ;main.c: 690:     static signed char jump_counter;;main.c: 692:     if (ff.bits.ALLOW_JU
      +                          MP) {
  4320  0381  1F79               	btfss	_ff,6
  4321  0382  2B84               	goto	u2481
  4322  0383  2B85               	goto	u2480
  4323  0384                     u2481:
  4324  0384  2BB9               	goto	l529
  4325  0385                     __ccov346_end_blk0:
  4326  0385                     u2480:
  4327  0385                     __ccov347_start_blk1:
  4328  0385                     l520:	
  4329                           ;main.c: 694:         do { ANSELAbits.ANSA1 = 0; } while(0);
  4330                           
  4331  0385  0023               	movlb	3	; select bank3
  4332  0386  108C               	bcf	12,1	;volatile
  4333  0387                     __ccov347_end_blk1:
  4334  0387                     __ccov348_start_blk3:
  4335  0387                     l522:	
  4336                           ;main.c: 695:         do { TRISAbits.TRISA1 = 1; } while(0);
  4337                           
  4338  0387  0021               	movlb	1	; select bank1
  4339  0388  148C               	bsf	12,1	;volatile
  4340  0389                     __ccov348_end_blk3:
  4341  0389                     __ccov349_start_blk4:
  4342  0389                     l523:
  4343                           
  4344                           ;main.c: 696:         if (PORTAbits.RA1) jump_counter++;
  4345  0389  0020               	movlb	0	; select bank0
  4346  038A  1C8C               	btfss	12,1	;volatile
  4347  038B  2B8D               	goto	u2491
  4348  038C  2B8E               	goto	u2490
  4349  038D                     u2491:
  4350  038D  2B94               	goto	l2414
  4351  038E                     __ccov349_end_blk4:
  4352  038E                     u2490:
  4353  038E                     __ccov350_start_blk5:
  4354  038E                     l2412:
  4355  038E  1621               	bsf	__ccovbit5_170/(0+8),__ccovbit5_170& (0+7)	;volatile
  4356  038F  3001               	movlw	1
  4357  0390  00F5               	movwf	??_get_jump
  4358  0391  0875               	movf	??_get_jump,w
  4359  0392  07C9               	addwf	get_jump@jump_counter,f
  4360  0393  2B99               	goto	l2416
  4361  0394                     __ccov350_end_blk5:
  4362  0394                     __ccov351_start_blk7:
  4363  0394                     l2414:
  4364  0394  15A1               	bsf	__ccovbit7_171/(0+8),__ccovbit7_171& (0+7)	;volatile
  4365  0395  30FF               	movlw	255
  4366  0396  00F5               	movwf	??_get_jump
  4367  0397  0875               	movf	??_get_jump,w
  4368  0398  07C9               	addwf	get_jump@jump_counter,f
  4369  0399                     __ccov351_end_blk7:
  4370  0399                     __ccov352_start_blk9:
  4371  0399                     l2416:
  4372                           
  4373                           ;main.c: 705:         if (jump_counter > JUMP_MEAS_COUNT) {
  4374  0399  0849               	movf	get_jump@jump_counter,w
  4375  039A  3A80               	xorlw	128
  4376  039B  3E75               	addlw	-139
  4377  039C  1C03               	skipc
  4378  039D  2B9F               	goto	u2501
  4379  039E  2BA0               	goto	u2500
  4380  039F                     u2501:
  4381  039F  2BA8               	goto	l2424
  4382  03A0                     __ccov352_end_blk9:
  4383  03A0                     u2500:
  4384  03A0                     __ccov353_start_blk10:
  4385  03A0                     l2418:
  4386                           
  4387                           ;main.c: 706:             jump_counter = JUMP_MEAS_COUNT;
  4388  03A0  300A               	movlw	10
  4389  03A1  00F5               	movwf	??_get_jump
  4390  03A2  0875               	movf	??_get_jump,w
  4391  03A3  00C9               	movwf	get_jump@jump_counter
  4392  03A4                     __ccov353_end_blk10:
  4393  03A4                     __ccov354_start_blk11:
  4394  03A4                     l2420:
  4395                           
  4396                           ;main.c: 707:             ff.bits.JUMP_LOW = 0;
  4397  03A4  13F9               	bcf	_ff,7
  4398  03A5                     __ccov354_end_blk11:
  4399  03A5                     __ccov355_start_blk12:
  4400  03A5                     l2422:
  4401  03A5  1521               	bsf	__ccovbit12_172/(0+8),__ccovbit12_172& (0+7)	;volatile
  4402                           
  4403                           ;main.c: 708:             ff.bits.JUMP_HIGH = 1;
  4404  03A6  147A               	bsf	_ff+1,0
  4405                           
  4406                           ;main.c: 709:         } else if (jump_counter<-JUMP_MEAS_COUNT) {
  4407  03A7  2BB7               	goto	l2432
  4408  03A8                     __ccov355_end_blk12:
  4409  03A8                     __ccov356_start_blk14:
  4410  03A8                     l2424:
  4411  03A8  14A1               	bsf	__ccovbit14_173/(0+8),__ccovbit14_173& (0+7)	;volatile
  4412  03A9  0849               	movf	get_jump@jump_counter,w
  4413  03AA  3A80               	xorlw	128
  4414  03AB  3E8A               	addlw	138
  4415  03AC  1803               	skipnc
  4416  03AD  2BAF               	goto	u2511
  4417  03AE  2BB0               	goto	u2510
  4418  03AF                     u2511:
  4419  03AF  2BB7               	goto	l2432
  4420  03B0                     __ccov356_end_blk14:
  4421  03B0                     u2510:
  4422  03B0                     __ccov357_start_blk15:
  4423  03B0                     l2426:
  4424                           
  4425                           ;main.c: 710:             jump_counter = -JUMP_MEAS_COUNT;
  4426  03B0  30F6               	movlw	246
  4427  03B1  00F5               	movwf	??_get_jump
  4428  03B2  0875               	movf	??_get_jump,w
  4429  03B3  00C9               	movwf	get_jump@jump_counter
  4430  03B4                     __ccov357_end_blk15:
  4431  03B4                     __ccov358_start_blk16:
  4432  03B4                     l2428:
  4433                           
  4434                           ;main.c: 711:             ff.bits.JUMP_LOW = 1;
  4435  03B4  17F9               	bsf	_ff,7
  4436  03B5                     __ccov358_end_blk16:
  4437  03B5                     __ccov359_start_blk17:
  4438  03B5                     l2430:
  4439  03B5  1421               	bsf	__ccovbit17_174/(0+8),__ccovbit17_174& (0+7)	;volatile
  4440                           
  4441                           ;main.c: 712:             ff.bits.JUMP_HIGH = 0;
  4442  03B6  107A               	bcf	_ff+1,0
  4443  03B7                     __ccov359_end_blk17:
  4444  03B7                     __ccov360_start_blk20:
  4445  03B7                     l2432:
  4446  03B7  17A0               	bsf	__ccovbit20_175/(0+8),__ccovbit20_175& (0+7)	;volatile
  4447                           
  4448                           ;main.c: 714:         ff.bits.ALLOW_JUMP = 0;
  4449  03B8  1379               	bcf	_ff,6
  4450  03B9                     __ccov360_end_blk20:
  4451  03B9                     __ccov361_start_blk22:
  4452  03B9                     l529:
  4453  03B9  0020               	movlb	0	; select bank0
  4454  03BA  1720               	bsf	__ccovbit22_176/(0+8),__ccovbit22_176& (0+7)	;volatile
  4455  03BB  0008               	return
  4456  03BC                     __end_of_get_jump:
  4457  03BC                     
  4458                           	psect	text22
  4459  0239                     __ptext22:	
  4460 ;; *************** function _get_fun *****************
  4461 ;; Defined at:
  4462 ;;		line 623 in file "main.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;		None
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;		None
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  1    wreg      void 
  4469 ;; Registers used:
  4470 ;;		wreg, status,2, status,0
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMMON   BANK0   BANK1
  4476 ;;      Params:         0       0       0
  4477 ;;      Locals:         0       0       0
  4478 ;;      Temps:          1       0       0
  4479 ;;      Totals:         1       0       0
  4480 ;;Total ram usage:        1 bytes
  4481 ;; Hardware stack levels used: 1
  4482 ;; Hardware stack levels required when called: 7
  4483 ;; This function calls:
  4484 ;;		Nothing
  4485 ;; This function is called by:
  4486 ;;		_main
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490  0239                     _get_fun:	
  4491                           ;psect for function _get_fun
  4492                           
  4493                           
  4494                           ;incstack = 0
  4495                           ; Regs used in _get_fun: [wreg+status,2+status,0]
  4496  0239                     l2376:
  4497                           
  4498                           ;main.c: 625:     if (ff.bits.ALLOW_FUN) {
  4499  0239  1EF9               	btfss	_ff,5
  4500  023A  2A3C               	goto	u2441
  4501  023B  2A3D               	goto	u2440
  4502  023C                     u2441:
  4503  023C  2A7E               	goto	l514
  4504  023D                     __ccov327_end_blk0:
  4505  023D                     u2440:
  4506  023D                     __ccov328_start_blk1:
  4507  023D                     l501:	
  4508                           ;main.c: 627:         static signed char fun_counter;;main.c: 628:         do { LATCbits
      +                          .LATC1 = 1; } while(0);
  4509                           
  4510  023D  0022               	movlb	2	; select bank2
  4511  023E  148E               	bsf	14,1	;volatile
  4512  023F                     __ccov328_end_blk1:
  4513  023F                     __ccov329_start_blk3:
  4514  023F                     l2378:
  4515                           
  4516                           ;main.c: 629:         _delay((unsigned long)((1)*(16000000/4000.0)));
  4517  023F  3006               	movlw	6
  4518  0240  00F5               	movwf	??_get_fun
  4519  0241  3030               	movlw	48
  4520  0242                     u2867:
  4521  0242  0B89               	decfsz	9,f
  4522  0243  2A42               	goto	u2867
  4523  0244  0BF5               	decfsz	??_get_fun,f
  4524  0245  2A42               	goto	u2867
  4525  0246  3200               	nop2
  4526  0247                     __ccov329_end_blk3:
  4527  0247                     __ccov330_start_blk5:
  4528  0247                     l2380:
  4529  0247  0023               	movlb	3	; select bank3
  4530  0248  110E               	bcf	14,2	;volatile
  4531  0249                     __ccov330_end_blk5:
  4532  0249                     __ccov331_start_blk8:
  4533  0249                     l2382:
  4534  0249  0021               	movlb	1	; select bank1
  4535  024A  150E               	bsf	14,2	;volatile
  4536  024B                     __ccov331_end_blk8:
  4537  024B                     __ccov332_start_blk10:
  4538  024B                     l2384:
  4539                           
  4540                           ;main.c: 632:         if (PORTCbits.RC2) fun_counter--;
  4541  024B  0020               	movlb	0	; select bank0
  4542  024C  1D0E               	btfss	14,2	;volatile
  4543  024D  2A4F               	goto	u2451
  4544  024E  2A50               	goto	u2450
  4545  024F                     u2451:
  4546  024F  2A56               	goto	l2388
  4547  0250                     __ccov332_end_blk10:
  4548  0250                     u2450:
  4549  0250                     __ccov333_start_blk11:
  4550  0250                     l2386:
  4551  0250  15A2               	bsf	__ccovbit11_163/(0+8),__ccovbit11_163& (0+7)	;volatile
  4552  0251  30FF               	movlw	255
  4553  0252  00F5               	movwf	??_get_fun
  4554  0253  0875               	movf	??_get_fun,w
  4555  0254  07CA               	addwf	get_fun@fun_counter,f
  4556  0255  2A5B               	goto	l2390
  4557  0256                     __ccov333_end_blk11:
  4558  0256                     __ccov334_start_blk13:
  4559  0256                     l2388:
  4560  0256  1522               	bsf	__ccovbit13_164/(0+8),__ccovbit13_164& (0+7)	;volatile
  4561  0257  3001               	movlw	1
  4562  0258  00F5               	movwf	??_get_fun
  4563  0259  0875               	movf	??_get_fun,w
  4564  025A  07CA               	addwf	get_fun@fun_counter,f
  4565  025B                     __ccov334_end_blk13:
  4566  025B                     __ccov335_start_blk16:
  4567  025B                     l2390:
  4568  025B  0022               	movlb	2	; select bank2
  4569  025C  108E               	bcf	14,1	;volatile
  4570  025D                     __ccov335_end_blk16:
  4571  025D                     __ccov336_start_blk18:
  4572  025D                     l2392:
  4573                           
  4574                           ;main.c: 640:         if (fun_counter > FUN_MEAS_COUNT) {
  4575  025D  0020               	movlb	0	; select bank0
  4576  025E  084A               	movf	get_fun@fun_counter,w
  4577  025F  3A80               	xorlw	128
  4578  0260  3E75               	addlw	-139
  4579  0261  1C03               	skipc
  4580  0262  2A64               	goto	u2461
  4581  0263  2A65               	goto	u2460
  4582  0264                     u2461:
  4583  0264  2A6D               	goto	l2400
  4584  0265                     __ccov336_end_blk18:
  4585  0265                     u2460:
  4586  0265                     __ccov337_start_blk19:
  4587  0265                     l2394:
  4588                           
  4589                           ;main.c: 641:             fun_counter = FUN_MEAS_COUNT;
  4590  0265  300A               	movlw	10
  4591  0266  00F5               	movwf	??_get_fun
  4592  0267  0875               	movf	??_get_fun,w
  4593  0268  00CA               	movwf	get_fun@fun_counter
  4594  0269                     __ccov337_end_blk19:
  4595  0269                     __ccov338_start_blk20:
  4596  0269                     l2396:
  4597                           
  4598                           ;main.c: 642:             ff.bits.FUN_LOW = 0;
  4599  0269  11F9               	bcf	_ff,3
  4600  026A                     __ccov338_end_blk20:
  4601  026A                     __ccov339_start_blk21:
  4602  026A                     l2398:
  4603  026A  14A2               	bsf	__ccovbit21_165/(0+8),__ccovbit21_165& (0+7)	;volatile
  4604                           
  4605                           ;main.c: 643:             ff.bits.FUN_HIGH = 1;
  4606  026B  1579               	bsf	_ff,2
  4607                           
  4608                           ;main.c: 644:         } else if (fun_counter<-FUN_MEAS_COUNT) {
  4609  026C  2A7C               	goto	l2408
  4610  026D                     __ccov339_end_blk21:
  4611  026D                     __ccov340_start_blk23:
  4612  026D                     l2400:
  4613  026D  1422               	bsf	__ccovbit23_166/(0+8),__ccovbit23_166& (0+7)	;volatile
  4614  026E  084A               	movf	get_fun@fun_counter,w
  4615  026F  3A80               	xorlw	128
  4616  0270  3E8A               	addlw	138
  4617  0271  1803               	skipnc
  4618  0272  2A74               	goto	u2471
  4619  0273  2A75               	goto	u2470
  4620  0274                     u2471:
  4621  0274  2A7C               	goto	l2408
  4622  0275                     __ccov340_end_blk23:
  4623  0275                     u2470:
  4624  0275                     __ccov341_start_blk24:
  4625  0275                     l2402:
  4626                           
  4627                           ;main.c: 645:             fun_counter = -FUN_MEAS_COUNT;
  4628  0275  30F6               	movlw	246
  4629  0276  00F5               	movwf	??_get_fun
  4630  0277  0875               	movf	??_get_fun,w
  4631  0278  00CA               	movwf	get_fun@fun_counter
  4632  0279                     __ccov341_end_blk24:
  4633  0279                     __ccov342_start_blk25:
  4634  0279                     l2404:
  4635                           
  4636                           ;main.c: 646:             ff.bits.FUN_LOW = 1;
  4637  0279  15F9               	bsf	_ff,3
  4638  027A                     __ccov342_end_blk25:
  4639  027A                     __ccov343_start_blk26:
  4640  027A                     l2406:
  4641  027A  17A1               	bsf	__ccovbit26_167/(0+8),__ccovbit26_167& (0+7)	;volatile
  4642                           
  4643                           ;main.c: 647:             ff.bits.FUN_HIGH = 0;
  4644  027B  1179               	bcf	_ff,2
  4645  027C                     __ccov343_end_blk26:
  4646  027C                     __ccov344_start_blk29:
  4647  027C                     l2408:
  4648  027C  1721               	bsf	__ccovbit29_168/(0+8),__ccovbit29_168& (0+7)	;volatile
  4649                           
  4650                           ;main.c: 649:         ff.bits.ALLOW_FUN = 0;
  4651  027D  12F9               	bcf	_ff,5
  4652  027E                     __ccov344_end_blk29:
  4653  027E                     __ccov345_start_blk31:
  4654  027E                     l514:
  4655  027E  0020               	movlb	0	; select bank0
  4656  027F  16A1               	bsf	__ccovbit31_169/(0+8),__ccovbit31_169& (0+7)	;volatile
  4657  0280  0008               	return
  4658  0281                     __end_of_get_fun:
  4659  0281                     
  4660                           	psect	text23
  4661  01E7                     __ptext23:	
  4662 ;; *************** function _fun_work *****************
  4663 ;; Defined at:
  4664 ;;		line 331 in file "main.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;		None
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;		None
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  1    wreg      void 
  4671 ;; Registers used:
  4672 ;;		wreg, status,2, status,0, pclath, cstack
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMMON   BANK0   BANK1
  4678 ;;      Params:         0       0       0
  4679 ;;      Locals:         0       0       0
  4680 ;;      Temps:          1       0       0
  4681 ;;      Totals:         1       0       0
  4682 ;;Total ram usage:        1 bytes
  4683 ;; Hardware stack levels used: 1
  4684 ;; Hardware stack levels required when called: 9
  4685 ;; This function calls:
  4686 ;;		_close
  4687 ;;		_open
  4688 ;; This function is called by:
  4689 ;;		_main
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693  01E7                     _fun_work:	
  4694                           ;psect for function _fun_work
  4695                           
  4696                           
  4697                           ;incstack = 0
  4698                           ; Regs used in _fun_work: [wreg+status,2+status,0+pclath+cstack]
  4699  01E7                     l2262:
  4700                           
  4701                           ;main.c: 332:     {;main.c: 333:         if (
  4702  01E7  1DF9               	btfss	_ff,3
  4703  01E8  29EA               	goto	u2121
  4704  01E9  29EB               	goto	u2120
  4705  01EA                     u2121:
  4706  01EA  2A10               	goto	l2280
  4707  01EB                     __ccov185_end_blk0:
  4708  01EB                     u2120:
  4709  01EB                     __ccov186_start_blk1:
  4710  01EB                     l2264:
  4711  01EB  0020               	movlb	0	; select bank0
  4712  01EC  162C               	bsf	__ccovbit1_82/(0+8),__ccovbit1_82& (0+7)	;volatile
  4713  01ED  1979               	btfsc	_ff,2
  4714  01EE  29F0               	goto	u2131
  4715  01EF  29F1               	goto	u2130
  4716  01F0                     u2131:
  4717  01F0  2A10               	goto	l2280
  4718  01F1                     __ccov186_end_blk1:
  4719  01F1                     u2130:
  4720  01F1                     __ccov187_start_blk2:
  4721  01F1                     l2266:
  4722  01F1  15AC               	bsf	__ccovbit2_83/(0+8),__ccovbit2_83& (0+7)	;volatile
  4723  01F2  1CF9               	btfss	_ff,1
  4724  01F3  29F5               	goto	u2141
  4725  01F4  29F6               	goto	u2140
  4726  01F5                     u2141:
  4727  01F5  2A10               	goto	l2280
  4728  01F6                     __ccov187_end_blk2:
  4729  01F6                     u2140:
  4730  01F6                     __ccov188_start_blk3:
  4731  01F6                     l2268:
  4732  01F6  152C               	bsf	__ccovbit3_84/(0+8),__ccovbit3_84& (0+7)	;volatile
  4733  01F7  1DFB               	btfss	_ff+2,3
  4734  01F8  29FA               	goto	u2151
  4735  01F9  29FB               	goto	u2150
  4736  01FA                     u2151:
  4737  01FA  2A10               	goto	l2280
  4738  01FB                     __ccov188_end_blk3:
  4739  01FB                     u2150:
  4740  01FB                     __ccov189_start_blk4:
  4741  01FB                     l2270:
  4742  01FB  14AC               	bsf	__ccovbit4_85/(0+8),__ccovbit4_85& (0+7)	;volatile
  4743  01FC  197A               	btfsc	_ff+1,2
  4744  01FD  29FF               	goto	u2161
  4745  01FE  2A00               	goto	u2160
  4746  01FF                     u2161:
  4747  01FF  2A10               	goto	l2280
  4748  0200                     __ccov189_end_blk4:
  4749  0200                     u2160:
  4750  0200                     __ccov190_start_blk5:
  4751  0200                     l2272:
  4752  0200  142C               	bsf	__ccovbit5_86/(0+8),__ccovbit5_86& (0+7)	;volatile
  4753  0201  18FA               	btfsc	_ff+1,1
  4754  0202  2A04               	goto	u2171
  4755  0203  2A05               	goto	u2170
  4756  0204                     u2171:
  4757  0204  2A10               	goto	l2280
  4758  0205                     __ccov190_end_blk5:
  4759  0205                     u2170:
  4760  0205                     __ccov191_start_blk6:
  4761  0205                     l2274:
  4762  0205  17AB               	bsf	__ccovbit6_87/(0+8),__ccovbit6_87& (0+7)	;volatile
  4763  0206  187C               	btfsc	_ff+3,0
  4764  0207  2A09               	goto	u2181
  4765  0208  2A0A               	goto	u2180
  4766  0209                     u2181:
  4767  0209  2A10               	goto	l2280
  4768  020A                     __ccov191_end_blk6:
  4769  020A                     u2180:
  4770  020A                     __ccov192_start_blk7:
  4771  020A                     l2276:
  4772                           
  4773                           ;main.c: 340:                 !ff.bits.AUTOROTATION_WORK) {;main.c: 341:             bee
      +                          p_short_count = 1;
  4774  020A  01FD               	clrf	_beep_short_count
  4775  020B  0AFD               	incf	_beep_short_count,f
  4776  020C                     __ccov192_end_blk7:
  4777  020C                     __ccov193_start_blk8:
  4778  020C                     l2278:
  4779  020C  172B               	bsf	__ccovbit8_88/(0+8),__ccovbit8_88& (0+7)	;volatile
  4780                           
  4781                           ;main.c: 342:             open();
  4782  020D  3184  24A4  3181   	fcall	_open
  4783  0210                     __ccov193_end_blk8:
  4784  0210                     __ccov194_start_blk10:
  4785  0210                     l2280:
  4786                           
  4787                           ;main.c: 344:         if (
  4788  0210  1D79               	btfss	_ff,2
  4789  0211  2A13               	goto	u2191
  4790  0212  2A14               	goto	u2190
  4791  0213                     u2191:
  4792  0213  2A36               	goto	l387
  4793  0214                     __ccov194_end_blk10:
  4794  0214                     u2190:
  4795  0214                     __ccov195_start_blk11:
  4796  0214                     l2282:
  4797  0214  0020               	movlb	0	; select bank0
  4798  0215  16AB               	bsf	__ccovbit11_89/(0+8),__ccovbit11_89& (0+7)	;volatile
  4799  0216  1DFB               	btfss	_ff+2,3
  4800  0217  2A19               	goto	u2201
  4801  0218  2A1A               	goto	u2200
  4802  0219                     u2201:
  4803  0219  2A36               	goto	l387
  4804  021A                     __ccov195_end_blk11:
  4805  021A                     u2200:
  4806  021A                     __ccov196_start_blk12:
  4807  021A                     l2284:
  4808  021A  162B               	bsf	__ccovbit12_90/(0+8),__ccovbit12_90& (0+7)	;volatile
  4809  021B  19F9               	btfsc	_ff,3
  4810  021C  2A1E               	goto	u2211
  4811  021D  2A1F               	goto	u2210
  4812  021E                     u2211:
  4813  021E  2A36               	goto	l387
  4814  021F                     __ccov196_end_blk12:
  4815  021F                     u2210:
  4816  021F                     __ccov197_start_blk13:
  4817  021F                     l2286:
  4818  021F  15AB               	bsf	__ccovbit13_91/(0+8),__ccovbit13_91& (0+7)	;volatile
  4819  0220  1A7A               	btfsc	_ff+1,4
  4820  0221  2A23               	goto	u2221
  4821  0222  2A24               	goto	u2220
  4822  0223                     u2221:
  4823  0223  2A36               	goto	l387
  4824  0224                     __ccov197_end_blk13:
  4825  0224                     u2220:
  4826  0224                     __ccov198_start_blk14:
  4827  0224                     l2288:
  4828  0224  152B               	bsf	__ccovbit14_92/(0+8),__ccovbit14_92& (0+7)	;volatile
  4829  0225  19FA               	btfsc	_ff+1,3
  4830  0226  2A28               	goto	u2231
  4831  0227  2A29               	goto	u2230
  4832  0228                     u2231:
  4833  0228  2A36               	goto	l387
  4834  0229                     __ccov198_end_blk14:
  4835  0229                     u2230:
  4836  0229                     __ccov199_start_blk15:
  4837  0229                     l2290:
  4838  0229  14AB               	bsf	__ccovbit15_93/(0+8),__ccovbit15_93& (0+7)	;volatile
  4839  022A  187C               	btfsc	_ff+3,0
  4840  022B  2A2D               	goto	u2241
  4841  022C  2A2E               	goto	u2240
  4842  022D                     u2241:
  4843  022D  2A36               	goto	l387
  4844  022E                     __ccov199_end_blk15:
  4845  022E                     u2240:
  4846  022E                     __ccov200_start_blk16:
  4847  022E                     l2292:
  4848                           
  4849                           ;main.c: 350:                 !ff.bits.AUTOROTATION_WORK) {;main.c: 351:             bee
      +                          p_short_count = 2;
  4850  022E  3002               	movlw	2
  4851  022F  00F5               	movwf	??_fun_work
  4852  0230  0875               	movf	??_fun_work,w
  4853  0231  00FD               	movwf	_beep_short_count
  4854  0232                     __ccov200_end_blk16:
  4855  0232                     __ccov201_start_blk17:
  4856  0232                     l2294:
  4857  0232  142B               	bsf	__ccovbit17_94/(0+8),__ccovbit17_94& (0+7)	;volatile
  4858                           
  4859                           ;main.c: 352:             close();
  4860  0233  3184  2483  3181   	fcall	_close
  4861  0236                     __ccov201_end_blk17:
  4862  0236                     __ccov202_start_blk19:
  4863  0236                     l387:
  4864  0236  0020               	movlb	0	; select bank0
  4865  0237  17AA               	bsf	__ccovbit19_95/(0+8),__ccovbit19_95& (0+7)	;volatile
  4866  0238  0008               	return
  4867  0239                     __end_of_fun_work:
  4868  0239                     
  4869                           	psect	text24
  4870  0483                     __ptext24:	
  4871 ;; *************** function _close *****************
  4872 ;; Defined at:
  4873 ;;		line 249 in file "main.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;		None
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;		None
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  1    wreg      void 
  4880 ;; Registers used:
  4881 ;;		wreg, status,2, status,0, pclath, cstack
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMMON   BANK0   BANK1
  4887 ;;      Params:         0       0       0
  4888 ;;      Locals:         0       0       0
  4889 ;;      Temps:          0       0       0
  4890 ;;      Totals:         0       0       0
  4891 ;;Total ram usage:        0 bytes
  4892 ;; Hardware stack levels used: 1
  4893 ;; Hardware stack levels required when called: 8
  4894 ;; This function calls:
  4895 ;;		_go_close
  4896 ;;		_go_close_alt
  4897 ;;		_rele_off
  4898 ;; This function is called by:
  4899 ;;		_fun_work
  4900 ;;		_main
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904  0483                     _close:	
  4905                           ;psect for function _close
  4906                           
  4907                           
  4908                           ;incstack = 0
  4909                           ; Regs used in _close: [wreg+status,2+status,0+pclath+cstack]
  4910  0483                     l2188:
  4911                           
  4912                           ;main.c: 250:     if (ff.bits.OPENING) {
  4913  0483  1CFA               	btfss	_ff+1,1
  4914  0484  2C86               	goto	u1971
  4915  0485  2C87               	goto	u1970
  4916  0486                     u1971:
  4917  0486  2C8D               	goto	l349
  4918  0487                     __ccov147_end_blk0:
  4919  0487                     u1970:
  4920  0487                     __ccov148_start_blk1:
  4921  0487                     l2190:
  4922  0487  0020               	movlb	0	; select bank0
  4923  0488  162F               	bsf	__ccovbit1_58/(0+8),__ccovbit1_58& (0+7)	;volatile
  4924                           
  4925                           ;main.c: 251:         rele_off();
  4926  0489  3185  25B9  3184   	fcall	_rele_off
  4927                           
  4928                           ;main.c: 252:     } else {
  4929  048C  2CA1               	goto	l354
  4930  048D                     __ccov148_end_blk1:
  4931  048D                     __ccov149_start_blk2:
  4932  048D                     l349:
  4933                           
  4934                           ;main.c: 253:         if (ff.bits.NORMAL_WORK_MODE_ON) {
  4935  048D  1E7B               	btfss	_ff+2,4
  4936  048E  2C90               	goto	u1981
  4937  048F  2C91               	goto	u1980
  4938  0490                     u1981:
  4939  0490  2C97               	goto	l351
  4940  0491                     __ccov149_end_blk2:
  4941  0491                     u1980:
  4942  0491                     __ccov150_start_blk3:
  4943  0491                     l2192:
  4944  0491  0020               	movlb	0	; select bank0
  4945  0492  15AF               	bsf	__ccovbit3_59/(0+8),__ccovbit3_59& (0+7)	;volatile
  4946                           
  4947                           ;main.c: 254:             go_close();
  4948  0493  3183  23E8  3184   	fcall	_go_close
  4949                           
  4950                           ;main.c: 255:         } else if (ff.bits.UNIVERSAL_VORK_MODE_ON) {
  4951  0496  2CA1               	goto	l354
  4952  0497                     __ccov150_end_blk3:
  4953  0497                     __ccov151_start_blk4:
  4954  0497                     l351:
  4955  0497  0020               	movlb	0	; select bank0
  4956  0498  152F               	bsf	__ccovbit4_60/(0+8),__ccovbit4_60& (0+7)	;volatile
  4957  0499  1EFB               	btfss	_ff+2,5
  4958  049A  2C9C               	goto	u1991
  4959  049B  2C9D               	goto	u1990
  4960  049C                     u1991:
  4961  049C  2CA1               	goto	l354
  4962  049D                     __ccov151_end_blk4:
  4963  049D                     u1990:
  4964  049D                     __ccov152_start_blk5:
  4965  049D                     l2194:
  4966  049D  14AF               	bsf	__ccovbit5_61/(0+8),__ccovbit5_61& (0+7)	;volatile
  4967                           
  4968                           ;main.c: 256:             go_close_alt();
  4969  049E  3185  258C  3184   	fcall	_go_close_alt
  4970  04A1                     __ccov152_end_blk5:
  4971  04A1                     __ccov153_start_blk9:
  4972  04A1                     l354:
  4973  04A1  0020               	movlb	0	; select bank0
  4974  04A2  142F               	bsf	__ccovbit9_62/(0+8),__ccovbit9_62& (0+7)	;volatile
  4975  04A3  0008               	return
  4976  04A4                     __end_of_close:
  4977  04A4                     
  4978                           	psect	text25
  4979  058C                     __ptext25:	
  4980 ;; *************** function _go_close_alt *****************
  4981 ;; Defined at:
  4982 ;;		line 213 in file "main.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;		None
  4985 ;; Auto vars:     Size  Location     Type
  4986 ;;		None
  4987 ;; Return value:  Size  Location     Type
  4988 ;;                  1    wreg      void 
  4989 ;; Registers used:
  4990 ;;		None
  4991 ;; Tracked objects:
  4992 ;;		On entry : 0/0
  4993 ;;		On exit  : 0/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMMON   BANK0   BANK1
  4996 ;;      Params:         0       0       0
  4997 ;;      Locals:         0       0       0
  4998 ;;      Temps:          0       0       0
  4999 ;;      Totals:         0       0       0
  5000 ;;Total ram usage:        0 bytes
  5001 ;; Hardware stack levels used: 1
  5002 ;; Hardware stack levels required when called: 7
  5003 ;; This function calls:
  5004 ;;		Nothing
  5005 ;; This function is called by:
  5006 ;;		_close
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010  058C                     _go_close_alt:	
  5011                           ;psect for function _go_close_alt
  5012                           
  5013                           
  5014                           ;incstack = 0
  5015                           ; Regs used in _go_close_alt: []
  5016  058C                     l1378:
  5017                           
  5018                           ;main.c: 215:     if ((!ff.bits.CLOSED && ff.bits.MOVING_ALLOWED) || ff.bits.ALARM_ON) {
  5019  058C  1A7A               	btfsc	_ff+1,4
  5020  058D  2D8F               	goto	u251
  5021  058E  2D90               	goto	u250
  5022  058F                     u251:
  5023  058F  2D96               	goto	l336
  5024  0590                     __ccov133_end_blk0:
  5025  0590                     u250:
  5026  0590                     __ccov134_start_blk1:
  5027  0590                     l1380:
  5028  0590  0020               	movlb	0	; select bank0
  5029  0591  1730               	bsf	__ccovbit1_48/(0+8),__ccovbit1_48& (0+7)	;volatile
  5030  0592  19FB               	btfsc	_ff+2,3
  5031  0593  2D95               	goto	u261
  5032  0594  2D96               	goto	u260
  5033  0595                     u261:
  5034  0595  2D9C               	goto	l334
  5035  0596                     __ccov134_end_blk1:
  5036  0596                     u260:
  5037  0596                     __ccov135_start_blk2:
  5038  0596                     l336:
  5039  0596  0020               	movlb	0	; select bank0
  5040  0597  16B0               	bsf	__ccovbit2_49/(0+8),__ccovbit2_49& (0+7)	;volatile
  5041  0598  1C79               	btfss	_ff,0
  5042  0599  2D9B               	goto	u271
  5043  059A  2D9C               	goto	u270
  5044  059B                     u271:
  5045  059B  2DA1               	goto	l337
  5046  059C                     __ccov135_end_blk2:
  5047  059C                     u270:
  5048  059C                     __ccov136_start_blk3:
  5049  059C                     l334:
  5050  059C  1630               	bsf	__ccovbit3_50/(0+8),__ccovbit3_50& (0+7)	;volatile
  5051                           
  5052                           ;main.c: 216:         ff.bits.OPENED = 0;
  5053  059D  117A               	bcf	_ff+1,2
  5054                           
  5055                           ;main.c: 217:         ff.bits.CLOSED = 1;
  5056  059E  167A               	bsf	_ff+1,4
  5057                           
  5058                           ;main.c: 219:         ff.bits.RELE_CONTROL_ON = 0;
  5059  059F  137A               	bcf	_ff+1,6
  5060                           
  5061                           ;main.c: 220:         ff.bits.RELE_POWER_ON = 1;
  5062  05A0  16FA               	bsf	_ff+1,5
  5063  05A1                     __ccov136_end_blk3:
  5064  05A1                     __ccov137_start_blk5:
  5065  05A1                     l337:
  5066  05A1  15B0               	bsf	__ccovbit5_51/(0+8),__ccovbit5_51& (0+7)	;volatile
  5067  05A2  0008               	return
  5068  05A3                     __end_of_go_close_alt:
  5069  05A3                     
  5070                           	psect	text26
  5071  03E8                     __ptext26:	
  5072 ;; *************** function _go_close *****************
  5073 ;; Defined at:
  5074 ;;		line 159 in file "main.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;		None
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;		None
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		wreg
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMMON   BANK0   BANK1
  5088 ;;      Params:         0       0       0
  5089 ;;      Locals:         0       0       0
  5090 ;;      Temps:          0       0       0
  5091 ;;      Totals:         0       0       0
  5092 ;;Total ram usage:        0 bytes
  5093 ;; Hardware stack levels used: 1
  5094 ;; Hardware stack levels required when called: 7
  5095 ;; This function calls:
  5096 ;;		Nothing
  5097 ;; This function is called by:
  5098 ;;		_close
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102  03E8                     _go_close:	
  5103                           ;psect for function _go_close
  5104                           
  5105                           
  5106                           ;incstack = 0
  5107                           ; Regs used in _go_close: [wreg]
  5108  03E8                     l2042:
  5109                           
  5110                           ;main.c: 161:     if (!ff.bits.CLOSING && !ff.bits.CLOSED && ff.bits.MOVING_ALLOWED) {
  5111  03E8  19FA               	btfsc	_ff+1,3
  5112  03E9  2BEB               	goto	u1581
  5113  03EA  2BEC               	goto	u1580
  5114  03EB                     u1581:
  5115  03EB  2C0F               	goto	l321
  5116  03EC                     __ccov115_end_blk0:
  5117  03EC                     u1580:
  5118  03EC                     __ccov116_start_blk1:
  5119  03EC                     l2044:
  5120  03EC  0020               	movlb	0	; select bank0
  5121  03ED  1532               	bsf	__ccovbit1_36/(0+8),__ccovbit1_36& (0+7)	;volatile
  5122  03EE  1A7A               	btfsc	_ff+1,4
  5123  03EF  2BF1               	goto	u1591
  5124  03F0  2BF2               	goto	u1590
  5125  03F1                     u1591:
  5126  03F1  2C0F               	goto	l321
  5127  03F2                     __ccov116_end_blk1:
  5128  03F2                     u1590:
  5129  03F2                     __ccov117_start_blk2:
  5130  03F2                     l2046:
  5131  03F2  14B2               	bsf	__ccovbit2_37/(0+8),__ccovbit2_37& (0+7)	;volatile
  5132  03F3  1DFB               	btfss	_ff+2,3
  5133  03F4  2BF6               	goto	u1601
  5134  03F5  2BF7               	goto	u1600
  5135  03F6                     u1601:
  5136  03F6  2C0F               	goto	l321
  5137  03F7                     __ccov117_end_blk2:
  5138  03F7                     u1600:
  5139  03F7                     __ccov118_start_blk3:
  5140  03F7                     l2048:
  5141                           
  5142                           ;main.c: 162:         ff.bits.CLOSING = 1;
  5143  03F7  15FA               	bsf	_ff+1,3
  5144                           
  5145                           ;main.c: 163:         ff.bits.OPENED = 0;
  5146  03F8  117A               	bcf	_ff+1,2
  5147                           
  5148                           ;main.c: 164:         ff.bits.OPENING = 0;
  5149  03F9  10FA               	bcf	_ff+1,1
  5150                           
  5151                           ;main.c: 166:         ff.bits.RELE_POWER_ON = 0;
  5152  03FA  12FA               	bcf	_ff+1,5
  5153                           
  5154                           ;main.c: 167:         ff.bits.RELE_CONTROL_ON = 1;
  5155  03FB  177A               	bsf	_ff+1,6
  5156  03FC                     __ccov118_end_blk3:
  5157  03FC                     __ccov119_start_blk4:
  5158  03FC                     l2050:
  5159  03FC  1432               	bsf	__ccovbit4_38/(0+8),__ccovbit4_38& (0+7)	;volatile
  5160                           
  5161                           ;main.c: 169:         time_rele_control = RELE_GAP + RELE_POWER_WORK_DELAY + RELE_GAP;
  5162  03FD  307A               	movlw	122
  5163  03FE  00C3               	movwf	_time_rele_control
  5164  03FF  3000               	movlw	0
  5165  0400  00C4               	movwf	_time_rele_control+1
  5166                           
  5167                           ;main.c: 170:         time_rele_power = RELE_POWER_WORK_DELAY;
  5168  0401  3078               	movlw	120
  5169  0402  00C5               	movwf	_time_rele_power
  5170  0403  3000               	movlw	0
  5171  0404  00C6               	movwf	_time_rele_power+1
  5172                           
  5173                           ;main.c: 171:         time_rele_gap = RELE_GAP;
  5174  0405  3001               	movlw	1
  5175  0406  00C1               	movwf	_time_rele_gap
  5176  0407  3000               	movlw	0
  5177  0408  00C2               	movwf	_time_rele_gap+1
  5178                           
  5179                           ;main.c: 173:         time_rotation = 0;
  5180  0409  3000               	movlw	0
  5181  040A  00B4               	movwf	_time_rotation
  5182  040B  3000               	movlw	0
  5183  040C  00B5               	movwf	_time_rotation+1
  5184  040D  3000               	movlw	0
  5185  040E  00B6               	movwf	_time_rotation+2
  5186  040F                     __ccov119_end_blk4:
  5187  040F                     __ccov120_start_blk6:
  5188  040F                     l321:
  5189  040F  0020               	movlb	0	; select bank0
  5190  0410  17B1               	bsf	__ccovbit6_39/(0+8),__ccovbit6_39& (0+7)	;volatile
  5191  0411  0008               	return
  5192  0412                     __end_of_go_close:
  5193  0412                     
  5194                           	psect	text27
  5195  018D                     __ptext27:	
  5196 ;; *************** function _autorotation_work *****************
  5197 ;; Defined at:
  5198 ;;		line 377 in file "main.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;		None
  5201 ;; Auto vars:     Size  Location     Type
  5202 ;;		None
  5203 ;; Return value:  Size  Location     Type
  5204 ;;                  1    wreg      void 
  5205 ;; Registers used:
  5206 ;;		wreg, status,2, status,0, pclath, cstack
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMMON   BANK0   BANK1
  5212 ;;      Params:         0       0       0
  5213 ;;      Locals:         0       0       0
  5214 ;;      Temps:          0       0       0
  5215 ;;      Totals:         0       0       0
  5216 ;;Total ram usage:        0 bytes
  5217 ;; Hardware stack levels used: 1
  5218 ;; Hardware stack levels required when called: 9
  5219 ;; This function calls:
  5220 ;;		_go_close_short
  5221 ;;		_open
  5222 ;; This function is called by:
  5223 ;;		_main
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           
  5227  018D                     _autorotation_work:	
  5228                           ;psect for function _autorotation_work
  5229                           
  5230                           
  5231                           ;incstack = 0
  5232                           ; Regs used in _autorotation_work: [wreg+status,2+status,0+pclath+cstack]
  5233  018D                     l2314:
  5234                           
  5235                           ;main.c: 379:    if ((time_rotation > (AUTOROTATION_DELAY + RELE_POWER_AUTOROTATION_DELA
      +                          Y + RELE_GAP * 2)) &&
  5236  018D  3000               	movlw	0
  5237  018E  0020               	movlb	0	; select bank0
  5238  018F  0236               	subwf	_time_rotation+2,w
  5239  0190  1D03               	skipz
  5240  0191  2998               	goto	u2295
  5241  0192  3001               	movlw	1
  5242  0193  0235               	subwf	_time_rotation+1,w
  5243  0194  1D03               	skipz
  5244  0195  2998               	goto	u2295
  5245  0196  3048               	movlw	72
  5246  0197  0234               	subwf	_time_rotation,w
  5247  0198                     u2295:
  5248  0198  1C03               	skipc
  5249  0199  299B               	goto	u2291
  5250  019A  299C               	goto	u2290
  5251  019B                     u2291:
  5252  019B  29BD               	goto	l2330
  5253  019C                     __ccov214_end_blk0:
  5254  019C                     u2290:
  5255  019C                     __ccov215_start_blk1:
  5256  019C                     l2316:
  5257  019C  142A               	bsf	__ccovbit1_102/(0+8),__ccovbit1_102& (0+7)	;volatile
  5258  019D  197A               	btfsc	_ff+1,2
  5259  019E  29A0               	goto	u2301
  5260  019F  29A1               	goto	u2300
  5261  01A0                     u2301:
  5262  01A0  29BD               	goto	l2330
  5263  01A1                     __ccov215_end_blk1:
  5264  01A1                     u2300:
  5265  01A1                     __ccov216_start_blk2:
  5266  01A1                     l2318:
  5267  01A1  17A9               	bsf	__ccovbit2_103/(0+8),__ccovbit2_103& (0+7)	;volatile
  5268  01A2  18FA               	btfsc	_ff+1,1
  5269  01A3  29A5               	goto	u2311
  5270  01A4  29A6               	goto	u2310
  5271  01A5                     u2311:
  5272  01A5  29BD               	goto	l2330
  5273  01A6                     __ccov216_end_blk2:
  5274  01A6                     u2310:
  5275  01A6                     __ccov217_start_blk3:
  5276  01A6                     l2320:
  5277  01A6  1729               	bsf	__ccovbit3_104/(0+8),__ccovbit3_104& (0+7)	;volatile
  5278  01A7  1CF9               	btfss	_ff,1
  5279  01A8  29AA               	goto	u2321
  5280  01A9  29AB               	goto	u2320
  5281  01AA                     u2321:
  5282  01AA  29BD               	goto	l2330
  5283  01AB                     __ccov217_end_blk3:
  5284  01AB                     u2320:
  5285  01AB                     __ccov218_start_blk4:
  5286  01AB                     l2322:
  5287  01AB  16A9               	bsf	__ccovbit4_105/(0+8),__ccovbit4_105& (0+7)	;volatile
  5288  01AC  1E7B               	btfss	_ff+2,4
  5289  01AD  29AF               	goto	u2331
  5290  01AE  29B0               	goto	u2330
  5291  01AF                     u2331:
  5292  01AF  29BD               	goto	l2330
  5293  01B0                     __ccov218_end_blk4:
  5294  01B0                     u2330:
  5295  01B0                     __ccov219_start_blk5:
  5296  01B0                     l2324:
  5297                           
  5298                           ;main.c: 384:             ) {;main.c: 385:         open();
  5299  01B0  3184  24A4  3181   	fcall	_open
  5300  01B3                     __ccov219_end_blk5:
  5301  01B3                     __ccov220_start_blk6:
  5302  01B3                     l2326:
  5303                           
  5304                           ;main.c: 386:         beep_short_count=1;
  5305  01B3  01FD               	clrf	_beep_short_count
  5306  01B4  0AFD               	incf	_beep_short_count,f
  5307  01B5                     __ccov220_end_blk6:
  5308  01B5                     __ccov221_start_blk7:
  5309  01B5                     l2328:
  5310  01B5  0020               	movlb	0	; select bank0
  5311  01B6  1629               	bsf	__ccovbit7_106/(0+8),__ccovbit7_106& (0+7)	;volatile
  5312                           
  5313                           ;main.c: 388:         time_rotation = 0;
  5314  01B7  3000               	movlw	0
  5315  01B8  00B4               	movwf	_time_rotation
  5316  01B9  3000               	movlw	0
  5317  01BA  00B5               	movwf	_time_rotation+1
  5318  01BB  3000               	movlw	0
  5319  01BC  00B6               	movwf	_time_rotation+2
  5320  01BD                     __ccov221_end_blk7:
  5321  01BD                     __ccov222_start_blk9:
  5322  01BD                     l2330:
  5323                           
  5324                           ;main.c: 391:    if ((time_rotation > AUTOROTATION_DELAY) &&
  5325  01BD  3000               	movlw	0
  5326  01BE  0236               	subwf	_time_rotation+2,w
  5327  01BF  1D03               	skipz
  5328  01C0  29C7               	goto	u2345
  5329  01C1  3001               	movlw	1
  5330  01C2  0235               	subwf	_time_rotation+1,w
  5331  01C3  1D03               	skipz
  5332  01C4  29C7               	goto	u2345
  5333  01C5  302D               	movlw	45
  5334  01C6  0234               	subwf	_time_rotation,w
  5335  01C7                     u2345:
  5336  01C7  1C03               	skipc
  5337  01C8  29CA               	goto	u2341
  5338  01C9  29CB               	goto	u2340
  5339  01CA                     u2341:
  5340  01CA  29E5               	goto	l400
  5341  01CB                     __ccov222_end_blk9:
  5342  01CB                     u2340:
  5343  01CB                     __ccov223_start_blk10:
  5344  01CB                     l2332:
  5345  01CB  15A9               	bsf	__ccovbit10_107/(0+8),__ccovbit10_107& (0+7)	;volatile
  5346  01CC  1A7A               	btfsc	_ff+1,4
  5347  01CD  29CF               	goto	u2351
  5348  01CE  29D0               	goto	u2350
  5349  01CF                     u2351:
  5350  01CF  29E5               	goto	l400
  5351  01D0                     __ccov223_end_blk10:
  5352  01D0                     u2350:
  5353  01D0                     __ccov224_start_blk11:
  5354  01D0                     l2334:
  5355  01D0  1529               	bsf	__ccovbit11_108/(0+8),__ccovbit11_108& (0+7)	;volatile
  5356  01D1  19FA               	btfsc	_ff+1,3
  5357  01D2  29D4               	goto	u2361
  5358  01D3  29D5               	goto	u2360
  5359  01D4                     u2361:
  5360  01D4  29E5               	goto	l400
  5361  01D5                     __ccov224_end_blk11:
  5362  01D5                     u2360:
  5363  01D5                     __ccov225_start_blk12:
  5364  01D5                     l2336:
  5365  01D5  14A9               	bsf	__ccovbit12_109/(0+8),__ccovbit12_109& (0+7)	;volatile
  5366  01D6  1CF9               	btfss	_ff,1
  5367  01D7  29D9               	goto	u2371
  5368  01D8  29DA               	goto	u2370
  5369  01D9                     u2371:
  5370  01D9  29E5               	goto	l400
  5371  01DA                     __ccov225_end_blk12:
  5372  01DA                     u2370:
  5373  01DA                     __ccov226_start_blk13:
  5374  01DA                     l2338:
  5375  01DA  1429               	bsf	__ccovbit13_110/(0+8),__ccovbit13_110& (0+7)	;volatile
  5376  01DB  1E7B               	btfss	_ff+2,4
  5377  01DC  29DE               	goto	u2381
  5378  01DD  29DF               	goto	u2380
  5379  01DE                     u2381:
  5380  01DE  29E5               	goto	l400
  5381  01DF                     __ccov226_end_blk13:
  5382  01DF                     u2380:
  5383  01DF                     __ccov227_start_blk14:
  5384  01DF                     l2340:
  5385                           
  5386                           ;main.c: 396:             ) {;main.c: 398:               go_close_short();
  5387  01DF  3184  245F  3181   	fcall	_go_close_short
  5388  01E2                     __ccov227_end_blk14:
  5389  01E2                     __ccov228_start_blk15:
  5390  01E2                     l2342:
  5391  01E2  0020               	movlb	0	; select bank0
  5392  01E3  17A8               	bsf	__ccovbit15_111/(0+8),__ccovbit15_111& (0+7)	;volatile
  5393                           
  5394                           ;main.c: 399:               ff.bits.AUTOROTATION_WORK = 1;
  5395  01E4  147C               	bsf	_ff+3,0
  5396  01E5                     __ccov228_end_blk15:
  5397  01E5                     __ccov229_start_blk17:
  5398  01E5                     l400:
  5399  01E5  1728               	bsf	__ccovbit17_112/(0+8),__ccovbit17_112& (0+7)	;volatile
  5400  01E6  0008               	return
  5401  01E7                     __end_of_autorotation_work:
  5402  01E7                     
  5403                           	psect	text28
  5404  04A4                     __ptext28:	
  5405 ;; *************** function _open *****************
  5406 ;; Defined at:
  5407 ;;		line 261 in file "main.c"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;		None
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;		None
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  1    wreg      void 
  5414 ;; Registers used:
  5415 ;;		wreg, status,2, status,0, pclath, cstack
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMMON   BANK0   BANK1
  5421 ;;      Params:         0       0       0
  5422 ;;      Locals:         0       0       0
  5423 ;;      Temps:          0       0       0
  5424 ;;      Totals:         0       0       0
  5425 ;;Total ram usage:        0 bytes
  5426 ;; Hardware stack levels used: 1
  5427 ;; Hardware stack levels required when called: 8
  5428 ;; This function calls:
  5429 ;;		_go_open
  5430 ;;		_go_open_alt
  5431 ;;		_rele_off
  5432 ;; This function is called by:
  5433 ;;		_fun_work
  5434 ;;		_autorotation_work
  5435 ;; This function uses a non-reentrant model
  5436 ;;
  5437                           
  5438  04A4                     _open:	
  5439                           ;psect for function _open
  5440                           
  5441                           
  5442                           ;incstack = 0
  5443                           ; Regs used in _open: [wreg+status,2+status,0+pclath+cstack]
  5444  04A4                     l2196:
  5445                           
  5446                           ;main.c: 262:     if (ff.bits.CLOSING) {
  5447  04A4  1DFA               	btfss	_ff+1,3
  5448  04A5  2CA7               	goto	u2001
  5449  04A6  2CA8               	goto	u2000
  5450  04A7                     u2001:
  5451  04A7  2CAE               	goto	l357
  5452  04A8                     __ccov154_end_blk0:
  5453  04A8                     u2000:
  5454  04A8                     __ccov155_start_blk1:
  5455  04A8                     l2198:
  5456  04A8  0020               	movlb	0	; select bank0
  5457  04A9  17AE               	bsf	__ccovbit1_63/(0+8),__ccovbit1_63& (0+7)	;volatile
  5458                           
  5459                           ;main.c: 263:         rele_off();
  5460  04AA  3185  25B9  3184   	fcall	_rele_off
  5461                           
  5462                           ;main.c: 264:     } else {
  5463  04AD  2CC2               	goto	l362
  5464  04AE                     __ccov155_end_blk1:
  5465  04AE                     __ccov156_start_blk2:
  5466  04AE                     l357:
  5467                           
  5468                           ;main.c: 265:         if (ff.bits.NORMAL_WORK_MODE_ON) {
  5469  04AE  1E7B               	btfss	_ff+2,4
  5470  04AF  2CB1               	goto	u2011
  5471  04B0  2CB2               	goto	u2010
  5472  04B1                     u2011:
  5473  04B1  2CB8               	goto	l359
  5474  04B2                     __ccov156_end_blk2:
  5475  04B2                     u2010:
  5476  04B2                     __ccov157_start_blk3:
  5477  04B2                     l2200:
  5478  04B2  0020               	movlb	0	; select bank0
  5479  04B3  172E               	bsf	__ccovbit3_64/(0+8),__ccovbit3_64& (0+7)	;volatile
  5480                           
  5481                           ;main.c: 266:             go_open();
  5482  04B4  3184  24C5  3184   	fcall	_go_open
  5483                           
  5484                           ;main.c: 267:         } else if (ff.bits.UNIVERSAL_VORK_MODE_ON) {
  5485  04B7  2CC2               	goto	l362
  5486  04B8                     __ccov157_end_blk3:
  5487  04B8                     __ccov158_start_blk4:
  5488  04B8                     l359:
  5489  04B8  0020               	movlb	0	; select bank0
  5490  04B9  16AE               	bsf	__ccovbit4_65/(0+8),__ccovbit4_65& (0+7)	;volatile
  5491  04BA  1EFB               	btfss	_ff+2,5
  5492  04BB  2CBD               	goto	u2021
  5493  04BC  2CBE               	goto	u2020
  5494  04BD                     u2021:
  5495  04BD  2CC2               	goto	l362
  5496  04BE                     __ccov158_end_blk4:
  5497  04BE                     u2020:
  5498  04BE                     __ccov159_start_blk5:
  5499  04BE                     l2202:
  5500  04BE  162E               	bsf	__ccovbit5_66/(0+8),__ccovbit5_66& (0+7)	;volatile
  5501                           
  5502                           ;main.c: 268:             go_open_alt();
  5503  04BF  3185  25F5  3184   	fcall	_go_open_alt
  5504  04C2                     __ccov159_end_blk5:
  5505  04C2                     __ccov160_start_blk9:
  5506  04C2                     l362:
  5507  04C2  0020               	movlb	0	; select bank0
  5508  04C3  15AE               	bsf	__ccovbit9_67/(0+8),__ccovbit9_67& (0+7)	;volatile
  5509  04C4  0008               	return
  5510  04C5                     __end_of_open:
  5511  04C5                     
  5512                           	psect	text29
  5513  05B9                     __ptext29:	
  5514 ;; *************** function _rele_off *****************
  5515 ;; Defined at:
  5516 ;;		line 234 in file "main.c"
  5517 ;; Parameters:    Size  Location     Type
  5518 ;;		None
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;		None
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  1    wreg      void 
  5523 ;; Registers used:
  5524 ;;		None
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMMON   BANK0   BANK1
  5530 ;;      Params:         0       0       0
  5531 ;;      Locals:         0       0       0
  5532 ;;      Temps:          0       0       0
  5533 ;;      Totals:         0       0       0
  5534 ;;Total ram usage:        0 bytes
  5535 ;; Hardware stack levels used: 1
  5536 ;; Hardware stack levels required when called: 7
  5537 ;; This function calls:
  5538 ;;		Nothing
  5539 ;; This function is called by:
  5540 ;;		_close
  5541 ;;		_open
  5542 ;;		_switch_wm
  5543 ;; This function uses a non-reentrant model
  5544 ;;
  5545                           
  5546  05B9                     _rele_off:	
  5547                           ;psect for function _rele_off
  5548                           
  5549                           
  5550                           ;incstack = 0
  5551                           ; Regs used in _rele_off: []
  5552  05B9                     l2070:
  5553                           
  5554                           ;main.c: 235:     ff.bits.RELE_CONTROL_ON = 0;
  5555  05B9  137A               	bcf	_ff+1,6
  5556                           
  5557                           ;main.c: 236:     ff.bits.RELE_POWER_ON = 0;
  5558  05BA  12FA               	bcf	_ff+1,5
  5559                           
  5560                           ;main.c: 237:     ff.bits.CLOSING = 0;
  5561  05BB  11FA               	bcf	_ff+1,3
  5562                           
  5563                           ;main.c: 238:     ff.bits.OPENING = 0;
  5564  05BC  10FA               	bcf	_ff+1,1
  5565                           
  5566                           ;main.c: 239:     ff.bits.CLOSED = 0;
  5567  05BD  127A               	bcf	_ff+1,4
  5568                           
  5569                           ;main.c: 240:     if (ff.bits.UNIVERSAL_VORK_MODE_ON) {
  5570  05BE  1EFB               	btfss	_ff+2,5
  5571  05BF  2DC1               	goto	u1661
  5572  05C0  2DC2               	goto	u1660
  5573  05C1                     u1661:
  5574  05C1  2DC6               	goto	l344
  5575  05C2                     __ccov142_end_blk0:
  5576  05C2                     u1660:
  5577  05C2                     __ccov143_start_blk1:
  5578  05C2                     l2072:
  5579  05C2  0020               	movlb	0	; select bank0
  5580  05C3  17AF               	bsf	__ccovbit1_55/(0+8),__ccovbit1_55& (0+7)	;volatile
  5581                           
  5582                           ;main.c: 241:         ff.bits.OPENED = 1;
  5583  05C4  157A               	bsf	_ff+1,2
  5584                           
  5585                           ;main.c: 242:     } else {
  5586  05C5  2DC9               	goto	l345
  5587  05C6                     __ccov143_end_blk1:
  5588  05C6                     __ccov144_start_blk2:
  5589  05C6                     l344:
  5590  05C6  0020               	movlb	0	; select bank0
  5591  05C7  172F               	bsf	__ccovbit2_56/(0+8),__ccovbit2_56& (0+7)	;volatile
  5592                           
  5593                           ;main.c: 243:         ff.bits.OPENED = 0;
  5594  05C8  117A               	bcf	_ff+1,2
  5595  05C9                     __ccov144_end_blk2:
  5596  05C9                     __ccov145_start_blk3:
  5597  05C9                     l345:	
  5598                           ;main.c: 244:     }
  5599                           
  5600                           
  5601                           ;main.c: 245:     ff.bits.MOVING_ALLOWED = 0;
  5602  05C9  11FB               	bcf	_ff+2,3
  5603                           
  5604                           ;main.c: 246:     time_moving_wait = MOVING_WAIT_DELAY;
  5605  05CA  01D0               	clrf	_time_moving_wait
  5606  05CB  0AD0               	incf	_time_moving_wait,f
  5607  05CC                     __ccov145_end_blk3:
  5608  05CC                     __ccov146_start_blk4:
  5609  05CC                     l346:
  5610  05CC  16AF               	bsf	__ccovbit4_57/(0+8),__ccovbit4_57& (0+7)	;volatile
  5611  05CD  0008               	return
  5612  05CE                     __end_of_rele_off:
  5613  05CE                     
  5614                           	psect	text30
  5615  05F5                     __ptext30:	
  5616 ;; *************** function _go_open_alt *****************
  5617 ;; Defined at:
  5618 ;;		line 224 in file "main.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;		None
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;		None
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  1    wreg      void 
  5625 ;; Registers used:
  5626 ;;		None
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/0
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMMON   BANK0   BANK1
  5632 ;;      Params:         0       0       0
  5633 ;;      Locals:         0       0       0
  5634 ;;      Temps:          0       0       0
  5635 ;;      Totals:         0       0       0
  5636 ;;Total ram usage:        0 bytes
  5637 ;; Hardware stack levels used: 1
  5638 ;; Hardware stack levels required when called: 7
  5639 ;; This function calls:
  5640 ;;		Nothing
  5641 ;; This function is called by:
  5642 ;;		_open
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646  05F5                     _go_open_alt:	
  5647                           ;psect for function _go_open_alt
  5648                           
  5649                           
  5650                           ;incstack = 0
  5651                           ; Regs used in _go_open_alt: []
  5652  05F5                     l2064:
  5653                           
  5654                           ;main.c: 225:     if (!ff.bits.OPENED && ff.bits.MOVING_ALLOWED) {
  5655  05F5  197A               	btfsc	_ff+1,2
  5656  05F6  2DF8               	goto	u1641
  5657  05F7  2DF9               	goto	u1640
  5658  05F8                     u1641:
  5659  05F8  2E04               	goto	l341
  5660  05F9                     __ccov138_end_blk0:
  5661  05F9                     u1640:
  5662  05F9                     __ccov139_start_blk1:
  5663  05F9                     l2066:
  5664  05F9  0020               	movlb	0	; select bank0
  5665  05FA  1530               	bsf	__ccovbit1_52/(0+8),__ccovbit1_52& (0+7)	;volatile
  5666  05FB  1DFB               	btfss	_ff+2,3
  5667  05FC  2DFE               	goto	u1651
  5668  05FD  2DFF               	goto	u1650
  5669  05FE                     u1651:
  5670  05FE  2E04               	goto	l341
  5671  05FF                     __ccov139_end_blk1:
  5672  05FF                     u1650:
  5673  05FF                     __ccov140_start_blk2:
  5674  05FF                     l2068:
  5675  05FF  14B0               	bsf	__ccovbit2_53/(0+8),__ccovbit2_53& (0+7)	;volatile
  5676                           
  5677                           ;main.c: 226:         ff.bits.CLOSED = 0;
  5678  0600  127A               	bcf	_ff+1,4
  5679                           
  5680                           ;main.c: 227:         ff.bits.OPENED = 1;
  5681  0601  157A               	bsf	_ff+1,2
  5682                           
  5683                           ;main.c: 229:         ff.bits.RELE_CONTROL_ON = 0;
  5684  0602  137A               	bcf	_ff+1,6
  5685                           
  5686                           ;main.c: 230:         ff.bits.RELE_POWER_ON = 0;
  5687  0603  12FA               	bcf	_ff+1,5
  5688  0604                     __ccov140_end_blk2:
  5689  0604                     __ccov141_start_blk4:
  5690  0604                     l341:
  5691  0604  0020               	movlb	0	; select bank0
  5692  0605  1430               	bsf	__ccovbit4_54/(0+8),__ccovbit4_54& (0+7)	;volatile
  5693  0606  0008               	return
  5694  0607                     __end_of_go_open_alt:
  5695  0607                     
  5696                           	psect	text31
  5697  04C5                     __ptext31:	
  5698 ;; *************** function _go_open *****************
  5699 ;; Defined at:
  5700 ;;		line 197 in file "main.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;		None
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;		None
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  1    wreg      void 
  5707 ;; Registers used:
  5708 ;;		wreg
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMMON   BANK0   BANK1
  5714 ;;      Params:         0       0       0
  5715 ;;      Locals:         0       0       0
  5716 ;;      Temps:          0       0       0
  5717 ;;      Totals:         0       0       0
  5718 ;;Total ram usage:        0 bytes
  5719 ;; Hardware stack levels used: 1
  5720 ;; Hardware stack levels required when called: 7
  5721 ;; This function calls:
  5722 ;;		Nothing
  5723 ;; This function is called by:
  5724 ;;		_open
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728  04C5                     _go_open:	
  5729                           ;psect for function _go_open
  5730                           
  5731                           
  5732                           ;incstack = 0
  5733                           ; Regs used in _go_open: [wreg]
  5734  04C5                     l2052:
  5735                           
  5736                           ;main.c: 199:     if (!ff.bits.OPENED && !ff.bits.OPENING && ff.bits.MOVING_ALLOWED) {
  5737  04C5  197A               	btfsc	_ff+1,2
  5738  04C6  2CC8               	goto	u1611
  5739  04C7  2CC9               	goto	u1610
  5740  04C8                     u1611:
  5741  04C8  2CDE               	goto	l329
  5742  04C9                     __ccov127_end_blk0:
  5743  04C9                     u1610:
  5744  04C9                     __ccov128_start_blk1:
  5745  04C9                     l2054:
  5746  04C9  0020               	movlb	0	; select bank0
  5747  04CA  1531               	bsf	__ccovbit1_44/(0+8),__ccovbit1_44& (0+7)	;volatile
  5748  04CB  18FA               	btfsc	_ff+1,1
  5749  04CC  2CCE               	goto	u1621
  5750  04CD  2CCF               	goto	u1620
  5751  04CE                     u1621:
  5752  04CE  2CDE               	goto	l329
  5753  04CF                     __ccov128_end_blk1:
  5754  04CF                     u1620:
  5755  04CF                     __ccov129_start_blk2:
  5756  04CF                     l2056:
  5757  04CF  14B1               	bsf	__ccovbit2_45/(0+8),__ccovbit2_45& (0+7)	;volatile
  5758  04D0  1DFB               	btfss	_ff+2,3
  5759  04D1  2CD3               	goto	u1631
  5760  04D2  2CD4               	goto	u1630
  5761  04D3                     u1631:
  5762  04D3  2CDE               	goto	l329
  5763  04D4                     __ccov129_end_blk2:
  5764  04D4                     u1630:
  5765  04D4                     __ccov130_start_blk3:
  5766  04D4                     l2058:
  5767                           
  5768                           ;main.c: 200:         ff.bits.OPENING = 1;
  5769  04D4  14FA               	bsf	_ff+1,1
  5770                           
  5771                           ;main.c: 201:         ff.bits.CLOSED = 0;
  5772  04D5  127A               	bcf	_ff+1,4
  5773                           
  5774                           ;main.c: 202:         ff.bits.CLOSING = 0;
  5775  04D6  11FA               	bcf	_ff+1,3
  5776                           
  5777                           ;main.c: 205:         ff.bits.RELE_CONTROL_ON = 0;
  5778  04D7  137A               	bcf	_ff+1,6
  5779                           
  5780                           ;main.c: 206:         ff.bits.RELE_POWER_ON = 1;
  5781  04D8  16FA               	bsf	_ff+1,5
  5782  04D9                     __ccov130_end_blk3:
  5783  04D9                     __ccov131_start_blk4:
  5784  04D9                     l2060:
  5785  04D9  1431               	bsf	__ccovbit4_46/(0+8),__ccovbit4_46& (0+7)	;volatile
  5786                           
  5787                           ;main.c: 208:         time_rele_power = RELE_POWER_WORK_DELAY;
  5788  04DA  3078               	movlw	120
  5789  04DB  00C5               	movwf	_time_rele_power
  5790  04DC  3000               	movlw	0
  5791  04DD  00C6               	movwf	_time_rele_power+1
  5792  04DE                     __ccov131_end_blk4:
  5793  04DE                     __ccov132_start_blk7:
  5794  04DE                     l329:
  5795  04DE  0020               	movlb	0	; select bank0
  5796  04DF  17B0               	bsf	__ccovbit7_47/(0+8),__ccovbit7_47& (0+7)	;volatile
  5797  04E0  0008               	return
  5798  04E1                     __end_of_go_open:
  5799  04E1                     
  5800                           	psect	text32
  5801  045F                     __ptext32:	
  5802 ;; *************** function _go_close_short *****************
  5803 ;; Defined at:
  5804 ;;		line 178 in file "main.c"
  5805 ;; Parameters:    Size  Location     Type
  5806 ;;		None
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;		None
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  1    wreg      void 
  5811 ;; Registers used:
  5812 ;;		wreg
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMMON   BANK0   BANK1
  5818 ;;      Params:         0       0       0
  5819 ;;      Locals:         0       0       0
  5820 ;;      Temps:          0       0       0
  5821 ;;      Totals:         0       0       0
  5822 ;;Total ram usage:        0 bytes
  5823 ;; Hardware stack levels used: 1
  5824 ;; Hardware stack levels required when called: 7
  5825 ;; This function calls:
  5826 ;;		Nothing
  5827 ;; This function is called by:
  5828 ;;		_autorotation_work
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832  045F                     _go_close_short:	
  5833                           ;psect for function _go_close_short
  5834                           
  5835                           
  5836                           ;incstack = 0
  5837                           ; Regs used in _go_close_short: [wreg]
  5838  045F                     l2178:
  5839                           
  5840                           ;main.c: 180:     if (!ff.bits.CLOSING && !ff.bits.CLOSED && ff.bits.MOVING_ALLOWED) {
  5841  045F  19FA               	btfsc	_ff+1,3
  5842  0460  2C62               	goto	u1941
  5843  0461  2C63               	goto	u1940
  5844  0462                     u1941:
  5845  0462  2C80               	goto	l325
  5846  0463                     __ccov121_end_blk0:
  5847  0463                     u1940:
  5848  0463                     __ccov122_start_blk1:
  5849  0463                     l2180:
  5850  0463  0020               	movlb	0	; select bank0
  5851  0464  1731               	bsf	__ccovbit1_40/(0+8),__ccovbit1_40& (0+7)	;volatile
  5852  0465  1A7A               	btfsc	_ff+1,4
  5853  0466  2C68               	goto	u1951
  5854  0467  2C69               	goto	u1950
  5855  0468                     u1951:
  5856  0468  2C80               	goto	l325
  5857  0469                     __ccov122_end_blk1:
  5858  0469                     u1950:
  5859  0469                     __ccov123_start_blk2:
  5860  0469                     l2182:
  5861  0469  16B1               	bsf	__ccovbit2_41/(0+8),__ccovbit2_41& (0+7)	;volatile
  5862  046A  1DFB               	btfss	_ff+2,3
  5863  046B  2C6D               	goto	u1961
  5864  046C  2C6E               	goto	u1960
  5865  046D                     u1961:
  5866  046D  2C80               	goto	l325
  5867  046E                     __ccov123_end_blk2:
  5868  046E                     u1960:
  5869  046E                     __ccov124_start_blk3:
  5870  046E                     l2184:
  5871                           
  5872                           ;main.c: 181:         ff.bits.CLOSING = 1;
  5873  046E  15FA               	bsf	_ff+1,3
  5874                           
  5875                           ;main.c: 182:         ff.bits.OPENED = 0;
  5876  046F  117A               	bcf	_ff+1,2
  5877                           
  5878                           ;main.c: 183:         ff.bits.OPENING = 0;
  5879  0470  10FA               	bcf	_ff+1,1
  5880                           
  5881                           ;main.c: 185:         ff.bits.RELE_POWER_ON = 0;
  5882  0471  12FA               	bcf	_ff+1,5
  5883                           
  5884                           ;main.c: 186:         ff.bits.RELE_CONTROL_ON = 1;
  5885  0472  177A               	bsf	_ff+1,6
  5886  0473                     __ccov124_end_blk3:
  5887  0473                     __ccov125_start_blk4:
  5888  0473                     l2186:
  5889  0473  1631               	bsf	__ccovbit4_42/(0+8),__ccovbit4_42& (0+7)	;volatile
  5890                           
  5891                           ;main.c: 188:         time_rele_control = RELE_GAP + RELE_POWER_AUTOROTATION_DELAY + REL
      +                          E_GAP;
  5892  0474  301B               	movlw	27
  5893  0475  00C3               	movwf	_time_rele_control
  5894  0476  3000               	movlw	0
  5895  0477  00C4               	movwf	_time_rele_control+1
  5896                           
  5897                           ;main.c: 189:         time_rele_power = RELE_POWER_AUTOROTATION_DELAY;
  5898  0478  3019               	movlw	25
  5899  0479  00C5               	movwf	_time_rele_power
  5900  047A  3000               	movlw	0
  5901  047B  00C6               	movwf	_time_rele_power+1
  5902                           
  5903                           ;main.c: 190:         time_rele_gap = RELE_GAP;
  5904  047C  3001               	movlw	1
  5905  047D  00C1               	movwf	_time_rele_gap
  5906  047E  3000               	movlw	0
  5907  047F  00C2               	movwf	_time_rele_gap+1
  5908  0480                     __ccov125_end_blk4:
  5909  0480                     __ccov126_start_blk6:
  5910  0480                     l325:
  5911  0480  0020               	movlb	0	; select bank0
  5912  0481  15B1               	bsf	__ccovbit6_43/(0+8),__ccovbit6_43& (0+7)	;volatile
  5913  0482  0008               	return
  5914  0483                     __end_of_go_close_short:
  5915  0483                     
  5916                           	psect	intentry
  5917  0004                     __pintentry:	
  5918 ;; *************** function _INTERRUPT_InterruptManager *****************
  5919 ;; Defined at:
  5920 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5921 ;; Parameters:    Size  Location     Type
  5922 ;;		None
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;		None
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  1    wreg      void 
  5927 ;; Registers used:
  5928 ;;		wreg, status,2, status,0, pclath, cstack
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMMON   BANK0   BANK1
  5934 ;;      Params:         0       0       0
  5935 ;;      Locals:         0       0       0
  5936 ;;      Temps:          0       0       0
  5937 ;;      Totals:         0       0       0
  5938 ;;Total ram usage:        0 bytes
  5939 ;; Hardware stack levels used: 1
  5940 ;; Hardware stack levels required when called: 6
  5941 ;; This function calls:
  5942 ;;		_TMR0_ISR
  5943 ;;		_TMR2_ISR
  5944 ;; This function is called by:
  5945 ;;		Interrupt level 1
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949  0004                     _INTERRUPT_InterruptManager:
  5950                           
  5951                           ;incstack = 0
  5952  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5953                           
  5954                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  5955  0005  3180               	pagesel	$
  5956  0006                     i1l2486:
  5957                           
  5958                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5959  0006  1E8B               	btfss	11,5	;volatile
  5960  0007  2809               	goto	u252_21
  5961  0008  280A               	goto	u252_20
  5962  0009                     u252_21:
  5963  0009  2814               	goto	i1l108
  5964  000A                     u252_20:
  5965  000A                     __ccov39_end_blk0:
  5966  000A                     __ccov40_start_blk1:
  5967  000A                     i1l2488:
  5968  000A  1472               	bsf	__ccovbit1_7/(0+8),__ccovbit1_7& (0+7)	;volatile
  5969  000B  1D0B               	btfss	11,2	;volatile
  5970  000C  280E               	goto	u253_21
  5971  000D  280F               	goto	u253_20
  5972  000E                     u253_21:
  5973  000E  2814               	goto	i1l108
  5974  000F                     u253_20:
  5975  000F                     __ccov40_end_blk1:
  5976  000F                     __ccov41_start_blk2:
  5977  000F                     i1l2490:
  5978  000F  17F1               	bsf	__ccovbit2_8/(0+8),__ccovbit2_8& (0+7)	;volatile
  5979                           
  5980                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  5981  0010  3186  2619  3180   	fcall	_TMR0_ISR
  5982                           
  5983                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  5984  0013  282A               	goto	i1l114
  5985  0014                     __ccov41_end_blk2:
  5986  0014                     __ccov42_start_blk3:
  5987  0014                     i1l108:	
  5988                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  5989                           
  5990  0014  1771               	bsf	__ccovbit3_9/(0+8),__ccovbit3_9& (0+7)	;volatile
  5991  0015  1F0B               	btfss	11,6	;volatile
  5992  0016  2818               	goto	u254_21
  5993  0017  2819               	goto	u254_20
  5994  0018                     u254_21:
  5995  0018  282A               	goto	i1l114
  5996  0019                     u254_20:
  5997  0019                     __ccov42_end_blk3:
  5998  0019                     __ccov43_start_blk4:
  5999  0019                     i1l2492:
  6000                           
  6001                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  6002  0019  0021               	movlb	1	; select bank1
  6003  001A  1C91               	btfss	17,1	;volatile
  6004  001B  281D               	goto	u255_21
  6005  001C  281E               	goto	u255_20
  6006  001D                     u255_21:
  6007  001D  2829               	goto	i1l113
  6008  001E                     u255_20:
  6009  001E                     __ccov43_end_blk4:
  6010  001E                     __ccov44_start_blk5:
  6011  001E                     i1l2494:
  6012  001E  16F1               	bsf	__ccovbit5_10/(0+8),__ccovbit5_10& (0+7)	;volatile
  6013  001F  0020               	movlb	0	; select bank0
  6014  0020  1C91               	btfss	17,1	;volatile
  6015  0021  2823               	goto	u256_21
  6016  0022  2824               	goto	u256_20
  6017  0023                     u256_21:
  6018  0023  2829               	goto	i1l113
  6019  0024                     u256_20:
  6020  0024                     __ccov44_end_blk5:
  6021  0024                     __ccov45_start_blk6:
  6022  0024                     i1l2496:
  6023  0024  1671               	bsf	__ccovbit6_11/(0+8),__ccovbit6_11& (0+7)	;volatile
  6024                           
  6025                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
  6026  0025  3186  262B  3180   	fcall	_TMR2_ISR
  6027                           
  6028                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  6029  0028  282A               	goto	i1l114
  6030  0029                     __ccov45_end_blk6:
  6031  0029                     __ccov46_start_blk10:
  6032  0029                     i1l113:	
  6033                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  6034                           
  6035  0029  15F1               	bsf	__ccovbit10_12/(0+8),__ccovbit10_12& (0+7)	;volatile
  6036  002A                     __ccov46_end_blk10:
  6037  002A                     __ccov47_start_blk12:
  6038  002A                     i1l114:
  6039  002A  1571               	bsf	__ccovbit12_13/(0+8),__ccovbit12_13& (0+7)	;volatile
  6040  002B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6041  002C  0009               	retfie
  6042  002D                     __end_of_INTERRUPT_InterruptManager:
  6043  002D                     
  6044                           	psect	text34
  6045  062B                     __ptext34:	
  6046 ;; *************** function _TMR2_ISR *****************
  6047 ;; Defined at:
  6048 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;		None
  6051 ;; Auto vars:     Size  Location     Type
  6052 ;;		None
  6053 ;; Return value:  Size  Location     Type
  6054 ;;                  1    wreg      void 
  6055 ;; Registers used:
  6056 ;;		wreg, status,2, status,0, pclath, cstack
  6057 ;; Tracked objects:
  6058 ;;		On entry : 0/0
  6059 ;;		On exit  : 0/0
  6060 ;;		Unchanged: 0/0
  6061 ;; Data sizes:     COMMON   BANK0   BANK1
  6062 ;;      Params:         0       0       0
  6063 ;;      Locals:         0       0       0
  6064 ;;      Temps:          0       0       0
  6065 ;;      Totals:         0       0       0
  6066 ;;Total ram usage:        0 bytes
  6067 ;; Hardware stack levels used: 1
  6068 ;; Hardware stack levels required when called: 5
  6069 ;; This function calls:
  6070 ;;		Absolute function
  6071 ;;		_TMR2_DefaultInterruptHandler
  6072 ;;		_ms_tick
  6073 ;; This function is called by:
  6074 ;;		_INTERRUPT_InterruptManager
  6075 ;; This function uses a non-reentrant model
  6076 ;;
  6077                           
  6078  062B                     _TMR2_ISR:	
  6079                           ;psect for function _TMR2_ISR
  6080                           
  6081                           
  6082                           ;incstack = 0
  6083                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  6084  062B                     i1l2256:
  6085                           
  6086                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
  6087  062B  0020               	movlb	0	; select bank0
  6088  062C  1091               	bcf	17,1	;volatile
  6089  062D                     __ccov65_end_blk0:
  6090  062D                     __ccov66_start_blk1:
  6091  062D                     i1l2258:
  6092                           
  6093                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
  6094  062D  0855               	movf	_TMR2_InterruptHandler,w
  6095  062E  0456               	iorwf	_TMR2_InterruptHandler+1,w
  6096  062F  1903               	btfsc	3,2
  6097  0630  2E32               	goto	u211_21
  6098  0631  2E33               	goto	u211_20
  6099  0632                     u211_21:
  6100  0632  2E39               	goto	i1l154
  6101  0633                     __ccov66_end_blk1:
  6102  0633                     u211_20:
  6103  0633                     __ccov67_start_blk2:
  6104  0633                     i1l2260:
  6105  0633  17F0               	bsf	__ccovbit2_16/(0+8),__ccovbit2_16& (0+7)	;volatile
  6106                           
  6107                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
  6108  0634  0856               	movf	_TMR2_InterruptHandler+1,w
  6109  0635  008A               	movwf	10
  6110  0636  0855               	movf	_TMR2_InterruptHandler,w
  6111  0637  000A               	callw
  6112  0638  3186               	pagesel	$
  6113  0639                     __ccov67_end_blk2:
  6114  0639                     __ccov68_start_blk4:
  6115  0639                     i1l154:
  6116  0639  1770               	bsf	__ccovbit4_17/(0+8),__ccovbit4_17& (0+7)	;volatile
  6117  063A  0008               	return
  6118  063B                     __end_of_TMR2_ISR:
  6119  063B                     
  6120                           	psect	text35
  6121  06C2                     __ptext35:	
  6122 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  6123 ;; Defined at:
  6124 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  6125 ;; Parameters:    Size  Location     Type
  6126 ;;		None
  6127 ;; Auto vars:     Size  Location     Type
  6128 ;;		None
  6129 ;; Return value:  Size  Location     Type
  6130 ;;                  1    wreg      void 
  6131 ;; Registers used:
  6132 ;;		None
  6133 ;; Tracked objects:
  6134 ;;		On entry : 0/0
  6135 ;;		On exit  : 0/0
  6136 ;;		Unchanged: 0/0
  6137 ;; Data sizes:     COMMON   BANK0   BANK1
  6138 ;;      Params:         0       0       0
  6139 ;;      Locals:         0       0       0
  6140 ;;      Temps:          0       0       0
  6141 ;;      Totals:         0       0       0
  6142 ;;Total ram usage:        0 bytes
  6143 ;; Hardware stack levels used: 1
  6144 ;; This function calls:
  6145 ;;		Nothing
  6146 ;; This function is called by:
  6147 ;;		_TMR2_Initialize
  6148 ;;		_TMR2_ISR
  6149 ;; This function uses a non-reentrant model
  6150 ;;
  6151                           
  6152  06C2                     _TMR2_DefaultInterruptHandler:	
  6153                           ;psect for function _TMR2_DefaultInterruptHandler
  6154                           
  6155                           
  6156                           ;incstack = 0
  6157                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  6158  06C2                     i1l160:
  6159  06C2  1670               	bsf	__ccovbit0_19/(0+8),__ccovbit0_19& (0+7)	;volatile
  6160  06C3  0008               	return
  6161  06C4                     __end_of_TMR2_DefaultInterruptHandler:
  6162  06C4                     
  6163                           	psect	text36
  6164  02C4                     __ptext36:	
  6165 ;; *************** function _ms_tick *****************
  6166 ;; Defined at:
  6167 ;;		line 523 in file "main.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;		None
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;		None
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  1    wreg      void 
  6174 ;; Registers used:
  6175 ;;		wreg, status,2, status,0, pclath, cstack
  6176 ;; Tracked objects:
  6177 ;;		On entry : 0/0
  6178 ;;		On exit  : 0/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMMON   BANK0   BANK1
  6181 ;;      Params:         0       0       0
  6182 ;;      Locals:         0       0       0
  6183 ;;      Temps:          0       0       0
  6184 ;;      Totals:         0       0       0
  6185 ;;Total ram usage:        0 bytes
  6186 ;; Hardware stack levels used: 1
  6187 ;; Hardware stack levels required when called: 4
  6188 ;; This function calls:
  6189 ;;		_ms_100_work
  6190 ;;		_ms_200_work
  6191 ;;		_sec_work
  6192 ;;		_stop_tone
  6193 ;; This function is called by:
  6194 ;;		_start_setup
  6195 ;;		_TMR2_ISR
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199  02C4                     _ms_tick:	
  6200                           ;psect for function _ms_tick
  6201                           
  6202                           
  6203                           ;incstack = 0
  6204                           ; Regs used in _ms_tick: [wreg+status,2+status,0+pclath+cstack]
  6205  02C4                     i1l2210:
  6206                           
  6207                           ;main.c: 524:     static unsigned ms_count = 0;;main.c: 525:     static unsigned s_count
      +                           = 0;;main.c: 526:     ms_count++;
  6208  02C4  3001               	movlw	1
  6209  02C5  0020               	movlb	0	; select bank0
  6210  02C6  07B9               	addwf	ms_tick@ms_count,f
  6211  02C7  3000               	movlw	0
  6212  02C8  3DBA               	addwfc	ms_tick@ms_count+1,f
  6213  02C9                     __ccov280_end_blk0:
  6214  02C9                     __ccov281_start_blk1:
  6215  02C9                     i1l2212:
  6216                           
  6217                           ;main.c: 527:     if (time_tone > 0) {
  6218  02C9  083F               	movf	_time_tone,w
  6219  02CA  0440               	iorwf	_time_tone+1,w
  6220  02CB  1903               	btfsc	3,2
  6221  02CC  2ACE               	goto	u203_21
  6222  02CD  2ACF               	goto	u203_20
  6223  02CE                     u203_21:
  6224  02CE  2ADE               	goto	i1l2220
  6225  02CF                     __ccov281_end_blk1:
  6226  02CF                     u203_20:
  6227  02CF                     __ccov282_start_blk2:
  6228  02CF                     i1l2214:
  6229                           
  6230                           ;main.c: 528:         time_tone--;
  6231  02CF  3001               	movlw	1
  6232  02D0  02BF               	subwf	_time_tone,f
  6233  02D1  3000               	movlw	0
  6234  02D2  3BC0               	subwfb	_time_tone+1,f
  6235  02D3                     __ccov282_end_blk2:
  6236  02D3                     __ccov283_start_blk3:
  6237  02D3                     i1l2216:
  6238  02D3  16A4               	bsf	__ccovbit3_145/(0+8),__ccovbit3_145& (0+7)	;volatile
  6239                           
  6240                           ;main.c: 529:         if (time_tone == 0) {
  6241  02D4  083F               	movf	_time_tone,w
  6242  02D5  0440               	iorwf	_time_tone+1,w
  6243  02D6  1D03               	btfss	3,2
  6244  02D7  2AD9               	goto	u204_21
  6245  02D8  2ADA               	goto	u204_20
  6246  02D9                     u204_21:
  6247  02D9  2ADE               	goto	i1l2220
  6248  02DA                     __ccov283_end_blk3:
  6249  02DA                     u204_20:
  6250  02DA                     __ccov284_start_blk4:
  6251  02DA                     i1l2218:
  6252  02DA  1624               	bsf	__ccovbit4_146/(0+8),__ccovbit4_146& (0+7)	;volatile
  6253                           
  6254                           ;main.c: 530:             stop_tone();
  6255  02DB  3186  2696  3182   	fcall	_stop_tone
  6256  02DE                     __ccov284_end_blk4:
  6257  02DE                     __ccov285_start_blk7:
  6258  02DE                     i1l2220:
  6259                           
  6260                           ;main.c: 534:     ff.bits.ALLOW_FUN = 1;
  6261  02DE  16F9               	bsf	_ff,5
  6262  02DF                     __ccov285_end_blk7:
  6263  02DF                     __ccov286_start_blk8:
  6264  02DF                     i1l2222:
  6265                           
  6266                           ;main.c: 535:     ff.bits.ALLOW_JUMP = 1;
  6267  02DF  1779               	bsf	_ff,6
  6268  02E0                     __ccov286_end_blk8:
  6269  02E0                     __ccov287_start_blk9:
  6270  02E0                     i1l2224:
  6271                           
  6272                           ;main.c: 537:     if (ms_count == 100) {
  6273  02E0  3064               	movlw	100
  6274  02E1  0020               	movlb	0	; select bank0
  6275  02E2  0639               	xorwf	ms_tick@ms_count,w
  6276  02E3  043A               	iorwf	ms_tick@ms_count+1,w
  6277  02E4  1D03               	btfss	3,2
  6278  02E5  2AE7               	goto	u205_21
  6279  02E6  2AE8               	goto	u205_20
  6280  02E7                     u205_21:
  6281  02E7  2AF6               	goto	i1l2234
  6282  02E8                     __ccov287_end_blk9:
  6283  02E8                     u205_20:
  6284  02E8                     __ccov288_start_blk10:
  6285  02E8                     i1l2226:
  6286                           
  6287                           ;main.c: 538:         ms_100_work();
  6288  02E8  3186  264B  3182   	fcall	_ms_100_work
  6289  02EB                     __ccov288_end_blk10:
  6290  02EB                     __ccov289_start_blk11:
  6291  02EB                     i1l2228:
  6292                           
  6293                           ;main.c: 539:         ms_200_work();
  6294  02EB  3182  2281  3182   	fcall	_ms_200_work
  6295                           
  6296                           ;main.c: 540:         s_count++;
  6297  02EE  3001               	movlw	1
  6298  02EF  0020               	movlb	0	; select bank0
  6299  02F0  07B7               	addwf	ms_tick@s_count,f
  6300  02F1  3000               	movlw	0
  6301  02F2  3DB8               	addwfc	ms_tick@s_count+1,f
  6302  02F3                     __ccov289_end_blk11:
  6303  02F3                     __ccov290_start_blk12:
  6304  02F3                     i1l2230:
  6305  02F3  15A4               	bsf	__ccovbit12_147/(0+8),__ccovbit12_147& (0+7)	;volatile
  6306                           
  6307                           ;main.c: 541:         ms_count = 0;
  6308  02F4  01B9               	clrf	ms_tick@ms_count
  6309  02F5  01BA               	clrf	ms_tick@ms_count+1
  6310  02F6                     __ccov290_end_blk12:
  6311  02F6                     __ccov291_start_blk16:
  6312  02F6                     i1l2234:
  6313                           
  6314                           ;main.c: 549:     if (s_count == 10) {
  6315  02F6  300A               	movlw	10
  6316  02F7  0637               	xorwf	ms_tick@s_count,w
  6317  02F8  0438               	iorwf	ms_tick@s_count+1,w
  6318  02F9  1D03               	btfss	3,2
  6319  02FA  2AFC               	goto	u206_21
  6320  02FB  2AFD               	goto	u206_20
  6321  02FC                     u206_21:
  6322  02FC  2B04               	goto	i1l460
  6323  02FD                     __ccov291_end_blk16:
  6324  02FD                     u206_20:
  6325  02FD                     __ccov292_start_blk17:
  6326  02FD                     i1l2236:
  6327                           
  6328                           ;main.c: 550:         sec_work();
  6329  02FD  3180  2049  3182   	fcall	_sec_work
  6330  0300                     __ccov292_end_blk17:
  6331  0300                     __ccov293_start_blk18:
  6332  0300                     i1l2238:
  6333  0300  0020               	movlb	0	; select bank0
  6334  0301  1524               	bsf	__ccovbit18_148/(0+8),__ccovbit18_148& (0+7)	;volatile
  6335                           
  6336                           ;main.c: 551:         s_count = 0;
  6337  0302  01B7               	clrf	ms_tick@s_count
  6338  0303  01B8               	clrf	ms_tick@s_count+1
  6339  0304                     __ccov293_end_blk18:
  6340  0304                     __ccov294_start_blk20:
  6341  0304                     i1l460:
  6342  0304  14A4               	bsf	__ccovbit20_149/(0+8),__ccovbit20_149& (0+7)	;volatile
  6343  0305  0008               	return
  6344  0306                     __end_of_ms_tick:
  6345  0306                     
  6346                           	psect	text37
  6347  0696                     __ptext37:	
  6348 ;; *************** function _stop_tone *****************
  6349 ;; Defined at:
  6350 ;;		line 127 in file "main.c"
  6351 ;; Parameters:    Size  Location     Type
  6352 ;;		None
  6353 ;; Auto vars:     Size  Location     Type
  6354 ;;		None
  6355 ;; Return value:  Size  Location     Type
  6356 ;;                  1    wreg      void 
  6357 ;; Registers used:
  6358 ;;		None
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/0
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMMON   BANK0   BANK1
  6364 ;;      Params:         0       0       0
  6365 ;;      Locals:         0       0       0
  6366 ;;      Temps:          0       0       0
  6367 ;;      Totals:         0       0       0
  6368 ;;Total ram usage:        0 bytes
  6369 ;; Hardware stack levels used: 1
  6370 ;; This function calls:
  6371 ;;		Nothing
  6372 ;; This function is called by:
  6373 ;;		_ms_tick
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377  0696                     _stop_tone:	
  6378                           ;psect for function _stop_tone
  6379                           
  6380                           
  6381                           ;incstack = 0
  6382                           ; Regs used in _stop_tone: []
  6383  0696                     i1l2040:
  6384                           
  6385                           ;main.c: 128:     ff.bits.ZUM_BUSY = 0;
  6386  0696  117B               	bcf	_ff+2,2
  6387                           
  6388                           ;main.c: 129:     ff.bits.TONE_ON = 0;
  6389  0697  13FA               	bcf	_ff+1,7
  6390                           
  6391                           ;main.c: 130:     ff.bits.TONE_OFF = 1;
  6392  0698  147B               	bsf	_ff+2,0
  6393  0699                     __ccov95_end_blk0:
  6394  0699                     __ccov96_start_blk1:
  6395  0699                     i1l302:
  6396  0699  0020               	movlb	0	; select bank0
  6397  069A  1633               	bsf	__ccovbit1_26/(0+8),__ccovbit1_26& (0+7)	;volatile
  6398  069B  0008               	return
  6399  069C                     __end_of_stop_tone:
  6400  069C                     
  6401                           	psect	text38
  6402  0049                     __ptext38:	
  6403 ;; *************** function _sec_work *****************
  6404 ;; Defined at:
  6405 ;;		line 441 in file "main.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;		None
  6408 ;; Auto vars:     Size  Location     Type
  6409 ;;		None
  6410 ;; Return value:  Size  Location     Type
  6411 ;;                  1    wreg      void 
  6412 ;; Registers used:
  6413 ;;		wreg, status,2, status,0, pclath, cstack
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMMON   BANK0   BANK1
  6419 ;;      Params:         0       0       0
  6420 ;;      Locals:         0       0       0
  6421 ;;      Temps:          1       0       0
  6422 ;;      Totals:         1       0       0
  6423 ;;Total ram usage:        1 bytes
  6424 ;; Hardware stack levels used: 1
  6425 ;; Hardware stack levels required when called: 1
  6426 ;; This function calls:
  6427 ;;		_minute_tick
  6428 ;;		_rele_tick
  6429 ;;		_sec_30_work
  6430 ;; This function is called by:
  6431 ;;		_ms_tick
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435  0049                     _sec_work:	
  6436                           ;psect for function _sec_work
  6437                           
  6438                           
  6439                           ;incstack = 0
  6440                           ; Regs used in _sec_work: [wreg+status,2+status,0+pclath+cstack]
  6441  0049                     i1l2074:
  6442                           
  6443                           ;main.c: 449:     sec_count++;
  6444  0049  3001               	movlw	1
  6445  004A  00F4               	movwf	??_sec_work
  6446  004B  0874               	movf	??_sec_work,w
  6447  004C  0020               	movlb	0	; select bank0
  6448  004D  07D2               	addwf	_sec_count,f
  6449  004E                     __ccov240_end_blk0:
  6450  004E                     __ccov241_start_blk1:
  6451  004E                     i1l2076:
  6452                           
  6453                           ;main.c: 450:     if (!ff.bits.MOVING_ALLOWED) {
  6454  004E  19FB               	btfsc	_ff+2,3
  6455  004F  2851               	goto	u167_21
  6456  0050  2852               	goto	u167_20
  6457  0051                     u167_21:
  6458  0051  285D               	goto	i1l414
  6459  0052                     __ccov241_end_blk1:
  6460  0052                     u167_20:
  6461  0052                     __ccov242_start_blk2:
  6462  0052                     i1l2078:
  6463                           
  6464                           ;main.c: 451:         if (time_moving_wait > 0) {
  6465  0052  0850               	movf	_time_moving_wait,w
  6466  0053  1903               	btfsc	3,2
  6467  0054  2856               	goto	u168_21
  6468  0055  2857               	goto	u168_20
  6469  0056                     u168_21:
  6470  0056  285B               	goto	i1l415
  6471  0057                     __ccov242_end_blk2:
  6472  0057                     u168_20:
  6473  0057                     __ccov243_start_blk3:
  6474  0057                     i1l2080:
  6475  0057  1727               	bsf	__ccovbit3_120/(0+8),__ccovbit3_120& (0+7)	;volatile
  6476                           
  6477                           ;main.c: 452:             time_moving_wait--;
  6478  0058  3001               	movlw	1
  6479  0059  02D0               	subwf	_time_moving_wait,f
  6480                           
  6481                           ;main.c: 453:         } else {
  6482  005A  285D               	goto	i1l414
  6483  005B                     __ccov243_end_blk3:
  6484  005B                     __ccov244_start_blk4:
  6485  005B                     i1l415:
  6486  005B  16A7               	bsf	__ccovbit4_121/(0+8),__ccovbit4_121& (0+7)	;volatile
  6487                           
  6488                           ;main.c: 454:             ff.bits.MOVING_ALLOWED = 1;
  6489  005C  15FB               	bsf	_ff+2,3
  6490  005D                     __ccov244_end_blk4:
  6491  005D                     __ccov245_start_blk6:
  6492  005D                     i1l414:	
  6493                           ;main.c: 456:     }
  6494                           
  6495                           
  6496                           ;main.c: 457:     if (ff.bits.NORMAL_WORK_MODE_ON) {
  6497  005D  1E7B               	btfss	_ff+2,4
  6498  005E  2860               	goto	u169_21
  6499  005F  2861               	goto	u169_20
  6500  0060                     u169_21:
  6501  0060  2874               	goto	i1l2088
  6502  0061                     __ccov245_end_blk6:
  6503  0061                     u169_20:
  6504  0061                     __ccov246_start_blk7:
  6505  0061                     i1l2082:
  6506                           
  6507                           ;main.c: 458:         if (!ff.bits.CLOSED){
  6508  0061  1A7A               	btfsc	_ff+1,4
  6509  0062  2864               	goto	u170_21
  6510  0063  2865               	goto	u170_20
  6511  0064                     u170_21:
  6512  0064  2870               	goto	i1l2086
  6513  0065                     __ccov246_end_blk7:
  6514  0065                     u170_20:
  6515  0065                     __ccov247_start_blk8:
  6516  0065                     i1l2084:
  6517  0065  1627               	bsf	__ccovbit8_122/(0+8),__ccovbit8_122& (0+7)	;volatile
  6518                           
  6519                           ;main.c: 459:             time_rotation++;
  6520  0066  3001               	movlw	1
  6521  0067  07B4               	addwf	_time_rotation,f
  6522  0068  3000               	movlw	0
  6523  0069  1803               	skipnc
  6524  006A  3001               	movlw	1
  6525  006B  07B5               	addwf	_time_rotation+1,f
  6526  006C  3000               	movlw	0
  6527  006D  1803               	skipnc
  6528  006E  3001               	movlw	1
  6529  006F  07B6               	addwf	_time_rotation+2,f
  6530  0070                     __ccov247_end_blk8:
  6531  0070                     __ccov248_start_blk10:
  6532  0070                     i1l2086:
  6533  0070  15A7               	bsf	__ccovbit10_123/(0+8),__ccovbit10_123& (0+7)	;volatile
  6534                           
  6535                           ;main.c: 461:         rele_tick();
  6536  0071  3181  212D  3180   	fcall	_rele_tick
  6537  0074                     __ccov248_end_blk10:
  6538  0074                     __ccov249_start_blk12:
  6539  0074                     i1l2088:
  6540                           
  6541                           ;main.c: 464:     if (ff.bits.ALARM_ON) {
  6542  0074  1C79               	btfss	_ff,0
  6543  0075  2877               	goto	u171_21
  6544  0076  2878               	goto	u171_20
  6545  0077                     u171_21:
  6546  0077  289B               	goto	i1l419
  6547  0078                     __ccov249_end_blk12:
  6548  0078                     u171_20:
  6549  0078                     __ccov250_start_blk13:
  6550  0078                     i1l2090:
  6551                           
  6552                           ;main.c: 466:         if (sec_count == 30|| sec_count==60) {
  6553  0078  301E               	movlw	30
  6554  0079  0020               	movlb	0	; select bank0
  6555  007A  0652               	xorwf	_sec_count,w
  6556  007B  1903               	btfsc	3,2
  6557  007C  287E               	goto	u172_21
  6558  007D  287F               	goto	u172_20
  6559  007E                     u172_21:
  6560  007E  2886               	goto	i1l2094
  6561  007F                     __ccov250_end_blk13:
  6562  007F                     u172_20:
  6563  007F                     __ccov251_start_blk14:
  6564  007F                     i1l2092:
  6565  007F  1527               	bsf	__ccovbit14_124/(0+8),__ccovbit14_124& (0+7)	;volatile
  6566  0080  303C               	movlw	60
  6567  0081  0652               	xorwf	_sec_count,w
  6568  0082  1D03               	btfss	3,2
  6569  0083  2885               	goto	u173_21
  6570  0084  2886               	goto	u173_20
  6571  0085                     u173_21:
  6572  0085  288A               	goto	i1l2096
  6573  0086                     __ccov251_end_blk14:
  6574  0086                     u173_20:
  6575  0086                     __ccov252_start_blk16:
  6576  0086                     i1l2094:
  6577  0086  14A7               	bsf	__ccovbit16_125/(0+8),__ccovbit16_125& (0+7)	;volatile
  6578                           
  6579                           ;main.c: 467:             sec_30_work();
  6580  0087  3186  263B  3180   	fcall	_sec_30_work
  6581  008A                     __ccov252_end_blk16:
  6582  008A                     __ccov253_start_blk18:
  6583  008A                     i1l2096:
  6584  008A  0020               	movlb	0	; select bank0
  6585  008B  1427               	bsf	__ccovbit18_126/(0+8),__ccovbit18_126& (0+7)	;volatile
  6586                           
  6587                           ;main.c: 470:         ff.bits.LED_ON = !ff.bits.LED_ON;
  6588  008C  1003               	clrc
  6589  008D  1F7B               	btfss	_ff+2,6
  6590  008E  1403               	setc
  6591  008F  3000               	movlw	0
  6592  0090  3D09               	addwfc	9,w
  6593  0091  00F4               	movwf	??_sec_work
  6594  0092  0EF4               	swapf	??_sec_work,f
  6595  0093  0DF4               	rlf	??_sec_work,f
  6596  0094  0DF4               	rlf	??_sec_work,f
  6597  0095  087B               	movf	_ff+2,w
  6598  0096  0674               	xorwf	??_sec_work,w
  6599  0097  39BF               	andlw	-65
  6600  0098  0674               	xorwf	??_sec_work,w
  6601  0099  00FB               	movwf	_ff+2
  6602                           
  6603                           ;main.c: 472:     } else if (ff.bits.ALARM_OFF) {
  6604  009A  28BC               	goto	i1l2106
  6605  009B                     __ccov253_end_blk18:
  6606  009B                     __ccov254_start_blk19:
  6607  009B                     i1l419:
  6608  009B  0020               	movlb	0	; select bank0
  6609  009C  17A6               	bsf	__ccovbit19_127/(0+8),__ccovbit19_127& (0+7)	;volatile
  6610  009D  1CF9               	btfss	_ff,1
  6611  009E  28A0               	goto	u174_21
  6612  009F  28A1               	goto	u174_20
  6613  00A0                     u174_21:
  6614  00A0  28BC               	goto	i1l2106
  6615  00A1                     __ccov254_end_blk19:
  6616  00A1                     u174_20:
  6617  00A1                     __ccov255_start_blk20:
  6618  00A1                     i1l2098:
  6619                           
  6620                           ;main.c: 474:         static char iled;;main.c: 475:         iled++;
  6621  00A1  3001               	movlw	1
  6622  00A2  00F4               	movwf	??_sec_work
  6623  00A3  0874               	movf	??_sec_work,w
  6624  00A4  07CC               	addwf	sec_work@iled,f
  6625  00A5                     __ccov255_end_blk20:
  6626  00A5                     __ccov256_start_blk21:
  6627  00A5                     i1l2100:
  6628  00A5  1726               	bsf	__ccovbit21_128/(0+8),__ccovbit21_128& (0+7)	;volatile
  6629                           
  6630                           ;main.c: 476:         if (iled > 2) {
  6631  00A6  3003               	movlw	3
  6632  00A7  024C               	subwf	sec_work@iled,w
  6633  00A8  1C03               	skipc
  6634  00A9  28AB               	goto	u175_21
  6635  00AA  28AC               	goto	u175_20
  6636  00AB                     u175_21:
  6637  00AB  28BC               	goto	i1l2106
  6638  00AC                     __ccov256_end_blk21:
  6639  00AC                     u175_20:
  6640  00AC                     __ccov257_start_blk22:
  6641  00AC                     i1l2102:
  6642                           
  6643                           ;main.c: 477:             ff.bits.LED_ON = !ff.bits.LED_ON;
  6644  00AC  1003               	clrc
  6645  00AD  1F7B               	btfss	_ff+2,6
  6646  00AE  1403               	setc
  6647  00AF  3000               	movlw	0
  6648  00B0  3D09               	addwfc	9,w
  6649  00B1  00F4               	movwf	??_sec_work
  6650  00B2  0EF4               	swapf	??_sec_work,f
  6651  00B3  0DF4               	rlf	??_sec_work,f
  6652  00B4  0DF4               	rlf	??_sec_work,f
  6653  00B5  087B               	movf	_ff+2,w
  6654  00B6  0674               	xorwf	??_sec_work,w
  6655  00B7  39BF               	andlw	-65
  6656  00B8  0674               	xorwf	??_sec_work,w
  6657  00B9  00FB               	movwf	_ff+2
  6658  00BA                     __ccov257_end_blk22:
  6659  00BA                     __ccov258_start_blk23:
  6660  00BA                     i1l2104:
  6661  00BA  16A6               	bsf	__ccovbit23_129/(0+8),__ccovbit23_129& (0+7)	;volatile
  6662                           
  6663                           ;main.c: 478:             iled = 0;
  6664  00BB  01CC               	clrf	sec_work@iled
  6665  00BC                     __ccov258_end_blk23:
  6666  00BC                     __ccov259_start_blk27:
  6667  00BC                     i1l2106:
  6668                           
  6669                           ;main.c: 484:     if (sec_count == 60) {
  6670  00BC  303C               	movlw	60
  6671  00BD  0652               	xorwf	_sec_count,w
  6672  00BE  1D03               	btfss	3,2
  6673  00BF  28C1               	goto	u176_21
  6674  00C0  28C2               	goto	u176_20
  6675  00C1                     u176_21:
  6676  00C1  28C8               	goto	i1l429
  6677  00C2                     __ccov259_end_blk27:
  6678  00C2                     u176_20:
  6679  00C2                     __ccov260_start_blk28:
  6680  00C2                     i1l2108:
  6681                           
  6682                           ;main.c: 485:         minute_tick();
  6683  00C2  3185  2546  3180   	fcall	_minute_tick
  6684  00C5                     __ccov260_end_blk28:
  6685  00C5                     __ccov261_start_blk29:
  6686  00C5                     i1l2110:
  6687  00C5  0020               	movlb	0	; select bank0
  6688  00C6  1626               	bsf	__ccovbit29_130/(0+8),__ccovbit29_130& (0+7)	;volatile
  6689                           
  6690                           ;main.c: 486:         sec_count = 0;
  6691  00C7  01D2               	clrf	_sec_count
  6692  00C8                     __ccov261_end_blk29:
  6693  00C8                     __ccov262_start_blk31:
  6694  00C8                     i1l429:
  6695  00C8  15A6               	bsf	__ccovbit31_131/(0+8),__ccovbit31_131& (0+7)	;volatile
  6696  00C9  0008               	return
  6697  00CA                     __end_of_sec_work:
  6698  00CA                     
  6699                           	psect	text39
  6700  063B                     __ptext39:	
  6701 ;; *************** function _sec_30_work *****************
  6702 ;; Defined at:
  6703 ;;		line 433 in file "main.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;		None
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;		None
  6708 ;; Return value:  Size  Location     Type
  6709 ;;                  1    wreg      void 
  6710 ;; Registers used:
  6711 ;;		wreg
  6712 ;; Tracked objects:
  6713 ;;		On entry : 0/0
  6714 ;;		On exit  : 0/0
  6715 ;;		Unchanged: 0/0
  6716 ;; Data sizes:     COMMON   BANK0   BANK1
  6717 ;;      Params:         0       0       0
  6718 ;;      Locals:         0       0       0
  6719 ;;      Temps:          1       0       0
  6720 ;;      Totals:         1       0       0
  6721 ;;Total ram usage:        1 bytes
  6722 ;; Hardware stack levels used: 1
  6723 ;; This function calls:
  6724 ;;		Nothing
  6725 ;; This function is called by:
  6726 ;;		_sec_work
  6727 ;; This function uses a non-reentrant model
  6728 ;;
  6729                           
  6730  063B                     _sec_30_work:	
  6731                           ;psect for function _sec_30_work
  6732                           
  6733                           
  6734                           ;incstack = 0
  6735                           ; Regs used in _sec_30_work: [wreg]
  6736  063B                     i1l1984:
  6737                           
  6738                           ;main.c: 434:     if (ff.bits.SIREN) {
  6739  063B  1CFB               	btfss	_ff+2,1
  6740  063C  2E3E               	goto	u157_21
  6741  063D  2E3F               	goto	u157_20
  6742  063E                     u157_21:
  6743  063E  2E43               	goto	i1l1988
  6744  063F                     __ccov236_end_blk0:
  6745  063F                     u157_20:
  6746  063F                     __ccov237_start_blk1:
  6747  063F                     i1l1986:
  6748  063F  0020               	movlb	0	; select bank0
  6749  0640  14A8               	bsf	__ccovbit1_117/(0+8),__ccovbit1_117& (0+7)	;volatile
  6750                           
  6751                           ;main.c: 435:         ff.bits.SIREN = 0;
  6752  0641  10FB               	bcf	_ff+2,1
  6753                           
  6754                           ;main.c: 436:     } else {
  6755  0642  2E49               	goto	i1l411
  6756  0643                     __ccov237_end_blk1:
  6757  0643                     __ccov238_start_blk3:
  6758  0643                     i1l1988:
  6759  0643  0020               	movlb	0	; select bank0
  6760  0644  1428               	bsf	__ccovbit3_118/(0+8),__ccovbit3_118& (0+7)	;volatile
  6761                           
  6762                           ;main.c: 437:         beep_short_count = 3;
  6763  0645  3003               	movlw	3
  6764  0646  00F3               	movwf	??_sec_30_work
  6765  0647  0873               	movf	??_sec_30_work,w
  6766  0648  00FD               	movwf	_beep_short_count
  6767  0649                     __ccov238_end_blk3:
  6768  0649                     __ccov239_start_blk5:
  6769  0649                     i1l411:
  6770  0649  17A7               	bsf	__ccovbit5_119/(0+8),__ccovbit5_119& (0+7)	;volatile
  6771  064A  0008               	return
  6772  064B                     __end_of_sec_30_work:
  6773  064B                     
  6774                           	psect	text40
  6775  012D                     __ptext40:	
  6776 ;; *************** function _rele_tick *****************
  6777 ;; Defined at:
  6778 ;;		line 273 in file "main.c"
  6779 ;; Parameters:    Size  Location     Type
  6780 ;;		None
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;		None
  6783 ;; Return value:  Size  Location     Type
  6784 ;;                  1    wreg      void 
  6785 ;; Registers used:
  6786 ;;		wreg, status,2, status,0
  6787 ;; Tracked objects:
  6788 ;;		On entry : 0/0
  6789 ;;		On exit  : 0/0
  6790 ;;		Unchanged: 0/0
  6791 ;; Data sizes:     COMMON   BANK0   BANK1
  6792 ;;      Params:         0       0       0
  6793 ;;      Locals:         0       0       0
  6794 ;;      Temps:          0       0       0
  6795 ;;      Totals:         0       0       0
  6796 ;;Total ram usage:        0 bytes
  6797 ;; Hardware stack levels used: 1
  6798 ;; This function calls:
  6799 ;;		Nothing
  6800 ;; This function is called by:
  6801 ;;		_sec_work
  6802 ;; This function uses a non-reentrant model
  6803 ;;
  6804                           
  6805  012D                     _rele_tick:	
  6806                           ;psect for function _rele_tick
  6807                           
  6808                           
  6809                           ;incstack = 0
  6810                           ; Regs used in _rele_tick: [wreg+status,2+status,0]
  6811  012D                     i1l1942:
  6812                           
  6813                           ;main.c: 275:     if (ff.bits.OPENING && ff.bits.CLOSING) {
  6814  012D  1CFA               	btfss	_ff+1,1
  6815  012E  2930               	goto	u145_21
  6816  012F  2931               	goto	u145_20
  6817  0130                     u145_21:
  6818  0130  2938               	goto	i1l365
  6819  0131                     __ccov161_end_blk0:
  6820  0131                     u145_20:
  6821  0131                     __ccov162_start_blk1:
  6822  0131                     i1l1944:
  6823  0131  0020               	movlb	0	; select bank0
  6824  0132  152E               	bsf	__ccovbit1_68/(0+8),__ccovbit1_68& (0+7)	;volatile
  6825  0133  1DFA               	btfss	_ff+1,3
  6826  0134  2936               	goto	u146_21
  6827  0135  2937               	goto	u146_20
  6828  0136                     u146_21:
  6829  0136  2938               	goto	i1l365
  6830  0137                     u146_20:
  6831  0137  298B               	goto	i1l366
  6832  0138                     __ccov162_end_blk1:
  6833  0138                     __ccov163_start_blk3:
  6834  0138                     i1l365:	
  6835                           ;main.c: 277:     }
  6836                           
  6837                           
  6838                           ;main.c: 280:     if (ff.bits.OPENING) {
  6839  0138  1CFA               	btfss	_ff+1,1
  6840  0139  293B               	goto	u147_21
  6841  013A  293C               	goto	u147_20
  6842  013B                     u147_21:
  6843  013B  2954               	goto	i1l367
  6844  013C                     __ccov163_end_blk3:
  6845  013C                     u147_20:
  6846  013C                     __ccov164_start_blk4:
  6847  013C                     i1l1948:
  6848  013C  0020               	movlb	0	; select bank0
  6849  013D  14AE               	bsf	__ccovbit4_69/(0+8),__ccovbit4_69& (0+7)	;volatile
  6850                           
  6851                           ;main.c: 281:         if (time_rele_power > 0) {
  6852  013E  0845               	movf	_time_rele_power,w
  6853  013F  0446               	iorwf	_time_rele_power+1,w
  6854  0140  1903               	btfsc	3,2
  6855  0141  2943               	goto	u148_21
  6856  0142  2944               	goto	u148_20
  6857  0143                     u148_21:
  6858  0143  2954               	goto	i1l367
  6859  0144                     __ccov164_end_blk4:
  6860  0144                     u148_20:
  6861  0144                     __ccov165_start_blk5:
  6862  0144                     i1l1950:
  6863                           
  6864                           ;main.c: 282:             time_rele_power--;
  6865  0144  3001               	movlw	1
  6866  0145  02C5               	subwf	_time_rele_power,f
  6867  0146  3000               	movlw	0
  6868  0147  3BC6               	subwfb	_time_rele_power+1,f
  6869  0148                     __ccov165_end_blk5:
  6870  0148                     __ccov166_start_blk6:
  6871  0148                     i1l1952:
  6872  0148  142E               	bsf	__ccovbit6_70/(0+8),__ccovbit6_70& (0+7)	;volatile
  6873                           
  6874                           ;main.c: 283:             if (time_rele_power == 0) {
  6875  0149  0845               	movf	_time_rele_power,w
  6876  014A  0446               	iorwf	_time_rele_power+1,w
  6877  014B  1D03               	btfss	3,2
  6878  014C  294E               	goto	u149_21
  6879  014D  294F               	goto	u149_20
  6880  014E                     u149_21:
  6881  014E  2954               	goto	i1l367
  6882  014F                     __ccov166_end_blk6:
  6883  014F                     u149_20:
  6884  014F                     __ccov167_start_blk7:
  6885  014F                     i1l1954:
  6886  014F  17AD               	bsf	__ccovbit7_71/(0+8),__ccovbit7_71& (0+7)	;volatile
  6887                           
  6888                           ;main.c: 284:                 ff.bits.RELE_POWER_ON = 0;
  6889  0150  12FA               	bcf	_ff+1,5
  6890                           
  6891                           ;main.c: 285:                 ff.bits.OPENED = 1;
  6892  0151  157A               	bsf	_ff+1,2
  6893                           
  6894                           ;main.c: 286:                 ff.bits.OPENING = 0;
  6895  0152  10FA               	bcf	_ff+1,1
  6896                           
  6897                           ;main.c: 287:                  ff.bits.AUTOROTATION_WORK = 0;
  6898  0153  107C               	bcf	_ff+3,0
  6899  0154                     __ccov167_end_blk7:
  6900  0154                     __ccov168_start_blk10:
  6901  0154                     i1l367:	
  6902                           ;main.c: 290:     }
  6903                           
  6904  0154  0020               	movlb	0	; select bank0
  6905  0155  172D               	bsf	__ccovbit10_72/(0+8),__ccovbit10_72& (0+7)	;volatile
  6906                           
  6907                           ;main.c: 293:     if (ff.bits.CLOSING) {
  6908  0156  1DFA               	btfss	_ff+1,3
  6909  0157  2959               	goto	u150_21
  6910  0158  295A               	goto	u150_20
  6911  0159                     u150_21:
  6912  0159  298B               	goto	i1l366
  6913  015A                     __ccov168_end_blk10:
  6914  015A                     u150_20:
  6915  015A                     __ccov169_start_blk11:
  6916  015A                     i1l1956:
  6917                           
  6918                           ;main.c: 295:         if (time_rele_gap == 0) {
  6919  015A  0841               	movf	_time_rele_gap,w
  6920  015B  0442               	iorwf	_time_rele_gap+1,w
  6921  015C  1D03               	btfss	3,2
  6922  015D  295F               	goto	u151_21
  6923  015E  2960               	goto	u151_20
  6924  015F                     u151_21:
  6925  015F  2970               	goto	i1l1964
  6926  0160                     __ccov169_end_blk11:
  6927  0160                     u151_20:
  6928  0160                     __ccov170_start_blk12:
  6929  0160                     i1l1958:
  6930                           
  6931                           ;main.c: 296:             if (time_rele_power > 0) {
  6932  0160  0845               	movf	_time_rele_power,w
  6933  0161  0446               	iorwf	_time_rele_power+1,w
  6934  0162  1903               	btfsc	3,2
  6935  0163  2965               	goto	u152_21
  6936  0164  2966               	goto	u152_20
  6937  0165                     u152_21:
  6938  0165  296D               	goto	i1l372
  6939  0166                     __ccov170_end_blk12:
  6940  0166                     u152_20:
  6941  0166                     __ccov171_start_blk13:
  6942  0166                     i1l1960:
  6943                           
  6944                           ;main.c: 297:                 ff.bits.RELE_POWER_ON = 1;
  6945  0166  16FA               	bsf	_ff+1,5
  6946  0167                     __ccov171_end_blk13:
  6947  0167                     __ccov172_start_blk14:
  6948  0167                     i1l1962:
  6949  0167  16AD               	bsf	__ccovbit14_73/(0+8),__ccovbit14_73& (0+7)	;volatile
  6950                           
  6951                           ;main.c: 298:                 time_rele_power--;
  6952  0168  3001               	movlw	1
  6953  0169  02C5               	subwf	_time_rele_power,f
  6954  016A  3000               	movlw	0
  6955  016B  3BC6               	subwfb	_time_rele_power+1,f
  6956                           
  6957                           ;main.c: 299:             } else {
  6958  016C  2975               	goto	i1l1966
  6959  016D                     __ccov172_end_blk14:
  6960  016D                     __ccov173_start_blk15:
  6961  016D                     i1l372:
  6962  016D  162D               	bsf	__ccovbit15_74/(0+8),__ccovbit15_74& (0+7)	;volatile
  6963                           
  6964                           ;main.c: 300:                 ff.bits.RELE_POWER_ON = 0;
  6965  016E  12FA               	bcf	_ff+1,5
  6966  016F  2975               	goto	i1l1966
  6967  0170                     __ccov173_end_blk15:
  6968  0170                     __ccov174_start_blk18:
  6969  0170                     i1l1964:
  6970  0170  15AD               	bsf	__ccovbit18_75/(0+8),__ccovbit18_75& (0+7)	;volatile
  6971                           
  6972                           ;main.c: 303:             time_rele_gap--;
  6973  0171  3001               	movlw	1
  6974  0172  02C1               	subwf	_time_rele_gap,f
  6975  0173  3000               	movlw	0
  6976  0174  3BC2               	subwfb	_time_rele_gap+1,f
  6977  0175                     __ccov174_end_blk18:
  6978  0175                     __ccov175_start_blk20:
  6979  0175                     i1l1966:
  6980  0175  152D               	bsf	__ccovbit20_76/(0+8),__ccovbit20_76& (0+7)	;volatile
  6981                           
  6982                           ;main.c: 306:         if (time_rele_control > 0) {
  6983  0176  0843               	movf	_time_rele_control,w
  6984  0177  0444               	iorwf	_time_rele_control+1,w
  6985  0178  1903               	btfsc	3,2
  6986  0179  297B               	goto	u153_21
  6987  017A  297C               	goto	u153_20
  6988  017B                     u153_21:
  6989  017B  298B               	goto	i1l366
  6990  017C                     __ccov175_end_blk20:
  6991  017C                     u153_20:
  6992  017C                     __ccov176_start_blk21:
  6993  017C                     i1l1968:
  6994                           
  6995                           ;main.c: 307:             time_rele_control--;
  6996  017C  3001               	movlw	1
  6997  017D  02C3               	subwf	_time_rele_control,f
  6998  017E  3000               	movlw	0
  6999  017F  3BC4               	subwfb	_time_rele_control+1,f
  7000  0180                     __ccov176_end_blk21:
  7001  0180                     __ccov177_start_blk22:
  7002  0180                     i1l1970:
  7003  0180  14AD               	bsf	__ccovbit22_77/(0+8),__ccovbit22_77& (0+7)	;volatile
  7004                           
  7005                           ;main.c: 308:             if (time_rele_control == 0) {
  7006  0181  0843               	movf	_time_rele_control,w
  7007  0182  0444               	iorwf	_time_rele_control+1,w
  7008  0183  1D03               	btfss	3,2
  7009  0184  2986               	goto	u154_21
  7010  0185  2987               	goto	u154_20
  7011  0186                     u154_21:
  7012  0186  298B               	goto	i1l366
  7013  0187                     __ccov177_end_blk22:
  7014  0187                     u154_20:
  7015  0187                     __ccov178_start_blk23:
  7016  0187                     i1l1972:
  7017  0187  142D               	bsf	__ccovbit23_78/(0+8),__ccovbit23_78& (0+7)	;volatile
  7018                           
  7019                           ;main.c: 309:                 ff.bits.RELE_CONTROL_ON = 0;
  7020  0188  137A               	bcf	_ff+1,6
  7021                           
  7022                           ;main.c: 310:                 ff.bits.CLOSED = 1;
  7023  0189  167A               	bsf	_ff+1,4
  7024                           
  7025                           ;main.c: 311:                 ff.bits.CLOSING = 0;
  7026  018A  11FA               	bcf	_ff+1,3
  7027  018B                     __ccov178_end_blk23:
  7028  018B                     __ccov179_start_blk27:
  7029  018B                     i1l366:
  7030  018B  17AC               	bsf	__ccovbit27_79/(0+8),__ccovbit27_79& (0+7)	;volatile
  7031  018C  0008               	return
  7032  018D                     __end_of_rele_tick:
  7033  018D                     
  7034                           	psect	text41
  7035  0546                     __ptext41:	
  7036 ;; *************** function _minute_tick *****************
  7037 ;; Defined at:
  7038 ;;		line 412 in file "main.c"
  7039 ;; Parameters:    Size  Location     Type
  7040 ;;		None
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;		None
  7043 ;; Return value:  Size  Location     Type
  7044 ;;                  1    wreg      void 
  7045 ;; Registers used:
  7046 ;;		wreg, status,2, status,0
  7047 ;; Tracked objects:
  7048 ;;		On entry : 0/0
  7049 ;;		On exit  : 0/0
  7050 ;;		Unchanged: 0/0
  7051 ;; Data sizes:     COMMON   BANK0   BANK1
  7052 ;;      Params:         0       0       0
  7053 ;;      Locals:         0       0       0
  7054 ;;      Temps:          1       0       0
  7055 ;;      Totals:         1       0       0
  7056 ;;Total ram usage:        1 bytes
  7057 ;; Hardware stack levels used: 1
  7058 ;; This function calls:
  7059 ;;		Nothing
  7060 ;; This function is called by:
  7061 ;;		_sec_work
  7062 ;; This function uses a non-reentrant model
  7063 ;;
  7064                           
  7065  0546                     _minute_tick:	
  7066                           ;psect for function _minute_tick
  7067                           
  7068                           
  7069                           ;incstack = 0
  7070                           ; Regs used in _minute_tick: [wreg+status,2+status,0]
  7071  0546                     i1l1974:
  7072                           
  7073                           ;main.c: 416:     if (time_melody > 0) {
  7074  0546  0020               	movlb	0	; select bank0
  7075  0547  0851               	movf	_time_melody,w
  7076  0548  1903               	btfsc	3,2
  7077  0549  2D4B               	goto	u155_21
  7078  054A  2D4C               	goto	u155_20
  7079  054B                     u155_21:
  7080  054B  2D50               	goto	i1l1978
  7081  054C                     __ccov230_end_blk0:
  7082  054C                     u155_20:
  7083  054C                     __ccov231_start_blk1:
  7084  054C                     i1l1976:
  7085  054C  16A8               	bsf	__ccovbit1_113/(0+8),__ccovbit1_113& (0+7)	;volatile
  7086                           
  7087                           ;main.c: 417:        time_melody--;
  7088  054D  3001               	movlw	1
  7089  054E  02D1               	subwf	_time_melody,f
  7090                           
  7091                           ;main.c: 418:     } else {
  7092  054F  2D5C               	goto	i1l406
  7093  0550                     __ccov231_end_blk1:
  7094  0550                     __ccov232_start_blk3:
  7095  0550                     i1l1978:
  7096  0550  1628               	bsf	__ccovbit3_114/(0+8),__ccovbit3_114& (0+7)	;volatile
  7097                           
  7098                           ;main.c: 419:         if (time_melody == 0) {
  7099  0551  0851               	movf	_time_melody,w
  7100  0552  1D03               	btfss	3,2
  7101  0553  2D55               	goto	u156_21
  7102  0554  2D56               	goto	u156_20
  7103  0555                     u156_21:
  7104  0555  2D5C               	goto	i1l406
  7105  0556                     __ccov232_end_blk3:
  7106  0556                     u156_20:
  7107  0556                     __ccov233_start_blk4:
  7108  0556                     i1l1980:
  7109                           
  7110                           ;main.c: 420:             ff.bits.SIREN = 1;
  7111  0556  14FB               	bsf	_ff+2,1
  7112  0557                     __ccov233_end_blk4:
  7113  0557                     __ccov234_start_blk5:
  7114  0557                     i1l1982:
  7115  0557  15A8               	bsf	__ccovbit5_115/(0+8),__ccovbit5_115& (0+7)	;volatile
  7116                           
  7117                           ;main.c: 421:             time_melody = MELODY_REPEAT_DELAY;
  7118  0558  301E               	movlw	30
  7119  0559  00F3               	movwf	??_minute_tick
  7120  055A  0873               	movf	??_minute_tick,w
  7121  055B  00D1               	movwf	_time_melody
  7122  055C                     __ccov234_end_blk5:
  7123  055C                     __ccov235_start_blk8:
  7124  055C                     i1l406:
  7125  055C  1528               	bsf	__ccovbit8_116/(0+8),__ccovbit8_116& (0+7)	;volatile
  7126  055D  0008               	return
  7127  055E                     __end_of_minute_tick:
  7128  055E                     
  7129                           	psect	text42
  7130  0281                     __ptext42:	
  7131 ;; *************** function _ms_200_work *****************
  7132 ;; Defined at:
  7133 ;;		line 491 in file "main.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;		None
  7136 ;; Auto vars:     Size  Location     Type
  7137 ;;		None
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  1    wreg      void 
  7140 ;; Registers used:
  7141 ;;		wreg, status,2, status,0, pclath, cstack
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMMON   BANK0   BANK1
  7147 ;;      Params:         0       0       0
  7148 ;;      Locals:         0       0       0
  7149 ;;      Temps:          0       0       0
  7150 ;;      Totals:         0       0       0
  7151 ;;Total ram usage:        0 bytes
  7152 ;; Hardware stack levels used: 1
  7153 ;; Hardware stack levels required when called: 3
  7154 ;; This function calls:
  7155 ;;		_beep_double
  7156 ;;		_beep_long
  7157 ;;		_beep_short
  7158 ;; This function is called by:
  7159 ;;		_ms_tick
  7160 ;; This function uses a non-reentrant model
  7161 ;;
  7162                           
  7163  0281                     _ms_200_work:	
  7164                           ;psect for function _ms_200_work
  7165                           
  7166                           
  7167                           ;incstack = 0
  7168                           ; Regs used in _ms_200_work: [wreg+status,2+status,0+pclath+cstack]
  7169  0281                     i1l2112:
  7170                           
  7171                           ;main.c: 492:     if (ff.bits.ALARM_ON) {
  7172  0281  1C79               	btfss	_ff,0
  7173  0282  2A84               	goto	u177_21
  7174  0283  2A85               	goto	u177_20
  7175  0284                     u177_21:
  7176  0284  2A9B               	goto	i1l432
  7177  0285                     __ccov263_end_blk0:
  7178  0285                     u177_20:
  7179  0285                     __ccov264_start_blk1:
  7180  0285                     i1l2114:
  7181  0285  0020               	movlb	0	; select bank0
  7182  0286  1526               	bsf	__ccovbit1_132/(0+8),__ccovbit1_132& (0+7)	;volatile
  7183                           
  7184                           ;main.c: 493:         if (ff.bits.SIREN) {
  7185  0287  1CFB               	btfss	_ff+2,1
  7186  0288  2A8A               	goto	u178_21
  7187  0289  2A8B               	goto	u178_20
  7188  028A                     u178_21:
  7189  028A  2A90               	goto	i1l2118
  7190  028B                     __ccov264_end_blk1:
  7191  028B                     u178_20:
  7192  028B                     __ccov265_start_blk2:
  7193  028B                     i1l2116:
  7194  028B  14A6               	bsf	__ccovbit2_133/(0+8),__ccovbit2_133& (0+7)	;volatile
  7195                           
  7196                           ;main.c: 494:             beep_double();
  7197  028C  3186  2607  3182   	fcall	_beep_double
  7198                           
  7199                           ;main.c: 495:         } else {
  7200  028F  2AC1               	goto	i1l442
  7201  0290                     __ccov265_end_blk2:
  7202  0290                     __ccov266_start_blk4:
  7203  0290                     i1l2118:
  7204  0290  1426               	bsf	__ccovbit4_134/(0+8),__ccovbit4_134& (0+7)	;volatile
  7205                           
  7206                           ;main.c: 496:             if (beep_short_count > 0) {
  7207  0291  087D               	movf	_beep_short_count,w
  7208  0292  1903               	btfsc	3,2
  7209  0293  2A95               	goto	u179_21
  7210  0294  2A96               	goto	u179_20
  7211  0295                     u179_21:
  7212  0295  2AC1               	goto	i1l442
  7213  0296                     __ccov266_end_blk4:
  7214  0296                     u179_20:
  7215  0296                     __ccov267_start_blk5:
  7216  0296                     i1l2120:
  7217  0296  17A5               	bsf	__ccovbit5_135/(0+8),__ccovbit5_135& (0+7)	;volatile
  7218                           
  7219                           ;main.c: 497:                 beep_short();
  7220  0297  3184  24E1  3182   	fcall	_beep_short
  7221  029A  2AC1               	goto	i1l442
  7222  029B                     __ccov267_end_blk5:
  7223  029B                     __ccov268_start_blk8:
  7224  029B                     i1l432:
  7225  029B  0020               	movlb	0	; select bank0
  7226  029C  1725               	bsf	__ccovbit8_136/(0+8),__ccovbit8_136& (0+7)	;volatile
  7227  029D  1CF9               	btfss	_ff,1
  7228  029E  2AA0               	goto	u180_21
  7229  029F  2AA1               	goto	u180_20
  7230  02A0                     u180_21:
  7231  02A0  2AC1               	goto	i1l442
  7232  02A1                     __ccov268_end_blk8:
  7233  02A1                     u180_20:
  7234  02A1                     __ccov269_start_blk9:
  7235  02A1                     i1l2122:
  7236                           
  7237                           ;main.c: 503:         if ((beep_short_count > 0) && (beep_long_count > 0)) {
  7238  02A1  087D               	movf	_beep_short_count,w
  7239  02A2  1903               	btfsc	3,2
  7240  02A3  2AA5               	goto	u181_21
  7241  02A4  2AA6               	goto	u181_20
  7242  02A5                     u181_21:
  7243  02A5  2AAD               	goto	i1l2128
  7244  02A6                     __ccov269_end_blk9:
  7245  02A6                     u181_20:
  7246  02A6                     __ccov270_start_blk10:
  7247  02A6                     i1l2124:
  7248  02A6  16A5               	bsf	__ccovbit10_137/(0+8),__ccovbit10_137& (0+7)	;volatile
  7249  02A7  084E               	movf	_beep_long_count,w
  7250  02A8  1903               	btfsc	3,2
  7251  02A9  2AAB               	goto	u182_21
  7252  02AA  2AAC               	goto	u182_20
  7253  02AB                     u182_21:
  7254  02AB  2AAD               	goto	i1l2128
  7255  02AC                     u182_20:
  7256  02AC  2A8B               	goto	i1l2116
  7257  02AD                     __ccov270_end_blk10:
  7258  02AD                     __ccov271_start_blk13:
  7259  02AD                     i1l2128:
  7260                           
  7261                           ;main.c: 506:             if (beep_short_count > 0) {
  7262  02AD  087D               	movf	_beep_short_count,w
  7263  02AE  1903               	btfsc	3,2
  7264  02AF  2AB1               	goto	u183_21
  7265  02B0  2AB2               	goto	u183_20
  7266  02B1                     u183_21:
  7267  02B1  2AB6               	goto	i1l2132
  7268  02B2                     __ccov271_end_blk13:
  7269  02B2                     u183_20:
  7270  02B2                     __ccov272_start_blk14:
  7271  02B2                     i1l2130:
  7272  02B2  1625               	bsf	__ccovbit14_138/(0+8),__ccovbit14_138& (0+7)	;volatile
  7273                           
  7274                           ;main.c: 507:                 beep_short();
  7275  02B3  3184  24E1  3182   	fcall	_beep_short
  7276  02B6                     __ccov272_end_blk14:
  7277  02B6                     __ccov273_start_blk16:
  7278  02B6                     i1l2132:
  7279  02B6  0020               	movlb	0	; select bank0
  7280  02B7  15A5               	bsf	__ccovbit16_139/(0+8),__ccovbit16_139& (0+7)	;volatile
  7281                           
  7282                           ;main.c: 509:             if (beep_long_count > 0) {
  7283  02B8  084E               	movf	_beep_long_count,w
  7284  02B9  1903               	btfsc	3,2
  7285  02BA  2ABC               	goto	u184_21
  7286  02BB  2ABD               	goto	u184_20
  7287  02BC                     u184_21:
  7288  02BC  2AC1               	goto	i1l442
  7289  02BD                     __ccov273_end_blk16:
  7290  02BD                     u184_20:
  7291  02BD                     __ccov274_start_blk17:
  7292  02BD                     i1l2134:
  7293  02BD  1525               	bsf	__ccovbit17_140/(0+8),__ccovbit17_140& (0+7)	;volatile
  7294                           
  7295                           ;main.c: 510:                 beep_long();
  7296  02BE  3185  252D  3182   	fcall	_beep_long
  7297  02C1                     __ccov274_end_blk17:
  7298  02C1                     __ccov275_start_blk22:
  7299  02C1                     i1l442:
  7300  02C1  0020               	movlb	0	; select bank0
  7301  02C2  14A5               	bsf	__ccovbit22_141/(0+8),__ccovbit22_141& (0+7)	;volatile
  7302  02C3  0008               	return
  7303  02C4                     __end_of_ms_200_work:
  7304  02C4                     
  7305                           	psect	text43
  7306  0607                     __ptext43:	
  7307 ;; *************** function _beep_double *****************
  7308 ;; Defined at:
  7309 ;;		line 151 in file "main.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;		None
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;		None
  7314 ;; Return value:  Size  Location     Type
  7315 ;;                  1    wreg      void 
  7316 ;; Registers used:
  7317 ;;		wreg, status,2, status,0, pclath, cstack
  7318 ;; Tracked objects:
  7319 ;;		On entry : 0/0
  7320 ;;		On exit  : 0/0
  7321 ;;		Unchanged: 0/0
  7322 ;; Data sizes:     COMMON   BANK0   BANK1
  7323 ;;      Params:         0       0       0
  7324 ;;      Locals:         0       0       0
  7325 ;;      Temps:          0       0       0
  7326 ;;      Totals:         0       0       0
  7327 ;;Total ram usage:        0 bytes
  7328 ;; Hardware stack levels used: 1
  7329 ;; Hardware stack levels required when called: 2
  7330 ;; This function calls:
  7331 ;;		_beep_long
  7332 ;;		_beep_short
  7333 ;; This function is called by:
  7334 ;;		_ms_200_work
  7335 ;; This function uses a non-reentrant model
  7336 ;;
  7337                           
  7338  0607                     _beep_double:	
  7339                           ;psect for function _beep_double
  7340                           
  7341                           
  7342                           ;incstack = 0
  7343                           ; Regs used in _beep_double: [wreg+status,2+status,0+pclath+cstack]
  7344  0607                     i1l1936:
  7345                           
  7346                           ;main.c: 152:     if (ff.bits.LAST_BEEP_LONG) {
  7347  0607  1D7C               	btfss	_ff+3,2
  7348  0608  2E0A               	goto	u144_21
  7349  0609  2E0B               	goto	u144_20
  7350  060A                     u144_21:
  7351  060A  2E11               	goto	i1l1940
  7352  060B                     __ccov111_end_blk0:
  7353  060B                     u144_20:
  7354  060B                     __ccov112_start_blk1:
  7355  060B                     i1l1938:
  7356  060B  0020               	movlb	0	; select bank0
  7357  060C  16B2               	bsf	__ccovbit1_33/(0+8),__ccovbit1_33& (0+7)	;volatile
  7358                           
  7359                           ;main.c: 153:         beep_short();
  7360  060D  3184  24E1  3186   	fcall	_beep_short
  7361                           
  7362                           ;main.c: 154:     } else {
  7363  0610  2E16               	goto	i1l317
  7364  0611                     __ccov112_end_blk1:
  7365  0611                     __ccov113_start_blk3:
  7366  0611                     i1l1940:
  7367  0611  0020               	movlb	0	; select bank0
  7368  0612  1632               	bsf	__ccovbit3_34/(0+8),__ccovbit3_34& (0+7)	;volatile
  7369                           
  7370                           ;main.c: 155:         beep_long();
  7371  0613  3185  252D  3186   	fcall	_beep_long
  7372  0616                     __ccov113_end_blk3:
  7373  0616                     __ccov114_start_blk5:
  7374  0616                     i1l317:
  7375  0616  0020               	movlb	0	; select bank0
  7376  0617  15B2               	bsf	__ccovbit5_35/(0+8),__ccovbit5_35& (0+7)	;volatile
  7377  0618  0008               	return
  7378  0619                     __end_of_beep_double:
  7379  0619                     
  7380                           	psect	text44
  7381  04E1                     __ptext44:	
  7382 ;; *************** function _beep_short *****************
  7383 ;; Defined at:
  7384 ;;		line 133 in file "main.c"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;		None
  7387 ;; Auto vars:     Size  Location     Type
  7388 ;;		None
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  1    wreg      void 
  7391 ;; Registers used:
  7392 ;;		wreg, status,2, status,0, pclath, cstack
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMMON   BANK0   BANK1
  7398 ;;      Params:         0       0       0
  7399 ;;      Locals:         0       0       0
  7400 ;;      Temps:          0       0       0
  7401 ;;      Totals:         0       0       0
  7402 ;;Total ram usage:        0 bytes
  7403 ;; Hardware stack levels used: 1
  7404 ;; Hardware stack levels required when called: 1
  7405 ;; This function calls:
  7406 ;;		_start_tone
  7407 ;; This function is called by:
  7408 ;;		_beep_double
  7409 ;;		_ms_200_work
  7410 ;; This function uses a non-reentrant model
  7411 ;;
  7412                           
  7413  04E1                     _beep_short:	
  7414                           ;psect for function _beep_short
  7415                           
  7416                           
  7417                           ;incstack = 0
  7418                           ; Regs used in _beep_short: [wreg+status,2+status,0+pclath+cstack]
  7419  04E1                     i1l1908:
  7420                           
  7421                           ;main.c: 134:     if (!ff.bits.ZUM_BUSY) {
  7422  04E1  197B               	btfsc	_ff+2,2
  7423  04E2  2CE4               	goto	u140_21
  7424  04E3  2CE5               	goto	u140_20
  7425  04E4                     u140_21:
  7426  04E4  2CF8               	goto	i1l307
  7427  04E5                     __ccov97_end_blk0:
  7428  04E5                     u140_20:
  7429  04E5                     __ccov98_start_blk1:
  7430  04E5                     i1l1910:
  7431                           
  7432                           ;main.c: 135:         if (beep_short_count > 0) beep_short_count--;
  7433  04E5  087D               	movf	_beep_short_count,w
  7434  04E6  1903               	btfsc	3,2
  7435  04E7  2CE9               	goto	u141_21
  7436  04E8  2CEA               	goto	u141_20
  7437  04E9                     u141_21:
  7438  04E9  2CEE               	goto	i1l1914
  7439  04EA                     __ccov98_end_blk1:
  7440  04EA                     u141_20:
  7441  04EA                     __ccov99_start_blk2:
  7442  04EA                     i1l1912:
  7443  04EA  0020               	movlb	0	; select bank0
  7444  04EB  15B3               	bsf	__ccovbit2_27/(0+8),__ccovbit2_27& (0+7)	;volatile
  7445  04EC  3001               	movlw	1
  7446  04ED  02FD               	subwf	_beep_short_count,f
  7447  04EE                     __ccov99_end_blk2:
  7448  04EE                     __ccov100_start_blk4:
  7449  04EE                     i1l1914:
  7450                           
  7451                           ;main.c: 136:         time_tone = SHORT_ZUMMER_DELAY;
  7452  04EE  301E               	movlw	30
  7453  04EF  0020               	movlb	0	; select bank0
  7454  04F0  00BF               	movwf	_time_tone
  7455  04F1  3000               	movlw	0
  7456  04F2  00C0               	movwf	_time_tone+1
  7457  04F3                     __ccov100_end_blk4:
  7458  04F3                     __ccov101_start_blk5:
  7459  04F3                     i1l1916:
  7460                           
  7461                           ;main.c: 137:         ff.bits.LAST_BEEP_LONG = 0;
  7462  04F3  117C               	bcf	_ff+3,2
  7463  04F4                     __ccov101_end_blk5:
  7464  04F4                     __ccov102_start_blk6:
  7465  04F4                     i1l1918:
  7466  04F4  1533               	bsf	__ccovbit6_28/(0+8),__ccovbit6_28& (0+7)	;volatile
  7467                           
  7468                           ;main.c: 138:         start_tone();
  7469  04F5  3186  269C  3184   	fcall	_start_tone
  7470  04F8                     __ccov102_end_blk6:
  7471  04F8                     __ccov103_start_blk8:
  7472  04F8                     i1l307:
  7473  04F8  0020               	movlb	0	; select bank0
  7474  04F9  14B3               	bsf	__ccovbit8_29/(0+8),__ccovbit8_29& (0+7)	;volatile
  7475  04FA  0008               	return
  7476  04FB                     __end_of_beep_short:
  7477  04FB                     
  7478                           	psect	text45
  7479  052D                     __ptext45:	
  7480 ;; *************** function _beep_long *****************
  7481 ;; Defined at:
  7482 ;;		line 142 in file "main.c"
  7483 ;; Parameters:    Size  Location     Type
  7484 ;;		None
  7485 ;; Auto vars:     Size  Location     Type
  7486 ;;		None
  7487 ;; Return value:  Size  Location     Type
  7488 ;;                  1    wreg      void 
  7489 ;; Registers used:
  7490 ;;		wreg, status,2, status,0, pclath, cstack
  7491 ;; Tracked objects:
  7492 ;;		On entry : 0/0
  7493 ;;		On exit  : 0/0
  7494 ;;		Unchanged: 0/0
  7495 ;; Data sizes:     COMMON   BANK0   BANK1
  7496 ;;      Params:         0       0       0
  7497 ;;      Locals:         0       0       0
  7498 ;;      Temps:          0       0       0
  7499 ;;      Totals:         0       0       0
  7500 ;;Total ram usage:        0 bytes
  7501 ;; Hardware stack levels used: 1
  7502 ;; Hardware stack levels required when called: 1
  7503 ;; This function calls:
  7504 ;;		_start_tone
  7505 ;; This function is called by:
  7506 ;;		_beep_double
  7507 ;;		_ms_200_work
  7508 ;; This function uses a non-reentrant model
  7509 ;;
  7510                           
  7511  052D                     _beep_long:	
  7512                           ;psect for function _beep_long
  7513                           
  7514                           
  7515                           ;incstack = 0
  7516                           ; Regs used in _beep_long: [wreg+status,2+status,0+pclath+cstack]
  7517  052D                     i1l1920:
  7518                           
  7519                           ;main.c: 143:     if (!ff.bits.ZUM_BUSY) {
  7520  052D  197B               	btfsc	_ff+2,2
  7521  052E  2D30               	goto	u142_21
  7522  052F  2D31               	goto	u142_20
  7523  0530                     u142_21:
  7524  0530  2D43               	goto	i1l312
  7525  0531                     __ccov104_end_blk0:
  7526  0531                     u142_20:
  7527  0531                     __ccov105_start_blk1:
  7528  0531                     i1l1922:
  7529                           
  7530                           ;main.c: 144:         if (beep_long_count > 0) beep_long_count--;
  7531  0531  0020               	movlb	0	; select bank0
  7532  0532  084E               	movf	_beep_long_count,w
  7533  0533  1903               	btfsc	3,2
  7534  0534  2D36               	goto	u143_21
  7535  0535  2D37               	goto	u143_20
  7536  0536                     u143_21:
  7537  0536  2D3A               	goto	i1l1926
  7538  0537                     __ccov105_end_blk1:
  7539  0537                     u143_20:
  7540  0537                     __ccov106_start_blk2:
  7541  0537                     i1l1924:
  7542  0537  1433               	bsf	__ccovbit2_30/(0+8),__ccovbit2_30& (0+7)	;volatile
  7543  0538  3001               	movlw	1
  7544  0539  02CE               	subwf	_beep_long_count,f
  7545  053A                     __ccov106_end_blk2:
  7546  053A                     __ccov107_start_blk4:
  7547  053A                     i1l1926:
  7548                           
  7549                           ;main.c: 145:         time_tone = LONG_ZUMMER_DELAY;
  7550  053A  3082               	movlw	130
  7551  053B  00BF               	movwf	_time_tone
  7552  053C  3000               	movlw	0
  7553  053D  00C0               	movwf	_time_tone+1
  7554  053E                     __ccov107_end_blk4:
  7555  053E                     __ccov108_start_blk5:
  7556  053E                     i1l1928:
  7557                           
  7558                           ;main.c: 146:         ff.bits.LAST_BEEP_LONG = 1;
  7559  053E  157C               	bsf	_ff+3,2
  7560  053F                     __ccov108_end_blk5:
  7561  053F                     __ccov109_start_blk6:
  7562  053F                     i1l1930:
  7563  053F  17B2               	bsf	__ccovbit6_31/(0+8),__ccovbit6_31& (0+7)	;volatile
  7564                           
  7565                           ;main.c: 147:         start_tone();
  7566  0540  3186  269C  3185   	fcall	_start_tone
  7567  0543                     __ccov109_end_blk6:
  7568  0543                     __ccov110_start_blk8:
  7569  0543                     i1l312:
  7570  0543  0020               	movlb	0	; select bank0
  7571  0544  1732               	bsf	__ccovbit8_32/(0+8),__ccovbit8_32& (0+7)	;volatile
  7572  0545  0008               	return
  7573  0546                     __end_of_beep_long:
  7574  0546                     
  7575                           	psect	text46
  7576  069C                     __ptext46:	
  7577 ;; *************** function _start_tone *****************
  7578 ;; Defined at:
  7579 ;;		line 121 in file "main.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;		None
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;		None
  7584 ;; Return value:  Size  Location     Type
  7585 ;;                  1    wreg      void 
  7586 ;; Registers used:
  7587 ;;		None
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/0
  7590 ;;		On exit  : 0/0
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMMON   BANK0   BANK1
  7593 ;;      Params:         0       0       0
  7594 ;;      Locals:         0       0       0
  7595 ;;      Temps:          0       0       0
  7596 ;;      Totals:         0       0       0
  7597 ;;Total ram usage:        0 bytes
  7598 ;; Hardware stack levels used: 1
  7599 ;; This function calls:
  7600 ;;		Nothing
  7601 ;; This function is called by:
  7602 ;;		_beep_short
  7603 ;;		_beep_long
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607  069C                     _start_tone:	
  7608                           ;psect for function _start_tone
  7609                           
  7610                           
  7611                           ;incstack = 0
  7612                           ; Regs used in _start_tone: []
  7613  069C                     i1l1906:
  7614                           
  7615                           ;main.c: 122:     ff.bits.ZUM_BUSY = 1;
  7616  069C  157B               	bsf	_ff+2,2
  7617                           
  7618                           ;main.c: 123:     ff.bits.TONE_ON = 1;
  7619  069D  17FA               	bsf	_ff+1,7
  7620                           
  7621                           ;main.c: 124:     ff.bits.TONE_OFF = 0;
  7622  069E  107B               	bcf	_ff+2,0
  7623  069F                     __ccov93_end_blk0:
  7624  069F                     __ccov94_start_blk1:
  7625  069F                     i1l299:
  7626  069F  0020               	movlb	0	; select bank0
  7627  06A0  16B3               	bsf	__ccovbit1_25/(0+8),__ccovbit1_25& (0+7)	;volatile
  7628  06A1  0008               	return
  7629  06A2                     __end_of_start_tone:
  7630  06A2                     
  7631                           	psect	text47
  7632  064B                     __ptext47:	
  7633 ;; *************** function _ms_100_work *****************
  7634 ;; Defined at:
  7635 ;;		line 517 in file "main.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;		None
  7638 ;; Auto vars:     Size  Location     Type
  7639 ;;		None
  7640 ;; Return value:  Size  Location     Type
  7641 ;;                  1    wreg      void 
  7642 ;; Registers used:
  7643 ;;		None
  7644 ;; Tracked objects:
  7645 ;;		On entry : 0/0
  7646 ;;		On exit  : 0/0
  7647 ;;		Unchanged: 0/0
  7648 ;; Data sizes:     COMMON   BANK0   BANK1
  7649 ;;      Params:         0       0       0
  7650 ;;      Locals:         0       0       0
  7651 ;;      Temps:          0       0       0
  7652 ;;      Totals:         0       0       0
  7653 ;;Total ram usage:        0 bytes
  7654 ;; Hardware stack levels used: 1
  7655 ;; This function calls:
  7656 ;;		Nothing
  7657 ;; This function is called by:
  7658 ;;		_ms_tick
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662  064B                     _ms_100_work:	
  7663                           ;psect for function _ms_100_work
  7664                           
  7665                           
  7666                           ;incstack = 0
  7667                           ; Regs used in _ms_100_work: []
  7668  064B                     i1l2136:
  7669                           
  7670                           ;main.c: 518:     if (ff.bits.NORMAL_WORK_MODE_ON || ff.bits.UNIVERSAL_VORK_MODE_ON) {
  7671  064B  1A7B               	btfsc	_ff+2,4
  7672  064C  2E4E               	goto	u185_21
  7673  064D  2E4F               	goto	u185_20
  7674  064E                     u185_21:
  7675  064E  2E55               	goto	i1l447
  7676  064F                     __ccov276_end_blk0:
  7677  064F                     u185_20:
  7678  064F                     __ccov277_start_blk1:
  7679  064F                     i1l2138:
  7680  064F  0020               	movlb	0	; select bank0
  7681  0650  1425               	bsf	__ccovbit1_142/(0+8),__ccovbit1_142& (0+7)	;volatile
  7682  0651  1EFB               	btfss	_ff+2,5
  7683  0652  2E54               	goto	u186_21
  7684  0653  2E55               	goto	u186_20
  7685  0654                     u186_21:
  7686  0654  2E58               	goto	i1l448
  7687  0655                     __ccov277_end_blk1:
  7688  0655                     u186_20:
  7689  0655                     __ccov278_start_blk2:
  7690  0655                     i1l447:
  7691  0655  0020               	movlb	0	; select bank0
  7692  0656  17A4               	bsf	__ccovbit2_143/(0+8),__ccovbit2_143& (0+7)	;volatile
  7693                           
  7694                           ;main.c: 519:         ff.bits.ALLOW_MEASURE = 1;
  7695  0657  1679               	bsf	_ff,4
  7696  0658                     __ccov278_end_blk2:
  7697  0658                     __ccov279_start_blk4:
  7698  0658                     i1l448:
  7699  0658  1724               	bsf	__ccovbit4_144/(0+8),__ccovbit4_144& (0+7)	;volatile
  7700  0659  0008               	return
  7701  065A                     __end_of_ms_100_work:
  7702  065A                     
  7703                           	psect	text48
  7704  0619                     __ptext48:	
  7705 ;; *************** function _TMR0_ISR *****************
  7706 ;; Defined at:
  7707 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  7708 ;; Parameters:    Size  Location     Type
  7709 ;;		None
  7710 ;; Auto vars:     Size  Location     Type
  7711 ;;		None
  7712 ;; Return value:  Size  Location     Type
  7713 ;;                  1    wreg      void 
  7714 ;; Registers used:
  7715 ;;		wreg, status,2, status,0, pclath, cstack
  7716 ;; Tracked objects:
  7717 ;;		On entry : 0/0
  7718 ;;		On exit  : 0/0
  7719 ;;		Unchanged: 0/0
  7720 ;; Data sizes:     COMMON   BANK0   BANK1
  7721 ;;      Params:         0       0       0
  7722 ;;      Locals:         0       0       0
  7723 ;;      Temps:          0       0       0
  7724 ;;      Totals:         0       0       0
  7725 ;;Total ram usage:        0 bytes
  7726 ;; Hardware stack levels used: 1
  7727 ;; Hardware stack levels required when called: 1
  7728 ;; This function calls:
  7729 ;;		Absolute function
  7730 ;;		_TMR0_DefaultInterruptHandler
  7731 ;;		_zummer_switch
  7732 ;; This function is called by:
  7733 ;;		_INTERRUPT_InterruptManager
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737  0619                     _TMR0_ISR:	
  7738                           ;psect for function _TMR0_ISR
  7739                           
  7740                           
  7741                           ;incstack = 0
  7742                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  7743  0619                     i1l2248:
  7744                           
  7745                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  7746  0619  110B               	bcf	11,2	;volatile
  7747  061A                     __ccov85_end_blk0:
  7748  061A                     __ccov86_start_blk1:
  7749  061A                     i1l2250:
  7750                           
  7751                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  7752  061A  0020               	movlb	0	; select bank0
  7753  061B  0857               	movf	_timer0ReloadVal,w	;volatile
  7754  061C  0095               	movwf	21	;volatile
  7755  061D                     __ccov86_end_blk1:
  7756  061D                     __ccov87_start_blk2:
  7757  061D                     i1l2252:
  7758                           
  7759                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  7760  061D  0853               	movf	_TMR0_InterruptHandler,w
  7761  061E  0454               	iorwf	_TMR0_InterruptHandler+1,w
  7762  061F  1903               	btfsc	3,2
  7763  0620  2E22               	goto	u210_21
  7764  0621  2E23               	goto	u210_20
  7765  0622                     u210_21:
  7766  0622  2E29               	goto	i1l190
  7767  0623                     __ccov87_end_blk2:
  7768  0623                     u210_20:
  7769  0623                     __ccov88_start_blk3:
  7770  0623                     i1l2254:
  7771  0623  1570               	bsf	__ccovbit3_21/(0+8),__ccovbit3_21& (0+7)	;volatile
  7772                           
  7773                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  7774  0624  0854               	movf	_TMR0_InterruptHandler+1,w
  7775  0625  008A               	movwf	10
  7776  0626  0853               	movf	_TMR0_InterruptHandler,w
  7777  0627  000A               	callw
  7778  0628  3186               	pagesel	$
  7779  0629                     __ccov88_end_blk3:
  7780  0629                     __ccov89_start_blk5:
  7781  0629                     i1l190:
  7782  0629  14F0               	bsf	__ccovbit5_22/(0+8),__ccovbit5_22& (0+7)	;volatile
  7783  062A  0008               	return
  7784  062B                     __end_of_TMR0_ISR:
  7785  062B                     
  7786                           	psect	text49
  7787  06B3                     __ptext49:	
  7788 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7789 ;; Defined at:
  7790 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;		None
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;		None
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  1    wreg      void 
  7797 ;; Registers used:
  7798 ;;		None
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMMON   BANK0   BANK1
  7804 ;;      Params:         0       0       0
  7805 ;;      Locals:         0       0       0
  7806 ;;      Temps:          0       0       0
  7807 ;;      Totals:         0       0       0
  7808 ;;Total ram usage:        0 bytes
  7809 ;; Hardware stack levels used: 1
  7810 ;; This function calls:
  7811 ;;		Nothing
  7812 ;; This function is called by:
  7813 ;;		_TMR0_Initialize
  7814 ;;		_TMR0_ISR
  7815 ;; This function uses a non-reentrant model
  7816 ;;
  7817                           
  7818  06B3                     _TMR0_DefaultInterruptHandler:	
  7819                           ;psect for function _TMR0_DefaultInterruptHandler
  7820                           
  7821                           
  7822                           ;incstack = 0
  7823                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  7824  06B3                     i1l196:
  7825  06B3  0020               	movlb	0	; select bank0
  7826  06B4  1733               	bsf	__ccovbit0_24/(0+8),__ccovbit0_24& (0+7)	;volatile
  7827  06B5  0008               	return
  7828  06B6                     __end_of_TMR0_DefaultInterruptHandler:
  7829  06B6                     
  7830                           	psect	text50
  7831  065A                     __ptext50:	
  7832 ;; *************** function _zummer_switch *****************
  7833 ;; Defined at:
  7834 ;;		line 584 in file "main.c"
  7835 ;; Parameters:    Size  Location     Type
  7836 ;;		None
  7837 ;; Auto vars:     Size  Location     Type
  7838 ;;		None
  7839 ;; Return value:  Size  Location     Type
  7840 ;;                  1    wreg      void 
  7841 ;; Registers used:
  7842 ;;		status,0
  7843 ;; Tracked objects:
  7844 ;;		On entry : 0/0
  7845 ;;		On exit  : 0/0
  7846 ;;		Unchanged: 0/0
  7847 ;; Data sizes:     COMMON   BANK0   BANK1
  7848 ;;      Params:         0       0       0
  7849 ;;      Locals:         0       0       0
  7850 ;;      Temps:          0       0       0
  7851 ;;      Totals:         0       0       0
  7852 ;;Total ram usage:        0 bytes
  7853 ;; Hardware stack levels used: 1
  7854 ;; This function calls:
  7855 ;;		Nothing
  7856 ;; This function is called by:
  7857 ;;		_start_setup
  7858 ;;		_TMR0_ISR
  7859 ;; This function uses a non-reentrant model
  7860 ;;
  7861                           
  7862  065A                     _zummer_switch:	
  7863                           ;psect for function _zummer_switch
  7864                           
  7865  065A                     i1l474:	
  7866                           ;incstack = 0
  7867                           ; Regs used in _zummer_switch: [status,0]
  7868                           ;main.c: 589:     do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  7869                           
  7870  065A                     i1l2246:
  7871  065A  1003               	clrc
  7872  065B  0022               	movlb	2	; select bank2
  7873  065C  1E8C               	btfss	12,5	;volatile
  7874  065D  1403               	setc
  7875  065E  1803               	btfsc	3,0
  7876  065F  2E61               	goto	u208_21
  7877  0660  2E64               	goto	u208_20
  7878  0661                     u208_21:
  7879  0661  0022               	movlb	2	; select bank2
  7880  0662  168C               	bsf	12,5	;volatile
  7881  0663  2E66               	goto	u209_24
  7882  0664                     u208_20:
  7883  0664  0022               	movlb	2	; select bank2
  7884  0665  128C               	bcf	12,5	;volatile
  7885  0666                     __ccov306_end_blk1:
  7886  0666                     u209_24:
  7887  0666                     __ccov307_start_blk3:
  7888  0666                     i1l476:
  7889  0666  0020               	movlb	0	; select bank0
  7890  0667  15A3               	bsf	__ccovbit3_155/(0+8),__ccovbit3_155& (0+7)	;volatile
  7891  0668  0008               	return
  7892  0669                     __end_of_zummer_switch:
  7893  0669                     
  7894                           	psect	codecov_info_hdr
  7895  0000                     __pcodecov_info_hdr:	
  7896                           ;
  7897                           ; Code-coverage Info Header
  7898                           ;
  7899                           
  7900  0000  0010               	db	16	; SIZE
  7901  0001  00000001           	ddw	1	; VERSION
  7902  0005  0001               	db	1	; POINTSIZE
  7903  0006  0008               	db	8	; UNITSIZE
  7904  0007  0001               	db	1	; FLAGS=SET
  7905  0008  00000000           	ddw	0	; Reserved
  7906  000C  00000000           	ddw	0	; Reserved
  7907                           
  7908                           	psect	codecov_info
  7909  0000                     __pcodecov_info:	
  7910                           ;
  7911                           ; Code-coverage Info
  7912                           ;
  7913                           
  7914                           
  7915                           ; Function: SYSTEM_Initialize, coverage: 1,0
  7916  0000  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  7917  0004  00000072           	ddw	__ccovbit1_1/(0+8)	; CC_ADDR
  7918  0008  00000001           	ddw	1	; NUM_POINTS
  7919  000C  00000006           	ddw	__ccovbit1_1& (0+7)	; OFFSET
  7920  0010  00000000           	ddw	0	; Reserved
  7921  0014  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  7922  0018  00000002           	ddw	2	; NUM_RANGES
  7923  001C  000005E0           	ddw	__ccov2_start_blk1	; block 1 START_ADDR
  7924  0020  000005E2           	ddw	__end_of_SYSTEM_Initialize	; block 1 END_ADDR
  7925  0024  000005CE           	ddw	_SYSTEM_Initialize	; block 0 START_ADDR
  7926  0028  000005E0           	ddw	__ccov1_end_blk0	; block 0 END_ADDR
  7927                           
  7928                           ; Function: OSCILLATOR_Initialize, coverage: 3,2,1,0
  7929  002C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  7930  0030  00000072           	ddw	__ccovbit3_2/(0+8)	; CC_ADDR
  7931  0034  00000001           	ddw	1	; NUM_POINTS
  7932  0038  00000005           	ddw	__ccovbit3_2& (0+7)	; OFFSET
  7933  003C  00000000           	ddw	0	; Reserved
  7934  0040  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  7935  0044  00000004           	ddw	4	; NUM_RANGES
  7936  0048  00000678           	ddw	__ccov6_start_blk3	; block 3 START_ADDR
  7937  004C  0000067A           	ddw	__end_of_OSCILLATOR_Initialize	; block 3 END_ADDR
  7938  0050  00000676           	ddw	__ccov5_start_blk2	; block 2 START_ADDR
  7939  0054  00000678           	ddw	__ccov5_end_blk2	; block 2 END_ADDR
  7940  0058  00000675           	ddw	__ccov4_start_blk1	; block 1 START_ADDR
  7941  005C  00000676           	ddw	__ccov4_end_blk1	; block 1 END_ADDR
  7942  0060  00000672           	ddw	_OSCILLATOR_Initialize	; block 0 START_ADDR
  7943  0064  00000675           	ddw	__ccov3_end_blk0	; block 0 END_ADDR
  7944                           
  7945                           ; Function: WDT_Initialize, coverage: 1,0
  7946  0068  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  7947  006C  00000072           	ddw	__ccovbit1_3/(0+8)	; CC_ADDR
  7948  0070  00000001           	ddw	1	; NUM_POINTS
  7949  0074  00000004           	ddw	__ccovbit1_3& (0+7)	; OFFSET
  7950  0078  00000000           	ddw	0	; Reserved
  7951  007C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  7952  0080  00000002           	ddw	2	; NUM_RANGES
  7953  0084  000006A5           	ddw	__ccov8_start_blk1	; block 1 START_ADDR
  7954  0088  000006A7           	ddw	__end_of_WDT_Initialize	; block 1 END_ADDR
  7955  008C  000006A2           	ddw	_WDT_Initialize	; block 0 START_ADDR
  7956  0090  000006A5           	ddw	__ccov7_end_blk0	; block 0 END_ADDR
  7957                           
  7958                           ; Function: ADC_Initialize, coverage: 3,2,1,0
  7959  0094  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  7960  0098  00000072           	ddw	__ccovbit3_4/(0+8)	; CC_ADDR
  7961  009C  00000001           	ddw	1	; NUM_POINTS
  7962  00A0  00000003           	ddw	__ccovbit3_4& (0+7)	; OFFSET
  7963  00A4  00000000           	ddw	0	; Reserved
  7964  00A8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  7965  00AC  00000004           	ddw	4	; NUM_RANGES
  7966  00B0  00000670           	ddw	__ccov12_start_blk3	; block 3 START_ADDR
  7967  00B4  00000672           	ddw	__end_of_ADC_Initialize	; block 3 END_ADDR
  7968  00B8  0000066D           	ddw	__ccov11_start_blk2	; block 2 START_ADDR
  7969  00BC  00000670           	ddw	__ccov11_end_blk2	; block 2 END_ADDR
  7970  00C0  0000066C           	ddw	__ccov10_start_blk1	; block 1 START_ADDR
  7971  00C4  0000066D           	ddw	__ccov10_end_blk1	; block 1 END_ADDR
  7972  00C8  00000669           	ddw	_ADC_Initialize	; block 0 START_ADDR
  7973  00CC  0000066C           	ddw	__ccov9_end_blk0	; block 0 END_ADDR
  7974                           
  7975                           ; Function: ADC_GetConversion, coverage: 9,7,5,3,2,1,0
  7976  00D0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  7977  00D4  00000072           	ddw	__ccovbit9_5/(0+8)	; CC_ADDR
  7978  00D8  00000001           	ddw	1	; NUM_POINTS
  7979  00DC  00000002           	ddw	__ccovbit9_5& (0+7)	; OFFSET
  7980  00E0  00000000           	ddw	0	; Reserved
  7981  00E4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  7982  00E8  00000007           	ddw	7	; NUM_RANGES
  7983  00EC  0000052B           	ddw	__ccov28_start_blk9	; block 9 START_ADDR
  7984  00F0  0000052D           	ddw	__end_of_ADC_GetConversion	; block 9 END_ADDR
  7985  00F4  0000052A           	ddw	__ccov27_start_blk7	; block 7 START_ADDR
  7986  00F8  0000052B           	ddw	__ccov27_end_blk7	; block 7 END_ADDR
  7987  00FC  00000526           	ddw	__ccov26_start_blk5	; block 5 START_ADDR
  7988  0100  0000052A           	ddw	__ccov26_end_blk5	; block 5 END_ADDR
  7989  0104  00000524           	ddw	__ccov25_start_blk3	; block 3 START_ADDR
  7990  0108  00000526           	ddw	__ccov25_end_blk3	; block 3 END_ADDR
  7991  010C  00000520           	ddw	__ccov24_start_blk2	; block 2 START_ADDR
  7992  0110  00000524           	ddw	__ccov24_end_blk2	; block 2 END_ADDR
  7993  0114  0000051F           	ddw	__ccov23_start_blk1	; block 1 START_ADDR
  7994  0118  00000520           	ddw	__ccov23_end_blk1	; block 1 END_ADDR
  7995  011C  00000514           	ddw	_ADC_GetConversion	; block 0 START_ADDR
  7996  0120  0000051F           	ddw	__ccov22_end_blk0	; block 0 END_ADDR
  7997                           
  7998                           ; Function: PIN_MANAGER_Initialize, coverage: 6,5,4,3,2,1,0
  7999  0124  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8000  0128  00000072           	ddw	__ccovbit6_6/(0+8)	; CC_ADDR
  8001  012C  00000001           	ddw	1	; NUM_POINTS
  8002  0130  00000001           	ddw	__ccovbit6_6& (0+7)	; OFFSET
  8003  0134  00000000           	ddw	0	; Reserved
  8004  0138  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8005  013C  00000007           	ddw	7	; NUM_RANGES
  8006  0140  000005B7           	ddw	__ccov37_start_blk6	; block 6 START_ADDR
  8007  0144  000005B9           	ddw	__end_of_PIN_MANAGER_Initialize	; block 6 END_ADDR
  8008  0148  000005B3           	ddw	__ccov36_start_blk5	; block 5 START_ADDR
  8009  014C  000005B7           	ddw	__ccov36_end_blk5	; block 5 END_ADDR
  8010  0150  000005AE           	ddw	__ccov35_start_blk4	; block 4 START_ADDR
  8011  0154  000005B3           	ddw	__ccov35_end_blk4	; block 4 END_ADDR
  8012  0158  000005AB           	ddw	__ccov34_start_blk3	; block 3 START_ADDR
  8013  015C  000005AE           	ddw	__ccov34_end_blk3	; block 3 END_ADDR
  8014  0160  000005A9           	ddw	__ccov33_start_blk2	; block 2 START_ADDR
  8015  0164  000005AB           	ddw	__ccov33_end_blk2	; block 2 END_ADDR
  8016  0168  000005A6           	ddw	__ccov32_start_blk1	; block 1 START_ADDR
  8017  016C  000005A9           	ddw	__ccov32_end_blk1	; block 1 END_ADDR
  8018  0170  000005A3           	ddw	_PIN_MANAGER_Initialize	; block 0 START_ADDR
  8019  0174  000005A6           	ddw	__ccov31_end_blk0	; block 0 END_ADDR
  8020                           
  8021                           ; Function: INTERRUPT_InterruptManager, coverage: 1,0
  8022  0178  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8023  017C  00000072           	ddw	__ccovbit1_7/(0+8)	; CC_ADDR
  8024  0180  00000001           	ddw	1	; NUM_POINTS
  8025  0184  00000000           	ddw	__ccovbit1_7& (0+7)	; OFFSET
  8026  0188  00000000           	ddw	0	; Reserved
  8027  018C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8028  0190  00000002           	ddw	2	; NUM_RANGES
  8029  0194  0000000A           	ddw	__ccov40_start_blk1	; block 1 START_ADDR
  8030  0198  0000000F           	ddw	__ccov40_end_blk1	; block 1 END_ADDR
  8031  019C  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8032  01A0  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8033                           
  8034                           ; Function: INTERRUPT_InterruptManager, coverage: 2,1,0
  8035  01A4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8036  01A8  00000071           	ddw	__ccovbit2_8/(0+8)	; CC_ADDR
  8037  01AC  00000001           	ddw	1	; NUM_POINTS
  8038  01B0  00000007           	ddw	__ccovbit2_8& (0+7)	; OFFSET
  8039  01B4  00000000           	ddw	0	; Reserved
  8040  01B8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8041  01BC  00000003           	ddw	3	; NUM_RANGES
  8042  01C0  0000000F           	ddw	__ccov41_start_blk2	; block 2 START_ADDR
  8043  01C4  00000014           	ddw	__ccov41_end_blk2	; block 2 END_ADDR
  8044  01C8  0000000A           	ddw	__ccov40_start_blk1	; block 1 START_ADDR
  8045  01CC  0000000F           	ddw	__ccov40_end_blk1	; block 1 END_ADDR
  8046  01D0  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8047  01D4  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8048                           
  8049                           ; Function: INTERRUPT_InterruptManager, coverage: 3,0
  8050  01D8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8051  01DC  00000071           	ddw	__ccovbit3_9/(0+8)	; CC_ADDR
  8052  01E0  00000001           	ddw	1	; NUM_POINTS
  8053  01E4  00000006           	ddw	__ccovbit3_9& (0+7)	; OFFSET
  8054  01E8  00000000           	ddw	0	; Reserved
  8055  01EC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8056  01F0  00000002           	ddw	2	; NUM_RANGES
  8057  01F4  00000014           	ddw	__ccov42_start_blk3	; block 3 START_ADDR
  8058  01F8  00000019           	ddw	__ccov42_end_blk3	; block 3 END_ADDR
  8059  01FC  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8060  0200  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8061                           
  8062                           ; Function: INTERRUPT_InterruptManager, coverage: 5,4,3,0
  8063  0204  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8064  0208  00000071           	ddw	__ccovbit5_10/(0+8)	; CC_ADDR
  8065  020C  00000001           	ddw	1	; NUM_POINTS
  8066  0210  00000005           	ddw	__ccovbit5_10& (0+7)	; OFFSET
  8067  0214  00000000           	ddw	0	; Reserved
  8068  0218  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8069  021C  00000004           	ddw	4	; NUM_RANGES
  8070  0220  0000001E           	ddw	__ccov44_start_blk5	; block 5 START_ADDR
  8071  0224  00000024           	ddw	__ccov44_end_blk5	; block 5 END_ADDR
  8072  0228  00000019           	ddw	__ccov43_start_blk4	; block 4 START_ADDR
  8073  022C  0000001E           	ddw	__ccov43_end_blk4	; block 4 END_ADDR
  8074  0230  00000014           	ddw	__ccov42_start_blk3	; block 3 START_ADDR
  8075  0234  00000019           	ddw	__ccov42_end_blk3	; block 3 END_ADDR
  8076  0238  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8077  023C  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8078                           
  8079                           ; Function: INTERRUPT_InterruptManager, coverage: 6,5,4,3,0
  8080  0240  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8081  0244  00000071           	ddw	__ccovbit6_11/(0+8)	; CC_ADDR
  8082  0248  00000001           	ddw	1	; NUM_POINTS
  8083  024C  00000004           	ddw	__ccovbit6_11& (0+7)	; OFFSET
  8084  0250  00000000           	ddw	0	; Reserved
  8085  0254  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8086  0258  00000005           	ddw	5	; NUM_RANGES
  8087  025C  00000024           	ddw	__ccov45_start_blk6	; block 6 START_ADDR
  8088  0260  00000029           	ddw	__ccov45_end_blk6	; block 6 END_ADDR
  8089  0264  0000001E           	ddw	__ccov44_start_blk5	; block 5 START_ADDR
  8090  0268  00000024           	ddw	__ccov44_end_blk5	; block 5 END_ADDR
  8091  026C  00000019           	ddw	__ccov43_start_blk4	; block 4 START_ADDR
  8092  0270  0000001E           	ddw	__ccov43_end_blk4	; block 4 END_ADDR
  8093  0274  00000014           	ddw	__ccov42_start_blk3	; block 3 START_ADDR
  8094  0278  00000019           	ddw	__ccov42_end_blk3	; block 3 END_ADDR
  8095  027C  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8096  0280  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8097                           
  8098                           ; Function: INTERRUPT_InterruptManager, coverage: 10,4,3,0
  8099  0284  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8100  0288  00000071           	ddw	__ccovbit10_12/(0+8)	; CC_ADDR
  8101  028C  00000001           	ddw	1	; NUM_POINTS
  8102  0290  00000003           	ddw	__ccovbit10_12& (0+7)	; OFFSET
  8103  0294  00000000           	ddw	0	; Reserved
  8104  0298  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8105  029C  00000004           	ddw	4	; NUM_RANGES
  8106  02A0  00000029           	ddw	__ccov46_start_blk10	; block 10 START_ADDR
  8107  02A4  0000002A           	ddw	__ccov46_end_blk10	; block 10 END_ADDR
  8108  02A8  00000019           	ddw	__ccov43_start_blk4	; block 4 START_ADDR
  8109  02AC  0000001E           	ddw	__ccov43_end_blk4	; block 4 END_ADDR
  8110  02B0  00000014           	ddw	__ccov42_start_blk3	; block 3 START_ADDR
  8111  02B4  00000019           	ddw	__ccov42_end_blk3	; block 3 END_ADDR
  8112  02B8  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8113  02BC  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8114                           
  8115                           ; Function: INTERRUPT_InterruptManager, coverage: 12,0
  8116  02C0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8117  02C4  00000071           	ddw	__ccovbit12_13/(0+8)	; CC_ADDR
  8118  02C8  00000001           	ddw	1	; NUM_POINTS
  8119  02CC  00000002           	ddw	__ccovbit12_13& (0+7)	; OFFSET
  8120  02D0  00000000           	ddw	0	; Reserved
  8121  02D4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8122  02D8  00000002           	ddw	2	; NUM_RANGES
  8123  02DC  0000002A           	ddw	__ccov47_start_blk12	; block 12 START_ADDR
  8124  02E0  0000002D           	ddw	__end_of_INTERRUPT_InterruptManager	; block 12 END_ADDR
  8125  02E4  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8126  02E8  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8127                           
  8128                           ; Function: TMR2_Initialize, coverage: 6,5,4,3,2,1,0
  8129  02EC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8130  02F0  00000071           	ddw	__ccovbit6_14/(0+8)	; CC_ADDR
  8131  02F4  00000001           	ddw	1	; NUM_POINTS
  8132  02F8  00000001           	ddw	__ccovbit6_14& (0+7)	; OFFSET
  8133  02FC  00000000           	ddw	0	; Reserved
  8134  0300  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8135  0304  00000007           	ddw	7	; NUM_RANGES
  8136  0308  000005F3           	ddw	__ccov54_start_blk6	; block 6 START_ADDR
  8137  030C  000005F5           	ddw	__end_of_TMR2_Initialize	; block 6 END_ADDR
  8138  0310  000005F0           	ddw	__ccov53_start_blk5	; block 5 START_ADDR
  8139  0314  000005F3           	ddw	__ccov53_end_blk5	; block 5 END_ADDR
  8140  0318  000005E9           	ddw	__ccov52_start_blk4	; block 4 START_ADDR
  8141  031C  000005F0           	ddw	__ccov52_end_blk4	; block 4 END_ADDR
  8142  0320  000005E7           	ddw	__ccov51_start_blk3	; block 3 START_ADDR
  8143  0324  000005E9           	ddw	__ccov51_end_blk3	; block 3 END_ADDR
  8144  0328  000005E6           	ddw	__ccov50_start_blk2	; block 2 START_ADDR
  8145  032C  000005E7           	ddw	__ccov50_end_blk2	; block 2 END_ADDR
  8146  0330  000005E5           	ddw	__ccov49_start_blk1	; block 1 START_ADDR
  8147  0334  000005E6           	ddw	__ccov49_end_blk1	; block 1 END_ADDR
  8148  0338  000005E2           	ddw	_TMR2_Initialize	; block 0 START_ADDR
  8149  033C  000005E5           	ddw	__ccov48_end_blk0	; block 0 END_ADDR
  8150                           
  8151                           ; Function: TMR2_StartTimer, coverage: 1,0
  8152  0340  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8153  0344  00000071           	ddw	__ccovbit1_15/(0+8)	; CC_ADDR
  8154  0348  00000001           	ddw	1	; NUM_POINTS
  8155  034C  00000000           	ddw	__ccovbit1_15& (0+7)	; OFFSET
  8156  0350  00000000           	ddw	0	; Reserved
  8157  0354  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8158  0358  00000002           	ddw	2	; NUM_RANGES
  8159  035C  000006AE           	ddw	__ccov56_start_blk1	; block 1 START_ADDR
  8160  0360  000006B0           	ddw	__end_of_TMR2_StartTimer	; block 1 END_ADDR
  8161  0364  000006AC           	ddw	_TMR2_StartTimer	; block 0 START_ADDR
  8162  0368  000006AE           	ddw	__ccov55_end_blk0	; block 0 END_ADDR
  8163                           
  8164                           ; Function: TMR2_ISR, coverage: 2,1,0
  8165  036C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8166  0370  00000070           	ddw	__ccovbit2_16/(0+8)	; CC_ADDR
  8167  0374  00000001           	ddw	1	; NUM_POINTS
  8168  0378  00000007           	ddw	__ccovbit2_16& (0+7)	; OFFSET
  8169  037C  00000000           	ddw	0	; Reserved
  8170  0380  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8171  0384  00000003           	ddw	3	; NUM_RANGES
  8172  0388  00000633           	ddw	__ccov67_start_blk2	; block 2 START_ADDR
  8173  038C  00000639           	ddw	__ccov67_end_blk2	; block 2 END_ADDR
  8174  0390  0000062D           	ddw	__ccov66_start_blk1	; block 1 START_ADDR
  8175  0394  00000633           	ddw	__ccov66_end_blk1	; block 1 END_ADDR
  8176  0398  0000062B           	ddw	_TMR2_ISR	; block 0 START_ADDR
  8177  039C  0000062D           	ddw	__ccov65_end_blk0	; block 0 END_ADDR
  8178                           
  8179                           ; Function: TMR2_ISR, coverage: 4,1,0
  8180  03A0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8181  03A4  00000070           	ddw	__ccovbit4_17/(0+8)	; CC_ADDR
  8182  03A8  00000001           	ddw	1	; NUM_POINTS
  8183  03AC  00000006           	ddw	__ccovbit4_17& (0+7)	; OFFSET
  8184  03B0  00000000           	ddw	0	; Reserved
  8185  03B4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8186  03B8  00000003           	ddw	3	; NUM_RANGES
  8187  03BC  00000639           	ddw	__ccov68_start_blk4	; block 4 START_ADDR
  8188  03C0  0000063B           	ddw	__end_of_TMR2_ISR	; block 4 END_ADDR
  8189  03C4  0000062D           	ddw	__ccov66_start_blk1	; block 1 START_ADDR
  8190  03C8  00000633           	ddw	__ccov66_end_blk1	; block 1 END_ADDR
  8191  03CC  0000062B           	ddw	_TMR2_ISR	; block 0 START_ADDR
  8192  03D0  0000062D           	ddw	__ccov65_end_blk0	; block 0 END_ADDR
  8193                           
  8194                           ; Function: TMR2_SetInterruptHandler, coverage: 1,0
  8195  03D4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8196  03D8  00000070           	ddw	__ccovbit1_18/(0+8)	; CC_ADDR
  8197  03DC  00000001           	ddw	1	; NUM_POINTS
  8198  03E0  00000005           	ddw	__ccovbit1_18& (0+7)	; OFFSET
  8199  03E4  00000000           	ddw	0	; Reserved
  8200  03E8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8201  03EC  00000002           	ddw	2	; NUM_RANGES
  8202  03F0  00000687           	ddw	__ccov70_start_blk1	; block 1 START_ADDR
  8203  03F4  00000689           	ddw	__end_of_TMR2_SetInterruptHandler	; block 1 END_ADDR
  8204  03F8  00000682           	ddw	_TMR2_SetInterruptHandler	; block 0 START_ADDR
  8205  03FC  00000687           	ddw	__ccov69_end_blk0	; block 0 END_ADDR
  8206                           
  8207                           ; Function: TMR2_DefaultInterruptHandler, coverage: 0
  8208  0400  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8209  0404  00000070           	ddw	__ccovbit0_19/(0+8)	; CC_ADDR
  8210  0408  00000001           	ddw	1	; NUM_POINTS
  8211  040C  00000004           	ddw	__ccovbit0_19& (0+7)	; OFFSET
  8212  0410  00000000           	ddw	0	; Reserved
  8213  0414  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8214  0418  00000001           	ddw	1	; NUM_RANGES
  8215  041C  000006C2           	ddw	_TMR2_DefaultInterruptHandler	; block 0 START_ADDR
  8216  0420  000006C4           	ddw	__end_of_TMR2_DefaultInterruptHandler	; block 0 END_ADDR
  8217                           
  8218                           ; Function: TMR0_Initialize, coverage: 6,5,4,3,2,1,0
  8219  0424  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8220  0428  00000070           	ddw	__ccovbit6_20/(0+8)	; CC_ADDR
  8221  042C  00000001           	ddw	1	; NUM_POINTS
  8222  0430  00000003           	ddw	__ccovbit6_20& (0+7)	; OFFSET
  8223  0434  00000000           	ddw	0	; Reserved
  8224  0438  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8225  043C  00000007           	ddw	7	; NUM_RANGES
  8226  0440  0000058A           	ddw	__ccov78_start_blk6	; block 6 START_ADDR
  8227  0444  0000058C           	ddw	__end_of_TMR0_Initialize	; block 6 END_ADDR
  8228  0448  00000583           	ddw	__ccov77_start_blk5	; block 5 START_ADDR
  8229  044C  0000058A           	ddw	__ccov77_end_blk5	; block 5 END_ADDR
  8230  0450  00000582           	ddw	__ccov76_start_blk4	; block 4 START_ADDR
  8231  0454  00000583           	ddw	__ccov76_end_blk4	; block 4 END_ADDR
  8232  0458  00000581           	ddw	__ccov75_start_blk3	; block 3 START_ADDR
  8233  045C  00000582           	ddw	__ccov75_end_blk3	; block 3 END_ADDR
  8234  0460  0000057D           	ddw	__ccov74_start_blk2	; block 2 START_ADDR
  8235  0464  00000581           	ddw	__ccov74_end_blk2	; block 2 END_ADDR
  8236  0468  0000057A           	ddw	__ccov73_start_blk1	; block 1 START_ADDR
  8237  046C  0000057D           	ddw	__ccov73_end_blk1	; block 1 END_ADDR
  8238  0470  00000575           	ddw	_TMR0_Initialize	; block 0 START_ADDR
  8239  0474  0000057A           	ddw	__ccov72_end_blk0	; block 0 END_ADDR
  8240                           
  8241                           ; Function: TMR0_ISR, coverage: 3,2,1,0
  8242  0478  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8243  047C  00000070           	ddw	__ccovbit3_21/(0+8)	; CC_ADDR
  8244  0480  00000001           	ddw	1	; NUM_POINTS
  8245  0484  00000002           	ddw	__ccovbit3_21& (0+7)	; OFFSET
  8246  0488  00000000           	ddw	0	; Reserved
  8247  048C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8248  0490  00000004           	ddw	4	; NUM_RANGES
  8249  0494  00000623           	ddw	__ccov88_start_blk3	; block 3 START_ADDR
  8250  0498  00000629           	ddw	__ccov88_end_blk3	; block 3 END_ADDR
  8251  049C  0000061D           	ddw	__ccov87_start_blk2	; block 2 START_ADDR
  8252  04A0  00000623           	ddw	__ccov87_end_blk2	; block 2 END_ADDR
  8253  04A4  0000061A           	ddw	__ccov86_start_blk1	; block 1 START_ADDR
  8254  04A8  0000061D           	ddw	__ccov86_end_blk1	; block 1 END_ADDR
  8255  04AC  00000619           	ddw	_TMR0_ISR	; block 0 START_ADDR
  8256  04B0  0000061A           	ddw	__ccov85_end_blk0	; block 0 END_ADDR
  8257                           
  8258                           ; Function: TMR0_ISR, coverage: 5,2,1,0
  8259  04B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8260  04B8  00000070           	ddw	__ccovbit5_22/(0+8)	; CC_ADDR
  8261  04BC  00000001           	ddw	1	; NUM_POINTS
  8262  04C0  00000001           	ddw	__ccovbit5_22& (0+7)	; OFFSET
  8263  04C4  00000000           	ddw	0	; Reserved
  8264  04C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8265  04CC  00000004           	ddw	4	; NUM_RANGES
  8266  04D0  00000629           	ddw	__ccov89_start_blk5	; block 5 START_ADDR
  8267  04D4  0000062B           	ddw	__end_of_TMR0_ISR	; block 5 END_ADDR
  8268  04D8  0000061D           	ddw	__ccov87_start_blk2	; block 2 START_ADDR
  8269  04DC  00000623           	ddw	__ccov87_end_blk2	; block 2 END_ADDR
  8270  04E0  0000061A           	ddw	__ccov86_start_blk1	; block 1 START_ADDR
  8271  04E4  0000061D           	ddw	__ccov86_end_blk1	; block 1 END_ADDR
  8272  04E8  00000619           	ddw	_TMR0_ISR	; block 0 START_ADDR
  8273  04EC  0000061A           	ddw	__ccov85_end_blk0	; block 0 END_ADDR
  8274                           
  8275                           ; Function: TMR0_SetInterruptHandler, coverage: 1,0
  8276  04F0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8277  04F4  00000070           	ddw	__ccovbit1_23/(0+8)	; CC_ADDR
  8278  04F8  00000001           	ddw	1	; NUM_POINTS
  8279  04FC  00000000           	ddw	__ccovbit1_23& (0+7)	; OFFSET
  8280  0500  00000000           	ddw	0	; Reserved
  8281  0504  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8282  0508  00000002           	ddw	2	; NUM_RANGES
  8283  050C  0000068E           	ddw	__ccov91_start_blk1	; block 1 START_ADDR
  8284  0510  00000690           	ddw	__end_of_TMR0_SetInterruptHandler	; block 1 END_ADDR
  8285  0514  00000689           	ddw	_TMR0_SetInterruptHandler	; block 0 START_ADDR
  8286  0518  0000068E           	ddw	__ccov90_end_blk0	; block 0 END_ADDR
  8287                           
  8288                           ; Function: TMR0_DefaultInterruptHandler, coverage: 0
  8289  051C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8290  0520  00000033           	ddw	__ccovbit0_24/(0+8)	; CC_ADDR
  8291  0524  00000001           	ddw	1	; NUM_POINTS
  8292  0528  00000006           	ddw	__ccovbit0_24& (0+7)	; OFFSET
  8293  052C  00000000           	ddw	0	; Reserved
  8294  0530  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8295  0534  00000001           	ddw	1	; NUM_RANGES
  8296  0538  000006B3           	ddw	_TMR0_DefaultInterruptHandler	; block 0 START_ADDR
  8297  053C  000006B6           	ddw	__end_of_TMR0_DefaultInterruptHandler	; block 0 END_ADDR
  8298                           
  8299                           ; Function: start_tone, coverage: 1,0
  8300  0540  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8301  0544  00000033           	ddw	__ccovbit1_25/(0+8)	; CC_ADDR
  8302  0548  00000001           	ddw	1	; NUM_POINTS
  8303  054C  00000005           	ddw	__ccovbit1_25& (0+7)	; OFFSET
  8304  0550  00000000           	ddw	0	; Reserved
  8305  0554  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8306  0558  00000002           	ddw	2	; NUM_RANGES
  8307  055C  0000069F           	ddw	__ccov94_start_blk1	; block 1 START_ADDR
  8308  0560  000006A2           	ddw	__end_of_start_tone	; block 1 END_ADDR
  8309  0564  0000069C           	ddw	_start_tone	; block 0 START_ADDR
  8310  0568  0000069F           	ddw	__ccov93_end_blk0	; block 0 END_ADDR
  8311                           
  8312                           ; Function: stop_tone, coverage: 1,0
  8313  056C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8314  0570  00000033           	ddw	__ccovbit1_26/(0+8)	; CC_ADDR
  8315  0574  00000001           	ddw	1	; NUM_POINTS
  8316  0578  00000004           	ddw	__ccovbit1_26& (0+7)	; OFFSET
  8317  057C  00000000           	ddw	0	; Reserved
  8318  0580  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8319  0584  00000002           	ddw	2	; NUM_RANGES
  8320  0588  00000699           	ddw	__ccov96_start_blk1	; block 1 START_ADDR
  8321  058C  0000069C           	ddw	__end_of_stop_tone	; block 1 END_ADDR
  8322  0590  00000696           	ddw	_stop_tone	; block 0 START_ADDR
  8323  0594  00000699           	ddw	__ccov95_end_blk0	; block 0 END_ADDR
  8324                           
  8325                           ; Function: beep_short, coverage: 2,1,0
  8326  0598  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8327  059C  00000033           	ddw	__ccovbit2_27/(0+8)	; CC_ADDR
  8328  05A0  00000001           	ddw	1	; NUM_POINTS
  8329  05A4  00000003           	ddw	__ccovbit2_27& (0+7)	; OFFSET
  8330  05A8  00000000           	ddw	0	; Reserved
  8331  05AC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8332  05B0  00000003           	ddw	3	; NUM_RANGES
  8333  05B4  000004EA           	ddw	__ccov99_start_blk2	; block 2 START_ADDR
  8334  05B8  000004EE           	ddw	__ccov99_end_blk2	; block 2 END_ADDR
  8335  05BC  000004E5           	ddw	__ccov98_start_blk1	; block 1 START_ADDR
  8336  05C0  000004EA           	ddw	__ccov98_end_blk1	; block 1 END_ADDR
  8337  05C4  000004E1           	ddw	_beep_short	; block 0 START_ADDR
  8338  05C8  000004E5           	ddw	__ccov97_end_blk0	; block 0 END_ADDR
  8339                           
  8340                           ; Function: beep_short, coverage: 6,5,4,1,0
  8341  05CC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8342  05D0  00000033           	ddw	__ccovbit6_28/(0+8)	; CC_ADDR
  8343  05D4  00000001           	ddw	1	; NUM_POINTS
  8344  05D8  00000002           	ddw	__ccovbit6_28& (0+7)	; OFFSET
  8345  05DC  00000000           	ddw	0	; Reserved
  8346  05E0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8347  05E4  00000005           	ddw	5	; NUM_RANGES
  8348  05E8  000004F4           	ddw	__ccov102_start_blk6	; block 6 START_ADDR
  8349  05EC  000004F8           	ddw	__ccov102_end_blk6	; block 6 END_ADDR
  8350  05F0  000004F3           	ddw	__ccov101_start_blk5	; block 5 START_ADDR
  8351  05F4  000004F4           	ddw	__ccov101_end_blk5	; block 5 END_ADDR
  8352  05F8  000004EE           	ddw	__ccov100_start_blk4	; block 4 START_ADDR
  8353  05FC  000004F3           	ddw	__ccov100_end_blk4	; block 4 END_ADDR
  8354  0600  000004E5           	ddw	__ccov98_start_blk1	; block 1 START_ADDR
  8355  0604  000004EA           	ddw	__ccov98_end_blk1	; block 1 END_ADDR
  8356  0608  000004E1           	ddw	_beep_short	; block 0 START_ADDR
  8357  060C  000004E5           	ddw	__ccov97_end_blk0	; block 0 END_ADDR
  8358                           
  8359                           ; Function: beep_short, coverage: 8,0
  8360  0610  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8361  0614  00000033           	ddw	__ccovbit8_29/(0+8)	; CC_ADDR
  8362  0618  00000001           	ddw	1	; NUM_POINTS
  8363  061C  00000001           	ddw	__ccovbit8_29& (0+7)	; OFFSET
  8364  0620  00000000           	ddw	0	; Reserved
  8365  0624  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8366  0628  00000002           	ddw	2	; NUM_RANGES
  8367  062C  000004F8           	ddw	__ccov103_start_blk8	; block 8 START_ADDR
  8368  0630  000004FB           	ddw	__end_of_beep_short	; block 8 END_ADDR
  8369  0634  000004E1           	ddw	_beep_short	; block 0 START_ADDR
  8370  0638  000004E5           	ddw	__ccov97_end_blk0	; block 0 END_ADDR
  8371                           
  8372                           ; Function: beep_long, coverage: 2,1,0
  8373  063C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8374  0640  00000033           	ddw	__ccovbit2_30/(0+8)	; CC_ADDR
  8375  0644  00000001           	ddw	1	; NUM_POINTS
  8376  0648  00000000           	ddw	__ccovbit2_30& (0+7)	; OFFSET
  8377  064C  00000000           	ddw	0	; Reserved
  8378  0650  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8379  0654  00000003           	ddw	3	; NUM_RANGES
  8380  0658  00000537           	ddw	__ccov106_start_blk2	; block 2 START_ADDR
  8381  065C  0000053A           	ddw	__ccov106_end_blk2	; block 2 END_ADDR
  8382  0660  00000531           	ddw	__ccov105_start_blk1	; block 1 START_ADDR
  8383  0664  00000537           	ddw	__ccov105_end_blk1	; block 1 END_ADDR
  8384  0668  0000052D           	ddw	_beep_long	; block 0 START_ADDR
  8385  066C  00000531           	ddw	__ccov104_end_blk0	; block 0 END_ADDR
  8386                           
  8387                           ; Function: beep_long, coverage: 6,5,4,1,0
  8388  0670  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8389  0674  00000032           	ddw	__ccovbit6_31/(0+8)	; CC_ADDR
  8390  0678  00000001           	ddw	1	; NUM_POINTS
  8391  067C  00000007           	ddw	__ccovbit6_31& (0+7)	; OFFSET
  8392  0680  00000000           	ddw	0	; Reserved
  8393  0684  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8394  0688  00000005           	ddw	5	; NUM_RANGES
  8395  068C  0000053F           	ddw	__ccov109_start_blk6	; block 6 START_ADDR
  8396  0690  00000543           	ddw	__ccov109_end_blk6	; block 6 END_ADDR
  8397  0694  0000053E           	ddw	__ccov108_start_blk5	; block 5 START_ADDR
  8398  0698  0000053F           	ddw	__ccov108_end_blk5	; block 5 END_ADDR
  8399  069C  0000053A           	ddw	__ccov107_start_blk4	; block 4 START_ADDR
  8400  06A0  0000053E           	ddw	__ccov107_end_blk4	; block 4 END_ADDR
  8401  06A4  00000531           	ddw	__ccov105_start_blk1	; block 1 START_ADDR
  8402  06A8  00000537           	ddw	__ccov105_end_blk1	; block 1 END_ADDR
  8403  06AC  0000052D           	ddw	_beep_long	; block 0 START_ADDR
  8404  06B0  00000531           	ddw	__ccov104_end_blk0	; block 0 END_ADDR
  8405                           
  8406                           ; Function: beep_long, coverage: 8,0
  8407  06B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8408  06B8  00000032           	ddw	__ccovbit8_32/(0+8)	; CC_ADDR
  8409  06BC  00000001           	ddw	1	; NUM_POINTS
  8410  06C0  00000006           	ddw	__ccovbit8_32& (0+7)	; OFFSET
  8411  06C4  00000000           	ddw	0	; Reserved
  8412  06C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8413  06CC  00000002           	ddw	2	; NUM_RANGES
  8414  06D0  00000543           	ddw	__ccov110_start_blk8	; block 8 START_ADDR
  8415  06D4  00000546           	ddw	__end_of_beep_long	; block 8 END_ADDR
  8416  06D8  0000052D           	ddw	_beep_long	; block 0 START_ADDR
  8417  06DC  00000531           	ddw	__ccov104_end_blk0	; block 0 END_ADDR
  8418                           
  8419                           ; Function: beep_double, coverage: 1,0
  8420  06E0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8421  06E4  00000032           	ddw	__ccovbit1_33/(0+8)	; CC_ADDR
  8422  06E8  00000001           	ddw	1	; NUM_POINTS
  8423  06EC  00000005           	ddw	__ccovbit1_33& (0+7)	; OFFSET
  8424  06F0  00000000           	ddw	0	; Reserved
  8425  06F4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8426  06F8  00000002           	ddw	2	; NUM_RANGES
  8427  06FC  0000060B           	ddw	__ccov112_start_blk1	; block 1 START_ADDR
  8428  0700  00000611           	ddw	__ccov112_end_blk1	; block 1 END_ADDR
  8429  0704  00000607           	ddw	_beep_double	; block 0 START_ADDR
  8430  0708  0000060B           	ddw	__ccov111_end_blk0	; block 0 END_ADDR
  8431                           
  8432                           ; Function: beep_double, coverage: 3,0
  8433  070C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8434  0710  00000032           	ddw	__ccovbit3_34/(0+8)	; CC_ADDR
  8435  0714  00000001           	ddw	1	; NUM_POINTS
  8436  0718  00000004           	ddw	__ccovbit3_34& (0+7)	; OFFSET
  8437  071C  00000000           	ddw	0	; Reserved
  8438  0720  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8439  0724  00000002           	ddw	2	; NUM_RANGES
  8440  0728  00000611           	ddw	__ccov113_start_blk3	; block 3 START_ADDR
  8441  072C  00000616           	ddw	__ccov113_end_blk3	; block 3 END_ADDR
  8442  0730  00000607           	ddw	_beep_double	; block 0 START_ADDR
  8443  0734  0000060B           	ddw	__ccov111_end_blk0	; block 0 END_ADDR
  8444                           
  8445                           ; Function: beep_double, coverage: 5,0
  8446  0738  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8447  073C  00000032           	ddw	__ccovbit5_35/(0+8)	; CC_ADDR
  8448  0740  00000001           	ddw	1	; NUM_POINTS
  8449  0744  00000003           	ddw	__ccovbit5_35& (0+7)	; OFFSET
  8450  0748  00000000           	ddw	0	; Reserved
  8451  074C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8452  0750  00000002           	ddw	2	; NUM_RANGES
  8453  0754  00000616           	ddw	__ccov114_start_blk5	; block 5 START_ADDR
  8454  0758  00000619           	ddw	__end_of_beep_double	; block 5 END_ADDR
  8455  075C  00000607           	ddw	_beep_double	; block 0 START_ADDR
  8456  0760  0000060B           	ddw	__ccov111_end_blk0	; block 0 END_ADDR
  8457                           
  8458                           ; Function: go_close, coverage: 1,0
  8459  0764  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8460  0768  00000032           	ddw	__ccovbit1_36/(0+8)	; CC_ADDR
  8461  076C  00000001           	ddw	1	; NUM_POINTS
  8462  0770  00000002           	ddw	__ccovbit1_36& (0+7)	; OFFSET
  8463  0774  00000000           	ddw	0	; Reserved
  8464  0778  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8465  077C  00000002           	ddw	2	; NUM_RANGES
  8466  0780  000003EC           	ddw	__ccov116_start_blk1	; block 1 START_ADDR
  8467  0784  000003F2           	ddw	__ccov116_end_blk1	; block 1 END_ADDR
  8468  0788  000003E8           	ddw	_go_close	; block 0 START_ADDR
  8469  078C  000003EC           	ddw	__ccov115_end_blk0	; block 0 END_ADDR
  8470                           
  8471                           ; Function: go_close, coverage: 2,1,0
  8472  0790  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8473  0794  00000032           	ddw	__ccovbit2_37/(0+8)	; CC_ADDR
  8474  0798  00000001           	ddw	1	; NUM_POINTS
  8475  079C  00000001           	ddw	__ccovbit2_37& (0+7)	; OFFSET
  8476  07A0  00000000           	ddw	0	; Reserved
  8477  07A4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8478  07A8  00000003           	ddw	3	; NUM_RANGES
  8479  07AC  000003F2           	ddw	__ccov117_start_blk2	; block 2 START_ADDR
  8480  07B0  000003F7           	ddw	__ccov117_end_blk2	; block 2 END_ADDR
  8481  07B4  000003EC           	ddw	__ccov116_start_blk1	; block 1 START_ADDR
  8482  07B8  000003F2           	ddw	__ccov116_end_blk1	; block 1 END_ADDR
  8483  07BC  000003E8           	ddw	_go_close	; block 0 START_ADDR
  8484  07C0  000003EC           	ddw	__ccov115_end_blk0	; block 0 END_ADDR
  8485                           
  8486                           ; Function: go_close, coverage: 4,3,2,1,0
  8487  07C4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8488  07C8  00000032           	ddw	__ccovbit4_38/(0+8)	; CC_ADDR
  8489  07CC  00000001           	ddw	1	; NUM_POINTS
  8490  07D0  00000000           	ddw	__ccovbit4_38& (0+7)	; OFFSET
  8491  07D4  00000000           	ddw	0	; Reserved
  8492  07D8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8493  07DC  00000005           	ddw	5	; NUM_RANGES
  8494  07E0  000003FC           	ddw	__ccov119_start_blk4	; block 4 START_ADDR
  8495  07E4  0000040F           	ddw	__ccov119_end_blk4	; block 4 END_ADDR
  8496  07E8  000003F7           	ddw	__ccov118_start_blk3	; block 3 START_ADDR
  8497  07EC  000003FC           	ddw	__ccov118_end_blk3	; block 3 END_ADDR
  8498  07F0  000003F2           	ddw	__ccov117_start_blk2	; block 2 START_ADDR
  8499  07F4  000003F7           	ddw	__ccov117_end_blk2	; block 2 END_ADDR
  8500  07F8  000003EC           	ddw	__ccov116_start_blk1	; block 1 START_ADDR
  8501  07FC  000003F2           	ddw	__ccov116_end_blk1	; block 1 END_ADDR
  8502  0800  000003E8           	ddw	_go_close	; block 0 START_ADDR
  8503  0804  000003EC           	ddw	__ccov115_end_blk0	; block 0 END_ADDR
  8504                           
  8505                           ; Function: go_close, coverage: 6,0
  8506  0808  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8507  080C  00000031           	ddw	__ccovbit6_39/(0+8)	; CC_ADDR
  8508  0810  00000001           	ddw	1	; NUM_POINTS
  8509  0814  00000007           	ddw	__ccovbit6_39& (0+7)	; OFFSET
  8510  0818  00000000           	ddw	0	; Reserved
  8511  081C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8512  0820  00000002           	ddw	2	; NUM_RANGES
  8513  0824  0000040F           	ddw	__ccov120_start_blk6	; block 6 START_ADDR
  8514  0828  00000412           	ddw	__end_of_go_close	; block 6 END_ADDR
  8515  082C  000003E8           	ddw	_go_close	; block 0 START_ADDR
  8516  0830  000003EC           	ddw	__ccov115_end_blk0	; block 0 END_ADDR
  8517                           
  8518                           ; Function: go_close_short, coverage: 1,0
  8519  0834  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8520  0838  00000031           	ddw	__ccovbit1_40/(0+8)	; CC_ADDR
  8521  083C  00000001           	ddw	1	; NUM_POINTS
  8522  0840  00000006           	ddw	__ccovbit1_40& (0+7)	; OFFSET
  8523  0844  00000000           	ddw	0	; Reserved
  8524  0848  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8525  084C  00000002           	ddw	2	; NUM_RANGES
  8526  0850  00000463           	ddw	__ccov122_start_blk1	; block 1 START_ADDR
  8527  0854  00000469           	ddw	__ccov122_end_blk1	; block 1 END_ADDR
  8528  0858  0000045F           	ddw	_go_close_short	; block 0 START_ADDR
  8529  085C  00000463           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  8530                           
  8531                           ; Function: go_close_short, coverage: 2,1,0
  8532  0860  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8533  0864  00000031           	ddw	__ccovbit2_41/(0+8)	; CC_ADDR
  8534  0868  00000001           	ddw	1	; NUM_POINTS
  8535  086C  00000005           	ddw	__ccovbit2_41& (0+7)	; OFFSET
  8536  0870  00000000           	ddw	0	; Reserved
  8537  0874  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8538  0878  00000003           	ddw	3	; NUM_RANGES
  8539  087C  00000469           	ddw	__ccov123_start_blk2	; block 2 START_ADDR
  8540  0880  0000046E           	ddw	__ccov123_end_blk2	; block 2 END_ADDR
  8541  0884  00000463           	ddw	__ccov122_start_blk1	; block 1 START_ADDR
  8542  0888  00000469           	ddw	__ccov122_end_blk1	; block 1 END_ADDR
  8543  088C  0000045F           	ddw	_go_close_short	; block 0 START_ADDR
  8544  0890  00000463           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  8545                           
  8546                           ; Function: go_close_short, coverage: 4,3,2,1,0
  8547  0894  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8548  0898  00000031           	ddw	__ccovbit4_42/(0+8)	; CC_ADDR
  8549  089C  00000001           	ddw	1	; NUM_POINTS
  8550  08A0  00000004           	ddw	__ccovbit4_42& (0+7)	; OFFSET
  8551  08A4  00000000           	ddw	0	; Reserved
  8552  08A8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8553  08AC  00000005           	ddw	5	; NUM_RANGES
  8554  08B0  00000473           	ddw	__ccov125_start_blk4	; block 4 START_ADDR
  8555  08B4  00000480           	ddw	__ccov125_end_blk4	; block 4 END_ADDR
  8556  08B8  0000046E           	ddw	__ccov124_start_blk3	; block 3 START_ADDR
  8557  08BC  00000473           	ddw	__ccov124_end_blk3	; block 3 END_ADDR
  8558  08C0  00000469           	ddw	__ccov123_start_blk2	; block 2 START_ADDR
  8559  08C4  0000046E           	ddw	__ccov123_end_blk2	; block 2 END_ADDR
  8560  08C8  00000463           	ddw	__ccov122_start_blk1	; block 1 START_ADDR
  8561  08CC  00000469           	ddw	__ccov122_end_blk1	; block 1 END_ADDR
  8562  08D0  0000045F           	ddw	_go_close_short	; block 0 START_ADDR
  8563  08D4  00000463           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  8564                           
  8565                           ; Function: go_close_short, coverage: 6,0
  8566  08D8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8567  08DC  00000031           	ddw	__ccovbit6_43/(0+8)	; CC_ADDR
  8568  08E0  00000001           	ddw	1	; NUM_POINTS
  8569  08E4  00000003           	ddw	__ccovbit6_43& (0+7)	; OFFSET
  8570  08E8  00000000           	ddw	0	; Reserved
  8571  08EC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8572  08F0  00000002           	ddw	2	; NUM_RANGES
  8573  08F4  00000480           	ddw	__ccov126_start_blk6	; block 6 START_ADDR
  8574  08F8  00000483           	ddw	__end_of_go_close_short	; block 6 END_ADDR
  8575  08FC  0000045F           	ddw	_go_close_short	; block 0 START_ADDR
  8576  0900  00000463           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  8577                           
  8578                           ; Function: go_open, coverage: 1,0
  8579  0904  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8580  0908  00000031           	ddw	__ccovbit1_44/(0+8)	; CC_ADDR
  8581  090C  00000001           	ddw	1	; NUM_POINTS
  8582  0910  00000002           	ddw	__ccovbit1_44& (0+7)	; OFFSET
  8583  0914  00000000           	ddw	0	; Reserved
  8584  0918  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8585  091C  00000002           	ddw	2	; NUM_RANGES
  8586  0920  000004C9           	ddw	__ccov128_start_blk1	; block 1 START_ADDR
  8587  0924  000004CF           	ddw	__ccov128_end_blk1	; block 1 END_ADDR
  8588  0928  000004C5           	ddw	_go_open	; block 0 START_ADDR
  8589  092C  000004C9           	ddw	__ccov127_end_blk0	; block 0 END_ADDR
  8590                           
  8591                           ; Function: go_open, coverage: 2,1,0
  8592  0930  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8593  0934  00000031           	ddw	__ccovbit2_45/(0+8)	; CC_ADDR
  8594  0938  00000001           	ddw	1	; NUM_POINTS
  8595  093C  00000001           	ddw	__ccovbit2_45& (0+7)	; OFFSET
  8596  0940  00000000           	ddw	0	; Reserved
  8597  0944  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8598  0948  00000003           	ddw	3	; NUM_RANGES
  8599  094C  000004CF           	ddw	__ccov129_start_blk2	; block 2 START_ADDR
  8600  0950  000004D4           	ddw	__ccov129_end_blk2	; block 2 END_ADDR
  8601  0954  000004C9           	ddw	__ccov128_start_blk1	; block 1 START_ADDR
  8602  0958  000004CF           	ddw	__ccov128_end_blk1	; block 1 END_ADDR
  8603  095C  000004C5           	ddw	_go_open	; block 0 START_ADDR
  8604  0960  000004C9           	ddw	__ccov127_end_blk0	; block 0 END_ADDR
  8605                           
  8606                           ; Function: go_open, coverage: 4,3,2,1,0
  8607  0964  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8608  0968  00000031           	ddw	__ccovbit4_46/(0+8)	; CC_ADDR
  8609  096C  00000001           	ddw	1	; NUM_POINTS
  8610  0970  00000000           	ddw	__ccovbit4_46& (0+7)	; OFFSET
  8611  0974  00000000           	ddw	0	; Reserved
  8612  0978  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8613  097C  00000005           	ddw	5	; NUM_RANGES
  8614  0980  000004D9           	ddw	__ccov131_start_blk4	; block 4 START_ADDR
  8615  0984  000004DE           	ddw	__ccov131_end_blk4	; block 4 END_ADDR
  8616  0988  000004D4           	ddw	__ccov130_start_blk3	; block 3 START_ADDR
  8617  098C  000004D9           	ddw	__ccov130_end_blk3	; block 3 END_ADDR
  8618  0990  000004CF           	ddw	__ccov129_start_blk2	; block 2 START_ADDR
  8619  0994  000004D4           	ddw	__ccov129_end_blk2	; block 2 END_ADDR
  8620  0998  000004C9           	ddw	__ccov128_start_blk1	; block 1 START_ADDR
  8621  099C  000004CF           	ddw	__ccov128_end_blk1	; block 1 END_ADDR
  8622  09A0  000004C5           	ddw	_go_open	; block 0 START_ADDR
  8623  09A4  000004C9           	ddw	__ccov127_end_blk0	; block 0 END_ADDR
  8624                           
  8625                           ; Function: go_open, coverage: 7,0
  8626  09A8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8627  09AC  00000030           	ddw	__ccovbit7_47/(0+8)	; CC_ADDR
  8628  09B0  00000001           	ddw	1	; NUM_POINTS
  8629  09B4  00000007           	ddw	__ccovbit7_47& (0+7)	; OFFSET
  8630  09B8  00000000           	ddw	0	; Reserved
  8631  09BC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8632  09C0  00000002           	ddw	2	; NUM_RANGES
  8633  09C4  000004DE           	ddw	__ccov132_start_blk7	; block 7 START_ADDR
  8634  09C8  000004E1           	ddw	__end_of_go_open	; block 7 END_ADDR
  8635  09CC  000004C5           	ddw	_go_open	; block 0 START_ADDR
  8636  09D0  000004C9           	ddw	__ccov127_end_blk0	; block 0 END_ADDR
  8637                           
  8638                           ; Function: go_close_alt, coverage: 1,0
  8639  09D4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8640  09D8  00000030           	ddw	__ccovbit1_48/(0+8)	; CC_ADDR
  8641  09DC  00000001           	ddw	1	; NUM_POINTS
  8642  09E0  00000006           	ddw	__ccovbit1_48& (0+7)	; OFFSET
  8643  09E4  00000000           	ddw	0	; Reserved
  8644  09E8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8645  09EC  00000002           	ddw	2	; NUM_RANGES
  8646  09F0  00000590           	ddw	__ccov134_start_blk1	; block 1 START_ADDR
  8647  09F4  00000596           	ddw	__ccov134_end_blk1	; block 1 END_ADDR
  8648  09F8  0000058C           	ddw	_go_close_alt	; block 0 START_ADDR
  8649  09FC  00000590           	ddw	__ccov133_end_blk0	; block 0 END_ADDR
  8650                           
  8651                           ; Function: go_close_alt, coverage: 2,0
  8652  0A00  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8653  0A04  00000030           	ddw	__ccovbit2_49/(0+8)	; CC_ADDR
  8654  0A08  00000001           	ddw	1	; NUM_POINTS
  8655  0A0C  00000005           	ddw	__ccovbit2_49& (0+7)	; OFFSET
  8656  0A10  00000000           	ddw	0	; Reserved
  8657  0A14  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8658  0A18  00000002           	ddw	2	; NUM_RANGES
  8659  0A1C  00000596           	ddw	__ccov135_start_blk2	; block 2 START_ADDR
  8660  0A20  0000059C           	ddw	__ccov135_end_blk2	; block 2 END_ADDR
  8661  0A24  0000058C           	ddw	_go_close_alt	; block 0 START_ADDR
  8662  0A28  00000590           	ddw	__ccov133_end_blk0	; block 0 END_ADDR
  8663                           
  8664                           ; Function: go_close_alt, coverage: 3,0
  8665  0A2C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8666  0A30  00000030           	ddw	__ccovbit3_50/(0+8)	; CC_ADDR
  8667  0A34  00000001           	ddw	1	; NUM_POINTS
  8668  0A38  00000004           	ddw	__ccovbit3_50& (0+7)	; OFFSET
  8669  0A3C  00000000           	ddw	0	; Reserved
  8670  0A40  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8671  0A44  00000002           	ddw	2	; NUM_RANGES
  8672  0A48  0000059C           	ddw	__ccov136_start_blk3	; block 3 START_ADDR
  8673  0A4C  000005A1           	ddw	__ccov136_end_blk3	; block 3 END_ADDR
  8674  0A50  0000058C           	ddw	_go_close_alt	; block 0 START_ADDR
  8675  0A54  00000590           	ddw	__ccov133_end_blk0	; block 0 END_ADDR
  8676                           
  8677                           ; Function: go_close_alt, coverage: 5,0
  8678  0A58  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8679  0A5C  00000030           	ddw	__ccovbit5_51/(0+8)	; CC_ADDR
  8680  0A60  00000001           	ddw	1	; NUM_POINTS
  8681  0A64  00000003           	ddw	__ccovbit5_51& (0+7)	; OFFSET
  8682  0A68  00000000           	ddw	0	; Reserved
  8683  0A6C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8684  0A70  00000002           	ddw	2	; NUM_RANGES
  8685  0A74  000005A1           	ddw	__ccov137_start_blk5	; block 5 START_ADDR
  8686  0A78  000005A3           	ddw	__end_of_go_close_alt	; block 5 END_ADDR
  8687  0A7C  0000058C           	ddw	_go_close_alt	; block 0 START_ADDR
  8688  0A80  00000590           	ddw	__ccov133_end_blk0	; block 0 END_ADDR
  8689                           
  8690                           ; Function: go_open_alt, coverage: 1,0
  8691  0A84  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8692  0A88  00000030           	ddw	__ccovbit1_52/(0+8)	; CC_ADDR
  8693  0A8C  00000001           	ddw	1	; NUM_POINTS
  8694  0A90  00000002           	ddw	__ccovbit1_52& (0+7)	; OFFSET
  8695  0A94  00000000           	ddw	0	; Reserved
  8696  0A98  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8697  0A9C  00000002           	ddw	2	; NUM_RANGES
  8698  0AA0  000005F9           	ddw	__ccov139_start_blk1	; block 1 START_ADDR
  8699  0AA4  000005FF           	ddw	__ccov139_end_blk1	; block 1 END_ADDR
  8700  0AA8  000005F5           	ddw	_go_open_alt	; block 0 START_ADDR
  8701  0AAC  000005F9           	ddw	__ccov138_end_blk0	; block 0 END_ADDR
  8702                           
  8703                           ; Function: go_open_alt, coverage: 2,1,0
  8704  0AB0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8705  0AB4  00000030           	ddw	__ccovbit2_53/(0+8)	; CC_ADDR
  8706  0AB8  00000001           	ddw	1	; NUM_POINTS
  8707  0ABC  00000001           	ddw	__ccovbit2_53& (0+7)	; OFFSET
  8708  0AC0  00000000           	ddw	0	; Reserved
  8709  0AC4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8710  0AC8  00000003           	ddw	3	; NUM_RANGES
  8711  0ACC  000005FF           	ddw	__ccov140_start_blk2	; block 2 START_ADDR
  8712  0AD0  00000604           	ddw	__ccov140_end_blk2	; block 2 END_ADDR
  8713  0AD4  000005F9           	ddw	__ccov139_start_blk1	; block 1 START_ADDR
  8714  0AD8  000005FF           	ddw	__ccov139_end_blk1	; block 1 END_ADDR
  8715  0ADC  000005F5           	ddw	_go_open_alt	; block 0 START_ADDR
  8716  0AE0  000005F9           	ddw	__ccov138_end_blk0	; block 0 END_ADDR
  8717                           
  8718                           ; Function: go_open_alt, coverage: 4,0
  8719  0AE4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8720  0AE8  00000030           	ddw	__ccovbit4_54/(0+8)	; CC_ADDR
  8721  0AEC  00000001           	ddw	1	; NUM_POINTS
  8722  0AF0  00000000           	ddw	__ccovbit4_54& (0+7)	; OFFSET
  8723  0AF4  00000000           	ddw	0	; Reserved
  8724  0AF8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8725  0AFC  00000002           	ddw	2	; NUM_RANGES
  8726  0B00  00000604           	ddw	__ccov141_start_blk4	; block 4 START_ADDR
  8727  0B04  00000607           	ddw	__end_of_go_open_alt	; block 4 END_ADDR
  8728  0B08  000005F5           	ddw	_go_open_alt	; block 0 START_ADDR
  8729  0B0C  000005F9           	ddw	__ccov138_end_blk0	; block 0 END_ADDR
  8730                           
  8731                           ; Function: rele_off, coverage: 1,0
  8732  0B10  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8733  0B14  0000002F           	ddw	__ccovbit1_55/(0+8)	; CC_ADDR
  8734  0B18  00000001           	ddw	1	; NUM_POINTS
  8735  0B1C  00000007           	ddw	__ccovbit1_55& (0+7)	; OFFSET
  8736  0B20  00000000           	ddw	0	; Reserved
  8737  0B24  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8738  0B28  00000002           	ddw	2	; NUM_RANGES
  8739  0B2C  000005C2           	ddw	__ccov143_start_blk1	; block 1 START_ADDR
  8740  0B30  000005C6           	ddw	__ccov143_end_blk1	; block 1 END_ADDR
  8741  0B34  000005B9           	ddw	_rele_off	; block 0 START_ADDR
  8742  0B38  000005C2           	ddw	__ccov142_end_blk0	; block 0 END_ADDR
  8743                           
  8744                           ; Function: rele_off, coverage: 2,0
  8745  0B3C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8746  0B40  0000002F           	ddw	__ccovbit2_56/(0+8)	; CC_ADDR
  8747  0B44  00000001           	ddw	1	; NUM_POINTS
  8748  0B48  00000006           	ddw	__ccovbit2_56& (0+7)	; OFFSET
  8749  0B4C  00000000           	ddw	0	; Reserved
  8750  0B50  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8751  0B54  00000002           	ddw	2	; NUM_RANGES
  8752  0B58  000005C6           	ddw	__ccov144_start_blk2	; block 2 START_ADDR
  8753  0B5C  000005C9           	ddw	__ccov144_end_blk2	; block 2 END_ADDR
  8754  0B60  000005B9           	ddw	_rele_off	; block 0 START_ADDR
  8755  0B64  000005C2           	ddw	__ccov142_end_blk0	; block 0 END_ADDR
  8756                           
  8757                           ; Function: rele_off, coverage: 4,3,0
  8758  0B68  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8759  0B6C  0000002F           	ddw	__ccovbit4_57/(0+8)	; CC_ADDR
  8760  0B70  00000001           	ddw	1	; NUM_POINTS
  8761  0B74  00000005           	ddw	__ccovbit4_57& (0+7)	; OFFSET
  8762  0B78  00000000           	ddw	0	; Reserved
  8763  0B7C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8764  0B80  00000003           	ddw	3	; NUM_RANGES
  8765  0B84  000005CC           	ddw	__ccov146_start_blk4	; block 4 START_ADDR
  8766  0B88  000005CE           	ddw	__end_of_rele_off	; block 4 END_ADDR
  8767  0B8C  000005C9           	ddw	__ccov145_start_blk3	; block 3 START_ADDR
  8768  0B90  000005CC           	ddw	__ccov145_end_blk3	; block 3 END_ADDR
  8769  0B94  000005B9           	ddw	_rele_off	; block 0 START_ADDR
  8770  0B98  000005C2           	ddw	__ccov142_end_blk0	; block 0 END_ADDR
  8771                           
  8772                           ; Function: close, coverage: 1,0
  8773  0B9C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8774  0BA0  0000002F           	ddw	__ccovbit1_58/(0+8)	; CC_ADDR
  8775  0BA4  00000001           	ddw	1	; NUM_POINTS
  8776  0BA8  00000004           	ddw	__ccovbit1_58& (0+7)	; OFFSET
  8777  0BAC  00000000           	ddw	0	; Reserved
  8778  0BB0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8779  0BB4  00000002           	ddw	2	; NUM_RANGES
  8780  0BB8  00000487           	ddw	__ccov148_start_blk1	; block 1 START_ADDR
  8781  0BBC  0000048D           	ddw	__ccov148_end_blk1	; block 1 END_ADDR
  8782  0BC0  00000483           	ddw	_close	; block 0 START_ADDR
  8783  0BC4  00000487           	ddw	__ccov147_end_blk0	; block 0 END_ADDR
  8784                           
  8785                           ; Function: close, coverage: 3,2,0
  8786  0BC8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8787  0BCC  0000002F           	ddw	__ccovbit3_59/(0+8)	; CC_ADDR
  8788  0BD0  00000001           	ddw	1	; NUM_POINTS
  8789  0BD4  00000003           	ddw	__ccovbit3_59& (0+7)	; OFFSET
  8790  0BD8  00000000           	ddw	0	; Reserved
  8791  0BDC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8792  0BE0  00000003           	ddw	3	; NUM_RANGES
  8793  0BE4  00000491           	ddw	__ccov150_start_blk3	; block 3 START_ADDR
  8794  0BE8  00000497           	ddw	__ccov150_end_blk3	; block 3 END_ADDR
  8795  0BEC  0000048D           	ddw	__ccov149_start_blk2	; block 2 START_ADDR
  8796  0BF0  00000491           	ddw	__ccov149_end_blk2	; block 2 END_ADDR
  8797  0BF4  00000483           	ddw	_close	; block 0 START_ADDR
  8798  0BF8  00000487           	ddw	__ccov147_end_blk0	; block 0 END_ADDR
  8799                           
  8800                           ; Function: close, coverage: 4,2,0
  8801  0BFC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8802  0C00  0000002F           	ddw	__ccovbit4_60/(0+8)	; CC_ADDR
  8803  0C04  00000001           	ddw	1	; NUM_POINTS
  8804  0C08  00000002           	ddw	__ccovbit4_60& (0+7)	; OFFSET
  8805  0C0C  00000000           	ddw	0	; Reserved
  8806  0C10  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8807  0C14  00000003           	ddw	3	; NUM_RANGES
  8808  0C18  00000497           	ddw	__ccov151_start_blk4	; block 4 START_ADDR
  8809  0C1C  0000049D           	ddw	__ccov151_end_blk4	; block 4 END_ADDR
  8810  0C20  0000048D           	ddw	__ccov149_start_blk2	; block 2 START_ADDR
  8811  0C24  00000491           	ddw	__ccov149_end_blk2	; block 2 END_ADDR
  8812  0C28  00000483           	ddw	_close	; block 0 START_ADDR
  8813  0C2C  00000487           	ddw	__ccov147_end_blk0	; block 0 END_ADDR
  8814                           
  8815                           ; Function: close, coverage: 5,4,2,0
  8816  0C30  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8817  0C34  0000002F           	ddw	__ccovbit5_61/(0+8)	; CC_ADDR
  8818  0C38  00000001           	ddw	1	; NUM_POINTS
  8819  0C3C  00000001           	ddw	__ccovbit5_61& (0+7)	; OFFSET
  8820  0C40  00000000           	ddw	0	; Reserved
  8821  0C44  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8822  0C48  00000004           	ddw	4	; NUM_RANGES
  8823  0C4C  0000049D           	ddw	__ccov152_start_blk5	; block 5 START_ADDR
  8824  0C50  000004A1           	ddw	__ccov152_end_blk5	; block 5 END_ADDR
  8825  0C54  00000497           	ddw	__ccov151_start_blk4	; block 4 START_ADDR
  8826  0C58  0000049D           	ddw	__ccov151_end_blk4	; block 4 END_ADDR
  8827  0C5C  0000048D           	ddw	__ccov149_start_blk2	; block 2 START_ADDR
  8828  0C60  00000491           	ddw	__ccov149_end_blk2	; block 2 END_ADDR
  8829  0C64  00000483           	ddw	_close	; block 0 START_ADDR
  8830  0C68  00000487           	ddw	__ccov147_end_blk0	; block 0 END_ADDR
  8831                           
  8832                           ; Function: close, coverage: 9,0
  8833  0C6C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8834  0C70  0000002F           	ddw	__ccovbit9_62/(0+8)	; CC_ADDR
  8835  0C74  00000001           	ddw	1	; NUM_POINTS
  8836  0C78  00000000           	ddw	__ccovbit9_62& (0+7)	; OFFSET
  8837  0C7C  00000000           	ddw	0	; Reserved
  8838  0C80  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8839  0C84  00000002           	ddw	2	; NUM_RANGES
  8840  0C88  000004A1           	ddw	__ccov153_start_blk9	; block 9 START_ADDR
  8841  0C8C  000004A4           	ddw	__end_of_close	; block 9 END_ADDR
  8842  0C90  00000483           	ddw	_close	; block 0 START_ADDR
  8843  0C94  00000487           	ddw	__ccov147_end_blk0	; block 0 END_ADDR
  8844                           
  8845                           ; Function: open, coverage: 1,0
  8846  0C98  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8847  0C9C  0000002E           	ddw	__ccovbit1_63/(0+8)	; CC_ADDR
  8848  0CA0  00000001           	ddw	1	; NUM_POINTS
  8849  0CA4  00000007           	ddw	__ccovbit1_63& (0+7)	; OFFSET
  8850  0CA8  00000000           	ddw	0	; Reserved
  8851  0CAC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8852  0CB0  00000002           	ddw	2	; NUM_RANGES
  8853  0CB4  000004A8           	ddw	__ccov155_start_blk1	; block 1 START_ADDR
  8854  0CB8  000004AE           	ddw	__ccov155_end_blk1	; block 1 END_ADDR
  8855  0CBC  000004A4           	ddw	_open	; block 0 START_ADDR
  8856  0CC0  000004A8           	ddw	__ccov154_end_blk0	; block 0 END_ADDR
  8857                           
  8858                           ; Function: open, coverage: 3,2,0
  8859  0CC4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8860  0CC8  0000002E           	ddw	__ccovbit3_64/(0+8)	; CC_ADDR
  8861  0CCC  00000001           	ddw	1	; NUM_POINTS
  8862  0CD0  00000006           	ddw	__ccovbit3_64& (0+7)	; OFFSET
  8863  0CD4  00000000           	ddw	0	; Reserved
  8864  0CD8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8865  0CDC  00000003           	ddw	3	; NUM_RANGES
  8866  0CE0  000004B2           	ddw	__ccov157_start_blk3	; block 3 START_ADDR
  8867  0CE4  000004B8           	ddw	__ccov157_end_blk3	; block 3 END_ADDR
  8868  0CE8  000004AE           	ddw	__ccov156_start_blk2	; block 2 START_ADDR
  8869  0CEC  000004B2           	ddw	__ccov156_end_blk2	; block 2 END_ADDR
  8870  0CF0  000004A4           	ddw	_open	; block 0 START_ADDR
  8871  0CF4  000004A8           	ddw	__ccov154_end_blk0	; block 0 END_ADDR
  8872                           
  8873                           ; Function: open, coverage: 4,2,0
  8874  0CF8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8875  0CFC  0000002E           	ddw	__ccovbit4_65/(0+8)	; CC_ADDR
  8876  0D00  00000001           	ddw	1	; NUM_POINTS
  8877  0D04  00000005           	ddw	__ccovbit4_65& (0+7)	; OFFSET
  8878  0D08  00000000           	ddw	0	; Reserved
  8879  0D0C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8880  0D10  00000003           	ddw	3	; NUM_RANGES
  8881  0D14  000004B8           	ddw	__ccov158_start_blk4	; block 4 START_ADDR
  8882  0D18  000004BE           	ddw	__ccov158_end_blk4	; block 4 END_ADDR
  8883  0D1C  000004AE           	ddw	__ccov156_start_blk2	; block 2 START_ADDR
  8884  0D20  000004B2           	ddw	__ccov156_end_blk2	; block 2 END_ADDR
  8885  0D24  000004A4           	ddw	_open	; block 0 START_ADDR
  8886  0D28  000004A8           	ddw	__ccov154_end_blk0	; block 0 END_ADDR
  8887                           
  8888                           ; Function: open, coverage: 5,4,2,0
  8889  0D2C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8890  0D30  0000002E           	ddw	__ccovbit5_66/(0+8)	; CC_ADDR
  8891  0D34  00000001           	ddw	1	; NUM_POINTS
  8892  0D38  00000004           	ddw	__ccovbit5_66& (0+7)	; OFFSET
  8893  0D3C  00000000           	ddw	0	; Reserved
  8894  0D40  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8895  0D44  00000004           	ddw	4	; NUM_RANGES
  8896  0D48  000004BE           	ddw	__ccov159_start_blk5	; block 5 START_ADDR
  8897  0D4C  000004C2           	ddw	__ccov159_end_blk5	; block 5 END_ADDR
  8898  0D50  000004B8           	ddw	__ccov158_start_blk4	; block 4 START_ADDR
  8899  0D54  000004BE           	ddw	__ccov158_end_blk4	; block 4 END_ADDR
  8900  0D58  000004AE           	ddw	__ccov156_start_blk2	; block 2 START_ADDR
  8901  0D5C  000004B2           	ddw	__ccov156_end_blk2	; block 2 END_ADDR
  8902  0D60  000004A4           	ddw	_open	; block 0 START_ADDR
  8903  0D64  000004A8           	ddw	__ccov154_end_blk0	; block 0 END_ADDR
  8904                           
  8905                           ; Function: open, coverage: 9,0
  8906  0D68  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8907  0D6C  0000002E           	ddw	__ccovbit9_67/(0+8)	; CC_ADDR
  8908  0D70  00000001           	ddw	1	; NUM_POINTS
  8909  0D74  00000003           	ddw	__ccovbit9_67& (0+7)	; OFFSET
  8910  0D78  00000000           	ddw	0	; Reserved
  8911  0D7C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8912  0D80  00000002           	ddw	2	; NUM_RANGES
  8913  0D84  000004C2           	ddw	__ccov160_start_blk9	; block 9 START_ADDR
  8914  0D88  000004C5           	ddw	__end_of_open	; block 9 END_ADDR
  8915  0D8C  000004A4           	ddw	_open	; block 0 START_ADDR
  8916  0D90  000004A8           	ddw	__ccov154_end_blk0	; block 0 END_ADDR
  8917                           
  8918                           ; Function: rele_tick, coverage: 1,0
  8919  0D94  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8920  0D98  0000002E           	ddw	__ccovbit1_68/(0+8)	; CC_ADDR
  8921  0D9C  00000001           	ddw	1	; NUM_POINTS
  8922  0DA0  00000002           	ddw	__ccovbit1_68& (0+7)	; OFFSET
  8923  0DA4  00000000           	ddw	0	; Reserved
  8924  0DA8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8925  0DAC  00000002           	ddw	2	; NUM_RANGES
  8926  0DB0  00000131           	ddw	__ccov162_start_blk1	; block 1 START_ADDR
  8927  0DB4  00000138           	ddw	__ccov162_end_blk1	; block 1 END_ADDR
  8928  0DB8  0000012D           	ddw	_rele_tick	; block 0 START_ADDR
  8929  0DBC  00000131           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  8930                           
  8931                           ; Function: rele_tick, coverage: 4,3,0
  8932  0DC0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8933  0DC4  0000002E           	ddw	__ccovbit4_69/(0+8)	; CC_ADDR
  8934  0DC8  00000001           	ddw	1	; NUM_POINTS
  8935  0DCC  00000001           	ddw	__ccovbit4_69& (0+7)	; OFFSET
  8936  0DD0  00000000           	ddw	0	; Reserved
  8937  0DD4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8938  0DD8  00000003           	ddw	3	; NUM_RANGES
  8939  0DDC  0000013C           	ddw	__ccov164_start_blk4	; block 4 START_ADDR
  8940  0DE0  00000144           	ddw	__ccov164_end_blk4	; block 4 END_ADDR
  8941  0DE4  00000138           	ddw	__ccov163_start_blk3	; block 3 START_ADDR
  8942  0DE8  0000013C           	ddw	__ccov163_end_blk3	; block 3 END_ADDR
  8943  0DEC  0000012D           	ddw	_rele_tick	; block 0 START_ADDR
  8944  0DF0  00000131           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  8945                           
  8946                           ; Function: rele_tick, coverage: 6,5,4,3,0
  8947  0DF4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8948  0DF8  0000002E           	ddw	__ccovbit6_70/(0+8)	; CC_ADDR
  8949  0DFC  00000001           	ddw	1	; NUM_POINTS
  8950  0E00  00000000           	ddw	__ccovbit6_70& (0+7)	; OFFSET
  8951  0E04  00000000           	ddw	0	; Reserved
  8952  0E08  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8953  0E0C  00000005           	ddw	5	; NUM_RANGES
  8954  0E10  00000148           	ddw	__ccov166_start_blk6	; block 6 START_ADDR
  8955  0E14  0000014F           	ddw	__ccov166_end_blk6	; block 6 END_ADDR
  8956  0E18  00000144           	ddw	__ccov165_start_blk5	; block 5 START_ADDR
  8957  0E1C  00000148           	ddw	__ccov165_end_blk5	; block 5 END_ADDR
  8958  0E20  0000013C           	ddw	__ccov164_start_blk4	; block 4 START_ADDR
  8959  0E24  00000144           	ddw	__ccov164_end_blk4	; block 4 END_ADDR
  8960  0E28  00000138           	ddw	__ccov163_start_blk3	; block 3 START_ADDR
  8961  0E2C  0000013C           	ddw	__ccov163_end_blk3	; block 3 END_ADDR
  8962  0E30  0000012D           	ddw	_rele_tick	; block 0 START_ADDR
  8963  0E34  00000131           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  8964                           
  8965                           ; Function: rele_tick, coverage: 7,6,5,4,3,0
  8966  0E38  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8967  0E3C  0000002D           	ddw	__ccovbit7_71/(0+8)	; CC_ADDR
  8968  0E40  00000001           	ddw	1	; NUM_POINTS
  8969  0E44  00000007           	ddw	__ccovbit7_71& (0+7)	; OFFSET
  8970  0E48  00000000           	ddw	0	; Reserved
  8971  0E4C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8972  0E50  00000006           	ddw	6	; NUM_RANGES
  8973  0E54  0000014F           	ddw	__ccov167_start_blk7	; block 7 START_ADDR
  8974  0E58  00000154           	ddw	__ccov167_end_blk7	; block 7 END_ADDR
  8975  0E5C  00000148           	ddw	__ccov166_start_blk6	; block 6 START_ADDR
  8976  0E60  0000014F           	ddw	__ccov166_end_blk6	; block 6 END_ADDR
  8977  0E64  00000144           	ddw	__ccov165_start_blk5	; block 5 START_ADDR
  8978  0E68  00000148           	ddw	__ccov165_end_blk5	; block 5 END_ADDR
  8979  0E6C  0000013C           	ddw	__ccov164_start_blk4	; block 4 START_ADDR
  8980  0E70  00000144           	ddw	__ccov164_end_blk4	; block 4 END_ADDR
  8981  0E74  00000138           	ddw	__ccov163_start_blk3	; block 3 START_ADDR
  8982  0E78  0000013C           	ddw	__ccov163_end_blk3	; block 3 END_ADDR
  8983  0E7C  0000012D           	ddw	_rele_tick	; block 0 START_ADDR
  8984  0E80  00000131           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  8985                           
  8986                           ; Function: rele_tick, coverage: 10,3,0
  8987  0E84  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8988  0E88  0000002D           	ddw	__ccovbit10_72/(0+8)	; CC_ADDR
  8989  0E8C  00000001           	ddw	1	; NUM_POINTS
  8990  0E90  00000006           	ddw	__ccovbit10_72& (0+7)	; OFFSET
  8991  0E94  00000000           	ddw	0	; Reserved
  8992  0E98  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8993  0E9C  00000003           	ddw	3	; NUM_RANGES
  8994  0EA0  00000154           	ddw	__ccov168_start_blk10	; block 10 START_ADDR
  8995  0EA4  0000015A           	ddw	__ccov168_end_blk10	; block 10 END_ADDR
  8996  0EA8  00000138           	ddw	__ccov163_start_blk3	; block 3 START_ADDR
  8997  0EAC  0000013C           	ddw	__ccov163_end_blk3	; block 3 END_ADDR
  8998  0EB0  0000012D           	ddw	_rele_tick	; block 0 START_ADDR
  8999  0EB4  00000131           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  9000                           
  9001                           ; Function: rele_tick, coverage: 14,13,12,11,10,3,0
  9002  0EB8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9003  0EBC  0000002D           	ddw	__ccovbit14_73/(0+8)	; CC_ADDR
  9004  0EC0  00000001           	ddw	1	; NUM_POINTS
  9005  0EC4  00000005           	ddw	__ccovbit14_73& (0+7)	; OFFSET
  9006  0EC8  00000000           	ddw	0	; Reserved
  9007  0ECC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9008  0ED0  00000007           	ddw	7	; NUM_RANGES
  9009  0ED4  00000167           	ddw	__ccov172_start_blk14	; block 14 START_ADDR
  9010  0ED8  0000016D           	ddw	__ccov172_end_blk14	; block 14 END_ADDR
  9011  0EDC  00000166           	ddw	__ccov171_start_blk13	; block 13 START_ADDR
  9012  0EE0  00000167           	ddw	__ccov171_end_blk13	; block 13 END_ADDR
  9013  0EE4  00000160           	ddw	__ccov170_start_blk12	; block 12 START_ADDR
  9014  0EE8  00000166           	ddw	__ccov170_end_blk12	; block 12 END_ADDR
  9015  0EEC  0000015A           	ddw	__ccov169_start_blk11	; block 11 START_ADDR
  9016  0EF0  00000160           	ddw	__ccov169_end_blk11	; block 11 END_ADDR
  9017  0EF4  00000154           	ddw	__ccov168_start_blk10	; block 10 START_ADDR
  9018  0EF8  0000015A           	ddw	__ccov168_end_blk10	; block 10 END_ADDR
  9019  0EFC  00000138           	ddw	__ccov163_start_blk3	; block 3 START_ADDR
  9020  0F00  0000013C           	ddw	__ccov163_end_blk3	; block 3 END_ADDR
  9021  0F04  0000012D           	ddw	_rele_tick	; block 0 START_ADDR
  9022  0F08  00000131           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  9023                           
  9024                           ; Function: rele_tick, coverage: 15,12,11,10,3,0
  9025  0F0C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9026  0F10  0000002D           	ddw	__ccovbit15_74/(0+8)	; CC_ADDR
  9027  0F14  00000001           	ddw	1	; NUM_POINTS
  9028  0F18  00000004           	ddw	__ccovbit15_74& (0+7)	; OFFSET
  9029  0F1C  00000000           	ddw	0	; Reserved
  9030  0F20  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9031  0F24  00000006           	ddw	6	; NUM_RANGES
  9032  0F28  0000016D           	ddw	__ccov173_start_blk15	; block 15 START_ADDR
  9033  0F2C  00000170           	ddw	__ccov173_end_blk15	; block 15 END_ADDR
  9034  0F30  00000160           	ddw	__ccov170_start_blk12	; block 12 START_ADDR
  9035  0F34  00000166           	ddw	__ccov170_end_blk12	; block 12 END_ADDR
  9036  0F38  0000015A           	ddw	__ccov169_start_blk11	; block 11 START_ADDR
  9037  0F3C  00000160           	ddw	__ccov169_end_blk11	; block 11 END_ADDR
  9038  0F40  00000154           	ddw	__ccov168_start_blk10	; block 10 START_ADDR
  9039  0F44  0000015A           	ddw	__ccov168_end_blk10	; block 10 END_ADDR
  9040  0F48  00000138           	ddw	__ccov163_start_blk3	; block 3 START_ADDR
  9041  0F4C  0000013C           	ddw	__ccov163_end_blk3	; block 3 END_ADDR
  9042  0F50  0000012D           	ddw	_rele_tick	; block 0 START_ADDR
  9043  0F54  00000131           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  9044                           
  9045                           ; Function: rele_tick, coverage: 18,11,10,3,0
  9046  0F58  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9047  0F5C  0000002D           	ddw	__ccovbit18_75/(0+8)	; CC_ADDR
  9048  0F60  00000001           	ddw	1	; NUM_POINTS
  9049  0F64  00000003           	ddw	__ccovbit18_75& (0+7)	; OFFSET
  9050  0F68  00000000           	ddw	0	; Reserved
  9051  0F6C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9052  0F70  00000005           	ddw	5	; NUM_RANGES
  9053  0F74  00000170           	ddw	__ccov174_start_blk18	; block 18 START_ADDR
  9054  0F78  00000175           	ddw	__ccov174_end_blk18	; block 18 END_ADDR
  9055  0F7C  0000015A           	ddw	__ccov169_start_blk11	; block 11 START_ADDR
  9056  0F80  00000160           	ddw	__ccov169_end_blk11	; block 11 END_ADDR
  9057  0F84  00000154           	ddw	__ccov168_start_blk10	; block 10 START_ADDR
  9058  0F88  0000015A           	ddw	__ccov168_end_blk10	; block 10 END_ADDR
  9059  0F8C  00000138           	ddw	__ccov163_start_blk3	; block 3 START_ADDR
  9060  0F90  0000013C           	ddw	__ccov163_end_blk3	; block 3 END_ADDR
  9061  0F94  0000012D           	ddw	_rele_tick	; block 0 START_ADDR
  9062  0F98  00000131           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  9063                           
  9064                           ; Function: rele_tick, coverage: 20,11,10,3,0
  9065  0F9C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9066  0FA0  0000002D           	ddw	__ccovbit20_76/(0+8)	; CC_ADDR
  9067  0FA4  00000001           	ddw	1	; NUM_POINTS
  9068  0FA8  00000002           	ddw	__ccovbit20_76& (0+7)	; OFFSET
  9069  0FAC  00000000           	ddw	0	; Reserved
  9070  0FB0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9071  0FB4  00000005           	ddw	5	; NUM_RANGES
  9072  0FB8  00000175           	ddw	__ccov175_start_blk20	; block 20 START_ADDR
  9073  0FBC  0000017C           	ddw	__ccov175_end_blk20	; block 20 END_ADDR
  9074  0FC0  0000015A           	ddw	__ccov169_start_blk11	; block 11 START_ADDR
  9075  0FC4  00000160           	ddw	__ccov169_end_blk11	; block 11 END_ADDR
  9076  0FC8  00000154           	ddw	__ccov168_start_blk10	; block 10 START_ADDR
  9077  0FCC  0000015A           	ddw	__ccov168_end_blk10	; block 10 END_ADDR
  9078  0FD0  00000138           	ddw	__ccov163_start_blk3	; block 3 START_ADDR
  9079  0FD4  0000013C           	ddw	__ccov163_end_blk3	; block 3 END_ADDR
  9080  0FD8  0000012D           	ddw	_rele_tick	; block 0 START_ADDR
  9081  0FDC  00000131           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  9082                           
  9083                           ; Function: rele_tick, coverage: 22,21,20,11,10,3,0
  9084  0FE0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9085  0FE4  0000002D           	ddw	__ccovbit22_77/(0+8)	; CC_ADDR
  9086  0FE8  00000001           	ddw	1	; NUM_POINTS
  9087  0FEC  00000001           	ddw	__ccovbit22_77& (0+7)	; OFFSET
  9088  0FF0  00000000           	ddw	0	; Reserved
  9089  0FF4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9090  0FF8  00000007           	ddw	7	; NUM_RANGES
  9091  0FFC  00000180           	ddw	__ccov177_start_blk22	; block 22 START_ADDR
  9092  1000  00000187           	ddw	__ccov177_end_blk22	; block 22 END_ADDR
  9093  1004  0000017C           	ddw	__ccov176_start_blk21	; block 21 START_ADDR
  9094  1008  00000180           	ddw	__ccov176_end_blk21	; block 21 END_ADDR
  9095  100C  00000175           	ddw	__ccov175_start_blk20	; block 20 START_ADDR
  9096  1010  0000017C           	ddw	__ccov175_end_blk20	; block 20 END_ADDR
  9097  1014  0000015A           	ddw	__ccov169_start_blk11	; block 11 START_ADDR
  9098  1018  00000160           	ddw	__ccov169_end_blk11	; block 11 END_ADDR
  9099  101C  00000154           	ddw	__ccov168_start_blk10	; block 10 START_ADDR
  9100  1020  0000015A           	ddw	__ccov168_end_blk10	; block 10 END_ADDR
  9101  1024  00000138           	ddw	__ccov163_start_blk3	; block 3 START_ADDR
  9102  1028  0000013C           	ddw	__ccov163_end_blk3	; block 3 END_ADDR
  9103  102C  0000012D           	ddw	_rele_tick	; block 0 START_ADDR
  9104  1030  00000131           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  9105                           
  9106                           ; Function: rele_tick, coverage: 23,22,21,20,11,10,3,0
  9107  1034  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9108  1038  0000002D           	ddw	__ccovbit23_78/(0+8)	; CC_ADDR
  9109  103C  00000001           	ddw	1	; NUM_POINTS
  9110  1040  00000000           	ddw	__ccovbit23_78& (0+7)	; OFFSET
  9111  1044  00000000           	ddw	0	; Reserved
  9112  1048  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9113  104C  00000008           	ddw	8	; NUM_RANGES
  9114  1050  00000187           	ddw	__ccov178_start_blk23	; block 23 START_ADDR
  9115  1054  0000018B           	ddw	__ccov178_end_blk23	; block 23 END_ADDR
  9116  1058  00000180           	ddw	__ccov177_start_blk22	; block 22 START_ADDR
  9117  105C  00000187           	ddw	__ccov177_end_blk22	; block 22 END_ADDR
  9118  1060  0000017C           	ddw	__ccov176_start_blk21	; block 21 START_ADDR
  9119  1064  00000180           	ddw	__ccov176_end_blk21	; block 21 END_ADDR
  9120  1068  00000175           	ddw	__ccov175_start_blk20	; block 20 START_ADDR
  9121  106C  0000017C           	ddw	__ccov175_end_blk20	; block 20 END_ADDR
  9122  1070  0000015A           	ddw	__ccov169_start_blk11	; block 11 START_ADDR
  9123  1074  00000160           	ddw	__ccov169_end_blk11	; block 11 END_ADDR
  9124  1078  00000154           	ddw	__ccov168_start_blk10	; block 10 START_ADDR
  9125  107C  0000015A           	ddw	__ccov168_end_blk10	; block 10 END_ADDR
  9126  1080  00000138           	ddw	__ccov163_start_blk3	; block 3 START_ADDR
  9127  1084  0000013C           	ddw	__ccov163_end_blk3	; block 3 END_ADDR
  9128  1088  0000012D           	ddw	_rele_tick	; block 0 START_ADDR
  9129  108C  00000131           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  9130                           
  9131                           ; Function: rele_tick, coverage: 27,0
  9132  1090  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9133  1094  0000002C           	ddw	__ccovbit27_79/(0+8)	; CC_ADDR
  9134  1098  00000001           	ddw	1	; NUM_POINTS
  9135  109C  00000007           	ddw	__ccovbit27_79& (0+7)	; OFFSET
  9136  10A0  00000000           	ddw	0	; Reserved
  9137  10A4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9138  10A8  00000002           	ddw	2	; NUM_RANGES
  9139  10AC  0000018B           	ddw	__ccov179_start_blk27	; block 27 START_ADDR
  9140  10B0  0000018D           	ddw	__end_of_rele_tick	; block 27 END_ADDR
  9141  10B4  0000012D           	ddw	_rele_tick	; block 0 START_ADDR
  9142  10B8  00000131           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  9143                           
  9144                           ; Function: start_alarm, coverage: 2,1,0
  9145  10BC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9146  10C0  0000002C           	ddw	__ccovbit2_80/(0+8)	; CC_ADDR
  9147  10C4  00000001           	ddw	1	; NUM_POINTS
  9148  10C8  00000006           	ddw	__ccovbit2_80& (0+7)	; OFFSET
  9149  10CC  00000000           	ddw	0	; Reserved
  9150  10D0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9151  10D4  00000003           	ddw	3	; NUM_RANGES
  9152  10D8  00000680           	ddw	__ccov182_start_blk2	; block 2 START_ADDR
  9153  10DC  00000682           	ddw	__end_of_start_alarm	; block 2 END_ADDR
  9154  10E0  0000067E           	ddw	__ccov181_start_blk1	; block 1 START_ADDR
  9155  10E4  00000680           	ddw	__ccov181_end_blk1	; block 1 END_ADDR
  9156  10E8  0000067A           	ddw	_start_alarm	; block 0 START_ADDR
  9157  10EC  0000067E           	ddw	__ccov180_end_blk0	; block 0 END_ADDR
  9158                           
  9159                           ; Function: clear_alarm, coverage: 1,0
  9160  10F0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9161  10F4  0000002C           	ddw	__ccovbit1_81/(0+8)	; CC_ADDR
  9162  10F8  00000001           	ddw	1	; NUM_POINTS
  9163  10FC  00000005           	ddw	__ccovbit1_81& (0+7)	; OFFSET
  9164  1100  00000000           	ddw	0	; Reserved
  9165  1104  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9166  1108  00000002           	ddw	2	; NUM_RANGES
  9167  110C  000006A9           	ddw	__ccov184_start_blk1	; block 1 START_ADDR
  9168  1110  000006AC           	ddw	__end_of_clear_alarm	; block 1 END_ADDR
  9169  1114  000006A7           	ddw	_clear_alarm	; block 0 START_ADDR
  9170  1118  000006A9           	ddw	__ccov183_end_blk0	; block 0 END_ADDR
  9171                           
  9172                           ; Function: fun_work, coverage: 1,0
  9173  111C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9174  1120  0000002C           	ddw	__ccovbit1_82/(0+8)	; CC_ADDR
  9175  1124  00000001           	ddw	1	; NUM_POINTS
  9176  1128  00000004           	ddw	__ccovbit1_82& (0+7)	; OFFSET
  9177  112C  00000000           	ddw	0	; Reserved
  9178  1130  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9179  1134  00000002           	ddw	2	; NUM_RANGES
  9180  1138  000001EB           	ddw	__ccov186_start_blk1	; block 1 START_ADDR
  9181  113C  000001F1           	ddw	__ccov186_end_blk1	; block 1 END_ADDR
  9182  1140  000001E7           	ddw	_fun_work	; block 0 START_ADDR
  9183  1144  000001EB           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9184                           
  9185                           ; Function: fun_work, coverage: 2,1,0
  9186  1148  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9187  114C  0000002C           	ddw	__ccovbit2_83/(0+8)	; CC_ADDR
  9188  1150  00000001           	ddw	1	; NUM_POINTS
  9189  1154  00000003           	ddw	__ccovbit2_83& (0+7)	; OFFSET
  9190  1158  00000000           	ddw	0	; Reserved
  9191  115C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9192  1160  00000003           	ddw	3	; NUM_RANGES
  9193  1164  000001F1           	ddw	__ccov187_start_blk2	; block 2 START_ADDR
  9194  1168  000001F6           	ddw	__ccov187_end_blk2	; block 2 END_ADDR
  9195  116C  000001EB           	ddw	__ccov186_start_blk1	; block 1 START_ADDR
  9196  1170  000001F1           	ddw	__ccov186_end_blk1	; block 1 END_ADDR
  9197  1174  000001E7           	ddw	_fun_work	; block 0 START_ADDR
  9198  1178  000001EB           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9199                           
  9200                           ; Function: fun_work, coverage: 3,2,1,0
  9201  117C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9202  1180  0000002C           	ddw	__ccovbit3_84/(0+8)	; CC_ADDR
  9203  1184  00000001           	ddw	1	; NUM_POINTS
  9204  1188  00000002           	ddw	__ccovbit3_84& (0+7)	; OFFSET
  9205  118C  00000000           	ddw	0	; Reserved
  9206  1190  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9207  1194  00000004           	ddw	4	; NUM_RANGES
  9208  1198  000001F6           	ddw	__ccov188_start_blk3	; block 3 START_ADDR
  9209  119C  000001FB           	ddw	__ccov188_end_blk3	; block 3 END_ADDR
  9210  11A0  000001F1           	ddw	__ccov187_start_blk2	; block 2 START_ADDR
  9211  11A4  000001F6           	ddw	__ccov187_end_blk2	; block 2 END_ADDR
  9212  11A8  000001EB           	ddw	__ccov186_start_blk1	; block 1 START_ADDR
  9213  11AC  000001F1           	ddw	__ccov186_end_blk1	; block 1 END_ADDR
  9214  11B0  000001E7           	ddw	_fun_work	; block 0 START_ADDR
  9215  11B4  000001EB           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9216                           
  9217                           ; Function: fun_work, coverage: 4,3,2,1,0
  9218  11B8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9219  11BC  0000002C           	ddw	__ccovbit4_85/(0+8)	; CC_ADDR
  9220  11C0  00000001           	ddw	1	; NUM_POINTS
  9221  11C4  00000001           	ddw	__ccovbit4_85& (0+7)	; OFFSET
  9222  11C8  00000000           	ddw	0	; Reserved
  9223  11CC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9224  11D0  00000005           	ddw	5	; NUM_RANGES
  9225  11D4  000001FB           	ddw	__ccov189_start_blk4	; block 4 START_ADDR
  9226  11D8  00000200           	ddw	__ccov189_end_blk4	; block 4 END_ADDR
  9227  11DC  000001F6           	ddw	__ccov188_start_blk3	; block 3 START_ADDR
  9228  11E0  000001FB           	ddw	__ccov188_end_blk3	; block 3 END_ADDR
  9229  11E4  000001F1           	ddw	__ccov187_start_blk2	; block 2 START_ADDR
  9230  11E8  000001F6           	ddw	__ccov187_end_blk2	; block 2 END_ADDR
  9231  11EC  000001EB           	ddw	__ccov186_start_blk1	; block 1 START_ADDR
  9232  11F0  000001F1           	ddw	__ccov186_end_blk1	; block 1 END_ADDR
  9233  11F4  000001E7           	ddw	_fun_work	; block 0 START_ADDR
  9234  11F8  000001EB           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9235                           
  9236                           ; Function: fun_work, coverage: 5,4,3,2,1,0
  9237  11FC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9238  1200  0000002C           	ddw	__ccovbit5_86/(0+8)	; CC_ADDR
  9239  1204  00000001           	ddw	1	; NUM_POINTS
  9240  1208  00000000           	ddw	__ccovbit5_86& (0+7)	; OFFSET
  9241  120C  00000000           	ddw	0	; Reserved
  9242  1210  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9243  1214  00000006           	ddw	6	; NUM_RANGES
  9244  1218  00000200           	ddw	__ccov190_start_blk5	; block 5 START_ADDR
  9245  121C  00000205           	ddw	__ccov190_end_blk5	; block 5 END_ADDR
  9246  1220  000001FB           	ddw	__ccov189_start_blk4	; block 4 START_ADDR
  9247  1224  00000200           	ddw	__ccov189_end_blk4	; block 4 END_ADDR
  9248  1228  000001F6           	ddw	__ccov188_start_blk3	; block 3 START_ADDR
  9249  122C  000001FB           	ddw	__ccov188_end_blk3	; block 3 END_ADDR
  9250  1230  000001F1           	ddw	__ccov187_start_blk2	; block 2 START_ADDR
  9251  1234  000001F6           	ddw	__ccov187_end_blk2	; block 2 END_ADDR
  9252  1238  000001EB           	ddw	__ccov186_start_blk1	; block 1 START_ADDR
  9253  123C  000001F1           	ddw	__ccov186_end_blk1	; block 1 END_ADDR
  9254  1240  000001E7           	ddw	_fun_work	; block 0 START_ADDR
  9255  1244  000001EB           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9256                           
  9257                           ; Function: fun_work, coverage: 6,5,4,3,2,1,0
  9258  1248  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9259  124C  0000002B           	ddw	__ccovbit6_87/(0+8)	; CC_ADDR
  9260  1250  00000001           	ddw	1	; NUM_POINTS
  9261  1254  00000007           	ddw	__ccovbit6_87& (0+7)	; OFFSET
  9262  1258  00000000           	ddw	0	; Reserved
  9263  125C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9264  1260  00000007           	ddw	7	; NUM_RANGES
  9265  1264  00000205           	ddw	__ccov191_start_blk6	; block 6 START_ADDR
  9266  1268  0000020A           	ddw	__ccov191_end_blk6	; block 6 END_ADDR
  9267  126C  00000200           	ddw	__ccov190_start_blk5	; block 5 START_ADDR
  9268  1270  00000205           	ddw	__ccov190_end_blk5	; block 5 END_ADDR
  9269  1274  000001FB           	ddw	__ccov189_start_blk4	; block 4 START_ADDR
  9270  1278  00000200           	ddw	__ccov189_end_blk4	; block 4 END_ADDR
  9271  127C  000001F6           	ddw	__ccov188_start_blk3	; block 3 START_ADDR
  9272  1280  000001FB           	ddw	__ccov188_end_blk3	; block 3 END_ADDR
  9273  1284  000001F1           	ddw	__ccov187_start_blk2	; block 2 START_ADDR
  9274  1288  000001F6           	ddw	__ccov187_end_blk2	; block 2 END_ADDR
  9275  128C  000001EB           	ddw	__ccov186_start_blk1	; block 1 START_ADDR
  9276  1290  000001F1           	ddw	__ccov186_end_blk1	; block 1 END_ADDR
  9277  1294  000001E7           	ddw	_fun_work	; block 0 START_ADDR
  9278  1298  000001EB           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9279                           
  9280                           ; Function: fun_work, coverage: 8,7,6,5,4,3,2,1,0
  9281  129C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9282  12A0  0000002B           	ddw	__ccovbit8_88/(0+8)	; CC_ADDR
  9283  12A4  00000001           	ddw	1	; NUM_POINTS
  9284  12A8  00000006           	ddw	__ccovbit8_88& (0+7)	; OFFSET
  9285  12AC  00000000           	ddw	0	; Reserved
  9286  12B0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9287  12B4  00000009           	ddw	9	; NUM_RANGES
  9288  12B8  0000020C           	ddw	__ccov193_start_blk8	; block 8 START_ADDR
  9289  12BC  00000210           	ddw	__ccov193_end_blk8	; block 8 END_ADDR
  9290  12C0  0000020A           	ddw	__ccov192_start_blk7	; block 7 START_ADDR
  9291  12C4  0000020C           	ddw	__ccov192_end_blk7	; block 7 END_ADDR
  9292  12C8  00000205           	ddw	__ccov191_start_blk6	; block 6 START_ADDR
  9293  12CC  0000020A           	ddw	__ccov191_end_blk6	; block 6 END_ADDR
  9294  12D0  00000200           	ddw	__ccov190_start_blk5	; block 5 START_ADDR
  9295  12D4  00000205           	ddw	__ccov190_end_blk5	; block 5 END_ADDR
  9296  12D8  000001FB           	ddw	__ccov189_start_blk4	; block 4 START_ADDR
  9297  12DC  00000200           	ddw	__ccov189_end_blk4	; block 4 END_ADDR
  9298  12E0  000001F6           	ddw	__ccov188_start_blk3	; block 3 START_ADDR
  9299  12E4  000001FB           	ddw	__ccov188_end_blk3	; block 3 END_ADDR
  9300  12E8  000001F1           	ddw	__ccov187_start_blk2	; block 2 START_ADDR
  9301  12EC  000001F6           	ddw	__ccov187_end_blk2	; block 2 END_ADDR
  9302  12F0  000001EB           	ddw	__ccov186_start_blk1	; block 1 START_ADDR
  9303  12F4  000001F1           	ddw	__ccov186_end_blk1	; block 1 END_ADDR
  9304  12F8  000001E7           	ddw	_fun_work	; block 0 START_ADDR
  9305  12FC  000001EB           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9306                           
  9307                           ; Function: fun_work, coverage: 11,10,0
  9308  1300  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9309  1304  0000002B           	ddw	__ccovbit11_89/(0+8)	; CC_ADDR
  9310  1308  00000001           	ddw	1	; NUM_POINTS
  9311  130C  00000005           	ddw	__ccovbit11_89& (0+7)	; OFFSET
  9312  1310  00000000           	ddw	0	; Reserved
  9313  1314  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9314  1318  00000003           	ddw	3	; NUM_RANGES
  9315  131C  00000214           	ddw	__ccov195_start_blk11	; block 11 START_ADDR
  9316  1320  0000021A           	ddw	__ccov195_end_blk11	; block 11 END_ADDR
  9317  1324  00000210           	ddw	__ccov194_start_blk10	; block 10 START_ADDR
  9318  1328  00000214           	ddw	__ccov194_end_blk10	; block 10 END_ADDR
  9319  132C  000001E7           	ddw	_fun_work	; block 0 START_ADDR
  9320  1330  000001EB           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9321                           
  9322                           ; Function: fun_work, coverage: 12,11,10,0
  9323  1334  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9324  1338  0000002B           	ddw	__ccovbit12_90/(0+8)	; CC_ADDR
  9325  133C  00000001           	ddw	1	; NUM_POINTS
  9326  1340  00000004           	ddw	__ccovbit12_90& (0+7)	; OFFSET
  9327  1344  00000000           	ddw	0	; Reserved
  9328  1348  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9329  134C  00000004           	ddw	4	; NUM_RANGES
  9330  1350  0000021A           	ddw	__ccov196_start_blk12	; block 12 START_ADDR
  9331  1354  0000021F           	ddw	__ccov196_end_blk12	; block 12 END_ADDR
  9332  1358  00000214           	ddw	__ccov195_start_blk11	; block 11 START_ADDR
  9333  135C  0000021A           	ddw	__ccov195_end_blk11	; block 11 END_ADDR
  9334  1360  00000210           	ddw	__ccov194_start_blk10	; block 10 START_ADDR
  9335  1364  00000214           	ddw	__ccov194_end_blk10	; block 10 END_ADDR
  9336  1368  000001E7           	ddw	_fun_work	; block 0 START_ADDR
  9337  136C  000001EB           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9338                           
  9339                           ; Function: fun_work, coverage: 13,12,11,10,0
  9340  1370  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9341  1374  0000002B           	ddw	__ccovbit13_91/(0+8)	; CC_ADDR
  9342  1378  00000001           	ddw	1	; NUM_POINTS
  9343  137C  00000003           	ddw	__ccovbit13_91& (0+7)	; OFFSET
  9344  1380  00000000           	ddw	0	; Reserved
  9345  1384  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9346  1388  00000005           	ddw	5	; NUM_RANGES
  9347  138C  0000021F           	ddw	__ccov197_start_blk13	; block 13 START_ADDR
  9348  1390  00000224           	ddw	__ccov197_end_blk13	; block 13 END_ADDR
  9349  1394  0000021A           	ddw	__ccov196_start_blk12	; block 12 START_ADDR
  9350  1398  0000021F           	ddw	__ccov196_end_blk12	; block 12 END_ADDR
  9351  139C  00000214           	ddw	__ccov195_start_blk11	; block 11 START_ADDR
  9352  13A0  0000021A           	ddw	__ccov195_end_blk11	; block 11 END_ADDR
  9353  13A4  00000210           	ddw	__ccov194_start_blk10	; block 10 START_ADDR
  9354  13A8  00000214           	ddw	__ccov194_end_blk10	; block 10 END_ADDR
  9355  13AC  000001E7           	ddw	_fun_work	; block 0 START_ADDR
  9356  13B0  000001EB           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9357                           
  9358                           ; Function: fun_work, coverage: 14,13,12,11,10,0
  9359  13B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9360  13B8  0000002B           	ddw	__ccovbit14_92/(0+8)	; CC_ADDR
  9361  13BC  00000001           	ddw	1	; NUM_POINTS
  9362  13C0  00000002           	ddw	__ccovbit14_92& (0+7)	; OFFSET
  9363  13C4  00000000           	ddw	0	; Reserved
  9364  13C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9365  13CC  00000006           	ddw	6	; NUM_RANGES
  9366  13D0  00000224           	ddw	__ccov198_start_blk14	; block 14 START_ADDR
  9367  13D4  00000229           	ddw	__ccov198_end_blk14	; block 14 END_ADDR
  9368  13D8  0000021F           	ddw	__ccov197_start_blk13	; block 13 START_ADDR
  9369  13DC  00000224           	ddw	__ccov197_end_blk13	; block 13 END_ADDR
  9370  13E0  0000021A           	ddw	__ccov196_start_blk12	; block 12 START_ADDR
  9371  13E4  0000021F           	ddw	__ccov196_end_blk12	; block 12 END_ADDR
  9372  13E8  00000214           	ddw	__ccov195_start_blk11	; block 11 START_ADDR
  9373  13EC  0000021A           	ddw	__ccov195_end_blk11	; block 11 END_ADDR
  9374  13F0  00000210           	ddw	__ccov194_start_blk10	; block 10 START_ADDR
  9375  13F4  00000214           	ddw	__ccov194_end_blk10	; block 10 END_ADDR
  9376  13F8  000001E7           	ddw	_fun_work	; block 0 START_ADDR
  9377  13FC  000001EB           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9378                           
  9379                           ; Function: fun_work, coverage: 15,14,13,12,11,10,0
  9380  1400  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9381  1404  0000002B           	ddw	__ccovbit15_93/(0+8)	; CC_ADDR
  9382  1408  00000001           	ddw	1	; NUM_POINTS
  9383  140C  00000001           	ddw	__ccovbit15_93& (0+7)	; OFFSET
  9384  1410  00000000           	ddw	0	; Reserved
  9385  1414  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9386  1418  00000007           	ddw	7	; NUM_RANGES
  9387  141C  00000229           	ddw	__ccov199_start_blk15	; block 15 START_ADDR
  9388  1420  0000022E           	ddw	__ccov199_end_blk15	; block 15 END_ADDR
  9389  1424  00000224           	ddw	__ccov198_start_blk14	; block 14 START_ADDR
  9390  1428  00000229           	ddw	__ccov198_end_blk14	; block 14 END_ADDR
  9391  142C  0000021F           	ddw	__ccov197_start_blk13	; block 13 START_ADDR
  9392  1430  00000224           	ddw	__ccov197_end_blk13	; block 13 END_ADDR
  9393  1434  0000021A           	ddw	__ccov196_start_blk12	; block 12 START_ADDR
  9394  1438  0000021F           	ddw	__ccov196_end_blk12	; block 12 END_ADDR
  9395  143C  00000214           	ddw	__ccov195_start_blk11	; block 11 START_ADDR
  9396  1440  0000021A           	ddw	__ccov195_end_blk11	; block 11 END_ADDR
  9397  1444  00000210           	ddw	__ccov194_start_blk10	; block 10 START_ADDR
  9398  1448  00000214           	ddw	__ccov194_end_blk10	; block 10 END_ADDR
  9399  144C  000001E7           	ddw	_fun_work	; block 0 START_ADDR
  9400  1450  000001EB           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9401                           
  9402                           ; Function: fun_work, coverage: 17,16,15,14,13,12,11,10,0
  9403  1454  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9404  1458  0000002B           	ddw	__ccovbit17_94/(0+8)	; CC_ADDR
  9405  145C  00000001           	ddw	1	; NUM_POINTS
  9406  1460  00000000           	ddw	__ccovbit17_94& (0+7)	; OFFSET
  9407  1464  00000000           	ddw	0	; Reserved
  9408  1468  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9409  146C  00000009           	ddw	9	; NUM_RANGES
  9410  1470  00000232           	ddw	__ccov201_start_blk17	; block 17 START_ADDR
  9411  1474  00000236           	ddw	__ccov201_end_blk17	; block 17 END_ADDR
  9412  1478  0000022E           	ddw	__ccov200_start_blk16	; block 16 START_ADDR
  9413  147C  00000232           	ddw	__ccov200_end_blk16	; block 16 END_ADDR
  9414  1480  00000229           	ddw	__ccov199_start_blk15	; block 15 START_ADDR
  9415  1484  0000022E           	ddw	__ccov199_end_blk15	; block 15 END_ADDR
  9416  1488  00000224           	ddw	__ccov198_start_blk14	; block 14 START_ADDR
  9417  148C  00000229           	ddw	__ccov198_end_blk14	; block 14 END_ADDR
  9418  1490  0000021F           	ddw	__ccov197_start_blk13	; block 13 START_ADDR
  9419  1494  00000224           	ddw	__ccov197_end_blk13	; block 13 END_ADDR
  9420  1498  0000021A           	ddw	__ccov196_start_blk12	; block 12 START_ADDR
  9421  149C  0000021F           	ddw	__ccov196_end_blk12	; block 12 END_ADDR
  9422  14A0  00000214           	ddw	__ccov195_start_blk11	; block 11 START_ADDR
  9423  14A4  0000021A           	ddw	__ccov195_end_blk11	; block 11 END_ADDR
  9424  14A8  00000210           	ddw	__ccov194_start_blk10	; block 10 START_ADDR
  9425  14AC  00000214           	ddw	__ccov194_end_blk10	; block 10 END_ADDR
  9426  14B0  000001E7           	ddw	_fun_work	; block 0 START_ADDR
  9427  14B4  000001EB           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9428                           
  9429                           ; Function: fun_work, coverage: 19,10,0
  9430  14B8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9431  14BC  0000002A           	ddw	__ccovbit19_95/(0+8)	; CC_ADDR
  9432  14C0  00000001           	ddw	1	; NUM_POINTS
  9433  14C4  00000007           	ddw	__ccovbit19_95& (0+7)	; OFFSET
  9434  14C8  00000000           	ddw	0	; Reserved
  9435  14CC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9436  14D0  00000003           	ddw	3	; NUM_RANGES
  9437  14D4  00000236           	ddw	__ccov202_start_blk19	; block 19 START_ADDR
  9438  14D8  00000239           	ddw	__end_of_fun_work	; block 19 END_ADDR
  9439  14DC  00000210           	ddw	__ccov194_start_blk10	; block 10 START_ADDR
  9440  14E0  00000214           	ddw	__ccov194_end_blk10	; block 10 END_ADDR
  9441  14E4  000001E7           	ddw	_fun_work	; block 0 START_ADDR
  9442  14E8  000001EB           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9443                           
  9444                           ; Function: switch_wm, coverage: 1,0
  9445  14EC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9446  14F0  0000002A           	ddw	__ccovbit1_96/(0+8)	; CC_ADDR
  9447  14F4  00000001           	ddw	1	; NUM_POINTS
  9448  14F8  00000006           	ddw	__ccovbit1_96& (0+7)	; OFFSET
  9449  14FC  00000000           	ddw	0	; Reserved
  9450  1500  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9451  1504  00000002           	ddw	2	; NUM_RANGES
  9452  1508  000003C0           	ddw	__ccov204_start_blk1	; block 1 START_ADDR
  9453  150C  000003C6           	ddw	__ccov204_end_blk1	; block 1 END_ADDR
  9454  1510  000003BC           	ddw	_switch_wm	; block 0 START_ADDR
  9455  1514  000003C0           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9456                           
  9457                           ; Function: switch_wm, coverage: 4,3,2,1,0
  9458  1518  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9459  151C  0000002A           	ddw	__ccovbit4_97/(0+8)	; CC_ADDR
  9460  1520  00000001           	ddw	1	; NUM_POINTS
  9461  1524  00000005           	ddw	__ccovbit4_97& (0+7)	; OFFSET
  9462  1528  00000000           	ddw	0	; Reserved
  9463  152C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9464  1530  00000005           	ddw	5	; NUM_RANGES
  9465  1534  000003CB           	ddw	__ccov207_start_blk4	; block 4 START_ADDR
  9466  1538  000003D2           	ddw	__ccov207_end_blk4	; block 4 END_ADDR
  9467  153C  000003C8           	ddw	__ccov206_start_blk3	; block 3 START_ADDR
  9468  1540  000003CB           	ddw	__ccov206_end_blk3	; block 3 END_ADDR
  9469  1544  000003C6           	ddw	__ccov205_start_blk2	; block 2 START_ADDR
  9470  1548  000003C8           	ddw	__ccov205_end_blk2	; block 2 END_ADDR
  9471  154C  000003C0           	ddw	__ccov204_start_blk1	; block 1 START_ADDR
  9472  1550  000003C6           	ddw	__ccov204_end_blk1	; block 1 END_ADDR
  9473  1554  000003BC           	ddw	_switch_wm	; block 0 START_ADDR
  9474  1558  000003C0           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9475                           
  9476                           ; Function: switch_wm, coverage: 6,0
  9477  155C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9478  1560  0000002A           	ddw	__ccovbit6_98/(0+8)	; CC_ADDR
  9479  1564  00000001           	ddw	1	; NUM_POINTS
  9480  1568  00000004           	ddw	__ccovbit6_98& (0+7)	; OFFSET
  9481  156C  00000000           	ddw	0	; Reserved
  9482  1570  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9483  1574  00000002           	ddw	2	; NUM_RANGES
  9484  1578  000003D2           	ddw	__ccov208_start_blk6	; block 6 START_ADDR
  9485  157C  000003D8           	ddw	__ccov208_end_blk6	; block 6 END_ADDR
  9486  1580  000003BC           	ddw	_switch_wm	; block 0 START_ADDR
  9487  1584  000003C0           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9488                           
  9489                           ; Function: switch_wm, coverage: 7,6,0
  9490  1588  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9491  158C  0000002A           	ddw	__ccovbit7_99/(0+8)	; CC_ADDR
  9492  1590  00000001           	ddw	1	; NUM_POINTS
  9493  1594  00000003           	ddw	__ccovbit7_99& (0+7)	; OFFSET
  9494  1598  00000000           	ddw	0	; Reserved
  9495  159C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9496  15A0  00000003           	ddw	3	; NUM_RANGES
  9497  15A4  000003D8           	ddw	__ccov209_start_blk7	; block 7 START_ADDR
  9498  15A8  000003DD           	ddw	__ccov209_end_blk7	; block 7 END_ADDR
  9499  15AC  000003D2           	ddw	__ccov208_start_blk6	; block 6 START_ADDR
  9500  15B0  000003D8           	ddw	__ccov208_end_blk6	; block 6 END_ADDR
  9501  15B4  000003BC           	ddw	_switch_wm	; block 0 START_ADDR
  9502  15B8  000003C0           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9503                           
  9504                           ; Function: switch_wm, coverage: 10,9,8,7,6,0
  9505  15BC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9506  15C0  0000002A           	ddw	__ccovbit10_100/(0+8)	; CC_ADDR
  9507  15C4  00000001           	ddw	1	; NUM_POINTS
  9508  15C8  00000002           	ddw	__ccovbit10_100& (0+7)	; OFFSET
  9509  15CC  00000000           	ddw	0	; Reserved
  9510  15D0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9511  15D4  00000006           	ddw	6	; NUM_RANGES
  9512  15D8  000003E2           	ddw	__ccov212_start_blk10	; block 10 START_ADDR
  9513  15DC  000003E6           	ddw	__ccov212_end_blk10	; block 10 END_ADDR
  9514  15E0  000003DF           	ddw	__ccov211_start_blk9	; block 9 START_ADDR
  9515  15E4  000003E2           	ddw	__ccov211_end_blk9	; block 9 END_ADDR
  9516  15E8  000003DD           	ddw	__ccov210_start_blk8	; block 8 START_ADDR
  9517  15EC  000003DF           	ddw	__ccov210_end_blk8	; block 8 END_ADDR
  9518  15F0  000003D8           	ddw	__ccov209_start_blk7	; block 7 START_ADDR
  9519  15F4  000003DD           	ddw	__ccov209_end_blk7	; block 7 END_ADDR
  9520  15F8  000003D2           	ddw	__ccov208_start_blk6	; block 6 START_ADDR
  9521  15FC  000003D8           	ddw	__ccov208_end_blk6	; block 6 END_ADDR
  9522  1600  000003BC           	ddw	_switch_wm	; block 0 START_ADDR
  9523  1604  000003C0           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9524                           
  9525                           ; Function: switch_wm, coverage: 14,0
  9526  1608  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9527  160C  0000002A           	ddw	__ccovbit14_101/(0+8)	; CC_ADDR
  9528  1610  00000001           	ddw	1	; NUM_POINTS
  9529  1614  00000001           	ddw	__ccovbit14_101& (0+7)	; OFFSET
  9530  1618  00000000           	ddw	0	; Reserved
  9531  161C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9532  1620  00000002           	ddw	2	; NUM_RANGES
  9533  1624  000003E6           	ddw	__ccov213_start_blk14	; block 14 START_ADDR
  9534  1628  000003E8           	ddw	__end_of_switch_wm	; block 14 END_ADDR
  9535  162C  000003BC           	ddw	_switch_wm	; block 0 START_ADDR
  9536  1630  000003C0           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9537                           
  9538                           ; Function: autorotation_work, coverage: 1,0
  9539  1634  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9540  1638  0000002A           	ddw	__ccovbit1_102/(0+8)	; CC_ADDR
  9541  163C  00000001           	ddw	1	; NUM_POINTS
  9542  1640  00000000           	ddw	__ccovbit1_102& (0+7)	; OFFSET
  9543  1644  00000000           	ddw	0	; Reserved
  9544  1648  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9545  164C  00000002           	ddw	2	; NUM_RANGES
  9546  1650  0000019C           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
  9547  1654  000001A1           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
  9548  1658  0000018D           	ddw	_autorotation_work	; block 0 START_ADDR
  9549  165C  0000019C           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9550                           
  9551                           ; Function: autorotation_work, coverage: 2,1,0
  9552  1660  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9553  1664  00000029           	ddw	__ccovbit2_103/(0+8)	; CC_ADDR
  9554  1668  00000001           	ddw	1	; NUM_POINTS
  9555  166C  00000007           	ddw	__ccovbit2_103& (0+7)	; OFFSET
  9556  1670  00000000           	ddw	0	; Reserved
  9557  1674  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9558  1678  00000003           	ddw	3	; NUM_RANGES
  9559  167C  000001A1           	ddw	__ccov216_start_blk2	; block 2 START_ADDR
  9560  1680  000001A6           	ddw	__ccov216_end_blk2	; block 2 END_ADDR
  9561  1684  0000019C           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
  9562  1688  000001A1           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
  9563  168C  0000018D           	ddw	_autorotation_work	; block 0 START_ADDR
  9564  1690  0000019C           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9565                           
  9566                           ; Function: autorotation_work, coverage: 3,2,1,0
  9567  1694  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9568  1698  00000029           	ddw	__ccovbit3_104/(0+8)	; CC_ADDR
  9569  169C  00000001           	ddw	1	; NUM_POINTS
  9570  16A0  00000006           	ddw	__ccovbit3_104& (0+7)	; OFFSET
  9571  16A4  00000000           	ddw	0	; Reserved
  9572  16A8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9573  16AC  00000004           	ddw	4	; NUM_RANGES
  9574  16B0  000001A6           	ddw	__ccov217_start_blk3	; block 3 START_ADDR
  9575  16B4  000001AB           	ddw	__ccov217_end_blk3	; block 3 END_ADDR
  9576  16B8  000001A1           	ddw	__ccov216_start_blk2	; block 2 START_ADDR
  9577  16BC  000001A6           	ddw	__ccov216_end_blk2	; block 2 END_ADDR
  9578  16C0  0000019C           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
  9579  16C4  000001A1           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
  9580  16C8  0000018D           	ddw	_autorotation_work	; block 0 START_ADDR
  9581  16CC  0000019C           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9582                           
  9583                           ; Function: autorotation_work, coverage: 4,3,2,1,0
  9584  16D0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9585  16D4  00000029           	ddw	__ccovbit4_105/(0+8)	; CC_ADDR
  9586  16D8  00000001           	ddw	1	; NUM_POINTS
  9587  16DC  00000005           	ddw	__ccovbit4_105& (0+7)	; OFFSET
  9588  16E0  00000000           	ddw	0	; Reserved
  9589  16E4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9590  16E8  00000005           	ddw	5	; NUM_RANGES
  9591  16EC  000001AB           	ddw	__ccov218_start_blk4	; block 4 START_ADDR
  9592  16F0  000001B0           	ddw	__ccov218_end_blk4	; block 4 END_ADDR
  9593  16F4  000001A6           	ddw	__ccov217_start_blk3	; block 3 START_ADDR
  9594  16F8  000001AB           	ddw	__ccov217_end_blk3	; block 3 END_ADDR
  9595  16FC  000001A1           	ddw	__ccov216_start_blk2	; block 2 START_ADDR
  9596  1700  000001A6           	ddw	__ccov216_end_blk2	; block 2 END_ADDR
  9597  1704  0000019C           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
  9598  1708  000001A1           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
  9599  170C  0000018D           	ddw	_autorotation_work	; block 0 START_ADDR
  9600  1710  0000019C           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9601                           
  9602                           ; Function: autorotation_work, coverage: 7,6,5,4,3,2,1,0
  9603  1714  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9604  1718  00000029           	ddw	__ccovbit7_106/(0+8)	; CC_ADDR
  9605  171C  00000001           	ddw	1	; NUM_POINTS
  9606  1720  00000004           	ddw	__ccovbit7_106& (0+7)	; OFFSET
  9607  1724  00000000           	ddw	0	; Reserved
  9608  1728  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9609  172C  00000008           	ddw	8	; NUM_RANGES
  9610  1730  000001B5           	ddw	__ccov221_start_blk7	; block 7 START_ADDR
  9611  1734  000001BD           	ddw	__ccov221_end_blk7	; block 7 END_ADDR
  9612  1738  000001B3           	ddw	__ccov220_start_blk6	; block 6 START_ADDR
  9613  173C  000001B5           	ddw	__ccov220_end_blk6	; block 6 END_ADDR
  9614  1740  000001B0           	ddw	__ccov219_start_blk5	; block 5 START_ADDR
  9615  1744  000001B3           	ddw	__ccov219_end_blk5	; block 5 END_ADDR
  9616  1748  000001AB           	ddw	__ccov218_start_blk4	; block 4 START_ADDR
  9617  174C  000001B0           	ddw	__ccov218_end_blk4	; block 4 END_ADDR
  9618  1750  000001A6           	ddw	__ccov217_start_blk3	; block 3 START_ADDR
  9619  1754  000001AB           	ddw	__ccov217_end_blk3	; block 3 END_ADDR
  9620  1758  000001A1           	ddw	__ccov216_start_blk2	; block 2 START_ADDR
  9621  175C  000001A6           	ddw	__ccov216_end_blk2	; block 2 END_ADDR
  9622  1760  0000019C           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
  9623  1764  000001A1           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
  9624  1768  0000018D           	ddw	_autorotation_work	; block 0 START_ADDR
  9625  176C  0000019C           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9626                           
  9627                           ; Function: autorotation_work, coverage: 10,9,0
  9628  1770  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9629  1774  00000029           	ddw	__ccovbit10_107/(0+8)	; CC_ADDR
  9630  1778  00000001           	ddw	1	; NUM_POINTS
  9631  177C  00000003           	ddw	__ccovbit10_107& (0+7)	; OFFSET
  9632  1780  00000000           	ddw	0	; Reserved
  9633  1784  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9634  1788  00000003           	ddw	3	; NUM_RANGES
  9635  178C  000001CB           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9636  1790  000001D0           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9637  1794  000001BD           	ddw	__ccov222_start_blk9	; block 9 START_ADDR
  9638  1798  000001CB           	ddw	__ccov222_end_blk9	; block 9 END_ADDR
  9639  179C  0000018D           	ddw	_autorotation_work	; block 0 START_ADDR
  9640  17A0  0000019C           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9641                           
  9642                           ; Function: autorotation_work, coverage: 11,10,9,0
  9643  17A4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9644  17A8  00000029           	ddw	__ccovbit11_108/(0+8)	; CC_ADDR
  9645  17AC  00000001           	ddw	1	; NUM_POINTS
  9646  17B0  00000002           	ddw	__ccovbit11_108& (0+7)	; OFFSET
  9647  17B4  00000000           	ddw	0	; Reserved
  9648  17B8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9649  17BC  00000004           	ddw	4	; NUM_RANGES
  9650  17C0  000001D0           	ddw	__ccov224_start_blk11	; block 11 START_ADDR
  9651  17C4  000001D5           	ddw	__ccov224_end_blk11	; block 11 END_ADDR
  9652  17C8  000001CB           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9653  17CC  000001D0           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9654  17D0  000001BD           	ddw	__ccov222_start_blk9	; block 9 START_ADDR
  9655  17D4  000001CB           	ddw	__ccov222_end_blk9	; block 9 END_ADDR
  9656  17D8  0000018D           	ddw	_autorotation_work	; block 0 START_ADDR
  9657  17DC  0000019C           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9658                           
  9659                           ; Function: autorotation_work, coverage: 12,11,10,9,0
  9660  17E0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9661  17E4  00000029           	ddw	__ccovbit12_109/(0+8)	; CC_ADDR
  9662  17E8  00000001           	ddw	1	; NUM_POINTS
  9663  17EC  00000001           	ddw	__ccovbit12_109& (0+7)	; OFFSET
  9664  17F0  00000000           	ddw	0	; Reserved
  9665  17F4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9666  17F8  00000005           	ddw	5	; NUM_RANGES
  9667  17FC  000001D5           	ddw	__ccov225_start_blk12	; block 12 START_ADDR
  9668  1800  000001DA           	ddw	__ccov225_end_blk12	; block 12 END_ADDR
  9669  1804  000001D0           	ddw	__ccov224_start_blk11	; block 11 START_ADDR
  9670  1808  000001D5           	ddw	__ccov224_end_blk11	; block 11 END_ADDR
  9671  180C  000001CB           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9672  1810  000001D0           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9673  1814  000001BD           	ddw	__ccov222_start_blk9	; block 9 START_ADDR
  9674  1818  000001CB           	ddw	__ccov222_end_blk9	; block 9 END_ADDR
  9675  181C  0000018D           	ddw	_autorotation_work	; block 0 START_ADDR
  9676  1820  0000019C           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9677                           
  9678                           ; Function: autorotation_work, coverage: 13,12,11,10,9,0
  9679  1824  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9680  1828  00000029           	ddw	__ccovbit13_110/(0+8)	; CC_ADDR
  9681  182C  00000001           	ddw	1	; NUM_POINTS
  9682  1830  00000000           	ddw	__ccovbit13_110& (0+7)	; OFFSET
  9683  1834  00000000           	ddw	0	; Reserved
  9684  1838  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9685  183C  00000006           	ddw	6	; NUM_RANGES
  9686  1840  000001DA           	ddw	__ccov226_start_blk13	; block 13 START_ADDR
  9687  1844  000001DF           	ddw	__ccov226_end_blk13	; block 13 END_ADDR
  9688  1848  000001D5           	ddw	__ccov225_start_blk12	; block 12 START_ADDR
  9689  184C  000001DA           	ddw	__ccov225_end_blk12	; block 12 END_ADDR
  9690  1850  000001D0           	ddw	__ccov224_start_blk11	; block 11 START_ADDR
  9691  1854  000001D5           	ddw	__ccov224_end_blk11	; block 11 END_ADDR
  9692  1858  000001CB           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9693  185C  000001D0           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9694  1860  000001BD           	ddw	__ccov222_start_blk9	; block 9 START_ADDR
  9695  1864  000001CB           	ddw	__ccov222_end_blk9	; block 9 END_ADDR
  9696  1868  0000018D           	ddw	_autorotation_work	; block 0 START_ADDR
  9697  186C  0000019C           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9698                           
  9699                           ; Function: autorotation_work, coverage: 15,14,13,12,11,10,9,0
  9700  1870  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9701  1874  00000028           	ddw	__ccovbit15_111/(0+8)	; CC_ADDR
  9702  1878  00000001           	ddw	1	; NUM_POINTS
  9703  187C  00000007           	ddw	__ccovbit15_111& (0+7)	; OFFSET
  9704  1880  00000000           	ddw	0	; Reserved
  9705  1884  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9706  1888  00000008           	ddw	8	; NUM_RANGES
  9707  188C  000001E2           	ddw	__ccov228_start_blk15	; block 15 START_ADDR
  9708  1890  000001E5           	ddw	__ccov228_end_blk15	; block 15 END_ADDR
  9709  1894  000001DF           	ddw	__ccov227_start_blk14	; block 14 START_ADDR
  9710  1898  000001E2           	ddw	__ccov227_end_blk14	; block 14 END_ADDR
  9711  189C  000001DA           	ddw	__ccov226_start_blk13	; block 13 START_ADDR
  9712  18A0  000001DF           	ddw	__ccov226_end_blk13	; block 13 END_ADDR
  9713  18A4  000001D5           	ddw	__ccov225_start_blk12	; block 12 START_ADDR
  9714  18A8  000001DA           	ddw	__ccov225_end_blk12	; block 12 END_ADDR
  9715  18AC  000001D0           	ddw	__ccov224_start_blk11	; block 11 START_ADDR
  9716  18B0  000001D5           	ddw	__ccov224_end_blk11	; block 11 END_ADDR
  9717  18B4  000001CB           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9718  18B8  000001D0           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9719  18BC  000001BD           	ddw	__ccov222_start_blk9	; block 9 START_ADDR
  9720  18C0  000001CB           	ddw	__ccov222_end_blk9	; block 9 END_ADDR
  9721  18C4  0000018D           	ddw	_autorotation_work	; block 0 START_ADDR
  9722  18C8  0000019C           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9723                           
  9724                           ; Function: autorotation_work, coverage: 17,9,0
  9725  18CC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9726  18D0  00000028           	ddw	__ccovbit17_112/(0+8)	; CC_ADDR
  9727  18D4  00000001           	ddw	1	; NUM_POINTS
  9728  18D8  00000006           	ddw	__ccovbit17_112& (0+7)	; OFFSET
  9729  18DC  00000000           	ddw	0	; Reserved
  9730  18E0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9731  18E4  00000003           	ddw	3	; NUM_RANGES
  9732  18E8  000001E5           	ddw	__ccov229_start_blk17	; block 17 START_ADDR
  9733  18EC  000001E7           	ddw	__end_of_autorotation_work	; block 17 END_ADDR
  9734  18F0  000001BD           	ddw	__ccov222_start_blk9	; block 9 START_ADDR
  9735  18F4  000001CB           	ddw	__ccov222_end_blk9	; block 9 END_ADDR
  9736  18F8  0000018D           	ddw	_autorotation_work	; block 0 START_ADDR
  9737  18FC  0000019C           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9738                           
  9739                           ; Function: minute_tick, coverage: 1,0
  9740  1900  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9741  1904  00000028           	ddw	__ccovbit1_113/(0+8)	; CC_ADDR
  9742  1908  00000001           	ddw	1	; NUM_POINTS
  9743  190C  00000005           	ddw	__ccovbit1_113& (0+7)	; OFFSET
  9744  1910  00000000           	ddw	0	; Reserved
  9745  1914  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9746  1918  00000002           	ddw	2	; NUM_RANGES
  9747  191C  0000054C           	ddw	__ccov231_start_blk1	; block 1 START_ADDR
  9748  1920  00000550           	ddw	__ccov231_end_blk1	; block 1 END_ADDR
  9749  1924  00000546           	ddw	_minute_tick	; block 0 START_ADDR
  9750  1928  0000054C           	ddw	__ccov230_end_blk0	; block 0 END_ADDR
  9751                           
  9752                           ; Function: minute_tick, coverage: 3,0
  9753  192C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9754  1930  00000028           	ddw	__ccovbit3_114/(0+8)	; CC_ADDR
  9755  1934  00000001           	ddw	1	; NUM_POINTS
  9756  1938  00000004           	ddw	__ccovbit3_114& (0+7)	; OFFSET
  9757  193C  00000000           	ddw	0	; Reserved
  9758  1940  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9759  1944  00000002           	ddw	2	; NUM_RANGES
  9760  1948  00000550           	ddw	__ccov232_start_blk3	; block 3 START_ADDR
  9761  194C  00000556           	ddw	__ccov232_end_blk3	; block 3 END_ADDR
  9762  1950  00000546           	ddw	_minute_tick	; block 0 START_ADDR
  9763  1954  0000054C           	ddw	__ccov230_end_blk0	; block 0 END_ADDR
  9764                           
  9765                           ; Function: minute_tick, coverage: 5,4,3,0
  9766  1958  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9767  195C  00000028           	ddw	__ccovbit5_115/(0+8)	; CC_ADDR
  9768  1960  00000001           	ddw	1	; NUM_POINTS
  9769  1964  00000003           	ddw	__ccovbit5_115& (0+7)	; OFFSET
  9770  1968  00000000           	ddw	0	; Reserved
  9771  196C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9772  1970  00000004           	ddw	4	; NUM_RANGES
  9773  1974  00000557           	ddw	__ccov234_start_blk5	; block 5 START_ADDR
  9774  1978  0000055C           	ddw	__ccov234_end_blk5	; block 5 END_ADDR
  9775  197C  00000556           	ddw	__ccov233_start_blk4	; block 4 START_ADDR
  9776  1980  00000557           	ddw	__ccov233_end_blk4	; block 4 END_ADDR
  9777  1984  00000550           	ddw	__ccov232_start_blk3	; block 3 START_ADDR
  9778  1988  00000556           	ddw	__ccov232_end_blk3	; block 3 END_ADDR
  9779  198C  00000546           	ddw	_minute_tick	; block 0 START_ADDR
  9780  1990  0000054C           	ddw	__ccov230_end_blk0	; block 0 END_ADDR
  9781                           
  9782                           ; Function: minute_tick, coverage: 8,0
  9783  1994  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9784  1998  00000028           	ddw	__ccovbit8_116/(0+8)	; CC_ADDR
  9785  199C  00000001           	ddw	1	; NUM_POINTS
  9786  19A0  00000002           	ddw	__ccovbit8_116& (0+7)	; OFFSET
  9787  19A4  00000000           	ddw	0	; Reserved
  9788  19A8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9789  19AC  00000002           	ddw	2	; NUM_RANGES
  9790  19B0  0000055C           	ddw	__ccov235_start_blk8	; block 8 START_ADDR
  9791  19B4  0000055E           	ddw	__end_of_minute_tick	; block 8 END_ADDR
  9792  19B8  00000546           	ddw	_minute_tick	; block 0 START_ADDR
  9793  19BC  0000054C           	ddw	__ccov230_end_blk0	; block 0 END_ADDR
  9794                           
  9795                           ; Function: sec_30_work, coverage: 1,0
  9796  19C0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9797  19C4  00000028           	ddw	__ccovbit1_117/(0+8)	; CC_ADDR
  9798  19C8  00000001           	ddw	1	; NUM_POINTS
  9799  19CC  00000001           	ddw	__ccovbit1_117& (0+7)	; OFFSET
  9800  19D0  00000000           	ddw	0	; Reserved
  9801  19D4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9802  19D8  00000002           	ddw	2	; NUM_RANGES
  9803  19DC  0000063F           	ddw	__ccov237_start_blk1	; block 1 START_ADDR
  9804  19E0  00000643           	ddw	__ccov237_end_blk1	; block 1 END_ADDR
  9805  19E4  0000063B           	ddw	_sec_30_work	; block 0 START_ADDR
  9806  19E8  0000063F           	ddw	__ccov236_end_blk0	; block 0 END_ADDR
  9807                           
  9808                           ; Function: sec_30_work, coverage: 3,0
  9809  19EC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9810  19F0  00000028           	ddw	__ccovbit3_118/(0+8)	; CC_ADDR
  9811  19F4  00000001           	ddw	1	; NUM_POINTS
  9812  19F8  00000000           	ddw	__ccovbit3_118& (0+7)	; OFFSET
  9813  19FC  00000000           	ddw	0	; Reserved
  9814  1A00  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9815  1A04  00000002           	ddw	2	; NUM_RANGES
  9816  1A08  00000643           	ddw	__ccov238_start_blk3	; block 3 START_ADDR
  9817  1A0C  00000649           	ddw	__ccov238_end_blk3	; block 3 END_ADDR
  9818  1A10  0000063B           	ddw	_sec_30_work	; block 0 START_ADDR
  9819  1A14  0000063F           	ddw	__ccov236_end_blk0	; block 0 END_ADDR
  9820                           
  9821                           ; Function: sec_30_work, coverage: 5,0
  9822  1A18  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9823  1A1C  00000027           	ddw	__ccovbit5_119/(0+8)	; CC_ADDR
  9824  1A20  00000001           	ddw	1	; NUM_POINTS
  9825  1A24  00000007           	ddw	__ccovbit5_119& (0+7)	; OFFSET
  9826  1A28  00000000           	ddw	0	; Reserved
  9827  1A2C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9828  1A30  00000002           	ddw	2	; NUM_RANGES
  9829  1A34  00000649           	ddw	__ccov239_start_blk5	; block 5 START_ADDR
  9830  1A38  0000064B           	ddw	__end_of_sec_30_work	; block 5 END_ADDR
  9831  1A3C  0000063B           	ddw	_sec_30_work	; block 0 START_ADDR
  9832  1A40  0000063F           	ddw	__ccov236_end_blk0	; block 0 END_ADDR
  9833                           
  9834                           ; Function: sec_work, coverage: 3,2,1,0
  9835  1A44  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9836  1A48  00000027           	ddw	__ccovbit3_120/(0+8)	; CC_ADDR
  9837  1A4C  00000001           	ddw	1	; NUM_POINTS
  9838  1A50  00000006           	ddw	__ccovbit3_120& (0+7)	; OFFSET
  9839  1A54  00000000           	ddw	0	; Reserved
  9840  1A58  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9841  1A5C  00000004           	ddw	4	; NUM_RANGES
  9842  1A60  00000057           	ddw	__ccov243_start_blk3	; block 3 START_ADDR
  9843  1A64  0000005B           	ddw	__ccov243_end_blk3	; block 3 END_ADDR
  9844  1A68  00000052           	ddw	__ccov242_start_blk2	; block 2 START_ADDR
  9845  1A6C  00000057           	ddw	__ccov242_end_blk2	; block 2 END_ADDR
  9846  1A70  0000004E           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
  9847  1A74  00000052           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
  9848  1A78  00000049           	ddw	_sec_work	; block 0 START_ADDR
  9849  1A7C  0000004E           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
  9850                           
  9851                           ; Function: sec_work, coverage: 4,2,1,0
  9852  1A80  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9853  1A84  00000027           	ddw	__ccovbit4_121/(0+8)	; CC_ADDR
  9854  1A88  00000001           	ddw	1	; NUM_POINTS
  9855  1A8C  00000005           	ddw	__ccovbit4_121& (0+7)	; OFFSET
  9856  1A90  00000000           	ddw	0	; Reserved
  9857  1A94  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9858  1A98  00000004           	ddw	4	; NUM_RANGES
  9859  1A9C  0000005B           	ddw	__ccov244_start_blk4	; block 4 START_ADDR
  9860  1AA0  0000005D           	ddw	__ccov244_end_blk4	; block 4 END_ADDR
  9861  1AA4  00000052           	ddw	__ccov242_start_blk2	; block 2 START_ADDR
  9862  1AA8  00000057           	ddw	__ccov242_end_blk2	; block 2 END_ADDR
  9863  1AAC  0000004E           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
  9864  1AB0  00000052           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
  9865  1AB4  00000049           	ddw	_sec_work	; block 0 START_ADDR
  9866  1AB8  0000004E           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
  9867                           
  9868                           ; Function: sec_work, coverage: 8,7,6,1,0
  9869  1ABC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9870  1AC0  00000027           	ddw	__ccovbit8_122/(0+8)	; CC_ADDR
  9871  1AC4  00000001           	ddw	1	; NUM_POINTS
  9872  1AC8  00000004           	ddw	__ccovbit8_122& (0+7)	; OFFSET
  9873  1ACC  00000000           	ddw	0	; Reserved
  9874  1AD0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9875  1AD4  00000005           	ddw	5	; NUM_RANGES
  9876  1AD8  00000065           	ddw	__ccov247_start_blk8	; block 8 START_ADDR
  9877  1ADC  00000070           	ddw	__ccov247_end_blk8	; block 8 END_ADDR
  9878  1AE0  00000061           	ddw	__ccov246_start_blk7	; block 7 START_ADDR
  9879  1AE4  00000065           	ddw	__ccov246_end_blk7	; block 7 END_ADDR
  9880  1AE8  0000005D           	ddw	__ccov245_start_blk6	; block 6 START_ADDR
  9881  1AEC  00000061           	ddw	__ccov245_end_blk6	; block 6 END_ADDR
  9882  1AF0  0000004E           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
  9883  1AF4  00000052           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
  9884  1AF8  00000049           	ddw	_sec_work	; block 0 START_ADDR
  9885  1AFC  0000004E           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
  9886                           
  9887                           ; Function: sec_work, coverage: 10,7,6,1,0
  9888  1B00  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9889  1B04  00000027           	ddw	__ccovbit10_123/(0+8)	; CC_ADDR
  9890  1B08  00000001           	ddw	1	; NUM_POINTS
  9891  1B0C  00000003           	ddw	__ccovbit10_123& (0+7)	; OFFSET
  9892  1B10  00000000           	ddw	0	; Reserved
  9893  1B14  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9894  1B18  00000005           	ddw	5	; NUM_RANGES
  9895  1B1C  00000070           	ddw	__ccov248_start_blk10	; block 10 START_ADDR
  9896  1B20  00000074           	ddw	__ccov248_end_blk10	; block 10 END_ADDR
  9897  1B24  00000061           	ddw	__ccov246_start_blk7	; block 7 START_ADDR
  9898  1B28  00000065           	ddw	__ccov246_end_blk7	; block 7 END_ADDR
  9899  1B2C  0000005D           	ddw	__ccov245_start_blk6	; block 6 START_ADDR
  9900  1B30  00000061           	ddw	__ccov245_end_blk6	; block 6 END_ADDR
  9901  1B34  0000004E           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
  9902  1B38  00000052           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
  9903  1B3C  00000049           	ddw	_sec_work	; block 0 START_ADDR
  9904  1B40  0000004E           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
  9905                           
  9906                           ; Function: sec_work, coverage: 14,13,12,6,1,0
  9907  1B44  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9908  1B48  00000027           	ddw	__ccovbit14_124/(0+8)	; CC_ADDR
  9909  1B4C  00000001           	ddw	1	; NUM_POINTS
  9910  1B50  00000002           	ddw	__ccovbit14_124& (0+7)	; OFFSET
  9911  1B54  00000000           	ddw	0	; Reserved
  9912  1B58  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9913  1B5C  00000006           	ddw	6	; NUM_RANGES
  9914  1B60  0000007F           	ddw	__ccov251_start_blk14	; block 14 START_ADDR
  9915  1B64  00000086           	ddw	__ccov251_end_blk14	; block 14 END_ADDR
  9916  1B68  00000078           	ddw	__ccov250_start_blk13	; block 13 START_ADDR
  9917  1B6C  0000007F           	ddw	__ccov250_end_blk13	; block 13 END_ADDR
  9918  1B70  00000074           	ddw	__ccov249_start_blk12	; block 12 START_ADDR
  9919  1B74  00000078           	ddw	__ccov249_end_blk12	; block 12 END_ADDR
  9920  1B78  0000005D           	ddw	__ccov245_start_blk6	; block 6 START_ADDR
  9921  1B7C  00000061           	ddw	__ccov245_end_blk6	; block 6 END_ADDR
  9922  1B80  0000004E           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
  9923  1B84  00000052           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
  9924  1B88  00000049           	ddw	_sec_work	; block 0 START_ADDR
  9925  1B8C  0000004E           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
  9926                           
  9927                           ; Function: sec_work, coverage: 16,13,12,6,1,0
  9928  1B90  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9929  1B94  00000027           	ddw	__ccovbit16_125/(0+8)	; CC_ADDR
  9930  1B98  00000001           	ddw	1	; NUM_POINTS
  9931  1B9C  00000001           	ddw	__ccovbit16_125& (0+7)	; OFFSET
  9932  1BA0  00000000           	ddw	0	; Reserved
  9933  1BA4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9934  1BA8  00000006           	ddw	6	; NUM_RANGES
  9935  1BAC  00000086           	ddw	__ccov252_start_blk16	; block 16 START_ADDR
  9936  1BB0  0000008A           	ddw	__ccov252_end_blk16	; block 16 END_ADDR
  9937  1BB4  00000078           	ddw	__ccov250_start_blk13	; block 13 START_ADDR
  9938  1BB8  0000007F           	ddw	__ccov250_end_blk13	; block 13 END_ADDR
  9939  1BBC  00000074           	ddw	__ccov249_start_blk12	; block 12 START_ADDR
  9940  1BC0  00000078           	ddw	__ccov249_end_blk12	; block 12 END_ADDR
  9941  1BC4  0000005D           	ddw	__ccov245_start_blk6	; block 6 START_ADDR
  9942  1BC8  00000061           	ddw	__ccov245_end_blk6	; block 6 END_ADDR
  9943  1BCC  0000004E           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
  9944  1BD0  00000052           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
  9945  1BD4  00000049           	ddw	_sec_work	; block 0 START_ADDR
  9946  1BD8  0000004E           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
  9947                           
  9948                           ; Function: sec_work, coverage: 18,13,12,6,1,0
  9949  1BDC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9950  1BE0  00000027           	ddw	__ccovbit18_126/(0+8)	; CC_ADDR
  9951  1BE4  00000001           	ddw	1	; NUM_POINTS
  9952  1BE8  00000000           	ddw	__ccovbit18_126& (0+7)	; OFFSET
  9953  1BEC  00000000           	ddw	0	; Reserved
  9954  1BF0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9955  1BF4  00000006           	ddw	6	; NUM_RANGES
  9956  1BF8  0000008A           	ddw	__ccov253_start_blk18	; block 18 START_ADDR
  9957  1BFC  0000009B           	ddw	__ccov253_end_blk18	; block 18 END_ADDR
  9958  1C00  00000078           	ddw	__ccov250_start_blk13	; block 13 START_ADDR
  9959  1C04  0000007F           	ddw	__ccov250_end_blk13	; block 13 END_ADDR
  9960  1C08  00000074           	ddw	__ccov249_start_blk12	; block 12 START_ADDR
  9961  1C0C  00000078           	ddw	__ccov249_end_blk12	; block 12 END_ADDR
  9962  1C10  0000005D           	ddw	__ccov245_start_blk6	; block 6 START_ADDR
  9963  1C14  00000061           	ddw	__ccov245_end_blk6	; block 6 END_ADDR
  9964  1C18  0000004E           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
  9965  1C1C  00000052           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
  9966  1C20  00000049           	ddw	_sec_work	; block 0 START_ADDR
  9967  1C24  0000004E           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
  9968                           
  9969                           ; Function: sec_work, coverage: 19,12,6,1,0
  9970  1C28  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9971  1C2C  00000026           	ddw	__ccovbit19_127/(0+8)	; CC_ADDR
  9972  1C30  00000001           	ddw	1	; NUM_POINTS
  9973  1C34  00000007           	ddw	__ccovbit19_127& (0+7)	; OFFSET
  9974  1C38  00000000           	ddw	0	; Reserved
  9975  1C3C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9976  1C40  00000005           	ddw	5	; NUM_RANGES
  9977  1C44  0000009B           	ddw	__ccov254_start_blk19	; block 19 START_ADDR
  9978  1C48  000000A1           	ddw	__ccov254_end_blk19	; block 19 END_ADDR
  9979  1C4C  00000074           	ddw	__ccov249_start_blk12	; block 12 START_ADDR
  9980  1C50  00000078           	ddw	__ccov249_end_blk12	; block 12 END_ADDR
  9981  1C54  0000005D           	ddw	__ccov245_start_blk6	; block 6 START_ADDR
  9982  1C58  00000061           	ddw	__ccov245_end_blk6	; block 6 END_ADDR
  9983  1C5C  0000004E           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
  9984  1C60  00000052           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
  9985  1C64  00000049           	ddw	_sec_work	; block 0 START_ADDR
  9986  1C68  0000004E           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
  9987                           
  9988                           ; Function: sec_work, coverage: 21,20,19,12,6,1,0
  9989  1C6C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9990  1C70  00000026           	ddw	__ccovbit21_128/(0+8)	; CC_ADDR
  9991  1C74  00000001           	ddw	1	; NUM_POINTS
  9992  1C78  00000006           	ddw	__ccovbit21_128& (0+7)	; OFFSET
  9993  1C7C  00000000           	ddw	0	; Reserved
  9994  1C80  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9995  1C84  00000007           	ddw	7	; NUM_RANGES
  9996  1C88  000000A5           	ddw	__ccov256_start_blk21	; block 21 START_ADDR
  9997  1C8C  000000AC           	ddw	__ccov256_end_blk21	; block 21 END_ADDR
  9998  1C90  000000A1           	ddw	__ccov255_start_blk20	; block 20 START_ADDR
  9999  1C94  000000A5           	ddw	__ccov255_end_blk20	; block 20 END_ADDR
 10000  1C98  0000009B           	ddw	__ccov254_start_blk19	; block 19 START_ADDR
 10001  1C9C  000000A1           	ddw	__ccov254_end_blk19	; block 19 END_ADDR
 10002  1CA0  00000074           	ddw	__ccov249_start_blk12	; block 12 START_ADDR
 10003  1CA4  00000078           	ddw	__ccov249_end_blk12	; block 12 END_ADDR
 10004  1CA8  0000005D           	ddw	__ccov245_start_blk6	; block 6 START_ADDR
 10005  1CAC  00000061           	ddw	__ccov245_end_blk6	; block 6 END_ADDR
 10006  1CB0  0000004E           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
 10007  1CB4  00000052           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
 10008  1CB8  00000049           	ddw	_sec_work	; block 0 START_ADDR
 10009  1CBC  0000004E           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
 10010                           
 10011                           ; Function: sec_work, coverage: 23,22,21,20,19,12,6,1,0
 10012  1CC0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10013  1CC4  00000026           	ddw	__ccovbit23_129/(0+8)	; CC_ADDR
 10014  1CC8  00000001           	ddw	1	; NUM_POINTS
 10015  1CCC  00000005           	ddw	__ccovbit23_129& (0+7)	; OFFSET
 10016  1CD0  00000000           	ddw	0	; Reserved
 10017  1CD4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10018  1CD8  00000009           	ddw	9	; NUM_RANGES
 10019  1CDC  000000BA           	ddw	__ccov258_start_blk23	; block 23 START_ADDR
 10020  1CE0  000000BC           	ddw	__ccov258_end_blk23	; block 23 END_ADDR
 10021  1CE4  000000AC           	ddw	__ccov257_start_blk22	; block 22 START_ADDR
 10022  1CE8  000000BA           	ddw	__ccov257_end_blk22	; block 22 END_ADDR
 10023  1CEC  000000A5           	ddw	__ccov256_start_blk21	; block 21 START_ADDR
 10024  1CF0  000000AC           	ddw	__ccov256_end_blk21	; block 21 END_ADDR
 10025  1CF4  000000A1           	ddw	__ccov255_start_blk20	; block 20 START_ADDR
 10026  1CF8  000000A5           	ddw	__ccov255_end_blk20	; block 20 END_ADDR
 10027  1CFC  0000009B           	ddw	__ccov254_start_blk19	; block 19 START_ADDR
 10028  1D00  000000A1           	ddw	__ccov254_end_blk19	; block 19 END_ADDR
 10029  1D04  00000074           	ddw	__ccov249_start_blk12	; block 12 START_ADDR
 10030  1D08  00000078           	ddw	__ccov249_end_blk12	; block 12 END_ADDR
 10031  1D0C  0000005D           	ddw	__ccov245_start_blk6	; block 6 START_ADDR
 10032  1D10  00000061           	ddw	__ccov245_end_blk6	; block 6 END_ADDR
 10033  1D14  0000004E           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
 10034  1D18  00000052           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
 10035  1D1C  00000049           	ddw	_sec_work	; block 0 START_ADDR
 10036  1D20  0000004E           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
 10037                           
 10038                           ; Function: sec_work, coverage: 29,28,27,12,6,1,0
 10039  1D24  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10040  1D28  00000026           	ddw	__ccovbit29_130/(0+8)	; CC_ADDR
 10041  1D2C  00000001           	ddw	1	; NUM_POINTS
 10042  1D30  00000004           	ddw	__ccovbit29_130& (0+7)	; OFFSET
 10043  1D34  00000000           	ddw	0	; Reserved
 10044  1D38  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10045  1D3C  00000007           	ddw	7	; NUM_RANGES
 10046  1D40  000000C5           	ddw	__ccov261_start_blk29	; block 29 START_ADDR
 10047  1D44  000000C8           	ddw	__ccov261_end_blk29	; block 29 END_ADDR
 10048  1D48  000000C2           	ddw	__ccov260_start_blk28	; block 28 START_ADDR
 10049  1D4C  000000C5           	ddw	__ccov260_end_blk28	; block 28 END_ADDR
 10050  1D50  000000BC           	ddw	__ccov259_start_blk27	; block 27 START_ADDR
 10051  1D54  000000C2           	ddw	__ccov259_end_blk27	; block 27 END_ADDR
 10052  1D58  00000074           	ddw	__ccov249_start_blk12	; block 12 START_ADDR
 10053  1D5C  00000078           	ddw	__ccov249_end_blk12	; block 12 END_ADDR
 10054  1D60  0000005D           	ddw	__ccov245_start_blk6	; block 6 START_ADDR
 10055  1D64  00000061           	ddw	__ccov245_end_blk6	; block 6 END_ADDR
 10056  1D68  0000004E           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
 10057  1D6C  00000052           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
 10058  1D70  00000049           	ddw	_sec_work	; block 0 START_ADDR
 10059  1D74  0000004E           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
 10060                           
 10061                           ; Function: sec_work, coverage: 31,27,12,6,1,0
 10062  1D78  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10063  1D7C  00000026           	ddw	__ccovbit31_131/(0+8)	; CC_ADDR
 10064  1D80  00000001           	ddw	1	; NUM_POINTS
 10065  1D84  00000003           	ddw	__ccovbit31_131& (0+7)	; OFFSET
 10066  1D88  00000000           	ddw	0	; Reserved
 10067  1D8C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10068  1D90  00000006           	ddw	6	; NUM_RANGES
 10069  1D94  000000C8           	ddw	__ccov262_start_blk31	; block 31 START_ADDR
 10070  1D98  000000CA           	ddw	__end_of_sec_work	; block 31 END_ADDR
 10071  1D9C  000000BC           	ddw	__ccov259_start_blk27	; block 27 START_ADDR
 10072  1DA0  000000C2           	ddw	__ccov259_end_blk27	; block 27 END_ADDR
 10073  1DA4  00000074           	ddw	__ccov249_start_blk12	; block 12 START_ADDR
 10074  1DA8  00000078           	ddw	__ccov249_end_blk12	; block 12 END_ADDR
 10075  1DAC  0000005D           	ddw	__ccov245_start_blk6	; block 6 START_ADDR
 10076  1DB0  00000061           	ddw	__ccov245_end_blk6	; block 6 END_ADDR
 10077  1DB4  0000004E           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
 10078  1DB8  00000052           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
 10079  1DBC  00000049           	ddw	_sec_work	; block 0 START_ADDR
 10080  1DC0  0000004E           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
 10081                           
 10082                           ; Function: ms_200_work, coverage: 1,0
 10083  1DC4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10084  1DC8  00000026           	ddw	__ccovbit1_132/(0+8)	; CC_ADDR
 10085  1DCC  00000001           	ddw	1	; NUM_POINTS
 10086  1DD0  00000002           	ddw	__ccovbit1_132& (0+7)	; OFFSET
 10087  1DD4  00000000           	ddw	0	; Reserved
 10088  1DD8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10089  1DDC  00000002           	ddw	2	; NUM_RANGES
 10090  1DE0  00000285           	ddw	__ccov264_start_blk1	; block 1 START_ADDR
 10091  1DE4  0000028B           	ddw	__ccov264_end_blk1	; block 1 END_ADDR
 10092  1DE8  00000281           	ddw	_ms_200_work	; block 0 START_ADDR
 10093  1DEC  00000285           	ddw	__ccov263_end_blk0	; block 0 END_ADDR
 10094                           
 10095                           ; Function: ms_200_work, coverage: 2,0
 10096  1DF0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10097  1DF4  00000026           	ddw	__ccovbit2_133/(0+8)	; CC_ADDR
 10098  1DF8  00000001           	ddw	1	; NUM_POINTS
 10099  1DFC  00000001           	ddw	__ccovbit2_133& (0+7)	; OFFSET
 10100  1E00  00000000           	ddw	0	; Reserved
 10101  1E04  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10102  1E08  00000002           	ddw	2	; NUM_RANGES
 10103  1E0C  0000028B           	ddw	__ccov265_start_blk2	; block 2 START_ADDR
 10104  1E10  00000290           	ddw	__ccov265_end_blk2	; block 2 END_ADDR
 10105  1E14  00000281           	ddw	_ms_200_work	; block 0 START_ADDR
 10106  1E18  00000285           	ddw	__ccov263_end_blk0	; block 0 END_ADDR
 10107                           
 10108                           ; Function: ms_200_work, coverage: 4,1,0
 10109  1E1C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10110  1E20  00000026           	ddw	__ccovbit4_134/(0+8)	; CC_ADDR
 10111  1E24  00000001           	ddw	1	; NUM_POINTS
 10112  1E28  00000000           	ddw	__ccovbit4_134& (0+7)	; OFFSET
 10113  1E2C  00000000           	ddw	0	; Reserved
 10114  1E30  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10115  1E34  00000003           	ddw	3	; NUM_RANGES
 10116  1E38  00000290           	ddw	__ccov266_start_blk4	; block 4 START_ADDR
 10117  1E3C  00000296           	ddw	__ccov266_end_blk4	; block 4 END_ADDR
 10118  1E40  00000285           	ddw	__ccov264_start_blk1	; block 1 START_ADDR
 10119  1E44  0000028B           	ddw	__ccov264_end_blk1	; block 1 END_ADDR
 10120  1E48  00000281           	ddw	_ms_200_work	; block 0 START_ADDR
 10121  1E4C  00000285           	ddw	__ccov263_end_blk0	; block 0 END_ADDR
 10122                           
 10123                           ; Function: ms_200_work, coverage: 5,4,1,0
 10124  1E50  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10125  1E54  00000025           	ddw	__ccovbit5_135/(0+8)	; CC_ADDR
 10126  1E58  00000001           	ddw	1	; NUM_POINTS
 10127  1E5C  00000007           	ddw	__ccovbit5_135& (0+7)	; OFFSET
 10128  1E60  00000000           	ddw	0	; Reserved
 10129  1E64  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10130  1E68  00000004           	ddw	4	; NUM_RANGES
 10131  1E6C  00000296           	ddw	__ccov267_start_blk5	; block 5 START_ADDR
 10132  1E70  0000029B           	ddw	__ccov267_end_blk5	; block 5 END_ADDR
 10133  1E74  00000290           	ddw	__ccov266_start_blk4	; block 4 START_ADDR
 10134  1E78  00000296           	ddw	__ccov266_end_blk4	; block 4 END_ADDR
 10135  1E7C  00000285           	ddw	__ccov264_start_blk1	; block 1 START_ADDR
 10136  1E80  0000028B           	ddw	__ccov264_end_blk1	; block 1 END_ADDR
 10137  1E84  00000281           	ddw	_ms_200_work	; block 0 START_ADDR
 10138  1E88  00000285           	ddw	__ccov263_end_blk0	; block 0 END_ADDR
 10139                           
 10140                           ; Function: ms_200_work, coverage: 8,0
 10141  1E8C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10142  1E90  00000025           	ddw	__ccovbit8_136/(0+8)	; CC_ADDR
 10143  1E94  00000001           	ddw	1	; NUM_POINTS
 10144  1E98  00000006           	ddw	__ccovbit8_136& (0+7)	; OFFSET
 10145  1E9C  00000000           	ddw	0	; Reserved
 10146  1EA0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10147  1EA4  00000002           	ddw	2	; NUM_RANGES
 10148  1EA8  0000029B           	ddw	__ccov268_start_blk8	; block 8 START_ADDR
 10149  1EAC  000002A1           	ddw	__ccov268_end_blk8	; block 8 END_ADDR
 10150  1EB0  00000281           	ddw	_ms_200_work	; block 0 START_ADDR
 10151  1EB4  00000285           	ddw	__ccov263_end_blk0	; block 0 END_ADDR
 10152                           
 10153                           ; Function: ms_200_work, coverage: 10,9,8,0
 10154  1EB8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10155  1EBC  00000025           	ddw	__ccovbit10_137/(0+8)	; CC_ADDR
 10156  1EC0  00000001           	ddw	1	; NUM_POINTS
 10157  1EC4  00000005           	ddw	__ccovbit10_137& (0+7)	; OFFSET
 10158  1EC8  00000000           	ddw	0	; Reserved
 10159  1ECC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10160  1ED0  00000004           	ddw	4	; NUM_RANGES
 10161  1ED4  000002A6           	ddw	__ccov270_start_blk10	; block 10 START_ADDR
 10162  1ED8  000002AD           	ddw	__ccov270_end_blk10	; block 10 END_ADDR
 10163  1EDC  000002A1           	ddw	__ccov269_start_blk9	; block 9 START_ADDR
 10164  1EE0  000002A6           	ddw	__ccov269_end_blk9	; block 9 END_ADDR
 10165  1EE4  0000029B           	ddw	__ccov268_start_blk8	; block 8 START_ADDR
 10166  1EE8  000002A1           	ddw	__ccov268_end_blk8	; block 8 END_ADDR
 10167  1EEC  00000281           	ddw	_ms_200_work	; block 0 START_ADDR
 10168  1EF0  00000285           	ddw	__ccov263_end_blk0	; block 0 END_ADDR
 10169                           
 10170                           ; Function: ms_200_work, coverage: 14,13,9,8,0
 10171  1EF4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10172  1EF8  00000025           	ddw	__ccovbit14_138/(0+8)	; CC_ADDR
 10173  1EFC  00000001           	ddw	1	; NUM_POINTS
 10174  1F00  00000004           	ddw	__ccovbit14_138& (0+7)	; OFFSET
 10175  1F04  00000000           	ddw	0	; Reserved
 10176  1F08  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10177  1F0C  00000005           	ddw	5	; NUM_RANGES
 10178  1F10  000002B2           	ddw	__ccov272_start_blk14	; block 14 START_ADDR
 10179  1F14  000002B6           	ddw	__ccov272_end_blk14	; block 14 END_ADDR
 10180  1F18  000002AD           	ddw	__ccov271_start_blk13	; block 13 START_ADDR
 10181  1F1C  000002B2           	ddw	__ccov271_end_blk13	; block 13 END_ADDR
 10182  1F20  000002A1           	ddw	__ccov269_start_blk9	; block 9 START_ADDR
 10183  1F24  000002A6           	ddw	__ccov269_end_blk9	; block 9 END_ADDR
 10184  1F28  0000029B           	ddw	__ccov268_start_blk8	; block 8 START_ADDR
 10185  1F2C  000002A1           	ddw	__ccov268_end_blk8	; block 8 END_ADDR
 10186  1F30  00000281           	ddw	_ms_200_work	; block 0 START_ADDR
 10187  1F34  00000285           	ddw	__ccov263_end_blk0	; block 0 END_ADDR
 10188                           
 10189                           ; Function: ms_200_work, coverage: 16,13,9,8,0
 10190  1F38  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10191  1F3C  00000025           	ddw	__ccovbit16_139/(0+8)	; CC_ADDR
 10192  1F40  00000001           	ddw	1	; NUM_POINTS
 10193  1F44  00000003           	ddw	__ccovbit16_139& (0+7)	; OFFSET
 10194  1F48  00000000           	ddw	0	; Reserved
 10195  1F4C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10196  1F50  00000005           	ddw	5	; NUM_RANGES
 10197  1F54  000002B6           	ddw	__ccov273_start_blk16	; block 16 START_ADDR
 10198  1F58  000002BD           	ddw	__ccov273_end_blk16	; block 16 END_ADDR
 10199  1F5C  000002AD           	ddw	__ccov271_start_blk13	; block 13 START_ADDR
 10200  1F60  000002B2           	ddw	__ccov271_end_blk13	; block 13 END_ADDR
 10201  1F64  000002A1           	ddw	__ccov269_start_blk9	; block 9 START_ADDR
 10202  1F68  000002A6           	ddw	__ccov269_end_blk9	; block 9 END_ADDR
 10203  1F6C  0000029B           	ddw	__ccov268_start_blk8	; block 8 START_ADDR
 10204  1F70  000002A1           	ddw	__ccov268_end_blk8	; block 8 END_ADDR
 10205  1F74  00000281           	ddw	_ms_200_work	; block 0 START_ADDR
 10206  1F78  00000285           	ddw	__ccov263_end_blk0	; block 0 END_ADDR
 10207                           
 10208                           ; Function: ms_200_work, coverage: 17,16,13,9,8,0
 10209  1F7C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10210  1F80  00000025           	ddw	__ccovbit17_140/(0+8)	; CC_ADDR
 10211  1F84  00000001           	ddw	1	; NUM_POINTS
 10212  1F88  00000002           	ddw	__ccovbit17_140& (0+7)	; OFFSET
 10213  1F8C  00000000           	ddw	0	; Reserved
 10214  1F90  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10215  1F94  00000006           	ddw	6	; NUM_RANGES
 10216  1F98  000002BD           	ddw	__ccov274_start_blk17	; block 17 START_ADDR
 10217  1F9C  000002C1           	ddw	__ccov274_end_blk17	; block 17 END_ADDR
 10218  1FA0  000002B6           	ddw	__ccov273_start_blk16	; block 16 START_ADDR
 10219  1FA4  000002BD           	ddw	__ccov273_end_blk16	; block 16 END_ADDR
 10220  1FA8  000002AD           	ddw	__ccov271_start_blk13	; block 13 START_ADDR
 10221  1FAC  000002B2           	ddw	__ccov271_end_blk13	; block 13 END_ADDR
 10222  1FB0  000002A1           	ddw	__ccov269_start_blk9	; block 9 START_ADDR
 10223  1FB4  000002A6           	ddw	__ccov269_end_blk9	; block 9 END_ADDR
 10224  1FB8  0000029B           	ddw	__ccov268_start_blk8	; block 8 START_ADDR
 10225  1FBC  000002A1           	ddw	__ccov268_end_blk8	; block 8 END_ADDR
 10226  1FC0  00000281           	ddw	_ms_200_work	; block 0 START_ADDR
 10227  1FC4  00000285           	ddw	__ccov263_end_blk0	; block 0 END_ADDR
 10228                           
 10229                           ; Function: ms_200_work, coverage: 22,0
 10230  1FC8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10231  1FCC  00000025           	ddw	__ccovbit22_141/(0+8)	; CC_ADDR
 10232  1FD0  00000001           	ddw	1	; NUM_POINTS
 10233  1FD4  00000001           	ddw	__ccovbit22_141& (0+7)	; OFFSET
 10234  1FD8  00000000           	ddw	0	; Reserved
 10235  1FDC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10236  1FE0  00000002           	ddw	2	; NUM_RANGES
 10237  1FE4  000002C1           	ddw	__ccov275_start_blk22	; block 22 START_ADDR
 10238  1FE8  000002C4           	ddw	__end_of_ms_200_work	; block 22 END_ADDR
 10239  1FEC  00000281           	ddw	_ms_200_work	; block 0 START_ADDR
 10240  1FF0  00000285           	ddw	__ccov263_end_blk0	; block 0 END_ADDR
 10241                           
 10242                           ; Function: ms_100_work, coverage: 1,0
 10243  1FF4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10244  1FF8  00000025           	ddw	__ccovbit1_142/(0+8)	; CC_ADDR
 10245  1FFC  00000001           	ddw	1	; NUM_POINTS
 10246  2000  00000000           	ddw	__ccovbit1_142& (0+7)	; OFFSET
 10247  2004  00000000           	ddw	0	; Reserved
 10248  2008  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10249  200C  00000002           	ddw	2	; NUM_RANGES
 10250  2010  0000064F           	ddw	__ccov277_start_blk1	; block 1 START_ADDR
 10251  2014  00000655           	ddw	__ccov277_end_blk1	; block 1 END_ADDR
 10252  2018  0000064B           	ddw	_ms_100_work	; block 0 START_ADDR
 10253  201C  0000064F           	ddw	__ccov276_end_blk0	; block 0 END_ADDR
 10254                           
 10255                           ; Function: ms_100_work, coverage: 2,0
 10256  2020  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10257  2024  00000024           	ddw	__ccovbit2_143/(0+8)	; CC_ADDR
 10258  2028  00000001           	ddw	1	; NUM_POINTS
 10259  202C  00000007           	ddw	__ccovbit2_143& (0+7)	; OFFSET
 10260  2030  00000000           	ddw	0	; Reserved
 10261  2034  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10262  2038  00000002           	ddw	2	; NUM_RANGES
 10263  203C  00000655           	ddw	__ccov278_start_blk2	; block 2 START_ADDR
 10264  2040  00000658           	ddw	__ccov278_end_blk2	; block 2 END_ADDR
 10265  2044  0000064B           	ddw	_ms_100_work	; block 0 START_ADDR
 10266  2048  0000064F           	ddw	__ccov276_end_blk0	; block 0 END_ADDR
 10267                           
 10268                           ; Function: ms_100_work, coverage: 4,0
 10269  204C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10270  2050  00000024           	ddw	__ccovbit4_144/(0+8)	; CC_ADDR
 10271  2054  00000001           	ddw	1	; NUM_POINTS
 10272  2058  00000006           	ddw	__ccovbit4_144& (0+7)	; OFFSET
 10273  205C  00000000           	ddw	0	; Reserved
 10274  2060  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10275  2064  00000002           	ddw	2	; NUM_RANGES
 10276  2068  00000658           	ddw	__ccov279_start_blk4	; block 4 START_ADDR
 10277  206C  0000065A           	ddw	__end_of_ms_100_work	; block 4 END_ADDR
 10278  2070  0000064B           	ddw	_ms_100_work	; block 0 START_ADDR
 10279  2074  0000064F           	ddw	__ccov276_end_blk0	; block 0 END_ADDR
 10280                           
 10281                           ; Function: ms_tick, coverage: 3,2,1,0
 10282  2078  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10283  207C  00000024           	ddw	__ccovbit3_145/(0+8)	; CC_ADDR
 10284  2080  00000001           	ddw	1	; NUM_POINTS
 10285  2084  00000005           	ddw	__ccovbit3_145& (0+7)	; OFFSET
 10286  2088  00000000           	ddw	0	; Reserved
 10287  208C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10288  2090  00000004           	ddw	4	; NUM_RANGES
 10289  2094  000002D3           	ddw	__ccov283_start_blk3	; block 3 START_ADDR
 10290  2098  000002DA           	ddw	__ccov283_end_blk3	; block 3 END_ADDR
 10291  209C  000002CF           	ddw	__ccov282_start_blk2	; block 2 START_ADDR
 10292  20A0  000002D3           	ddw	__ccov282_end_blk2	; block 2 END_ADDR
 10293  20A4  000002C9           	ddw	__ccov281_start_blk1	; block 1 START_ADDR
 10294  20A8  000002CF           	ddw	__ccov281_end_blk1	; block 1 END_ADDR
 10295  20AC  000002C4           	ddw	_ms_tick	; block 0 START_ADDR
 10296  20B0  000002C9           	ddw	__ccov280_end_blk0	; block 0 END_ADDR
 10297                           
 10298                           ; Function: ms_tick, coverage: 4,3,2,1,0
 10299  20B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10300  20B8  00000024           	ddw	__ccovbit4_146/(0+8)	; CC_ADDR
 10301  20BC  00000001           	ddw	1	; NUM_POINTS
 10302  20C0  00000004           	ddw	__ccovbit4_146& (0+7)	; OFFSET
 10303  20C4  00000000           	ddw	0	; Reserved
 10304  20C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10305  20CC  00000005           	ddw	5	; NUM_RANGES
 10306  20D0  000002DA           	ddw	__ccov284_start_blk4	; block 4 START_ADDR
 10307  20D4  000002DE           	ddw	__ccov284_end_blk4	; block 4 END_ADDR
 10308  20D8  000002D3           	ddw	__ccov283_start_blk3	; block 3 START_ADDR
 10309  20DC  000002DA           	ddw	__ccov283_end_blk3	; block 3 END_ADDR
 10310  20E0  000002CF           	ddw	__ccov282_start_blk2	; block 2 START_ADDR
 10311  20E4  000002D3           	ddw	__ccov282_end_blk2	; block 2 END_ADDR
 10312  20E8  000002C9           	ddw	__ccov281_start_blk1	; block 1 START_ADDR
 10313  20EC  000002CF           	ddw	__ccov281_end_blk1	; block 1 END_ADDR
 10314  20F0  000002C4           	ddw	_ms_tick	; block 0 START_ADDR
 10315  20F4  000002C9           	ddw	__ccov280_end_blk0	; block 0 END_ADDR
 10316                           
 10317                           ; Function: ms_tick, coverage: 12,11,10,9,8,7,1,0
 10318  20F8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10319  20FC  00000024           	ddw	__ccovbit12_147/(0+8)	; CC_ADDR
 10320  2100  00000001           	ddw	1	; NUM_POINTS
 10321  2104  00000003           	ddw	__ccovbit12_147& (0+7)	; OFFSET
 10322  2108  00000000           	ddw	0	; Reserved
 10323  210C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10324  2110  00000008           	ddw	8	; NUM_RANGES
 10325  2114  000002F3           	ddw	__ccov290_start_blk12	; block 12 START_ADDR
 10326  2118  000002F6           	ddw	__ccov290_end_blk12	; block 12 END_ADDR
 10327  211C  000002EB           	ddw	__ccov289_start_blk11	; block 11 START_ADDR
 10328  2120  000002F3           	ddw	__ccov289_end_blk11	; block 11 END_ADDR
 10329  2124  000002E8           	ddw	__ccov288_start_blk10	; block 10 START_ADDR
 10330  2128  000002EB           	ddw	__ccov288_end_blk10	; block 10 END_ADDR
 10331  212C  000002E0           	ddw	__ccov287_start_blk9	; block 9 START_ADDR
 10332  2130  000002E8           	ddw	__ccov287_end_blk9	; block 9 END_ADDR
 10333  2134  000002DF           	ddw	__ccov286_start_blk8	; block 8 START_ADDR
 10334  2138  000002E0           	ddw	__ccov286_end_blk8	; block 8 END_ADDR
 10335  213C  000002DE           	ddw	__ccov285_start_blk7	; block 7 START_ADDR
 10336  2140  000002DF           	ddw	__ccov285_end_blk7	; block 7 END_ADDR
 10337  2144  000002C9           	ddw	__ccov281_start_blk1	; block 1 START_ADDR
 10338  2148  000002CF           	ddw	__ccov281_end_blk1	; block 1 END_ADDR
 10339  214C  000002C4           	ddw	_ms_tick	; block 0 START_ADDR
 10340  2150  000002C9           	ddw	__ccov280_end_blk0	; block 0 END_ADDR
 10341                           
 10342                           ; Function: ms_tick, coverage: 18,17,16,9,8,7,1,0
 10343  2154  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10344  2158  00000024           	ddw	__ccovbit18_148/(0+8)	; CC_ADDR
 10345  215C  00000001           	ddw	1	; NUM_POINTS
 10346  2160  00000002           	ddw	__ccovbit18_148& (0+7)	; OFFSET
 10347  2164  00000000           	ddw	0	; Reserved
 10348  2168  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10349  216C  00000008           	ddw	8	; NUM_RANGES
 10350  2170  00000300           	ddw	__ccov293_start_blk18	; block 18 START_ADDR
 10351  2174  00000304           	ddw	__ccov293_end_blk18	; block 18 END_ADDR
 10352  2178  000002FD           	ddw	__ccov292_start_blk17	; block 17 START_ADDR
 10353  217C  00000300           	ddw	__ccov292_end_blk17	; block 17 END_ADDR
 10354  2180  000002F6           	ddw	__ccov291_start_blk16	; block 16 START_ADDR
 10355  2184  000002FD           	ddw	__ccov291_end_blk16	; block 16 END_ADDR
 10356  2188  000002E0           	ddw	__ccov287_start_blk9	; block 9 START_ADDR
 10357  218C  000002E8           	ddw	__ccov287_end_blk9	; block 9 END_ADDR
 10358  2190  000002DF           	ddw	__ccov286_start_blk8	; block 8 START_ADDR
 10359  2194  000002E0           	ddw	__ccov286_end_blk8	; block 8 END_ADDR
 10360  2198  000002DE           	ddw	__ccov285_start_blk7	; block 7 START_ADDR
 10361  219C  000002DF           	ddw	__ccov285_end_blk7	; block 7 END_ADDR
 10362  21A0  000002C9           	ddw	__ccov281_start_blk1	; block 1 START_ADDR
 10363  21A4  000002CF           	ddw	__ccov281_end_blk1	; block 1 END_ADDR
 10364  21A8  000002C4           	ddw	_ms_tick	; block 0 START_ADDR
 10365  21AC  000002C9           	ddw	__ccov280_end_blk0	; block 0 END_ADDR
 10366                           
 10367                           ; Function: ms_tick, coverage: 20,16,9,8,7,1,0
 10368  21B0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10369  21B4  00000024           	ddw	__ccovbit20_149/(0+8)	; CC_ADDR
 10370  21B8  00000001           	ddw	1	; NUM_POINTS
 10371  21BC  00000001           	ddw	__ccovbit20_149& (0+7)	; OFFSET
 10372  21C0  00000000           	ddw	0	; Reserved
 10373  21C4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10374  21C8  00000007           	ddw	7	; NUM_RANGES
 10375  21CC  00000304           	ddw	__ccov294_start_blk20	; block 20 START_ADDR
 10376  21D0  00000306           	ddw	__end_of_ms_tick	; block 20 END_ADDR
 10377  21D4  000002F6           	ddw	__ccov291_start_blk16	; block 16 START_ADDR
 10378  21D8  000002FD           	ddw	__ccov291_end_blk16	; block 16 END_ADDR
 10379  21DC  000002E0           	ddw	__ccov287_start_blk9	; block 9 START_ADDR
 10380  21E0  000002E8           	ddw	__ccov287_end_blk9	; block 9 END_ADDR
 10381  21E4  000002DF           	ddw	__ccov286_start_blk8	; block 8 START_ADDR
 10382  21E8  000002E0           	ddw	__ccov286_end_blk8	; block 8 END_ADDR
 10383  21EC  000002DE           	ddw	__ccov285_start_blk7	; block 7 START_ADDR
 10384  21F0  000002DF           	ddw	__ccov285_end_blk7	; block 7 END_ADDR
 10385  21F4  000002C9           	ddw	__ccov281_start_blk1	; block 1 START_ADDR
 10386  21F8  000002CF           	ddw	__ccov281_end_blk1	; block 1 END_ADDR
 10387  21FC  000002C4           	ddw	_ms_tick	; block 0 START_ADDR
 10388  2200  000002C9           	ddw	__ccov280_end_blk0	; block 0 END_ADDR
 10389                           
 10390                           ; Function: eeprom_set, coverage: 2,1,0
 10391  2204  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10392  2208  00000024           	ddw	__ccovbit2_150/(0+8)	; CC_ADDR
 10393  220C  00000001           	ddw	1	; NUM_POINTS
 10394  2210  00000000           	ddw	__ccovbit2_150& (0+7)	; OFFSET
 10395  2214  00000000           	ddw	0	; Reserved
 10396  2218  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10397  221C  00000003           	ddw	3	; NUM_RANGES
 10398  2220  0000056B           	ddw	__ccov297_start_blk2	; block 2 START_ADDR
 10399  2224  00000572           	ddw	__ccov297_end_blk2	; block 2 END_ADDR
 10400  2228  00000566           	ddw	__ccov296_start_blk1	; block 1 START_ADDR
 10401  222C  0000056B           	ddw	__ccov296_end_blk1	; block 1 END_ADDR
 10402  2230  0000055E           	ddw	_eeprom_set	; block 0 START_ADDR
 10403  2234  00000566           	ddw	__ccov295_end_blk0	; block 0 END_ADDR
 10404                           
 10405                           ; Function: eeprom_set, coverage: 4,1,0
 10406  2238  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10407  223C  00000023           	ddw	__ccovbit4_151/(0+8)	; CC_ADDR
 10408  2240  00000001           	ddw	1	; NUM_POINTS
 10409  2244  00000007           	ddw	__ccovbit4_151& (0+7)	; OFFSET
 10410  2248  00000000           	ddw	0	; Reserved
 10411  224C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10412  2250  00000003           	ddw	3	; NUM_RANGES
 10413  2254  00000572           	ddw	__ccov298_start_blk4	; block 4 START_ADDR
 10414  2258  00000575           	ddw	__end_of_eeprom_set	; block 4 END_ADDR
 10415  225C  00000566           	ddw	__ccov296_start_blk1	; block 1 START_ADDR
 10416  2260  0000056B           	ddw	__ccov296_end_blk1	; block 1 END_ADDR
 10417  2264  0000055E           	ddw	_eeprom_set	; block 0 START_ADDR
 10418  2268  00000566           	ddw	__ccov295_end_blk0	; block 0 END_ADDR
 10419                           
 10420                           ; Function: hardware_work, coverage: 1,0
 10421  226C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10422  2270  00000023           	ddw	__ccovbit1_152/(0+8)	; CC_ADDR
 10423  2274  00000001           	ddw	1	; NUM_POINTS
 10424  2278  00000006           	ddw	__ccovbit1_152& (0+7)	; OFFSET
 10425  227C  00000000           	ddw	0	; Reserved
 10426  2280  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10427  2284  00000002           	ddw	2	; NUM_RANGES
 10428  2288  00000372           	ddw	__ccov300_start_blk1	; block 1 START_ADDR
 10429  228C  00000375           	ddw	__ccov300_end_blk1	; block 1 END_ADDR
 10430  2290  00000346           	ddw	_hardware_work	; block 0 START_ADDR
 10431  2294  00000372           	ddw	__ccov299_end_blk0	; block 0 END_ADDR
 10432                           
 10433                           ; Function: hardware_work, coverage: 4,3,2,0
 10434  2298  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10435  229C  00000023           	ddw	__ccovbit4_153/(0+8)	; CC_ADDR
 10436  22A0  00000001           	ddw	1	; NUM_POINTS
 10437  22A4  00000005           	ddw	__ccovbit4_153& (0+7)	; OFFSET
 10438  22A8  00000000           	ddw	0	; Reserved
 10439  22AC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10440  22B0  00000004           	ddw	4	; NUM_RANGES
 10441  22B4  0000037A           	ddw	__ccov303_start_blk4	; block 4 START_ADDR
 10442  22B8  0000037E           	ddw	__ccov303_end_blk4	; block 4 END_ADDR
 10443  22BC  00000379           	ddw	__ccov302_start_blk3	; block 3 START_ADDR
 10444  22C0  0000037A           	ddw	__ccov302_end_blk3	; block 3 END_ADDR
 10445  22C4  00000375           	ddw	__ccov301_start_blk2	; block 2 START_ADDR
 10446  22C8  00000379           	ddw	__ccov301_end_blk2	; block 2 END_ADDR
 10447  22CC  00000346           	ddw	_hardware_work	; block 0 START_ADDR
 10448  22D0  00000372           	ddw	__ccov299_end_blk0	; block 0 END_ADDR
 10449                           
 10450                           ; Function: hardware_work, coverage: 7,2,0
 10451  22D4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10452  22D8  00000023           	ddw	__ccovbit7_154/(0+8)	; CC_ADDR
 10453  22DC  00000001           	ddw	1	; NUM_POINTS
 10454  22E0  00000004           	ddw	__ccovbit7_154& (0+7)	; OFFSET
 10455  22E4  00000000           	ddw	0	; Reserved
 10456  22E8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10457  22EC  00000003           	ddw	3	; NUM_RANGES
 10458  22F0  0000037E           	ddw	__ccov304_start_blk7	; block 7 START_ADDR
 10459  22F4  00000381           	ddw	__end_of_hardware_work	; block 7 END_ADDR
 10460  22F8  00000375           	ddw	__ccov301_start_blk2	; block 2 START_ADDR
 10461  22FC  00000379           	ddw	__ccov301_end_blk2	; block 2 END_ADDR
 10462  2300  00000346           	ddw	_hardware_work	; block 0 START_ADDR
 10463  2304  00000372           	ddw	__ccov299_end_blk0	; block 0 END_ADDR
 10464                           
 10465                           ; Function: zummer_switch, coverage: 3,1,0
 10466  2308  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10467  230C  00000023           	ddw	__ccovbit3_155/(0+8)	; CC_ADDR
 10468  2310  00000001           	ddw	1	; NUM_POINTS
 10469  2314  00000003           	ddw	__ccovbit3_155& (0+7)	; OFFSET
 10470  2318  00000000           	ddw	0	; Reserved
 10471  231C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10472  2320  00000002           	ddw	2	; NUM_RANGES
 10473  2324  00000666           	ddw	__ccov307_start_blk3	; block 3 START_ADDR
 10474  2328  00000669           	ddw	__end_of_zummer_switch	; block 3 END_ADDR
 10475  232C  0000065A           	ddw	_zummer_switch	; block 1 START_ADDR
 10476  2330  00000666           	ddw	__ccov306_end_blk1	; block 1 END_ADDR
 10477                           
 10478                           ; Function: get_wsp, coverage: 14,13,11,8,6,5,3,1,0
 10479  2334  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10480  2338  00000023           	ddw	__ccovbit14_156/(0+8)	; CC_ADDR
 10481  233C  00000001           	ddw	1	; NUM_POINTS
 10482  2340  00000002           	ddw	__ccovbit14_156& (0+7)	; OFFSET
 10483  2344  00000000           	ddw	0	; Reserved
 10484  2348  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10485  234C  00000009           	ddw	9	; NUM_RANGES
 10486  2350  000000F3           	ddw	__ccov316_start_blk14	; block 14 START_ADDR
 10487  2354  000000F9           	ddw	__ccov316_end_blk14	; block 14 END_ADDR
 10488  2358  000000E9           	ddw	__ccov315_start_blk13	; block 13 START_ADDR
 10489  235C  000000F3           	ddw	__ccov315_end_blk13	; block 13 END_ADDR
 10490  2360  000000E7           	ddw	__ccov314_start_blk11	; block 11 START_ADDR
 10491  2364  000000E9           	ddw	__ccov314_end_blk11	; block 11 END_ADDR
 10492  2368  000000E5           	ddw	__ccov313_start_blk8	; block 8 START_ADDR
 10493  236C  000000E7           	ddw	__ccov313_end_blk8	; block 8 END_ADDR
 10494  2370  000000DA           	ddw	__ccov312_start_blk6	; block 6 START_ADDR
 10495  2374  000000E5           	ddw	__ccov312_end_blk6	; block 6 END_ADDR
 10496  2378  000000D2           	ddw	__ccov311_start_blk5	; block 5 START_ADDR
 10497  237C  000000DA           	ddw	__ccov311_end_blk5	; block 5 END_ADDR
 10498  2380  000000D0           	ddw	__ccov310_start_blk3	; block 3 START_ADDR
 10499  2384  000000D2           	ddw	__ccov310_end_blk3	; block 3 END_ADDR
 10500  2388  000000CE           	ddw	__ccov309_start_blk1	; block 1 START_ADDR
 10501  238C  000000D0           	ddw	__ccov309_end_blk1	; block 1 END_ADDR
 10502  2390  000000CA           	ddw	_get_wsp	; block 0 START_ADDR
 10503  2394  000000CE           	ddw	__ccov308_end_blk0	; block 0 END_ADDR
 10504                           
 10505                           ; Function: get_wsp, coverage: 16,13,11,8,6,5,3,1,0
 10506  2398  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10507  239C  00000023           	ddw	__ccovbit16_157/(0+8)	; CC_ADDR
 10508  23A0  00000001           	ddw	1	; NUM_POINTS
 10509  23A4  00000001           	ddw	__ccovbit16_157& (0+7)	; OFFSET
 10510  23A8  00000000           	ddw	0	; Reserved
 10511  23AC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10512  23B0  00000009           	ddw	9	; NUM_RANGES
 10513  23B4  000000F9           	ddw	__ccov317_start_blk16	; block 16 START_ADDR
 10514  23B8  00000103           	ddw	__ccov317_end_blk16	; block 16 END_ADDR
 10515  23BC  000000E9           	ddw	__ccov315_start_blk13	; block 13 START_ADDR
 10516  23C0  000000F3           	ddw	__ccov315_end_blk13	; block 13 END_ADDR
 10517  23C4  000000E7           	ddw	__ccov314_start_blk11	; block 11 START_ADDR
 10518  23C8  000000E9           	ddw	__ccov314_end_blk11	; block 11 END_ADDR
 10519  23CC  000000E5           	ddw	__ccov313_start_blk8	; block 8 START_ADDR
 10520  23D0  000000E7           	ddw	__ccov313_end_blk8	; block 8 END_ADDR
 10521  23D4  000000DA           	ddw	__ccov312_start_blk6	; block 6 START_ADDR
 10522  23D8  000000E5           	ddw	__ccov312_end_blk6	; block 6 END_ADDR
 10523  23DC  000000D2           	ddw	__ccov311_start_blk5	; block 5 START_ADDR
 10524  23E0  000000DA           	ddw	__ccov311_end_blk5	; block 5 END_ADDR
 10525  23E4  000000D0           	ddw	__ccov310_start_blk3	; block 3 START_ADDR
 10526  23E8  000000D2           	ddw	__ccov310_end_blk3	; block 3 END_ADDR
 10527  23EC  000000CE           	ddw	__ccov309_start_blk1	; block 1 START_ADDR
 10528  23F0  000000D0           	ddw	__ccov309_end_blk1	; block 1 END_ADDR
 10529  23F4  000000CA           	ddw	_get_wsp	; block 0 START_ADDR
 10530  23F8  000000CE           	ddw	__ccov308_end_blk0	; block 0 END_ADDR
 10531                           
 10532                           ; Function: get_wsp, coverage: 17,16,13,11,8,6,5,3,1,0
 10533  23FC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10534  2400  00000023           	ddw	__ccovbit17_158/(0+8)	; CC_ADDR
 10535  2404  00000001           	ddw	1	; NUM_POINTS
 10536  2408  00000000           	ddw	__ccovbit17_158& (0+7)	; OFFSET
 10537  240C  00000000           	ddw	0	; Reserved
 10538  2410  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10539  2414  0000000A           	ddw	10	; NUM_RANGES
 10540  2418  00000103           	ddw	__ccov318_start_blk17	; block 17 START_ADDR
 10541  241C  00000108           	ddw	__ccov318_end_blk17	; block 17 END_ADDR
 10542  2420  000000F9           	ddw	__ccov317_start_blk16	; block 16 START_ADDR
 10543  2424  00000103           	ddw	__ccov317_end_blk16	; block 16 END_ADDR
 10544  2428  000000E9           	ddw	__ccov315_start_blk13	; block 13 START_ADDR
 10545  242C  000000F3           	ddw	__ccov315_end_blk13	; block 13 END_ADDR
 10546  2430  000000E7           	ddw	__ccov314_start_blk11	; block 11 START_ADDR
 10547  2434  000000E9           	ddw	__ccov314_end_blk11	; block 11 END_ADDR
 10548  2438  000000E5           	ddw	__ccov313_start_blk8	; block 8 START_ADDR
 10549  243C  000000E7           	ddw	__ccov313_end_blk8	; block 8 END_ADDR
 10550  2440  000000DA           	ddw	__ccov312_start_blk6	; block 6 START_ADDR
 10551  2444  000000E5           	ddw	__ccov312_end_blk6	; block 6 END_ADDR
 10552  2448  000000D2           	ddw	__ccov311_start_blk5	; block 5 START_ADDR
 10553  244C  000000DA           	ddw	__ccov311_end_blk5	; block 5 END_ADDR
 10554  2450  000000D0           	ddw	__ccov310_start_blk3	; block 3 START_ADDR
 10555  2454  000000D2           	ddw	__ccov310_end_blk3	; block 3 END_ADDR
 10556  2458  000000CE           	ddw	__ccov309_start_blk1	; block 1 START_ADDR
 10557  245C  000000D0           	ddw	__ccov309_end_blk1	; block 1 END_ADDR
 10558  2460  000000CA           	ddw	_get_wsp	; block 0 START_ADDR
 10559  2464  000000CE           	ddw	__ccov308_end_blk0	; block 0 END_ADDR
 10560                           
 10561                           ; Function: get_wsp, coverage: 22,21,20,13,11,8,6,5,3,1,0
 10562  2468  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10563  246C  00000022           	ddw	__ccovbit22_159/(0+8)	; CC_ADDR
 10564  2470  00000001           	ddw	1	; NUM_POINTS
 10565  2474  00000007           	ddw	__ccovbit22_159& (0+7)	; OFFSET
 10566  2478  00000000           	ddw	0	; Reserved
 10567  247C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10568  2480  0000000B           	ddw	11	; NUM_RANGES
 10569  2484  00000112           	ddw	__ccov321_start_blk22	; block 22 START_ADDR
 10570  2488  00000118           	ddw	__ccov321_end_blk22	; block 22 END_ADDR
 10571  248C  0000010F           	ddw	__ccov320_start_blk21	; block 21 START_ADDR
 10572  2490  00000112           	ddw	__ccov320_end_blk21	; block 21 END_ADDR
 10573  2494  00000108           	ddw	__ccov319_start_blk20	; block 20 START_ADDR
 10574  2498  0000010F           	ddw	__ccov319_end_blk20	; block 20 END_ADDR
 10575  249C  000000E9           	ddw	__ccov315_start_blk13	; block 13 START_ADDR
 10576  24A0  000000F3           	ddw	__ccov315_end_blk13	; block 13 END_ADDR
 10577  24A4  000000E7           	ddw	__ccov314_start_blk11	; block 11 START_ADDR
 10578  24A8  000000E9           	ddw	__ccov314_end_blk11	; block 11 END_ADDR
 10579  24AC  000000E5           	ddw	__ccov313_start_blk8	; block 8 START_ADDR
 10580  24B0  000000E7           	ddw	__ccov313_end_blk8	; block 8 END_ADDR
 10581  24B4  000000DA           	ddw	__ccov312_start_blk6	; block 6 START_ADDR
 10582  24B8  000000E5           	ddw	__ccov312_end_blk6	; block 6 END_ADDR
 10583  24BC  000000D2           	ddw	__ccov311_start_blk5	; block 5 START_ADDR
 10584  24C0  000000DA           	ddw	__ccov311_end_blk5	; block 5 END_ADDR
 10585  24C4  000000D0           	ddw	__ccov310_start_blk3	; block 3 START_ADDR
 10586  24C8  000000D2           	ddw	__ccov310_end_blk3	; block 3 END_ADDR
 10587  24CC  000000CE           	ddw	__ccov309_start_blk1	; block 1 START_ADDR
 10588  24D0  000000D0           	ddw	__ccov309_end_blk1	; block 1 END_ADDR
 10589  24D4  000000CA           	ddw	_get_wsp	; block 0 START_ADDR
 10590  24D8  000000CE           	ddw	__ccov308_end_blk0	; block 0 END_ADDR
 10591                           
 10592                           ; Function: get_wsp, coverage: 26,25,24,20,13,11,8,6,5,3,1,0
 10593  24DC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10594  24E0  00000022           	ddw	__ccovbit26_160/(0+8)	; CC_ADDR
 10595  24E4  00000001           	ddw	1	; NUM_POINTS
 10596  24E8  00000006           	ddw	__ccovbit26_160& (0+7)	; OFFSET
 10597  24EC  00000000           	ddw	0	; Reserved
 10598  24F0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10599  24F4  0000000C           	ddw	12	; NUM_RANGES
 10600  24F8  00000122           	ddw	__ccov324_start_blk26	; block 26 START_ADDR
 10601  24FC  00000128           	ddw	__ccov324_end_blk26	; block 26 END_ADDR
 10602  2500  0000011F           	ddw	__ccov323_start_blk25	; block 25 START_ADDR
 10603  2504  00000122           	ddw	__ccov323_end_blk25	; block 25 END_ADDR
 10604  2508  00000118           	ddw	__ccov322_start_blk24	; block 24 START_ADDR
 10605  250C  0000011F           	ddw	__ccov322_end_blk24	; block 24 END_ADDR
 10606  2510  00000108           	ddw	__ccov319_start_blk20	; block 20 START_ADDR
 10607  2514  0000010F           	ddw	__ccov319_end_blk20	; block 20 END_ADDR
 10608  2518  000000E9           	ddw	__ccov315_start_blk13	; block 13 START_ADDR
 10609  251C  000000F3           	ddw	__ccov315_end_blk13	; block 13 END_ADDR
 10610  2520  000000E7           	ddw	__ccov314_start_blk11	; block 11 START_ADDR
 10611  2524  000000E9           	ddw	__ccov314_end_blk11	; block 11 END_ADDR
 10612  2528  000000E5           	ddw	__ccov313_start_blk8	; block 8 START_ADDR
 10613  252C  000000E7           	ddw	__ccov313_end_blk8	; block 8 END_ADDR
 10614  2530  000000DA           	ddw	__ccov312_start_blk6	; block 6 START_ADDR
 10615  2534  000000E5           	ddw	__ccov312_end_blk6	; block 6 END_ADDR
 10616  2538  000000D2           	ddw	__ccov311_start_blk5	; block 5 START_ADDR
 10617  253C  000000DA           	ddw	__ccov311_end_blk5	; block 5 END_ADDR
 10618  2540  000000D0           	ddw	__ccov310_start_blk3	; block 3 START_ADDR
 10619  2544  000000D2           	ddw	__ccov310_end_blk3	; block 3 END_ADDR
 10620  2548  000000CE           	ddw	__ccov309_start_blk1	; block 1 START_ADDR
 10621  254C  000000D0           	ddw	__ccov309_end_blk1	; block 1 END_ADDR
 10622  2550  000000CA           	ddw	_get_wsp	; block 0 START_ADDR
 10623  2554  000000CE           	ddw	__ccov308_end_blk0	; block 0 END_ADDR
 10624                           
 10625                           ; Function: get_wsp, coverage: 28,24,20,13,11,8,6,5,3,1,0
 10626  2558  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10627  255C  00000022           	ddw	__ccovbit28_161/(0+8)	; CC_ADDR
 10628  2560  00000001           	ddw	1	; NUM_POINTS
 10629  2564  00000005           	ddw	__ccovbit28_161& (0+7)	; OFFSET
 10630  2568  00000000           	ddw	0	; Reserved
 10631  256C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10632  2570  0000000B           	ddw	11	; NUM_RANGES
 10633  2574  00000128           	ddw	__ccov325_start_blk28	; block 28 START_ADDR
 10634  2578  0000012A           	ddw	__ccov325_end_blk28	; block 28 END_ADDR
 10635  257C  00000118           	ddw	__ccov322_start_blk24	; block 24 START_ADDR
 10636  2580  0000011F           	ddw	__ccov322_end_blk24	; block 24 END_ADDR
 10637  2584  00000108           	ddw	__ccov319_start_blk20	; block 20 START_ADDR
 10638  2588  0000010F           	ddw	__ccov319_end_blk20	; block 20 END_ADDR
 10639  258C  000000E9           	ddw	__ccov315_start_blk13	; block 13 START_ADDR
 10640  2590  000000F3           	ddw	__ccov315_end_blk13	; block 13 END_ADDR
 10641  2594  000000E7           	ddw	__ccov314_start_blk11	; block 11 START_ADDR
 10642  2598  000000E9           	ddw	__ccov314_end_blk11	; block 11 END_ADDR
 10643  259C  000000E5           	ddw	__ccov313_start_blk8	; block 8 START_ADDR
 10644  25A0  000000E7           	ddw	__ccov313_end_blk8	; block 8 END_ADDR
 10645  25A4  000000DA           	ddw	__ccov312_start_blk6	; block 6 START_ADDR
 10646  25A8  000000E5           	ddw	__ccov312_end_blk6	; block 6 END_ADDR
 10647  25AC  000000D2           	ddw	__ccov311_start_blk5	; block 5 START_ADDR
 10648  25B0  000000DA           	ddw	__ccov311_end_blk5	; block 5 END_ADDR
 10649  25B4  000000D0           	ddw	__ccov310_start_blk3	; block 3 START_ADDR
 10650  25B8  000000D2           	ddw	__ccov310_end_blk3	; block 3 END_ADDR
 10651  25BC  000000CE           	ddw	__ccov309_start_blk1	; block 1 START_ADDR
 10652  25C0  000000D0           	ddw	__ccov309_end_blk1	; block 1 END_ADDR
 10653  25C4  000000CA           	ddw	_get_wsp	; block 0 START_ADDR
 10654  25C8  000000CE           	ddw	__ccov308_end_blk0	; block 0 END_ADDR
 10655                           
 10656                           ; Function: get_wsp, coverage: 30,0
 10657  25CC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10658  25D0  00000022           	ddw	__ccovbit30_162/(0+8)	; CC_ADDR
 10659  25D4  00000001           	ddw	1	; NUM_POINTS
 10660  25D8  00000004           	ddw	__ccovbit30_162& (0+7)	; OFFSET
 10661  25DC  00000000           	ddw	0	; Reserved
 10662  25E0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10663  25E4  00000002           	ddw	2	; NUM_RANGES
 10664  25E8  0000012A           	ddw	__ccov326_start_blk30	; block 30 START_ADDR
 10665  25EC  0000012D           	ddw	__end_of_get_wsp	; block 30 END_ADDR
 10666  25F0  000000CA           	ddw	_get_wsp	; block 0 START_ADDR
 10667  25F4  000000CE           	ddw	__ccov308_end_blk0	; block 0 END_ADDR
 10668                           
 10669                           ; Function: get_fun, coverage: 11,10,8,5,3,1,0
 10670  25F8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10671  25FC  00000022           	ddw	__ccovbit11_163/(0+8)	; CC_ADDR
 10672  2600  00000001           	ddw	1	; NUM_POINTS
 10673  2604  00000003           	ddw	__ccovbit11_163& (0+7)	; OFFSET
 10674  2608  00000000           	ddw	0	; Reserved
 10675  260C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10676  2610  00000007           	ddw	7	; NUM_RANGES
 10677  2614  00000250           	ddw	__ccov333_start_blk11	; block 11 START_ADDR
 10678  2618  00000256           	ddw	__ccov333_end_blk11	; block 11 END_ADDR
 10679  261C  0000024B           	ddw	__ccov332_start_blk10	; block 10 START_ADDR
 10680  2620  00000250           	ddw	__ccov332_end_blk10	; block 10 END_ADDR
 10681  2624  00000249           	ddw	__ccov331_start_blk8	; block 8 START_ADDR
 10682  2628  0000024B           	ddw	__ccov331_end_blk8	; block 8 END_ADDR
 10683  262C  00000247           	ddw	__ccov330_start_blk5	; block 5 START_ADDR
 10684  2630  00000249           	ddw	__ccov330_end_blk5	; block 5 END_ADDR
 10685  2634  0000023F           	ddw	__ccov329_start_blk3	; block 3 START_ADDR
 10686  2638  00000247           	ddw	__ccov329_end_blk3	; block 3 END_ADDR
 10687  263C  0000023D           	ddw	__ccov328_start_blk1	; block 1 START_ADDR
 10688  2640  0000023F           	ddw	__ccov328_end_blk1	; block 1 END_ADDR
 10689  2644  00000239           	ddw	_get_fun	; block 0 START_ADDR
 10690  2648  0000023D           	ddw	__ccov327_end_blk0	; block 0 END_ADDR
 10691                           
 10692                           ; Function: get_fun, coverage: 13,10,8,5,3,1,0
 10693  264C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10694  2650  00000022           	ddw	__ccovbit13_164/(0+8)	; CC_ADDR
 10695  2654  00000001           	ddw	1	; NUM_POINTS
 10696  2658  00000002           	ddw	__ccovbit13_164& (0+7)	; OFFSET
 10697  265C  00000000           	ddw	0	; Reserved
 10698  2660  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10699  2664  00000007           	ddw	7	; NUM_RANGES
 10700  2668  00000256           	ddw	__ccov334_start_blk13	; block 13 START_ADDR
 10701  266C  0000025B           	ddw	__ccov334_end_blk13	; block 13 END_ADDR
 10702  2670  0000024B           	ddw	__ccov332_start_blk10	; block 10 START_ADDR
 10703  2674  00000250           	ddw	__ccov332_end_blk10	; block 10 END_ADDR
 10704  2678  00000249           	ddw	__ccov331_start_blk8	; block 8 START_ADDR
 10705  267C  0000024B           	ddw	__ccov331_end_blk8	; block 8 END_ADDR
 10706  2680  00000247           	ddw	__ccov330_start_blk5	; block 5 START_ADDR
 10707  2684  00000249           	ddw	__ccov330_end_blk5	; block 5 END_ADDR
 10708  2688  0000023F           	ddw	__ccov329_start_blk3	; block 3 START_ADDR
 10709  268C  00000247           	ddw	__ccov329_end_blk3	; block 3 END_ADDR
 10710  2690  0000023D           	ddw	__ccov328_start_blk1	; block 1 START_ADDR
 10711  2694  0000023F           	ddw	__ccov328_end_blk1	; block 1 END_ADDR
 10712  2698  00000239           	ddw	_get_fun	; block 0 START_ADDR
 10713  269C  0000023D           	ddw	__ccov327_end_blk0	; block 0 END_ADDR
 10714                           
 10715                           ; Function: get_fun, coverage: 21,20,19,18,16,10,8,5,3,1,0
 10716  26A0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10717  26A4  00000022           	ddw	__ccovbit21_165/(0+8)	; CC_ADDR
 10718  26A8  00000001           	ddw	1	; NUM_POINTS
 10719  26AC  00000001           	ddw	__ccovbit21_165& (0+7)	; OFFSET
 10720  26B0  00000000           	ddw	0	; Reserved
 10721  26B4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10722  26B8  0000000B           	ddw	11	; NUM_RANGES
 10723  26BC  0000026A           	ddw	__ccov339_start_blk21	; block 21 START_ADDR
 10724  26C0  0000026D           	ddw	__ccov339_end_blk21	; block 21 END_ADDR
 10725  26C4  00000269           	ddw	__ccov338_start_blk20	; block 20 START_ADDR
 10726  26C8  0000026A           	ddw	__ccov338_end_blk20	; block 20 END_ADDR
 10727  26CC  00000265           	ddw	__ccov337_start_blk19	; block 19 START_ADDR
 10728  26D0  00000269           	ddw	__ccov337_end_blk19	; block 19 END_ADDR
 10729  26D4  0000025D           	ddw	__ccov336_start_blk18	; block 18 START_ADDR
 10730  26D8  00000265           	ddw	__ccov336_end_blk18	; block 18 END_ADDR
 10731  26DC  0000025B           	ddw	__ccov335_start_blk16	; block 16 START_ADDR
 10732  26E0  0000025D           	ddw	__ccov335_end_blk16	; block 16 END_ADDR
 10733  26E4  0000024B           	ddw	__ccov332_start_blk10	; block 10 START_ADDR
 10734  26E8  00000250           	ddw	__ccov332_end_blk10	; block 10 END_ADDR
 10735  26EC  00000249           	ddw	__ccov331_start_blk8	; block 8 START_ADDR
 10736  26F0  0000024B           	ddw	__ccov331_end_blk8	; block 8 END_ADDR
 10737  26F4  00000247           	ddw	__ccov330_start_blk5	; block 5 START_ADDR
 10738  26F8  00000249           	ddw	__ccov330_end_blk5	; block 5 END_ADDR
 10739  26FC  0000023F           	ddw	__ccov329_start_blk3	; block 3 START_ADDR
 10740  2700  00000247           	ddw	__ccov329_end_blk3	; block 3 END_ADDR
 10741  2704  0000023D           	ddw	__ccov328_start_blk1	; block 1 START_ADDR
 10742  2708  0000023F           	ddw	__ccov328_end_blk1	; block 1 END_ADDR
 10743  270C  00000239           	ddw	_get_fun	; block 0 START_ADDR
 10744  2710  0000023D           	ddw	__ccov327_end_blk0	; block 0 END_ADDR
 10745                           
 10746                           ; Function: get_fun, coverage: 23,18,16,10,8,5,3,1,0
 10747  2714  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10748  2718  00000022           	ddw	__ccovbit23_166/(0+8)	; CC_ADDR
 10749  271C  00000001           	ddw	1	; NUM_POINTS
 10750  2720  00000000           	ddw	__ccovbit23_166& (0+7)	; OFFSET
 10751  2724  00000000           	ddw	0	; Reserved
 10752  2728  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10753  272C  00000009           	ddw	9	; NUM_RANGES
 10754  2730  0000026D           	ddw	__ccov340_start_blk23	; block 23 START_ADDR
 10755  2734  00000275           	ddw	__ccov340_end_blk23	; block 23 END_ADDR
 10756  2738  0000025D           	ddw	__ccov336_start_blk18	; block 18 START_ADDR
 10757  273C  00000265           	ddw	__ccov336_end_blk18	; block 18 END_ADDR
 10758  2740  0000025B           	ddw	__ccov335_start_blk16	; block 16 START_ADDR
 10759  2744  0000025D           	ddw	__ccov335_end_blk16	; block 16 END_ADDR
 10760  2748  0000024B           	ddw	__ccov332_start_blk10	; block 10 START_ADDR
 10761  274C  00000250           	ddw	__ccov332_end_blk10	; block 10 END_ADDR
 10762  2750  00000249           	ddw	__ccov331_start_blk8	; block 8 START_ADDR
 10763  2754  0000024B           	ddw	__ccov331_end_blk8	; block 8 END_ADDR
 10764  2758  00000247           	ddw	__ccov330_start_blk5	; block 5 START_ADDR
 10765  275C  00000249           	ddw	__ccov330_end_blk5	; block 5 END_ADDR
 10766  2760  0000023F           	ddw	__ccov329_start_blk3	; block 3 START_ADDR
 10767  2764  00000247           	ddw	__ccov329_end_blk3	; block 3 END_ADDR
 10768  2768  0000023D           	ddw	__ccov328_start_blk1	; block 1 START_ADDR
 10769  276C  0000023F           	ddw	__ccov328_end_blk1	; block 1 END_ADDR
 10770  2770  00000239           	ddw	_get_fun	; block 0 START_ADDR
 10771  2774  0000023D           	ddw	__ccov327_end_blk0	; block 0 END_ADDR
 10772                           
 10773                           ; Function: get_fun, coverage: 26,25,24,23,18,16,10,8,5,3,1,0
 10774  2778  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10775  277C  00000021           	ddw	__ccovbit26_167/(0+8)	; CC_ADDR
 10776  2780  00000001           	ddw	1	; NUM_POINTS
 10777  2784  00000007           	ddw	__ccovbit26_167& (0+7)	; OFFSET
 10778  2788  00000000           	ddw	0	; Reserved
 10779  278C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10780  2790  0000000C           	ddw	12	; NUM_RANGES
 10781  2794  0000027A           	ddw	__ccov343_start_blk26	; block 26 START_ADDR
 10782  2798  0000027C           	ddw	__ccov343_end_blk26	; block 26 END_ADDR
 10783  279C  00000279           	ddw	__ccov342_start_blk25	; block 25 START_ADDR
 10784  27A0  0000027A           	ddw	__ccov342_end_blk25	; block 25 END_ADDR
 10785  27A4  00000275           	ddw	__ccov341_start_blk24	; block 24 START_ADDR
 10786  27A8  00000279           	ddw	__ccov341_end_blk24	; block 24 END_ADDR
 10787  27AC  0000026D           	ddw	__ccov340_start_blk23	; block 23 START_ADDR
 10788  27B0  00000275           	ddw	__ccov340_end_blk23	; block 23 END_ADDR
 10789  27B4  0000025D           	ddw	__ccov336_start_blk18	; block 18 START_ADDR
 10790  27B8  00000265           	ddw	__ccov336_end_blk18	; block 18 END_ADDR
 10791  27BC  0000025B           	ddw	__ccov335_start_blk16	; block 16 START_ADDR
 10792  27C0  0000025D           	ddw	__ccov335_end_blk16	; block 16 END_ADDR
 10793  27C4  0000024B           	ddw	__ccov332_start_blk10	; block 10 START_ADDR
 10794  27C8  00000250           	ddw	__ccov332_end_blk10	; block 10 END_ADDR
 10795  27CC  00000249           	ddw	__ccov331_start_blk8	; block 8 START_ADDR
 10796  27D0  0000024B           	ddw	__ccov331_end_blk8	; block 8 END_ADDR
 10797  27D4  00000247           	ddw	__ccov330_start_blk5	; block 5 START_ADDR
 10798  27D8  00000249           	ddw	__ccov330_end_blk5	; block 5 END_ADDR
 10799  27DC  0000023F           	ddw	__ccov329_start_blk3	; block 3 START_ADDR
 10800  27E0  00000247           	ddw	__ccov329_end_blk3	; block 3 END_ADDR
 10801  27E4  0000023D           	ddw	__ccov328_start_blk1	; block 1 START_ADDR
 10802  27E8  0000023F           	ddw	__ccov328_end_blk1	; block 1 END_ADDR
 10803  27EC  00000239           	ddw	_get_fun	; block 0 START_ADDR
 10804  27F0  0000023D           	ddw	__ccov327_end_blk0	; block 0 END_ADDR
 10805                           
 10806                           ; Function: get_fun, coverage: 29,18,16,10,8,5,3,1,0
 10807  27F4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10808  27F8  00000021           	ddw	__ccovbit29_168/(0+8)	; CC_ADDR
 10809  27FC  00000001           	ddw	1	; NUM_POINTS
 10810  2800  00000006           	ddw	__ccovbit29_168& (0+7)	; OFFSET
 10811  2804  00000000           	ddw	0	; Reserved
 10812  2808  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10813  280C  00000009           	ddw	9	; NUM_RANGES
 10814  2810  0000027C           	ddw	__ccov344_start_blk29	; block 29 START_ADDR
 10815  2814  0000027E           	ddw	__ccov344_end_blk29	; block 29 END_ADDR
 10816  2818  0000025D           	ddw	__ccov336_start_blk18	; block 18 START_ADDR
 10817  281C  00000265           	ddw	__ccov336_end_blk18	; block 18 END_ADDR
 10818  2820  0000025B           	ddw	__ccov335_start_blk16	; block 16 START_ADDR
 10819  2824  0000025D           	ddw	__ccov335_end_blk16	; block 16 END_ADDR
 10820  2828  0000024B           	ddw	__ccov332_start_blk10	; block 10 START_ADDR
 10821  282C  00000250           	ddw	__ccov332_end_blk10	; block 10 END_ADDR
 10822  2830  00000249           	ddw	__ccov331_start_blk8	; block 8 START_ADDR
 10823  2834  0000024B           	ddw	__ccov331_end_blk8	; block 8 END_ADDR
 10824  2838  00000247           	ddw	__ccov330_start_blk5	; block 5 START_ADDR
 10825  283C  00000249           	ddw	__ccov330_end_blk5	; block 5 END_ADDR
 10826  2840  0000023F           	ddw	__ccov329_start_blk3	; block 3 START_ADDR
 10827  2844  00000247           	ddw	__ccov329_end_blk3	; block 3 END_ADDR
 10828  2848  0000023D           	ddw	__ccov328_start_blk1	; block 1 START_ADDR
 10829  284C  0000023F           	ddw	__ccov328_end_blk1	; block 1 END_ADDR
 10830  2850  00000239           	ddw	_get_fun	; block 0 START_ADDR
 10831  2854  0000023D           	ddw	__ccov327_end_blk0	; block 0 END_ADDR
 10832                           
 10833                           ; Function: get_fun, coverage: 31,0
 10834  2858  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10835  285C  00000021           	ddw	__ccovbit31_169/(0+8)	; CC_ADDR
 10836  2860  00000001           	ddw	1	; NUM_POINTS
 10837  2864  00000005           	ddw	__ccovbit31_169& (0+7)	; OFFSET
 10838  2868  00000000           	ddw	0	; Reserved
 10839  286C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10840  2870  00000002           	ddw	2	; NUM_RANGES
 10841  2874  0000027E           	ddw	__ccov345_start_blk31	; block 31 START_ADDR
 10842  2878  00000281           	ddw	__end_of_get_fun	; block 31 END_ADDR
 10843  287C  00000239           	ddw	_get_fun	; block 0 START_ADDR
 10844  2880  0000023D           	ddw	__ccov327_end_blk0	; block 0 END_ADDR
 10845                           
 10846                           ; Function: get_jump, coverage: 5,4,3,1,0
 10847  2884  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10848  2888  00000021           	ddw	__ccovbit5_170/(0+8)	; CC_ADDR
 10849  288C  00000001           	ddw	1	; NUM_POINTS
 10850  2890  00000004           	ddw	__ccovbit5_170& (0+7)	; OFFSET
 10851  2894  00000000           	ddw	0	; Reserved
 10852  2898  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10853  289C  00000005           	ddw	5	; NUM_RANGES
 10854  28A0  0000038E           	ddw	__ccov350_start_blk5	; block 5 START_ADDR
 10855  28A4  00000394           	ddw	__ccov350_end_blk5	; block 5 END_ADDR
 10856  28A8  00000389           	ddw	__ccov349_start_blk4	; block 4 START_ADDR
 10857  28AC  0000038E           	ddw	__ccov349_end_blk4	; block 4 END_ADDR
 10858  28B0  00000387           	ddw	__ccov348_start_blk3	; block 3 START_ADDR
 10859  28B4  00000389           	ddw	__ccov348_end_blk3	; block 3 END_ADDR
 10860  28B8  00000385           	ddw	__ccov347_start_blk1	; block 1 START_ADDR
 10861  28BC  00000387           	ddw	__ccov347_end_blk1	; block 1 END_ADDR
 10862  28C0  00000381           	ddw	_get_jump	; block 0 START_ADDR
 10863  28C4  00000385           	ddw	__ccov346_end_blk0	; block 0 END_ADDR
 10864                           
 10865                           ; Function: get_jump, coverage: 7,4,3,1,0
 10866  28C8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10867  28CC  00000021           	ddw	__ccovbit7_171/(0+8)	; CC_ADDR
 10868  28D0  00000001           	ddw	1	; NUM_POINTS
 10869  28D4  00000003           	ddw	__ccovbit7_171& (0+7)	; OFFSET
 10870  28D8  00000000           	ddw	0	; Reserved
 10871  28DC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10872  28E0  00000005           	ddw	5	; NUM_RANGES
 10873  28E4  00000394           	ddw	__ccov351_start_blk7	; block 7 START_ADDR
 10874  28E8  00000399           	ddw	__ccov351_end_blk7	; block 7 END_ADDR
 10875  28EC  00000389           	ddw	__ccov349_start_blk4	; block 4 START_ADDR
 10876  28F0  0000038E           	ddw	__ccov349_end_blk4	; block 4 END_ADDR
 10877  28F4  00000387           	ddw	__ccov348_start_blk3	; block 3 START_ADDR
 10878  28F8  00000389           	ddw	__ccov348_end_blk3	; block 3 END_ADDR
 10879  28FC  00000385           	ddw	__ccov347_start_blk1	; block 1 START_ADDR
 10880  2900  00000387           	ddw	__ccov347_end_blk1	; block 1 END_ADDR
 10881  2904  00000381           	ddw	_get_jump	; block 0 START_ADDR
 10882  2908  00000385           	ddw	__ccov346_end_blk0	; block 0 END_ADDR
 10883                           
 10884                           ; Function: get_jump, coverage: 12,11,10,9,4,3,1,0
 10885  290C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10886  2910  00000021           	ddw	__ccovbit12_172/(0+8)	; CC_ADDR
 10887  2914  00000001           	ddw	1	; NUM_POINTS
 10888  2918  00000002           	ddw	__ccovbit12_172& (0+7)	; OFFSET
 10889  291C  00000000           	ddw	0	; Reserved
 10890  2920  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10891  2924  00000008           	ddw	8	; NUM_RANGES
 10892  2928  000003A5           	ddw	__ccov355_start_blk12	; block 12 START_ADDR
 10893  292C  000003A8           	ddw	__ccov355_end_blk12	; block 12 END_ADDR
 10894  2930  000003A4           	ddw	__ccov354_start_blk11	; block 11 START_ADDR
 10895  2934  000003A5           	ddw	__ccov354_end_blk11	; block 11 END_ADDR
 10896  2938  000003A0           	ddw	__ccov353_start_blk10	; block 10 START_ADDR
 10897  293C  000003A4           	ddw	__ccov353_end_blk10	; block 10 END_ADDR
 10898  2940  00000399           	ddw	__ccov352_start_blk9	; block 9 START_ADDR
 10899  2944  000003A0           	ddw	__ccov352_end_blk9	; block 9 END_ADDR
 10900  2948  00000389           	ddw	__ccov349_start_blk4	; block 4 START_ADDR
 10901  294C  0000038E           	ddw	__ccov349_end_blk4	; block 4 END_ADDR
 10902  2950  00000387           	ddw	__ccov348_start_blk3	; block 3 START_ADDR
 10903  2954  00000389           	ddw	__ccov348_end_blk3	; block 3 END_ADDR
 10904  2958  00000385           	ddw	__ccov347_start_blk1	; block 1 START_ADDR
 10905  295C  00000387           	ddw	__ccov347_end_blk1	; block 1 END_ADDR
 10906  2960  00000381           	ddw	_get_jump	; block 0 START_ADDR
 10907  2964  00000385           	ddw	__ccov346_end_blk0	; block 0 END_ADDR
 10908                           
 10909                           ; Function: get_jump, coverage: 14,9,4,3,1,0
 10910  2968  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10911  296C  00000021           	ddw	__ccovbit14_173/(0+8)	; CC_ADDR
 10912  2970  00000001           	ddw	1	; NUM_POINTS
 10913  2974  00000001           	ddw	__ccovbit14_173& (0+7)	; OFFSET
 10914  2978  00000000           	ddw	0	; Reserved
 10915  297C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10916  2980  00000006           	ddw	6	; NUM_RANGES
 10917  2984  000003A8           	ddw	__ccov356_start_blk14	; block 14 START_ADDR
 10918  2988  000003B0           	ddw	__ccov356_end_blk14	; block 14 END_ADDR
 10919  298C  00000399           	ddw	__ccov352_start_blk9	; block 9 START_ADDR
 10920  2990  000003A0           	ddw	__ccov352_end_blk9	; block 9 END_ADDR
 10921  2994  00000389           	ddw	__ccov349_start_blk4	; block 4 START_ADDR
 10922  2998  0000038E           	ddw	__ccov349_end_blk4	; block 4 END_ADDR
 10923  299C  00000387           	ddw	__ccov348_start_blk3	; block 3 START_ADDR
 10924  29A0  00000389           	ddw	__ccov348_end_blk3	; block 3 END_ADDR
 10925  29A4  00000385           	ddw	__ccov347_start_blk1	; block 1 START_ADDR
 10926  29A8  00000387           	ddw	__ccov347_end_blk1	; block 1 END_ADDR
 10927  29AC  00000381           	ddw	_get_jump	; block 0 START_ADDR
 10928  29B0  00000385           	ddw	__ccov346_end_blk0	; block 0 END_ADDR
 10929                           
 10930                           ; Function: get_jump, coverage: 17,16,15,14,9,4,3,1,0
 10931  29B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10932  29B8  00000021           	ddw	__ccovbit17_174/(0+8)	; CC_ADDR
 10933  29BC  00000001           	ddw	1	; NUM_POINTS
 10934  29C0  00000000           	ddw	__ccovbit17_174& (0+7)	; OFFSET
 10935  29C4  00000000           	ddw	0	; Reserved
 10936  29C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10937  29CC  00000009           	ddw	9	; NUM_RANGES
 10938  29D0  000003B5           	ddw	__ccov359_start_blk17	; block 17 START_ADDR
 10939  29D4  000003B7           	ddw	__ccov359_end_blk17	; block 17 END_ADDR
 10940  29D8  000003B4           	ddw	__ccov358_start_blk16	; block 16 START_ADDR
 10941  29DC  000003B5           	ddw	__ccov358_end_blk16	; block 16 END_ADDR
 10942  29E0  000003B0           	ddw	__ccov357_start_blk15	; block 15 START_ADDR
 10943  29E4  000003B4           	ddw	__ccov357_end_blk15	; block 15 END_ADDR
 10944  29E8  000003A8           	ddw	__ccov356_start_blk14	; block 14 START_ADDR
 10945  29EC  000003B0           	ddw	__ccov356_end_blk14	; block 14 END_ADDR
 10946  29F0  00000399           	ddw	__ccov352_start_blk9	; block 9 START_ADDR
 10947  29F4  000003A0           	ddw	__ccov352_end_blk9	; block 9 END_ADDR
 10948  29F8  00000389           	ddw	__ccov349_start_blk4	; block 4 START_ADDR
 10949  29FC  0000038E           	ddw	__ccov349_end_blk4	; block 4 END_ADDR
 10950  2A00  00000387           	ddw	__ccov348_start_blk3	; block 3 START_ADDR
 10951  2A04  00000389           	ddw	__ccov348_end_blk3	; block 3 END_ADDR
 10952  2A08  00000385           	ddw	__ccov347_start_blk1	; block 1 START_ADDR
 10953  2A0C  00000387           	ddw	__ccov347_end_blk1	; block 1 END_ADDR
 10954  2A10  00000381           	ddw	_get_jump	; block 0 START_ADDR
 10955  2A14  00000385           	ddw	__ccov346_end_blk0	; block 0 END_ADDR
 10956                           
 10957                           ; Function: get_jump, coverage: 20,9,4,3,1,0
 10958  2A18  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10959  2A1C  00000020           	ddw	__ccovbit20_175/(0+8)	; CC_ADDR
 10960  2A20  00000001           	ddw	1	; NUM_POINTS
 10961  2A24  00000007           	ddw	__ccovbit20_175& (0+7)	; OFFSET
 10962  2A28  00000000           	ddw	0	; Reserved
 10963  2A2C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10964  2A30  00000006           	ddw	6	; NUM_RANGES
 10965  2A34  000003B7           	ddw	__ccov360_start_blk20	; block 20 START_ADDR
 10966  2A38  000003B9           	ddw	__ccov360_end_blk20	; block 20 END_ADDR
 10967  2A3C  00000399           	ddw	__ccov352_start_blk9	; block 9 START_ADDR
 10968  2A40  000003A0           	ddw	__ccov352_end_blk9	; block 9 END_ADDR
 10969  2A44  00000389           	ddw	__ccov349_start_blk4	; block 4 START_ADDR
 10970  2A48  0000038E           	ddw	__ccov349_end_blk4	; block 4 END_ADDR
 10971  2A4C  00000387           	ddw	__ccov348_start_blk3	; block 3 START_ADDR
 10972  2A50  00000389           	ddw	__ccov348_end_blk3	; block 3 END_ADDR
 10973  2A54  00000385           	ddw	__ccov347_start_blk1	; block 1 START_ADDR
 10974  2A58  00000387           	ddw	__ccov347_end_blk1	; block 1 END_ADDR
 10975  2A5C  00000381           	ddw	_get_jump	; block 0 START_ADDR
 10976  2A60  00000385           	ddw	__ccov346_end_blk0	; block 0 END_ADDR
 10977                           
 10978                           ; Function: get_jump, coverage: 22,0
 10979  2A64  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10980  2A68  00000020           	ddw	__ccovbit22_176/(0+8)	; CC_ADDR
 10981  2A6C  00000001           	ddw	1	; NUM_POINTS
 10982  2A70  00000006           	ddw	__ccovbit22_176& (0+7)	; OFFSET
 10983  2A74  00000000           	ddw	0	; Reserved
 10984  2A78  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10985  2A7C  00000002           	ddw	2	; NUM_RANGES
 10986  2A80  000003B9           	ddw	__ccov361_start_blk22	; block 22 START_ADDR
 10987  2A84  000003BC           	ddw	__end_of_get_jump	; block 22 END_ADDR
 10988  2A88  00000381           	ddw	_get_jump	; block 0 START_ADDR
 10989  2A8C  00000385           	ddw	__ccov346_end_blk0	; block 0 END_ADDR
 10990                           
 10991                           ; Function: start_setup, coverage: 31,30,29,28,27,26,25,24,23,22,21,18,15,12,9,6,4,3,2,1
      +                          ,0
 10992  2A90  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10993  2A94  00000020           	ddw	__ccovbit31_177/(0+8)	; CC_ADDR
 10994  2A98  00000001           	ddw	1	; NUM_POINTS
 10995  2A9C  00000005           	ddw	__ccovbit31_177& (0+7)	; OFFSET
 10996  2AA0  00000000           	ddw	0	; Reserved
 10997  2AA4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10998  2AA8  00000015           	ddw	21	; NUM_RANGES
 10999  2AAC  00000344           	ddw	__ccov382_start_blk31	; block 31 START_ADDR
 11000  2AB0  00000346           	ddw	__end_of_start_setup	; block 31 END_ADDR
 11001  2AB4  00000343           	ddw	__ccov381_start_blk30	; block 30 START_ADDR
 11002  2AB8  00000344           	ddw	__ccov381_end_blk30	; block 30 END_ADDR
 11003  2ABC  00000341           	ddw	__ccov380_start_blk29	; block 29 START_ADDR
 11004  2AC0  00000343           	ddw	__ccov380_end_blk29	; block 29 END_ADDR
 11005  2AC4  0000033F           	ddw	__ccov379_start_blk28	; block 28 START_ADDR
 11006  2AC8  00000341           	ddw	__ccov379_end_blk28	; block 28 END_ADDR
 11007  2ACC  0000033E           	ddw	__ccov378_start_blk27	; block 27 START_ADDR
 11008  2AD0  0000033F           	ddw	__ccov378_end_blk27	; block 27 END_ADDR
 11009  2AD4  0000033C           	ddw	__ccov377_start_blk26	; block 26 START_ADDR
 11010  2AD8  0000033E           	ddw	__ccov377_end_blk26	; block 26 END_ADDR
 11011  2ADC  0000033A           	ddw	__ccov376_start_blk25	; block 25 START_ADDR
 11012  2AE0  0000033C           	ddw	__ccov376_end_blk25	; block 25 END_ADDR
 11013  2AE4  00000338           	ddw	__ccov375_start_blk24	; block 24 START_ADDR
 11014  2AE8  0000033A           	ddw	__ccov375_end_blk24	; block 24 END_ADDR
 11015  2AEC  00000336           	ddw	__ccov374_start_blk23	; block 23 START_ADDR
 11016  2AF0  00000338           	ddw	__ccov374_end_blk23	; block 23 END_ADDR
 11017  2AF4  0000032F           	ddw	__ccov373_start_blk22	; block 22 START_ADDR
 11018  2AF8  00000336           	ddw	__ccov373_end_blk22	; block 22 END_ADDR
 11019  2AFC  0000032E           	ddw	__ccov372_start_blk21	; block 21 START_ADDR
 11020  2B00  0000032F           	ddw	__ccov372_end_blk21	; block 21 END_ADDR
 11021  2B04  0000032D           	ddw	__ccov371_start_blk18	; block 18 START_ADDR
 11022  2B08  0000032E           	ddw	__ccov371_end_blk18	; block 18 END_ADDR
 11023  2B0C  0000032C           	ddw	__ccov370_start_blk15	; block 15 START_ADDR
 11024  2B10  0000032D           	ddw	__ccov370_end_blk15	; block 15 END_ADDR
 11025  2B14  0000032B           	ddw	__ccov369_start_blk12	; block 12 START_ADDR
 11026  2B18  0000032C           	ddw	__ccov369_end_blk12	; block 12 END_ADDR
 11027  2B1C  0000032A           	ddw	__ccov368_start_blk9	; block 9 START_ADDR
 11028  2B20  0000032B           	ddw	__ccov368_end_blk9	; block 9 END_ADDR
 11029  2B24  00000328           	ddw	__ccov367_start_blk6	; block 6 START_ADDR
 11030  2B28  0000032A           	ddw	__ccov367_end_blk6	; block 6 END_ADDR
 11031  2B2C  0000031F           	ddw	__ccov366_start_blk4	; block 4 START_ADDR
 11032  2B30  00000328           	ddw	__ccov366_end_blk4	; block 4 END_ADDR
 11033  2B34  0000031C           	ddw	__ccov365_start_blk3	; block 3 START_ADDR
 11034  2B38  0000031F           	ddw	__ccov365_end_blk3	; block 3 END_ADDR
 11035  2B3C  0000030A           	ddw	__ccov364_start_blk2	; block 2 START_ADDR
 11036  2B40  0000031C           	ddw	__ccov364_end_blk2	; block 2 END_ADDR
 11037  2B44  00000309           	ddw	__ccov363_start_blk1	; block 1 START_ADDR
 11038  2B48  0000030A           	ddw	__ccov363_end_blk1	; block 1 END_ADDR
 11039  2B4C  00000306           	ddw	_start_setup	; block 0 START_ADDR
 11040  2B50  00000309           	ddw	__ccov362_end_blk0	; block 0 END_ADDR
 11041                           
 11042                           ; Function: main, coverage: 4,3,2,1,0
 11043  2B54  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11044  2B58  00000020           	ddw	__ccovbit4_178/(0+8)	; CC_ADDR
 11045  2B5C  00000001           	ddw	1	; NUM_POINTS
 11046  2B60  00000004           	ddw	__ccovbit4_178& (0+7)	; OFFSET
 11047  2B64  00000000           	ddw	0	; Reserved
 11048  2B68  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11049  2B6C  00000005           	ddw	5	; NUM_RANGES
 11050  2B70  0000041D           	ddw	__ccov387_start_blk4	; block 4 START_ADDR
 11051  2B74  00000432           	ddw	__ccov387_end_blk4	; block 4 END_ADDR
 11052  2B78  00000419           	ddw	__ccov386_start_blk3	; block 3 START_ADDR
 11053  2B7C  0000041D           	ddw	__ccov386_end_blk3	; block 3 END_ADDR
 11054  2B80  00000416           	ddw	__ccov385_start_blk2	; block 2 START_ADDR
 11055  2B84  00000419           	ddw	__ccov385_end_blk2	; block 2 END_ADDR
 11056  2B88  00000415           	ddw	__ccov384_start_blk1	; block 1 START_ADDR
 11057  2B8C  00000416           	ddw	__ccov384_end_blk1	; block 1 END_ADDR
 11058  2B90  00000412           	ddw	_main	; block 0 START_ADDR
 11059  2B94  00000415           	ddw	__ccov383_end_blk0	; block 0 END_ADDR
 11060                           
 11061                           ; Function: main, coverage: 6,3,2,1,0
 11062  2B98  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11063  2B9C  00000020           	ddw	__ccovbit6_179/(0+8)	; CC_ADDR
 11064  2BA0  00000001           	ddw	1	; NUM_POINTS
 11065  2BA4  00000003           	ddw	__ccovbit6_179& (0+7)	; OFFSET
 11066  2BA8  00000000           	ddw	0	; Reserved
 11067  2BAC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11068  2BB0  00000005           	ddw	5	; NUM_RANGES
 11069  2BB4  00000432           	ddw	__ccov388_start_blk6	; block 6 START_ADDR
 11070  2BB8  00000438           	ddw	__ccov388_end_blk6	; block 6 END_ADDR
 11071  2BBC  00000419           	ddw	__ccov386_start_blk3	; block 3 START_ADDR
 11072  2BC0  0000041D           	ddw	__ccov386_end_blk3	; block 3 END_ADDR
 11073  2BC4  00000416           	ddw	__ccov385_start_blk2	; block 2 START_ADDR
 11074  2BC8  00000419           	ddw	__ccov385_end_blk2	; block 2 END_ADDR
 11075  2BCC  00000415           	ddw	__ccov384_start_blk1	; block 1 START_ADDR
 11076  2BD0  00000416           	ddw	__ccov384_end_blk1	; block 1 END_ADDR
 11077  2BD4  00000412           	ddw	_main	; block 0 START_ADDR
 11078  2BD8  00000415           	ddw	__ccov383_end_blk0	; block 0 END_ADDR
 11079                           
 11080                           ; Function: EEPROM_WriteByte, coverage: 9,8,7,6,5,4,3,2,0
 11081  2BDC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11082  2BE0  00000020           	ddw	__ccovbit9_180/(0+8)	; CC_ADDR
 11083  2BE4  00000001           	ddw	1	; NUM_POINTS
 11084  2BE8  00000002           	ddw	__ccovbit9_180& (0+7)	; OFFSET
 11085  2BEC  00000000           	ddw	0	; Reserved
 11086  2BF0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11087  2BF4  00000008           	ddw	8	; NUM_RANGES
 11088  2BF8  0000045C           	ddw	__ccov397_start_blk9	; block 9 START_ADDR
 11089  2BFC  0000045F           	ddw	__end_of_EEPROM_WriteByte	; block 9 END_ADDR
 11090  2C00  0000045A           	ddw	__ccov396_start_blk8	; block 8 START_ADDR
 11091  2C04  0000045C           	ddw	__ccov396_end_blk8	; block 8 END_ADDR
 11092  2C08  00000454           	ddw	__ccov395_start_blk7	; block 7 START_ADDR
 11093  2C0C  0000045A           	ddw	__ccov395_end_blk7	; block 7 END_ADDR
 11094  2C10  00000453           	ddw	__ccov394_start_blk6	; block 6 START_ADDR
 11095  2C14  00000454           	ddw	__ccov394_end_blk6	; block 6 END_ADDR
 11096  2C18  0000044E           	ddw	__ccov393_start_blk5	; block 5 START_ADDR
 11097  2C1C  00000453           	ddw	__ccov393_end_blk5	; block 5 END_ADDR
 11098  2C20  00000444           	ddw	__ccov392_start_blk4	; block 4 START_ADDR
 11099  2C24  0000044E           	ddw	__ccov392_end_blk4	; block 4 END_ADDR
 11100  2C28  0000043F           	ddw	__ccov391_start_blk3	; block 3 START_ADDR
 11101  2C2C  00000444           	ddw	__ccov391_end_blk3	; block 3 END_ADDR
 11102  2C30  00000439           	ddw	_EEPROM_WriteByte	; block 2 START_ADDR
 11103  2C34  0000043F           	ddw	__ccov390_end_blk2	; block 2 END_ADDR
 11104                           
 11105                           ; Function: EEPROM_ReadByte, coverage: 3,2,0
 11106  2C38  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11107  2C3C  00000020           	ddw	__ccovbit3_181/(0+8)	; CC_ADDR
 11108  2C40  00000001           	ddw	1	; NUM_POINTS
 11109  2C44  00000001           	ddw	__ccovbit3_181& (0+7)	; OFFSET
 11110  2C48  00000000           	ddw	0	; Reserved
 11111  2C4C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11112  2C50  00000002           	ddw	2	; NUM_RANGES
 11113  2C54  00000501           	ddw	__ccov400_start_blk3	; block 3 START_ADDR
 11114  2C58  00000508           	ddw	__ccov400_end_blk3	; block 3 END_ADDR
 11115  2C5C  000004FB           	ddw	_EEPROM_ReadByte	; block 2 START_ADDR
 11116  2C60  00000501           	ddw	__ccov399_end_blk2	; block 2 END_ADDR
 11117                           
 11118                           ; Function: EEPROM_ReadByte, coverage: 8,6,5,3,2,0
 11119  2C64  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11120  2C68  00000020           	ddw	__ccovbit8_182/(0+8)	; CC_ADDR
 11121  2C6C  00000001           	ddw	1	; NUM_POINTS
 11122  2C70  00000000           	ddw	__ccovbit8_182& (0+7)	; OFFSET
 11123  2C74  00000000           	ddw	0	; Reserved
 11124  2C78  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11125  2C7C  00000005           	ddw	5	; NUM_RANGES
 11126  2C80  00000511           	ddw	__ccov403_start_blk8	; block 8 START_ADDR
 11127  2C84  00000514           	ddw	__end_of_EEPROM_ReadByte	; block 8 END_ADDR
 11128  2C88  0000050F           	ddw	__ccov402_start_blk6	; block 6 START_ADDR
 11129  2C8C  00000511           	ddw	__ccov402_end_blk6	; block 6 END_ADDR
 11130  2C90  00000508           	ddw	__ccov401_start_blk5	; block 5 START_ADDR
 11131  2C94  0000050F           	ddw	__ccov401_end_blk5	; block 5 END_ADDR
 11132  2C98  00000501           	ddw	__ccov400_start_blk3	; block 3 START_ADDR
 11133  2C9C  00000508           	ddw	__ccov400_end_blk3	; block 3 END_ADDR
 11134  2CA0  000004FB           	ddw	_EEPROM_ReadByte	; block 2 START_ADDR
 11135  2CA4  00000501           	ddw	__ccov399_end_blk2	; block 2 END_ADDR
 11136  007E                     btemp	set	126	;btemp
 11137  007E                     int$flags	set	126
 11138  007E                     wtemp0	set	126
 11139                           
 11140                           	psect	idloc
 11141                           
 11142                           ;Config register IDLOC0 @ 0x8000
 11143                           ;	unspecified, using default values
 11144  8000                     	org	32768
 11145  8000  3FFF               	dw	16383
 11146                           
 11147                           ;Config register IDLOC1 @ 0x8001
 11148                           ;	unspecified, using default values
 11149  8001                     	org	32769
 11150  8001  3FFF               	dw	16383
 11151                           
 11152                           ;Config register IDLOC2 @ 0x8002
 11153                           ;	unspecified, using default values
 11154  8002                     	org	32770
 11155  8002  3FFF               	dw	16383
 11156                           
 11157                           ;Config register IDLOC3 @ 0x8003
 11158                           ;	unspecified, using default values
 11159  8003                     	org	32771
 11160  8003  3FFF               	dw	16383
 11161                           
 11162                           	psect	config
 11163                           
 11164                           ;Config register CONFIG1 @ 0x8007
 11165                           ;	Oscillator Selection
 11166                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11167                           ;	Watchdog Timer Enable
 11168                           ;	WDTE = ON, WDT enabled
 11169                           ;	Power-up Timer Enable
 11170                           ;	PWRTE = ON, PWRT enabled
 11171                           ;	MCLR Pin Function Select
 11172                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11173                           ;	Flash Program Memory Code Protection
 11174                           ;	CP = OFF, Program memory code protection is disabled
 11175                           ;	Data Memory Code Protection
 11176                           ;	CPD = OFF, Data memory code protection is disabled
 11177                           ;	Brown-out Reset Enable
 11178                           ;	BOREN = ON, Brown-out Reset enabled
 11179                           ;	Clock Out Enable
 11180                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11181                           ;	Internal/External Switchover
 11182                           ;	IESO = ON, Internal/External Switchover mode is enabled
 11183                           ;	Fail-Safe Clock Monitor Enable
 11184                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 11185  8007                     	org	32775
 11186  8007  3FDC               	dw	16348
 11187                           
 11188                           ;Config register CONFIG2 @ 0x8008
 11189                           ;	Flash Memory Self-Write Protection
 11190                           ;	WRT = OFF, Write protection off
 11191                           ;	PLL Enable
 11192                           ;	PLLEN = OFF, 4x PLL disabled
 11193                           ;	Stack Overflow/Underflow Reset Enable
 11194                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11195                           ;	Brown-out Reset Voltage Selection
 11196                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11197                           ;	Low-Voltage Programming Enable
 11198                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 11199  8008                     	org	32776
 11200  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    26
    Data        0
    BSS         36
    Persistent  37
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      14
    BANK0            80      2      58
    BANK1            32      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> zummer_switch(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> zummer_switch(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ms_tick(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ms_tick(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_get_wsp
    _eeprom_set->_EEPROM_WriteByte
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _get_wsp->_ADC_GetConversion

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _ms_tick->_sec_work
    _sec_work->_minute_tick
    _sec_work->_sec_30_work

Critical Paths under _main in BANK0

    _main->_get_wsp
    _start_setup->_eeprom_set

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1549
                  _autorotation_work
                              _close
                           _fun_work
                            _get_fun
                           _get_jump
                            _get_wsp
                      _hardware_work
                        _start_setup
                          _switch_wm
 ---------------------------------------------------------------------------------
 (1) _switch_wm                                            1     1      0       0
                                              2 COMMON     1     1      0
                           _rele_off
 ---------------------------------------------------------------------------------
 (1) _start_setup                                          0     0      0    1453
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                         _eeprom_set
 ---------------------------------------------------------------------------------
 (2) _eeprom_set                                           2     2      0     757
                                              0 BANK0      2     2      0
                    _EEPROM_ReadByte
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_WriteByte                                     4     3      1     692
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _EEPROM_ReadByte                                      3     3      0      31
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     348
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      1     1      0     174
                                              4 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hardware_work                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_wsp                                              4     4      0      96
                                              4 COMMON     2     2      0
                                              0 BANK0      2     2      0
                  _ADC_GetConversion
                        _clear_alarm
                        _start_alarm
 ---------------------------------------------------------------------------------
 (2) _start_alarm                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clear_alarm                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    2     2      0      31
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_jump                                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_fun                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _fun_work                                             1     1      0       0
                                              2 COMMON     1     1      0
                              _close
                               _open
 ---------------------------------------------------------------------------------
 (2) _close                                                0     0      0       0
                           _go_close
                       _go_close_alt
                           _rele_off
 ---------------------------------------------------------------------------------
 (3) _go_close_alt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _go_close                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _autorotation_work                                    0     0      0       0
                     _go_close_short
                               _open
 ---------------------------------------------------------------------------------
 (2) _open                                                 0     0      0       0
                            _go_open
                        _go_open_alt
                           _rele_off
 ---------------------------------------------------------------------------------
 (2) _rele_off                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _go_open_alt                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _go_open                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_close_short                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                            _ms_tick *
 ---------------------------------------------------------------------------------
 (7) _ms_tick                                              0     0      0       0
                        _ms_100_work
                        _ms_200_work
                           _sec_work
                          _stop_tone
 ---------------------------------------------------------------------------------
 (8) _stop_tone                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _sec_work                                             1     1      0       0
                                              1 COMMON     1     1      0
                        _minute_tick
                          _rele_tick
                        _sec_30_work
 ---------------------------------------------------------------------------------
 (9) _sec_30_work                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _rele_tick                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _minute_tick                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _ms_200_work                                          0     0      0       0
                        _beep_double
                          _beep_long
                         _beep_short
 ---------------------------------------------------------------------------------
 (9) _beep_double                                          0     0      0       0
                          _beep_long
                         _beep_short
 ---------------------------------------------------------------------------------
 (9) _beep_short                                           0     0      0       0
                         _start_tone
 ---------------------------------------------------------------------------------
 (9) _beep_long                                            0     0      0       0
                         _start_tone
 ---------------------------------------------------------------------------------
 (10) _start_tone                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ms_100_work                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _zummer_switch *
 ---------------------------------------------------------------------------------
 (7) _zummer_switch                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _autorotation_work
     _go_close_short
     _open
       _go_open
       _go_open_alt
       _rele_off
   _close
     _go_close
     _go_close_alt
     _rele_off
   _fun_work
     _close
     _open
   _get_fun
   _get_jump
   _get_wsp
     _ADC_GetConversion
     _clear_alarm
     _start_alarm
   _hardware_work
   _start_setup
     _SYSTEM_Initialize
       _ADC_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR2_Initialize
         _TMR2_SetInterruptHandler
       _WDT_Initialize
     _TMR0_SetInterruptHandler
     _TMR2_SetInterruptHandler
     _TMR2_StartTimer
     _eeprom_set
       _EEPROM_ReadByte
       _EEPROM_WriteByte
   _switch_wm
     _rele_off

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _zummer_switch *
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _ms_tick *
       _ms_100_work
       _ms_200_work
         _beep_double
           _beep_long
             _start_tone
           _beep_short
             _start_tone
         _beep_long
         _beep_short
       _sec_work
         _minute_tick
         _rele_tick
         _sec_30_work
       _stop_tone

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      48       4        0.0%
BITBANK0            50      0      14       5       25.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      3A       6       72.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      48       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jun 21 13:49:43 2022

                       __ccov116_end_blk1 03F2                         __ccov300_end_blk1 0375  
                       __ccov204_end_blk1 03C6                         __ccov140_end_blk2 0604  
                       __ccov124_end_blk3 0473                         __ccov108_end_blk5 053F  
                       __ccov220_end_blk6 01B5                         __ccov132_end_blk7 04E1  
                      __ccov212_end_blk10 03E6                       __ccov111_start_blk0 0607  
                     __ccov103_start_blk8 04F8                        __pcodecov_info_hdr 0000  
        __end_of_TMR2_SetInterruptHandler 0689                        get_fun@fun_counter 004A  
                       __ccov133_end_blk0 0590                         __ccov117_end_blk2 03F7  
                       __ccov301_end_blk2 0379                         __ccov205_end_blk2 03C8  
                       __ccov125_end_blk4 0480                         __ccov141_end_blk4 0607  
                       __ccov109_end_blk6 0543                         __ccov221_end_blk7 01BD  
                                      l23 05E0                                        l26 0678  
                                      l61 0526                                        l29 06A5  
                                      l46 0670                                        l64 052B  
                                      l90 05B7                                        _RD 0CA8  
                                      _WR 0CA9                             ?_go_close_alt 0073  
                                      _ff 0079                 __end_of_autorotation_work 01E7  
                         _timer0ReloadVal 0057                         __ccov230_end_blk0 054C  
                       __ccov142_end_blk0 05C2                         __ccov214_end_blk0 019C  
                       __ccov134_end_blk1 0596                         __ccov118_end_blk3 03FC  
                       __ccov150_end_blk3 0497                         __ccov310_end_blk3 00D2  
                       __ccov302_end_blk3 037A                         __ccov206_end_blk3 03CB  
                       __ccov126_end_blk6 0483                         __ccov222_end_blk9 01CB  
                      __ccov213_end_blk14 03E8                       __ccov397_start_blk9 045C  
                                     l135 05F3                                       l400 01E5  
                                     l321 040F                                       l138 06AE  
                                     l325 0480                                       l341 0604  
                                     l501 023D                                       l157 0687  
                                     l334 059C                                       l351 0497  
                                     l344 05C6                                       l336 0596  
                                     l520 0385                                       l329 04DE  
                                     l345 05C9                                       l337 05A1  
                                     l193 068E                                       l177 058A  
                                     l346 05CC                                       l362 04C2  
                                     l354 04A1                                       l514 027E  
                                     l522 0387                                       l523 0389  
                                     l357 04AE                                       l349 048D  
                                     l382 06A9                                       l390 03D2  
                                     l359 04B8                                       l471 037E  
                                     l543 032F                                       l464 0572  
                                     l544 0344                                       l529 03B9  
                                     l482 00CE                                       l387 0236  
                                     l379 0680                                       l467 0375  
                                     l395 03E6                                       l484 00D0  
                                     l469 037A                                       l573 043A  
                                     l549 0415                                       l582 0511  
                                     l495 012A                                       l575 043F  
                                     l576 045C                                       l579 04FC  
                                     _GIE 005F                                       u250 0590  
                             _start_alarm 067A                                       u251 058F  
                                     u260 0596                                       u261 0595  
                                     u270 059C                                       _PR2 001B  
                                     u271 059B                      __ccov270_start_blk10 02A6  
                    __ccov334_start_blk13 0256                      __ccov326_start_blk30 012A  
                    __ccov262_start_blk31 00C8                      __ccov342_start_blk25 0279  
                    __ccov318_start_blk17 0103                      __ccov174_start_blk18 0170  
                    __ccov254_start_blk19 009B                         __ccov127_end_blk0 04C9  
                       __ccov231_end_blk1 0550                         __ccov143_end_blk1 05C6  
                       __ccov215_end_blk1 01A1                         __ccov135_end_blk2 059C  
                       __ccov119_end_blk4 040F                         __ccov151_end_blk4 049D  
                       __ccov303_end_blk4 037E                         __ccov207_end_blk4 03D2  
                       __ccov311_end_blk5 00DA                               _start_setup 0306  
                            ?_go_open_alt 0073                           _TMR2_Initialize 05E2  
                      __ccov22_start_blk0 0514                                       wreg 0009  
                       __ccov240_end_blk0 004E                         __ccov128_end_blk1 04CF  
                       __ccov144_end_blk2 05C9                         __ccov216_end_blk2 01A6  
                       __ccov232_end_blk3 0556                         __ccov136_end_blk3 05A1  
                       __ccov400_end_blk3 0508                         __ccov152_end_blk5 04A1  
                       __ccov312_end_blk6 00E5                         __ccov208_end_blk6 03D8  
                       __ccov304_end_blk7 0381                         __ccov160_end_blk9 04C5  
                            ?_sec_30_work 0073                       __ccov104_start_blk0 052D  
                     __ccov112_start_blk1 060B                       __ccov120_start_blk6 040F  
                                    l2000 05B3                                      l2002 0672  
                                    l2010 05E2                                      l2004 0675  
                                    l2020 05F0                                      l2012 05E5  
                                    l2022 0669                                      l2006 0676  
                                    l2030 057A                                      l2014 05E6  
                                    l2200 04B2                                      l2024 066C  
                                    l2032 057D                                      l2016 05E7  
                                    l2008 06A2                                      l2202 04BE  
                                    l2050 03FC                                      l2042 03E8  
                                    l2026 066D                                      l2034 0581  
                                    l2018 05E9                                      l2060 04D9  
                                    l2052 04C5                                      l2044 03EC  
                                    l2036 0582                                      l2028 0575  
                                    l2300 03C6                                      l2054 04C9  
                                    l2070 05B9                                      l2046 03F2  
                                    l2038 0583                                      l2310 03DF  
                                    l2302 03C8                                      l2056 04CF  
                                    l2064 05F5                                      l2072 05C2  
                                    l2320 01A6                                      l2048 03F7  
                                    l2400 026D                                      l2312 03E2  
                                    l2304 03CB                                      l2058 04D4  
                                    l2066 05F9                                      l2322 01AB  
                                    l2330 01BD                                      l2314 018D  
                                    l2402 0275                                      l2410 0381  
                                    l2162 05CE                                      l2306 03D8  
                                    l2180 0463                                      l2068 05FF  
                                    l2340 01DF                                      l2332 01CB  
                                    l2324 01B0                                      l2316 019C  
                                    l1380 0590                                      l2404 0279  
                                    l2420 03A4                                      l2412 038E  
                                    l2308 03DD                                      l2182 0469  
                                    l2342 01E2                                      l2334 01D0  
                                    l2326 01B3                                      l2318 01A1  
                                    l2190 0487                                      l2270 01FB  
                                    l2262 01E7                                      l2406 027A  
                                    l2430 03B5                                      l2422 03A5  
                                    l2414 0394                                      l2184 046E  
                                    l2336 01D5                                      l2328 01B5  
                                    l2192 0491                                      l2272 0200  
                                    l2264 01EB                                      l2280 0210  
                                    l2408 027C                                      l2432 03B7  
                                    l2424 03A8                                      l2416 0399  
                                    l2600 00DA                                      l2176 06AC  
                                    l2186 0473                                      l2178 045F  
                                    l2338 01DA                                      l1378 058C  
                                    l2194 049D                                      l2290 0229  
                                    l2282 0214                                      l2274 0205  
                                    l2266 01F1                                      l2426 03B0  
                                    l2418 03A0                                      l2610 00F9  
                                    l2602 00E5                                      l2196 04A4  
                                    l2188 0483                                      l2292 022E  
                                    l2284 021A                                      l2276 020A  
                                    l2268 01F6                                      l2380 0247  
                                    l2428 03B4                                      l2620 0118  
                                    l2612 0103                                      l2604 00E7  
                                    l2198 04A8                                      l2294 0232  
                                    l2286 021F                                      l2278 020C  
                                    l2390 025B                                      l2382 0249  
                                    l2622 011F                                      l2614 0108  
                                    l2606 00E9                                      l1662 0346  
                                    l2550 04FC                                      l2630 0309  
                                    l2288 0224                                      l2392 025D  
                                    l2384 024B                                      l2376 0239  
                                    l2624 0122                                      l2616 010F  
                                    l2608 00F3                                      l1664 0372  
                                    l2552 0501                                      l2560 043A  
                                    l2640 032A                                      l2632 030A  
                                    l2296 03BC                                      l2394 0265  
                                    l2386 0250                                      l2378 023F  
                                    l2626 0128                                      l2618 0112  
                                    l1666 0379                                      l2554 0508  
                                    l2570 045A                                      l2562 0444  
                                    l2650 0336                                      l2642 032B  
                                    l2634 031C                                      l2298 03C0  
                                    l2396 0269                                      l2388 0256  
                                    l2580 052A                                      l2572 0515  
                                    l1932 0682                                      l2556 050F  
                                    l2564 044E                                      l2660 033F  
                                    l2652 0338                                      l2644 032C  
                                    l2636 031F                                      l2628 0306  
                                    l2398 026A                                      l2574 051F  
                                    l1934 0689                                      l2566 0453  
                                    l2590 055E                                      l2662 0341  
                                    l2654 033A                                      l2646 032D  
                                    l2638 0328                                      l2576 0520  
                                    l2584 067A                                      l2568 0454  
                                    l2592 0566                                      l2664 0343  
                                    l2656 033C                                      l2648 032E  
                                    l2680 0412                                      l2578 0524  
                                    l2586 067E                                      l2594 056B  
                                    l2658 033E                                      l2682 0416  
                                    l2588 06A7                                      l2596 00CA  
                                    l2684 0419                                      l2598 00D2  
                                    l1990 05A3                                      l2686 041D  
                                    l1992 05A6                                      l2688 0432  
                                    l1994 05A9                                      l1996 05AB  
                                    l1998 05AE                         __ccov161_end_blk0 0131  
                       __ccov241_end_blk1 0052                         __ccov129_end_blk2 04D4  
                       __ccov145_end_blk3 05CC                         __ccov217_end_blk3 01AB  
                       __ccov233_end_blk4 0557                         __ccov137_end_blk5 05A3  
                       __ccov401_end_blk5 050F                         __ccov209_end_blk7 03DD  
                       __ccov313_end_blk8 00E7                         __ccov153_end_blk9 04A4  
                                    u1110 036C                                      u1030 034C  
                                    u1111 0369                                      u1031 0349  
                                    u2000 04A8                                      u1104 0366  
                                    u2001 04A7                                      u2010 04B2  
                                    u1130 0372                                      u1050 0354  
                                    u2011 04B1                                      u1131 0371  
                                    u1051 0351                                      u2020 04BE  
                                    u1140 0379                                      u1124 036E  
                                    u1044 034E                                      u2021 04BD  
                                    u1141 0378                                      u1070 035C  
                                    u1071 0359                                      u2200 021A  
                                    u2120 01EB                                      u1064 0356  
                                    u2201 0219                                      u2121 01EA  
                                    u2210 021F                                      u2130 01F1  
                                    u1090 0364                                      u2211 021E  
                                    u2131 01F0                                      u1091 0361  
                                    u2300 01A1                                      u2220 0224  
                                    u2140 01F6                                      u1084 035E  
                                    u2301 01A0                                      u2221 0223  
                                    u2141 01F5                                      _LATA 010C  
                                    u2310 01A6                                      u2230 0229  
                                    u2150 01FB                                      u2311 01A5  
                                    u2231 0228                                      u2151 01FA  
                                    _LATC 010E                                      u2320 01AB  
                                    u1600 03F7                                      u2240 022E  
                                    u2160 0200                                      u2321 01AA  
                                    u1601 03F6                                      u2241 022D  
                                    u2161 01FF                                      u1610 04C9  
                                    u2330 01B0                                      u2170 0205  
                                    u2250 03C0                                      u1611 04C8  
                                    u2331 01AF                                      u2171 0204  
                                    u2251 03BF                                      u1620 04CF  
                                    u2340 01CB                                      u2180 020A  
                                    u2500 03A0                                      u2260 03C6  
                                    u1621 04CE                                      u2341 01CA  
                                    u2181 0209                                      u2501 039F  
                                    u2261 03C5                                      u1630 04D4  
                                    u2350 01D0                                      u2190 0214  
                                    u2510 03B0                                      u2270 03D8  
                                    u1631 04D3                                      u2351 01CF  
                                    u2191 0213                                      u2511 03AF  
                                    u2271 03D7                                      u1640 05F9  
                                    u2360 01D5                                      u2440 023D  
                                    u2280 03DD                                      u1641 05F8  
                                    u2361 01D4                                      u2345 01C7  
                                    u2441 023C                                      u2281 03DC  
                                    u1650 05FF                                      u2370 01DA  
                                    u2290 019C                                      u2450 0250  
                                    u1651 05FE                                      u2371 01D9  
                                    u2291 019B                                      u2451 024F  
                                    u1660 05C2                                      u2380 01DF  
                                    u1580 03EC                                      u2460 0265  
                                    u2700 052A                                      u1661 05C1  
                                    u2381 01DE                                      u1581 03EB  
                                    u2461 0264                                      u2701 0529  
                                    u1590 03F2                                      u2470 0275  
                                    u2710 056B                                      u2295 0198  
                                    u1591 03F1                                      u2471 0274  
                                    u2711 056A                                      u2480 0385  
                                    u2720 00CE                                      u2640 0501  
                                    u2481 0384                                      u2721 00CD  
                                    u2641 0500                                      u2490 038E  
                                    u2730 00F3                                      u2650 0508  
                                    u2491 038D                                      u2731 00F2  
                                    u2651 0507                                      u1940 0463  
                                    u2740 0103                                      u2660 043F  
                                    u1941 0462                                      u2741 0102  
                                    u2661 043E                                      u1950 0469  
                                    u2750 010F                                      u1951 0468  
                                    u2751 010E                                      u1960 046E  
                                    u2760 011F                                      u2680 0459  
                                    u1961 046D                                      u2761 011E  
                                    u2681 0457                                      u1970 0487  
                                    u2770 041D                                      u1971 0486  
                                    u2675 0443                                      u2771 041C  
                                    u1980 0491                                      u1981 0490  
                                    u1990 049D                                      u2694 045A  
                                    u1991 049C                                      u2847 00D5  
                                    u2857 0521                                      u2867 0242  
                                    _TMR0 0015                                      _TMR2 001A  
                                    _WREN 0CAA                                      _WPUA 020C  
                                    _WPUC 020E                         __ccov138_end_blk0 05F9  
                       __ccov154_end_blk0 04A8                         __ccov306_end_blk1 0666  
                       __ccov162_end_blk1 0138                         __ccov242_end_blk2 0057  
                       __ccov146_end_blk4 05CE                         __ccov218_end_blk4 01B0  
                       __ccov234_end_blk5 055C                         __ccov330_end_blk5 0249  
                       __ccov402_end_blk6 0511                                      _main 0412  
                      __ccov223_end_blk10 01D0                                      _open 04A4  
                                    fsr0h 0005                                      indf0 0000  
                                    fsr0l 0004                      EEPROM_WriteByte@addr 0078  
                                    btemp 007E                           ?_go_close_short 0073  
                                    start 002D                         __ccov147_end_blk0 0487  
                       __ccov139_end_blk1 05FF                         __ccov155_end_blk1 04AE  
                       __ccov307_end_blk3 0669                         __ccov163_end_blk3 013C  
                       __ccov243_end_blk3 005B                         __ccov219_end_blk5 01B3  
                       __ccov235_end_blk8 055E                         __ccov331_end_blk8 024B  
                       __ccov403_end_blk8 0514                        __ccov31_start_blk0 05A3  
                      __ccov23_start_blk1 051F                         __ccov236_end_blk0 063F  
                       __ccov180_end_blk0 067E                         __ccov308_end_blk0 00CE  
                       __ccov148_end_blk1 048D                         __ccov156_end_blk2 04B2  
                       __ccov164_end_blk4 0144                         __ccov244_end_blk4 005D  
                      __ccov224_end_blk11 01D5                        __ccov320_end_blk21 0112  
                     __ccov121_start_blk0 045F                       __ccov105_start_blk1 0531  
                     __ccov113_start_blk3 0611                            ??_go_close_alt 0075  
                    __ccov200_start_blk16 022E                         __ccov237_end_blk1 0643  
                       __ccov181_end_blk1 0680                         __ccov309_end_blk1 00D0  
                       __ccov149_end_blk2 0491                         __ccov157_end_blk3 04B8  
                       __ccov165_end_blk5 0148                         __ccov245_end_blk6 0061  
                 __end_of_TMR0_Initialize 058C            ??_TMR0_DefaultInterruptHandler 0073  
           __end_of_OSCILLATOR_Initialize 067A                                     ?_main 0073  
                       __ccov182_end_blk2 0682                         __ccov238_end_blk3 0649  
                       __ccov158_end_blk4 04BE                         __ccov190_end_blk5 0205  
                       __ccov350_end_blk5 0394                         __ccov166_end_blk6 014F  
                       __ccov246_end_blk7 0065                                     _EEADR 0191  
                                   ?_open 0073                        __ccov225_end_blk12 01DA  
                      __ccov321_end_blk22 0118                       __ccov399_start_blk2 04FB  
                            __ccovbit0_24 019E                              __ccovbit0_19 0384  
                            __ccovbit1_15 0388                              __ccovbit1_23 0380  
                            __ccovbit1_40 018E                              __ccovbit1_25 019D  
                            __ccovbit1_33 0195                              __ccovbit1_18 0385  
                            __ccovbit1_26 019C                              __ccovbit1_36 0192  
                            __ccovbit1_44 018A                              __ccovbit1_52 0182  
                            __ccovbit2_30 0198                              __ccovbit1_55 017F  
                            __ccovbit1_63 0177                              __ccovbit2_16 0387  
                            __ccovbit1_48 0186                              __ccovbit2_41 018D  
                            __ccovbit1_81 0165                              __ccovbit1_58 017C  
                            __ccovbit1_82 0164                              __ccovbit2_27 019B  
                            __ccovbit1_68 0172                              __ccovbit3_21 0382  
                            __ccovbit2_37 0191                              __ccovbit2_45 0189  
                            __ccovbit2_53 0181                              __ccovbit2_56 017E  
                            __ccovbit2_80 0166                              __ccovbit1_96 0156  
                            __ccovbit2_49 0185                              __ccovbit3_34 0194  
                            __ccovbit3_50 0184                              __ccovbit2_83 0163  
                                   _T2CON 001C                              __ccovbit3_64 0176  
                            __ccovbit4_17 0386                              __ccovbit5_10 038D  
                            __ccovbit4_42 018C                              __ccovbit3_59 017B  
                            __ccovbit4_60 017A                              __ccovbit3_84 0162  
                            __ccovbit5_22 0381                              __ccovbit4_38 0190  
                            __ccovbit4_46 0188                              __ccovbit4_54 0180  
                            __ccovbit4_57 017D                              __ccovbit4_65 0175  
                            __ccovbit6_11 038C                              __ccovbit5_35 0193  
                            __ccovbit5_51 0183                              __ccovbit6_20 0383  
                            __ccovbit5_61 0179                              __ccovbit4_69 0171  
                            __ccovbit4_85 0161                              __ccovbit6_14 0389  
                            __ccovbit6_31 0197                              __ccovbit4_97 0155  
                            __ccovbit5_66 0174                              __ccovbit6_43 018B  
                            __ccovbit6_28 019A                              __ccovbit6_70 0170  
                            __ccovbit5_86 0160                              __ccovbit6_39 018F  
                            __ccovbit7_47 0187                              __ccovbit7_71 016F  
                            __ccovbit6_87 015F                              __ccovbit8_32 0196  
                        __end_of_RELE_GAP 06C8                              __ccovbit6_98 0154  
                            __ccovbit8_29 0199                              __ccovbit7_99 0153  
                            __ccovbit9_62 0178                              __ccovbit8_88 015E  
                            __ccovbit9_67 0173                                     i1l113 0029  
                                   i1l114 002A                                     i1l108 0014  
                                   i1l302 0699                                     i1l312 0543  
                                   i1l160 06C2                                     i1l154 0639  
                                   i1l307 04F8                                     i1l411 0649  
                                   i1l317 0616                                     i1l190 0629  
                                   i1l406 055C                                     i1l414 005D  
                                   i1l415 005B                                     i1l432 029B  
                                   i1l442 02C1                                     i1l419 009B  
                                   i1l196 06B3                                     i1l372 016D  
                                   i1l460 0304                                     i1l365 0138  
                                   i1l429 00C8                                     i1l366 018B  
                                   i1l447 0655                                     i1l367 0154  
                                   i1l448 0658                                     i1l474 065A  
                                   i1l299 069F                                     i1l476 0666  
                    __ccov175_start_blk20 0175                      __ccov255_start_blk20 00A1  
                    __ccov319_start_blk20 0108                      __ccov271_start_blk13 02AD  
                    __ccov335_start_blk16 025B                      __ccov343_start_blk26 027A  
                                   _TRISA 008C                                     _TRISC 008E  
                         ??_hardware_work 0075                         __ccov263_end_blk0 0285  
                       __ccov327_end_blk0 023D                         __ccov183_end_blk0 06A9  
                       __ccov239_end_blk5 064B                         __ccov159_end_blk5 04C2  
                       __ccov191_end_blk6 020A                         __ccov167_end_blk7 0154  
                       __ccov351_end_blk7 0399                         __ccov247_end_blk8 0070  
               ?_TMR0_SetInterruptHandler 0075                        __ccov40_start_blk1 000A  
                      __ccov32_start_blk1 05A6                        __ccov24_start_blk2 0520  
                        __end_of_TMR0_ISR 062B                           __end_of_get_fun 0281  
                        __end_of_TMR2_ISR 063B                           __end_of_get_wsp 012D  
                         __end_of_go_open 04E1                         __ccov280_end_blk0 02C9  
                       __ccov264_end_blk1 028B                         __ccov328_end_blk1 023F  
                       __ccov184_end_blk1 06AC                         __ccov192_end_blk7 020C  
                       __ccov352_end_blk9 03A0                        __ccov314_end_blk11 00E9  
                      __ccov170_end_blk12 0166                        __ccov250_end_blk13 007F  
                      __ccov226_end_blk13 01DF                        __ccov322_end_blk24 011F  
                                   _close 0483                            _WDT_Initialize 06A2  
                     __ccov122_start_blk1 0463                       __ccov106_start_blk2 0537  
                     __ccov130_start_blk3 04D4                       __ccov114_start_blk5 0616  
                     __ccov210_start_blk8 03DD                           __end_of_ms_tick 0306  
                       __ccov185_end_blk0 01EB                         __ccov281_end_blk1 02CF  
                       __ccov265_end_blk2 0290                         __ccov329_end_blk3 0247  
                       __ccov193_end_blk8 0210                            __pbitbssCOMMON 0380  
                      _SHORT_ZUMMER_DELAY 06CE                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                       __ccov346_end_blk0 0385                         __ccov362_end_blk0 0309  
                       __ccov186_end_blk1 01F1                         __ccov282_end_blk2 02D3  
                       __ccov266_end_blk4 0296                        __ccov171_end_blk13 0167  
                      __ccov315_end_blk13 00F3                        __ccov251_end_blk14 0086  
                      __ccov227_end_blk14 01E2                        __ccov323_end_blk25 0122  
                         _TMR2_StartTimer 06AC                            __pcodecov_info 0000  
                       __ccov347_end_blk1 0387                         __ccov363_end_blk1 030A  
                       __ccov187_end_blk2 01F6                         __ccov283_end_blk3 02DA  
                       __ccov267_end_blk5 029B                        __ccov41_start_blk2 000F  
                      __ccov33_start_blk2 05A9                        __ccov25_start_blk3 0524  
                         __initialization 002E                            eeprom_set@vers 0059  
                       __ccov276_end_blk0 064F                         __ccov364_end_blk2 031C  
                       __ccov188_end_blk3 01FB                         __ccov348_end_blk3 0389  
                       __ccov284_end_blk4 02DE                         __ccov268_end_blk8 02A1  
                            __end_of_main 0439                        __ccov332_end_blk10 0250  
                      __ccov172_end_blk14 016D                        __ccov316_end_blk14 00F9  
                      __ccov228_end_blk15 01E5                        __ccov340_end_blk23 0275  
                      __ccov252_end_blk16 008A                        __ccov324_end_blk26 0128  
                      __ccov260_end_blk28 00C5                              __end_of_open 04C5  
                     __ccov115_start_blk0 03E8                       __ccov203_start_blk0 03BC  
                     __ccov123_start_blk2 0469                       __ccov107_start_blk4 053A  
                     __ccov131_start_blk4 04D9                       __ccov211_start_blk9 03DF  
                    __ccov201_start_blk17 0232                         __ccov277_end_blk1 0655  
                       __ccov365_end_blk3 031F                         __ccov189_end_blk4 0200  
                       __ccov349_end_blk4 038E                         __ccov285_end_blk7 02DF  
                       __ccov269_end_blk9 02A6                   __end_of_TMR2_Initialize 05F5  
             ?_INTERRUPT_InterruptManager 0073                  _TMR2_SetInterruptHandler 0682  
                                  ??_main 0079                                    ??_open 0075  
                       __ccov278_end_blk2 0658                         __ccov390_end_blk2 043F  
                       __ccov366_end_blk4 0328                         __ccov286_end_blk8 02E0  
                      __ccov333_end_blk11 0256                        __ccov173_end_blk15 0170  
                      __ccov341_end_blk24 0279                        __ccov317_end_blk16 0103  
                      __ccov229_end_blk17 01E7                        __ccov253_end_blk18 009B  
                      __ccov325_end_blk28 012A                        __ccov261_end_blk29 00C8  
                            ?_minute_tick 0073                      __ccov168_start_blk10 0154  
                    __ccov248_start_blk10 0070                      __ccov360_start_blk20 03B7  
                    __ccov176_start_blk21 017C                      __ccov256_start_blk21 00A5  
                    __ccov272_start_blk14 02B2                      __ccov336_start_blk18 025D  
                    __ccov344_start_blk29 027C                         __ccov295_end_blk0 0566  
                       __ccov383_end_blk0 0415                         __ccov391_end_blk3 0444  
                       __ccov279_end_blk4 065A                         __ccov367_end_blk6 032A  
                       __ccov287_end_blk9 02E8                    __end_of_WDT_Initialize 06A7  
                      __ccov50_start_blk2 05E6                        __ccov42_start_blk3 0014  
                      __ccov34_start_blk3 05AB                        __ccov26_start_blk5 0526  
                       __ccov296_end_blk1 056B                         __ccov384_end_blk1 0416  
                       __ccov392_end_blk4 044E                         __ccov368_end_blk9 032B  
                                  ?_close 0073                                    _ADCON0 009D  
                                  _ADCON1 009E                        __ccov270_end_blk10 02AD  
                      __ccov334_end_blk13 025B                        __ccov326_end_blk30 012D  
                      __ccov262_end_blk31 00CA                        __ccov342_end_blk25 027A  
                      __ccov318_end_blk17 0108                        __ccov174_end_blk18 0175  
                      __ccov254_end_blk19 00A1                             __ccovbit10_12 038B  
                           __ccovbit10_72 016E                             __ccovbit12_13 038A  
                           __ccovbit11_89 015D                             __ccovbit12_90 015C  
                           __ccovbit20_76 016A                                    _ADRESH 009C  
                           __ccovbit13_91 015B                                    _ADRESL 009B  
                     __ccov116_start_blk1 03EC                       __ccov300_start_blk1 0372  
                     __ccov204_start_blk1 03C0                       __ccov140_start_blk2 05FF  
                     __ccov124_start_blk3 046E                       __ccov108_start_blk5 053E  
                           __ccovbit14_73 016D                       __ccov220_start_blk6 01B3  
                     __ccov132_start_blk7 04DE                                    _EEDATA 0193  
                           __ccovbit14_92 015A                             __ccovbit22_77 0169  
                           __ccovbit15_74 016C                             __ccovbit15_93 0159  
                           __ccovbit23_78 0168                                    _EECON2 0196  
                           __ccovbit17_94 0158                             __ccovbit18_75 016B  
                           __ccovbit27_79 0167                             __ccovbit19_95 0157  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  _ANSELC 018E                             __ccovbit1_102 0150  
                           __ccovbit1_113 0145                             __ccovbit1_132 0132  
                           __ccovbit1_117 0141                             __ccovbit1_142 0128  
                           __ccovbit1_152 011E                             __ccovbit2_103 014F  
                           __ccovbit2_133 0131                             __ccovbit2_150 0120  
                           __ccovbit2_143 0127                             __ccovbit3_104 014E  
                           __ccovbit3_120 013E                             __ccovbit3_114 0144  
                           __ccovbit3_118 0140                             __ccovbit3_145 0125  
                                  _BORCON 0116                             __ccovbit3_155 011B  
                           __ccovbit3_181 0101                             __ccovbit4_105 014D  
                           __ccovbit4_121 013D                             __ccovbit4_134 0130  
                           __ccovbit4_151 011F                             __ccovbit4_144 0126  
                           __ccovbit4_153 011D                             __ccovbit4_146 0124  
                           __ccovbit4_178 0104                             __ccovbit5_115 0143  
                           __ccovbit5_119 013F                             __ccovbit5_135 012F  
                           __ccovbit5_170 010C                             __ccovbit7_106 014C  
                           __ccovbit6_179 0103                             __ccovbit7_154 011C  
                           __ccovbit7_171 010B                             __ccovbit8_122 013C  
                           __ccovbit8_116 0142                             __ccovbit8_136 012E  
                           __ccovbit8_182 0100                             __ccovbit9_180 0102  
                                  i1l2100 00A5                                    i1l2110 00C5  
                                  i1l2102 00AC                                    i1l2120 0296  
                                  i1l2112 0281                                    i1l2104 00BA  
                                  i1l2040 0696                                    i1l2130 02B2  
                                  i1l2122 02A1                                    i1l2114 0285  
                                  i1l2106 00BC                                    i1l2210 02C4  
                                  i1l2132 02B6                                    i1l2124 02A6  
                                  i1l2116 028B                                    i1l2108 00C2  
                                  i1l2220 02DE                                    i1l2212 02C9  
                                  i1l2134 02BD                                    i1l2118 0290  
                                  i1l2230 02F3                                    i1l2222 02DF  
                                  i1l2214 02CF                                    i1l2136 064B  
                                  i1l2128 02AD                                    i1l2080 0057  
                                  i1l2224 02E0                                    i1l2216 02D3  
                                  i1l2250 061A                                    i1l2138 064F  
                                  i1l2090 0078                                    i1l2082 0061  
                                  i1l2074 0049                                    i1l2226 02E8  
                                  i1l2234 02F6                                    i1l2218 02DA  
                                  i1l2252 061D                                    i1l2092 007F  
                                  i1l2084 0065                                    i1l2076 004E  
                                  i1l2236 02FD                                    i1l2228 02EB  
                                  i1l2260 0633                                    i1l2246 065A  
                                  i1l2254 0623                                    i1l2094 0086  
                                  i1l2086 0070                                    i1l2078 0052  
                                  i1l2238 0300                                    i1l2248 0619  
                                  i1l2096 008A                                    i1l2088 0074  
                                  i1l2256 062B                         __ccov297_end_blk2 0572  
                       __ccov385_end_blk2 0419                                    i1l2098 00A1  
                                  i1l2258 062D                         __ccov393_end_blk5 0453  
                                  i1l1910 04E5                                    u210_20 0623  
                                  i1l1920 052D                                    i1l1912 04EA  
                                  u210_21 0622                                    i1l1906 069C  
                                  i1l1930 053F                                    i1l1922 0531  
                                  i1l1914 04EE                                    i1l2490 000F  
                                  i1l1924 0537                                    i1l1916 04F3  
                                  i1l1908 04E1                                    i1l1940 0611  
                                  i1l2492 0019                                    i1l1926 053A  
                                  i1l1918 04F4                                    i1l1950 0144  
                                  i1l1942 012D                                    i1l2494 001E  
                                  i1l2486 0006                                    i1l1928 053E  
                                  i1l1936 0607                                    i1l1960 0166  
                                  i1l1952 0148                                    i1l1944 0131  
                                  u203_20 02CF                                    u211_20 0633  
                                  i1l2496 0024                                    i1l2488 000A  
                                  u203_21 02CE                                    u211_21 0632  
                                  i1l1938 060B                                    i1l1970 0180  
                                  i1l1962 0167                                    i1l1954 014F  
                                  i1l1980 0556                                    i1l1972 0187  
                                  i1l1964 0170                                    i1l1956 015A  
                                  i1l1948 013C                                    i1l1982 0557  
                                  i1l1974 0546                                    i1l1966 0175  
                                  i1l1958 0160                                    u140_20 04E5  
                                  i1l1976 054C                                    i1l1968 017C  
                                  i1l1984 063B                                    u204_20 02DA  
                                  u140_21 04E4                                    u204_21 02D9  
                                  i1l1978 0550                                    i1l1986 063F  
                                  i1l1988 0643                                    u141_20 04EA  
                                  u205_20 02E8                                    u141_21 04E9  
                                  u205_21 02E7                                    u142_20 0531  
                                  u150_20 015A                                    u206_20 02FD  
                                  u142_21 0530                                    u150_21 0159  
                                  u206_21 02FC                                    u143_20 0537  
                                  u151_20 0160                                    u143_21 0536  
                                  u151_21 015F                                    u208_20 0664  
                                  u144_20 060B                                    u152_20 0166  
                                  u208_21 0661                                    u144_21 060A  
                                  u152_21 0165                                    u153_20 017C  
                                  u145_20 0131                                    u153_21 017B  
                                  u145_21 0130                                    u209_24 0666  
                                  u154_20 0187                                    u146_20 0137  
                                  u170_20 0065                                    u154_21 0186  
                                  u146_21 0136                                    u170_21 0064  
                                  u155_20 054C                                    u147_20 013C  
                                  u171_20 0078                                    u155_21 054B  
                                  u147_21 013B                                    u171_21 0077  
                                  u180_20 02A1                                    u156_20 0556  
                                  u148_20 0144                                    u172_20 007F  
                                  u252_20 000A                                    u180_21 02A0  
                                  u156_21 0555                                    u148_21 0143  
                                  u172_21 007E                                    u252_21 0009  
                                  u181_20 02A6                                    u149_20 014F  
                                  u157_20 063F                                    u173_20 0086  
                                  u253_20 000F                                    u181_21 02A5  
                                  u149_21 014E                                    u157_21 063E  
                                  u173_21 0085                                    u253_21 000E  
                                  u182_20 02AC                                    u174_20 00A1  
                                  u254_20 0019                                    u182_21 02AB  
                                  u174_21 00A0                                    u254_21 0018  
                                  u183_20 02B2                                    u175_20 00AC  
                                  u167_20 0052                                    u255_20 001E  
                                  u183_21 02B1                                    u175_21 00AB  
                                  u167_21 0051                                    u255_21 001D  
                                  u184_20 02BD                                    u176_20 00C2  
                                  u168_20 0057                                    u256_20 0024  
                                  u184_21 02BC                                    u176_21 00C1  
                                  u168_21 0056                                    u256_21 0023  
                                  u185_20 064F                                    u177_20 0285  
                                  u169_20 0061                                    u185_21 064E  
                                  u177_21 0284                                    u169_21 0060  
                                  u186_20 0655                                    u178_20 028B  
                                  u186_21 0654                                    u178_21 028A  
                        __ccov10_end_blk1 066D                                    u179_20 0296  
                                  u179_21 0295                          _GOOD_WSP_VOLTAGE 06B6  
                                  _OSCCON 0099                                    _WDTCON 0097  
                       __ccov386_end_blk3 041D                         __ccov298_end_blk4 0575  
                       __ccov394_end_blk6 0454                        __ccov175_end_blk20 017C  
                      __ccov255_end_blk20 00A5                        __ccov319_end_blk20 010F  
                      __ccov271_end_blk13 02B2                        __ccov335_end_blk16 025D  
                      __ccov343_end_blk26 027C                          __ccov11_end_blk2 0670  
                       __ccov299_end_blk0 0372                         __ccov387_end_blk4 0432  
                       __ccov395_end_blk7 045A                          __ccov12_end_blk3 0672  
                      __ccov51_start_blk3 05E7                        __ccov43_start_blk4 0019  
                      __ccov35_start_blk4 05AE                        __ccov27_start_blk7 052A  
                        __end_of_get_jump 03BC                          __end_of_go_close 0412  
                       __ccov388_end_blk6 0438                         __ccov396_end_blk8 045C  
                      __ccov168_end_blk10 015A                        __ccov248_end_blk10 0074  
                      __ccov360_end_blk20 03B9                        __ccov176_end_blk21 0180  
                      __ccov256_end_blk21 00AC                        __ccov272_end_blk14 02B6  
                      __ccov336_end_blk18 0265                        __ccov344_end_blk29 027E  
                     __ccov133_start_blk0 058C                       __ccov117_start_blk2 03F2  
                     __ccov301_start_blk2 0375                       __ccov205_start_blk2 03C6  
                     __ccov125_start_blk4 0473                       __ccov141_start_blk4 0604  
                     __ccov109_start_blk6 053F                       __ccov221_start_blk7 01B5  
             __end_of_MELODY_REPEAT_DELAY 06C5                      __ccov202_start_blk19 0236  
                        ?_TMR0_Initialize 0073                         __ccov397_end_blk9 045F  
                       ??_EEPROM_ReadByte 0075                          __end_of_fun_work 0239  
                        __ccov22_end_blk0 051F                  __end_of_EEPROM_WriteByte 045F  
                        __end_of_sec_work 00CA                                 ??_get_fun 0075  
                        __end_of_rele_off 05CE                                 ??_get_wsp 0077  
                               ??_go_open 0075                        __ccov353_end_blk10 03A4  
                      __ccov169_end_blk11 0160                        __ccov249_end_blk12 0078  
                      __ccov177_end_blk22 0187                        __ccov257_end_blk22 00BA  
                      __ccov361_end_blk22 03BC                        __ccov345_end_blk31 0281  
                      __ccov273_end_blk16 02BD                        __ccov337_end_blk19 0269  
                        __ccov31_end_blk0 05A6                          __ccov23_end_blk1 0520  
           __end_of_RELE_POWER_WORK_DELAY 06CA                      __ccov353_start_blk10 03A0  
                    __ccov169_start_blk11 015A                      __ccov249_start_blk12 0074  
                    __ccov177_start_blk22 0180                      __ccov257_start_blk22 00AC  
                    __ccov361_start_blk22 03B9                      __ccov345_start_blk31 027E  
                    __ccov273_start_blk16 02B6                      __ccov337_start_blk19 0265  
                       __ccov399_end_blk2 0501                                 ??_ms_tick 0075  
                         ?_WDT_Initialize 0073                          __ccov40_end_blk1 000F  
                        __ccov32_end_blk1 05A9                          __ccov24_end_blk2 0524  
                      __ccov52_start_blk4 05E9                        __ccov44_start_blk5 001E  
                      __ccov36_start_blk5 05B3                        __ccov28_start_blk9 052B  
                  EEPROM_WriteByte@status 0397                  ADC_GetConversion@channel 0076  
                   _HIGH_WATER_RESISTANSE 06BE                   __end_of_TMR2_StartTimer 06B0  
TMR0_SetInterruptHandler@InterruptHandler 0075  TMR2_SetInterruptHandler@InterruptHandler 0075  
                      __ccov194_end_blk10 0214                        __ccov354_end_blk11 03A5  
                      __ccov290_end_blk12 02F6                        __ccov338_end_blk20 026A  
                      __ccov178_end_blk23 018B                        __ccov258_end_blk23 00BC  
                      __ccov370_end_blk15 032D                        __ccov274_end_blk17 02C1  
                        __ccov41_end_blk2 0014                          __ccov33_end_blk2 05AB  
                        __ccov25_end_blk3 0526                       __ccov230_start_blk0 0546  
                     __ccov142_start_blk0 05B9                       __ccov214_start_blk0 018D  
                     __ccov134_start_blk1 0590                       __ccov118_start_blk3 03F7  
                     __ccov150_start_blk3 0491                       __ccov310_start_blk3 00D0  
                     __ccov302_start_blk3 0379                       __ccov206_start_blk3 03C8  
                     __ccov126_start_blk6 0480                       __ccov222_start_blk9 01BD  
                    __end_of_go_close_alt 05A3                         _SYSTEM_Initialize 05CE  
                        __ccov50_end_blk2 05E7                          __ccov42_end_blk3 0019  
                        __ccov34_end_blk3 05AE                          __ccov26_end_blk5 052A  
                 __end_of__initialization 0046                        _AUTOROTATION_DELAY 06B0  
                      ?_SYSTEM_Initialize 0073                        __ccov195_end_blk11 021A  
                      __ccov355_end_blk12 03A8                        __ccov339_end_blk21 026D  
                      __ccov275_end_blk22 02C4                        __ccov291_end_blk16 02FD  
                      __ccov371_end_blk18 032E                        __ccov179_end_blk27 018D  
                      __ccov259_end_blk27 00C2                          __ccov51_end_blk3 05E9  
                        __ccov43_end_blk4 001E                          __ccov35_end_blk4 05B3  
                        __ccov27_end_blk7 052B                             _UP_RESISTANSE 06BA  
                        __ccov52_end_blk4 05F0                          __ccov44_end_blk5 0024  
                        __ccov36_end_blk5 05B7                        __ccov53_start_blk5 05F0  
                      __ccov45_start_blk6 0024                          __ccov28_end_blk9 052D  
                      __ccov37_start_blk6 05B7                            __pcstackCOMMON 0073  
                     ??_SYSTEM_Initialize 0078                     __end_of_zummer_switch 0669  
                               ?_TMR0_ISR 0073                        __ccov196_end_blk12 021F  
                      __ccov372_end_blk21 032F                        __ccov356_end_blk14 03B0  
                      __ccov292_end_blk17 0300                                 ?_TMR2_ISR 0073  
                      __ccov380_end_blk29 0343                             __end_of_close 04A4  
                        __ccov53_end_blk5 05F3                          __ccov45_end_blk6 0029  
                        __ccov37_end_blk6 05B9                       __ccov127_start_blk0 04C5  
                     __ccov231_start_blk1 054C                       __ccov143_start_blk1 05C2  
                     __ccov215_start_blk1 019C                       __ccov135_start_blk2 0596  
                     __ccov119_start_blk4 03FC                       __ccov151_start_blk4 0497  
                     __ccov303_start_blk4 037A                       __ccov207_start_blk4 03CB  
                     __ccov311_start_blk5 00D2                          ?_TMR2_Initialize 0073  
                        __ccov70_end_blk1 0689                          __ccov54_end_blk6 05F5  
                            ?_start_alarm 0073               get_wsp@bad_measures_counter 004B  
                      __ccov197_end_blk13 0224                        __ccov381_end_blk30 0344  
                      __ccov373_end_blk22 0336                        __ccov357_end_blk15 03B4  
                      __ccov293_end_blk18 0304                          __ccov71_end_blk0 06C4  
                        __ccov39_end_blk0 000A                          __ccov55_end_blk0 06AE  
                          _OPTION_REGbits 0095                              ?_start_setup 0073  
                    __ccov194_start_blk10 0210                      __ccov354_start_blk11 03A4  
                    __ccov290_start_blk12 02F3                      __ccov338_start_blk20 0269  
                    __ccov178_start_blk23 0187                      __ccov258_start_blk23 00BA  
                    __ccov370_start_blk15 032C                      __ccov274_start_blk17 02BD  
                        __ccov72_end_blk0 057A                          __ccov48_end_blk0 05E5  
                        __ccov56_end_blk1 06B0                        __ccov70_start_blk1 0687  
                      __ccov54_start_blk6 05F3                                   ??_close 0075  
                         __ccov1_end_blk0 05E0                                _beep_short 04E1  
               __end_of_SYSTEM_Initialize 05E2                          ??_go_close_short 0075  
                      __ccov294_end_blk20 0306                        __ccov198_end_blk14 0229  
                      __ccov382_end_blk31 0346                        __ccov374_end_blk23 0338  
                      __ccov358_end_blk16 03B5                          __ccov65_end_blk0 062D  
                        __ccov73_end_blk1 057D                          __ccov49_end_blk1 05E6  
                     __ccov240_start_blk0 0049                       __ccov128_start_blk1 04C9  
                     __ccov144_start_blk2 05C6                       __ccov216_start_blk2 01A1  
                     __ccov232_start_blk3 0550                       __ccov136_start_blk3 059C  
                     __ccov400_start_blk3 0501                       __ccov152_start_blk5 049D  
                     __ccov312_start_blk6 00DA                       __ccov208_start_blk6 03D2  
                     __ccov304_start_blk7 037E                       __ccov160_start_blk9 04C2  
                              __pbssBANK0 0034                           __ccov2_end_blk1 05E2  
                        __ccov90_end_blk0 068E                          __ccov66_end_blk1 0633  
                        __ccov74_end_blk2 0581                           __ccov3_end_blk0 0675  
                      __ccov199_end_blk15 022E                        __ccov375_end_blk24 033A  
                      __ccov359_end_blk17 03B7                          __ccov91_end_blk1 0690  
                        __ccov67_end_blk2 0639                          __ccov75_end_blk3 0582  
                         __ccov4_end_blk1 0676                                __pmaintext 0412  
                        __ccov92_end_blk0 06B6                        __ccov71_start_blk0 06C2  
                      __ccov39_start_blk0 0004                        __ccov55_start_blk0 06AC  
                        __ccov68_end_blk4 063B                          __ccov76_end_blk4 0583  
        __end_of_TMR0_SetInterruptHandler 0690                           __ccov5_end_blk2 0678  
                              ??_TMR0_ISR 0073                                ??_TMR2_ISR 0075  
                         _time_rele_power 0045                        __ccov288_end_blk10 02EB  
                      __ccov376_end_blk25 033C                                __pintentry 0004  
                        __ccov85_end_blk0 061A                          __ccov93_end_blk0 069F  
                        __ccov69_end_blk0 0687                          __ccov77_end_blk5 058A  
                     __ccov161_start_blk0 012D                       __ccov241_start_blk1 004E  
                     __ccov129_start_blk2 04CF                       __ccov145_start_blk3 05C9  
                     __ccov217_start_blk3 01A6                       __ccov233_start_blk4 0556  
                     __ccov137_start_blk5 05A1                       __ccov401_start_blk5 0508  
                     __ccov209_start_blk7 03D8                       __ccov313_start_blk8 00E5  
                     __ccov153_start_blk9 04A1                            __ccovbit10_100 0152  
                          __ccovbit10_107 014B                            __ccovbit10_123 013B  
                          __ccovbit10_137 012D                            __ccovbit11_108 014A  
                          __ccovbit11_163 0113                            __ccovbit12_109 0149  
                          __ccovbit12_147 0123                            __ccovbit12_172 010A  
                          __ccovbit20_149 0121                            __ccovbit13_110 0148  
                          __ccovbit20_175 0107                            __ccovbit21_128 0136  
                          __ccovbit13_164 0112                            __ccovbit14_101 0151  
                          __ccovbit21_165 0111                            __ccovbit14_124 013A  
                          __ccovbit22_141 0129                            __ccovbit14_138 012C  
                          __ccovbit30_162 0114                            __ccovbit14_156 011A  
                          __ccovbit14_173 0109                            __ccovbit15_111 0147  
                          __ccovbit22_159 0117                            __ccovbit22_176 0106  
                    __ccov212_start_blk10 03E2                            __ccovbit31_131 0133  
                          __ccovbit23_129 0135                            __ccovbit23_166 0110  
                          __ccovbit31_169 010D                            __ccovbit31_177 0105  
                          __ccovbit16_125 0139                            __ccovbit16_139 012B  
                          __ccovbit16_157 0119                            __ccovbit17_112 0146  
                          __ccovbit17_140 012A                            __ccovbit17_158 0118  
                          __ccovbit17_174 0108                            __ccovbit18_126 0138  
                          __ccovbit26_160 0116                            __ccovbit18_148 0122  
                          __ccovbit26_167 010F                            __ccovbit19_127 0137  
                         __ccov6_end_blk3 067A                            __ccovbit28_161 0115  
                          __ccovbit29_130 0134                            __ccovbit29_168 010E  
                        __ccov86_end_blk1 061D                          __ccov94_end_blk1 06A2  
                        __ccov78_end_blk6 058C                         _time_rele_control 0043  
                         __ccov7_end_blk0 06A5                        __ccov289_end_blk11 02F3  
                      __ccov369_end_blk12 032C                        __ccov377_end_blk26 033E  
                        __ccov95_end_blk0 0699                          __ccov87_end_blk2 0623  
                              _eeprom_set 055E                      __ccov195_start_blk11 0214  
                    __ccov355_start_blk12 03A5                      __ccov339_start_blk21 026A  
                    __ccov275_start_blk22 02C1                      __ccov291_start_blk16 02F6  
                    __ccov371_start_blk18 032D                      __ccov179_start_blk27 018B  
                    __ccov259_start_blk27 00BC                           __ccov8_end_blk1 06A7  
                                 _OSCTUNE 0098                          __ccov96_end_blk1 069C  
                        __ccov88_end_blk3 0629                        __ccov72_start_blk0 0575  
                      __ccov48_start_blk0 05E2                        __ccov56_start_blk1 06AE  
                       __end_of_beep_long 0546                           __ccov9_end_blk0 066C  
                        ?_TMR2_StartTimer 0073                                 ?_get_jump 0073  
                      __ccov378_end_blk27 033F                                 ?_go_close 0073  
                        __ccov97_end_blk0 04E5                          __ccov89_end_blk5 062B  
                     __ccov138_start_blk0 05F5                       __ccov154_start_blk0 04A4  
                     __ccov306_start_blk1 065A                       __ccov162_start_blk1 0131  
                     __ccov242_start_blk2 0052                       __ccov146_start_blk4 05CC  
                     __ccov218_start_blk4 01AB                       __ccov234_start_blk5 0557  
                     __ccov330_start_blk5 0247                       __ccov402_start_blk6 050F  
                        __ccov98_end_blk1 04EA                                 ?_fun_work 0073  
                       __ccov1_start_blk0 05CE                        __ccov379_end_blk28 0341  
                               ?_sec_work 0073                          __ccov99_end_blk2 04EE  
                               ?_rele_off 0073                      _ADC_InterruptHandler 0047  
              ??_TMR2_SetInterruptHandler 0077                        __ccov65_start_blk0 062B  
                      __ccov73_start_blk1 057A                        __ccov49_start_blk1 05E5  
                           ??_beep_double 0073     __end_of_RELE_POWER_AUTOROTATION_DELAY 06C9  
           _RELE_POWER_AUTOROTATION_DELAY 06C8                       __ccov147_start_blk0 0483  
                     __ccov139_start_blk1 05F9                       __ccov155_start_blk1 04A8  
                     __ccov307_start_blk3 0666                       __ccov163_start_blk3 0138  
                     __ccov243_start_blk3 0057                       __ccov219_start_blk5 01B0  
                     __ccov235_start_blk8 055C                       __ccov331_start_blk8 0249  
                     __ccov403_start_blk8 0511                      __ccov213_start_blk14 03E6  
                __end_of_GOOD_WSP_VOLTAGE 06B8                                   __ptext1 03BC  
                                 __ptext2 0306                                   __ptext3 055E  
                                 __ptext4 0439                                   __ptext5 04FB  
                                 __ptext6 06AC                                   __ptext7 05CE  
                                 __ptext8 06A2                                   __ptext9 05E2  
                                 _get_fun 0239                                   _get_wsp 00CA  
                                 _go_open 04C5                         __ccov2_start_blk1 05E0  
                   _OSCILLATOR_Initialize 0672                                 _T2CONbits 001C  
                    __ccov196_start_blk12 021A                      __ccov372_start_blk21 032E  
                    __ccov356_start_blk14 03A8                      __ccov292_start_blk17 02FD  
                    __ccov380_start_blk29 0341                  ??_PIN_MANAGER_Initialize 0075  
                                 _ms_tick 02C4                     __end_of_hardware_work 0381  
                      __ccov90_start_blk0 0689                        __ccov66_start_blk1 062D  
                      __ccov74_start_blk2 057D                               ?_beep_short 0073  
                                 clrloop0 0691                                ??_get_jump 0075  
                              ??_go_close 0075                         __end_of_rele_tick 018D  
                    end_of_initialization 0046                       __ccov236_start_blk0 063B  
                     __ccov180_start_blk0 067A                       __ccov308_start_blk0 00CA  
                     __ccov148_start_blk1 0487                       __ccov156_start_blk2 04AE  
                     __ccov164_start_blk4 013C                       __ccov244_start_blk4 005B  
                              ??_fun_work 0075                         __ccov3_start_blk0 0672  
                         _EEPROM_ReadByte 04FB                                ??_sec_work 0074  
                              ??_rele_off 0075                             ??_clear_alarm 0075  
                           ??_ms_100_work 0073                        __ccov91_start_blk1 068E  
                      __ccov67_start_blk2 0633                        __ccov75_start_blk3 0581  
                           ??_ms_200_work 0073                            _FUN_MEAS_COUNT 06CB  
                     __ccov237_start_blk1 063F                       __ccov181_start_blk1 067E  
                     __ccov309_start_blk1 00CE                       __ccov149_start_blk2 048D  
                     __ccov157_start_blk3 04B2                       __ccov165_start_blk5 0144  
                     __ccov245_start_blk6 005D                              _go_close_alt 058C  
                        ??_WDT_Initialize 0075              __end_of_LOW_WATER_RESISTANSE 06C2  
                _TMR0_SetInterruptHandler 0689                                 _PORTAbits 000C  
                               _PORTCbits 000E                         ?_EEPROM_WriteByte 0075  
                       __end_of_stop_tone 069C                       __end_of_beep_double 0619  
                       __end_of_switch_wm 03E8                         __ccov4_start_blk1 0675  
                             ?_eeprom_set 0073                        ??_EEPROM_WriteByte 0076  
                    __ccov197_start_blk13 021F                      __ccov381_start_blk30 0343  
                    __ccov373_start_blk22 032F                      __ccov357_start_blk15 03B0  
                    __ccov293_start_blk18 0300                                 _TRISAbits 008C  
                               _TRISCbits 008E                        __ccov92_start_blk0 06B3  
                      __ccov68_start_blk4 0639                        __ccov76_start_blk4 0582  
                     __ccov182_start_blk2 0680                       __ccov238_start_blk3 0643  
                     __ccov158_start_blk4 04B8                       __ccov190_start_blk5 0200  
                     __ccov350_start_blk5 038E                       __ccov166_start_blk6 0148  
                     __ccov246_start_blk7 0061                        EEPROM_WriteByte@dt 0075  
                              _start_tone 069C                         __ccov5_start_blk2 0676  
                              get_wsp@res 0058                    __end_of_FUN_MEAS_COUNT 06CC  
                      __ccov85_start_blk0 0619                        __ccov93_start_blk0 069C  
                      __ccov69_start_blk0 0682                        __ccov77_start_blk5 0583  
    __end_of_TMR2_DefaultInterruptHandler 06C4              _TMR2_DefaultInterruptHandler 06C2  
                             __ccovbit1_1 0396                               __ccovbit1_3 0394  
                             __ccovbit1_7 0390                               __ccovbit3_2 0395  
                             __ccovbit3_4 0393                               __ccovbit2_8 038F  
                             __ccovbit3_9 038E                               __ccovbit6_6 0391  
                             __ccovbit9_5 0392                       __end_of_clear_alarm 06AC  
                     __ccov263_start_blk0 0281                       __ccov327_start_blk0 0239  
                     __ccov183_start_blk0 06A7                       __ccov239_start_blk5 0649  
                     __ccov159_start_blk5 04BE                       __ccov191_start_blk6 0205  
                     __ccov167_start_blk7 014F                       __ccov351_start_blk7 0394  
                     __ccov247_start_blk8 0065                      __ccov223_start_blk10 01CB  
                          _ADC_Initialize 0669                    ?_OSCILLATOR_Initialize 0073  
                           __pbitbssBANK0 0100                       __end_of_ms_100_work 065A  
                     __end_of_ms_200_work 02C4                         __ccov6_start_blk3 0678  
                           ??_go_open_alt 0075                       start_initialization 002E  
                    __ccov294_start_blk20 0304                      __ccov198_start_blk14 0224  
                    __ccov382_start_blk31 0344                      __ccov374_start_blk23 0336  
                    __ccov358_start_blk16 03B4                         __ccov46_end_blk10 002A  
                   _RELE_POWER_WORK_DELAY 06C9                             ??_sec_30_work 0073  
                      __ccov86_start_blk1 061A                        __ccov94_start_blk1 069F  
                      __ccov78_start_blk6 058A                   __end_of_EEPROM_ReadByte 0514  
                     __ccov280_start_blk0 02C4                       __ccov264_start_blk1 0285  
                     __ccov328_start_blk1 023D                       __ccov184_start_blk1 06A9  
                     __ccov192_start_blk7 020A                       __ccov352_start_blk9 0399  
                       __ccov47_end_blk12 002D                         __ccov7_start_blk0 06A2  
                     __ccov46_start_blk10 0029                          _beep_short_count 007D  
                      __ccov95_start_blk0 0696                        __ccov87_start_blk2 061D  
                             _beep_double 0607                    __end_of_ADC_Initialize 0672  
                     __ccov185_start_blk0 01E7                       __ccov281_start_blk1 02C9  
                     __ccov265_start_blk2 028B                       __ccov329_start_blk3 023F  
                     __ccov193_start_blk8 020C             ?_TMR2_DefaultInterruptHandler 0073  
                    __ccov224_start_blk11 01D0                      __ccov320_start_blk21 010F  
                       __ccov8_start_blk1 06A5                         _AUTOROTATION_DAYS 06BC  
                             __pbssCOMMON 0079                                 ___latbits 0000  
                           __pcstackBANK0 0058                      __ccov199_start_blk15 0229  
                    __ccov375_start_blk24 0338                      __ccov359_start_blk17 03B5  
                      __ccov96_start_blk1 0699                        __ccov88_start_blk3 0623  
                     __end_of_go_open_alt 0607                              sec_work@iled 004C  
                             ?_start_tone 0073                       __ccov346_start_blk0 0381  
                     __ccov362_start_blk0 0306                       __ccov186_start_blk1 01EB  
                     __ccov282_start_blk2 02CF                       __ccov266_start_blk4 0290  
                               _beep_long 052D                       __end_of_sec_30_work 064B  
                    _LOW_WATER_RESISTANSE 06C0                     _TMR0_InterruptHandler 0053  
                               __pnvBANK0 0053                         __ccov9_start_blk0 0669  
                             _clear_alarm 06A7                    _PIN_MANAGER_Initialize 05A3  
                     __ccov47_start_blk12 002A                               _ms_100_work 064B  
                      __ccov97_start_blk0 04E1                        __ccov89_start_blk5 0629  
                             _ms_200_work 0281                           ?_ADC_Initialize 0073  
                     __ccov347_start_blk1 0385                       __ccov363_start_blk1 0309  
                     __ccov187_start_blk2 01F1                       __ccov283_start_blk3 02D3  
                     __ccov267_start_blk5 0296              ??_INTERRUPT_InterruptManager 0075  
                    __ccov225_start_blk12 01D5                      __ccov321_start_blk22 0112  
               __end_of_AUTOROTATION_DAYS 06BE                                  ?_get_fun 0073  
                                ?_get_wsp 0073                                  ?_go_open 0073  
                           ??_minute_tick 0073                                  ?_ms_tick 0073  
                    __ccov288_start_blk10 02E8                      __ccov376_start_blk25 033A  
                            ??_beep_short 0073                            _WSP_MEAS_COUNT 06CC  
                      __ccov98_start_blk1 04E5                          ?_EEPROM_ReadByte 0073  
                               _sec_count 0052                       __ccov276_start_blk0 064B  
                     __ccov364_start_blk2 030A                       __ccov188_start_blk3 01F6  
                     __ccov348_start_blk3 0387                       __ccov284_start_blk4 02DA  
                     __ccov268_start_blk8 029B                         ??_TMR0_Initialize 0077  
                              ?_beep_long 0073                                  _LATAbits 010C  
                                _LATCbits 010E                                 _rele_tick 012D  
                               clear_ram0 0690                                  _PIE1bits 0091  
                                _RELE_GAP 06C7                ??_TMR0_SetInterruptHandler 0077  
                                _PIR1bits 0011                                 _time_meas 004F  
                        _time_moving_wait 0050                                  _TMR0_ISR 0619  
                               _time_tone 003F                        __ccov99_start_blk2 04EA  
                                _TMR2_ISR 062B                             _zummer_switch 065A  
                      __end_of_beep_short 04FB                       __ccov277_start_blk1 064F  
                     __ccov365_start_blk3 031C                       __ccov189_start_blk4 01FB  
                     __ccov349_start_blk4 0389                       __ccov285_start_blk7 02DE  
                     __ccov269_start_blk9 02A1                           _beep_long_count 004E  
                              _ADCON0bits 009D                      __ccov314_start_blk11 00E7  
                    __ccov170_start_blk12 0160                      __ccov250_start_blk13 0078  
                    __ccov226_start_blk13 01DA                      __ccov322_start_blk24 0118  
                            ??_eeprom_set 0058            ??_TMR2_DefaultInterruptHandler 0073  
                             _go_open_alt 05F5                 ?_TMR2_SetInterruptHandler 0075  
                  __end_of_WSP_MEAS_COUNT 06CD                                 _stop_tone 0696  
                               _switch_wm 03BC                      __ccov289_start_blk11 02EB  
                    __ccov369_start_blk12 032B                      __ccov377_start_blk26 033C  
                             _sec_30_work 063B                           ms_tick@ms_count 0039  
                     __end_of_minute_tick 055E                       __ccov278_start_blk2 0655  
                     __ccov390_start_blk2 0439                       __ccov366_start_blk4 031F  
                     __ccov286_start_blk8 02DF                         _beep_double_count 004D  
                       ??_TMR2_Initialize 0077                                ?_rele_tick 0073  
                   __end_of_UP_RESISTANSE 06BC                       _MELODY_REPEAT_DELAY 06C4  
                       _ADC_GetConversion 0514                           _JUMP_MEAS_COUNT 06CA  
                      __end_of_eeprom_set 0575                            ?_zummer_switch 0073  
                 ??_OSCILLATOR_Initialize 0075                        ?_ADC_GetConversion 0073  
                     __ccov295_start_blk0 055E                       __ccov383_start_blk0 0412  
                     __ccov391_start_blk3 043F                       __ccov279_start_blk4 0658  
                     __ccov367_start_blk6 0328                       __ccov287_start_blk9 02E0  
                           ??_start_alarm 0075                __end_of_SHORT_ZUMMER_DELAY 06CF  
                    __ccov171_start_blk13 0166                      __ccov315_start_blk13 00E9  
                    __ccov251_start_blk14 007F                      __ccov227_start_blk14 01DF  
                    __ccov323_start_blk25 011F                                _ANSELAbits 018C  
                              _ANSELCbits 018E                       ??_ADC_GetConversion 0075  
                           ??_start_setup 0079                                ?_stop_tone 0073  
                           _time_rele_gap 0041                                ?_switch_wm 0073  
                    __ccov378_start_blk27 033E                                  __ptext10 0682  
                                __ptext11 0575                                  __ptext20 0514  
                                __ptext12 0689                                  __ptext21 0381  
                                __ptext13 05A3                                  __ptext30 05F5  
                                __ptext22 0239                                  __ptext14 0672  
                                __ptext31 04C5                                  __ptext23 01E7  
                                __ptext15 0669                                  __ptext40 012D  
                                __ptext32 045F                                  __ptext24 0483  
                                __ptext16 0346                                  __ptext41 0546  
                                __ptext25 058C                                  __ptext17 00CA  
                                __ptext50 065A                                  __ptext42 0281  
                                __ptext34 062B                                  __ptext26 03E8  
                                __ptext18 067A                                  __ptext43 0607  
                                __ptext35 06C2                                  __ptext27 018D  
                                __ptext19 06A7                                  __ptext44 04E1  
                                __ptext36 02C4                                  __ptext28 04A4  
                                __ptext45 052D                                  __ptext37 0696  
                                __ptext29 05B9                                  __ptext46 069C  
                                __ptext38 0049                                  __ptext47 064B  
                                __ptext39 063B                                  __ptext48 0619  
                                __ptext49 06B3                                  _get_jump 0381  
                                _go_close 03E8                           _BAD_WSP_VOLTAGE 06B8  
                     __ccov296_start_blk1 0566                       __ccov384_start_blk1 0415  
                     __ccov392_start_blk4 0444                       __ccov368_start_blk9 032A  
                           _time_rotation 0034                               ??_beep_long 0073  
                                _fun_work 01E7      __end_of_TMR0_DefaultInterruptHandler 06B6  
            _TMR0_DefaultInterruptHandler 06B3                                  _sec_work 0049  
               __end_of_ADC_GetConversion 052D                                  _rele_off 05B9  
                       _MOVING_WAIT_DELAY 06C5                              ?_beep_double 0073  
                                int$flags 007E                         ??_TMR2_StartTimer 0075  
      __end_of_INTERRUPT_InterruptManager 002D                _INTERRUPT_InterruptManager 0004  
                     __ccov297_start_blk2 056B                       __ccov385_start_blk2 0416  
                     __ccov393_start_blk5 044E                            ms_tick@s_count 0037  
                    __ccov332_start_blk10 024B                      __ccov172_start_blk14 0167  
                    __ccov316_start_blk14 00F3                      __ccov228_start_blk15 01E2  
                    __ccov340_start_blk23 026D                      __ccov252_start_blk16 0086  
                    __ccov324_start_blk26 0122                      __ccov260_start_blk28 00C2  
                    get_jump@jump_counter 0049                               _minute_tick 0546  
                              _INTCONbits 000B                        __ccov10_start_blk1 066C  
           __end_of_HIGH_WATER_RESISTANSE 06C0                            __pstringtext10 06C0  
                          __pstringtext11 06C7                            __pstringtext12 06C8  
                          __pstringtext13 06C9                            __pstringtext14 06CA  
                          __pstringtext15 06CB                            __pstringtext16 06CC  
                          __pstringtext17 06CD                            __pstringtext18 06CE  
                     __ccov100_start_blk4 04EE                      __ccov379_start_blk28 033F  
                           _hardware_work 0346                       __end_of_start_alarm 0682  
                     __end_of_start_setup 0346                                  intlevel1 0000  
                            ??_start_tone 0073                       __ccov386_start_blk3 0419  
                     __ccov298_start_blk4 0572                       __ccov394_start_blk6 0453  
                 __end_of_JUMP_MEAS_COUNT 06CB                   ?_PIN_MANAGER_Initialize 0073  
                             ??_rele_tick 0073                 __end_of_MOVING_WAIT_DELAY 06C6  
                       _LONG_ZUMMER_DELAY 06CD                       EEPROM_ReadByte@addr 0077  
                      __ccov11_start_blk2 066D                          ??_ADC_Initialize 0075  
                            ?_clear_alarm 0073                            _go_close_short 045F  
           ?_TMR0_DefaultInterruptHandler 0073                           ??_zummer_switch 0073  
                       __ccov100_end_blk4 04F3                        __ccov200_end_blk16 0232  
                     __ccov101_start_blk5 04F3                              ?_ms_100_work 0073  
                            ?_ms_200_work 0073                         __ccov101_end_blk5 04F4  
                       __ccov102_end_blk6 04F8                         __ccov110_end_blk8 0546  
                           __pstringtext1 06B0                             __pstringtext2 06B6  
                           __pstringtext3 06B8                             __pstringtext4 06BA  
                           __pstringtext5 06BC                             __pstringtext6 06C4  
                           __pstringtext7 06C5                             __pstringtext8 06C6  
                           __pstringtext9 06BE                        __ccov201_end_blk17 0236  
                     __ccov299_start_blk0 0346                       __ccov387_start_blk4 041D  
                     __ccov395_start_blk7 0454                        __end_of_start_tone 06A2  
                              _OPTION_REG 0095                         _time_zummer_short 003D  
                    __ccov333_start_blk11 0250                      __ccov173_start_blk15 016D  
                    __ccov341_start_blk24 0275                      __ccov317_start_blk16 00F9  
                    __ccov229_start_blk17 01E5                      __ccov253_start_blk18 008A  
                    __ccov325_start_blk28 0128                      __ccov261_start_blk29 00C5  
     __end_of_FRIMWARE_VERSION_EEPROM_ADR 06C7               _FRIMWARE_VERSION_EEPROM_ADR 06C6  
                             _time_melody 0051                         _autorotation_work 018D  
                       __ccov111_end_blk0 060B                         __ccov103_end_blk8 04FB  
                         _TMR0_Initialize 0575                __end_of_AUTOROTATION_DELAY 06B3  
                      __ccov12_start_blk3 0670                   __end_of_BAD_WSP_VOLTAGE 06BA  
                      ?_autorotation_work 0073                               ??_stop_tone 0073  
                             ??_switch_wm 0075                         __ccov104_end_blk0 0531  
                       __ccov112_end_blk1 0611                            ?_hardware_work 0073  
                       __ccov120_end_blk6 0412                        __ccov202_end_blk19 0239  
                     __ccov102_start_blk6 04F4                       __ccov110_start_blk8 0543  
                       __ccov121_end_blk0 0463                         __ccov105_end_blk1 0537  
                       __ccov113_end_blk3 0616                          _time_zummer_long 003B  
          __end_of_PIN_MANAGER_Initialize 05B9                       ??_autorotation_work 0075  
               __end_of_LONG_ZUMMER_DELAY 06CE                          _EEPROM_WriteByte 0439  
                       __ccov122_end_blk1 0469                         __ccov106_end_blk2 053A  
                       __ccov130_end_blk3 04D9                         __ccov114_end_blk5 0619  
                       __ccov210_end_blk8 03DF                       __ccov388_start_blk6 0432  
                     __ccov396_start_blk8 045A                    __end_of_go_close_short 0483  
                   _TMR2_InterruptHandler 0055                         __ccov115_end_blk0 03EC  
                       __ccov203_end_blk0 03C0                         __ccov123_end_blk2 046E  
                       __ccov107_end_blk4 053E                         __ccov131_end_blk4 04DE  
                       __ccov211_end_blk9 03E2  
