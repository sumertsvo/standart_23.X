

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Apr 28 14:11:32 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1823
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 2.40
    59                           ; Generated 17/11/2021 GMT
    60                           ; 
    61                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F1823 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000E                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0016                     	;# 
   112  0017                     	;# 
   113  0018                     	;# 
   114  0019                     	;# 
   115  001A                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  008C                     	;# 
   121  008E                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  010C                     	;# 
   136  010E                     	;# 
   137  0111                     	;# 
   138  0112                     	;# 
   139  0113                     	;# 
   140  0114                     	;# 
   141  0115                     	;# 
   142  0116                     	;# 
   143  0117                     	;# 
   144  0118                     	;# 
   145  0119                     	;# 
   146  011A                     	;# 
   147  011B                     	;# 
   148  011D                     	;# 
   149  011D                     	;# 
   150  018C                     	;# 
   151  018E                     	;# 
   152  0191                     	;# 
   153  0191                     	;# 
   154  0192                     	;# 
   155  0193                     	;# 
   156  0193                     	;# 
   157  0193                     	;# 
   158  0194                     	;# 
   159  0195                     	;# 
   160  0196                     	;# 
   161  0199                     	;# 
   162  019A                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019C                     	;# 
   168  019C                     	;# 
   169  019D                     	;# 
   170  019E                     	;# 
   171  019F                     	;# 
   172  020C                     	;# 
   173  020E                     	;# 
   174  0211                     	;# 
   175  0211                     	;# 
   176  0212                     	;# 
   177  0212                     	;# 
   178  0213                     	;# 
   179  0213                     	;# 
   180  0214                     	;# 
   181  0214                     	;# 
   182  0215                     	;# 
   183  0215                     	;# 
   184  0215                     	;# 
   185  0216                     	;# 
   186  0216                     	;# 
   187  0217                     	;# 
   188  0217                     	;# 
   189  0291                     	;# 
   190  0291                     	;# 
   191  0292                     	;# 
   192  0293                     	;# 
   193  0294                     	;# 
   194  0295                     	;# 
   195  0295                     	;# 
   196  0296                     	;# 
   197  0391                     	;# 
   198  0392                     	;# 
   199  0393                     	;# 
   200  039A                     	;# 
   201  039C                     	;# 
   202  039D                     	;# 
   203  039E                     	;# 
   204  039F                     	;# 
   205  0FE4                     	;# 
   206  0FE5                     	;# 
   207  0FE6                     	;# 
   208  0FE7                     	;# 
   209  0FE8                     	;# 
   210  0FE9                     	;# 
   211  0FEA                     	;# 
   212  0FEB                     	;# 
   213  0FED                     	;# 
   214  0FEE                     	;# 
   215  0FEF                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000E                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  008C                     	;# 
   244  008E                     	;# 
   245  0091                     	;# 
   246  0092                     	;# 
   247  0095                     	;# 
   248  0096                     	;# 
   249  0097                     	;# 
   250  0098                     	;# 
   251  0099                     	;# 
   252  009A                     	;# 
   253  009B                     	;# 
   254  009B                     	;# 
   255  009C                     	;# 
   256  009D                     	;# 
   257  009E                     	;# 
   258  010C                     	;# 
   259  010E                     	;# 
   260  0111                     	;# 
   261  0112                     	;# 
   262  0113                     	;# 
   263  0114                     	;# 
   264  0115                     	;# 
   265  0116                     	;# 
   266  0117                     	;# 
   267  0118                     	;# 
   268  0119                     	;# 
   269  011A                     	;# 
   270  011B                     	;# 
   271  011D                     	;# 
   272  011D                     	;# 
   273  018C                     	;# 
   274  018E                     	;# 
   275  0191                     	;# 
   276  0191                     	;# 
   277  0192                     	;# 
   278  0193                     	;# 
   279  0193                     	;# 
   280  0193                     	;# 
   281  0194                     	;# 
   282  0195                     	;# 
   283  0196                     	;# 
   284  0199                     	;# 
   285  019A                     	;# 
   286  019B                     	;# 
   287  019B                     	;# 
   288  019B                     	;# 
   289  019B                     	;# 
   290  019C                     	;# 
   291  019C                     	;# 
   292  019D                     	;# 
   293  019E                     	;# 
   294  019F                     	;# 
   295  020C                     	;# 
   296  020E                     	;# 
   297  0211                     	;# 
   298  0211                     	;# 
   299  0212                     	;# 
   300  0212                     	;# 
   301  0213                     	;# 
   302  0213                     	;# 
   303  0214                     	;# 
   304  0214                     	;# 
   305  0215                     	;# 
   306  0215                     	;# 
   307  0215                     	;# 
   308  0216                     	;# 
   309  0216                     	;# 
   310  0217                     	;# 
   311  0217                     	;# 
   312  0291                     	;# 
   313  0291                     	;# 
   314  0292                     	;# 
   315  0293                     	;# 
   316  0294                     	;# 
   317  0295                     	;# 
   318  0295                     	;# 
   319  0296                     	;# 
   320  0391                     	;# 
   321  0392                     	;# 
   322  0393                     	;# 
   323  039A                     	;# 
   324  039C                     	;# 
   325  039D                     	;# 
   326  039E                     	;# 
   327  039F                     	;# 
   328  0FE4                     	;# 
   329  0FE5                     	;# 
   330  0FE6                     	;# 
   331  0FE7                     	;# 
   332  0FE8                     	;# 
   333  0FE9                     	;# 
   334  0FEA                     	;# 
   335  0FEB                     	;# 
   336  0FED                     	;# 
   337  0FEE                     	;# 
   338  0FEF                     	;# 
   339  0000                     	;# 
   340  0001                     	;# 
   341  0002                     	;# 
   342  0003                     	;# 
   343  0004                     	;# 
   344  0005                     	;# 
   345  0006                     	;# 
   346  0007                     	;# 
   347  0008                     	;# 
   348  0009                     	;# 
   349  000A                     	;# 
   350  000B                     	;# 
   351  000C                     	;# 
   352  000E                     	;# 
   353  0011                     	;# 
   354  0012                     	;# 
   355  0015                     	;# 
   356  0016                     	;# 
   357  0016                     	;# 
   358  0017                     	;# 
   359  0018                     	;# 
   360  0019                     	;# 
   361  001A                     	;# 
   362  001B                     	;# 
   363  001C                     	;# 
   364  001E                     	;# 
   365  001F                     	;# 
   366  008C                     	;# 
   367  008E                     	;# 
   368  0091                     	;# 
   369  0092                     	;# 
   370  0095                     	;# 
   371  0096                     	;# 
   372  0097                     	;# 
   373  0098                     	;# 
   374  0099                     	;# 
   375  009A                     	;# 
   376  009B                     	;# 
   377  009B                     	;# 
   378  009C                     	;# 
   379  009D                     	;# 
   380  009E                     	;# 
   381  010C                     	;# 
   382  010E                     	;# 
   383  0111                     	;# 
   384  0112                     	;# 
   385  0113                     	;# 
   386  0114                     	;# 
   387  0115                     	;# 
   388  0116                     	;# 
   389  0117                     	;# 
   390  0118                     	;# 
   391  0119                     	;# 
   392  011A                     	;# 
   393  011B                     	;# 
   394  011D                     	;# 
   395  011D                     	;# 
   396  018C                     	;# 
   397  018E                     	;# 
   398  0191                     	;# 
   399  0191                     	;# 
   400  0192                     	;# 
   401  0193                     	;# 
   402  0193                     	;# 
   403  0193                     	;# 
   404  0194                     	;# 
   405  0195                     	;# 
   406  0196                     	;# 
   407  0199                     	;# 
   408  019A                     	;# 
   409  019B                     	;# 
   410  019B                     	;# 
   411  019B                     	;# 
   412  019B                     	;# 
   413  019C                     	;# 
   414  019C                     	;# 
   415  019D                     	;# 
   416  019E                     	;# 
   417  019F                     	;# 
   418  020C                     	;# 
   419  020E                     	;# 
   420  0211                     	;# 
   421  0211                     	;# 
   422  0212                     	;# 
   423  0212                     	;# 
   424  0213                     	;# 
   425  0213                     	;# 
   426  0214                     	;# 
   427  0214                     	;# 
   428  0215                     	;# 
   429  0215                     	;# 
   430  0215                     	;# 
   431  0216                     	;# 
   432  0216                     	;# 
   433  0217                     	;# 
   434  0217                     	;# 
   435  0291                     	;# 
   436  0291                     	;# 
   437  0292                     	;# 
   438  0293                     	;# 
   439  0294                     	;# 
   440  0295                     	;# 
   441  0295                     	;# 
   442  0296                     	;# 
   443  0391                     	;# 
   444  0392                     	;# 
   445  0393                     	;# 
   446  039A                     	;# 
   447  039C                     	;# 
   448  039D                     	;# 
   449  039E                     	;# 
   450  039F                     	;# 
   451  0FE4                     	;# 
   452  0FE5                     	;# 
   453  0FE6                     	;# 
   454  0FE7                     	;# 
   455  0FE8                     	;# 
   456  0FE9                     	;# 
   457  0FEA                     	;# 
   458  0FEB                     	;# 
   459  0FED                     	;# 
   460  0FEE                     	;# 
   461  0FEF                     	;# 
   462  0000                     	;# 
   463  0001                     	;# 
   464  0002                     	;# 
   465  0003                     	;# 
   466  0004                     	;# 
   467  0005                     	;# 
   468  0006                     	;# 
   469  0007                     	;# 
   470  0008                     	;# 
   471  0009                     	;# 
   472  000A                     	;# 
   473  000B                     	;# 
   474  000C                     	;# 
   475  000E                     	;# 
   476  0011                     	;# 
   477  0012                     	;# 
   478  0015                     	;# 
   479  0016                     	;# 
   480  0016                     	;# 
   481  0017                     	;# 
   482  0018                     	;# 
   483  0019                     	;# 
   484  001A                     	;# 
   485  001B                     	;# 
   486  001C                     	;# 
   487  001E                     	;# 
   488  001F                     	;# 
   489  008C                     	;# 
   490  008E                     	;# 
   491  0091                     	;# 
   492  0092                     	;# 
   493  0095                     	;# 
   494  0096                     	;# 
   495  0097                     	;# 
   496  0098                     	;# 
   497  0099                     	;# 
   498  009A                     	;# 
   499  009B                     	;# 
   500  009B                     	;# 
   501  009C                     	;# 
   502  009D                     	;# 
   503  009E                     	;# 
   504  010C                     	;# 
   505  010E                     	;# 
   506  0111                     	;# 
   507  0112                     	;# 
   508  0113                     	;# 
   509  0114                     	;# 
   510  0115                     	;# 
   511  0116                     	;# 
   512  0117                     	;# 
   513  0118                     	;# 
   514  0119                     	;# 
   515  011A                     	;# 
   516  011B                     	;# 
   517  011D                     	;# 
   518  011D                     	;# 
   519  018C                     	;# 
   520  018E                     	;# 
   521  0191                     	;# 
   522  0191                     	;# 
   523  0192                     	;# 
   524  0193                     	;# 
   525  0193                     	;# 
   526  0193                     	;# 
   527  0194                     	;# 
   528  0195                     	;# 
   529  0196                     	;# 
   530  0199                     	;# 
   531  019A                     	;# 
   532  019B                     	;# 
   533  019B                     	;# 
   534  019B                     	;# 
   535  019B                     	;# 
   536  019C                     	;# 
   537  019C                     	;# 
   538  019D                     	;# 
   539  019E                     	;# 
   540  019F                     	;# 
   541  020C                     	;# 
   542  020E                     	;# 
   543  0211                     	;# 
   544  0211                     	;# 
   545  0212                     	;# 
   546  0212                     	;# 
   547  0213                     	;# 
   548  0213                     	;# 
   549  0214                     	;# 
   550  0214                     	;# 
   551  0215                     	;# 
   552  0215                     	;# 
   553  0215                     	;# 
   554  0216                     	;# 
   555  0216                     	;# 
   556  0217                     	;# 
   557  0217                     	;# 
   558  0291                     	;# 
   559  0291                     	;# 
   560  0292                     	;# 
   561  0293                     	;# 
   562  0294                     	;# 
   563  0295                     	;# 
   564  0295                     	;# 
   565  0296                     	;# 
   566  0391                     	;# 
   567  0392                     	;# 
   568  0393                     	;# 
   569  039A                     	;# 
   570  039C                     	;# 
   571  039D                     	;# 
   572  039E                     	;# 
   573  039F                     	;# 
   574  0FE4                     	;# 
   575  0FE5                     	;# 
   576  0FE6                     	;# 
   577  0FE7                     	;# 
   578  0FE8                     	;# 
   579  0FE9                     	;# 
   580  0FEA                     	;# 
   581  0FEB                     	;# 
   582  0FED                     	;# 
   583  0FEE                     	;# 
   584  0FEF                     	;# 
   585  0000                     	;# 
   586  0001                     	;# 
   587  0002                     	;# 
   588  0003                     	;# 
   589  0004                     	;# 
   590  0005                     	;# 
   591  0006                     	;# 
   592  0007                     	;# 
   593  0008                     	;# 
   594  0009                     	;# 
   595  000A                     	;# 
   596  000B                     	;# 
   597  000C                     	;# 
   598  000E                     	;# 
   599  0011                     	;# 
   600  0012                     	;# 
   601  0015                     	;# 
   602  0016                     	;# 
   603  0016                     	;# 
   604  0017                     	;# 
   605  0018                     	;# 
   606  0019                     	;# 
   607  001A                     	;# 
   608  001B                     	;# 
   609  001C                     	;# 
   610  001E                     	;# 
   611  001F                     	;# 
   612  008C                     	;# 
   613  008E                     	;# 
   614  0091                     	;# 
   615  0092                     	;# 
   616  0095                     	;# 
   617  0096                     	;# 
   618  0097                     	;# 
   619  0098                     	;# 
   620  0099                     	;# 
   621  009A                     	;# 
   622  009B                     	;# 
   623  009B                     	;# 
   624  009C                     	;# 
   625  009D                     	;# 
   626  009E                     	;# 
   627  010C                     	;# 
   628  010E                     	;# 
   629  0111                     	;# 
   630  0112                     	;# 
   631  0113                     	;# 
   632  0114                     	;# 
   633  0115                     	;# 
   634  0116                     	;# 
   635  0117                     	;# 
   636  0118                     	;# 
   637  0119                     	;# 
   638  011A                     	;# 
   639  011B                     	;# 
   640  011D                     	;# 
   641  011D                     	;# 
   642  018C                     	;# 
   643  018E                     	;# 
   644  0191                     	;# 
   645  0191                     	;# 
   646  0192                     	;# 
   647  0193                     	;# 
   648  0193                     	;# 
   649  0193                     	;# 
   650  0194                     	;# 
   651  0195                     	;# 
   652  0196                     	;# 
   653  0199                     	;# 
   654  019A                     	;# 
   655  019B                     	;# 
   656  019B                     	;# 
   657  019B                     	;# 
   658  019B                     	;# 
   659  019C                     	;# 
   660  019C                     	;# 
   661  019D                     	;# 
   662  019E                     	;# 
   663  019F                     	;# 
   664  020C                     	;# 
   665  020E                     	;# 
   666  0211                     	;# 
   667  0211                     	;# 
   668  0212                     	;# 
   669  0212                     	;# 
   670  0213                     	;# 
   671  0213                     	;# 
   672  0214                     	;# 
   673  0214                     	;# 
   674  0215                     	;# 
   675  0215                     	;# 
   676  0215                     	;# 
   677  0216                     	;# 
   678  0216                     	;# 
   679  0217                     	;# 
   680  0217                     	;# 
   681  0291                     	;# 
   682  0291                     	;# 
   683  0292                     	;# 
   684  0293                     	;# 
   685  0294                     	;# 
   686  0295                     	;# 
   687  0295                     	;# 
   688  0296                     	;# 
   689  0391                     	;# 
   690  0392                     	;# 
   691  0393                     	;# 
   692  039A                     	;# 
   693  039C                     	;# 
   694  039D                     	;# 
   695  039E                     	;# 
   696  039F                     	;# 
   697  0FE4                     	;# 
   698  0FE5                     	;# 
   699  0FE6                     	;# 
   700  0FE7                     	;# 
   701  0FE8                     	;# 
   702  0FE9                     	;# 
   703  0FEA                     	;# 
   704  0FEB                     	;# 
   705  0FED                     	;# 
   706  0FEE                     	;# 
   707  0FEF                     	;# 
   708  0000                     	;# 
   709  0001                     	;# 
   710  0002                     	;# 
   711  0003                     	;# 
   712  0004                     	;# 
   713  0005                     	;# 
   714  0006                     	;# 
   715  0007                     	;# 
   716  0008                     	;# 
   717  0009                     	;# 
   718  000A                     	;# 
   719  000B                     	;# 
   720  000C                     	;# 
   721  000E                     	;# 
   722  0011                     	;# 
   723  0012                     	;# 
   724  0015                     	;# 
   725  0016                     	;# 
   726  0016                     	;# 
   727  0017                     	;# 
   728  0018                     	;# 
   729  0019                     	;# 
   730  001A                     	;# 
   731  001B                     	;# 
   732  001C                     	;# 
   733  001E                     	;# 
   734  001F                     	;# 
   735  008C                     	;# 
   736  008E                     	;# 
   737  0091                     	;# 
   738  0092                     	;# 
   739  0095                     	;# 
   740  0096                     	;# 
   741  0097                     	;# 
   742  0098                     	;# 
   743  0099                     	;# 
   744  009A                     	;# 
   745  009B                     	;# 
   746  009B                     	;# 
   747  009C                     	;# 
   748  009D                     	;# 
   749  009E                     	;# 
   750  010C                     	;# 
   751  010E                     	;# 
   752  0111                     	;# 
   753  0112                     	;# 
   754  0113                     	;# 
   755  0114                     	;# 
   756  0115                     	;# 
   757  0116                     	;# 
   758  0117                     	;# 
   759  0118                     	;# 
   760  0119                     	;# 
   761  011A                     	;# 
   762  011B                     	;# 
   763  011D                     	;# 
   764  011D                     	;# 
   765  018C                     	;# 
   766  018E                     	;# 
   767  0191                     	;# 
   768  0191                     	;# 
   769  0192                     	;# 
   770  0193                     	;# 
   771  0193                     	;# 
   772  0193                     	;# 
   773  0194                     	;# 
   774  0195                     	;# 
   775  0196                     	;# 
   776  0199                     	;# 
   777  019A                     	;# 
   778  019B                     	;# 
   779  019B                     	;# 
   780  019B                     	;# 
   781  019B                     	;# 
   782  019C                     	;# 
   783  019C                     	;# 
   784  019D                     	;# 
   785  019E                     	;# 
   786  019F                     	;# 
   787  020C                     	;# 
   788  020E                     	;# 
   789  0211                     	;# 
   790  0211                     	;# 
   791  0212                     	;# 
   792  0212                     	;# 
   793  0213                     	;# 
   794  0213                     	;# 
   795  0214                     	;# 
   796  0214                     	;# 
   797  0215                     	;# 
   798  0215                     	;# 
   799  0215                     	;# 
   800  0216                     	;# 
   801  0216                     	;# 
   802  0217                     	;# 
   803  0217                     	;# 
   804  0291                     	;# 
   805  0291                     	;# 
   806  0292                     	;# 
   807  0293                     	;# 
   808  0294                     	;# 
   809  0295                     	;# 
   810  0295                     	;# 
   811  0296                     	;# 
   812  0391                     	;# 
   813  0392                     	;# 
   814  0393                     	;# 
   815  039A                     	;# 
   816  039C                     	;# 
   817  039D                     	;# 
   818  039E                     	;# 
   819  039F                     	;# 
   820  0FE4                     	;# 
   821  0FE5                     	;# 
   822  0FE6                     	;# 
   823  0FE7                     	;# 
   824  0FE8                     	;# 
   825  0FE9                     	;# 
   826  0FEA                     	;# 
   827  0FEB                     	;# 
   828  0FED                     	;# 
   829  0FEE                     	;# 
   830  0FEF                     	;# 
   831  0000                     	;# 
   832  0001                     	;# 
   833  0002                     	;# 
   834  0003                     	;# 
   835  0004                     	;# 
   836  0005                     	;# 
   837  0006                     	;# 
   838  0007                     	;# 
   839  0008                     	;# 
   840  0009                     	;# 
   841  000A                     	;# 
   842  000B                     	;# 
   843  000C                     	;# 
   844  000E                     	;# 
   845  0011                     	;# 
   846  0012                     	;# 
   847  0015                     	;# 
   848  0016                     	;# 
   849  0016                     	;# 
   850  0017                     	;# 
   851  0018                     	;# 
   852  0019                     	;# 
   853  001A                     	;# 
   854  001B                     	;# 
   855  001C                     	;# 
   856  001E                     	;# 
   857  001F                     	;# 
   858  008C                     	;# 
   859  008E                     	;# 
   860  0091                     	;# 
   861  0092                     	;# 
   862  0095                     	;# 
   863  0096                     	;# 
   864  0097                     	;# 
   865  0098                     	;# 
   866  0099                     	;# 
   867  009A                     	;# 
   868  009B                     	;# 
   869  009B                     	;# 
   870  009C                     	;# 
   871  009D                     	;# 
   872  009E                     	;# 
   873  010C                     	;# 
   874  010E                     	;# 
   875  0111                     	;# 
   876  0112                     	;# 
   877  0113                     	;# 
   878  0114                     	;# 
   879  0115                     	;# 
   880  0116                     	;# 
   881  0117                     	;# 
   882  0118                     	;# 
   883  0119                     	;# 
   884  011A                     	;# 
   885  011B                     	;# 
   886  011D                     	;# 
   887  011D                     	;# 
   888  018C                     	;# 
   889  018E                     	;# 
   890  0191                     	;# 
   891  0191                     	;# 
   892  0192                     	;# 
   893  0193                     	;# 
   894  0193                     	;# 
   895  0193                     	;# 
   896  0194                     	;# 
   897  0195                     	;# 
   898  0196                     	;# 
   899  0199                     	;# 
   900  019A                     	;# 
   901  019B                     	;# 
   902  019B                     	;# 
   903  019B                     	;# 
   904  019B                     	;# 
   905  019C                     	;# 
   906  019C                     	;# 
   907  019D                     	;# 
   908  019E                     	;# 
   909  019F                     	;# 
   910  020C                     	;# 
   911  020E                     	;# 
   912  0211                     	;# 
   913  0211                     	;# 
   914  0212                     	;# 
   915  0212                     	;# 
   916  0213                     	;# 
   917  0213                     	;# 
   918  0214                     	;# 
   919  0214                     	;# 
   920  0215                     	;# 
   921  0215                     	;# 
   922  0215                     	;# 
   923  0216                     	;# 
   924  0216                     	;# 
   925  0217                     	;# 
   926  0217                     	;# 
   927  0291                     	;# 
   928  0291                     	;# 
   929  0292                     	;# 
   930  0293                     	;# 
   931  0294                     	;# 
   932  0295                     	;# 
   933  0295                     	;# 
   934  0296                     	;# 
   935  0391                     	;# 
   936  0392                     	;# 
   937  0393                     	;# 
   938  039A                     	;# 
   939  039C                     	;# 
   940  039D                     	;# 
   941  039E                     	;# 
   942  039F                     	;# 
   943  0FE4                     	;# 
   944  0FE5                     	;# 
   945  0FE6                     	;# 
   946  0FE7                     	;# 
   947  0FE8                     	;# 
   948  0FE9                     	;# 
   949  0FEA                     	;# 
   950  0FEB                     	;# 
   951  0FED                     	;# 
   952  0FEE                     	;# 
   953  0FEF                     	;# 
   954  0000                     	;# 
   955  0001                     	;# 
   956  0002                     	;# 
   957  0003                     	;# 
   958  0004                     	;# 
   959  0005                     	;# 
   960  0006                     	;# 
   961  0007                     	;# 
   962  0008                     	;# 
   963  0009                     	;# 
   964  000A                     	;# 
   965  000B                     	;# 
   966  000C                     	;# 
   967  000E                     	;# 
   968  0011                     	;# 
   969  0012                     	;# 
   970  0015                     	;# 
   971  0016                     	;# 
   972  0016                     	;# 
   973  0017                     	;# 
   974  0018                     	;# 
   975  0019                     	;# 
   976  001A                     	;# 
   977  001B                     	;# 
   978  001C                     	;# 
   979  001E                     	;# 
   980  001F                     	;# 
   981  008C                     	;# 
   982  008E                     	;# 
   983  0091                     	;# 
   984  0092                     	;# 
   985  0095                     	;# 
   986  0096                     	;# 
   987  0097                     	;# 
   988  0098                     	;# 
   989  0099                     	;# 
   990  009A                     	;# 
   991  009B                     	;# 
   992  009B                     	;# 
   993  009C                     	;# 
   994  009D                     	;# 
   995  009E                     	;# 
   996  010C                     	;# 
   997  010E                     	;# 
   998  0111                     	;# 
   999  0112                     	;# 
  1000  0113                     	;# 
  1001  0114                     	;# 
  1002  0115                     	;# 
  1003  0116                     	;# 
  1004  0117                     	;# 
  1005  0118                     	;# 
  1006  0119                     	;# 
  1007  011A                     	;# 
  1008  011B                     	;# 
  1009  011D                     	;# 
  1010  011D                     	;# 
  1011  018C                     	;# 
  1012  018E                     	;# 
  1013  0191                     	;# 
  1014  0191                     	;# 
  1015  0192                     	;# 
  1016  0193                     	;# 
  1017  0193                     	;# 
  1018  0193                     	;# 
  1019  0194                     	;# 
  1020  0195                     	;# 
  1021  0196                     	;# 
  1022  0199                     	;# 
  1023  019A                     	;# 
  1024  019B                     	;# 
  1025  019B                     	;# 
  1026  019B                     	;# 
  1027  019B                     	;# 
  1028  019C                     	;# 
  1029  019C                     	;# 
  1030  019D                     	;# 
  1031  019E                     	;# 
  1032  019F                     	;# 
  1033  020C                     	;# 
  1034  020E                     	;# 
  1035  0211                     	;# 
  1036  0211                     	;# 
  1037  0212                     	;# 
  1038  0212                     	;# 
  1039  0213                     	;# 
  1040  0213                     	;# 
  1041  0214                     	;# 
  1042  0214                     	;# 
  1043  0215                     	;# 
  1044  0215                     	;# 
  1045  0215                     	;# 
  1046  0216                     	;# 
  1047  0216                     	;# 
  1048  0217                     	;# 
  1049  0217                     	;# 
  1050  0291                     	;# 
  1051  0291                     	;# 
  1052  0292                     	;# 
  1053  0293                     	;# 
  1054  0294                     	;# 
  1055  0295                     	;# 
  1056  0295                     	;# 
  1057  0296                     	;# 
  1058  0391                     	;# 
  1059  0392                     	;# 
  1060  0393                     	;# 
  1061  039A                     	;# 
  1062  039C                     	;# 
  1063  039D                     	;# 
  1064  039E                     	;# 
  1065  039F                     	;# 
  1066  0FE4                     	;# 
  1067  0FE5                     	;# 
  1068  0FE6                     	;# 
  1069  0FE7                     	;# 
  1070  0FE8                     	;# 
  1071  0FE9                     	;# 
  1072  0FEA                     	;# 
  1073  0FEB                     	;# 
  1074  0FED                     	;# 
  1075  0FEE                     	;# 
  1076  0FEF                     	;# 
  1077                           
  1078                           	psect	stringtext1
  1079  04AF                     __pstringtext1:
  1080  04AF                     _ROTATION_TIME:
  1081  04AF  343C               	retlw	60
  1082  04B0  3400               	retlw	0
  1083  04B1  3400               	retlw	0
  1084  04B2  3400               	retlw	0
  1085  04B3                     __end_of_ROTATION_TIME:
  1086                           
  1087                           	psect	stringtext2
  1088  04B3                     __pstringtext2:
  1089  04B3                     _GOOD_WSP_VOLTAGE:
  1090  04B3  3440               	retlw	64
  1091  04B4  349C               	retlw	156
  1092  04B5  3400               	retlw	0
  1093  04B6  3400               	retlw	0
  1094  04B7                     __end_of_GOOD_WSP_VOLTAGE:
  1095                           
  1096                           	psect	stringtext3
  1097  04B7                     __pstringtext3:
  1098  04B7                     _BAD_WSP_VOLTAGE:
  1099  04B7  3420               	retlw	32
  1100  04B8  344E               	retlw	78
  1101  04B9  3400               	retlw	0
  1102  04BA  3400               	retlw	0
  1103  04BB                     __end_of_BAD_WSP_VOLTAGE:
  1104                           
  1105                           	psect	nvBANK0
  1106  0037                     __pnvBANK0:
  1107  0037                     _TMR0_InterruptHandler:
  1108  0037                     	ds	2
  1109  0039                     _TMR2_InterruptHandler:
  1110  0039                     	ds	2
  1111  003B                     _timer0ReloadVal:
  1112  003B                     	ds	1
  1113  0015                     _TMR0	set	21
  1114  001C                     _T2CONbits	set	28
  1115  001C                     _T2CON	set	28
  1116  001A                     _TMR2	set	26
  1117  001B                     _PR2	set	27
  1118  0011                     _PIR1bits	set	17
  1119  000B                     _INTCONbits	set	11
  1120  008E                     _TRISCbits	set	142
  1121  008C                     _TRISAbits	set	140
  1122  0095                     _OPTION_REG	set	149
  1123  0091                     _PIE1bits	set	145
  1124  0095                     _OPTION_REGbits	set	149
  1125  008E                     _TRISC	set	142
  1126  008C                     _TRISA	set	140
  1127  009D                     _ADCON0bits	set	157
  1128  009D                     _ADCON0	set	157
  1129  009C                     _ADRESH	set	156
  1130  009B                     _ADRESL	set	155
  1131  009E                     _ADCON1	set	158
  1132  0097                     _WDTCON	set	151
  1133  0098                     _OSCTUNE	set	152
  1134  0099                     _OSCCON	set	153
  1135  010E                     _LATCbits	set	270
  1136  010C                     _LATAbits	set	268
  1137  011D                     _APFCON	set	285
  1138  010E                     _LATC	set	270
  1139  010C                     _LATA	set	268
  1140  0116                     _BORCON	set	278
  1141  018C                     _ANSELAbits	set	396
  1142  018E                     _ANSELCbits	set	398
  1143  018C                     _ANSELA	set	396
  1144  018E                     _ANSELC	set	398
  1145  020E                     _WPUCbits	set	526
  1146  020C                     _WPUAbits	set	524
  1147  020E                     _WPUC	set	526
  1148  020C                     _WPUA	set	524
  1149                           
  1150                           	psect	cinit
  1151  0027                     start_initialization:	
  1152                           ; #config settings
  1153                           
  1154  0027                     __initialization:
  1155                           
  1156                           ; Clear objects allocated to COMMON
  1157  0027  01F8               	clrf	__pbssCOMMON& (0+127)
  1158  0028  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1159  0029  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1160  002A  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1161  002B  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1162                           
  1163                           ; Clear objects allocated to BANK0
  1164  002C  0020               	movlb	0	; select bank0
  1165  002D  01AC               	clrf	__pbssBANK0& (0+127)
  1166  002E  01AD               	clrf	(__pbssBANK0+1)& (0+127)
  1167  002F  01AE               	clrf	(__pbssBANK0+2)& (0+127)
  1168  0030  01AF               	clrf	(__pbssBANK0+3)& (0+127)
  1169  0031  01B0               	clrf	(__pbssBANK0+4)& (0+127)
  1170  0032  01B1               	clrf	(__pbssBANK0+5)& (0+127)
  1171  0033  01B2               	clrf	(__pbssBANK0+6)& (0+127)
  1172  0034  01B3               	clrf	(__pbssBANK0+7)& (0+127)
  1173  0035  01B4               	clrf	(__pbssBANK0+8)& (0+127)
  1174  0036  01B5               	clrf	(__pbssBANK0+9)& (0+127)
  1175  0037  01B6               	clrf	(__pbssBANK0+10)& (0+127)
  1176  0038                     end_of_initialization:	
  1177                           ;End of C runtime variable initialization code
  1178                           
  1179  0038                     __end_of__initialization:
  1180  0038  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1181  0039  0020               	movlb	0
  1182  003A  2B1F               	ljmp	_main	;jump to C main() function
  1183                           
  1184                           	psect	bssCOMMON
  1185  0078                     __pbssCOMMON:
  1186  0078                     TMR2_ISR@CountCallBack:
  1187  0078                     	ds	2
  1188  007A                     sec_tick_work@iled:
  1189  007A                     	ds	1
  1190  007B                     get_measure@measures:
  1191  007B                     	ds	1
  1192  007C                     _FLAGS:
  1193  007C                     	ds	1
  1194                           
  1195                           	psect	bssBANK0
  1196  002C                     __pbssBANK0:
  1197  002C                     _time_s:
  1198  002C                     	ds	4
  1199  0030                     _ADC_InterruptHandler:
  1200  0030                     	ds	2
  1201  0032                     get_jump_full@jump_counter:
  1202  0032                     	ds	1
  1203  0033                     get_jump@jump_counter:
  1204  0033                     	ds	1
  1205  0034                     get_fun_full@fun_counter:
  1206  0034                     	ds	1
  1207  0035                     get_fun@fun_counter:
  1208  0035                     	ds	1
  1209  0036                     _time_pow_s:
  1210  0036                     	ds	1
  1211                           
  1212                           	psect	cstackCOMMON
  1213  0070                     __pcstackCOMMON:
  1214  0070                     ?_PIN_MANAGER_Initialize:
  1215  0070                     ?_OSCILLATOR_Initialize:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ?_WDT_Initialize:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     ?_TMR2_Initialize:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     ?_ADC_Initialize:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     ?_TMR0_Initialize:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0070                     ?_TMR0_ISR:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     ??_TMR0_ISR:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     ?_TMR2_ISR:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ?_TMR2_DefaultInterruptHandler:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242  0070                     ??_TMR2_DefaultInterruptHandler:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245  0070                     ?_TMR2_CallBack:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248  0070                     ?_TMR0_DefaultInterruptHandler:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251  0070                     ??_TMR0_DefaultInterruptHandler:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254  0070                     ?_SYSTEM_Initialize:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257  0070                     ?_INTERRUPT_InterruptManager:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260  0070                     ?_TMR2_StartTimer:	
  1261                           ; 1 bytes @ 0x0
  1262                           
  1263  0070                     ?_switch_zum:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266  0070                     ?_toggle_tone:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269  0070                     ??_toggle_tone:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272  0070                     ?_go_close:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275  0070                     ?_go_open:	
  1276                           ; 1 bytes @ 0x0
  1277                           
  1278  0070                     ?_go_close_alt:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281  0070                     ?_go_open_alt:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284  0070                     ?_start_alarm:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287  0070                     ?_get_measure:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290  0070                     ?_get_fun:	
  1291                           ; 1 bytes @ 0x0
  1292                           
  1293  0070                     ?_get_fun_full:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296  0070                     ?_get_jump:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0070                     ?_get_jump_full:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0070                     ?_rele_tick:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0070                     ??_rele_tick:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0070                     ?_sec_tick_work:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0070                     ?_povorot:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0070                     ?_fun_work:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0070                     ?_switch_wm:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320  0070                     ?_start_setup:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323  0070                     ?_main:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0070                     ?i1_switch_zum:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329  0070                     ??i1_switch_zum:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332  0070                     ?i1_go_close:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335  0070                     ??i1_go_close:	
  1336                           ; 1 bytes @ 0x0
  1337                           
  1338  0070                     ?i1_go_close_alt:	
  1339                           ; 1 bytes @ 0x0
  1340                           
  1341  0070                     ??i1_go_close_alt:	
  1342                           ; 1 bytes @ 0x0
  1343                           
  1344  0070                     ?i1_ADC_GetConversion:	
  1345                           ; 1 bytes @ 0x0
  1346                           
  1347                           
  1348                           ; 2 bytes @ 0x0
  1349  0070                     	ds	2
  1350  0072                     ??_start_alarm:
  1351  0072                     ??i1_ADC_GetConversion:	
  1352                           ; 1 bytes @ 0x2
  1353                           
  1354                           
  1355                           ; 1 bytes @ 0x2
  1356  0072                     	ds	1
  1357  0073                     i1ADC_GetConversion@channel:
  1358                           
  1359                           ; 1 bytes @ 0x3
  1360  0073                     	ds	1
  1361  0074                     ??_get_measure:
  1362                           
  1363                           ; 1 bytes @ 0x4
  1364  0074                     	ds	1
  1365  0075                     get_measure@res:
  1366                           
  1367                           ; 2 bytes @ 0x5
  1368  0075                     	ds	2
  1369  0077                     ??_sec_tick_work:
  1370                           
  1371                           ; 1 bytes @ 0x7
  1372  0077                     	ds	1
  1373  0078                     ??_TMR2_ISR:
  1374  0078                     ??_TMR2_CallBack:	
  1375                           ; 1 bytes @ 0x8
  1376                           
  1377  0078                     ??_INTERRUPT_InterruptManager:	
  1378                           ; 1 bytes @ 0x8
  1379                           
  1380                           
  1381                           	psect	cstackBANK0
  1382  0020                     __pcstackBANK0:	
  1383                           ; 1 bytes @ 0x8
  1384                           
  1385  0020                     ??_PIN_MANAGER_Initialize:
  1386  0020                     ??_OSCILLATOR_Initialize:	
  1387                           ; 1 bytes @ 0x0
  1388                           
  1389  0020                     ??_WDT_Initialize:	
  1390                           ; 1 bytes @ 0x0
  1391                           
  1392  0020                     ??_ADC_Initialize:	
  1393                           ; 1 bytes @ 0x0
  1394                           
  1395  0020                     ?_TMR2_SetInterruptHandler:	
  1396                           ; 1 bytes @ 0x0
  1397                           
  1398  0020                     ?_TMR0_SetInterruptHandler:	
  1399                           ; 1 bytes @ 0x0
  1400                           
  1401  0020                     ??_TMR2_StartTimer:	
  1402                           ; 1 bytes @ 0x0
  1403                           
  1404  0020                     ??_switch_zum:	
  1405                           ; 1 bytes @ 0x0
  1406                           
  1407  0020                     ?_beep:	
  1408                           ; 1 bytes @ 0x0
  1409                           
  1410  0020                     ??_go_close:	
  1411                           ; 1 bytes @ 0x0
  1412                           
  1413  0020                     ??_go_open:	
  1414                           ; 1 bytes @ 0x0
  1415                           
  1416  0020                     ??_go_close_alt:	
  1417                           ; 1 bytes @ 0x0
  1418                           
  1419  0020                     ??_go_open_alt:	
  1420                           ; 1 bytes @ 0x0
  1421                           
  1422  0020                     ?_ADC_GetConversion:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425  0020                     TMR2_SetInterruptHandler@InterruptHandler:	
  1426                           ; 2 bytes @ 0x0
  1427                           
  1428  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  1429                           ; 2 bytes @ 0x0
  1430                           
  1431  0020                     beep@delay:	
  1432                           ; 2 bytes @ 0x0
  1433                           
  1434                           
  1435                           ; 2 bytes @ 0x0
  1436  0020                     	ds	2
  1437  0022                     ??_TMR2_Initialize:
  1438  0022                     ??_TMR0_Initialize:	
  1439                           ; 1 bytes @ 0x2
  1440                           
  1441  0022                     ??_TMR2_SetInterruptHandler:	
  1442                           ; 1 bytes @ 0x2
  1443                           
  1444  0022                     ??_TMR0_SetInterruptHandler:	
  1445                           ; 1 bytes @ 0x2
  1446                           
  1447  0022                     ??_ADC_GetConversion:	
  1448                           ; 1 bytes @ 0x2
  1449                           
  1450  0022                     ??_povorot:	
  1451                           ; 1 bytes @ 0x2
  1452                           
  1453  0022                     beep@pause:	
  1454                           ; 1 bytes @ 0x2
  1455                           
  1456                           
  1457                           ; 2 bytes @ 0x2
  1458  0022                     	ds	1
  1459  0023                     ??_SYSTEM_Initialize:
  1460  0023                     ADC_GetConversion@channel:	
  1461                           ; 1 bytes @ 0x3
  1462                           
  1463                           
  1464                           ; 1 bytes @ 0x3
  1465  0023                     	ds	1
  1466  0024                     ??_get_fun:
  1467  0024                     ??_get_fun_full:	
  1468                           ; 1 bytes @ 0x4
  1469                           
  1470  0024                     ??_get_jump:	
  1471                           ; 1 bytes @ 0x4
  1472                           
  1473  0024                     ??_get_jump_full:	
  1474                           ; 1 bytes @ 0x4
  1475                           
  1476  0024                     beep@time:	
  1477                           ; 1 bytes @ 0x4
  1478                           
  1479                           
  1480                           ; 1 bytes @ 0x4
  1481  0024                     	ds	1
  1482  0025                     beep@count:
  1483  0025                     get_fun@res:	
  1484                           ; 1 bytes @ 0x5
  1485                           
  1486  0025                     get_fun_full@res:	
  1487                           ; 2 bytes @ 0x5
  1488                           
  1489  0025                     get_jump@res:	
  1490                           ; 2 bytes @ 0x5
  1491                           
  1492  0025                     get_jump_full@res:	
  1493                           ; 2 bytes @ 0x5
  1494                           
  1495                           
  1496                           ; 2 bytes @ 0x5
  1497  0025                     	ds	1
  1498  0026                     ??_beep:
  1499                           
  1500                           ; 1 bytes @ 0x6
  1501  0026                     	ds	1
  1502  0027                     beep@j:
  1503  0027                     get_fun_full@flag:	
  1504                           ; 1 bytes @ 0x7
  1505                           
  1506  0027                     get_jump_full@flag:	
  1507                           ; 1 bytes @ 0x7
  1508                           
  1509                           
  1510                           ; 1 bytes @ 0x7
  1511  0027                     	ds	1
  1512  0028                     ??_start_setup:
  1513  0028                     beep@i:	
  1514                           ; 1 bytes @ 0x8
  1515                           
  1516                           
  1517                           ; 1 bytes @ 0x8
  1518  0028                     	ds	1
  1519  0029                     ??_fun_work:
  1520  0029                     ??_switch_wm:	
  1521                           ; 1 bytes @ 0x9
  1522                           
  1523                           
  1524                           ; 1 bytes @ 0x9
  1525  0029                     	ds	2
  1526  002B                     ??_main:
  1527                           
  1528                           ; 1 bytes @ 0xB
  1529  002B                     	ds	1
  1530                           
  1531                           	psect	maintext
  1532  031F                     __pmaintext:	
  1533 ;;
  1534 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1535 ;;
  1536 ;; *************** function _main *****************
  1537 ;; Defined at:
  1538 ;;		line 359 in file "main.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0, pclath, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : B1F/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMMON   BANK0   BANK1
  1552 ;;      Params:         0       0       0
  1553 ;;      Locals:         0       0       0
  1554 ;;      Temps:          0       1       0
  1555 ;;      Totals:         0       1       0
  1556 ;;Total ram usage:        1 bytes
  1557 ;; Hardware stack levels required when called: 11
  1558 ;; This function calls:
  1559 ;;		_fun_work
  1560 ;;		_get_fun
  1561 ;;		_get_jump
  1562 ;;		_povorot
  1563 ;;		_start_setup
  1564 ;;		_switch_wm
  1565 ;;		_switch_zum
  1566 ;; This function is called by:
  1567 ;;		Startup code after reset
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571  031F                     _main:	
  1572                           ;psect for function _main
  1573                           
  1574  031F                     l2020:	
  1575                           ;incstack = 0
  1576                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1577                           
  1578                           
  1579                           ;main.c: 361:     start_setup();
  1580  031F  3182  2264  3183   	fcall	_start_setup
  1581  0322                     l2022:
  1582                           
  1583                           ;main.c: 365:      TMR0 = 0x00;
  1584  0322  0020               	movlb	0	; select bank0
  1585  0323  0195               	clrf	21	;volatile
  1586  0324                     l2024:
  1587                           
  1588                           ;main.c: 372:         _delay((unsigned long)((50)*(4000000/4000.0)));
  1589  0324  3041               	movlw	65
  1590  0325  0020               	movlb	0	; select bank0
  1591  0326  00AB               	movwf	??_main
  1592  0327  30EE               	movlw	238
  1593  0328                     u1377:
  1594  0328  0B89               	decfsz	9,f
  1595  0329  2B28               	goto	u1377
  1596  032A  0BAB               	decfsz	??_main,f
  1597  032B  2B28               	goto	u1377
  1598  032C  0000               	nop
  1599  032D                     l2026:
  1600                           
  1601                           ;main.c: 374:         if (!FLAGS.bits.ALARM) {
  1602  032D  187C               	btfsc	_FLAGS,0
  1603  032E  2B30               	goto	u1361
  1604  032F  2B31               	goto	u1360
  1605  0330                     u1361:
  1606  0330  2B24               	goto	l2024
  1607  0331                     u1360:
  1608  0331                     l2028:
  1609                           
  1610                           ;main.c: 375:             get_fun();
  1611  0331  3181  21B0  3183   	fcall	_get_fun
  1612                           
  1613                           ;main.c: 376:             fun_work();
  1614  0334  3180  203B  3183   	fcall	_fun_work
  1615                           
  1616                           ;main.c: 377:             get_jump();
  1617  0337  3182  222A  3183   	fcall	_get_jump
  1618                           
  1619                           ;main.c: 378:             switch_wm();
  1620  033A  3181  2127  3183   	fcall	_switch_wm
  1621                           
  1622                           ;main.c: 379:             povorot();
  1623  033D  3180  2094  3183   	fcall	_povorot
  1624  0340                     l2030:
  1625                           
  1626                           ;main.c: 381:             switch_zum();
  1627  0340  3184  2427  3183   	fcall	_switch_zum
  1628  0343  2B24               	goto	l2024
  1629  0344  2826               	ljmp	start
  1630  0345                     __end_of_main:
  1631                           
  1632                           	psect	text1
  1633  0127                     __ptext1:	
  1634 ;; *************** function _switch_wm *****************
  1635 ;; Defined at:
  1636 ;;		line 306 in file "main.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0, pclath, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMMON   BANK0   BANK1
  1650 ;;      Params:         0       0       0
  1651 ;;      Locals:         0       0       0
  1652 ;;      Temps:          0       2       0
  1653 ;;      Totals:         0       2       0
  1654 ;;Total ram usage:        2 bytes
  1655 ;; Hardware stack levels used: 1
  1656 ;; Hardware stack levels required when called: 9
  1657 ;; This function calls:
  1658 ;;		_beep
  1659 ;;		_go_close
  1660 ;;		_go_close_alt
  1661 ;; This function is called by:
  1662 ;;		_main
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666  0127                     _switch_wm:	
  1667                           ;psect for function _switch_wm
  1668                           
  1669  0127                     l1952:	
  1670                           ;incstack = 0
  1671                           ; Regs used in _switch_wm: [wreg+status,2+status,0+pclath+cstack]
  1672                           
  1673                           
  1674                           ;main.c: 307:     if (FLAGS.bits._JUMP_CONNECTED) {
  1675  0127  1E7C               	btfss	_FLAGS,4
  1676  0128  292A               	goto	u1261
  1677  0129  292B               	goto	u1260
  1678  012A                     u1261:
  1679  012A  294C               	goto	l428
  1680  012B                     u1260:
  1681  012B                     l1954:
  1682                           
  1683                           ;main.c: 308:         if (FLAGS.bits.NORMAL_WORK_MODE) {
  1684  012B  1CFC               	btfss	_FLAGS,1
  1685  012C  292E               	goto	u1271
  1686  012D  292F               	goto	u1270
  1687  012E                     u1271:
  1688  012E  296C               	goto	l434
  1689  012F                     u1270:
  1690  012F                     l1956:
  1691                           
  1692                           ;main.c: 309:             FLAGS.bits.NORMAL_WORK_MODE = 0;
  1693  012F  10FC               	bcf	_FLAGS,1
  1694                           
  1695                           ;main.c: 310:             if (FLAGS.bits.CLOSED) go_close_alt();
  1696  0130  1D7C               	btfss	_FLAGS,2
  1697  0131  2933               	goto	u1281
  1698  0132  2934               	goto	u1280
  1699  0133                     u1281:
  1700  0133  2937               	goto	l1960
  1701  0134                     u1280:
  1702  0134                     l1958:
  1703  0134  3184  24A5  3181   	fcall	_go_close_alt
  1704  0137                     l1960:
  1705                           
  1706                           ;main.c: 312:             beep(250, 100, 40, 3);
  1707  0137  30FA               	movlw	250
  1708  0138  0020               	movlb	0	; select bank0
  1709  0139  00A0               	movwf	beep@delay
  1710  013A  3000               	movlw	0
  1711  013B  00A1               	movwf	beep@delay+1
  1712  013C  3064               	movlw	100
  1713  013D  00A2               	movwf	beep@pause
  1714  013E  3000               	movlw	0
  1715  013F  00A3               	movwf	beep@pause+1
  1716  0140  3028               	movlw	40
  1717  0141  00A9               	movwf	??_switch_wm
  1718  0142  0829               	movf	??_switch_wm,w
  1719  0143  00A4               	movwf	beep@time
  1720  0144  3003               	movlw	3
  1721  0145  00AA               	movwf	??_switch_wm+1
  1722  0146  082A               	movf	??_switch_wm+1,w
  1723  0147  00A5               	movwf	beep@count
  1724  0148  3182  22CB  3181   	fcall	_beep
  1725  014B  296C               	goto	l434
  1726  014C                     l428:
  1727                           
  1728                           ;main.c: 315:         if (!FLAGS.bits.NORMAL_WORK_MODE) {
  1729  014C  18FC               	btfsc	_FLAGS,1
  1730  014D  294F               	goto	u1291
  1731  014E  2950               	goto	u1290
  1732  014F                     u1291:
  1733  014F  296C               	goto	l434
  1734  0150                     u1290:
  1735  0150                     l1962:
  1736                           
  1737                           ;main.c: 316:             FLAGS.bits.NORMAL_WORK_MODE = 1;
  1738  0150  14FC               	bsf	_FLAGS,1
  1739                           
  1740                           ;main.c: 317:             if (FLAGS.bits.CLOSED) go_close();
  1741  0151  1D7C               	btfss	_FLAGS,2
  1742  0152  2954               	goto	u1301
  1743  0153  2955               	goto	u1300
  1744  0154                     u1301:
  1745  0154  2958               	goto	l433
  1746  0155                     u1300:
  1747  0155                     l1964:
  1748  0155  3183  2345  3181   	fcall	_go_close
  1749  0158                     l433:
  1750                           
  1751                           ;main.c: 319:             beep(250, 100, 40, 2);
  1752  0158  30FA               	movlw	250
  1753  0159  0020               	movlb	0	; select bank0
  1754  015A  00A0               	movwf	beep@delay
  1755  015B  3000               	movlw	0
  1756  015C  00A1               	movwf	beep@delay+1
  1757  015D  3064               	movlw	100
  1758  015E  00A2               	movwf	beep@pause
  1759  015F  3000               	movlw	0
  1760  0160  00A3               	movwf	beep@pause+1
  1761  0161  3028               	movlw	40
  1762  0162  00A9               	movwf	??_switch_wm
  1763  0163  0829               	movf	??_switch_wm,w
  1764  0164  00A4               	movwf	beep@time
  1765  0165  3002               	movlw	2
  1766  0166  00AA               	movwf	??_switch_wm+1
  1767  0167  082A               	movf	??_switch_wm+1,w
  1768  0168  00A5               	movwf	beep@count
  1769  0169  3182  22CB  3181   	fcall	_beep
  1770  016C                     l434:
  1771  016C  0008               	return
  1772  016D                     __end_of_switch_wm:
  1773                           
  1774                           	psect	text2
  1775  0264                     __ptext2:	
  1776 ;; *************** function _start_setup *****************
  1777 ;; Defined at:
  1778 ;;		line 324 in file "main.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;		None
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;		None
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg, status,2, status,0, pclath, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMMON   BANK0   BANK1
  1792 ;;      Params:         0       0       0
  1793 ;;      Locals:         0       0       0
  1794 ;;      Temps:          0       0       0
  1795 ;;      Totals:         0       0       0
  1796 ;;Total ram usage:        0 bytes
  1797 ;; Hardware stack levels used: 1
  1798 ;; Hardware stack levels required when called: 10
  1799 ;; This function calls:
  1800 ;;		_SYSTEM_Initialize
  1801 ;;		_TMR0_SetInterruptHandler
  1802 ;;		_TMR2_SetInterruptHandler
  1803 ;;		_TMR2_StartTimer
  1804 ;;		_get_fun_full
  1805 ;;		_get_jump_full
  1806 ;; This function is called by:
  1807 ;;		_main
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811  0264                     _start_setup:	
  1812                           ;psect for function _start_setup
  1813                           
  1814  0264                     l1966:	
  1815                           ;incstack = 0
  1816                           ; Regs used in _start_setup: [wreg+status,2+status,0+pclath+cstack]
  1817                           
  1818                           
  1819                           ;main.c: 326:     SYSTEM_Initialize();
  1820  0264  3184  2401  3182   	fcall	_SYSTEM_Initialize
  1821  0267                     l1968:
  1822                           
  1823                           ;main.c: 327:     (INTCONbits.GIE = 1);
  1824  0267  178B               	bsf	11,7	;volatile
  1825  0268                     l1970:
  1826                           
  1827                           ;main.c: 328:     (INTCONbits.PEIE = 1);
  1828  0268  170B               	bsf	11,6	;volatile
  1829                           
  1830                           ;main.c: 331:     TMR0_SetInterruptHandler(switch_zum);
  1831  0269  3027               	movlw	low _switch_zum
  1832  026A  0020               	movlb	0	; select bank0
  1833  026B  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1834  026C  3004               	movlw	high _switch_zum
  1835  026D  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1836  026E  3184  249A  3182   	fcall	_TMR0_SetInterruptHandler
  1837                           
  1838                           ;main.c: 332:     TMR2_SetInterruptHandler(sec_tick_work);
  1839  0271  30EE               	movlw	low _sec_tick_work
  1840  0272  0020               	movlb	0	; select bank0
  1841  0273  00A0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  1842  0274  3001               	movlw	high _sec_tick_work
  1843  0275  00A1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  1844  0276  3184  2494  3182   	fcall	_TMR2_SetInterruptHandler
  1845  0279                     l1972:
  1846                           
  1847                           ;main.c: 333:     TMR2_StartTimer();
  1848  0279  3184  24BF  3182   	fcall	_TMR2_StartTimer
  1849  027C                     l1974:
  1850  027C  0023               	movlb	3	; select bank3
  1851  027D  118E               	bcf	14,3	;volatile
  1852  027E                     l1976:
  1853  027E  108C               	bcf	12,1	;volatile
  1854  027F                     l1978:
  1855  027F  110E               	bcf	14,2	;volatile
  1856  0280                     l1980:
  1857  0280  0024               	movlb	4	; select bank4
  1858  0281  108C               	bcf	12,1	;volatile
  1859  0282                     l1982:
  1860  0282  0021               	movlb	1	; select bank1
  1861  0283  148C               	bsf	12,1	;volatile
  1862  0284                     l1984:
  1863  0284  0024               	movlb	4	; select bank4
  1864  0285  110E               	bcf	14,2	;volatile
  1865  0286                     l1986:
  1866  0286  0021               	movlb	1	; select bank1
  1867  0287  150E               	bsf	14,2	;volatile
  1868  0288                     l1988:
  1869                           
  1870                           ;main.c: 345:     INTCONbits.TMR0IE = 0;
  1871  0288  128B               	bcf	11,5	;volatile
  1872  0289                     l1990:
  1873                           
  1874                           ;main.c: 346:     FLAGS.value = 0;
  1875  0289  01FC               	clrf	_FLAGS
  1876  028A                     l1992:
  1877  028A  0022               	movlb	2	; select bank2
  1878  028B  128E               	bcf	14,5	;volatile
  1879  028C                     l1994:
  1880  028C  120E               	bcf	14,4	;volatile
  1881  028D                     l1996:
  1882  028D  100E               	bcf	14,0	;volatile
  1883  028E                     l1998:
  1884  028E  0021               	movlb	1	; select bank1
  1885  028F  100E               	bcf	14,0	;volatile
  1886  0290                     l2000:
  1887                           
  1888                           ;main.c: 353:     get_fun_full();
  1889  0290  3180  20E0  3182   	fcall	_get_fun_full
  1890  0293                     l2002:
  1891                           
  1892                           ;main.c: 354:     get_jump_full();
  1893  0293  3181  216D  3182   	fcall	_get_jump_full
  1894  0296                     l2004:
  1895                           
  1896                           ;main.c: 355:     time_pow_s = 0;
  1897  0296  0020               	movlb	0	; select bank0
  1898  0297  01B6               	clrf	_time_pow_s
  1899  0298                     l459:
  1900  0298  0008               	return
  1901  0299                     __end_of_start_setup:
  1902                           
  1903                           	psect	text3
  1904  016D                     __ptext3:	
  1905 ;; *************** function _get_jump_full *****************
  1906 ;; Defined at:
  1907 ;;		line 203 in file "main.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  res             2    5[BANK0 ] unsigned int 
  1912 ;;  flag            1    7[BANK0 ] unsigned char 
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      void 
  1915 ;; Registers used:
  1916 ;;		wreg, status,2, status,0, pclath, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1
  1922 ;;      Params:         0       0       0
  1923 ;;      Locals:         0       3       0
  1924 ;;      Temps:          0       1       0
  1925 ;;      Totals:         0       4       0
  1926 ;;Total ram usage:        4 bytes
  1927 ;; Hardware stack levels used: 1
  1928 ;; Hardware stack levels required when called: 8
  1929 ;; This function calls:
  1930 ;;		_ADC_GetConversion
  1931 ;; This function is called by:
  1932 ;;		_start_setup
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936  016D                     _get_jump_full:	
  1937                           ;psect for function _get_jump_full
  1938                           
  1939  016D                     l374:	
  1940                           ;incstack = 0
  1941                           ; Regs used in _get_jump_full: [wreg+status,2+status,0+pclath+cstack]
  1942                           ;main.c: 205:     static signed char jump_counter;;main.c: 206:     do { ANSELAbits.ANSA
      +                          1 = 1; } while(0);
  1943                           
  1944  016D  0023               	movlb	3	; select bank3
  1945  016E  148C               	bsf	12,1	;volatile
  1946  016F                     l1804:
  1947                           
  1948                           ;main.c: 207:     char flag = 0;
  1949  016F  0020               	movlb	0	; select bank0
  1950  0170  01A7               	clrf	get_jump_full@flag
  1951  0171                     l1806:
  1952                           
  1953                           ;main.c: 209:         unsigned res = ADC_GetConversion(PIN_JUMP_STATE);
  1954  0171  3001               	movlw	1
  1955  0172  3183  2367  3181   	fcall	_ADC_GetConversion
  1956  0175  0020               	movlb	0	; select bank0
  1957  0176  0821               	movf	?_ADC_GetConversion+1,w
  1958  0177  00A6               	movwf	get_jump_full@res+1
  1959  0178  0820               	movf	?_ADC_GetConversion,w
  1960  0179  00A5               	movwf	get_jump_full@res
  1961  017A                     l1808:
  1962                           
  1963                           ;main.c: 210:         if (res < 2000) jump_counter--;
  1964  017A  3007               	movlw	7
  1965  017B  0226               	subwf	get_jump_full@res+1,w
  1966  017C  30D0               	movlw	208
  1967  017D  1903               	skipnz
  1968  017E  0225               	subwf	get_jump_full@res,w
  1969  017F  1803               	skipnc
  1970  0180  2982               	goto	u951
  1971  0181  2983               	goto	u950
  1972  0182                     u951:
  1973  0182  2988               	goto	l1812
  1974  0183                     u950:
  1975  0183                     l1810:
  1976  0183  30FF               	movlw	255
  1977  0184  00A4               	movwf	??_get_jump_full
  1978  0185  0824               	movf	??_get_jump_full,w
  1979  0186  07B2               	addwf	get_jump_full@jump_counter,f
  1980  0187  298C               	goto	l1814
  1981  0188                     l1812:
  1982  0188  3001               	movlw	1
  1983  0189  00A4               	movwf	??_get_jump_full
  1984  018A  0824               	movf	??_get_jump_full,w
  1985  018B  07B2               	addwf	get_jump_full@jump_counter,f
  1986  018C                     l1814:
  1987                           
  1988                           ;main.c: 213:         if (jump_counter > 10) {
  1989  018C  0832               	movf	get_jump_full@jump_counter,w
  1990  018D  3A80               	xorlw	128
  1991  018E  3E75               	addlw	-139
  1992  018F  1C03               	skipc
  1993  0190  2992               	goto	u961
  1994  0191  2993               	goto	u960
  1995  0192                     u961:
  1996  0192  299B               	goto	l1822
  1997  0193                     u960:
  1998  0193                     l1816:
  1999                           
  2000                           ;main.c: 214:             jump_counter = 10;
  2001  0193  300A               	movlw	10
  2002  0194  00A4               	movwf	??_get_jump_full
  2003  0195  0824               	movf	??_get_jump_full,w
  2004  0196  00B2               	movwf	get_jump_full@jump_counter
  2005  0197                     l1818:
  2006                           
  2007                           ;main.c: 215:             FLAGS.bits._JUMP_CONNECTED = 0;
  2008  0197  127C               	bcf	_FLAGS,4
  2009  0198                     l1820:
  2010                           
  2011                           ;main.c: 216:             flag = 1;
  2012  0198  01A7               	clrf	get_jump_full@flag
  2013  0199  0AA7               	incf	get_jump_full@flag,f
  2014                           
  2015                           ;main.c: 217:         } else if (jump_counter<-10) {
  2016  019A  29A8               	goto	l1830
  2017  019B                     l1822:
  2018  019B  0832               	movf	get_jump_full@jump_counter,w
  2019  019C  3A80               	xorlw	128
  2020  019D  3E8A               	addlw	138
  2021  019E  1803               	skipnc
  2022  019F  29A1               	goto	u971
  2023  01A0  29A2               	goto	u970
  2024  01A1                     u971:
  2025  01A1  29A8               	goto	l1830
  2026  01A2                     u970:
  2027  01A2                     l1824:
  2028                           
  2029                           ;main.c: 218:             jump_counter = -10;
  2030  01A2  30F6               	movlw	246
  2031  01A3  00A4               	movwf	??_get_jump_full
  2032  01A4  0824               	movf	??_get_jump_full,w
  2033  01A5  00B2               	movwf	get_jump_full@jump_counter
  2034  01A6                     l1826:
  2035                           
  2036                           ;main.c: 219:             FLAGS.bits._JUMP_CONNECTED = 1;
  2037  01A6  167C               	bsf	_FLAGS,4
  2038  01A7  2998               	goto	l1820
  2039  01A8                     l1830:
  2040                           
  2041                           ;main.c: 222:     } while (flag == 0);
  2042  01A8  0827               	movf	get_jump_full@flag,w
  2043  01A9  1903               	btfsc	3,2
  2044  01AA  29AC               	goto	u981
  2045  01AB  29AD               	goto	u980
  2046  01AC                     u981:
  2047  01AC  2971               	goto	l1806
  2048  01AD                     u980:
  2049  01AD                     l383:	
  2050                           ;main.c: 223:     do { ANSELAbits.ANSA1 = 0; } while(0);
  2051                           
  2052  01AD  0023               	movlb	3	; select bank3
  2053  01AE  108C               	bcf	12,1	;volatile
  2054  01AF                     l385:
  2055  01AF  0008               	return
  2056  01B0                     __end_of_get_jump_full:
  2057                           
  2058                           	psect	text4
  2059  00E0                     __ptext4:	
  2060 ;; *************** function _get_fun_full *****************
  2061 ;; Defined at:
  2062 ;;		line 156 in file "main.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;		None
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  res             2    5[BANK0 ] unsigned int 
  2067 ;;  flag            1    7[BANK0 ] unsigned char 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, status,2, status,0, pclath, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMMON   BANK0   BANK1
  2077 ;;      Params:         0       0       0
  2078 ;;      Locals:         0       3       0
  2079 ;;      Temps:          0       1       0
  2080 ;;      Totals:         0       4       0
  2081 ;;Total ram usage:        4 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; Hardware stack levels required when called: 8
  2084 ;; This function calls:
  2085 ;;		_ADC_GetConversion
  2086 ;; This function is called by:
  2087 ;;		_start_setup
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091  00E0                     _get_fun_full:	
  2092                           ;psect for function _get_fun_full
  2093                           
  2094  00E0                     l340:	
  2095                           ;incstack = 0
  2096                           ; Regs used in _get_fun_full: [wreg+status,2+status,0+pclath+cstack]
  2097                           ;main.c: 158:     static signed char fun_counter;;main.c: 159:     do { LATCbits.LATC1 =
      +                           1; } while(0);
  2098                           
  2099  00E0  0022               	movlb	2	; select bank2
  2100  00E1  148E               	bsf	14,1	;volatile
  2101  00E2                     l342:	
  2102                           ;main.c: 160:     do { ANSELCbits.ANSC2 = 1; } while(0);
  2103                           
  2104  00E2  0023               	movlb	3	; select bank3
  2105  00E3  150E               	bsf	14,2	;volatile
  2106  00E4                     l1776:
  2107                           
  2108                           ;main.c: 161:     char flag = 0;
  2109  00E4  0020               	movlb	0	; select bank0
  2110  00E5  01A7               	clrf	get_fun_full@flag
  2111  00E6                     l1778:
  2112                           
  2113                           ;main.c: 163:         unsigned res = ADC_GetConversion(PIN_FUN_STATE);
  2114  00E6  3006               	movlw	6
  2115  00E7  3183  2367  3180   	fcall	_ADC_GetConversion
  2116  00EA  0020               	movlb	0	; select bank0
  2117  00EB  0821               	movf	?_ADC_GetConversion+1,w
  2118  00EC  00A6               	movwf	get_fun_full@res+1
  2119  00ED  0820               	movf	?_ADC_GetConversion,w
  2120  00EE  00A5               	movwf	get_fun_full@res
  2121  00EF                     l1780:
  2122                           
  2123                           ;main.c: 164:         if (res < 2000) fun_counter--;
  2124  00EF  3007               	movlw	7
  2125  00F0  0226               	subwf	get_fun_full@res+1,w
  2126  00F1  30D0               	movlw	208
  2127  00F2  1903               	skipnz
  2128  00F3  0225               	subwf	get_fun_full@res,w
  2129  00F4  1803               	skipnc
  2130  00F5  28F7               	goto	u911
  2131  00F6  28F8               	goto	u910
  2132  00F7                     u911:
  2133  00F7  28FD               	goto	l1784
  2134  00F8                     u910:
  2135  00F8                     l1782:
  2136  00F8  30FF               	movlw	255
  2137  00F9  00A4               	movwf	??_get_fun_full
  2138  00FA  0824               	movf	??_get_fun_full,w
  2139  00FB  07B4               	addwf	get_fun_full@fun_counter,f
  2140  00FC  2901               	goto	l1786
  2141  00FD                     l1784:
  2142  00FD  3001               	movlw	1
  2143  00FE  00A4               	movwf	??_get_fun_full
  2144  00FF  0824               	movf	??_get_fun_full,w
  2145  0100  07B4               	addwf	get_fun_full@fun_counter,f
  2146  0101                     l1786:
  2147                           
  2148                           ;main.c: 166:         if (fun_counter > 10) {
  2149  0101  0834               	movf	get_fun_full@fun_counter,w
  2150  0102  3A80               	xorlw	128
  2151  0103  3E75               	addlw	-139
  2152  0104  1C03               	skipc
  2153  0105  2907               	goto	u921
  2154  0106  2908               	goto	u920
  2155  0107                     u921:
  2156  0107  2910               	goto	l1794
  2157  0108                     u920:
  2158  0108                     l1788:
  2159                           
  2160                           ;main.c: 167:             fun_counter = 10;
  2161  0108  300A               	movlw	10
  2162  0109  00A4               	movwf	??_get_fun_full
  2163  010A  0824               	movf	??_get_fun_full,w
  2164  010B  00B4               	movwf	get_fun_full@fun_counter
  2165  010C                     l1790:
  2166                           
  2167                           ;main.c: 168:             FLAGS.bits._FUN_CONNECTED = 0;
  2168  010C  11FC               	bcf	_FLAGS,3
  2169  010D                     l1792:
  2170                           
  2171                           ;main.c: 169:             flag = 1;
  2172  010D  01A7               	clrf	get_fun_full@flag
  2173  010E  0AA7               	incf	get_fun_full@flag,f
  2174                           
  2175                           ;main.c: 170:         } else if (fun_counter<-10) {
  2176  010F  291D               	goto	l1802
  2177  0110                     l1794:
  2178  0110  0834               	movf	get_fun_full@fun_counter,w
  2179  0111  3A80               	xorlw	128
  2180  0112  3E8A               	addlw	138
  2181  0113  1803               	skipnc
  2182  0114  2916               	goto	u931
  2183  0115  2917               	goto	u930
  2184  0116                     u931:
  2185  0116  291D               	goto	l1802
  2186  0117                     u930:
  2187  0117                     l1796:
  2188                           
  2189                           ;main.c: 171:             fun_counter = -10;
  2190  0117  30F6               	movlw	246
  2191  0118  00A4               	movwf	??_get_fun_full
  2192  0119  0824               	movf	??_get_fun_full,w
  2193  011A  00B4               	movwf	get_fun_full@fun_counter
  2194  011B                     l1798:
  2195                           
  2196                           ;main.c: 172:             FLAGS.bits._FUN_CONNECTED = 1;
  2197  011B  15FC               	bsf	_FLAGS,3
  2198  011C  290D               	goto	l1792
  2199  011D                     l1802:
  2200                           
  2201                           ;main.c: 175:     } while (flag == 0);
  2202  011D  0827               	movf	get_fun_full@flag,w
  2203  011E  1903               	btfsc	3,2
  2204  011F  2921               	goto	u941
  2205  0120  2922               	goto	u940
  2206  0121                     u941:
  2207  0121  28E6               	goto	l1778
  2208  0122                     u940:
  2209  0122                     l351:	
  2210                           ;main.c: 177:     do { ANSELCbits.ANSC2 = 0; } while(0);
  2211                           
  2212  0122  0023               	movlb	3	; select bank3
  2213  0123  110E               	bcf	14,2	;volatile
  2214  0124                     l353:	
  2215                           ;main.c: 178:     do { LATCbits.LATC1 = 0; } while(0);
  2216                           
  2217  0124  0022               	movlb	2	; select bank2
  2218  0125  108E               	bcf	14,1	;volatile
  2219  0126                     l355:
  2220  0126  0008               	return
  2221  0127                     __end_of_get_fun_full:
  2222                           
  2223                           	psect	text5
  2224  04BF                     __ptext5:	
  2225 ;; *************** function _TMR2_StartTimer *****************
  2226 ;; Defined at:
  2227 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;		None
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;		None
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    wreg      void 
  2234 ;; Registers used:
  2235 ;;		None
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMMON   BANK0   BANK1
  2241 ;;      Params:         0       0       0
  2242 ;;      Locals:         0       0       0
  2243 ;;      Temps:          0       0       0
  2244 ;;      Totals:         0       0       0
  2245 ;;Total ram usage:        0 bytes
  2246 ;; Hardware stack levels used: 1
  2247 ;; Hardware stack levels required when called: 7
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_start_setup
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255  04BF                     _TMR2_StartTimer:	
  2256                           ;psect for function _TMR2_StartTimer
  2257                           
  2258  04BF                     l1730:	
  2259                           ;incstack = 0
  2260                           ; Regs used in _TMR2_StartTimer: []
  2261                           
  2262                           
  2263                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  2264  04BF  0020               	movlb	0	; select bank0
  2265  04C0  151C               	bsf	28,2	;volatile
  2266  04C1                     l140:
  2267  04C1  0008               	return
  2268  04C2                     __end_of_TMR2_StartTimer:
  2269                           
  2270                           	psect	text6
  2271  0401                     __ptext6:	
  2272 ;; *************** function _SYSTEM_Initialize *****************
  2273 ;; Defined at:
  2274 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		wreg, status,2, status,0, pclath, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1
  2288 ;;      Params:         0       0       0
  2289 ;;      Locals:         0       0       0
  2290 ;;      Temps:          0       0       0
  2291 ;;      Totals:         0       0       0
  2292 ;;Total ram usage:        0 bytes
  2293 ;; Hardware stack levels used: 1
  2294 ;; Hardware stack levels required when called: 9
  2295 ;; This function calls:
  2296 ;;		_ADC_Initialize
  2297 ;;		_OSCILLATOR_Initialize
  2298 ;;		_PIN_MANAGER_Initialize
  2299 ;;		_TMR0_Initialize
  2300 ;;		_TMR2_Initialize
  2301 ;;		_WDT_Initialize
  2302 ;; This function is called by:
  2303 ;;		_start_setup
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307  0401                     _SYSTEM_Initialize:	
  2308                           ;psect for function _SYSTEM_Initialize
  2309                           
  2310  0401                     l1728:	
  2311                           ;incstack = 0
  2312                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2313                           
  2314                           
  2315                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2316  0401  3183  23D7  3184   	fcall	_PIN_MANAGER_Initialize
  2317                           
  2318                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2319  0404  3184  248D  3184   	fcall	_OSCILLATOR_Initialize
  2320                           
  2321                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2322  0407  3184  24BB  3184   	fcall	_WDT_Initialize
  2323                           
  2324                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  2325  040A  3184  2414  3184   	fcall	_TMR2_Initialize
  2326                           
  2327                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2328  040D  3184  2485  3184   	fcall	_ADC_Initialize
  2329                           
  2330                           ;mcc_generated_files/mcc.c: 58:     TMR0_Initialize();
  2331  0410  3183  23C1  3184   	fcall	_TMR0_Initialize
  2332  0413                     l23:
  2333  0413  0008               	return
  2334  0414                     __end_of_SYSTEM_Initialize:
  2335                           
  2336                           	psect	text7
  2337  04BB                     __ptext7:	
  2338 ;; *************** function _WDT_Initialize *****************
  2339 ;; Defined at:
  2340 ;;		line 71 in file "mcc_generated_files/mcc.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;		None
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;		None
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  1    wreg      void 
  2347 ;; Registers used:
  2348 ;;		wreg
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMMON   BANK0   BANK1
  2354 ;;      Params:         0       0       0
  2355 ;;      Locals:         0       0       0
  2356 ;;      Temps:          0       0       0
  2357 ;;      Totals:         0       0       0
  2358 ;;Total ram usage:        0 bytes
  2359 ;; Hardware stack levels used: 1
  2360 ;; Hardware stack levels required when called: 7
  2361 ;; This function calls:
  2362 ;;		Nothing
  2363 ;; This function is called by:
  2364 ;;		_SYSTEM_Initialize
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368  04BB                     _WDT_Initialize:	
  2369                           ;psect for function _WDT_Initialize
  2370                           
  2371  04BB                     l1662:	
  2372                           ;incstack = 0
  2373                           ; Regs used in _WDT_Initialize: [wreg]
  2374                           
  2375                           
  2376                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x16;
  2377  04BB  3016               	movlw	22
  2378  04BC  0021               	movlb	1	; select bank1
  2379  04BD  0097               	movwf	23	;volatile
  2380  04BE                     l29:
  2381  04BE  0008               	return
  2382  04BF                     __end_of_WDT_Initialize:
  2383                           
  2384                           	psect	text8
  2385  0414                     __ptext8:	
  2386 ;; *************** function _TMR2_Initialize *****************
  2387 ;; Defined at:
  2388 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;		None
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;		None
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  1    wreg      void 
  2395 ;; Registers used:
  2396 ;;		wreg, status,2, status,0, pclath, cstack
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMMON   BANK0   BANK1
  2402 ;;      Params:         0       0       0
  2403 ;;      Locals:         0       0       0
  2404 ;;      Temps:          0       0       0
  2405 ;;      Totals:         0       0       0
  2406 ;;Total ram usage:        0 bytes
  2407 ;; Hardware stack levels used: 1
  2408 ;; Hardware stack levels required when called: 8
  2409 ;; This function calls:
  2410 ;;		_TMR2_SetInterruptHandler
  2411 ;; This function is called by:
  2412 ;;		_SYSTEM_Initialize
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416  0414                     _TMR2_Initialize:	
  2417                           ;psect for function _TMR2_Initialize
  2418                           
  2419  0414                     l1664:	
  2420                           ;incstack = 0
  2421                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2422                           
  2423                           
  2424                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x8D;
  2425  0414  308D               	movlw	141
  2426  0415  0020               	movlb	0	; select bank0
  2427  0416  009B               	movwf	27	;volatile
  2428  0417                     l1666:
  2429                           
  2430                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  2431  0417  019A               	clrf	26	;volatile
  2432  0418                     l1668:
  2433                           
  2434                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  2435  0418  1091               	bcf	17,1	;volatile
  2436  0419                     l1670:
  2437                           
  2438                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  2439  0419  0021               	movlb	1	; select bank1
  2440  041A  1491               	bsf	17,1	;volatile
  2441  041B                     l1672:
  2442                           
  2443                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  2444  041B  30C2               	movlw	low _TMR2_DefaultInterruptHandler
  2445  041C  0020               	movlb	0	; select bank0
  2446  041D  00A0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2447  041E  3004               	movlw	high _TMR2_DefaultInterruptHandler
  2448  041F  00A1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2449  0420  3184  2494  3184   	fcall	_TMR2_SetInterruptHandler
  2450  0423                     l1674:
  2451                           
  2452                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x57;
  2453  0423  3057               	movlw	87
  2454  0424  0020               	movlb	0	; select bank0
  2455  0425  009C               	movwf	28	;volatile
  2456  0426                     l137:
  2457  0426  0008               	return
  2458  0427                     __end_of_TMR2_Initialize:
  2459                           
  2460                           	psect	text9
  2461  0494                     __ptext9:	
  2462 ;; *************** function _TMR2_SetInterruptHandler *****************
  2463 ;; Defined at:
  2464 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2467 ;;		 -> sec_tick_work(1), TMR2_DefaultInterruptHandler(1), 
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;		None
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  1    wreg      void 
  2472 ;; Registers used:
  2473 ;;		wreg
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMMON   BANK0   BANK1
  2479 ;;      Params:         0       2       0
  2480 ;;      Locals:         0       0       0
  2481 ;;      Temps:          0       0       0
  2482 ;;      Totals:         0       2       0
  2483 ;;Total ram usage:        2 bytes
  2484 ;; Hardware stack levels used: 1
  2485 ;; Hardware stack levels required when called: 7
  2486 ;; This function calls:
  2487 ;;		Nothing
  2488 ;; This function is called by:
  2489 ;;		_TMR2_Initialize
  2490 ;;		_start_setup
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494  0494                     _TMR2_SetInterruptHandler:	
  2495                           ;psect for function _TMR2_SetInterruptHandler
  2496                           
  2497  0494                     l1602:	
  2498                           ;incstack = 0
  2499                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2500                           
  2501                           
  2502                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  2503  0494  0020               	movlb	0	; select bank0
  2504  0495  0821               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2505  0496  00BA               	movwf	_TMR2_InterruptHandler+1
  2506  0497  0820               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2507  0498  00B9               	movwf	_TMR2_InterruptHandler
  2508  0499                     l165:
  2509  0499  0008               	return
  2510  049A                     __end_of_TMR2_SetInterruptHandler:
  2511                           
  2512                           	psect	text10
  2513  03C1                     __ptext10:	
  2514 ;; *************** function _TMR0_Initialize *****************
  2515 ;; Defined at:
  2516 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;		None
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg, status,2, status,0, pclath, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMMON   BANK0   BANK1
  2530 ;;      Params:         0       0       0
  2531 ;;      Locals:         0       0       0
  2532 ;;      Temps:          0       1       0
  2533 ;;      Totals:         0       1       0
  2534 ;;Total ram usage:        1 bytes
  2535 ;; Hardware stack levels used: 1
  2536 ;; Hardware stack levels required when called: 8
  2537 ;; This function calls:
  2538 ;;		_TMR0_SetInterruptHandler
  2539 ;; This function is called by:
  2540 ;;		_SYSTEM_Initialize
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544  03C1                     _TMR0_Initialize:	
  2545                           ;psect for function _TMR0_Initialize
  2546                           
  2547  03C1                     l1682:	
  2548                           ;incstack = 0
  2549                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2550                           
  2551                           
  2552                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD2 
      +                          & 0x3F));
  2553  03C1  0021               	movlb	1	; select bank1
  2554  03C2  0815               	movf	21,w	;volatile
  2555  03C3  39C0               	andlw	192
  2556  03C4  3812               	iorlw	18
  2557  03C5  0095               	movwf	21	;volatile
  2558  03C6                     l1684:
  2559                           
  2560                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0xEB;
  2561  03C6  30EB               	movlw	235
  2562  03C7  0020               	movlb	0	; select bank0
  2563  03C8  0095               	movwf	21	;volatile
  2564  03C9                     l1686:
  2565                           
  2566                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 235;
  2567  03C9  30EB               	movlw	235
  2568  03CA  00A2               	movwf	??_TMR0_Initialize
  2569  03CB  0822               	movf	??_TMR0_Initialize,w
  2570  03CC  00BB               	movwf	_timer0ReloadVal	;volatile
  2571  03CD                     l1688:
  2572                           
  2573                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  2574  03CD  110B               	bcf	11,2	;volatile
  2575  03CE                     l1690:
  2576                           
  2577                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  2578  03CE  168B               	bsf	11,5	;volatile
  2579  03CF                     l1692:
  2580                           
  2581                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2582  03CF  30C3               	movlw	low _TMR0_DefaultInterruptHandler
  2583  03D0  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2584  03D1  3004               	movlw	high _TMR0_DefaultInterruptHandler
  2585  03D2  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2586  03D3  3184  249A  3183   	fcall	_TMR0_SetInterruptHandler
  2587  03D6                     l185:
  2588  03D6  0008               	return
  2589  03D7                     __end_of_TMR0_Initialize:
  2590                           
  2591                           	psect	text11
  2592  049A                     __ptext11:	
  2593 ;; *************** function _TMR0_SetInterruptHandler *****************
  2594 ;; Defined at:
  2595 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2598 ;;		 -> switch_zum(1), TMR0_DefaultInterruptHandler(1), 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;		None
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      void 
  2603 ;; Registers used:
  2604 ;;		wreg
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMMON   BANK0   BANK1
  2610 ;;      Params:         0       2       0
  2611 ;;      Locals:         0       0       0
  2612 ;;      Temps:          0       0       0
  2613 ;;      Totals:         0       2       0
  2614 ;;Total ram usage:        2 bytes
  2615 ;; Hardware stack levels used: 1
  2616 ;; Hardware stack levels required when called: 7
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		_TMR0_Initialize
  2621 ;;		_start_setup
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625  049A                     _TMR0_SetInterruptHandler:	
  2626                           ;psect for function _TMR0_SetInterruptHandler
  2627                           
  2628  049A                     l1604:	
  2629                           ;incstack = 0
  2630                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2631                           
  2632                           
  2633                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  2634  049A  0020               	movlb	0	; select bank0
  2635  049B  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2636  049C  00B8               	movwf	_TMR0_InterruptHandler+1
  2637  049D  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2638  049E  00B7               	movwf	_TMR0_InterruptHandler
  2639  049F                     l201:
  2640  049F  0008               	return
  2641  04A0                     __end_of_TMR0_SetInterruptHandler:
  2642                           
  2643                           	psect	text12
  2644  03D7                     __ptext12:	
  2645 ;; *************** function _PIN_MANAGER_Initialize *****************
  2646 ;; Defined at:
  2647 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		wreg, status,2
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMMON   BANK0   BANK1
  2661 ;;      Params:         0       0       0
  2662 ;;      Locals:         0       0       0
  2663 ;;      Temps:          0       0       0
  2664 ;;      Totals:         0       0       0
  2665 ;;Total ram usage:        0 bytes
  2666 ;; Hardware stack levels used: 1
  2667 ;; Hardware stack levels required when called: 7
  2668 ;; This function calls:
  2669 ;;		Nothing
  2670 ;; This function is called by:
  2671 ;;		_SYSTEM_Initialize
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675  03D7                     _PIN_MANAGER_Initialize:	
  2676                           ;psect for function _PIN_MANAGER_Initialize
  2677                           
  2678  03D7                     l1644:	
  2679                           ;incstack = 0
  2680                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2681                           
  2682                           
  2683                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2684  03D7  0022               	movlb	2	; select bank2
  2685  03D8  018C               	clrf	12	;volatile
  2686                           
  2687                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  2688  03D9  018E               	clrf	14	;volatile
  2689  03DA                     l1646:
  2690                           
  2691                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x0F;
  2692  03DA  300F               	movlw	15
  2693  03DB  0021               	movlb	1	; select bank1
  2694  03DC  008C               	movwf	12	;volatile
  2695  03DD                     l1648:
  2696                           
  2697                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x0C;
  2698  03DD  300C               	movlw	12
  2699  03DE  008E               	movwf	14	;volatile
  2700  03DF                     l1650:
  2701                           
  2702                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x0C;
  2703  03DF  300C               	movlw	12
  2704  03E0  0023               	movlb	3	; select bank3
  2705  03E1  008E               	movwf	14	;volatile
  2706  03E2                     l1652:
  2707                           
  2708                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x07;
  2709  03E2  3007               	movlw	7
  2710  03E3  008C               	movwf	12	;volatile
  2711                           
  2712                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  2713  03E4  0024               	movlb	4	; select bank4
  2714  03E5  018C               	clrf	12	;volatile
  2715                           
  2716                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  2717  03E6  018E               	clrf	14	;volatile
  2718  03E7                     l1654:
  2719                           
  2720                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2721  03E7  0021               	movlb	1	; select bank1
  2722  03E8  1795               	bsf	21,7	;volatile
  2723                           
  2724                           ;mcc_generated_files/pin_manager.c: 86:     APFCON = 0x00;
  2725  03E9  0022               	movlb	2	; select bank2
  2726  03EA  019D               	clrf	29	;volatile
  2727  03EB                     l90:
  2728  03EB  0008               	return
  2729  03EC                     __end_of_PIN_MANAGER_Initialize:
  2730                           
  2731                           	psect	text13
  2732  048D                     __ptext13:	
  2733 ;; *************** function _OSCILLATOR_Initialize *****************
  2734 ;; Defined at:
  2735 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;		None
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;		None
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  1    wreg      void 
  2742 ;; Registers used:
  2743 ;;		wreg, status,2
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMMON   BANK0   BANK1
  2749 ;;      Params:         0       0       0
  2750 ;;      Locals:         0       0       0
  2751 ;;      Temps:          0       0       0
  2752 ;;      Totals:         0       0       0
  2753 ;;Total ram usage:        0 bytes
  2754 ;; Hardware stack levels used: 1
  2755 ;; Hardware stack levels required when called: 7
  2756 ;; This function calls:
  2757 ;;		Nothing
  2758 ;; This function is called by:
  2759 ;;		_SYSTEM_Initialize
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763  048D                     _OSCILLATOR_Initialize:	
  2764                           ;psect for function _OSCILLATOR_Initialize
  2765                           
  2766  048D                     l1656:	
  2767                           ;incstack = 0
  2768                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2769                           
  2770                           
  2771                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x68;
  2772  048D  3068               	movlw	104
  2773  048E  0021               	movlb	1	; select bank1
  2774  048F  0099               	movwf	25	;volatile
  2775  0490                     l1658:
  2776                           
  2777                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  2778  0490  0198               	clrf	24	;volatile
  2779  0491                     l1660:
  2780                           
  2781                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  2782  0491  0022               	movlb	2	; select bank2
  2783  0492  0196               	clrf	22	;volatile
  2784  0493                     l26:
  2785  0493  0008               	return
  2786  0494                     __end_of_OSCILLATOR_Initialize:
  2787                           
  2788                           	psect	text14
  2789  0485                     __ptext14:	
  2790 ;; *************** function _ADC_Initialize *****************
  2791 ;; Defined at:
  2792 ;;		line 67 in file "mcc_generated_files/adc.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;		None
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;		None
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      void 
  2799 ;; Registers used:
  2800 ;;		wreg, status,2
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMMON   BANK0   BANK1
  2806 ;;      Params:         0       0       0
  2807 ;;      Locals:         0       0       0
  2808 ;;      Temps:          0       0       0
  2809 ;;      Totals:         0       0       0
  2810 ;;Total ram usage:        0 bytes
  2811 ;; Hardware stack levels used: 1
  2812 ;; Hardware stack levels required when called: 7
  2813 ;; This function calls:
  2814 ;;		Nothing
  2815 ;; This function is called by:
  2816 ;;		_SYSTEM_Initialize
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820  0485                     _ADC_Initialize:	
  2821                           ;psect for function _ADC_Initialize
  2822                           
  2823  0485                     l1676:	
  2824                           ;incstack = 0
  2825                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  2826                           
  2827                           
  2828                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x40;
  2829  0485  3040               	movlw	64
  2830  0486  0021               	movlb	1	; select bank1
  2831  0487  009E               	movwf	30	;volatile
  2832  0488                     l1678:
  2833                           
  2834                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  2835  0488  019B               	clrf	27	;volatile
  2836  0489                     l1680:
  2837                           
  2838                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  2839  0489  019C               	clrf	28	;volatile
  2840                           
  2841                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  2842  048A  3001               	movlw	1
  2843  048B  009D               	movwf	29	;volatile
  2844  048C                     l46:
  2845  048C  0008               	return
  2846  048D                     __end_of_ADC_Initialize:
  2847                           
  2848                           	psect	text15
  2849  0094                     __ptext15:	
  2850 ;; *************** function _povorot *****************
  2851 ;; Defined at:
  2852 ;;		line 265 in file "main.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;		None
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;		None
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  1    wreg      void 
  2859 ;; Registers used:
  2860 ;;		wreg, status,2, status,0, pclath, cstack
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMMON   BANK0   BANK1
  2866 ;;      Params:         0       0       0
  2867 ;;      Locals:         0       0       0
  2868 ;;      Temps:          0       0       0
  2869 ;;      Totals:         0       0       0
  2870 ;;Total ram usage:        0 bytes
  2871 ;; Hardware stack levels used: 1
  2872 ;; Hardware stack levels required when called: 8
  2873 ;; This function calls:
  2874 ;;		_go_close
  2875 ;;		_go_open
  2876 ;; This function is called by:
  2877 ;;		_main
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881  0094                     _povorot:	
  2882                           ;psect for function _povorot
  2883                           
  2884  0094                     l1900:	
  2885                           ;incstack = 0
  2886                           ; Regs used in _povorot: [wreg+status,2+status,0+pclath+cstack]
  2887                           
  2888                           
  2889                           ;main.c: 266:     if ((time_s > ROTATION_TIME) &&
  2890  0094  0020               	movlb	0	; select bank0
  2891  0095  1BAF               	btfsc	_time_s+3,7
  2892  0096  28A5               	goto	u1091
  2893  0097  082F               	movf	_time_s+3,w
  2894  0098  1D03               	btfss	3,2
  2895  0099  28A6               	goto	u1090
  2896  009A  082E               	movf	_time_s+2,w
  2897  009B  1D03               	btfss	3,2
  2898  009C  28A6               	goto	u1090
  2899  009D  082D               	movf	_time_s+1,w
  2900  009E  1D03               	btfss	3,2
  2901  009F  28A6               	goto	u1090
  2902  00A0  303D               	movlw	61
  2903  00A1  022C               	subwf	_time_s,w
  2904  00A2  1C03               	btfss	3,0
  2905  00A3  28A5               	goto	u1091
  2906  00A4  28A6               	goto	u1090
  2907  00A5                     u1091:
  2908  00A5  28B5               	goto	l1910
  2909  00A6                     u1090:
  2910  00A6                     l1902:
  2911  00A6  197C               	btfsc	_FLAGS,2
  2912  00A7  28A9               	goto	u1101
  2913  00A8  28AA               	goto	u1100
  2914  00A9                     u1101:
  2915  00A9  28B5               	goto	l1910
  2916  00AA                     u1100:
  2917  00AA                     l1904:
  2918  00AA  187C               	btfsc	_FLAGS,0
  2919  00AB  28AD               	goto	u1111
  2920  00AC  28AE               	goto	u1110
  2921  00AD                     u1111:
  2922  00AD  28B5               	goto	l1910
  2923  00AE                     u1110:
  2924  00AE                     l1906:
  2925  00AE  1CFC               	btfss	_FLAGS,1
  2926  00AF  28B1               	goto	u1121
  2927  00B0  28B2               	goto	u1120
  2928  00B1                     u1121:
  2929  00B1  28B5               	goto	l1910
  2930  00B2                     u1120:
  2931  00B2                     l1908:
  2932                           
  2933                           ;main.c: 270:             ) {;main.c: 271:         go_close();
  2934  00B2  3183  2345  3180   	fcall	_go_close
  2935  00B5                     l1910:
  2936                           
  2937                           ;main.c: 273:     if ((time_s > (ROTATION_TIME + 10 + 1 * 2)) &&
  2938  00B5  0020               	movlb	0	; select bank0
  2939  00B6  1BAF               	btfsc	_time_s+3,7
  2940  00B7  28C6               	goto	u1131
  2941  00B8  082F               	movf	_time_s+3,w
  2942  00B9  1D03               	btfss	3,2
  2943  00BA  28C7               	goto	u1130
  2944  00BB  082E               	movf	_time_s+2,w
  2945  00BC  1D03               	btfss	3,2
  2946  00BD  28C7               	goto	u1130
  2947  00BE  082D               	movf	_time_s+1,w
  2948  00BF  1D03               	btfss	3,2
  2949  00C0  28C7               	goto	u1130
  2950  00C1  3049               	movlw	73
  2951  00C2  022C               	subwf	_time_s,w
  2952  00C3  1C03               	btfss	3,0
  2953  00C4  28C6               	goto	u1131
  2954  00C5  28C7               	goto	u1130
  2955  00C6                     u1131:
  2956  00C6  28DF               	goto	l416
  2957  00C7                     u1130:
  2958  00C7                     l1912:
  2959  00C7  1D7C               	btfss	_FLAGS,2
  2960  00C8  28CA               	goto	u1141
  2961  00C9  28CB               	goto	u1140
  2962  00CA                     u1141:
  2963  00CA  28DF               	goto	l416
  2964  00CB                     u1140:
  2965  00CB                     l1914:
  2966  00CB  187C               	btfsc	_FLAGS,0
  2967  00CC  28CE               	goto	u1151
  2968  00CD  28CF               	goto	u1150
  2969  00CE                     u1151:
  2970  00CE  28DF               	goto	l416
  2971  00CF                     u1150:
  2972  00CF                     l1916:
  2973  00CF  1CFC               	btfss	_FLAGS,1
  2974  00D0  28D2               	goto	u1161
  2975  00D1  28D3               	goto	u1160
  2976  00D2                     u1161:
  2977  00D2  28DF               	goto	l416
  2978  00D3                     u1160:
  2979  00D3                     l1918:
  2980                           
  2981                           ;main.c: 277:             ) {;main.c: 278:         go_open();
  2982  00D3  3184  2471  3180   	fcall	_go_open
  2983  00D6                     l1920:
  2984                           
  2985                           ;main.c: 279:         time_s = 0;
  2986  00D6  3000               	movlw	0
  2987  00D7  0020               	movlb	0	; select bank0
  2988  00D8  00AF               	movwf	_time_s+3
  2989  00D9  3000               	movlw	0
  2990  00DA  00AE               	movwf	_time_s+2
  2991  00DB  3000               	movlw	0
  2992  00DC  00AD               	movwf	_time_s+1
  2993  00DD  3000               	movlw	0
  2994  00DE  00AC               	movwf	_time_s
  2995  00DF                     l416:
  2996  00DF  0008               	return
  2997  00E0                     __end_of_povorot:
  2998                           
  2999                           	psect	text16
  3000  022A                     __ptext16:	
  3001 ;; *************** function _get_jump *****************
  3002 ;; Defined at:
  3003 ;;		line 182 in file "main.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;		None
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  res             2    5[BANK0 ] unsigned int 
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		wreg, status,2, status,0, pclath, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMMON   BANK0   BANK1
  3017 ;;      Params:         0       0       0
  3018 ;;      Locals:         0       2       0
  3019 ;;      Temps:          0       1       0
  3020 ;;      Totals:         0       3       0
  3021 ;;Total ram usage:        3 bytes
  3022 ;; Hardware stack levels used: 1
  3023 ;; Hardware stack levels required when called: 8
  3024 ;; This function calls:
  3025 ;;		_ADC_GetConversion
  3026 ;; This function is called by:
  3027 ;;		_main
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031  022A                     _get_jump:	
  3032                           ;psect for function _get_jump
  3033                           
  3034  022A                     l360:	
  3035                           ;incstack = 0
  3036                           ; Regs used in _get_jump: [wreg+status,2+status,0+pclath+cstack]
  3037                           ;main.c: 184:     static signed char jump_counter;;main.c: 185:     do { ANSELAbits.ANSA
      +                          1 = 1; } while(0);
  3038                           
  3039  022A  0023               	movlb	3	; select bank3
  3040  022B  148C               	bsf	12,1	;volatile
  3041  022C                     l1876:
  3042                           
  3043                           ;main.c: 186:     unsigned res = ADC_GetConversion(PIN_JUMP_STATE);
  3044  022C  3001               	movlw	1
  3045  022D  3183  2367  3182   	fcall	_ADC_GetConversion
  3046  0230  0020               	movlb	0	; select bank0
  3047  0231  0821               	movf	?_ADC_GetConversion+1,w
  3048  0232  00A6               	movwf	get_jump@res+1
  3049  0233  0820               	movf	?_ADC_GetConversion,w
  3050  0234  00A5               	movwf	get_jump@res
  3051  0235                     l1878:
  3052  0235  0023               	movlb	3	; select bank3
  3053  0236  108C               	bcf	12,1	;volatile
  3054  0237                     l1880:
  3055                           
  3056                           ;main.c: 190:     if (res < 2000) jump_counter--;
  3057  0237  3007               	movlw	7
  3058  0238  0020               	movlb	0	; select bank0
  3059  0239  0226               	subwf	get_jump@res+1,w
  3060  023A  30D0               	movlw	208
  3061  023B  1903               	skipnz
  3062  023C  0225               	subwf	get_jump@res,w
  3063  023D  1803               	skipnc
  3064  023E  2A40               	goto	u1061
  3065  023F  2A41               	goto	u1060
  3066  0240                     u1061:
  3067  0240  2A46               	goto	l1884
  3068  0241                     u1060:
  3069  0241                     l1882:
  3070  0241  30FF               	movlw	255
  3071  0242  00A4               	movwf	??_get_jump
  3072  0243  0824               	movf	??_get_jump,w
  3073  0244  07B3               	addwf	get_jump@jump_counter,f
  3074  0245  2A4A               	goto	l1886
  3075  0246                     l1884:
  3076  0246  3001               	movlw	1
  3077  0247  00A4               	movwf	??_get_jump
  3078  0248  0824               	movf	??_get_jump,w
  3079  0249  07B3               	addwf	get_jump@jump_counter,f
  3080  024A                     l1886:
  3081                           
  3082                           ;main.c: 193:     if (jump_counter > 10) {
  3083  024A  0833               	movf	get_jump@jump_counter,w
  3084  024B  3A80               	xorlw	128
  3085  024C  3E75               	addlw	-139
  3086  024D  1C03               	skipc
  3087  024E  2A50               	goto	u1071
  3088  024F  2A51               	goto	u1070
  3089  0250                     u1071:
  3090  0250  2A57               	goto	l1892
  3091  0251                     u1070:
  3092  0251                     l1888:
  3093                           
  3094                           ;main.c: 194:         jump_counter = 10;
  3095  0251  300A               	movlw	10
  3096  0252  00A4               	movwf	??_get_jump
  3097  0253  0824               	movf	??_get_jump,w
  3098  0254  00B3               	movwf	get_jump@jump_counter
  3099  0255                     l1890:
  3100                           
  3101                           ;main.c: 195:         FLAGS.bits._JUMP_CONNECTED = 0;
  3102  0255  127C               	bcf	_FLAGS,4
  3103                           
  3104                           ;main.c: 196:     } else if (jump_counter<-10) {
  3105  0256  2A63               	goto	l369
  3106  0257                     l1892:
  3107  0257  0833               	movf	get_jump@jump_counter,w
  3108  0258  3A80               	xorlw	128
  3109  0259  3E8A               	addlw	138
  3110  025A  1803               	skipnc
  3111  025B  2A5D               	goto	u1081
  3112  025C  2A5E               	goto	u1080
  3113  025D                     u1081:
  3114  025D  2A63               	goto	l369
  3115  025E                     u1080:
  3116  025E                     l1894:
  3117                           
  3118                           ;main.c: 197:         jump_counter = -10;
  3119  025E  30F6               	movlw	246
  3120  025F  00A4               	movwf	??_get_jump
  3121  0260  0824               	movf	??_get_jump,w
  3122  0261  00B3               	movwf	get_jump@jump_counter
  3123  0262                     l1896:
  3124                           
  3125                           ;main.c: 198:         FLAGS.bits._JUMP_CONNECTED = 1;
  3126  0262  167C               	bsf	_FLAGS,4
  3127  0263                     l369:
  3128  0263  0008               	return
  3129  0264                     __end_of_get_jump:
  3130                           
  3131                           	psect	text17
  3132  01B0                     __ptext17:	
  3133 ;; *************** function _get_fun *****************
  3134 ;; Defined at:
  3135 ;;		line 135 in file "main.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;		None
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  res             2    5[BANK0 ] unsigned int 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      void 
  3142 ;; Registers used:
  3143 ;;		wreg, status,2, status,0, pclath, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMMON   BANK0   BANK1
  3149 ;;      Params:         0       0       0
  3150 ;;      Locals:         0       2       0
  3151 ;;      Temps:          0       1       0
  3152 ;;      Totals:         0       3       0
  3153 ;;Total ram usage:        3 bytes
  3154 ;; Hardware stack levels used: 1
  3155 ;; Hardware stack levels required when called: 8
  3156 ;; This function calls:
  3157 ;;		_ADC_GetConversion
  3158 ;; This function is called by:
  3159 ;;		_main
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163  01B0                     _get_fun:	
  3164                           ;psect for function _get_fun
  3165                           
  3166  01B0                     l322:	
  3167                           ;incstack = 0
  3168                           ; Regs used in _get_fun: [wreg+status,2+status,0+pclath+cstack]
  3169                           ;main.c: 137:     static signed char fun_counter;;main.c: 138:     do { LATCbits.LATC1 =
      +                           1; } while(0);
  3170                           
  3171  01B0  0022               	movlb	2	; select bank2
  3172  01B1  148E               	bsf	14,1	;volatile
  3173  01B2                     l324:	
  3174                           ;main.c: 139:     do { ANSELCbits.ANSC2 = 1; } while(0);
  3175                           
  3176  01B2  0023               	movlb	3	; select bank3
  3177  01B3  150E               	bsf	14,2	;volatile
  3178  01B4                     l1850:
  3179                           
  3180                           ;main.c: 140:     unsigned res = ADC_GetConversion(PIN_FUN_STATE);
  3181  01B4  3006               	movlw	6
  3182  01B5  3183  2367  3181   	fcall	_ADC_GetConversion
  3183  01B8  0020               	movlb	0	; select bank0
  3184  01B9  0821               	movf	?_ADC_GetConversion+1,w
  3185  01BA  00A6               	movwf	get_fun@res+1
  3186  01BB  0820               	movf	?_ADC_GetConversion,w
  3187  01BC  00A5               	movwf	get_fun@res
  3188  01BD                     l1852:
  3189  01BD  0023               	movlb	3	; select bank3
  3190  01BE  110E               	bcf	14,2	;volatile
  3191  01BF                     l1854:
  3192  01BF  0022               	movlb	2	; select bank2
  3193  01C0  108E               	bcf	14,1	;volatile
  3194  01C1                     l1856:
  3195                           
  3196                           ;main.c: 143:     if (res < 2000) fun_counter--;
  3197  01C1  3007               	movlw	7
  3198  01C2  0020               	movlb	0	; select bank0
  3199  01C3  0226               	subwf	get_fun@res+1,w
  3200  01C4  30D0               	movlw	208
  3201  01C5  1903               	skipnz
  3202  01C6  0225               	subwf	get_fun@res,w
  3203  01C7  1803               	skipnc
  3204  01C8  29CA               	goto	u1031
  3205  01C9  29CB               	goto	u1030
  3206  01CA                     u1031:
  3207  01CA  29D0               	goto	l1860
  3208  01CB                     u1030:
  3209  01CB                     l1858:
  3210  01CB  30FF               	movlw	255
  3211  01CC  00A4               	movwf	??_get_fun
  3212  01CD  0824               	movf	??_get_fun,w
  3213  01CE  07B5               	addwf	get_fun@fun_counter,f
  3214  01CF  29D4               	goto	l1862
  3215  01D0                     l1860:
  3216  01D0  3001               	movlw	1
  3217  01D1  00A4               	movwf	??_get_fun
  3218  01D2  0824               	movf	??_get_fun,w
  3219  01D3  07B5               	addwf	get_fun@fun_counter,f
  3220  01D4                     l1862:
  3221                           
  3222                           ;main.c: 146:     if (fun_counter > 10) {
  3223  01D4  0835               	movf	get_fun@fun_counter,w
  3224  01D5  3A80               	xorlw	128
  3225  01D6  3E75               	addlw	-139
  3226  01D7  1C03               	skipc
  3227  01D8  29DA               	goto	u1041
  3228  01D9  29DB               	goto	u1040
  3229  01DA                     u1041:
  3230  01DA  29E1               	goto	l1868
  3231  01DB                     u1040:
  3232  01DB                     l1864:
  3233                           
  3234                           ;main.c: 147:         fun_counter = 10;
  3235  01DB  300A               	movlw	10
  3236  01DC  00A4               	movwf	??_get_fun
  3237  01DD  0824               	movf	??_get_fun,w
  3238  01DE  00B5               	movwf	get_fun@fun_counter
  3239  01DF                     l1866:
  3240                           
  3241                           ;main.c: 148:         FLAGS.bits._FUN_CONNECTED = 0;
  3242  01DF  11FC               	bcf	_FLAGS,3
  3243                           
  3244                           ;main.c: 149:     } else if (fun_counter<-10) {
  3245  01E0  29ED               	goto	l335
  3246  01E1                     l1868:
  3247  01E1  0835               	movf	get_fun@fun_counter,w
  3248  01E2  3A80               	xorlw	128
  3249  01E3  3E8A               	addlw	138
  3250  01E4  1803               	skipnc
  3251  01E5  29E7               	goto	u1051
  3252  01E6  29E8               	goto	u1050
  3253  01E7                     u1051:
  3254  01E7  29ED               	goto	l335
  3255  01E8                     u1050:
  3256  01E8                     l1870:
  3257                           
  3258                           ;main.c: 150:         fun_counter = -10;
  3259  01E8  30F6               	movlw	246
  3260  01E9  00A4               	movwf	??_get_fun
  3261  01EA  0824               	movf	??_get_fun,w
  3262  01EB  00B5               	movwf	get_fun@fun_counter
  3263  01EC                     l1872:
  3264                           
  3265                           ;main.c: 151:         FLAGS.bits._FUN_CONNECTED = 1;
  3266  01EC  15FC               	bsf	_FLAGS,3
  3267  01ED                     l335:
  3268  01ED  0008               	return
  3269  01EE                     __end_of_get_fun:
  3270                           
  3271                           	psect	text18
  3272  0367                     __ptext18:	
  3273 ;; *************** function _ADC_GetConversion *****************
  3274 ;; Defined at:
  3275 ;;		line 112 in file "mcc_generated_files/adc.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  channel         1    wreg     enum E2178
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  channel         1    3[BANK0 ] enum E2178
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  2    0[BANK0 ] unsigned short 
  3282 ;; Registers used:
  3283 ;;		wreg, status,2, status,0
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMMON   BANK0   BANK1
  3289 ;;      Params:         0       2       0
  3290 ;;      Locals:         0       1       0
  3291 ;;      Temps:          0       1       0
  3292 ;;      Totals:         0       4       0
  3293 ;;Total ram usage:        4 bytes
  3294 ;; Hardware stack levels used: 1
  3295 ;; Hardware stack levels required when called: 7
  3296 ;; This function calls:
  3297 ;;		Nothing
  3298 ;; This function is called by:
  3299 ;;		_get_fun
  3300 ;;		_get_fun_full
  3301 ;;		_get_jump
  3302 ;;		_get_jump_full
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306  0367                     _ADC_GetConversion:	
  3307                           ;psect for function _ADC_GetConversion
  3308                           
  3309                           
  3310                           ;incstack = 0
  3311                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3312                           ;ADC_GetConversion@channel stored from wreg
  3313  0367  0020               	movlb	0	; select bank0
  3314  0368  00A3               	movwf	ADC_GetConversion@channel
  3315  0369                     l1694:
  3316                           
  3317                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  3318  0369  0823               	movf	ADC_GetConversion@channel,w
  3319  036A  00A2               	movwf	??_ADC_GetConversion
  3320  036B  0DA2               	rlf	??_ADC_GetConversion,f
  3321  036C  0DA2               	rlf	??_ADC_GetConversion,f
  3322  036D  0021               	movlb	1	; select bank1
  3323  036E  081D               	movf	29,w	;volatile
  3324  036F  0020               	movlb	0	; select bank0
  3325  0370  0622               	xorwf	??_ADC_GetConversion,w
  3326  0371  3983               	andlw	-125
  3327  0372  0622               	xorwf	??_ADC_GetConversion,w
  3328  0373  0021               	movlb	1	; select bank1
  3329  0374  009D               	movwf	29	;volatile
  3330  0375                     l1696:
  3331                           
  3332                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  3333  0375  141D               	bsf	29,0	;volatile
  3334  0376                     l1698:
  3335                           
  3336                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  3337  0376  3200               	nop2	;2 cycle nop
  3338  0377  3200               	nop2	;2 cycle nop
  3339  0378  0000               	nop
  3340  0379                     l1700:
  3341                           
  3342                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  3343  0379  0021               	movlb	1	; select bank1
  3344  037A  149D               	bsf	29,1	;volatile
  3345  037B                     l61:	
  3346                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  3347                           
  3348                           
  3349                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  3350  037B  189D               	btfsc	29,1	;volatile
  3351  037C  2B7E               	goto	u791
  3352  037D  2B7F               	goto	u790
  3353  037E                     u791:
  3354  037E  2B7B               	goto	l61
  3355  037F                     u790:
  3356  037F                     l1702:
  3357                           
  3358                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3359  037F  081C               	movf	28,w	;volatile
  3360  0380  0020               	movlb	0	; select bank0
  3361  0381  00A1               	movwf	?_ADC_GetConversion+1
  3362  0382  0021               	movlb	1	; select bank1
  3363  0383  081B               	movf	27,w	;volatile
  3364  0384  0020               	movlb	0	; select bank0
  3365  0385  00A0               	movwf	?_ADC_GetConversion
  3366  0386                     l64:
  3367  0386  0008               	return
  3368  0387                     __end_of_ADC_GetConversion:
  3369                           
  3370                           	psect	text19
  3371  003B                     __ptext19:	
  3372 ;; *************** function _fun_work *****************
  3373 ;; Defined at:
  3374 ;;		line 284 in file "main.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;		None
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;		None
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  1    wreg      void 
  3381 ;; Registers used:
  3382 ;;		wreg, status,2, status,0, pclath, cstack
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMMON   BANK0   BANK1
  3388 ;;      Params:         0       0       0
  3389 ;;      Locals:         0       0       0
  3390 ;;      Temps:          0       2       0
  3391 ;;      Totals:         0       2       0
  3392 ;;Total ram usage:        2 bytes
  3393 ;; Hardware stack levels used: 1
  3394 ;; Hardware stack levels required when called: 9
  3395 ;; This function calls:
  3396 ;;		_beep
  3397 ;;		_go_close
  3398 ;;		_go_close_alt
  3399 ;;		_go_open
  3400 ;;		_go_open_alt
  3401 ;; This function is called by:
  3402 ;;		_main
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406  003B                     _fun_work:	
  3407                           ;psect for function _fun_work
  3408                           
  3409  003B                     l1922:	
  3410                           ;incstack = 0
  3411                           ; Regs used in _fun_work: [wreg+status,2+status,0+pclath+cstack]
  3412                           
  3413                           
  3414                           ;main.c: 285:     {;main.c: 286:         if (FLAGS.bits._FUN_CONNECTED &&
  3415  003B  1DFC               	btfss	_FLAGS,3
  3416  003C  283E               	goto	u1171
  3417  003D  283F               	goto	u1170
  3418  003E                     u1171:
  3419  003E  2868               	goto	l1938
  3420  003F                     u1170:
  3421  003F                     l1924:
  3422  003F  187C               	btfsc	_FLAGS,0
  3423  0040  2842               	goto	u1181
  3424  0041  2843               	goto	u1180
  3425  0042                     u1181:
  3426  0042  2868               	goto	l1938
  3427  0043                     u1180:
  3428  0043                     l1926:
  3429  0043  1D7C               	btfss	_FLAGS,2
  3430  0044  2846               	goto	u1191
  3431  0045  2847               	goto	u1190
  3432  0046                     u1191:
  3433  0046  2868               	goto	l1938
  3434  0047                     u1190:
  3435  0047                     l1928:
  3436  0047  1AFC               	btfsc	_FLAGS,5
  3437  0048  284A               	goto	u1201
  3438  0049  284B               	goto	u1200
  3439  004A                     u1201:
  3440  004A  2868               	goto	l1938
  3441  004B                     u1200:
  3442  004B                     l1930:
  3443                           
  3444                           ;main.c: 289:                 !FLAGS.bits.RELE_POW_WAIT) {;main.c: 290:             if (
      +                          FLAGS.bits.NORMAL_WORK_MODE) go_open();
  3445  004B  1CFC               	btfss	_FLAGS,1
  3446  004C  284E               	goto	u1211
  3447  004D  284F               	goto	u1210
  3448  004E                     u1211:
  3449  004E  2853               	goto	l1934
  3450  004F                     u1210:
  3451  004F                     l1932:
  3452  004F  3184  2471  3180   	fcall	_go_open
  3453  0052  2856               	goto	l1936
  3454  0053                     l1934:
  3455  0053  3184  24A0  3180   	fcall	_go_open_alt
  3456  0056                     l1936:
  3457                           
  3458                           ;main.c: 293:             beep(500, 100, 40, 1);
  3459  0056  30F4               	movlw	244
  3460  0057  0020               	movlb	0	; select bank0
  3461  0058  00A0               	movwf	beep@delay
  3462  0059  3001               	movlw	1
  3463  005A  00A1               	movwf	beep@delay+1
  3464  005B  3064               	movlw	100
  3465  005C  00A2               	movwf	beep@pause
  3466  005D  3000               	movlw	0
  3467  005E  00A3               	movwf	beep@pause+1
  3468  005F  3028               	movlw	40
  3469  0060  00A9               	movwf	??_fun_work
  3470  0061  0829               	movf	??_fun_work,w
  3471  0062  00A4               	movwf	beep@time
  3472  0063  01A5               	clrf	beep@count
  3473  0064  0AA5               	incf	beep@count,f
  3474  0065  3182  22CB  3180   	fcall	_beep
  3475  0068                     l1938:
  3476                           
  3477                           ;main.c: 295:         if (!FLAGS.bits._FUN_CONNECTED &&
  3478  0068  19FC               	btfsc	_FLAGS,3
  3479  0069  286B               	goto	u1221
  3480  006A  286C               	goto	u1220
  3481  006B                     u1221:
  3482  006B  2893               	goto	l425
  3483  006C                     u1220:
  3484  006C                     l1940:
  3485  006C  197C               	btfsc	_FLAGS,2
  3486  006D  286F               	goto	u1231
  3487  006E  2870               	goto	u1230
  3488  006F                     u1231:
  3489  006F  2893               	goto	l425
  3490  0070                     u1230:
  3491  0070                     l1942:
  3492  0070  1AFC               	btfsc	_FLAGS,5
  3493  0071  2873               	goto	u1241
  3494  0072  2874               	goto	u1240
  3495  0073                     u1241:
  3496  0073  2893               	goto	l425
  3497  0074                     u1240:
  3498  0074                     l1944:
  3499                           
  3500                           ;main.c: 297:                 !FLAGS.bits.RELE_POW_WAIT) {;main.c: 298:             if (
      +                          FLAGS.bits.NORMAL_WORK_MODE) go_close();
  3501  0074  1CFC               	btfss	_FLAGS,1
  3502  0075  2877               	goto	u1251
  3503  0076  2878               	goto	u1250
  3504  0077                     u1251:
  3505  0077  287C               	goto	l1948
  3506  0078                     u1250:
  3507  0078                     l1946:
  3508  0078  3183  2345  3180   	fcall	_go_close
  3509  007B  287F               	goto	l1950
  3510  007C                     l1948:
  3511  007C  3184  24A5  3180   	fcall	_go_close_alt
  3512  007F                     l1950:
  3513                           
  3514                           ;main.c: 301:             beep(500, 100, 40, 2);
  3515  007F  30F4               	movlw	244
  3516  0080  0020               	movlb	0	; select bank0
  3517  0081  00A0               	movwf	beep@delay
  3518  0082  3001               	movlw	1
  3519  0083  00A1               	movwf	beep@delay+1
  3520  0084  3064               	movlw	100
  3521  0085  00A2               	movwf	beep@pause
  3522  0086  3000               	movlw	0
  3523  0087  00A3               	movwf	beep@pause+1
  3524  0088  3028               	movlw	40
  3525  0089  00A9               	movwf	??_fun_work
  3526  008A  0829               	movf	??_fun_work,w
  3527  008B  00A4               	movwf	beep@time
  3528  008C  3002               	movlw	2
  3529  008D  00AA               	movwf	??_fun_work+1
  3530  008E  082A               	movf	??_fun_work+1,w
  3531  008F  00A5               	movwf	beep@count
  3532  0090  3182  22CB  3180   	fcall	_beep
  3533  0093                     l425:
  3534  0093  0008               	return
  3535  0094                     __end_of_fun_work:
  3536                           
  3537                           	psect	text20
  3538  04A0                     __ptext20:	
  3539 ;; *************** function _go_open_alt *****************
  3540 ;; Defined at:
  3541 ;;		line 104 in file "main.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;		None
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;		None
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  1    wreg      void 
  3548 ;; Registers used:
  3549 ;;		None
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMMON   BANK0   BANK1
  3555 ;;      Params:         0       0       0
  3556 ;;      Locals:         0       0       0
  3557 ;;      Temps:          0       0       0
  3558 ;;      Totals:         0       0       0
  3559 ;;Total ram usage:        0 bytes
  3560 ;; Hardware stack levels used: 1
  3561 ;; Hardware stack levels required when called: 7
  3562 ;; This function calls:
  3563 ;;		Nothing
  3564 ;; This function is called by:
  3565 ;;		_fun_work
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569  04A0                     _go_open_alt:	
  3570                           ;psect for function _go_open_alt
  3571                           
  3572  04A0                     l1774:	
  3573                           ;incstack = 0
  3574                           ; Regs used in _go_open_alt: []
  3575                           
  3576                           
  3577                           ;main.c: 105:     FLAGS.bits.CLOSED = 0;
  3578  04A0  117C               	bcf	_FLAGS,2
  3579  04A1                     l289:	
  3580                           ;main.c: 106:     do { LATCbits.LATC4 = 0; } while(0);
  3581                           
  3582  04A1  0022               	movlb	2	; select bank2
  3583  04A2  120E               	bcf	14,4	;volatile
  3584  04A3                     l291:	
  3585                           ;main.c: 107:     do { LATCbits.LATC5 = 0; } while(0);
  3586                           
  3587  04A3  128E               	bcf	14,5	;volatile
  3588  04A4                     l293:
  3589  04A4  0008               	return
  3590  04A5                     __end_of_go_open_alt:
  3591                           
  3592                           	psect	text21
  3593  0471                     __ptext21:	
  3594 ;; *************** function _go_open *****************
  3595 ;; Defined at:
  3596 ;;		line 90 in file "main.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;		None
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  1    wreg      void 
  3603 ;; Registers used:
  3604 ;;		wreg
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMMON   BANK0   BANK1
  3610 ;;      Params:         0       0       0
  3611 ;;      Locals:         0       0       0
  3612 ;;      Temps:          0       1       0
  3613 ;;      Totals:         0       1       0
  3614 ;;Total ram usage:        1 bytes
  3615 ;; Hardware stack levels used: 1
  3616 ;; Hardware stack levels required when called: 7
  3617 ;; This function calls:
  3618 ;;		Nothing
  3619 ;; This function is called by:
  3620 ;;		_povorot
  3621 ;;		_fun_work
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625  0471                     _go_open:	
  3626                           ;psect for function _go_open
  3627                           
  3628  0471                     l275:	
  3629                           ;incstack = 0
  3630                           ; Regs used in _go_open: [wreg]
  3631                           ;main.c: 91:     do { LATCbits.LATC4 = 0; } while(0);
  3632                           
  3633  0471  0022               	movlb	2	; select bank2
  3634  0472  120E               	bcf	14,4	;volatile
  3635  0473                     l277:	
  3636                           ;main.c: 92:     do { LATCbits.LATC5 = 1; } while(0);
  3637                           
  3638  0473  168E               	bsf	14,5	;volatile
  3639  0474                     l1766:
  3640                           
  3641                           ;main.c: 93:     time_pow_s = 10;
  3642  0474  300A               	movlw	10
  3643  0475  0020               	movlb	0	; select bank0
  3644  0476  00A0               	movwf	??_go_open
  3645  0477  0820               	movf	??_go_open,w
  3646  0478  00B6               	movwf	_time_pow_s
  3647  0479                     l1768:
  3648                           
  3649                           ;main.c: 94:     FLAGS.bits.RELE_POW_WAIT = 1;
  3650  0479  16FC               	bsf	_FLAGS,5
  3651  047A                     l279:
  3652  047A  0008               	return
  3653  047B                     __end_of_go_open:
  3654                           
  3655                           	psect	text22
  3656  04A5                     __ptext22:	
  3657 ;; *************** function _go_close_alt *****************
  3658 ;; Defined at:
  3659 ;;		line 98 in file "main.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;		None
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;		None
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  1    wreg      void 
  3666 ;; Registers used:
  3667 ;;		None
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMMON   BANK0   BANK1
  3673 ;;      Params:         0       0       0
  3674 ;;      Locals:         0       0       0
  3675 ;;      Temps:          0       0       0
  3676 ;;      Totals:         0       0       0
  3677 ;;Total ram usage:        0 bytes
  3678 ;; Hardware stack levels used: 1
  3679 ;; Hardware stack levels required when called: 7
  3680 ;; This function calls:
  3681 ;;		Nothing
  3682 ;; This function is called by:
  3683 ;;		_fun_work
  3684 ;;		_switch_wm
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688  04A5                     _go_close_alt:	
  3689                           ;psect for function _go_close_alt
  3690                           
  3691  04A5                     l1772:	
  3692                           ;incstack = 0
  3693                           ; Regs used in _go_close_alt: []
  3694                           
  3695                           
  3696                           ;main.c: 99:     FLAGS.bits.CLOSED = 1;
  3697  04A5  157C               	bsf	_FLAGS,2
  3698  04A6                     l282:	
  3699                           ;main.c: 100:     do { LATCbits.LATC4 = 0; } while(0);
  3700                           
  3701  04A6  0022               	movlb	2	; select bank2
  3702  04A7  120E               	bcf	14,4	;volatile
  3703  04A8                     l284:	
  3704                           ;main.c: 101:     do { LATCbits.LATC5 = 1; } while(0);
  3705                           
  3706  04A8  168E               	bsf	14,5	;volatile
  3707  04A9                     l286:
  3708  04A9  0008               	return
  3709  04AA                     __end_of_go_close_alt:
  3710                           
  3711                           	psect	text23
  3712  0345                     __ptext23:	
  3713 ;; *************** function _go_close *****************
  3714 ;; Defined at:
  3715 ;;		line 79 in file "main.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;		None
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;		None
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  1    wreg      void 
  3722 ;; Registers used:
  3723 ;;		wreg
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMMON   BANK0   BANK1
  3729 ;;      Params:         0       0       0
  3730 ;;      Locals:         0       0       0
  3731 ;;      Temps:          0       2       0
  3732 ;;      Totals:         0       2       0
  3733 ;;Total ram usage:        2 bytes
  3734 ;; Hardware stack levels used: 1
  3735 ;; Hardware stack levels required when called: 7
  3736 ;; This function calls:
  3737 ;;		Nothing
  3738 ;; This function is called by:
  3739 ;;		_povorot
  3740 ;;		_fun_work
  3741 ;;		_switch_wm
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745  0345                     _go_close:	
  3746                           ;psect for function _go_close
  3747                           
  3748  0345                     l1754:	
  3749                           ;incstack = 0
  3750                           ; Regs used in _go_close: [wreg]
  3751                           
  3752                           
  3753                           ;main.c: 80:     time_s = 0;
  3754  0345  3000               	movlw	0
  3755  0346  0020               	movlb	0	; select bank0
  3756  0347  00AF               	movwf	_time_s+3
  3757  0348  3000               	movlw	0
  3758  0349  00AE               	movwf	_time_s+2
  3759  034A  3000               	movlw	0
  3760  034B  00AD               	movwf	_time_s+1
  3761  034C  3000               	movlw	0
  3762  034D  00AC               	movwf	_time_s
  3763  034E                     l1756:
  3764  034E  0022               	movlb	2	; select bank2
  3765  034F  160E               	bsf	14,4	;volatile
  3766  0350                     l269:
  3767                           
  3768                           ;main.c: 82:     _delay((unsigned long)((1 * 1000)*(4000000/4000.0)));
  3769  0350  3006               	movlw	6
  3770  0351  0020               	movlb	0	; select bank0
  3771  0352  00A1               	movwf	??_go_close+1
  3772  0353  3013               	movlw	19
  3773  0354  00A0               	movwf	??_go_close
  3774  0355  30AD               	movlw	173
  3775  0356                     u1387:
  3776  0356  0B89               	decfsz	9,f
  3777  0357  2B56               	goto	u1387
  3778  0358  0BA0               	decfsz	??_go_close,f
  3779  0359  2B56               	goto	u1387
  3780  035A  0BA1               	decfsz	??_go_close+1,f
  3781  035B  2B56               	goto	u1387
  3782  035C  3200               	nop2
  3783  035D                     l1758:
  3784  035D  0022               	movlb	2	; select bank2
  3785  035E  168E               	bsf	14,5	;volatile
  3786  035F                     l271:
  3787                           
  3788                           ;main.c: 84:     time_pow_s = 10;
  3789  035F  300A               	movlw	10
  3790  0360  0020               	movlb	0	; select bank0
  3791  0361  00A0               	movwf	??_go_close
  3792  0362  0820               	movf	??_go_close,w
  3793  0363  00B6               	movwf	_time_pow_s
  3794  0364                     l1760:
  3795                           
  3796                           ;main.c: 85:     FLAGS.bits.RELE_POW_WAIT = 1;
  3797  0364  16FC               	bsf	_FLAGS,5
  3798  0365                     l1762:
  3799                           
  3800                           ;main.c: 86:     FLAGS.bits.RELE_CON_WAIT = 1;
  3801  0365  177C               	bsf	_FLAGS,6
  3802  0366                     l272:
  3803  0366  0008               	return
  3804  0367                     __end_of_go_close:
  3805                           
  3806                           	psect	text24
  3807  02CB                     __ptext24:	
  3808 ;; *************** function _beep *****************
  3809 ;; Defined at:
  3810 ;;		line 69 in file "main.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;  delay           2    0[BANK0 ] unsigned int 
  3813 ;;  pause           2    2[BANK0 ] unsigned int 
  3814 ;;  time            1    4[BANK0 ] unsigned char 
  3815 ;;  count           1    5[BANK0 ] unsigned char 
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  i               1    8[BANK0 ] unsigned char 
  3818 ;;  j               1    7[BANK0 ] unsigned char 
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  1    wreg      void 
  3821 ;; Registers used:
  3822 ;;		wreg, status,2, status,0, pclath, cstack
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMMON   BANK0   BANK1
  3828 ;;      Params:         0       6       0
  3829 ;;      Locals:         0       2       0
  3830 ;;      Temps:          0       1       0
  3831 ;;      Totals:         0       9       0
  3832 ;;Total ram usage:        9 bytes
  3833 ;; Hardware stack levels used: 1
  3834 ;; Hardware stack levels required when called: 8
  3835 ;; This function calls:
  3836 ;;		_switch_zum
  3837 ;; This function is called by:
  3838 ;;		_fun_work
  3839 ;;		_switch_wm
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843  02CB                     _beep:	
  3844                           ;psect for function _beep
  3845                           
  3846  02CB                     l1736:	
  3847                           ;incstack = 0
  3848                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
  3849                           
  3850                           
  3851                           ;main.c: 70:     for (char j = 0; j < count; j++) {
  3852  02CB  0020               	movlb	0	; select bank0
  3853  02CC  01A7               	clrf	beep@j
  3854  02CD  2AEF               	goto	l1752
  3855  02CE                     l1738:
  3856                           
  3857                           ;main.c: 71:         for (char i = 0; i < time; i++) {
  3858  02CE  01A8               	clrf	beep@i
  3859  02CF  2ADB               	goto	l1746
  3860  02D0                     l1740:
  3861                           
  3862                           ;main.c: 72:             switch_zum();
  3863  02D0  3184  2427  3182   	fcall	_switch_zum
  3864  02D3                     l1742:
  3865                           
  3866                           ;main.c: 73:             _delay((unsigned long)((300)*(4000000/4000000.0)));
  3867  02D3  3064               	movlw	100
  3868  02D4                     u1397:
  3869  02D4  0B89               	decfsz	9,f
  3870  02D5  2AD4               	goto	u1397
  3871  02D6                     l1744:
  3872                           
  3873                           ;main.c: 74:         }
  3874  02D6  3001               	movlw	1
  3875  02D7  0020               	movlb	0	; select bank0
  3876  02D8  00A6               	movwf	??_beep
  3877  02D9  0826               	movf	??_beep,w
  3878  02DA  07A8               	addwf	beep@i,f
  3879  02DB                     l1746:
  3880  02DB  0824               	movf	beep@time,w
  3881  02DC  0228               	subwf	beep@i,w
  3882  02DD  1C03               	skipc
  3883  02DE  2AE0               	goto	u891
  3884  02DF  2AE1               	goto	u890
  3885  02E0                     u891:
  3886  02E0  2AD0               	goto	l1740
  3887  02E1                     u890:
  3888  02E1                     l1748:
  3889                           
  3890                           ;main.c: 75:         _delay((unsigned long)((100)*(4000000/4000.0)));
  3891  02E1  3082               	movlw	130
  3892  02E2  0020               	movlb	0	; select bank0
  3893  02E3  00A6               	movwf	??_beep
  3894  02E4  30DD               	movlw	221
  3895  02E5                     u1407:
  3896  02E5  0B89               	decfsz	9,f
  3897  02E6  2AE5               	goto	u1407
  3898  02E7  0BA6               	decfsz	??_beep,f
  3899  02E8  2AE5               	goto	u1407
  3900  02E9  3200               	nop2
  3901  02EA                     l1750:
  3902                           
  3903                           ;main.c: 76:     }
  3904  02EA  3001               	movlw	1
  3905  02EB  0020               	movlb	0	; select bank0
  3906  02EC  00A6               	movwf	??_beep
  3907  02ED  0826               	movf	??_beep,w
  3908  02EE  07A7               	addwf	beep@j,f
  3909  02EF                     l1752:
  3910  02EF  0825               	movf	beep@count,w
  3911  02F0  0227               	subwf	beep@j,w
  3912  02F1  1C03               	skipc
  3913  02F2  2AF4               	goto	u901
  3914  02F3  2AF5               	goto	u900
  3915  02F4                     u901:
  3916  02F4  2ACE               	goto	l1738
  3917  02F5                     u900:
  3918  02F5                     l265:
  3919  02F5  0008               	return
  3920  02F6                     __end_of_beep:
  3921                           
  3922                           	psect	text25
  3923  0427                     __ptext25:	
  3924 ;; *************** function _switch_zum *****************
  3925 ;; Defined at:
  3926 ;;		line 61 in file "main.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;		None
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;		None
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  1    wreg      void 
  3933 ;; Registers used:
  3934 ;;		status,0
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMMON   BANK0   BANK1
  3940 ;;      Params:         0       0       0
  3941 ;;      Locals:         0       0       0
  3942 ;;      Temps:          0       0       0
  3943 ;;      Totals:         0       0       0
  3944 ;;Total ram usage:        0 bytes
  3945 ;; Hardware stack levels used: 1
  3946 ;; Hardware stack levels required when called: 7
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		_beep
  3951 ;;		_start_setup
  3952 ;;		_main
  3953 ;;		_TMR0_ISR
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957  0427                     _switch_zum:	
  3958                           ;psect for function _switch_zum
  3959                           
  3960                           
  3961                           ;Skip over the trampoline to the duplicate function for level 1
  3962  0427  1C7E               	btfss	int$flags,0
  3963  0428  2C2A               	goto	_switch_zum$intlevel0
  3964  0429  2C64               	ljmp	i1_switch_zum
  3965  042A                     _switch_zum$intlevel0:
  3966  042A                     l251:	
  3967                           ;incstack = 0
  3968                           ; Regs used in _switch_zum: [status,0]
  3969                           ;main.c: 62:     do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  3970                           
  3971  042A                     l1706:
  3972  042A  1003               	clrc
  3973  042B  0022               	movlb	2	; select bank2
  3974  042C  1E8C               	btfss	12,5	;volatile
  3975  042D  1403               	setc
  3976  042E  1803               	btfsc	3,0
  3977  042F  2C31               	goto	u801
  3978  0430  2C34               	goto	u800
  3979  0431                     u801:
  3980  0431  0022               	movlb	2	; select bank2
  3981  0432  168C               	bsf	12,5	;volatile
  3982  0433  2C36               	goto	u814
  3983  0434                     u800:
  3984  0434  0022               	movlb	2	; select bank2
  3985  0435  128C               	bcf	12,5	;volatile
  3986  0436                     u814:
  3987  0436                     l253:
  3988  0436  0008               	return
  3989  0437                     __end_of_switch_zum:
  3990                           
  3991                           	psect	intentry
  3992  0004                     __pintentry:	
  3993 ;; *************** function _INTERRUPT_InterruptManager *****************
  3994 ;; Defined at:
  3995 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;		None
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;		None
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  1    wreg      void 
  4002 ;; Registers used:
  4003 ;;		wreg, status,2, status,0, pclath, cstack
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMMON   BANK0   BANK1
  4009 ;;      Params:         0       0       0
  4010 ;;      Locals:         0       0       0
  4011 ;;      Temps:          0       0       0
  4012 ;;      Totals:         0       0       0
  4013 ;;Total ram usage:        0 bytes
  4014 ;; Hardware stack levels used: 1
  4015 ;; Hardware stack levels required when called: 6
  4016 ;; This function calls:
  4017 ;;		_TMR0_ISR
  4018 ;;		_TMR2_ISR
  4019 ;; This function is called by:
  4020 ;;		Interrupt level 1
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024  0004                     _INTERRUPT_InterruptManager:
  4025                           
  4026                           ;incstack = 0
  4027  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4028                           
  4029                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  4030  0005  3180               	pagesel	$
  4031  0006                     i1l2006:
  4032                           
  4033                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4034  0006  1E8B               	btfss	11,5	;volatile
  4035  0007  2809               	goto	u131_21
  4036  0008  280A               	goto	u131_20
  4037  0009                     u131_21:
  4038  0009  2812               	goto	i1l108
  4039  000A                     u131_20:
  4040  000A                     i1l2008:
  4041  000A  1D0B               	btfss	11,2	;volatile
  4042  000B  280D               	goto	u132_21
  4043  000C  280E               	goto	u132_20
  4044  000D                     u132_21:
  4045  000D  2812               	goto	i1l108
  4046  000E                     u132_20:
  4047  000E                     i1l2010:
  4048                           
  4049                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  4050  000E  3184  2447  3180   	fcall	_TMR0_ISR
  4051                           
  4052                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  4053  0011  2824               	goto	i1l114
  4054  0012                     i1l108:	
  4055                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  4056                           
  4057  0012  1F0B               	btfss	11,6	;volatile
  4058  0013  2815               	goto	u133_21
  4059  0014  2816               	goto	u133_20
  4060  0015                     u133_21:
  4061  0015  2824               	goto	i1l114
  4062  0016                     u133_20:
  4063  0016                     i1l2012:
  4064                           
  4065                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  4066  0016  0021               	movlb	1	; select bank1
  4067  0017  1C91               	btfss	17,1	;volatile
  4068  0018  281A               	goto	u134_21
  4069  0019  281B               	goto	u134_20
  4070  001A                     u134_21:
  4071  001A  2824               	goto	i1l113
  4072  001B                     u134_20:
  4073  001B                     i1l2014:
  4074  001B  0020               	movlb	0	; select bank0
  4075  001C  1C91               	btfss	17,1	;volatile
  4076  001D  281F               	goto	u135_21
  4077  001E  2820               	goto	u135_20
  4078  001F                     u135_21:
  4079  001F  2824               	goto	i1l113
  4080  0020                     u135_20:
  4081  0020                     i1l2016:
  4082                           
  4083                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
  4084  0020  3183  23EC  3180   	fcall	_TMR2_ISR
  4085                           
  4086                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4087  0023  2824               	goto	i1l114
  4088  0024                     i1l113:	
  4089                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  4090                           
  4091  0024                     i1l114:
  4092  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4093  0025  0009               	retfie
  4094  0026                     __end_of_INTERRUPT_InterruptManager:
  4095                           
  4096                           	psect	text27
  4097  03EC                     __ptext27:	
  4098 ;; *************** function _TMR2_ISR *****************
  4099 ;; Defined at:
  4100 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;		None
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;		None
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  1    wreg      void 
  4107 ;; Registers used:
  4108 ;;		wreg, status,2, status,0, pclath, cstack
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMMON   BANK0   BANK1
  4114 ;;      Params:         0       0       0
  4115 ;;      Locals:         0       0       0
  4116 ;;      Temps:          0       0       0
  4117 ;;      Totals:         0       0       0
  4118 ;;Total ram usage:        0 bytes
  4119 ;; Hardware stack levels used: 1
  4120 ;; Hardware stack levels required when called: 5
  4121 ;; This function calls:
  4122 ;;		_TMR2_CallBack
  4123 ;; This function is called by:
  4124 ;;		_INTERRUPT_InterruptManager
  4125 ;; This function uses a non-reentrant model
  4126 ;;
  4127                           
  4128  03EC                     _TMR2_ISR:	
  4129                           ;psect for function _TMR2_ISR
  4130                           
  4131  03EC                     i1l1842:	
  4132                           ;incstack = 0
  4133                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  4134                           
  4135                           
  4136                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
  4137  03EC  0020               	movlb	0	; select bank0
  4138  03ED  1091               	bcf	17,1	;volatile
  4139  03EE                     i1l1844:
  4140                           
  4141                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 10)
  4142  03EE  3001               	movlw	1
  4143  03EF  07F8               	addwf	TMR2_ISR@CountCallBack,f	;volatile
  4144  03F0  3000               	movlw	0
  4145  03F1  3DF9               	addwfc	TMR2_ISR@CountCallBack+1,f	;volatile
  4146  03F2  3000               	movlw	0
  4147  03F3  0279               	subwf	TMR2_ISR@CountCallBack+1,w	;volatile
  4148  03F4  300A               	movlw	10
  4149  03F5  1903               	skipnz
  4150  03F6  0278               	subwf	TMR2_ISR@CountCallBack,w	;volatile
  4151  03F7  1C03               	skipc
  4152  03F8  2BFA               	goto	u102_21
  4153  03F9  2BFB               	goto	u102_20
  4154  03FA                     u102_21:
  4155  03FA  2C00               	goto	i1l158
  4156  03FB                     u102_20:
  4157  03FB                     i1l1846:
  4158                           
  4159                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
  4160  03FB  3184  2457  3183   	fcall	_TMR2_CallBack
  4161  03FE                     i1l1848:
  4162                           
  4163                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
  4164  03FE  01F8               	clrf	TMR2_ISR@CountCallBack	;volatile
  4165  03FF  01F9               	clrf	TMR2_ISR@CountCallBack+1	;volatile
  4166  0400                     i1l158:
  4167  0400  0008               	return
  4168  0401                     __end_of_TMR2_ISR:
  4169                           
  4170                           	psect	text28
  4171  0457                     __ptext28:	
  4172 ;; *************** function _TMR2_CallBack *****************
  4173 ;; Defined at:
  4174 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;		None
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;		None
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  1    wreg      void 
  4181 ;; Registers used:
  4182 ;;		wreg, status,2, status,0, pclath, cstack
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMMON   BANK0   BANK1
  4188 ;;      Params:         0       0       0
  4189 ;;      Locals:         0       0       0
  4190 ;;      Temps:          0       0       0
  4191 ;;      Totals:         0       0       0
  4192 ;;Total ram usage:        0 bytes
  4193 ;; Hardware stack levels used: 1
  4194 ;; Hardware stack levels required when called: 4
  4195 ;; This function calls:
  4196 ;;		Absolute function
  4197 ;;		_TMR2_DefaultInterruptHandler
  4198 ;;		_sec_tick_work
  4199 ;; This function is called by:
  4200 ;;		_TMR2_ISR
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204  0457                     _TMR2_CallBack:	
  4205                           ;psect for function _TMR2_CallBack
  4206                           
  4207  0457                     i1l1732:	
  4208                           ;incstack = 0
  4209                           ; Regs used in _TMR2_CallBack: [wreg+status,2+status,0+pclath+cstack]
  4210                           
  4211                           
  4212                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
  4213  0457  0020               	movlb	0	; select bank0
  4214  0458  0839               	movf	_TMR2_InterruptHandler,w
  4215  0459  043A               	iorwf	_TMR2_InterruptHandler+1,w
  4216  045A  1903               	btfsc	3,2
  4217  045B  2C5D               	goto	u88_21
  4218  045C  2C5E               	goto	u88_20
  4219  045D                     u88_21:
  4220  045D  2C63               	goto	i1l162
  4221  045E                     u88_20:
  4222  045E                     i1l1734:
  4223                           
  4224                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
  4225  045E  083A               	movf	_TMR2_InterruptHandler+1,w
  4226  045F  008A               	movwf	10
  4227  0460  0839               	movf	_TMR2_InterruptHandler,w
  4228  0461  000A               	callw
  4229  0462  3184               	pagesel	$
  4230  0463                     i1l162:
  4231  0463  0008               	return
  4232  0464                     __end_of_TMR2_CallBack:
  4233                           
  4234                           	psect	text29
  4235  04C2                     __ptext29:	
  4236 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4237 ;; Defined at:
  4238 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;		None
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;		None
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  1    wreg      void 
  4245 ;; Registers used:
  4246 ;;		None
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMMON   BANK0   BANK1
  4252 ;;      Params:         0       0       0
  4253 ;;      Locals:         0       0       0
  4254 ;;      Temps:          0       0       0
  4255 ;;      Totals:         0       0       0
  4256 ;;Total ram usage:        0 bytes
  4257 ;; Hardware stack levels used: 1
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_TMR2_Initialize
  4262 ;;		_TMR2_CallBack
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266  04C2                     _TMR2_DefaultInterruptHandler:	
  4267                           ;psect for function _TMR2_DefaultInterruptHandler
  4268                           
  4269  04C2                     i1l168:	
  4270                           ;incstack = 0
  4271                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  4272                           
  4273  04C2  0008               	return
  4274  04C3                     __end_of_TMR2_DefaultInterruptHandler:
  4275                           
  4276                           	psect	text30
  4277  01EE                     __ptext30:	
  4278 ;; *************** function _sec_tick_work *****************
  4279 ;; Defined at:
  4280 ;;		line 247 in file "main.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;		None
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;		None
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  1    wreg      void 
  4287 ;; Registers used:
  4288 ;;		wreg, status,2, status,0, pclath, cstack
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMMON   BANK0   BANK1
  4294 ;;      Params:         0       0       0
  4295 ;;      Locals:         0       0       0
  4296 ;;      Temps:          1       0       0
  4297 ;;      Totals:         1       0       0
  4298 ;;Total ram usage:        1 bytes
  4299 ;; Hardware stack levels used: 1
  4300 ;; Hardware stack levels required when called: 3
  4301 ;; This function calls:
  4302 ;;		_get_measure
  4303 ;;		_rele_tick
  4304 ;;		_toggle_tone
  4305 ;; This function is called by:
  4306 ;;		_start_setup
  4307 ;;		_TMR2_CallBack
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311  01EE                     _sec_tick_work:	
  4312                           ;psect for function _sec_tick_work
  4313                           
  4314  01EE                     i1l1708:	
  4315                           ;incstack = 0
  4316                           ; Regs used in _sec_tick_work: [wreg+status,2+status,0+pclath+cstack]
  4317                           
  4318                           
  4319                           ;main.c: 248:     time_s++;
  4320  01EE  3001               	movlw	1
  4321  01EF  0020               	movlb	0	; select bank0
  4322  01F0  07AC               	addwf	_time_s,f
  4323  01F1  3000               	movlw	0
  4324  01F2  3DAD               	addwfc	_time_s+1,f
  4325  01F3  3000               	movlw	0
  4326  01F4  3DAE               	addwfc	_time_s+2,f
  4327  01F5  3000               	movlw	0
  4328  01F6  3DAF               	addwfc	_time_s+3,f
  4329  01F7                     i1l1710:
  4330                           
  4331                           ;main.c: 249:     rele_tick();
  4332  01F7  3182  22F6  3181   	fcall	_rele_tick
  4333  01FA  0064               	clrwdt	;# 
  4334  01FB                     i1l1712:
  4335                           
  4336                           ;main.c: 251:     if (FLAGS.bits.ALARM) {
  4337  01FB  1C7C               	btfss	_FLAGS,0
  4338  01FC  29FE               	goto	u82_21
  4339  01FD  29FF               	goto	u82_20
  4340  01FE                     u82_21:
  4341  01FE  2A0F               	goto	i1l1718
  4342  01FF                     u82_20:
  4343  01FF                     i1l1714:
  4344  01FF  1003               	clrc
  4345  0200  0022               	movlb	2	; select bank2
  4346  0201  1E0C               	btfss	12,4	;volatile
  4347  0202  1403               	setc
  4348  0203  1803               	btfsc	3,0
  4349  0204  2A06               	goto	u83_21
  4350  0205  2A09               	goto	u83_20
  4351  0206                     u83_21:
  4352  0206  0022               	movlb	2	; select bank2
  4353  0207  160C               	bsf	12,4	;volatile
  4354  0208  2A0B               	goto	u84_24
  4355  0209                     u83_20:
  4356  0209  0022               	movlb	2	; select bank2
  4357  020A  120C               	bcf	12,4	;volatile
  4358  020B                     u84_24:
  4359  020B                     i1l1716:
  4360                           
  4361                           ;main.c: 253:         toggle_tone();
  4362  020B  3184  247B  3181   	fcall	_toggle_tone
  4363                           
  4364                           ;main.c: 254:     } else {
  4365  020E  2A29               	goto	i1l411
  4366  020F                     i1l1718:
  4367                           
  4368                           ;main.c: 255:         get_measure();
  4369  020F  3182  2299  3181   	fcall	_get_measure
  4370  0212                     i1l1720:
  4371                           
  4372                           ;main.c: 256:         static char iled;;main.c: 257:         iled++;
  4373  0212  3001               	movlw	1
  4374  0213  00F7               	movwf	??_sec_tick_work
  4375  0214  0877               	movf	??_sec_tick_work,w
  4376  0215  07FA               	addwf	sec_tick_work@iled,f
  4377  0216                     i1l1722:
  4378                           
  4379                           ;main.c: 258:         if (iled > 2) {
  4380  0216  3003               	movlw	3
  4381  0217  027A               	subwf	sec_tick_work@iled,w
  4382  0218  1C03               	skipc
  4383  0219  2A1B               	goto	u85_21
  4384  021A  2A1C               	goto	u85_20
  4385  021B                     u85_21:
  4386  021B  2A29               	goto	i1l411
  4387  021C                     u85_20:
  4388  021C                     i1l1724:
  4389  021C  1003               	clrc
  4390  021D  0022               	movlb	2	; select bank2
  4391  021E  1E0C               	btfss	12,4	;volatile
  4392  021F  1403               	setc
  4393  0220  1803               	btfsc	3,0
  4394  0221  2A23               	goto	u86_21
  4395  0222  2A26               	goto	u86_20
  4396  0223                     u86_21:
  4397  0223  0022               	movlb	2	; select bank2
  4398  0224  160C               	bsf	12,4	;volatile
  4399  0225  2A28               	goto	u87_24
  4400  0226                     u86_20:
  4401  0226  0022               	movlb	2	; select bank2
  4402  0227  120C               	bcf	12,4	;volatile
  4403  0228                     u87_24:
  4404  0228                     i1l1726:
  4405                           
  4406                           ;main.c: 260:             iled = 0;
  4407  0228  01FA               	clrf	sec_tick_work@iled
  4408  0229                     i1l411:
  4409  0229  0008               	return
  4410  022A                     __end_of_sec_tick_work:
  4411                           
  4412                           	psect	text31
  4413  047B                     __ptext31:	
  4414 ;; *************** function _toggle_tone *****************
  4415 ;; Defined at:
  4416 ;;		line 65 in file "main.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;		None
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;		None
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  1    wreg      void 
  4423 ;; Registers used:
  4424 ;;		status,0
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMMON   BANK0   BANK1
  4430 ;;      Params:         0       0       0
  4431 ;;      Locals:         0       0       0
  4432 ;;      Temps:          0       0       0
  4433 ;;      Totals:         0       0       0
  4434 ;;Total ram usage:        0 bytes
  4435 ;; Hardware stack levels used: 1
  4436 ;; This function calls:
  4437 ;;		Nothing
  4438 ;; This function is called by:
  4439 ;;		_sec_tick_work
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443  047B                     _toggle_tone:	
  4444                           ;psect for function _toggle_tone
  4445                           
  4446  047B                     i1l1606:	
  4447                           ;incstack = 0
  4448                           ; Regs used in _toggle_tone: [status,0]
  4449                           
  4450                           
  4451                           ;main.c: 66:     INTCONbits.TMR0IE = ~INTCONbits.TMR0IE;
  4452  047B  1003               	clrc
  4453  047C  1E8B               	btfss	11,5	;volatile
  4454  047D  1403               	setc
  4455  047E  1803               	btfsc	3,0
  4456  047F  2C81               	goto	u71_21
  4457  0480  2C83               	goto	u71_20
  4458  0481                     u71_21:
  4459  0481  168B               	bsf	11,5	;volatile
  4460  0482  2C84               	goto	u72_24
  4461  0483                     u71_20:
  4462  0483  128B               	bcf	11,5	;volatile
  4463  0484                     u72_24:
  4464  0484                     i1l256:
  4465  0484  0008               	return
  4466  0485                     __end_of_toggle_tone:
  4467                           
  4468                           	psect	text32
  4469  02F6                     __ptext32:	
  4470 ;; *************** function _rele_tick *****************
  4471 ;; Defined at:
  4472 ;;		line 226 in file "main.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;		None
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;		None
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  1    wreg      void 
  4479 ;; Registers used:
  4480 ;;		wreg, status,2, status,0
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMMON   BANK0   BANK1
  4486 ;;      Params:         0       0       0
  4487 ;;      Locals:         0       0       0
  4488 ;;      Temps:          2       0       0
  4489 ;;      Totals:         2       0       0
  4490 ;;Total ram usage:        2 bytes
  4491 ;; Hardware stack levels used: 1
  4492 ;; This function calls:
  4493 ;;		Nothing
  4494 ;; This function is called by:
  4495 ;;		_sec_tick_work
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499  02F6                     _rele_tick:	
  4500                           ;psect for function _rele_tick
  4501                           
  4502  02F6                     i1l1628:	
  4503                           ;incstack = 0
  4504                           ; Regs used in _rele_tick: [wreg+status,2+status,0]
  4505                           
  4506                           
  4507                           ;main.c: 227:     if (FLAGS.bits.RELE_POW_WAIT) {
  4508  02F6  1EFC               	btfss	_FLAGS,5
  4509  02F7  2AF9               	goto	u76_21
  4510  02F8  2AFA               	goto	u76_20
  4511  02F9                     u76_21:
  4512  02F9  2B1E               	goto	i1l399
  4513  02FA                     u76_20:
  4514  02FA                     i1l1630:
  4515                           
  4516                           ;main.c: 228:         if (time_pow_s > 0) {
  4517  02FA  0020               	movlb	0	; select bank0
  4518  02FB  0836               	movf	_time_pow_s,w
  4519  02FC  1903               	btfsc	3,2
  4520  02FD  2AFF               	goto	u77_21
  4521  02FE  2B00               	goto	u77_20
  4522  02FF                     u77_21:
  4523  02FF  2B03               	goto	i1l389
  4524  0300                     u77_20:
  4525  0300                     i1l1632:
  4526                           
  4527                           ;main.c: 229:             time_pow_s--;
  4528  0300  3001               	movlw	1
  4529  0301  02B6               	subwf	_time_pow_s,f
  4530                           
  4531                           ;main.c: 230:         } else {
  4532  0302  2B1E               	goto	i1l399
  4533  0303                     i1l389:
  4534                           
  4535                           ;main.c: 231:             if (FLAGS.bits.RELE_CON_WAIT) {
  4536  0303  1F7C               	btfss	_FLAGS,6
  4537  0304  2B06               	goto	u78_21
  4538  0305  2B07               	goto	u78_20
  4539  0306                     u78_21:
  4540  0306  2B1A               	goto	i1l397
  4541  0307                     u78_20:
  4542  0307                     i1l392:	
  4543                           ;main.c: 232:                 do { LATCbits.LATC5 = 0; } while(0);
  4544                           
  4545  0307  0022               	movlb	2	; select bank2
  4546  0308  128E               	bcf	14,5	;volatile
  4547  0309                     i1l1634:
  4548                           
  4549                           ;main.c: 233:                 _delay((unsigned long)((1 * 1000)*(4000000/4000.0)));
  4550  0309  3006               	movlw	6
  4551  030A  00F1               	movwf	??_rele_tick+1
  4552  030B  3013               	movlw	19
  4553  030C  00F0               	movwf	??_rele_tick
  4554  030D  30AE               	movlw	174
  4555  030E                     u141_27:
  4556  030E  0B89               	decfsz	9,f
  4557  030F  2B0E               	goto	u141_27
  4558  0310  0BF0               	decfsz	??_rele_tick,f
  4559  0311  2B0E               	goto	u141_27
  4560  0312  0BF1               	decfsz	??_rele_tick+1,f
  4561  0313  2B0E               	goto	u141_27
  4562  0314                     i1l1636:
  4563  0314  0022               	movlb	2	; select bank2
  4564  0315  120E               	bcf	14,4	;volatile
  4565  0316                     i1l1638:
  4566                           
  4567                           ;main.c: 235:                 FLAGS.bits.CLOSED = 1;
  4568  0316  157C               	bsf	_FLAGS,2
  4569  0317                     i1l1640:
  4570                           
  4571                           ;main.c: 236:                 FLAGS.bits.RELE_CON_WAIT = 0;
  4572  0317  137C               	bcf	_FLAGS,6
  4573  0318                     i1l1642:
  4574                           
  4575                           ;main.c: 237:                 FLAGS.bits.RELE_POW_WAIT = 0;
  4576  0318  12FC               	bcf	_FLAGS,5
  4577                           
  4578                           ;main.c: 238:             } else {
  4579  0319  2B1E               	goto	i1l399
  4580  031A                     i1l397:	
  4581                           ;main.c: 239:                 do { LATCbits.LATC5 = 0; } while(0);
  4582                           
  4583  031A  0022               	movlb	2	; select bank2
  4584  031B  128E               	bcf	14,5	;volatile
  4585  031C                     i1l398:
  4586                           
  4587                           ;main.c: 240:                 FLAGS.bits.CLOSED = 0;
  4588  031C  117C               	bcf	_FLAGS,2
  4589                           
  4590                           ;main.c: 241:                 FLAGS.bits.RELE_POW_WAIT = 0;
  4591  031D  12FC               	bcf	_FLAGS,5
  4592  031E                     i1l399:
  4593  031E  0008               	return
  4594  031F                     __end_of_rele_tick:
  4595                           
  4596                           	psect	text33
  4597  0299                     __ptext33:	
  4598 ;; *************** function _get_measure *****************
  4599 ;; Defined at:
  4600 ;;		line 122 in file "main.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;		None
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;  res             2    5[COMMON] unsigned int 
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  1    wreg      void 
  4607 ;; Registers used:
  4608 ;;		wreg, status,2, status,0, pclath, cstack
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMMON   BANK0   BANK1
  4614 ;;      Params:         0       0       0
  4615 ;;      Locals:         2       0       0
  4616 ;;      Temps:          1       0       0
  4617 ;;      Totals:         3       0       0
  4618 ;;Total ram usage:        3 bytes
  4619 ;; Hardware stack levels used: 1
  4620 ;; Hardware stack levels required when called: 2
  4621 ;; This function calls:
  4622 ;;		_start_alarm
  4623 ;;		i1_ADC_GetConversion
  4624 ;; This function is called by:
  4625 ;;		_sec_tick_work
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629  0299                     _get_measure:	
  4630                           ;psect for function _get_measure
  4631                           
  4632  0299                     i1l305:	
  4633                           ;incstack = 0
  4634                           ; Regs used in _get_measure: [wreg+status,2+status,0+pclath+cstack]
  4635                           ;main.c: 123:     static unsigned char measures;;main.c: 124:     do { LATCbits.LATC1 = 
      +                          1; } while(0);
  4636                           
  4637  0299  0022               	movlb	2	; select bank2
  4638  029A  148E               	bsf	14,1	;volatile
  4639  029B                     i1l307:	
  4640                           ;main.c: 125:     do { ANSELCbits.ANSC3 = 1; } while(0);
  4641                           
  4642  029B  0023               	movlb	3	; select bank3
  4643  029C  158E               	bsf	14,3	;volatile
  4644  029D                     i1l1608:
  4645                           
  4646                           ;main.c: 126:     unsigned res = ADC_GetConversion(PIN_WSP_STATE);
  4647  029D  3007               	movlw	7
  4648  029E  3183  23A7  3182   	fcall	i1_ADC_GetConversion
  4649  02A1  0871               	movf	?i1_ADC_GetConversion+1,w
  4650  02A2  00F6               	movwf	get_measure@res+1
  4651  02A3  0870               	movf	?i1_ADC_GetConversion,w
  4652  02A4  00F5               	movwf	get_measure@res
  4653  02A5                     i1l1610:
  4654  02A5  0023               	movlb	3	; select bank3
  4655  02A6  118E               	bcf	14,3	;volatile
  4656  02A7                     i1l1612:
  4657  02A7  0022               	movlb	2	; select bank2
  4658  02A8  108E               	bcf	14,1	;volatile
  4659  02A9                     i1l1614:
  4660                           
  4661                           ;main.c: 129:     if (res < BAD_WSP_VOLTAGE) measures++;
  4662  02A9  304E               	movlw	78
  4663  02AA  0276               	subwf	get_measure@res+1,w
  4664  02AB  3020               	movlw	32
  4665  02AC  1903               	skipnz
  4666  02AD  0275               	subwf	get_measure@res,w
  4667  02AE  1803               	skipnc
  4668  02AF  2AB1               	goto	u73_21
  4669  02B0  2AB2               	goto	u73_20
  4670  02B1                     u73_21:
  4671  02B1  2AB7               	goto	i1l1618
  4672  02B2                     u73_20:
  4673  02B2                     i1l1616:
  4674  02B2  3001               	movlw	1
  4675  02B3  00F4               	movwf	??_get_measure
  4676  02B4  0874               	movf	??_get_measure,w
  4677  02B5  07FB               	addwf	get_measure@measures,f
  4678  02B6  2AC1               	goto	i1l1622
  4679  02B7                     i1l1618:
  4680  02B7  309C               	movlw	156
  4681  02B8  0276               	subwf	get_measure@res+1,w
  4682  02B9  3041               	movlw	65
  4683  02BA  1903               	skipnz
  4684  02BB  0275               	subwf	get_measure@res,w
  4685  02BC  1C03               	skipc
  4686  02BD  2ABF               	goto	u74_21
  4687  02BE  2AC0               	goto	u74_20
  4688  02BF                     u74_21:
  4689  02BF  2AC1               	goto	i1l1622
  4690  02C0                     u74_20:
  4691  02C0                     i1l1620:
  4692  02C0  01FB               	clrf	get_measure@measures
  4693  02C1                     i1l1622:
  4694                           
  4695                           ;main.c: 131:     if (measures > 2) start_alarm();
  4696  02C1  3003               	movlw	3
  4697  02C2  027B               	subwf	get_measure@measures,w
  4698  02C3  1C03               	skipc
  4699  02C4  2AC6               	goto	u75_21
  4700  02C5  2AC7               	goto	u75_20
  4701  02C6                     u75_21:
  4702  02C6  2ACA               	goto	i1l317
  4703  02C7                     u75_20:
  4704  02C7                     i1l1624:
  4705  02C7  3184  2437  3182   	fcall	_start_alarm
  4706  02CA                     i1l317:
  4707  02CA  0008               	return
  4708  02CB                     __end_of_get_measure:
  4709                           
  4710                           	psect	text34
  4711  03A7                     __ptext34:	
  4712 ;; *************** function i1_ADC_GetConversion *****************
  4713 ;; Defined at:
  4714 ;;		line 112 in file "mcc_generated_files/adc.c"
  4715 ;; Parameters:    Size  Location     Type
  4716 ;;  channel         1    wreg     enum E2178
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;  channel         1    3[COMMON] enum E2178
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  2    0[COMMON] unsigned short 
  4721 ;; Registers used:
  4722 ;;		wreg, status,2, status,0
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMMON   BANK0   BANK1
  4728 ;;      Params:         2       0       0
  4729 ;;      Locals:         1       0       0
  4730 ;;      Temps:          1       0       0
  4731 ;;      Totals:         4       0       0
  4732 ;;Total ram usage:        4 bytes
  4733 ;; Hardware stack levels used: 1
  4734 ;; This function calls:
  4735 ;;		Nothing
  4736 ;; This function is called by:
  4737 ;;		_get_measure
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741  03A7                     i1_ADC_GetConversion:	
  4742                           ;psect for function i1_ADC_GetConversion
  4743                           
  4744                           
  4745                           ;incstack = 0
  4746                           ; Regs used in i1_ADC_GetConversion: [wreg+status,2+status,0]
  4747                           ;i1ADC_GetConversion@channel stored from wreg
  4748  03A7  00F3               	movwf	i1ADC_GetConversion@channel
  4749  03A8                     i1l1590:
  4750                           
  4751                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  4752  03A8  0873               	movf	i1ADC_GetConversion@channel,w
  4753  03A9  00F2               	movwf	??i1_ADC_GetConversion
  4754  03AA  0DF2               	rlf	??i1_ADC_GetConversion,f
  4755  03AB  0DF2               	rlf	??i1_ADC_GetConversion,f
  4756  03AC  0021               	movlb	1	; select bank1
  4757  03AD  081D               	movf	29,w	;volatile
  4758  03AE  0672               	xorwf	??i1_ADC_GetConversion,w
  4759  03AF  3983               	andlw	-125
  4760  03B0  0672               	xorwf	??i1_ADC_GetConversion,w
  4761  03B1  009D               	movwf	29	;volatile
  4762  03B2                     i1l1592:
  4763                           
  4764                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  4765  03B2  141D               	bsf	29,0	;volatile
  4766  03B3                     i1l1594:
  4767                           
  4768                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  4769  03B3  3200               	nop2	;2 cycle nop
  4770  03B4  3200               	nop2	;2 cycle nop
  4771  03B5  0000               	nop
  4772  03B6                     i1l1596:
  4773                           
  4774                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  4775  03B6  0021               	movlb	1	; select bank1
  4776  03B7  149D               	bsf	29,1	;volatile
  4777  03B8                     i1l61:	
  4778                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  4779                           
  4780                           
  4781                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  4782  03B8  189D               	btfsc	29,1	;volatile
  4783  03B9  2BBB               	goto	u70_21
  4784  03BA  2BBC               	goto	u70_20
  4785  03BB                     u70_21:
  4786  03BB  2BB8               	goto	i1l61
  4787  03BC                     u70_20:
  4788  03BC                     i1l1598:
  4789                           
  4790                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4791  03BC  081C               	movf	28,w	;volatile
  4792  03BD  00F1               	movwf	?i1_ADC_GetConversion+1
  4793  03BE  081B               	movf	27,w	;volatile
  4794  03BF  00F0               	movwf	?i1_ADC_GetConversion
  4795  03C0                     i1l64:
  4796  03C0  0008               	return
  4797  03C1                     __end_ofi1_ADC_GetConversion:
  4798                           
  4799                           	psect	text35
  4800  0437                     __ptext35:	
  4801 ;; *************** function _start_alarm *****************
  4802 ;; Defined at:
  4803 ;;		line 111 in file "main.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;		None
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;		None
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  1    wreg      void 
  4810 ;; Registers used:
  4811 ;;		wreg, status,2, status,0, pclath, cstack
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMMON   BANK0   BANK1
  4817 ;;      Params:         0       0       0
  4818 ;;      Locals:         0       0       0
  4819 ;;      Temps:          0       0       0
  4820 ;;      Totals:         0       0       0
  4821 ;;Total ram usage:        0 bytes
  4822 ;; Hardware stack levels used: 1
  4823 ;; Hardware stack levels required when called: 1
  4824 ;; This function calls:
  4825 ;;		i1_go_close
  4826 ;;		i1_go_close_alt
  4827 ;; This function is called by:
  4828 ;;		_get_measure
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832  0437                     _start_alarm:	
  4833                           ;psect for function _start_alarm
  4834                           
  4835  0437                     i1l1584:	
  4836                           ;incstack = 0
  4837                           ; Regs used in _start_alarm: [wreg+status,2+status,0+pclath+cstack]
  4838                           
  4839                           
  4840                           ;main.c: 112:     FLAGS.bits.ALARM = 1;
  4841  0437  147C               	bsf	_FLAGS,0
  4842  0438                     i1l296:	
  4843                           ;main.c: 113:     do { LATCbits.LATC0 = 1; } while(0);
  4844                           
  4845  0438  0022               	movlb	2	; select bank2
  4846  0439  140E               	bsf	14,0	;volatile
  4847  043A                     i1l297:
  4848                           
  4849                           ;main.c: 114:     INTCONbits.TMR0IE = 1;
  4850  043A  168B               	bsf	11,5	;volatile
  4851                           
  4852                           ;main.c: 115:     if (FLAGS.bits.NORMAL_WORK_MODE) {
  4853  043B  1CFC               	btfss	_FLAGS,1
  4854  043C  2C3E               	goto	u69_21
  4855  043D  2C3F               	goto	u69_20
  4856  043E                     u69_21:
  4857  043E  2C43               	goto	i1l1588
  4858  043F                     u69_20:
  4859  043F                     i1l1586:
  4860                           
  4861                           ;main.c: 116:         go_close();
  4862  043F  3183  2387  3184   	fcall	i1_go_close
  4863                           
  4864                           ;main.c: 117:     } else {
  4865  0442  2C46               	goto	i1l300
  4866  0443                     i1l1588:
  4867                           
  4868                           ;main.c: 118:         go_close_alt();
  4869  0443  3184  24AA  3184   	fcall	i1_go_close_alt
  4870  0446                     i1l300:
  4871  0446  0008               	return
  4872  0447                     __end_of_start_alarm:
  4873                           
  4874                           	psect	text36
  4875  04AA                     __ptext36:	
  4876 ;; *************** function i1_go_close_alt *****************
  4877 ;; Defined at:
  4878 ;;		line 98 in file "main.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;		None
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;		None
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  1    wreg      void 
  4885 ;; Registers used:
  4886 ;;		None
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMMON   BANK0   BANK1
  4892 ;;      Params:         0       0       0
  4893 ;;      Locals:         0       0       0
  4894 ;;      Temps:          0       0       0
  4895 ;;      Totals:         0       0       0
  4896 ;;Total ram usage:        0 bytes
  4897 ;; Hardware stack levels used: 1
  4898 ;; This function calls:
  4899 ;;		Nothing
  4900 ;; This function is called by:
  4901 ;;		_start_alarm
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905  04AA                     i1_go_close_alt:	
  4906                           ;psect for function i1_go_close_alt
  4907                           
  4908  04AA                     i1l1582:	
  4909                           ;incstack = 0
  4910                           ; Regs used in i1_go_close_alt: []
  4911                           
  4912                           
  4913                           ;main.c: 99:     FLAGS.bits.CLOSED = 1;
  4914  04AA  157C               	bsf	_FLAGS,2
  4915  04AB                     i1l282:	
  4916                           ;main.c: 100:     do { LATCbits.LATC4 = 0; } while(0);
  4917                           
  4918  04AB  0022               	movlb	2	; select bank2
  4919  04AC  120E               	bcf	14,4	;volatile
  4920  04AD                     i1l284:	
  4921                           ;main.c: 101:     do { LATCbits.LATC5 = 1; } while(0);
  4922                           
  4923  04AD  168E               	bsf	14,5	;volatile
  4924  04AE                     i1l286:
  4925  04AE  0008               	return
  4926  04AF                     __end_ofi1_go_close_alt:
  4927                           
  4928                           	psect	text37
  4929  0387                     __ptext37:	
  4930 ;; *************** function i1_go_close *****************
  4931 ;; Defined at:
  4932 ;;		line 79 in file "main.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;		None
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;		None
  4937 ;; Return value:  Size  Location     Type
  4938 ;;                  1    wreg      void 
  4939 ;; Registers used:
  4940 ;;		wreg
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMMON   BANK0   BANK1
  4946 ;;      Params:         0       0       0
  4947 ;;      Locals:         0       0       0
  4948 ;;      Temps:          2       0       0
  4949 ;;      Totals:         2       0       0
  4950 ;;Total ram usage:        2 bytes
  4951 ;; Hardware stack levels used: 1
  4952 ;; This function calls:
  4953 ;;		Nothing
  4954 ;; This function is called by:
  4955 ;;		_start_alarm
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959  0387                     i1_go_close:	
  4960                           ;psect for function i1_go_close
  4961                           
  4962  0387                     i1l1570:	
  4963                           ;incstack = 0
  4964                           ; Regs used in i1_go_close: [wreg]
  4965                           
  4966                           
  4967                           ;main.c: 80:     time_s = 0;
  4968  0387  3000               	movlw	0
  4969  0388  0020               	movlb	0	; select bank0
  4970  0389  00AF               	movwf	_time_s+3
  4971  038A  3000               	movlw	0
  4972  038B  00AE               	movwf	_time_s+2
  4973  038C  3000               	movlw	0
  4974  038D  00AD               	movwf	_time_s+1
  4975  038E  3000               	movlw	0
  4976  038F  00AC               	movwf	_time_s
  4977  0390                     i1l1572:
  4978  0390  0022               	movlb	2	; select bank2
  4979  0391  160E               	bsf	14,4	;volatile
  4980  0392                     i1l269:
  4981                           
  4982                           ;main.c: 82:     _delay((unsigned long)((1 * 1000)*(4000000/4000.0)));
  4983  0392  3006               	movlw	6
  4984  0393  00F1               	movwf	??i1_go_close+1
  4985  0394  3013               	movlw	19
  4986  0395  00F0               	movwf	??i1_go_close
  4987  0396  30AE               	movlw	174
  4988  0397                     u142_27:
  4989  0397  0B89               	decfsz	9,f
  4990  0398  2B97               	goto	u142_27
  4991  0399  0BF0               	decfsz	??i1_go_close,f
  4992  039A  2B97               	goto	u142_27
  4993  039B  0BF1               	decfsz	??i1_go_close+1,f
  4994  039C  2B97               	goto	u142_27
  4995  039D                     i1l1574:
  4996  039D  0022               	movlb	2	; select bank2
  4997  039E  168E               	bsf	14,5	;volatile
  4998  039F                     i1l271:
  4999                           
  5000                           ;main.c: 84:     time_pow_s = 10;
  5001  039F  300A               	movlw	10
  5002  03A0  00F0               	movwf	??i1_go_close
  5003  03A1  0870               	movf	??i1_go_close,w
  5004  03A2  0020               	movlb	0	; select bank0
  5005  03A3  00B6               	movwf	_time_pow_s
  5006  03A4                     i1l1576:
  5007                           
  5008                           ;main.c: 85:     FLAGS.bits.RELE_POW_WAIT = 1;
  5009  03A4  16FC               	bsf	_FLAGS,5
  5010  03A5                     i1l1578:
  5011                           
  5012                           ;main.c: 86:     FLAGS.bits.RELE_CON_WAIT = 1;
  5013  03A5  177C               	bsf	_FLAGS,6
  5014  03A6                     i1l272:
  5015  03A6  0008               	return
  5016  03A7                     __end_ofi1_go_close:
  5017                           
  5018                           	psect	text38
  5019  0447                     __ptext38:	
  5020 ;; *************** function _TMR0_ISR *****************
  5021 ;; Defined at:
  5022 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;		None
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;		None
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  1    wreg      void 
  5029 ;; Registers used:
  5030 ;;		wreg, status,2, status,0, pclath, cstack
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMMON   BANK0   BANK1
  5036 ;;      Params:         0       0       0
  5037 ;;      Locals:         0       0       0
  5038 ;;      Temps:          0       0       0
  5039 ;;      Totals:         0       0       0
  5040 ;;Total ram usage:        0 bytes
  5041 ;; Hardware stack levels used: 1
  5042 ;; Hardware stack levels required when called: 1
  5043 ;; This function calls:
  5044 ;;		Absolute function
  5045 ;;		_TMR0_DefaultInterruptHandler
  5046 ;;		i1_switch_zum
  5047 ;; This function is called by:
  5048 ;;		_INTERRUPT_InterruptManager
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           
  5052  0447                     _TMR0_ISR:	
  5053                           ;psect for function _TMR0_ISR
  5054                           
  5055  0447                     i1l1834:	
  5056                           ;incstack = 0
  5057                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  5058                           
  5059                           
  5060                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  5061  0447  110B               	bcf	11,2	;volatile
  5062  0448                     i1l1836:
  5063                           
  5064                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  5065  0448  0020               	movlb	0	; select bank0
  5066  0449  083B               	movf	_timer0ReloadVal,w	;volatile
  5067  044A  0095               	movwf	21	;volatile
  5068  044B                     i1l1838:
  5069                           
  5070                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  5071  044B  0837               	movf	_TMR0_InterruptHandler,w
  5072  044C  0438               	iorwf	_TMR0_InterruptHandler+1,w
  5073  044D  1903               	btfsc	3,2
  5074  044E  2C50               	goto	u101_21
  5075  044F  2C51               	goto	u101_20
  5076  0450                     u101_21:
  5077  0450  2C56               	goto	i1l198
  5078  0451                     u101_20:
  5079  0451                     i1l1840:
  5080                           
  5081                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  5082  0451  0838               	movf	_TMR0_InterruptHandler+1,w
  5083  0452  008A               	movwf	10
  5084  0453  0837               	movf	_TMR0_InterruptHandler,w
  5085  0454  000A               	callw
  5086  0455  3184               	pagesel	$
  5087  0456                     i1l198:
  5088  0456  0008               	return
  5089  0457                     __end_of_TMR0_ISR:
  5090                           
  5091                           	psect	text39
  5092  04C3                     __ptext39:	
  5093 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5094 ;; Defined at:
  5095 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;		None
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;		None
  5100 ;; Return value:  Size  Location     Type
  5101 ;;                  1    wreg      void 
  5102 ;; Registers used:
  5103 ;;		None
  5104 ;; Tracked objects:
  5105 ;;		On entry : 0/0
  5106 ;;		On exit  : 0/0
  5107 ;;		Unchanged: 0/0
  5108 ;; Data sizes:     COMMON   BANK0   BANK1
  5109 ;;      Params:         0       0       0
  5110 ;;      Locals:         0       0       0
  5111 ;;      Temps:          0       0       0
  5112 ;;      Totals:         0       0       0
  5113 ;;Total ram usage:        0 bytes
  5114 ;; Hardware stack levels used: 1
  5115 ;; This function calls:
  5116 ;;		Nothing
  5117 ;; This function is called by:
  5118 ;;		_TMR0_Initialize
  5119 ;;		_TMR0_ISR
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123  04C3                     _TMR0_DefaultInterruptHandler:	
  5124                           ;psect for function _TMR0_DefaultInterruptHandler
  5125                           
  5126  04C3                     i1l204:	
  5127                           ;incstack = 0
  5128                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  5129                           
  5130  04C3  0008               	return
  5131  04C4                     __end_of_TMR0_DefaultInterruptHandler:
  5132                           
  5133                           	psect	text40
  5134  0464                     __ptext40:	
  5135 ;; *************** function i1_switch_zum *****************
  5136 ;; Defined at:
  5137 ;;		line 61 in file "main.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;		None
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;		None
  5142 ;; Return value:  Size  Location     Type
  5143 ;;                  1    wreg      void 
  5144 ;; Registers used:
  5145 ;;		status,0
  5146 ;; Tracked objects:
  5147 ;;		On entry : 0/0
  5148 ;;		On exit  : 0/0
  5149 ;;		Unchanged: 0/0
  5150 ;; Data sizes:     COMMON   BANK0   BANK1
  5151 ;;      Params:         0       0       0
  5152 ;;      Locals:         0       0       0
  5153 ;;      Temps:          0       0       0
  5154 ;;      Totals:         0       0       0
  5155 ;;Total ram usage:        0 bytes
  5156 ;; Hardware stack levels used: 1
  5157 ;; This function calls:
  5158 ;;		Nothing
  5159 ;; This function is called by:
  5160 ;;		_TMR0_ISR
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164  0464                     i1_switch_zum:	
  5165                           ;psect for function i1_switch_zum
  5166                           
  5167  0464                     i1l251:	
  5168                           ;incstack = 0
  5169                           ; Regs used in i1_switch_zum: [status,0]
  5170                           ;main.c: 62:     do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  5171                           
  5172  0464                     i1l1832:
  5173  0464  1003               	clrc
  5174  0465  0022               	movlb	2	; select bank2
  5175  0466  1E8C               	btfss	12,5	;volatile
  5176  0467  1403               	setc
  5177  0468  1803               	btfsc	3,0
  5178  0469  2C6B               	goto	u99_21
  5179  046A  2C6E               	goto	u99_20
  5180  046B                     u99_21:
  5181  046B  0022               	movlb	2	; select bank2
  5182  046C  168C               	bsf	12,5	;volatile
  5183  046D  2C70               	goto	u100_24
  5184  046E                     u99_20:
  5185  046E  0022               	movlb	2	; select bank2
  5186  046F  128C               	bcf	12,5	;volatile
  5187  0470                     u100_24:
  5188  0470                     i1l253:
  5189  0470  0008               	return
  5190  0471                     __end_ofi1_switch_zum:
  5191  007E                     btemp	set	126	;btemp
  5192  007E                     int$flags	set	126
  5193  007E                     wtemp0	set	126
  5194                           
  5195                           	psect	idloc
  5196                           
  5197                           ;Config register IDLOC0 @ 0x8000
  5198                           ;	unspecified, using default values
  5199  8000                     	org	32768
  5200  8000  3FFF               	dw	16383
  5201                           
  5202                           ;Config register IDLOC1 @ 0x8001
  5203                           ;	unspecified, using default values
  5204  8001                     	org	32769
  5205  8001  3FFF               	dw	16383
  5206                           
  5207                           ;Config register IDLOC2 @ 0x8002
  5208                           ;	unspecified, using default values
  5209  8002                     	org	32770
  5210  8002  3FFF               	dw	16383
  5211                           
  5212                           ;Config register IDLOC3 @ 0x8003
  5213                           ;	unspecified, using default values
  5214  8003                     	org	32771
  5215  8003  3FFF               	dw	16383
  5216                           
  5217                           	psect	config
  5218                           
  5219                           ;Config register CONFIG1 @ 0x8007
  5220                           ;	Oscillator Selection
  5221                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5222                           ;	Watchdog Timer Enable
  5223                           ;	WDTE = OFF, WDT disabled
  5224                           ;	Power-up Timer Enable
  5225                           ;	PWRTE = OFF, PWRT disabled
  5226                           ;	MCLR Pin Function Select
  5227                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5228                           ;	Flash Program Memory Code Protection
  5229                           ;	CP = OFF, Program memory code protection is disabled
  5230                           ;	Data Memory Code Protection
  5231                           ;	CPD = OFF, Data memory code protection is disabled
  5232                           ;	Brown-out Reset Enable
  5233                           ;	BOREN = ON, Brown-out Reset enabled
  5234                           ;	Clock Out Enable
  5235                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5236                           ;	Internal/External Switchover
  5237                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5238                           ;	Fail-Safe Clock Monitor Enable
  5239                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5240  8007                     	org	32775
  5241  8007  3FE4               	dw	16356
  5242                           
  5243                           ;Config register CONFIG2 @ 0x8008
  5244                           ;	Flash Memory Self-Write Protection
  5245                           ;	WRT = OFF, Write protection off
  5246                           ;	PLL Enable
  5247                           ;	PLLEN = OFF, 4x PLL disabled
  5248                           ;	Stack Overflow/Underflow Reset Enable
  5249                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5250                           ;	Brown-out Reset Voltage Selection
  5251                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5252                           ;	Low-Voltage Programming Enable
  5253                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5254  8008                     	org	32776
  5255  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    12
    Data        0
    BSS         16
    Persistent  37
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80     12      28
    BANK1            32      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> switch_zum(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i1_switch_zum(), switch_zum(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sec_tick_work(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sec_tick_work(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR2_CallBack->_sec_tick_work
    _sec_tick_work->_get_measure
    _get_measure->i1_ADC_GetConversion
    _start_alarm->i1_go_close

Critical Paths under _main in BANK0

    _main->_fun_work
    _main->_switch_wm
    _switch_wm->_beep
    _start_setup->_get_fun_full
    _start_setup->_get_jump_full
    _get_jump_full->_ADC_GetConversion
    _get_fun_full->_ADC_GetConversion
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _povorot->_go_close
    _get_jump->_ADC_GetConversion
    _get_fun->_ADC_GetConversion
    _fun_work->_beep

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3542
                                             11 BANK0      1     1      0
                           _fun_work
                            _get_fun
                           _get_jump
                            _povorot
                        _start_setup
                          _switch_wm
                         _switch_zum
 ---------------------------------------------------------------------------------
 (1) _switch_wm                                            2     2      0    1308
                                              9 BANK0      2     2      0
                               _beep
                           _go_close
                       _go_close_alt
 ---------------------------------------------------------------------------------
 (1) _start_setup                                          0     0      0     836
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                       _get_fun_full
                      _get_jump_full
 ---------------------------------------------------------------------------------
 (2) _get_jump_full                                        4     4      0      70
                                              4 BANK0      4     4      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (2) _get_fun_full                                         4     4      0      70
                                              4 BANK0      4     4      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     348
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      1     1      0     174
                                              2 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _povorot                                              0     0      0       0
                           _go_close
                            _go_open
 ---------------------------------------------------------------------------------
 (1) _get_jump                                             3     3      0      45
                                              4 BANK0      3     3      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (1) _get_fun                                              3     3      0      45
                                              4 BANK0      3     3      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    4     2      2      22
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _fun_work                                             2     2      0    1308
                                              9 BANK0      2     2      0
                               _beep
                           _go_close
                       _go_close_alt
                            _go_open
                        _go_open_alt
 ---------------------------------------------------------------------------------
 (2) _go_open_alt                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_open                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _go_close_alt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_close                                             2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _beep                                                 9     3      6    1308
                                              0 BANK0      9     3      6
                         _switch_zum
 ---------------------------------------------------------------------------------
 (1) _switch_zum                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0      67
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0      67
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR2_CallBack                                        0     0      0      67
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                      _sec_tick_work *
 ---------------------------------------------------------------------------------
 (8) _sec_tick_work                                        1     1      0      67
                                              7 COMMON     1     1      0
                        _get_measure
                          _rele_tick
                        _toggle_tone
 ---------------------------------------------------------------------------------
 (9) _toggle_tone                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _rele_tick                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _get_measure                                          3     3      0      67
                                              4 COMMON     3     3      0
                        _start_alarm
                i1_ADC_GetConversion
 ---------------------------------------------------------------------------------
 (10) i1_ADC_GetConversion                                 4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _start_alarm                                         0     0      0       0
                         i1_go_close
                     i1_go_close_alt
 ---------------------------------------------------------------------------------
 (11) i1_go_close_alt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i1_go_close                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                       i1_switch_zum *
 ---------------------------------------------------------------------------------
 (7) i1_switch_zum                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _fun_work
     _beep
       _switch_zum
     _go_close
     _go_close_alt
     _go_open
     _go_open_alt
   _get_fun
     _ADC_GetConversion
   _get_jump
     _ADC_GetConversion
   _povorot
     _go_close
     _go_open
   _start_setup
     _SYSTEM_Initialize
       _ADC_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR2_Initialize
         _TMR2_SetInterruptHandler
       _WDT_Initialize
     _TMR0_SetInterruptHandler
     _TMR2_SetInterruptHandler
     _TMR2_StartTimer
     _get_fun_full
       _ADC_GetConversion
     _get_jump_full
       _ADC_GetConversion
   _switch_wm
     _beep
     _go_close
     _go_close_alt
   _switch_zum

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     i1_switch_zum *
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _sec_tick_work *
         _get_measure
           _start_alarm
             i1_go_close
             i1_go_close_alt
           i1_ADC_GetConversion
         _rele_tick
         _toggle_tone

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      29       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      C      1C       6       35.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      29       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Apr 28 14:11:32 2022

        __end_of_TMR2_SetInterruptHandler 049A                          get_fun_full@flag 0027  
                      get_fun@fun_counter 0035                     __end_of_sec_tick_work 022A  
                                      l23 0413                                        l26 0493  
                                      l61 037B                                        l29 04BE  
                                      l46 048C                                        l64 0386  
                                      l90 03EB                             ?_go_close_alt 0070  
                          ?_get_jump_full 0070                           _timer0ReloadVal 003B  
                                     l201 049F                                       l140 04C1  
                                     l137 0426                                       l322 01B0  
                                     l251 042A                                       l324 01B2  
                                     l340 00E0                                       l253 0436  
                                     l165 0499                                       l342 00E2  
                                     l271 035F                                       l335 01ED  
                                     l351 0122                                       l272 0366  
                                     l360 022A                                       l416 00DF  
                                     l265 02F5                                       l425 0093  
                                     l185 03D6                                       l353 0124  
                                     l433 0158                                       l282 04A6  
                                     l434 016C                                       l275 0471  
                                     l291 04A3                                       l355 0126  
                                     l284 04A8                                       l428 014C  
                                     l269 0350                                       l277 0473  
                                     l293 04A4                                       l286 04A9  
                                     l374 016D                                       l279 047A  
                                     l383 01AD                                       l289 04A1  
                                     l369 0263                                       l385 01AF  
                                     l459 0298                               _start_alarm 0437  
                                     _PR2 001B                                       u800 0434  
                                     u801 0431                                       u900 02F5  
                                     u901 02F4                                       u814 0436  
                                     u910 00F8                                       u911 00F7  
                                     u920 0108                                       u921 0107  
                                     u930 0117                                       u931 0116  
                                     u940 0122                                       u941 0121  
                                     u790 037F                                       u950 0183  
                                     u791 037E                                       u951 0182  
                                     u960 0193                                       u961 0192  
                                     u890 02E1                                       u970 01A2  
                                     u891 02E0                                       u971 01A1  
                                     u980 01AD                                       u981 01AC  
                             _start_setup 0264                              ?_go_open_alt 0070  
                         _TMR2_Initialize 0414                                       wreg 0009  
                              i1_go_close 0387                               get_jump@res 0025  
                                    l2000 0290                                      l2002 0293  
                                    l2004 0296                                      l2020 031F  
                                    l2030 0340                                      l2022 0322  
                                    l2024 0324                                      l2026 032D  
                                    l2028 0331                                      l1602 0494  
                                    l1700 0379                                      l1604 049A  
                                    l1702 037F                                      l1706 042A  
                                    l1650 03DF                                      l1730 04BF  
                                    l1802 011D                                      l1810 0183  
                                    l1740 02D0                                      l1900 0094  
                                    l1660 0491                                      l1652 03E2  
                                    l1644 03D7                                      l1820 0198  
                                    l1812 0188                                      l1804 016F  
                                    l1750 02EA                                      l1742 02D3  
                                    l1902 00A6                                      l1910 00B5  
                                    l1654 03E7                                      l1646 03DA  
                                    l1670 0419                                      l1662 04BB  
                                    l1830 01A8                                      l1822 019B  
                                    l1814 018C                                      l1806 0171  
                                    l1744 02D6                                      l1752 02EF  
                                    l1736 02CB                                      l1760 0364  
                                    l1920 00D6                                      l1912 00C7  
                                    l1904 00AA                                      l1680 0489  
                                    l1656 048D                                      l1648 03DD  
                                    l1672 041B                                      l1664 0414  
                                    l1728 0401                                      l1824 01A2  
                                    l1816 0193                                      l1808 017A  
                                    l1746 02DB                                      l1738 02CE  
                                    l1762 0365                                      l1754 0345  
                                    l1930 004B                                      l1922 003B  
                                    l1850 01B4                                      l1914 00CB  
                                    l1906 00AE                                      l1658 0490  
                                    l1690 03CE                                      l1682 03C1  
                                    l1674 0423                                      l1666 0417  
                                    l1826 01A6                                      l1818 0197  
                                    l1748 02E1                                      l1756 034E  
                                    l1772 04A5                                      l1940 006C  
                                    l1932 004F                                      l1924 003F  
                                    l1860 01D0                                      l1852 01BD  
                                    l1916 00CF                                      l1908 00B2  
                                    l1676 0485                                      l1692 03CF  
                                    l1684 03C6                                      l1668 0418  
                                    l1780 00EF                                      l1758 035D  
                                    l1766 0474                                      l1774 04A0  
                                    l1950 007F                                      l1942 0070  
                                    l1934 0053                                      l1926 0043  
                                    l1694 0369                                      l1870 01E8  
                                    l1862 01D4                                      l1854 01BF  
                                    l1918 00D3                                      l1678 0488  
                                    l1686 03C9                                      l1790 010C  
                                    l1782 00F8                                      l1768 0479  
                                    l1944 0074                                      l1936 0056  
                                    l1928 0047                                      l1696 0375  
                                    l1872 01EC                                      l1864 01DB  
                                    l1856 01C1                                      l1880 0237  
                                    l1688 03CD                                      l1792 010D  
                                    l1784 00FD                                      l1776 00E4  
                                    l1960 0137                                      l1952 0127  
                                    l1946 0078                                      l1938 0068  
                                    l1698 0376                                      l1866 01DF  
                                    l1858 01CB                                      l1890 0255  
                                    l1882 0241                                      l1794 0110  
                                    l1786 0101                                      l1778 00E6  
                                    l1970 0268                                      l1962 0150  
                                    l1954 012B                                      l1948 007C  
                                    l1868 01E1                                      l1892 0257  
                                    l1884 0246                                      l1876 022C  
                                    l1796 0117                                      l1788 0108  
                                    l1980 0280                                      l1972 0279  
                                    l1964 0155                                      l1956 012F  
                                    l1894 025E                                      l1886 024A  
                                    l1878 0235                                      l1798 011B  
                                    l1990 0289                                      l1982 0282  
                                    l1974 027C                                      l1966 0264  
                                    l1958 0134                                      l1896 0262  
                                    l1888 0251                                      l1992 028A  
                                    l1984 0284                                      l1976 027E  
                                    l1968 0267                                      l1994 028C  
                                    l1986 0286                                      l1978 027F  
                                    l1996 028D                                      l1988 0288  
                                    l1998 028E                                      u1100 00AA  
                                    u1101 00A9                                      u1030 01CB  
                                    u1110 00AE                                      u1031 01CA  
                                    u1111 00AD                                      u1200 004B  
                                    u1040 01DB                                      u1120 00B2  
                                    u1201 004A                                      u1041 01DA  
                                    u1121 00B1                                      u1210 004F  
                                    u1050 01E8                                      u1130 00C7  
                                    u1211 004E                                      u1051 01E7  
                                    u1131 00C6                                      u1220 006C  
                                    u1060 0241                                      u1140 00CB  
                                    u1300 0155                                      u1221 006B  
                                    u1061 0240                                      u1141 00CA  
                                    u1301 0154                                      u1230 0070  
                                    u1070 0251                                      u1150 00CF  
                                    u1231 006F                                      u1071 0250  
                                    u1151 00CE                                      u1240 0074  
                                    u1080 025E                                      u1160 00D3  
                                    u1241 0073                                      u1081 025D  
                                    u1161 00D2                                      u1250 0078  
                                    u1170 003F                                      u1090 00A6  
                                    u1251 0077                                      u1171 003E  
                                    u1091 00A5                                      u1180 0043  
                                    u1260 012B                                      u1181 0042  
                                    u1261 012A                                      _LATA 010C  
                                    u1190 0047                                      u1270 012F  
                                    u1407 02E5                                      u1191 0046  
                                    u1271 012E                                      _LATC 010E  
                                    u1280 0134                                      u1360 0331  
                                    u1281 0133                                      u1361 0330  
                                    u1290 0150                                      u1291 014F  
                                    u1377 0328                                      u1387 0356  
                                    u1397 02D4                                      i1l61 03B8  
                                    i1l64 03C0                                      _TMR0 0015  
                                    _TMR2 001A                                      _WPUA 020C  
                                    _WPUC 020E                                      _beep 02CB  
                                    _main 031F                                      btemp 007E  
                          ??_get_fun_full 0024                                      start 0026  
                    __end_ofi1_switch_zum 0471                   get_fun_full@fun_counter 0034  
                          ??_go_close_alt 0020                   __end_of_TMR0_Initialize 03D7  
          ??_TMR0_DefaultInterruptHandler 0070             __end_of_OSCILLATOR_Initialize 0494  
                                   ?_beep 0020                                     ?_main 0070  
                                   _FLAGS 007C                                     _T2CON 001C  
                                   i1l113 0024                                     i1l114 0024  
                                   i1l204 04C3                                     i1l300 0446  
                                   i1l108 0012                                     i1l305 0299  
                                   i1l162 0463                                     i1l251 0464  
                                   i1l307 029B                                     i1l411 0229  
                                   i1l253 0470                                     i1l317 02CA  
                                   i1l158 0400                                     i1l271 039F  
                                   i1l272 03A6                                     i1l256 0484  
                                   i1l168 04C2                                     i1l282 04AB  
                                   i1l284 04AD                                     i1l269 0392  
                                   i1l198 0456                                     i1l286 04AE  
                                   i1l296 0438                                     i1l392 0307  
                                   i1l297 043A                                     i1l397 031A  
                                   i1l389 0303                                     i1l398 031C  
                                   i1l399 031E                                     u70_20 03BC  
                                   u70_21 03BB                                     u71_20 0483  
                                   u71_21 0481                                     u72_24 0484  
                                   u73_20 02B2                                     u73_21 02B1  
                                   _TRISA 008C                                     _TRISC 008E  
                                   u74_20 02C0                                     u82_20 01FF  
                                   u74_21 02BF                                     u82_21 01FE  
                                   u75_20 02C7                                     u83_20 0209  
                                   u75_21 02C6                                     u83_21 0206  
                                   u76_20 02FA                                     u76_21 02F9  
                                   u84_24 020B                                     u69_20 043F  
                                   u77_20 0300                                     u85_20 021C  
                                   u69_21 043E                                     u77_21 02FF  
                                   u85_21 021B                                     u78_20 0307  
                                   u86_20 0226                                     u78_21 0306  
                                   u86_21 0223                                     u87_24 0228  
                                   u88_20 045E                                     u88_21 045D  
                                   u99_20 046E                                     u99_21 046B  
               ?_TMR0_SetInterruptHandler 0020                          __end_of_TMR0_ISR 0457  
                         __end_of_get_fun 01EE                          __end_of_TMR2_ISR 0401  
                         __end_of_go_open 047B                                     beep@i 0028  
                                   beep@j 0027                            _WDT_Initialize 04BB  
                                   pclath 000A                           __end_of_povorot 00E0  
                                   status 0003                                     wtemp0 007E  
                         _TMR2_StartTimer 04BF                           __initialization 0027  
                            __end_of_beep 02F6                              __end_of_main 0345  
                         ??_get_jump_full 0024                   __end_of_TMR2_Initialize 0427  
             ?_INTERRUPT_InterruptManager 0070                                    ??_beep 0026  
                _TMR2_SetInterruptHandler 0494                                    ??_main 002B  
                  __end_of_WDT_Initialize 04BF                               ?i1_go_close 0070  
                     i1_ADC_GetConversion 03A7                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _APFCON 011D  
                                  _ANSELA 018C                                    _ANSELC 018E  
                                  _BORCON 0116                                    u100_24 0470  
                                  u101_20 0451                                    u101_21 0450  
                                  u102_20 03FB                                    u102_21 03FA  
                                  i1l2010 000E                                    i1l2012 0016  
                                  i1l2014 001B                                    i1l2006 0006  
                                  i1l2016 0020                                    i1l2008 000A  
                                  i1l1610 02A5                                    i1l1620 02C0  
                                  i1l1612 02A7                                    i1l1622 02C1  
                                  i1l1614 02A9                                    i1l1630 02FA  
                                  i1l1606 047B                                    i1l1710 01F7  
                                  i1l1624 02C7                                    i1l1616 02B2  
                                  i1l1608 029D                                    i1l1640 0317  
                                  i1l1632 0300                                    i1l1720 0212  
                                  i1l1712 01FB                                    i1l1570 0387  
                                  i1l1618 02B7                                    i1l1642 0318  
                                  i1l1634 0309                                    i1l1722 0216  
                                  i1l1714 01FF                                    i1l1572 0390  
                                  i1l1636 0314                                    i1l1628 02F6  
                                  i1l1724 021C                                    i1l1716 020B  
                                  i1l1708 01EE                                    i1l1732 0457  
                                  i1l1574 039D                                    i1l1582 04AA  
                                  i1l1590 03A8                                    i1l1638 0316  
                                  i1l1726 0228                                    i1l1718 020F  
                                  i1l1734 045E                                    i1l1832 0464  
                                  i1l1840 0451                                    i1l1576 03A4  
                                  i1l1584 0437                                    i1l1592 03B2  
                                  i1l1834 0447                                    i1l1578 03A5  
                                  i1l1586 043F                                    i1l1594 03B3  
                                  i1l1842 03EC                                    i1l1836 0448  
                                  i1l1588 0443                                    i1l1596 03B6  
                                  i1l1844 03EE                                    i1l1838 044B  
                                  i1l1598 03BC                                    i1l1846 03FB  
                                  i1l1848 03FE                                    u131_20 000A  
                                  u131_21 0009                                    u132_20 000E  
                                  u132_21 000D                                    u133_20 0016  
                                  u133_21 0015                                    u141_27 030E  
                                  u134_20 001B                                    u134_21 001A  
                                  u142_27 0397                                    u135_20 0020  
                                  u135_21 001F                          _GOOD_WSP_VOLTAGE 04B3  
                                  _OSCCON 0099                                    _WDTCON 0097  
                    ?i1_ADC_GetConversion 0070                          __end_of_get_jump 0264  
                        __end_of_go_close 0367                      _switch_zum$intlevel0 042A  
                        ?_TMR0_Initialize 0070                          __end_of_fun_work 0094  
                                  _time_s 002C                                 ??_get_fun 0024  
                               ??_go_open 0020                      __end_of_get_fun_full 0127  
                         ?_WDT_Initialize 0070                            get_measure@res 0075  
                ADC_GetConversion@channel 0023                                 ??_povorot 0022  
                 __end_of_TMR2_StartTimer 04C2  TMR0_SetInterruptHandler@InterruptHandler 0020  
TMR2_SetInterruptHandler@InterruptHandler 0020                      __end_of_go_close_alt 04AA  
                       _SYSTEM_Initialize 0401                   __end_of__initialization 0038  
                   __end_of_TMR2_CallBack 0464                        ?_SYSTEM_Initialize 0070  
                            ?_toggle_tone 0070                     ??i1_ADC_GetConversion 0072  
                          __pcstackCOMMON 0070                 get_jump_full@jump_counter 0032  
                     ??_SYSTEM_Initialize 0023                                 ?_TMR0_ISR 0070  
                               ?_TMR2_ISR 0070                     __end_of_ROTATION_TIME 04B3  
                        ?_TMR2_Initialize 0070                i1ADC_GetConversion@channel 0073  
                            ?_start_alarm 0070                            _OPTION_REGbits 0095  
                            ?_start_setup 0070                              i1_switch_zum 0464  
               __end_of_SYSTEM_Initialize 0414                                __pbssBANK0 002C  
                              __pmaintext 031F          __end_of_TMR0_SetInterruptHandler 04A0  
                              ??_TMR0_ISR 0070                                ??_TMR2_ISR 0078  
                              __pintentry 0004                          get_jump_full@res 0025  
                                 _OSCTUNE 0098                          ?_TMR2_StartTimer 0070  
                               ?_get_jump 0070                                 ?_go_close 0070  
                               ?_fun_work 0070                      _ADC_InterruptHandler 0030  
              ??_TMR2_SetInterruptHandler 0022                  __end_of_GOOD_WSP_VOLTAGE 04B7  
                                 __ptext1 0127                                   __ptext2 0264  
                     get_measure@measures 007B                                   __ptext3 016D  
                                 __ptext4 00E0                                   __ptext5 04BF  
                                 __ptext6 0401                                   __ptext7 04BB  
                                 __ptext8 0414                                   __ptext9 0494  
                                 _get_fun 01B0                                   _go_open 0471  
                   _OSCILLATOR_Initialize 048D                                 _T2CONbits 001C  
                ??_PIN_MANAGER_Initialize 0020                              ??i1_go_close 0070  
                                 _povorot 0094                                ??_get_jump 0024  
                              ??_go_close 0020                         __end_of_rele_tick 031F  
                    end_of_initialization 0038                                ??_fun_work 0029  
                            _get_fun_full 00E0                        __end_ofi1_go_close 03A7  
                   __end_of_get_jump_full 01B0                             _sec_tick_work 01EE  
                              _time_pow_s 0036                              _go_close_alt 04A5  
                        ??_WDT_Initialize 0020                  _TMR0_SetInterruptHandler 049A  
                       __end_of_switch_wm 016D                                 _TRISAbits 008C  
                               _TRISCbits 008E                           get_fun_full@res 0025  
                              get_fun@res 0025                             ??_get_measure 0074  
                              _switch_zum 0427      __end_of_TMR2_DefaultInterruptHandler 04C3  
            _TMR2_DefaultInterruptHandler 04C2                            ?_sec_tick_work 0070  
                          _ADC_Initialize 0485                    ?_OSCILLATOR_Initialize 0070  
                          i1_go_close_alt 04AA                             ??_go_open_alt 0020  
                     start_initialization 0027               __end_ofi1_ADC_GetConversion 03C1  
                  __end_of_ADC_Initialize 048D                       __end_of_get_measure 02CB  
                  __end_ofi1_go_close_alt 04AF             ?_TMR2_DefaultInterruptHandler 0070  
                             __pbssCOMMON 0078                                 ___latbits 0000  
                           __pcstackBANK0 0020                       __end_of_go_open_alt 04A5  
                   _TMR0_InterruptHandler 0037                                 __pnvBANK0 0037  
                  _PIN_MANAGER_Initialize 03D7                           ??_sec_tick_work 0077  
                             ?_switch_zum 0070                                 beep@delay 0020  
                         ?_ADC_Initialize 0070                                 beep@count 0025  
                               beep@pause 0022                           ?i1_go_close_alt 0070  
            ??_INTERRUPT_InterruptManager 0078                                  ?_get_fun 0070  
                                ?_go_open 0070                         sec_tick_work@iled 007A  
                                ?_povorot 0070                         ??_TMR0_Initialize 0022  
                       get_jump_full@flag 0027                                  _LATAbits 010C  
                                _LATCbits 010E                                 _rele_tick 02F6  
                           _TMR2_CallBack 0457                                  _PIE1bits 0091  
                             _get_measure 0299                ??_TMR0_SetInterruptHandler 0022  
                                _PIR1bits 0011                                  _TMR0_ISR 0447  
                                _TMR2_ISR 03EC                             _ROTATION_TIME 04AF  
                              _ADCON0bits 009D                                  _WPUAbits 020C  
                                _WPUCbits 020E            ??_TMR2_DefaultInterruptHandler 0070  
                             _go_open_alt 04A0                 ?_TMR2_SetInterruptHandler 0020  
                               _switch_wm 0127                         ??_TMR2_Initialize 0022  
                          ?_TMR2_CallBack 0070                                ?_rele_tick 0070  
                           ??_toggle_tone 0070                         _ADC_GetConversion 0367  
                 ??_OSCILLATOR_Initialize 0020                        ?_ADC_GetConversion 0020  
                           ??_start_alarm 0072                                _ANSELAbits 018C  
                              _ANSELCbits 018E                       ??_ADC_GetConversion 0022  
                           ??_start_setup 0028                                ?_switch_wm 0070  
                                __ptext10 03C1                                  __ptext11 049A  
                                __ptext20 04A0                                  __ptext12 03D7  
                                __ptext21 0471                                  __ptext13 048D  
                                __ptext30 01EE                                  __ptext22 04A5  
                                __ptext14 0485                                  __ptext31 047B  
                                __ptext23 0345                                  __ptext15 0094  
                                __ptext40 0464                                  __ptext32 02F6  
                                __ptext24 02CB                                  __ptext16 022A  
                                __ptext33 0299                                  __ptext25 0427  
                                __ptext17 01B0                                  __ptext34 03A7  
                                __ptext18 0367                                  __ptext35 0437  
                                __ptext27 03EC                                  __ptext19 003B  
                                __ptext36 04AA                                  __ptext28 0457  
                                __ptext37 0387                                  __ptext29 04C2  
                                __ptext38 0447                                  __ptext39 04C3  
                           ?i1_switch_zum 0070                                  beep@time 0024  
                                _get_jump 022A                                  _go_close 0345  
                         _BAD_WSP_VOLTAGE 04B7                                  _fun_work 003B  
    __end_of_TMR0_DefaultInterruptHandler 04C4              _TMR0_DefaultInterruptHandler 04C3  
               __end_of_ADC_GetConversion 0387                                  int$flags 007E  
                       ??_TMR2_StartTimer 0020                       __end_of_toggle_tone 0485  
      __end_of_INTERRUPT_InterruptManager 0026                _INTERRUPT_InterruptManager 0004  
                    get_jump@jump_counter 0033                                _INTCONbits 000B  
                          ??i1_switch_zum 0070                       __end_of_start_alarm 0447  
                     __end_of_start_setup 0299                                  intlevel1 0000  
                         ??_TMR2_CallBack 0078                   ?_PIN_MANAGER_Initialize 0070  
                             ??_rele_tick 0070                          ??_ADC_Initialize 0020  
           ?_TMR0_DefaultInterruptHandler 0070                          ??i1_go_close_alt 0070  
                            ??_switch_zum 0020                             _get_jump_full 016D  
                           __pstringtext1 04AF                             __pstringtext2 04B3  
                           __pstringtext3 04B7                                _OPTION_REG 0095  
                   TMR2_ISR@CountCallBack 0078                           _TMR0_Initialize 03C1  
                 __end_of_BAD_WSP_VOLTAGE 04BB                               ??_switch_wm 0029  
                      __end_of_switch_zum 0437            __end_of_PIN_MANAGER_Initialize 03EC  
                   _TMR2_InterruptHandler 0039                               _toggle_tone 047B  
                           ?_get_fun_full 0070                              ?_get_measure 0070  
