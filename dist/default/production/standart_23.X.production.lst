

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri May 13 14:12:40 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1823
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    59                           	dabs	1,0x7E,2
    60  0000                     
    61                           ; Version 2.40
    62                           ; Generated 17/11/2021 GMT
    63                           ; 
    64                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution. Publication is not required when
    78                           ;        this file is used in an embedded application.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC16F1823 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     	;# 
    97  0001                     	;# 
    98  0002                     	;# 
    99  0003                     	;# 
   100  0004                     	;# 
   101  0005                     	;# 
   102  0006                     	;# 
   103  0007                     	;# 
   104  0008                     	;# 
   105  0009                     	;# 
   106  000A                     	;# 
   107  000B                     	;# 
   108  000C                     	;# 
   109  000E                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  008C                     	;# 
   124  008E                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  010C                     	;# 
   139  010E                     	;# 
   140  0111                     	;# 
   141  0112                     	;# 
   142  0113                     	;# 
   143  0114                     	;# 
   144  0115                     	;# 
   145  0116                     	;# 
   146  0117                     	;# 
   147  0118                     	;# 
   148  0119                     	;# 
   149  011A                     	;# 
   150  011B                     	;# 
   151  011D                     	;# 
   152  011D                     	;# 
   153  018C                     	;# 
   154  018E                     	;# 
   155  0191                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  0193                     	;# 
   159  0193                     	;# 
   160  0193                     	;# 
   161  0194                     	;# 
   162  0195                     	;# 
   163  0196                     	;# 
   164  0199                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019C                     	;# 
   171  019C                     	;# 
   172  019D                     	;# 
   173  019E                     	;# 
   174  019F                     	;# 
   175  020C                     	;# 
   176  020E                     	;# 
   177  0211                     	;# 
   178  0211                     	;# 
   179  0212                     	;# 
   180  0212                     	;# 
   181  0213                     	;# 
   182  0213                     	;# 
   183  0214                     	;# 
   184  0214                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0216                     	;# 
   189  0216                     	;# 
   190  0217                     	;# 
   191  0217                     	;# 
   192  0291                     	;# 
   193  0291                     	;# 
   194  0292                     	;# 
   195  0293                     	;# 
   196  0294                     	;# 
   197  0295                     	;# 
   198  0295                     	;# 
   199  0296                     	;# 
   200  0391                     	;# 
   201  0392                     	;# 
   202  0393                     	;# 
   203  039A                     	;# 
   204  039C                     	;# 
   205  039D                     	;# 
   206  039E                     	;# 
   207  039F                     	;# 
   208  0FE4                     	;# 
   209  0FE5                     	;# 
   210  0FE6                     	;# 
   211  0FE7                     	;# 
   212  0FE8                     	;# 
   213  0FE9                     	;# 
   214  0FEA                     	;# 
   215  0FEB                     	;# 
   216  0FED                     	;# 
   217  0FEE                     	;# 
   218  0FEF                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000E                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  008C                     	;# 
   247  008E                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0095                     	;# 
   251  0096                     	;# 
   252  0097                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009A                     	;# 
   256  009B                     	;# 
   257  009B                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009E                     	;# 
   261  010C                     	;# 
   262  010E                     	;# 
   263  0111                     	;# 
   264  0112                     	;# 
   265  0113                     	;# 
   266  0114                     	;# 
   267  0115                     	;# 
   268  0116                     	;# 
   269  0117                     	;# 
   270  0118                     	;# 
   271  0119                     	;# 
   272  011A                     	;# 
   273  011B                     	;# 
   274  011D                     	;# 
   275  011D                     	;# 
   276  018C                     	;# 
   277  018E                     	;# 
   278  0191                     	;# 
   279  0191                     	;# 
   280  0192                     	;# 
   281  0193                     	;# 
   282  0193                     	;# 
   283  0193                     	;# 
   284  0194                     	;# 
   285  0195                     	;# 
   286  0196                     	;# 
   287  0199                     	;# 
   288  019A                     	;# 
   289  019B                     	;# 
   290  019B                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019C                     	;# 
   294  019C                     	;# 
   295  019D                     	;# 
   296  019E                     	;# 
   297  019F                     	;# 
   298  020C                     	;# 
   299  020E                     	;# 
   300  0211                     	;# 
   301  0211                     	;# 
   302  0212                     	;# 
   303  0212                     	;# 
   304  0213                     	;# 
   305  0213                     	;# 
   306  0214                     	;# 
   307  0214                     	;# 
   308  0215                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0216                     	;# 
   312  0216                     	;# 
   313  0217                     	;# 
   314  0217                     	;# 
   315  0291                     	;# 
   316  0291                     	;# 
   317  0292                     	;# 
   318  0293                     	;# 
   319  0294                     	;# 
   320  0295                     	;# 
   321  0295                     	;# 
   322  0296                     	;# 
   323  0391                     	;# 
   324  0392                     	;# 
   325  0393                     	;# 
   326  039A                     	;# 
   327  039C                     	;# 
   328  039D                     	;# 
   329  039E                     	;# 
   330  039F                     	;# 
   331  0FE4                     	;# 
   332  0FE5                     	;# 
   333  0FE6                     	;# 
   334  0FE7                     	;# 
   335  0FE8                     	;# 
   336  0FE9                     	;# 
   337  0FEA                     	;# 
   338  0FEB                     	;# 
   339  0FED                     	;# 
   340  0FEE                     	;# 
   341  0FEF                     	;# 
   342  0000                     	;# 
   343  0001                     	;# 
   344  0002                     	;# 
   345  0003                     	;# 
   346  0004                     	;# 
   347  0005                     	;# 
   348  0006                     	;# 
   349  0007                     	;# 
   350  0008                     	;# 
   351  0009                     	;# 
   352  000A                     	;# 
   353  000B                     	;# 
   354  000C                     	;# 
   355  000E                     	;# 
   356  0011                     	;# 
   357  0012                     	;# 
   358  0015                     	;# 
   359  0016                     	;# 
   360  0016                     	;# 
   361  0017                     	;# 
   362  0018                     	;# 
   363  0019                     	;# 
   364  001A                     	;# 
   365  001B                     	;# 
   366  001C                     	;# 
   367  001E                     	;# 
   368  001F                     	;# 
   369  008C                     	;# 
   370  008E                     	;# 
   371  0091                     	;# 
   372  0092                     	;# 
   373  0095                     	;# 
   374  0096                     	;# 
   375  0097                     	;# 
   376  0098                     	;# 
   377  0099                     	;# 
   378  009A                     	;# 
   379  009B                     	;# 
   380  009B                     	;# 
   381  009C                     	;# 
   382  009D                     	;# 
   383  009E                     	;# 
   384  010C                     	;# 
   385  010E                     	;# 
   386  0111                     	;# 
   387  0112                     	;# 
   388  0113                     	;# 
   389  0114                     	;# 
   390  0115                     	;# 
   391  0116                     	;# 
   392  0117                     	;# 
   393  0118                     	;# 
   394  0119                     	;# 
   395  011A                     	;# 
   396  011B                     	;# 
   397  011D                     	;# 
   398  011D                     	;# 
   399  018C                     	;# 
   400  018E                     	;# 
   401  0191                     	;# 
   402  0191                     	;# 
   403  0192                     	;# 
   404  0193                     	;# 
   405  0193                     	;# 
   406  0193                     	;# 
   407  0194                     	;# 
   408  0195                     	;# 
   409  0196                     	;# 
   410  0199                     	;# 
   411  019A                     	;# 
   412  019B                     	;# 
   413  019B                     	;# 
   414  019B                     	;# 
   415  019B                     	;# 
   416  019C                     	;# 
   417  019C                     	;# 
   418  019D                     	;# 
   419  019E                     	;# 
   420  019F                     	;# 
   421  020C                     	;# 
   422  020E                     	;# 
   423  0211                     	;# 
   424  0211                     	;# 
   425  0212                     	;# 
   426  0212                     	;# 
   427  0213                     	;# 
   428  0213                     	;# 
   429  0214                     	;# 
   430  0214                     	;# 
   431  0215                     	;# 
   432  0215                     	;# 
   433  0215                     	;# 
   434  0216                     	;# 
   435  0216                     	;# 
   436  0217                     	;# 
   437  0217                     	;# 
   438  0291                     	;# 
   439  0291                     	;# 
   440  0292                     	;# 
   441  0293                     	;# 
   442  0294                     	;# 
   443  0295                     	;# 
   444  0295                     	;# 
   445  0296                     	;# 
   446  0391                     	;# 
   447  0392                     	;# 
   448  0393                     	;# 
   449  039A                     	;# 
   450  039C                     	;# 
   451  039D                     	;# 
   452  039E                     	;# 
   453  039F                     	;# 
   454  0FE4                     	;# 
   455  0FE5                     	;# 
   456  0FE6                     	;# 
   457  0FE7                     	;# 
   458  0FE8                     	;# 
   459  0FE9                     	;# 
   460  0FEA                     	;# 
   461  0FEB                     	;# 
   462  0FED                     	;# 
   463  0FEE                     	;# 
   464  0FEF                     	;# 
   465  0000                     	;# 
   466  0001                     	;# 
   467  0002                     	;# 
   468  0003                     	;# 
   469  0004                     	;# 
   470  0005                     	;# 
   471  0006                     	;# 
   472  0007                     	;# 
   473  0008                     	;# 
   474  0009                     	;# 
   475  000A                     	;# 
   476  000B                     	;# 
   477  000C                     	;# 
   478  000E                     	;# 
   479  0011                     	;# 
   480  0012                     	;# 
   481  0015                     	;# 
   482  0016                     	;# 
   483  0016                     	;# 
   484  0017                     	;# 
   485  0018                     	;# 
   486  0019                     	;# 
   487  001A                     	;# 
   488  001B                     	;# 
   489  001C                     	;# 
   490  001E                     	;# 
   491  001F                     	;# 
   492  008C                     	;# 
   493  008E                     	;# 
   494  0091                     	;# 
   495  0092                     	;# 
   496  0095                     	;# 
   497  0096                     	;# 
   498  0097                     	;# 
   499  0098                     	;# 
   500  0099                     	;# 
   501  009A                     	;# 
   502  009B                     	;# 
   503  009B                     	;# 
   504  009C                     	;# 
   505  009D                     	;# 
   506  009E                     	;# 
   507  010C                     	;# 
   508  010E                     	;# 
   509  0111                     	;# 
   510  0112                     	;# 
   511  0113                     	;# 
   512  0114                     	;# 
   513  0115                     	;# 
   514  0116                     	;# 
   515  0117                     	;# 
   516  0118                     	;# 
   517  0119                     	;# 
   518  011A                     	;# 
   519  011B                     	;# 
   520  011D                     	;# 
   521  011D                     	;# 
   522  018C                     	;# 
   523  018E                     	;# 
   524  0191                     	;# 
   525  0191                     	;# 
   526  0192                     	;# 
   527  0193                     	;# 
   528  0193                     	;# 
   529  0193                     	;# 
   530  0194                     	;# 
   531  0195                     	;# 
   532  0196                     	;# 
   533  0199                     	;# 
   534  019A                     	;# 
   535  019B                     	;# 
   536  019B                     	;# 
   537  019B                     	;# 
   538  019B                     	;# 
   539  019C                     	;# 
   540  019C                     	;# 
   541  019D                     	;# 
   542  019E                     	;# 
   543  019F                     	;# 
   544  020C                     	;# 
   545  020E                     	;# 
   546  0211                     	;# 
   547  0211                     	;# 
   548  0212                     	;# 
   549  0212                     	;# 
   550  0213                     	;# 
   551  0213                     	;# 
   552  0214                     	;# 
   553  0214                     	;# 
   554  0215                     	;# 
   555  0215                     	;# 
   556  0215                     	;# 
   557  0216                     	;# 
   558  0216                     	;# 
   559  0217                     	;# 
   560  0217                     	;# 
   561  0291                     	;# 
   562  0291                     	;# 
   563  0292                     	;# 
   564  0293                     	;# 
   565  0294                     	;# 
   566  0295                     	;# 
   567  0295                     	;# 
   568  0296                     	;# 
   569  0391                     	;# 
   570  0392                     	;# 
   571  0393                     	;# 
   572  039A                     	;# 
   573  039C                     	;# 
   574  039D                     	;# 
   575  039E                     	;# 
   576  039F                     	;# 
   577  0FE4                     	;# 
   578  0FE5                     	;# 
   579  0FE6                     	;# 
   580  0FE7                     	;# 
   581  0FE8                     	;# 
   582  0FE9                     	;# 
   583  0FEA                     	;# 
   584  0FEB                     	;# 
   585  0FED                     	;# 
   586  0FEE                     	;# 
   587  0FEF                     	;# 
   588  0000                     	;# 
   589  0001                     	;# 
   590  0002                     	;# 
   591  0003                     	;# 
   592  0004                     	;# 
   593  0005                     	;# 
   594  0006                     	;# 
   595  0007                     	;# 
   596  0008                     	;# 
   597  0009                     	;# 
   598  000A                     	;# 
   599  000B                     	;# 
   600  000C                     	;# 
   601  000E                     	;# 
   602  0011                     	;# 
   603  0012                     	;# 
   604  0015                     	;# 
   605  0016                     	;# 
   606  0016                     	;# 
   607  0017                     	;# 
   608  0018                     	;# 
   609  0019                     	;# 
   610  001A                     	;# 
   611  001B                     	;# 
   612  001C                     	;# 
   613  001E                     	;# 
   614  001F                     	;# 
   615  008C                     	;# 
   616  008E                     	;# 
   617  0091                     	;# 
   618  0092                     	;# 
   619  0095                     	;# 
   620  0096                     	;# 
   621  0097                     	;# 
   622  0098                     	;# 
   623  0099                     	;# 
   624  009A                     	;# 
   625  009B                     	;# 
   626  009B                     	;# 
   627  009C                     	;# 
   628  009D                     	;# 
   629  009E                     	;# 
   630  010C                     	;# 
   631  010E                     	;# 
   632  0111                     	;# 
   633  0112                     	;# 
   634  0113                     	;# 
   635  0114                     	;# 
   636  0115                     	;# 
   637  0116                     	;# 
   638  0117                     	;# 
   639  0118                     	;# 
   640  0119                     	;# 
   641  011A                     	;# 
   642  011B                     	;# 
   643  011D                     	;# 
   644  011D                     	;# 
   645  018C                     	;# 
   646  018E                     	;# 
   647  0191                     	;# 
   648  0191                     	;# 
   649  0192                     	;# 
   650  0193                     	;# 
   651  0193                     	;# 
   652  0193                     	;# 
   653  0194                     	;# 
   654  0195                     	;# 
   655  0196                     	;# 
   656  0199                     	;# 
   657  019A                     	;# 
   658  019B                     	;# 
   659  019B                     	;# 
   660  019B                     	;# 
   661  019B                     	;# 
   662  019C                     	;# 
   663  019C                     	;# 
   664  019D                     	;# 
   665  019E                     	;# 
   666  019F                     	;# 
   667  020C                     	;# 
   668  020E                     	;# 
   669  0211                     	;# 
   670  0211                     	;# 
   671  0212                     	;# 
   672  0212                     	;# 
   673  0213                     	;# 
   674  0213                     	;# 
   675  0214                     	;# 
   676  0214                     	;# 
   677  0215                     	;# 
   678  0215                     	;# 
   679  0215                     	;# 
   680  0216                     	;# 
   681  0216                     	;# 
   682  0217                     	;# 
   683  0217                     	;# 
   684  0291                     	;# 
   685  0291                     	;# 
   686  0292                     	;# 
   687  0293                     	;# 
   688  0294                     	;# 
   689  0295                     	;# 
   690  0295                     	;# 
   691  0296                     	;# 
   692  0391                     	;# 
   693  0392                     	;# 
   694  0393                     	;# 
   695  039A                     	;# 
   696  039C                     	;# 
   697  039D                     	;# 
   698  039E                     	;# 
   699  039F                     	;# 
   700  0FE4                     	;# 
   701  0FE5                     	;# 
   702  0FE6                     	;# 
   703  0FE7                     	;# 
   704  0FE8                     	;# 
   705  0FE9                     	;# 
   706  0FEA                     	;# 
   707  0FEB                     	;# 
   708  0FED                     	;# 
   709  0FEE                     	;# 
   710  0FEF                     	;# 
   711  0000                     	;# 
   712  0001                     	;# 
   713  0002                     	;# 
   714  0003                     	;# 
   715  0004                     	;# 
   716  0005                     	;# 
   717  0006                     	;# 
   718  0007                     	;# 
   719  0008                     	;# 
   720  0009                     	;# 
   721  000A                     	;# 
   722  000B                     	;# 
   723  000C                     	;# 
   724  000E                     	;# 
   725  0011                     	;# 
   726  0012                     	;# 
   727  0015                     	;# 
   728  0016                     	;# 
   729  0016                     	;# 
   730  0017                     	;# 
   731  0018                     	;# 
   732  0019                     	;# 
   733  001A                     	;# 
   734  001B                     	;# 
   735  001C                     	;# 
   736  001E                     	;# 
   737  001F                     	;# 
   738  008C                     	;# 
   739  008E                     	;# 
   740  0091                     	;# 
   741  0092                     	;# 
   742  0095                     	;# 
   743  0096                     	;# 
   744  0097                     	;# 
   745  0098                     	;# 
   746  0099                     	;# 
   747  009A                     	;# 
   748  009B                     	;# 
   749  009B                     	;# 
   750  009C                     	;# 
   751  009D                     	;# 
   752  009E                     	;# 
   753  010C                     	;# 
   754  010E                     	;# 
   755  0111                     	;# 
   756  0112                     	;# 
   757  0113                     	;# 
   758  0114                     	;# 
   759  0115                     	;# 
   760  0116                     	;# 
   761  0117                     	;# 
   762  0118                     	;# 
   763  0119                     	;# 
   764  011A                     	;# 
   765  011B                     	;# 
   766  011D                     	;# 
   767  011D                     	;# 
   768  018C                     	;# 
   769  018E                     	;# 
   770  0191                     	;# 
   771  0191                     	;# 
   772  0192                     	;# 
   773  0193                     	;# 
   774  0193                     	;# 
   775  0193                     	;# 
   776  0194                     	;# 
   777  0195                     	;# 
   778  0196                     	;# 
   779  0199                     	;# 
   780  019A                     	;# 
   781  019B                     	;# 
   782  019B                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019C                     	;# 
   786  019C                     	;# 
   787  019D                     	;# 
   788  019E                     	;# 
   789  019F                     	;# 
   790  020C                     	;# 
   791  020E                     	;# 
   792  0211                     	;# 
   793  0211                     	;# 
   794  0212                     	;# 
   795  0212                     	;# 
   796  0213                     	;# 
   797  0213                     	;# 
   798  0214                     	;# 
   799  0214                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0216                     	;# 
   804  0216                     	;# 
   805  0217                     	;# 
   806  0217                     	;# 
   807  0291                     	;# 
   808  0291                     	;# 
   809  0292                     	;# 
   810  0293                     	;# 
   811  0294                     	;# 
   812  0295                     	;# 
   813  0295                     	;# 
   814  0296                     	;# 
   815  0391                     	;# 
   816  0392                     	;# 
   817  0393                     	;# 
   818  039A                     	;# 
   819  039C                     	;# 
   820  039D                     	;# 
   821  039E                     	;# 
   822  039F                     	;# 
   823  0FE4                     	;# 
   824  0FE5                     	;# 
   825  0FE6                     	;# 
   826  0FE7                     	;# 
   827  0FE8                     	;# 
   828  0FE9                     	;# 
   829  0FEA                     	;# 
   830  0FEB                     	;# 
   831  0FED                     	;# 
   832  0FEE                     	;# 
   833  0FEF                     	;# 
   834  0000                     	;# 
   835  0001                     	;# 
   836  0002                     	;# 
   837  0003                     	;# 
   838  0004                     	;# 
   839  0005                     	;# 
   840  0006                     	;# 
   841  0007                     	;# 
   842  0008                     	;# 
   843  0009                     	;# 
   844  000A                     	;# 
   845  000B                     	;# 
   846  000C                     	;# 
   847  000E                     	;# 
   848  0011                     	;# 
   849  0012                     	;# 
   850  0015                     	;# 
   851  0016                     	;# 
   852  0016                     	;# 
   853  0017                     	;# 
   854  0018                     	;# 
   855  0019                     	;# 
   856  001A                     	;# 
   857  001B                     	;# 
   858  001C                     	;# 
   859  001E                     	;# 
   860  001F                     	;# 
   861  008C                     	;# 
   862  008E                     	;# 
   863  0091                     	;# 
   864  0092                     	;# 
   865  0095                     	;# 
   866  0096                     	;# 
   867  0097                     	;# 
   868  0098                     	;# 
   869  0099                     	;# 
   870  009A                     	;# 
   871  009B                     	;# 
   872  009B                     	;# 
   873  009C                     	;# 
   874  009D                     	;# 
   875  009E                     	;# 
   876  010C                     	;# 
   877  010E                     	;# 
   878  0111                     	;# 
   879  0112                     	;# 
   880  0113                     	;# 
   881  0114                     	;# 
   882  0115                     	;# 
   883  0116                     	;# 
   884  0117                     	;# 
   885  0118                     	;# 
   886  0119                     	;# 
   887  011A                     	;# 
   888  011B                     	;# 
   889  011D                     	;# 
   890  011D                     	;# 
   891  018C                     	;# 
   892  018E                     	;# 
   893  0191                     	;# 
   894  0191                     	;# 
   895  0192                     	;# 
   896  0193                     	;# 
   897  0193                     	;# 
   898  0193                     	;# 
   899  0194                     	;# 
   900  0195                     	;# 
   901  0196                     	;# 
   902  0199                     	;# 
   903  019A                     	;# 
   904  019B                     	;# 
   905  019B                     	;# 
   906  019B                     	;# 
   907  019B                     	;# 
   908  019C                     	;# 
   909  019C                     	;# 
   910  019D                     	;# 
   911  019E                     	;# 
   912  019F                     	;# 
   913  020C                     	;# 
   914  020E                     	;# 
   915  0211                     	;# 
   916  0211                     	;# 
   917  0212                     	;# 
   918  0212                     	;# 
   919  0213                     	;# 
   920  0213                     	;# 
   921  0214                     	;# 
   922  0214                     	;# 
   923  0215                     	;# 
   924  0215                     	;# 
   925  0215                     	;# 
   926  0216                     	;# 
   927  0216                     	;# 
   928  0217                     	;# 
   929  0217                     	;# 
   930  0291                     	;# 
   931  0291                     	;# 
   932  0292                     	;# 
   933  0293                     	;# 
   934  0294                     	;# 
   935  0295                     	;# 
   936  0295                     	;# 
   937  0296                     	;# 
   938  0391                     	;# 
   939  0392                     	;# 
   940  0393                     	;# 
   941  039A                     	;# 
   942  039C                     	;# 
   943  039D                     	;# 
   944  039E                     	;# 
   945  039F                     	;# 
   946  0FE4                     	;# 
   947  0FE5                     	;# 
   948  0FE6                     	;# 
   949  0FE7                     	;# 
   950  0FE8                     	;# 
   951  0FE9                     	;# 
   952  0FEA                     	;# 
   953  0FEB                     	;# 
   954  0FED                     	;# 
   955  0FEE                     	;# 
   956  0FEF                     	;# 
   957  0000                     	;# 
   958  0001                     	;# 
   959  0002                     	;# 
   960  0003                     	;# 
   961  0004                     	;# 
   962  0005                     	;# 
   963  0006                     	;# 
   964  0007                     	;# 
   965  0008                     	;# 
   966  0009                     	;# 
   967  000A                     	;# 
   968  000B                     	;# 
   969  000C                     	;# 
   970  000E                     	;# 
   971  0011                     	;# 
   972  0012                     	;# 
   973  0015                     	;# 
   974  0016                     	;# 
   975  0016                     	;# 
   976  0017                     	;# 
   977  0018                     	;# 
   978  0019                     	;# 
   979  001A                     	;# 
   980  001B                     	;# 
   981  001C                     	;# 
   982  001E                     	;# 
   983  001F                     	;# 
   984  008C                     	;# 
   985  008E                     	;# 
   986  0091                     	;# 
   987  0092                     	;# 
   988  0095                     	;# 
   989  0096                     	;# 
   990  0097                     	;# 
   991  0098                     	;# 
   992  0099                     	;# 
   993  009A                     	;# 
   994  009B                     	;# 
   995  009B                     	;# 
   996  009C                     	;# 
   997  009D                     	;# 
   998  009E                     	;# 
   999  010C                     	;# 
  1000  010E                     	;# 
  1001  0111                     	;# 
  1002  0112                     	;# 
  1003  0113                     	;# 
  1004  0114                     	;# 
  1005  0115                     	;# 
  1006  0116                     	;# 
  1007  0117                     	;# 
  1008  0118                     	;# 
  1009  0119                     	;# 
  1010  011A                     	;# 
  1011  011B                     	;# 
  1012  011D                     	;# 
  1013  011D                     	;# 
  1014  018C                     	;# 
  1015  018E                     	;# 
  1016  0191                     	;# 
  1017  0191                     	;# 
  1018  0192                     	;# 
  1019  0193                     	;# 
  1020  0193                     	;# 
  1021  0193                     	;# 
  1022  0194                     	;# 
  1023  0195                     	;# 
  1024  0196                     	;# 
  1025  0199                     	;# 
  1026  019A                     	;# 
  1027  019B                     	;# 
  1028  019B                     	;# 
  1029  019B                     	;# 
  1030  019B                     	;# 
  1031  019C                     	;# 
  1032  019C                     	;# 
  1033  019D                     	;# 
  1034  019E                     	;# 
  1035  019F                     	;# 
  1036  020C                     	;# 
  1037  020E                     	;# 
  1038  0211                     	;# 
  1039  0211                     	;# 
  1040  0212                     	;# 
  1041  0212                     	;# 
  1042  0213                     	;# 
  1043  0213                     	;# 
  1044  0214                     	;# 
  1045  0214                     	;# 
  1046  0215                     	;# 
  1047  0215                     	;# 
  1048  0215                     	;# 
  1049  0216                     	;# 
  1050  0216                     	;# 
  1051  0217                     	;# 
  1052  0217                     	;# 
  1053  0291                     	;# 
  1054  0291                     	;# 
  1055  0292                     	;# 
  1056  0293                     	;# 
  1057  0294                     	;# 
  1058  0295                     	;# 
  1059  0295                     	;# 
  1060  0296                     	;# 
  1061  0391                     	;# 
  1062  0392                     	;# 
  1063  0393                     	;# 
  1064  039A                     	;# 
  1065  039C                     	;# 
  1066  039D                     	;# 
  1067  039E                     	;# 
  1068  039F                     	;# 
  1069  0FE4                     	;# 
  1070  0FE5                     	;# 
  1071  0FE6                     	;# 
  1072  0FE7                     	;# 
  1073  0FE8                     	;# 
  1074  0FE9                     	;# 
  1075  0FEA                     	;# 
  1076  0FEB                     	;# 
  1077  0FED                     	;# 
  1078  0FEE                     	;# 
  1079  0FEF                     	;# 
  1080  0000                     	;# 
  1081  0001                     	;# 
  1082  0002                     	;# 
  1083  0003                     	;# 
  1084  0004                     	;# 
  1085  0005                     	;# 
  1086  0006                     	;# 
  1087  0007                     	;# 
  1088  0008                     	;# 
  1089  0009                     	;# 
  1090  000A                     	;# 
  1091  000B                     	;# 
  1092  000C                     	;# 
  1093  000E                     	;# 
  1094  0011                     	;# 
  1095  0012                     	;# 
  1096  0015                     	;# 
  1097  0016                     	;# 
  1098  0016                     	;# 
  1099  0017                     	;# 
  1100  0018                     	;# 
  1101  0019                     	;# 
  1102  001A                     	;# 
  1103  001B                     	;# 
  1104  001C                     	;# 
  1105  001E                     	;# 
  1106  001F                     	;# 
  1107  008C                     	;# 
  1108  008E                     	;# 
  1109  0091                     	;# 
  1110  0092                     	;# 
  1111  0095                     	;# 
  1112  0096                     	;# 
  1113  0097                     	;# 
  1114  0098                     	;# 
  1115  0099                     	;# 
  1116  009A                     	;# 
  1117  009B                     	;# 
  1118  009B                     	;# 
  1119  009C                     	;# 
  1120  009D                     	;# 
  1121  009E                     	;# 
  1122  010C                     	;# 
  1123  010E                     	;# 
  1124  0111                     	;# 
  1125  0112                     	;# 
  1126  0113                     	;# 
  1127  0114                     	;# 
  1128  0115                     	;# 
  1129  0116                     	;# 
  1130  0117                     	;# 
  1131  0118                     	;# 
  1132  0119                     	;# 
  1133  011A                     	;# 
  1134  011B                     	;# 
  1135  011D                     	;# 
  1136  011D                     	;# 
  1137  018C                     	;# 
  1138  018E                     	;# 
  1139  0191                     	;# 
  1140  0191                     	;# 
  1141  0192                     	;# 
  1142  0193                     	;# 
  1143  0193                     	;# 
  1144  0193                     	;# 
  1145  0194                     	;# 
  1146  0195                     	;# 
  1147  0196                     	;# 
  1148  0199                     	;# 
  1149  019A                     	;# 
  1150  019B                     	;# 
  1151  019B                     	;# 
  1152  019B                     	;# 
  1153  019B                     	;# 
  1154  019C                     	;# 
  1155  019C                     	;# 
  1156  019D                     	;# 
  1157  019E                     	;# 
  1158  019F                     	;# 
  1159  020C                     	;# 
  1160  020E                     	;# 
  1161  0211                     	;# 
  1162  0211                     	;# 
  1163  0212                     	;# 
  1164  0212                     	;# 
  1165  0213                     	;# 
  1166  0213                     	;# 
  1167  0214                     	;# 
  1168  0214                     	;# 
  1169  0215                     	;# 
  1170  0215                     	;# 
  1171  0215                     	;# 
  1172  0216                     	;# 
  1173  0216                     	;# 
  1174  0217                     	;# 
  1175  0217                     	;# 
  1176  0291                     	;# 
  1177  0291                     	;# 
  1178  0292                     	;# 
  1179  0293                     	;# 
  1180  0294                     	;# 
  1181  0295                     	;# 
  1182  0295                     	;# 
  1183  0296                     	;# 
  1184  0391                     	;# 
  1185  0392                     	;# 
  1186  0393                     	;# 
  1187  039A                     	;# 
  1188  039C                     	;# 
  1189  039D                     	;# 
  1190  039E                     	;# 
  1191  039F                     	;# 
  1192  0FE4                     	;# 
  1193  0FE5                     	;# 
  1194  0FE6                     	;# 
  1195  0FE7                     	;# 
  1196  0FE8                     	;# 
  1197  0FE9                     	;# 
  1198  0FEA                     	;# 
  1199  0FEB                     	;# 
  1200  0FED                     	;# 
  1201  0FEE                     	;# 
  1202  0FEF                     	;# 
  1203                           
  1204                           	psect	stringtext1
  1205  041D                     __pstringtext1:
  1206  041D                     _GOOD_WSP_VOLTAGE:
  1207  041D  348E               	retlw	142
  1208  041E  3400               	retlw	0
  1209  041F                     __end_of_GOOD_WSP_VOLTAGE:
  1210                           
  1211                           	psect	stringtext2
  1212  041F                     __pstringtext2:
  1213  041F                     _BAD_WSP_VOLTAGE:
  1214  041F  3480               	retlw	128
  1215  0420  3400               	retlw	0
  1216  0421                     __end_of_BAD_WSP_VOLTAGE:
  1217                           
  1218                           	psect	stringtext3
  1219  0421                     __pstringtext3:
  1220  0421                     _UP_RESISTANSE:
  1221  0421  3420               	retlw	32
  1222  0422  344E               	retlw	78
  1223  0423                     __end_of_UP_RESISTANSE:
  1224                           
  1225                           	psect	stringtext4
  1226  0423                     __pstringtext4:
  1227  0423                     _HIGH_WATER_RESISTANSE:
  1228  0423  34A8               	retlw	168
  1229  0424  3461               	retlw	97
  1230  0425                     __end_of_HIGH_WATER_RESISTANSE:
  1231                           
  1232                           	psect	stringtext5
  1233  0425                     __pstringtext5:
  1234  0425                     _LOW_WATER_RESISTANSE:
  1235  0425  3420               	retlw	32
  1236  0426  344E               	retlw	78
  1237  0427                     __end_of_LOW_WATER_RESISTANSE:
  1238                           
  1239                           	psect	nvBANK0
  1240  0041                     __pnvBANK0:
  1241  0041                     _TMR0_InterruptHandler:
  1242  0041                     	ds	2
  1243  0043                     _TMR2_InterruptHandler:
  1244  0043                     	ds	2
  1245  000C                     _PORTAbits	set	12
  1246  000E                     _PORTCbits	set	14
  1247  0015                     _TMR0	set	21
  1248  001C                     _T2CONbits	set	28
  1249  001C                     _T2CON	set	28
  1250  001A                     _TMR2	set	26
  1251  001B                     _PR2	set	27
  1252  0011                     _PIR1bits	set	17
  1253  000B                     _INTCONbits	set	11
  1254  005F                     _GIE	set	95
  1255  008C                     _TRISAbits	set	140
  1256  008E                     _TRISCbits	set	142
  1257  0095                     _OPTION_REG	set	149
  1258  0091                     _PIE1bits	set	145
  1259  0095                     _OPTION_REGbits	set	149
  1260  008E                     _TRISC	set	142
  1261  008C                     _TRISA	set	140
  1262  009D                     _ADCON0bits	set	157
  1263  009D                     _ADCON0	set	157
  1264  009C                     _ADRESH	set	156
  1265  009B                     _ADRESL	set	155
  1266  009E                     _ADCON1	set	158
  1267  0097                     _WDTCON	set	151
  1268  0098                     _OSCTUNE	set	152
  1269  0099                     _OSCCON	set	153
  1270  010E                     _LATCbits	set	270
  1271  010C                     _LATAbits	set	268
  1272  011D                     _APFCON	set	285
  1273  010E                     _LATC	set	270
  1274  010C                     _LATA	set	268
  1275  0116                     _BORCON	set	278
  1276  0191                     _EEADR	set	401
  1277  0196                     _EECON2	set	406
  1278  0193                     _EEDATA	set	403
  1279  018C                     _ANSELAbits	set	396
  1280  018E                     _ANSELCbits	set	398
  1281  018C                     _ANSELA	set	396
  1282  018E                     _ANSELC	set	398
  1283  0CA8                     _RD	set	3240
  1284  0CAA                     _WREN	set	3242
  1285  0CA9                     _WR	set	3241
  1286  020E                     _WPUCbits	set	526
  1287  020C                     _WPUAbits	set	524
  1288  020E                     _WPUC	set	526
  1289  020C                     _WPUA	set	524
  1290                           
  1291                           	psect	cinit
  1292  0027                     start_initialization:	
  1293                           ; #config settings
  1294                           
  1295  0027                     __initialization:
  1296                           
  1297                           ; Clear objects allocated to COMMON
  1298  0027  01F7               	clrf	__pbssCOMMON& (0+127)
  1299  0028  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1300  0029  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1301  002A  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  1302                           
  1303                           ; Clear objects allocated to BANK0
  1304  002B  3020               	movlw	low __pbssBANK0
  1305  002C  0084               	movwf	4
  1306  002D  3000               	movlw	high __pbssBANK0
  1307  002E  0085               	movwf	5
  1308  002F  3021               	movlw	33
  1309  0030  3183  23F3  3180   	fcall	clear_ram0
  1310  0033                     end_of_initialization:	
  1311                           ;End of C runtime variable initialization code
  1312                           
  1313  0033                     __end_of__initialization:
  1314  0033  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1315  0034  0020               	movlb	0
  1316  0035  2A76               	ljmp	_main	;jump to C main() function
  1317                           
  1318                           	psect	bssCOMMON
  1319  0077                     __pbssCOMMON:
  1320  0077                     _FF:
  1321  0077                     	ds	4
  1322                           
  1323                           	psect	bssBANK0
  1324  0020                     __pbssBANK0:
  1325  0020                     _time_rotation:
  1326  0020                     	ds	3
  1327  0023                     ms_tick@tick_count:
  1328  0023                     	ds	2
  1329  0025                     _time_zummer_long:
  1330  0025                     	ds	2
  1331  0027                     _time_zummer_short:
  1332  0027                     	ds	2
  1333  0029                     _time_zummer:
  1334  0029                     	ds	2
  1335  002B                     _time_led:
  1336  002B                     	ds	2
  1337  002D                     _time_rele_gap:
  1338  002D                     	ds	2
  1339  002F                     _time_rele_control:
  1340  002F                     	ds	2
  1341  0031                     _time_rele_power:
  1342  0031                     	ds	2
  1343  0033                     _ADC_InterruptHandler:
  1344  0033                     	ds	2
  1345  0035                     sec_tick_work@iled:
  1346  0035                     	ds	1
  1347  0036                     get_jump_full@jump_counter:
  1348  0036                     	ds	1
  1349  0037                     get_jump@jump_counter:
  1350  0037                     	ds	1
  1351  0038                     get_fun_full@fun_counter:
  1352  0038                     	ds	1
  1353  0039                     get_fun@fun_counter:
  1354  0039                     	ds	1
  1355  003A                     get_measure@measures:
  1356  003A                     	ds	1
  1357  003B                     _beep_double_count:
  1358  003B                     	ds	1
  1359  003C                     _beep_long_count:
  1360  003C                     	ds	1
  1361  003D                     _beep_short_count:
  1362  003D                     	ds	1
  1363  003E                     _time_meas:
  1364  003E                     	ds	1
  1365  003F                     _FRIMWARE_VERSION_EEPROM_ADR:
  1366  003F                     	ds	1
  1367  0040                     _timer0ReloadVal:
  1368  0040                     	ds	1
  1369                           
  1370                           	psect	clrtext
  1371  03F3                     clear_ram0:	
  1372                           ;	Called with FSR0 containing the base address, and
  1373                           ;	WREG with the size to clear
  1374                           
  1375  03F3  0064               	clrwdt	;clear the watchdog before getting into this loop
  1376  03F4                     clrloop0:
  1377  03F4  0180               	clrf	0	;clear RAM location pointed to by FSR
  1378  03F5  3101               	addfsr 0,1
  1379  03F6  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1380  03F7  2BF4               	goto	clrloop0	;have we reached the end yet?
  1381  03F8  3400               	retlw	0	;all done for this memory range, return
  1382                           
  1383                           	psect	cstackCOMMON
  1384  0070                     __pcstackCOMMON:
  1385  0070                     ?_PIN_MANAGER_Initialize:
  1386  0070                     ?_OSCILLATOR_Initialize:	
  1387                           ; 1 bytes @ 0x0
  1388                           
  1389  0070                     ?_WDT_Initialize:	
  1390                           ; 1 bytes @ 0x0
  1391                           
  1392  0070                     ?_TMR2_Initialize:	
  1393                           ; 1 bytes @ 0x0
  1394                           
  1395  0070                     ?_ADC_Initialize:	
  1396                           ; 1 bytes @ 0x0
  1397                           
  1398  0070                     ?_TMR0_Initialize:	
  1399                           ; 1 bytes @ 0x0
  1400                           
  1401  0070                     ?_TMR0_ISR:	
  1402                           ; 1 bytes @ 0x0
  1403                           
  1404  0070                     ??_TMR0_ISR:	
  1405                           ; 1 bytes @ 0x0
  1406                           
  1407  0070                     ?_TMR2_ISR:	
  1408                           ; 1 bytes @ 0x0
  1409                           
  1410  0070                     ?_TMR2_DefaultInterruptHandler:	
  1411                           ; 1 bytes @ 0x0
  1412                           
  1413  0070                     ??_TMR2_DefaultInterruptHandler:	
  1414                           ; 1 bytes @ 0x0
  1415                           
  1416  0070                     ?_TMR0_DefaultInterruptHandler:	
  1417                           ; 1 bytes @ 0x0
  1418                           
  1419  0070                     ??_TMR0_DefaultInterruptHandler:	
  1420                           ; 1 bytes @ 0x0
  1421                           
  1422  0070                     ?_EEPROM_ReadByte:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425  0070                     ?_SYSTEM_Initialize:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428  0070                     ?_ADC_GetConversion:	
  1429                           ; 1 bytes @ 0x0
  1430                           
  1431  0070                     ?_INTERRUPT_InterruptManager:	
  1432                           ; 1 bytes @ 0x0
  1433                           
  1434  0070                     ?_TMR2_StartTimer:	
  1435                           ; 1 bytes @ 0x0
  1436                           
  1437  0070                     ?_toggle_zummer:	
  1438                           ; 1 bytes @ 0x0
  1439                           
  1440  0070                     ??_toggle_zummer:	
  1441                           ; 1 bytes @ 0x0
  1442                           
  1443  0070                     ?_timer0_switch:	
  1444                           ; 1 bytes @ 0x0
  1445                           
  1446  0070                     ??_timer0_switch:	
  1447                           ; 1 bytes @ 0x0
  1448                           
  1449  0070                     ?_start_tone:	
  1450                           ; 1 bytes @ 0x0
  1451                           
  1452  0070                     ?_beep_short:	
  1453                           ; 1 bytes @ 0x0
  1454                           
  1455  0070                     ?_beep_long:	
  1456                           ; 1 bytes @ 0x0
  1457                           
  1458  0070                     ?_go_close:	
  1459                           ; 1 bytes @ 0x0
  1460                           
  1461  0070                     ?_go_close_short:	
  1462                           ; 1 bytes @ 0x0
  1463                           
  1464  0070                     ?_go_open:	
  1465                           ; 1 bytes @ 0x0
  1466                           
  1467  0070                     ?_go_close_alt:	
  1468                           ; 1 bytes @ 0x0
  1469                           
  1470  0070                     ?_go_open_alt:	
  1471                           ; 1 bytes @ 0x0
  1472                           
  1473  0070                     ?_start_alarm:	
  1474                           ; 1 bytes @ 0x0
  1475                           
  1476  0070                     ?_get_measure:	
  1477                           ; 1 bytes @ 0x0
  1478                           
  1479  0070                     ?_get_fun:	
  1480                           ; 1 bytes @ 0x0
  1481                           
  1482  0070                     ?_get_jump:	
  1483                           ; 1 bytes @ 0x0
  1484                           
  1485  0070                     ?_rele_tick:	
  1486                           ; 1 bytes @ 0x0
  1487                           
  1488  0070                     ??_rele_tick:	
  1489                           ; 1 bytes @ 0x0
  1490                           
  1491  0070                     ?_sec_tick_work:	
  1492                           ; 1 bytes @ 0x0
  1493                           
  1494  0070                     ?_povorot:	
  1495                           ; 1 bytes @ 0x0
  1496                           
  1497  0070                     ?_fun_work:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500  0070                     ?_switch_wm:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503  0070                     ?_ms_tick:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506  0070                     ?_eeprom_set:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509  0070                     ?_start_setup:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512  0070                     ?_main:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515                           
  1516                           ; 1 bytes @ 0x0
  1517  0070                     	ds	2
  1518  0072                     ??_sec_tick_work:
  1519                           
  1520                           ; 1 bytes @ 0x2
  1521  0072                     	ds	1
  1522  0073                     ??_PIN_MANAGER_Initialize:
  1523  0073                     ??_OSCILLATOR_Initialize:	
  1524                           ; 1 bytes @ 0x3
  1525                           
  1526  0073                     ??_WDT_Initialize:	
  1527                           ; 1 bytes @ 0x3
  1528                           
  1529  0073                     ??_ADC_Initialize:	
  1530                           ; 1 bytes @ 0x3
  1531                           
  1532  0073                     ??_TMR2_ISR:	
  1533                           ; 1 bytes @ 0x3
  1534                           
  1535  0073                     ?_TMR2_SetInterruptHandler:	
  1536                           ; 1 bytes @ 0x3
  1537                           
  1538  0073                     ?_TMR0_SetInterruptHandler:	
  1539                           ; 1 bytes @ 0x3
  1540                           
  1541  0073                     ??_EEPROM_ReadByte:	
  1542                           ; 1 bytes @ 0x3
  1543                           
  1544  0073                     ?_EEPROM_WriteByte:	
  1545                           ; 1 bytes @ 0x3
  1546                           
  1547  0073                     ??_ADC_GetConversion:	
  1548                           ; 1 bytes @ 0x3
  1549                           
  1550  0073                     ??_INTERRUPT_InterruptManager:	
  1551                           ; 1 bytes @ 0x3
  1552                           
  1553  0073                     ??_TMR2_StartTimer:	
  1554                           ; 1 bytes @ 0x3
  1555                           
  1556  0073                     ??_start_tone:	
  1557                           ; 1 bytes @ 0x3
  1558                           
  1559  0073                     ??_beep_short:	
  1560                           ; 1 bytes @ 0x3
  1561                           
  1562  0073                     ??_beep_long:	
  1563                           ; 1 bytes @ 0x3
  1564                           
  1565  0073                     ??_go_close:	
  1566                           ; 1 bytes @ 0x3
  1567                           
  1568  0073                     ??_go_close_short:	
  1569                           ; 1 bytes @ 0x3
  1570                           
  1571  0073                     ??_go_open:	
  1572                           ; 1 bytes @ 0x3
  1573                           
  1574  0073                     ??_go_close_alt:	
  1575                           ; 1 bytes @ 0x3
  1576                           
  1577  0073                     ??_go_open_alt:	
  1578                           ; 1 bytes @ 0x3
  1579                           
  1580  0073                     ??_get_fun:	
  1581                           ; 1 bytes @ 0x3
  1582                           
  1583  0073                     ??_get_jump:	
  1584                           ; 1 bytes @ 0x3
  1585                           
  1586  0073                     ??_ms_tick:	
  1587                           ; 1 bytes @ 0x3
  1588                           
  1589  0073                     EEPROM_WriteByte@dt:	
  1590                           ; 1 bytes @ 0x3
  1591                           
  1592  0073                     TMR2_SetInterruptHandler@InterruptHandler:	
  1593                           ; 1 bytes @ 0x3
  1594                           
  1595  0073                     TMR0_SetInterruptHandler@InterruptHandler:	
  1596                           ; 2 bytes @ 0x3
  1597                           
  1598                           
  1599                           ; 2 bytes @ 0x3
  1600  0073                     	ds	1
  1601  0074                     ??_EEPROM_WriteByte:
  1602  0074                     ADC_GetConversion@channel:	
  1603                           ; 1 bytes @ 0x4
  1604                           
  1605  0074                     beep_short@count:	
  1606                           ; 1 bytes @ 0x4
  1607                           
  1608  0074                     beep_long@count:	
  1609                           ; 1 bytes @ 0x4
  1610                           
  1611                           
  1612                           ; 1 bytes @ 0x4
  1613  0074                     	ds	1
  1614  0075                     ??_TMR2_Initialize:
  1615  0075                     ??_TMR0_Initialize:	
  1616                           ; 1 bytes @ 0x5
  1617                           
  1618  0075                     ??_TMR2_SetInterruptHandler:	
  1619                           ; 1 bytes @ 0x5
  1620                           
  1621  0075                     ??_TMR0_SetInterruptHandler:	
  1622                           ; 1 bytes @ 0x5
  1623                           
  1624  0075                     ??_SYSTEM_Initialize:	
  1625                           ; 1 bytes @ 0x5
  1626                           
  1627  0075                     ??_start_alarm:	
  1628                           ; 1 bytes @ 0x5
  1629                           
  1630  0075                     ??_get_measure:	
  1631                           ; 1 bytes @ 0x5
  1632                           
  1633  0075                     ??_povorot:	
  1634                           ; 1 bytes @ 0x5
  1635                           
  1636  0075                     ??_fun_work:	
  1637                           ; 1 bytes @ 0x5
  1638                           
  1639  0075                     ??_switch_wm:	
  1640                           ; 1 bytes @ 0x5
  1641                           
  1642  0075                     EEPROM_ReadByte@addr:	
  1643                           ; 1 bytes @ 0x5
  1644                           
  1645                           
  1646                           ; 1 bytes @ 0x5
  1647  0075                     	ds	1
  1648  0076                     ??_eeprom_set:
  1649                           
  1650                           ; 1 bytes @ 0x6
  1651  0076                     	ds	1
  1652  0077                     ??_start_setup:
  1653  0077                     ??_main:	
  1654                           ; 1 bytes @ 0x7
  1655                           
  1656                           
  1657                           	psect	cstackBANK0
  1658  0045                     __pcstackBANK0:	
  1659                           ; 1 bytes @ 0x7
  1660                           
  1661  0045                     EEPROM_WriteByte@addr:
  1662  0045                     get_measure@res:	
  1663                           ; 1 bytes @ 0x0
  1664                           
  1665                           
  1666                           ; 2 bytes @ 0x0
  1667  0045                     	ds	1
  1668  0046                     EEPROM_WriteByte@status:
  1669                           
  1670                           ; 1 bytes @ 0x1
  1671  0046                     	ds	1
  1672  0047                     eeprom_set@adres:
  1673                           
  1674                           ; 1 bytes @ 0x2
  1675  0047                     	ds	1
  1676                           
  1677                           	psect	maintext
  1678  0276                     __pmaintext:	
  1679 ;;
  1680 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1681 ;;
  1682 ;; *************** function _main *****************
  1683 ;; Defined at:
  1684 ;;		line 677 in file "main.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;		None
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;		None
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		wreg, status,2, status,0, pclath, cstack
  1693 ;; Tracked objects:
  1694 ;;		On entry : B1F/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMMON   BANK0   BANK1
  1698 ;;      Params:         0       0       0
  1699 ;;      Locals:         0       0       0
  1700 ;;      Temps:          0       0       0
  1701 ;;      Totals:         0       0       0
  1702 ;;Total ram usage:        0 bytes
  1703 ;; Hardware stack levels required when called: 10
  1704 ;; This function calls:
  1705 ;;		_fun_work
  1706 ;;		_get_fun
  1707 ;;		_get_jump
  1708 ;;		_get_measure
  1709 ;;		_povorot
  1710 ;;		_start_setup
  1711 ;;		_switch_wm
  1712 ;; This function is called by:
  1713 ;;		Startup code after reset
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717  0276                     _main:	
  1718                           ;psect for function _main
  1719                           
  1720  0276                     l2560:	
  1721                           ;incstack = 0
  1722                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1723                           
  1724                           
  1725                           ;main.c: 679:     start_setup();
  1726  0276  3181  2186  3182   	fcall	_start_setup
  1727  0279                     l2562:
  1728                           
  1729                           ;main.c: 684:         if (!FF.bits.ALARM_OFF) {
  1730  0279  18F7               	btfsc	_FF,1
  1731  027A  2A7C               	goto	u1901
  1732  027B  2A7D               	goto	u1900
  1733  027C                     u1901:
  1734  027C  2A79               	goto	l2562
  1735  027D                     u1900:
  1736  027D                     l2564:
  1737                           
  1738                           ;main.c: 686:             get_jump();
  1739  027D  3182  2221  3182   	fcall	_get_jump
  1740                           
  1741                           ;main.c: 687:             switch_wm();
  1742  0280  3182  22D7  3182   	fcall	_switch_wm
  1743                           
  1744                           ;main.c: 689:             get_fun();
  1745  0283  3181  214B  3182   	fcall	_get_fun
  1746                           
  1747                           ;main.c: 690:             fun_work();
  1748  0286  3180  20CA  3182   	fcall	_fun_work
  1749  0289                     l2566:
  1750                           
  1751                           ;main.c: 692:             if (FF.bits.ALLOW_MEASURE) {
  1752  0289  1E77               	btfss	_FF,4
  1753  028A  2A8C               	goto	u1911
  1754  028B  2A8D               	goto	u1910
  1755  028C                     u1911:
  1756  028C  2A91               	goto	l525
  1757  028D                     u1910:
  1758  028D                     l2568:
  1759                           
  1760                           ;main.c: 693:                 get_measure();
  1761  028D  3181  210D  3182   	fcall	_get_measure
  1762  0290                     l2570:
  1763                           
  1764                           ;main.c: 694:                 FF.bits.ALLOW_MEASURE = 0;
  1765  0290  1277               	bcf	_FF,4
  1766  0291                     l525:	
  1767                           ;main.c: 695:             }
  1768                           
  1769                           
  1770                           ;main.c: 696:             povorot();
  1771  0291  3180  2036  3182   	fcall	_povorot
  1772  0294  0064               	clrwdt	;# 
  1773  0295  2A79               	goto	l2562
  1774  0296  2826               	ljmp	start
  1775  0297                     __end_of_main:
  1776                           
  1777                           	psect	text1
  1778  02D7                     __ptext1:	
  1779 ;; *************** function _switch_wm *****************
  1780 ;; Defined at:
  1781 ;;		line 500 in file "main.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;		None
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;		None
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		wreg, status,2, status,0, pclath, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMMON   BANK0   BANK1
  1795 ;;      Params:         0       0       0
  1796 ;;      Locals:         0       0       0
  1797 ;;      Temps:          0       0       0
  1798 ;;      Totals:         0       0       0
  1799 ;;Total ram usage:        0 bytes
  1800 ;; Hardware stack levels used: 1
  1801 ;; Hardware stack levels required when called: 8
  1802 ;; This function calls:
  1803 ;;		_beep_long
  1804 ;; This function is called by:
  1805 ;;		_main
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809  02D7                     _switch_wm:	
  1810                           ;psect for function _switch_wm
  1811                           
  1812  02D7                     l2186:	
  1813                           ;incstack = 0
  1814                           ; Regs used in _switch_wm: [wreg+status,2+status,0+pclath+cstack]
  1815                           
  1816                           
  1817                           ;main.c: 501:     if (FF.bits.JUMP_LOW) {
  1818  02D7  1FF7               	btfss	_FF,7
  1819  02D8  2ADA               	goto	u1431
  1820  02D9  2ADB               	goto	u1430
  1821  02DA                     u1431:
  1822  02DA  2AE6               	goto	l476
  1823  02DB                     u1430:
  1824  02DB                     l2188:
  1825                           
  1826                           ;main.c: 502:         if (FF.bits.NORMAL_WORK_MODE_ON) {
  1827  02DB  1C7A               	btfss	_FF+3,0
  1828  02DC  2ADE               	goto	u1441
  1829  02DD  2ADF               	goto	u1440
  1830  02DE                     u1441:
  1831  02DE  2AF0               	goto	l480
  1832  02DF                     u1440:
  1833  02DF                     l2190:
  1834                           
  1835                           ;main.c: 503:             FF.bits.NORMAL_WORK_MODE_ON = 0;
  1836  02DF  107A               	bcf	_FF+3,0
  1837                           
  1838                           ;main.c: 504:             FF.bits.UNIVERSAL_VORK_MODE_ON = 1;
  1839  02E0  14FA               	bsf	_FF+3,1
  1840  02E1                     l2192:
  1841                           
  1842                           ;main.c: 507:             beep_long(2);
  1843  02E1  3002               	movlw	2
  1844  02E2  3183  23A1  3182   	fcall	_beep_long
  1845  02E5  2AF0               	goto	l480
  1846  02E6                     l476:
  1847                           
  1848                           ;main.c: 510:         if (FF.bits.UNIVERSAL_VORK_MODE_ON) {
  1849  02E6  1CFA               	btfss	_FF+3,1
  1850  02E7  2AE9               	goto	u1451
  1851  02E8  2AEA               	goto	u1450
  1852  02E9                     u1451:
  1853  02E9  2AF0               	goto	l480
  1854  02EA                     u1450:
  1855  02EA                     l2194:
  1856                           
  1857                           ;main.c: 511:             FF.bits.NORMAL_WORK_MODE_ON = 1;
  1858  02EA  147A               	bsf	_FF+3,0
  1859                           
  1860                           ;main.c: 512:             FF.bits.UNIVERSAL_VORK_MODE_ON = 0;
  1861  02EB  10FA               	bcf	_FF+3,1
  1862  02EC                     l2196:
  1863                           
  1864                           ;main.c: 515:             beep_long(1);
  1865  02EC  3001               	movlw	1
  1866  02ED  3183  23A1  3182   	fcall	_beep_long
  1867  02F0                     l480:
  1868  02F0  0008               	return
  1869  02F1                     __end_of_switch_wm:
  1870                           
  1871                           	psect	text2
  1872  03A1                     __ptext2:	
  1873 ;; *************** function _beep_long *****************
  1874 ;; Defined at:
  1875 ;;		line 157 in file "main.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  count           1    wreg     unsigned char 
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  count           1    4[COMMON] unsigned char 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg, status,2, status,0, pclath, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMMON   BANK0   BANK1
  1889 ;;      Params:         0       0       0
  1890 ;;      Locals:         1       0       0
  1891 ;;      Temps:          1       0       0
  1892 ;;      Totals:         2       0       0
  1893 ;;Total ram usage:        2 bytes
  1894 ;; Hardware stack levels used: 1
  1895 ;; Hardware stack levels required when called: 7
  1896 ;; This function calls:
  1897 ;;		_start_tone
  1898 ;; This function is called by:
  1899 ;;		_switch_wm
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903  03A1                     _beep_long:	
  1904                           ;psect for function _beep_long
  1905                           
  1906                           
  1907                           ;incstack = 0
  1908                           ; Regs used in _beep_long: [wreg+status,2+status,0+pclath+cstack]
  1909                           ;beep_long@count stored from wreg
  1910  03A1  00F4               	movwf	beep_long@count
  1911  03A2                     l1978:
  1912                           
  1913                           ;main.c: 158:     start_tone();
  1914  03A2  3184  241A  3183   	fcall	_start_tone
  1915  03A5                     l1980:
  1916                           
  1917                           ;main.c: 159:     FF.bits.ZUM_BUSY = 1;
  1918  03A5  1679               	bsf	_FF+2,4
  1919  03A6                     l1982:
  1920                           
  1921                           ;main.c: 160:     time_zummer = 30;
  1922  03A6  301E               	movlw	30
  1923  03A7  0020               	movlb	0	; select bank0
  1924  03A8  00A9               	movwf	_time_zummer
  1925  03A9  3000               	movlw	0
  1926  03AA  00AA               	movwf	_time_zummer+1
  1927  03AB                     l1984:
  1928                           
  1929                           ;main.c: 161:     beep_long_count = count;
  1930  03AB  0874               	movf	beep_long@count,w
  1931  03AC  00F3               	movwf	??_beep_long
  1932  03AD  0873               	movf	??_beep_long,w
  1933  03AE  00BC               	movwf	_beep_long_count
  1934  03AF                     l298:
  1935  03AF  0008               	return
  1936  03B0                     __end_of_beep_long:
  1937                           
  1938                           	psect	text3
  1939  0186                     __ptext3:	
  1940 ;; *************** function _start_setup *****************
  1941 ;; Defined at:
  1942 ;;		line 639 in file "main.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2, status,0, pclath, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMMON   BANK0   BANK1
  1956 ;;      Params:         0       0       0
  1957 ;;      Locals:         0       0       0
  1958 ;;      Temps:          0       0       0
  1959 ;;      Totals:         0       0       0
  1960 ;;Total ram usage:        0 bytes
  1961 ;; Hardware stack levels used: 1
  1962 ;; Hardware stack levels required when called: 9
  1963 ;; This function calls:
  1964 ;;		_SYSTEM_Initialize
  1965 ;;		_TMR0_SetInterruptHandler
  1966 ;;		_TMR2_SetInterruptHandler
  1967 ;;		_TMR2_StartTimer
  1968 ;;		_eeprom_set
  1969 ;; This function is called by:
  1970 ;;		_main
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974  0186                     _start_setup:	
  1975                           ;psect for function _start_setup
  1976                           
  1977  0186                     l2508:	
  1978                           ;incstack = 0
  1979                           ; Regs used in _start_setup: [wreg+status,2+status,0+pclath+cstack]
  1980                           
  1981                           
  1982                           ;main.c: 641:     SYSTEM_Initialize();
  1983  0186  3183  235A  3181   	fcall	_SYSTEM_Initialize
  1984  0189                     l2510:
  1985                           
  1986                           ;main.c: 642:     (INTCONbits.GIE = 1);
  1987  0189  178B               	bsf	11,7	;volatile
  1988  018A                     l2512:
  1989                           
  1990                           ;main.c: 643:     (INTCONbits.PEIE = 1);
  1991  018A  170B               	bsf	11,6	;volatile
  1992                           
  1993                           ;main.c: 646:     eeprom_set();
  1994  018B  3183  231E  3181   	fcall	_eeprom_set
  1995                           
  1996                           ;main.c: 648:     TMR0_SetInterruptHandler(timer0_switch);
  1997  018E  30CD               	movlw	low _timer0_switch
  1998  018F  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1999  0190  3003               	movlw	high _timer0_switch
  2000  0191  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2001  0192  3183  23FF  3181   	fcall	_TMR0_SetInterruptHandler
  2002                           
  2003                           ;main.c: 649:     TMR2_SetInterruptHandler(ms_tick);
  2004  0195  30F2               	movlw	low _ms_tick
  2005  0196  00F3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2006  0197  3001               	movlw	high _ms_tick
  2007  0198  00F4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2008  0199  3183  23F9  3181   	fcall	_TMR2_SetInterruptHandler
  2009  019C                     l2514:
  2010                           
  2011                           ;main.c: 650:     TMR2_StartTimer();
  2012  019C  3184  2417  3181   	fcall	_TMR2_StartTimer
  2013  019F                     l2516:
  2014  019F  0023               	movlb	3	; select bank3
  2015  01A0  118E               	bcf	14,3	;volatile
  2016  01A1                     l2518:
  2017  01A1  108C               	bcf	12,1	;volatile
  2018  01A2                     l2520:
  2019  01A2  110E               	bcf	14,2	;volatile
  2020  01A3                     l2522:
  2021  01A3  0024               	movlb	4	; select bank4
  2022  01A4  108C               	bcf	12,1	;volatile
  2023  01A5                     l2524:
  2024  01A5  0021               	movlb	1	; select bank1
  2025  01A6  148C               	bsf	12,1	;volatile
  2026  01A7                     l2526:
  2027  01A7  0024               	movlb	4	; select bank4
  2028  01A8  110E               	bcf	14,2	;volatile
  2029  01A9                     l2528:
  2030  01A9  0021               	movlb	1	; select bank1
  2031  01AA  150E               	bsf	14,2	;volatile
  2032  01AB                     l2530:
  2033                           
  2034                           ;main.c: 662:     INTCONbits.TMR0IE = 0;
  2035  01AB  128B               	bcf	11,5	;volatile
  2036                           
  2037                           ;main.c: 663:     FF.value = 0;
  2038  01AC  3000               	movlw	0
  2039  01AD  00FA               	movwf	_FF+3
  2040  01AE  3000               	movlw	0
  2041  01AF  00F9               	movwf	_FF+2
  2042  01B0  3000               	movlw	0
  2043  01B1  00F8               	movwf	_FF+1
  2044  01B2  3000               	movlw	0
  2045  01B3  00F7               	movwf	_FF
  2046  01B4                     l2532:
  2047                           
  2048                           ;main.c: 664:     FF.bits.ALARM_ON = 0;
  2049  01B4  1077               	bcf	_FF,0
  2050  01B5                     l2534:
  2051                           
  2052                           ;main.c: 665:     FF.bits.ALARM_OFF = 1;
  2053  01B5  14F7               	bsf	_FF,1
  2054  01B6                     l2536:
  2055  01B6  0022               	movlb	2	; select bank2
  2056  01B7  128E               	bcf	14,5	;volatile
  2057  01B8                     l2538:
  2058  01B8  120E               	bcf	14,4	;volatile
  2059  01B9                     l2540:
  2060  01B9  100E               	bcf	14,0	;volatile
  2061  01BA                     l2542:
  2062  01BA  0021               	movlb	1	; select bank1
  2063  01BB  100E               	bcf	14,0	;volatile
  2064  01BC                     l2544:
  2065                           
  2066                           ;main.c: 674:     time_rele_power = 0;
  2067  01BC  0020               	movlb	0	; select bank0
  2068  01BD  01B1               	clrf	_time_rele_power
  2069  01BE  01B2               	clrf	_time_rele_power+1
  2070  01BF                     l518:
  2071  01BF  0008               	return
  2072  01C0                     __end_of_start_setup:
  2073                           
  2074                           	psect	text4
  2075  031E                     __ptext4:	
  2076 ;; *************** function _eeprom_set *****************
  2077 ;; Defined at:
  2078 ;;		line 632 in file "main.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;		None
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  adres           1    2[BANK0 ] unsigned char 
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  1    wreg      void 
  2085 ;; Registers used:
  2086 ;;		wreg, status,2, status,0, pclath, cstack
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMMON   BANK0   BANK1
  2092 ;;      Params:         0       0       0
  2093 ;;      Locals:         0       1       0
  2094 ;;      Temps:          1       0       0
  2095 ;;      Totals:         1       1       0
  2096 ;;Total ram usage:        2 bytes
  2097 ;; Hardware stack levels used: 1
  2098 ;; Hardware stack levels required when called: 7
  2099 ;; This function calls:
  2100 ;;		_EEPROM_ReadByte
  2101 ;;		_EEPROM_WriteByte
  2102 ;; This function is called by:
  2103 ;;		_start_setup
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107  031E                     _eeprom_set:	
  2108                           ;psect for function _eeprom_set
  2109                           
  2110  031E                     l2450:	
  2111                           ;incstack = 0
  2112                           ; Regs used in _eeprom_set: [wreg+status,2+status,0+pclath+cstack]
  2113                           
  2114                           
  2115                           ;main.c: 633:     char adres = EEPROM_ReadByte(FRIMWARE_VERSION_EEPROM_ADR);
  2116  031E  3000               	movlw	0
  2117  031F  3183  2332  3183   	fcall	_EEPROM_ReadByte
  2118  0322  00F6               	movwf	??_eeprom_set
  2119  0323  0876               	movf	??_eeprom_set,w
  2120  0324  0020               	movlb	0	; select bank0
  2121  0325  00C7               	movwf	eeprom_set@adres
  2122  0326                     l2452:
  2123                           
  2124                           ;main.c: 634:     if (adres == 0xFF) {
  2125  0326  0A47               	incf	eeprom_set@adres,w
  2126  0327  1D03               	btfss	3,2
  2127  0328  2B2A               	goto	u1751
  2128  0329  2B2B               	goto	u1750
  2129  032A                     u1751:
  2130  032A  2B31               	goto	l493
  2131  032B                     u1750:
  2132  032B                     l2454:
  2133                           
  2134                           ;main.c: 635:         EEPROM_WriteByte(FRIMWARE_VERSION_EEPROM_ADR, 1);
  2135  032B  01F3               	clrf	EEPROM_WriteByte@dt
  2136  032C  0AF3               	incf	EEPROM_WriteByte@dt,f
  2137  032D  3000               	movlw	0
  2138  032E  3182  224F  3183   	fcall	_EEPROM_WriteByte
  2139  0331                     l493:
  2140  0331  0008               	return
  2141  0332                     __end_of_eeprom_set:
  2142                           
  2143                           	psect	text5
  2144  024F                     __ptext5:	
  2145 ;; *************** function _EEPROM_WriteByte *****************
  2146 ;; Defined at:
  2147 ;;		line 6 in file "eeprom.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  addr            1    wreg     unsigned char 
  2150 ;;  dt              1    3[COMMON] unsigned char 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;  addr            1    0[BANK0 ] unsigned char 
  2153 ;;  status          1    1[BANK0 ] unsigned char 
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      void 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMMON   BANK0   BANK1
  2163 ;;      Params:         1       0       0
  2164 ;;      Locals:         0       2       0
  2165 ;;      Temps:          2       0       0
  2166 ;;      Totals:         3       2       0
  2167 ;;Total ram usage:        5 bytes
  2168 ;; Hardware stack levels used: 1
  2169 ;; Hardware stack levels required when called: 6
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_eeprom_set
  2174 ;;		_EEPROM_WriteWord
  2175 ;;		_EEPROM_Writeint24
  2176 ;;		_EEPROM_WriteString
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180  024F                     _EEPROM_WriteByte:	
  2181                           ;psect for function _EEPROM_WriteByte
  2182                           
  2183                           
  2184                           ;incstack = 0
  2185                           ; Regs used in _EEPROM_WriteByte: [wreg+status,2]
  2186                           ;EEPROM_WriteByte@addr stored from wreg
  2187  024F  0020               	movlb	0	; select bank0
  2188  0250  00C5               	movwf	EEPROM_WriteByte@addr
  2189  0251                     l2410:
  2190  0251                     l545:	
  2191                           ;eeprom.c: 7:     unsigned char status;;eeprom.c: 8:     while (WR);
  2192                           
  2193  0251  0023               	movlb	3	; select bank3
  2194  0252  1895               	btfsc	21,1	;volsfr
  2195  0253  2A55               	goto	u1691
  2196  0254  2A56               	goto	u1690
  2197  0255                     u1691:
  2198  0255  2A51               	goto	l545
  2199  0256                     u1690:
  2200  0256                     l2412:
  2201                           
  2202                           ;eeprom.c: 9:     status = GIE;
  2203  0256  3000               	movlw	0
  2204  0257  1B8B               	btfsc	11,7	;volatile
  2205  0258  3001               	movlw	1
  2206  0259  0020               	movlb	0	; select bank0
  2207  025A  00C6               	movwf	EEPROM_WriteByte@status
  2208  025B                     l2414:
  2209                           
  2210                           ;eeprom.c: 10:     GIE = 0;
  2211  025B  138B               	bcf	11,7	;volatile
  2212  025C                     l2416:
  2213                           
  2214                           ;eeprom.c: 11:     EEADR = addr;
  2215  025C  0845               	movf	EEPROM_WriteByte@addr,w
  2216  025D  00F4               	movwf	??_EEPROM_WriteByte
  2217  025E  01F5               	clrf	??_EEPROM_WriteByte+1
  2218  025F  0874               	movf	??_EEPROM_WriteByte,w
  2219  0260  0023               	movlb	3	; select bank3
  2220  0261  0091               	movwf	17	;volatile
  2221  0262  0875               	movf	??_EEPROM_WriteByte+1,w
  2222  0263  0092               	movwf	18	;volatile
  2223  0264                     l2418:
  2224                           
  2225                           ;eeprom.c: 12:     EEDATA = dt;
  2226  0264  0873               	movf	EEPROM_WriteByte@dt,w
  2227  0265  0093               	movwf	19	;volatile
  2228  0266                     l2420:
  2229                           
  2230                           ;eeprom.c: 13:     WREN = 1;
  2231  0266  1515               	bsf	21,2	;volsfr
  2232  0267                     l2422:
  2233                           
  2234                           ;eeprom.c: 14:     EECON2 = 0x55;
  2235  0267  3055               	movlw	85
  2236  0268  0096               	movwf	22	;volsfr
  2237  0269                     l2424:
  2238                           
  2239                           ;eeprom.c: 15:     EECON2 = 0xAA;
  2240  0269  30AA               	movlw	170
  2241  026A  0096               	movwf	22	;volsfr
  2242  026B                     l2426:
  2243                           
  2244                           ;eeprom.c: 16:     WR = 1;
  2245  026B  1495               	bsf	21,1	;volsfr
  2246  026C                     l2428:
  2247                           
  2248                           ;eeprom.c: 17:     GIE = status;
  2249  026C  0020               	movlb	0	; select bank0
  2250  026D  1846               	btfsc	EEPROM_WriteByte@status,0
  2251  026E  2A70               	goto	u1701
  2252  026F  2A72               	goto	u1700
  2253  0270                     u1701:
  2254  0270  178B               	bsf	11,7	;volatile
  2255  0271  2A73               	goto	u1714
  2256  0272                     u1700:
  2257  0272  138B               	bcf	11,7	;volatile
  2258  0273                     u1714:
  2259  0273                     l2430:
  2260                           
  2261                           ;eeprom.c: 18:     WREN = 0;
  2262  0273  0023               	movlb	3	; select bank3
  2263  0274  1115               	bcf	21,2	;volsfr
  2264  0275                     l548:
  2265  0275  0008               	return
  2266  0276                     __end_of_EEPROM_WriteByte:
  2267                           
  2268                           	psect	text6
  2269  0332                     __ptext6:	
  2270 ;; *************** function _EEPROM_ReadByte *****************
  2271 ;; Defined at:
  2272 ;;		line 21 in file "eeprom.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  addr            1    wreg     unsigned char 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;  addr            1    5[COMMON] unsigned char 
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      unsigned char 
  2279 ;; Registers used:
  2280 ;;		wreg
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMMON   BANK0   BANK1
  2286 ;;      Params:         0       0       0
  2287 ;;      Locals:         1       0       0
  2288 ;;      Temps:          2       0       0
  2289 ;;      Totals:         3       0       0
  2290 ;;Total ram usage:        3 bytes
  2291 ;; Hardware stack levels used: 1
  2292 ;; Hardware stack levels required when called: 6
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		_eeprom_set
  2297 ;;		_EEPROM_ReadWord
  2298 ;;		_EEPROM_Readint24
  2299 ;;		_EEPROM_ReadString
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303  0332                     _EEPROM_ReadByte:	
  2304                           ;psect for function _EEPROM_ReadByte
  2305                           
  2306                           
  2307                           ;incstack = 0
  2308                           ; Regs used in _EEPROM_ReadByte: [wreg]
  2309                           ;EEPROM_ReadByte@addr stored from wreg
  2310  0332  00F5               	movwf	EEPROM_ReadByte@addr
  2311  0333                     l2400:
  2312  0333                     l551:	
  2313                           ;eeprom.c: 22:     while (RD || WR);
  2314                           
  2315  0333  0023               	movlb	3	; select bank3
  2316  0334  1815               	btfsc	21,0	;volsfr
  2317  0335  2B37               	goto	u1671
  2318  0336  2B38               	goto	u1670
  2319  0337                     u1671:
  2320  0337  2B33               	goto	l551
  2321  0338                     u1670:
  2322  0338                     l2402:
  2323  0338  1895               	btfsc	21,1	;volsfr
  2324  0339  2B3B               	goto	u1681
  2325  033A  2B3C               	goto	u1680
  2326  033B                     u1681:
  2327  033B  2B33               	goto	l551
  2328  033C                     u1680:
  2329  033C                     l2404:
  2330                           
  2331                           ;eeprom.c: 23:     EEADR = addr;
  2332  033C  0875               	movf	EEPROM_ReadByte@addr,w
  2333  033D  00F3               	movwf	??_EEPROM_ReadByte
  2334  033E  01F4               	clrf	??_EEPROM_ReadByte+1
  2335  033F  0873               	movf	??_EEPROM_ReadByte,w
  2336  0340  0091               	movwf	17	;volatile
  2337  0341  0874               	movf	??_EEPROM_ReadByte+1,w
  2338  0342  0092               	movwf	18	;volatile
  2339  0343                     l2406:
  2340                           
  2341                           ;eeprom.c: 24:     RD = 1;
  2342  0343  1415               	bsf	21,0	;volsfr
  2343                           
  2344                           ;eeprom.c: 25:     return EEDATA;
  2345  0344  0813               	movf	19,w	;volatile
  2346  0345                     l554:
  2347  0345  0008               	return
  2348  0346                     __end_of_EEPROM_ReadByte:
  2349                           
  2350                           	psect	text7
  2351  0417                     __ptext7:	
  2352 ;; *************** function _TMR2_StartTimer *****************
  2353 ;; Defined at:
  2354 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;		None
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;		None
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      void 
  2361 ;; Registers used:
  2362 ;;		None
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMMON   BANK0   BANK1
  2368 ;;      Params:         0       0       0
  2369 ;;      Locals:         0       0       0
  2370 ;;      Temps:          0       0       0
  2371 ;;      Totals:         0       0       0
  2372 ;;Total ram usage:        0 bytes
  2373 ;; Hardware stack levels used: 1
  2374 ;; Hardware stack levels required when called: 6
  2375 ;; This function calls:
  2376 ;;		Nothing
  2377 ;; This function is called by:
  2378 ;;		_start_setup
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382  0417                     _TMR2_StartTimer:	
  2383                           ;psect for function _TMR2_StartTimer
  2384                           
  2385  0417                     l1966:	
  2386                           ;incstack = 0
  2387                           ; Regs used in _TMR2_StartTimer: []
  2388                           
  2389                           
  2390                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  2391  0417  0020               	movlb	0	; select bank0
  2392  0418  151C               	bsf	28,2	;volatile
  2393  0419                     l138:
  2394  0419  0008               	return
  2395  041A                     __end_of_TMR2_StartTimer:
  2396                           
  2397                           	psect	text8
  2398  035A                     __ptext8:	
  2399 ;; *************** function _SYSTEM_Initialize *****************
  2400 ;; Defined at:
  2401 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;		None
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		wreg, status,2, status,0, pclath, cstack
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMMON   BANK0   BANK1
  2415 ;;      Params:         0       0       0
  2416 ;;      Locals:         0       0       0
  2417 ;;      Temps:          0       0       0
  2418 ;;      Totals:         0       0       0
  2419 ;;Total ram usage:        0 bytes
  2420 ;; Hardware stack levels used: 1
  2421 ;; Hardware stack levels required when called: 8
  2422 ;; This function calls:
  2423 ;;		_ADC_Initialize
  2424 ;;		_OSCILLATOR_Initialize
  2425 ;;		_PIN_MANAGER_Initialize
  2426 ;;		_TMR0_Initialize
  2427 ;;		_TMR2_Initialize
  2428 ;;		_WDT_Initialize
  2429 ;; This function is called by:
  2430 ;;		_start_setup
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434  035A                     _SYSTEM_Initialize:	
  2435                           ;psect for function _SYSTEM_Initialize
  2436                           
  2437  035A                     l1952:	
  2438                           ;incstack = 0
  2439                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2440                           
  2441                           
  2442                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2443  035A  3183  2309  3183   	fcall	_PIN_MANAGER_Initialize
  2444                           
  2445                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2446  035D  3183  23EC  3183   	fcall	_OSCILLATOR_Initialize
  2447                           
  2448                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2449  0360  3184  240F  3183   	fcall	_WDT_Initialize
  2450                           
  2451                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  2452  0363  3183  236D  3183   	fcall	_TMR2_Initialize
  2453                           
  2454                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2455  0366  3183  23E4  3183   	fcall	_ADC_Initialize
  2456                           
  2457                           ;mcc_generated_files/mcc.c: 58:     TMR0_Initialize();
  2458  0369  3183  237F  3183   	fcall	_TMR0_Initialize
  2459  036C                     l23:
  2460  036C  0008               	return
  2461  036D                     __end_of_SYSTEM_Initialize:
  2462                           
  2463                           	psect	text9
  2464  040F                     __ptext9:	
  2465 ;; *************** function _WDT_Initialize *****************
  2466 ;; Defined at:
  2467 ;;		line 71 in file "mcc_generated_files/mcc.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;		None
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;		None
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  1    wreg      void 
  2474 ;; Registers used:
  2475 ;;		wreg
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMMON   BANK0   BANK1
  2481 ;;      Params:         0       0       0
  2482 ;;      Locals:         0       0       0
  2483 ;;      Temps:          0       0       0
  2484 ;;      Totals:         0       0       0
  2485 ;;Total ram usage:        0 bytes
  2486 ;; Hardware stack levels used: 1
  2487 ;; Hardware stack levels required when called: 6
  2488 ;; This function calls:
  2489 ;;		Nothing
  2490 ;; This function is called by:
  2491 ;;		_SYSTEM_Initialize
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495  040F                     _WDT_Initialize:	
  2496                           ;psect for function _WDT_Initialize
  2497                           
  2498  040F                     l1848:	
  2499                           ;incstack = 0
  2500                           ; Regs used in _WDT_Initialize: [wreg]
  2501                           
  2502                           
  2503                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x0A;
  2504  040F  300A               	movlw	10
  2505  0410  0021               	movlb	1	; select bank1
  2506  0411  0097               	movwf	23	;volatile
  2507  0412                     l29:
  2508  0412  0008               	return
  2509  0413                     __end_of_WDT_Initialize:
  2510                           
  2511                           	psect	text10
  2512  036D                     __ptext10:	
  2513 ;; *************** function _TMR2_Initialize *****************
  2514 ;; Defined at:
  2515 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;		None
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;		None
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		wreg, status,2, status,0, pclath, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMMON   BANK0   BANK1
  2529 ;;      Params:         0       0       0
  2530 ;;      Locals:         0       0       0
  2531 ;;      Temps:          0       0       0
  2532 ;;      Totals:         0       0       0
  2533 ;;Total ram usage:        0 bytes
  2534 ;; Hardware stack levels used: 1
  2535 ;; Hardware stack levels required when called: 7
  2536 ;; This function calls:
  2537 ;;		_TMR2_SetInterruptHandler
  2538 ;; This function is called by:
  2539 ;;		_SYSTEM_Initialize
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543  036D                     _TMR2_Initialize:	
  2544                           ;psect for function _TMR2_Initialize
  2545                           
  2546  036D                     l1850:	
  2547                           ;incstack = 0
  2548                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2549                           
  2550                           
  2551                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x63;
  2552  036D  3063               	movlw	99
  2553  036E  0020               	movlb	0	; select bank0
  2554  036F  009B               	movwf	27	;volatile
  2555  0370                     l1852:
  2556                           
  2557                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  2558  0370  019A               	clrf	26	;volatile
  2559  0371                     l1854:
  2560                           
  2561                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  2562  0371  1091               	bcf	17,1	;volatile
  2563  0372                     l1856:
  2564                           
  2565                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  2566  0372  0021               	movlb	1	; select bank1
  2567  0373  1491               	bsf	17,1	;volatile
  2568  0374                     l1858:
  2569                           
  2570                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  2571  0374  3027               	movlw	low _TMR2_DefaultInterruptHandler
  2572  0375  00F3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2573  0376  3004               	movlw	high _TMR2_DefaultInterruptHandler
  2574  0377  00F4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2575  0378  3183  23F9  3183   	fcall	_TMR2_SetInterruptHandler
  2576  037B                     l1860:
  2577                           
  2578                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x4D;
  2579  037B  304D               	movlw	77
  2580  037C  0020               	movlb	0	; select bank0
  2581  037D  009C               	movwf	28	;volatile
  2582  037E                     l135:
  2583  037E  0008               	return
  2584  037F                     __end_of_TMR2_Initialize:
  2585                           
  2586                           	psect	text11
  2587  03F9                     __ptext11:	
  2588 ;; *************** function _TMR2_SetInterruptHandler *****************
  2589 ;; Defined at:
  2590 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  2593 ;;		 -> ms_tick(1), TMR2_DefaultInterruptHandler(1), 
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;		None
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      void 
  2598 ;; Registers used:
  2599 ;;		wreg
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMMON   BANK0   BANK1
  2605 ;;      Params:         2       0       0
  2606 ;;      Locals:         0       0       0
  2607 ;;      Temps:          0       0       0
  2608 ;;      Totals:         2       0       0
  2609 ;;Total ram usage:        2 bytes
  2610 ;; Hardware stack levels used: 1
  2611 ;; Hardware stack levels required when called: 6
  2612 ;; This function calls:
  2613 ;;		Nothing
  2614 ;; This function is called by:
  2615 ;;		_TMR2_Initialize
  2616 ;;		_start_setup
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620  03F9                     _TMR2_SetInterruptHandler:	
  2621                           ;psect for function _TMR2_SetInterruptHandler
  2622                           
  2623  03F9                     l1806:	
  2624                           ;incstack = 0
  2625                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2626                           
  2627                           
  2628                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
  2629  03F9  0874               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2630  03FA  0020               	movlb	0	; select bank0
  2631  03FB  00C4               	movwf	_TMR2_InterruptHandler+1
  2632  03FC  0873               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2633  03FD  00C3               	movwf	_TMR2_InterruptHandler
  2634  03FE                     l157:
  2635  03FE  0008               	return
  2636  03FF                     __end_of_TMR2_SetInterruptHandler:
  2637                           
  2638                           	psect	text12
  2639  037F                     __ptext12:	
  2640 ;; *************** function _TMR0_Initialize *****************
  2641 ;; Defined at:
  2642 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;		None
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      void 
  2649 ;; Registers used:
  2650 ;;		wreg, status,2, status,0, pclath, cstack
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMMON   BANK0   BANK1
  2656 ;;      Params:         0       0       0
  2657 ;;      Locals:         0       0       0
  2658 ;;      Temps:          0       0       0
  2659 ;;      Totals:         0       0       0
  2660 ;;Total ram usage:        0 bytes
  2661 ;; Hardware stack levels used: 1
  2662 ;; Hardware stack levels required when called: 7
  2663 ;; This function calls:
  2664 ;;		_TMR0_SetInterruptHandler
  2665 ;; This function is called by:
  2666 ;;		_SYSTEM_Initialize
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670  037F                     _TMR0_Initialize:	
  2671                           ;psect for function _TMR0_Initialize
  2672                           
  2673  037F                     l1868:	
  2674                           ;incstack = 0
  2675                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2676                           
  2677                           
  2678                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD1 
      +                          & 0x3F));
  2679  037F  0021               	movlb	1	; select bank1
  2680  0380  0815               	movf	21,w	;volatile
  2681  0381  39C0               	andlw	192
  2682  0382  3811               	iorlw	17
  2683  0383  0095               	movwf	21	;volatile
  2684  0384                     l1870:
  2685                           
  2686                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x00;
  2687  0384  0020               	movlb	0	; select bank0
  2688  0385  0195               	clrf	21	;volatile
  2689  0386                     l1872:
  2690                           
  2691                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 0;
  2692  0386  01C0               	clrf	_timer0ReloadVal	;volatile
  2693  0387                     l1874:
  2694                           
  2695                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  2696  0387  110B               	bcf	11,2	;volatile
  2697  0388                     l1876:
  2698                           
  2699                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  2700  0388  168B               	bsf	11,5	;volatile
  2701  0389                     l1878:
  2702                           
  2703                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2704  0389  3028               	movlw	low _TMR0_DefaultInterruptHandler
  2705  038A  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2706  038B  3004               	movlw	high _TMR0_DefaultInterruptHandler
  2707  038C  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2708  038D  3183  23FF  3183   	fcall	_TMR0_SetInterruptHandler
  2709  0390                     l177:
  2710  0390  0008               	return
  2711  0391                     __end_of_TMR0_Initialize:
  2712                           
  2713                           	psect	text13
  2714  03FF                     __ptext13:	
  2715 ;; *************** function _TMR0_SetInterruptHandler *****************
  2716 ;; Defined at:
  2717 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  2720 ;;		 -> timer0_switch(1), TMR0_DefaultInterruptHandler(1), 
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;		None
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      void 
  2725 ;; Registers used:
  2726 ;;		wreg
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMMON   BANK0   BANK1
  2732 ;;      Params:         2       0       0
  2733 ;;      Locals:         0       0       0
  2734 ;;      Temps:          0       0       0
  2735 ;;      Totals:         2       0       0
  2736 ;;Total ram usage:        2 bytes
  2737 ;; Hardware stack levels used: 1
  2738 ;; Hardware stack levels required when called: 6
  2739 ;; This function calls:
  2740 ;;		Nothing
  2741 ;; This function is called by:
  2742 ;;		_TMR0_Initialize
  2743 ;;		_start_setup
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747  03FF                     _TMR0_SetInterruptHandler:	
  2748                           ;psect for function _TMR0_SetInterruptHandler
  2749                           
  2750  03FF                     l1808:	
  2751                           ;incstack = 0
  2752                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2753                           
  2754                           
  2755                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  2756  03FF  0874               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2757  0400  0020               	movlb	0	; select bank0
  2758  0401  00C2               	movwf	_TMR0_InterruptHandler+1
  2759  0402  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2760  0403  00C1               	movwf	_TMR0_InterruptHandler
  2761  0404                     l193:
  2762  0404  0008               	return
  2763  0405                     __end_of_TMR0_SetInterruptHandler:
  2764                           
  2765                           	psect	text14
  2766  0309                     __ptext14:	
  2767 ;; *************** function _PIN_MANAGER_Initialize *****************
  2768 ;; Defined at:
  2769 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;		None
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;		None
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      void 
  2776 ;; Registers used:
  2777 ;;		wreg, status,2
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1
  2783 ;;      Params:         0       0       0
  2784 ;;      Locals:         0       0       0
  2785 ;;      Temps:          0       0       0
  2786 ;;      Totals:         0       0       0
  2787 ;;Total ram usage:        0 bytes
  2788 ;; Hardware stack levels used: 1
  2789 ;; Hardware stack levels required when called: 6
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		_SYSTEM_Initialize
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797  0309                     _PIN_MANAGER_Initialize:	
  2798                           ;psect for function _PIN_MANAGER_Initialize
  2799                           
  2800  0309                     l1830:	
  2801                           ;incstack = 0
  2802                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2803                           
  2804                           
  2805                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2806  0309  0022               	movlb	2	; select bank2
  2807  030A  018C               	clrf	12	;volatile
  2808                           
  2809                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  2810  030B  018E               	clrf	14	;volatile
  2811  030C                     l1832:
  2812                           
  2813                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x0F;
  2814  030C  300F               	movlw	15
  2815  030D  0021               	movlb	1	; select bank1
  2816  030E  008C               	movwf	12	;volatile
  2817  030F                     l1834:
  2818                           
  2819                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x0C;
  2820  030F  300C               	movlw	12
  2821  0310  008E               	movwf	14	;volatile
  2822  0311                     l1836:
  2823                           
  2824                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x08;
  2825  0311  3008               	movlw	8
  2826  0312  0023               	movlb	3	; select bank3
  2827  0313  008E               	movwf	14	;volatile
  2828  0314                     l1838:
  2829                           
  2830                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x05;
  2831  0314  3005               	movlw	5
  2832  0315  008C               	movwf	12	;volatile
  2833                           
  2834                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  2835  0316  0024               	movlb	4	; select bank4
  2836  0317  018C               	clrf	12	;volatile
  2837                           
  2838                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  2839  0318  018E               	clrf	14	;volatile
  2840  0319                     l1840:
  2841                           
  2842                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2843  0319  0021               	movlb	1	; select bank1
  2844  031A  1795               	bsf	21,7	;volatile
  2845                           
  2846                           ;mcc_generated_files/pin_manager.c: 86:     APFCON = 0x00;
  2847  031B  0022               	movlb	2	; select bank2
  2848  031C  019D               	clrf	29	;volatile
  2849  031D                     l90:
  2850  031D  0008               	return
  2851  031E                     __end_of_PIN_MANAGER_Initialize:
  2852                           
  2853                           	psect	text15
  2854  03EC                     __ptext15:	
  2855 ;; *************** function _OSCILLATOR_Initialize *****************
  2856 ;; Defined at:
  2857 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;		None
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;		None
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  1    wreg      void 
  2864 ;; Registers used:
  2865 ;;		wreg, status,2
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMMON   BANK0   BANK1
  2871 ;;      Params:         0       0       0
  2872 ;;      Locals:         0       0       0
  2873 ;;      Temps:          0       0       0
  2874 ;;      Totals:         0       0       0
  2875 ;;Total ram usage:        0 bytes
  2876 ;; Hardware stack levels used: 1
  2877 ;; Hardware stack levels required when called: 6
  2878 ;; This function calls:
  2879 ;;		Nothing
  2880 ;; This function is called by:
  2881 ;;		_SYSTEM_Initialize
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885  03EC                     _OSCILLATOR_Initialize:	
  2886                           ;psect for function _OSCILLATOR_Initialize
  2887                           
  2888  03EC                     l1842:	
  2889                           ;incstack = 0
  2890                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2891                           
  2892                           
  2893                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x78;
  2894  03EC  3078               	movlw	120
  2895  03ED  0021               	movlb	1	; select bank1
  2896  03EE  0099               	movwf	25	;volatile
  2897  03EF                     l1844:
  2898                           
  2899                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  2900  03EF  0198               	clrf	24	;volatile
  2901  03F0                     l1846:
  2902                           
  2903                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  2904  03F0  0022               	movlb	2	; select bank2
  2905  03F1  0196               	clrf	22	;volatile
  2906  03F2                     l26:
  2907  03F2  0008               	return
  2908  03F3                     __end_of_OSCILLATOR_Initialize:
  2909                           
  2910                           	psect	text16
  2911  03E4                     __ptext16:	
  2912 ;; *************** function _ADC_Initialize *****************
  2913 ;; Defined at:
  2914 ;;		line 67 in file "mcc_generated_files/adc.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;		None
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;		None
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMMON   BANK0   BANK1
  2928 ;;      Params:         0       0       0
  2929 ;;      Locals:         0       0       0
  2930 ;;      Temps:          0       0       0
  2931 ;;      Totals:         0       0       0
  2932 ;;Total ram usage:        0 bytes
  2933 ;; Hardware stack levels used: 1
  2934 ;; Hardware stack levels required when called: 6
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_SYSTEM_Initialize
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942  03E4                     _ADC_Initialize:	
  2943                           ;psect for function _ADC_Initialize
  2944                           
  2945  03E4                     l1862:	
  2946                           ;incstack = 0
  2947                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  2948                           
  2949                           
  2950                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x50;
  2951  03E4  3050               	movlw	80
  2952  03E5  0021               	movlb	1	; select bank1
  2953  03E6  009E               	movwf	30	;volatile
  2954  03E7                     l1864:
  2955                           
  2956                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  2957  03E7  019B               	clrf	27	;volatile
  2958  03E8                     l1866:
  2959                           
  2960                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  2961  03E8  019C               	clrf	28	;volatile
  2962                           
  2963                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x1D;
  2964  03E9  301D               	movlw	29
  2965  03EA  009D               	movwf	29	;volatile
  2966  03EB                     l46:
  2967  03EB  0008               	return
  2968  03EC                     __end_of_ADC_Initialize:
  2969                           
  2970                           	psect	text17
  2971  0036                     __ptext17:	
  2972 ;; *************** function _povorot *****************
  2973 ;; Defined at:
  2974 ;;		line 454 in file "main.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;		None
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;		None
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, status,2, status,0, pclath, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMMON   BANK0   BANK1
  2988 ;;      Params:         0       0       0
  2989 ;;      Locals:         0       0       0
  2990 ;;      Temps:          0       0       0
  2991 ;;      Totals:         0       0       0
  2992 ;;Total ram usage:        0 bytes
  2993 ;; Hardware stack levels used: 1
  2994 ;; Hardware stack levels required when called: 7
  2995 ;; This function calls:
  2996 ;;		_go_close_short
  2997 ;;		_go_open
  2998 ;; This function is called by:
  2999 ;;		_main
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003  0036                     _povorot:	
  3004                           ;psect for function _povorot
  3005                           
  3006  0036                     l2130:	
  3007                           ;incstack = 0
  3008                           ; Regs used in _povorot: [wreg+status,2+status,0+pclath+cstack]
  3009                           
  3010                           
  3011                           ;main.c: 455:     if ((time_rotation > 120) &&
  3012  0036  3000               	movlw	0
  3013  0037  0020               	movlb	0	; select bank0
  3014  0038  0222               	subwf	_time_rotation+2,w
  3015  0039  1D03               	skipz
  3016  003A  2841               	goto	u1225
  3017  003B  3000               	movlw	0
  3018  003C  0221               	subwf	_time_rotation+1,w
  3019  003D  1D03               	skipz
  3020  003E  2841               	goto	u1225
  3021  003F  3079               	movlw	121
  3022  0040  0220               	subwf	_time_rotation,w
  3023  0041                     u1225:
  3024  0041  1C03               	skipc
  3025  0042  2844               	goto	u1221
  3026  0043  2845               	goto	u1220
  3027  0044                     u1221:
  3028  0044  2858               	goto	l2142
  3029  0045                     u1220:
  3030  0045                     l2132:
  3031  0045  1A78               	btfsc	_FF+1,4
  3032  0046  2848               	goto	u1231
  3033  0047  2849               	goto	u1230
  3034  0048                     u1231:
  3035  0048  2858               	goto	l2142
  3036  0049                     u1230:
  3037  0049                     l2134:
  3038  0049  19F8               	btfsc	_FF+1,3
  3039  004A  284C               	goto	u1241
  3040  004B  284D               	goto	u1240
  3041  004C                     u1241:
  3042  004C  2858               	goto	l2142
  3043  004D                     u1240:
  3044  004D                     l2136:
  3045  004D  1CF7               	btfss	_FF,1
  3046  004E  2850               	goto	u1251
  3047  004F  2851               	goto	u1250
  3048  0050                     u1251:
  3049  0050  2858               	goto	l2142
  3050  0051                     u1250:
  3051  0051                     l2138:
  3052  0051  1C7A               	btfss	_FF+3,0
  3053  0052  2854               	goto	u1261
  3054  0053  2855               	goto	u1260
  3055  0054                     u1261:
  3056  0054  2858               	goto	l2142
  3057  0055                     u1260:
  3058  0055                     l2140:
  3059                           
  3060                           ;main.c: 460:             ) {;main.c: 461:         go_close_short();
  3061  0055  3182  2297  3180   	fcall	_go_close_short
  3062  0058                     l2142:
  3063                           
  3064                           ;main.c: 464:     if ((time_rotation > (120 + 10 + 2 * 2)) &&
  3065  0058  3000               	movlw	0
  3066  0059  0020               	movlb	0	; select bank0
  3067  005A  0222               	subwf	_time_rotation+2,w
  3068  005B  1D03               	skipz
  3069  005C  2863               	goto	u1275
  3070  005D  3000               	movlw	0
  3071  005E  0221               	subwf	_time_rotation+1,w
  3072  005F  1D03               	skipz
  3073  0060  2863               	goto	u1275
  3074  0061  3087               	movlw	135
  3075  0062  0220               	subwf	_time_rotation,w
  3076  0063                     u1275:
  3077  0063  1C03               	skipc
  3078  0064  2866               	goto	u1271
  3079  0065  2867               	goto	u1270
  3080  0066                     u1271:
  3081  0066  2881               	goto	l462
  3082  0067                     u1270:
  3083  0067                     l2144:
  3084  0067  1E78               	btfss	_FF+1,4
  3085  0068  286A               	goto	u1281
  3086  0069  286B               	goto	u1280
  3087  006A                     u1281:
  3088  006A  2881               	goto	l462
  3089  006B                     u1280:
  3090  006B                     l2146:
  3091  006B  1DF8               	btfss	_FF+1,3
  3092  006C  286E               	goto	u1291
  3093  006D  286F               	goto	u1290
  3094  006E                     u1291:
  3095  006E  2881               	goto	l462
  3096  006F                     u1290:
  3097  006F                     l2148:
  3098  006F  1CF7               	btfss	_FF,1
  3099  0070  2872               	goto	u1301
  3100  0071  2873               	goto	u1300
  3101  0072                     u1301:
  3102  0072  2881               	goto	l462
  3103  0073                     u1300:
  3104  0073                     l2150:
  3105  0073  1C7A               	btfss	_FF+3,0
  3106  0074  2876               	goto	u1311
  3107  0075  2877               	goto	u1310
  3108  0076                     u1311:
  3109  0076  2881               	goto	l462
  3110  0077                     u1310:
  3111  0077                     l2152:
  3112                           
  3113                           ;main.c: 469:             ) {;main.c: 470:         go_open();
  3114  0077  3183  23DA  3180   	fcall	_go_open
  3115  007A                     l2154:
  3116                           
  3117                           ;main.c: 471:         time_rotation = 0;
  3118  007A  3000               	movlw	0
  3119  007B  0020               	movlb	0	; select bank0
  3120  007C  00A0               	movwf	_time_rotation
  3121  007D  3000               	movlw	0
  3122  007E  00A1               	movwf	_time_rotation+1
  3123  007F  3000               	movlw	0
  3124  0080  00A2               	movwf	_time_rotation+2
  3125  0081                     l462:
  3126  0081  0008               	return
  3127  0082                     __end_of_povorot:
  3128                           
  3129                           	psect	text18
  3130  0297                     __ptext18:	
  3131 ;; *************** function _go_close_short *****************
  3132 ;; Defined at:
  3133 ;;		line 183 in file "main.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;		None
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;		None
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  1    wreg      void 
  3140 ;; Registers used:
  3141 ;;		wreg
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMMON   BANK0   BANK1
  3147 ;;      Params:         0       0       0
  3148 ;;      Locals:         0       0       0
  3149 ;;      Temps:          2       0       0
  3150 ;;      Totals:         2       0       0
  3151 ;;Total ram usage:        2 bytes
  3152 ;; Hardware stack levels used: 1
  3153 ;; Hardware stack levels required when called: 6
  3154 ;; This function calls:
  3155 ;;		Nothing
  3156 ;; This function is called by:
  3157 ;;		_povorot
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161  0297                     _go_close_short:	
  3162                           ;psect for function _go_close_short
  3163                           
  3164  0297                     l1986:	
  3165                           ;incstack = 0
  3166                           ; Regs used in _go_close_short: [wreg]
  3167                           
  3168                           
  3169                           ;main.c: 184:     time_rotation = 0;
  3170  0297  3000               	movlw	0
  3171  0298  0020               	movlb	0	; select bank0
  3172  0299  00A0               	movwf	_time_rotation
  3173  029A  3000               	movlw	0
  3174  029B  00A1               	movwf	_time_rotation+1
  3175  029C  3000               	movlw	0
  3176  029D  00A2               	movwf	_time_rotation+2
  3177  029E                     l1988:
  3178  029E  0022               	movlb	2	; select bank2
  3179  029F  160E               	bsf	14,4	;volatile
  3180  02A0                     l1990:
  3181                           
  3182                           ;main.c: 186:     FF.bits.CLOSING = 1;
  3183  02A0  15F8               	bsf	_FF+1,3
  3184                           
  3185                           ;main.c: 187:     _delay((unsigned long)((2 * 1000)*(16000000/4000.0)));
  3186  02A1  3029               	movlw	41
  3187  02A2  00F4               	movwf	??_go_close_short+1
  3188  02A3  3096               	movlw	150
  3189  02A4  00F3               	movwf	??_go_close_short
  3190  02A5  307F               	movlw	127
  3191  02A6                     u1987:
  3192  02A6  0B89               	decfsz	9,f
  3193  02A7  2AA6               	goto	u1987
  3194  02A8  0BF3               	decfsz	??_go_close_short,f
  3195  02A9  2AA6               	goto	u1987
  3196  02AA  0BF4               	decfsz	??_go_close_short+1,f
  3197  02AB  2AA6               	goto	u1987
  3198  02AC  0000               	nop
  3199  02AD                     l1992:
  3200  02AD  0022               	movlb	2	; select bank2
  3201  02AE  168E               	bsf	14,5	;volatile
  3202  02AF                     l314:
  3203                           
  3204                           ;main.c: 189:     time_rele_power = 2;
  3205  02AF  3002               	movlw	2
  3206  02B0  0020               	movlb	0	; select bank0
  3207  02B1  00B1               	movwf	_time_rele_power
  3208  02B2  3000               	movlw	0
  3209  02B3  00B2               	movwf	_time_rele_power+1
  3210  02B4                     l1994:
  3211                           
  3212                           ;main.c: 190:     FF.bits.RELE_POWER_ON = 1;
  3213  02B4  16F8               	bsf	_FF+1,5
  3214  02B5                     l1996:
  3215                           
  3216                           ;main.c: 191:     FF.bits.RELE_CONTROL_ON = 1;
  3217  02B5  1778               	bsf	_FF+1,6
  3218  02B6                     l315:
  3219  02B6  0008               	return
  3220  02B7                     __end_of_go_close_short:
  3221                           
  3222                           	psect	text19
  3223  010D                     __ptext19:	
  3224 ;; *************** function _get_measure *****************
  3225 ;; Defined at:
  3226 ;;		line 227 in file "main.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;		None
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  res             2    0[BANK0 ] unsigned int 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1    wreg      void 
  3233 ;; Registers used:
  3234 ;;		wreg, status,2, status,0, pclath, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMMON   BANK0   BANK1
  3240 ;;      Params:         0       0       0
  3241 ;;      Locals:         0       2       0
  3242 ;;      Temps:          2       0       0
  3243 ;;      Totals:         2       2       0
  3244 ;;Total ram usage:        4 bytes
  3245 ;; Hardware stack levels used: 1
  3246 ;; Hardware stack levels required when called: 8
  3247 ;; This function calls:
  3248 ;;		_ADC_GetConversion
  3249 ;;		_start_alarm
  3250 ;; This function is called by:
  3251 ;;		_main
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255  010D                     _get_measure:	
  3256                           ;psect for function _get_measure
  3257                           
  3258  010D                     l349:	
  3259                           ;incstack = 0
  3260                           ; Regs used in _get_measure: [wreg+status,2+status,0+pclath+cstack]
  3261                           ;main.c: 228:     static unsigned char measures;;main.c: 229:     do { LATCbits.LATC1 = 
      +                          1; } while(0);
  3262                           
  3263  010D  0022               	movlb	2	; select bank2
  3264  010E  148E               	bsf	14,1	;volatile
  3265  010F                     l351:	
  3266                           ;main.c: 230:     do { ANSELCbits.ANSC3 = 1; } while(0);
  3267                           
  3268  010F  0023               	movlb	3	; select bank3
  3269  0110  158E               	bsf	14,3	;volatile
  3270  0111                     l2456:
  3271                           
  3272                           ;main.c: 231:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3273  0111  3006               	movlw	6
  3274  0112  00F5               	movwf	??_get_measure
  3275  0113  3030               	movlw	48
  3276  0114                     u1997:
  3277  0114  0B89               	decfsz	9,f
  3278  0115  2914               	goto	u1997
  3279  0116  0BF5               	decfsz	??_get_measure,f
  3280  0117  2914               	goto	u1997
  3281  0118  3200               	nop2
  3282  0119                     l2458:
  3283                           
  3284                           ;main.c: 232:     unsigned res = ADC_GetConversion(PIN_WSP_STATE);
  3285  0119  3007               	movlw	7
  3286  011A  3182  22F1  3181   	fcall	_ADC_GetConversion
  3287  011D  00F5               	movwf	??_get_measure
  3288  011E  01F6               	clrf	??_get_measure+1
  3289  011F  0875               	movf	??_get_measure,w
  3290  0120  0020               	movlb	0	; select bank0
  3291  0121  00C5               	movwf	get_measure@res
  3292  0122  0876               	movf	??_get_measure+1,w
  3293  0123  00C6               	movwf	get_measure@res+1
  3294  0124                     l2460:
  3295  0124  0023               	movlb	3	; select bank3
  3296  0125  118E               	bcf	14,3	;volatile
  3297  0126                     l2462:
  3298  0126  0022               	movlb	2	; select bank2
  3299  0127  108E               	bcf	14,1	;volatile
  3300  0128                     l2464:
  3301                           
  3302                           ;main.c: 235:     if (res < BAD_WSP_VOLTAGE) measures++;
  3303  0128  3000               	movlw	0
  3304  0129  0020               	movlb	0	; select bank0
  3305  012A  0246               	subwf	get_measure@res+1,w
  3306  012B  3080               	movlw	128
  3307  012C  1903               	skipnz
  3308  012D  0245               	subwf	get_measure@res,w
  3309  012E  1803               	skipnc
  3310  012F  2931               	goto	u1761
  3311  0130  2932               	goto	u1760
  3312  0131                     u1761:
  3313  0131  2937               	goto	l2468
  3314  0132                     u1760:
  3315  0132                     l2466:
  3316  0132  3001               	movlw	1
  3317  0133  00F5               	movwf	??_get_measure
  3318  0134  0875               	movf	??_get_measure,w
  3319  0135  07BA               	addwf	get_measure@measures,f
  3320  0136  2941               	goto	l2472
  3321  0137                     l2468:
  3322  0137  3000               	movlw	0
  3323  0138  0246               	subwf	get_measure@res+1,w
  3324  0139  308F               	movlw	143
  3325  013A  1903               	skipnz
  3326  013B  0245               	subwf	get_measure@res,w
  3327  013C  1C03               	skipc
  3328  013D  293F               	goto	u1771
  3329  013E  2940               	goto	u1770
  3330  013F                     u1771:
  3331  013F  2941               	goto	l2472
  3332  0140                     u1770:
  3333  0140                     l2470:
  3334  0140  01BA               	clrf	get_measure@measures
  3335  0141                     l2472:
  3336                           
  3337                           ;main.c: 237:     if (measures > 8) start_alarm();
  3338  0141  3009               	movlw	9
  3339  0142  023A               	subwf	get_measure@measures,w
  3340  0143  1C03               	skipc
  3341  0144  2946               	goto	u1781
  3342  0145  2947               	goto	u1780
  3343  0146                     u1781:
  3344  0146  294A               	goto	l361
  3345  0147                     u1780:
  3346  0147                     l2474:
  3347  0147  3183  2346  3181   	fcall	_start_alarm
  3348  014A                     l361:
  3349  014A  0008               	return
  3350  014B                     __end_of_get_measure:
  3351                           
  3352                           	psect	text20
  3353  0346                     __ptext20:	
  3354 ;; *************** function _start_alarm *****************
  3355 ;; Defined at:
  3356 ;;		line 216 in file "main.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  1    wreg      void 
  3363 ;; Registers used:
  3364 ;;		wreg, status,2, status,0, pclath, cstack
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMMON   BANK0   BANK1
  3370 ;;      Params:         0       0       0
  3371 ;;      Locals:         0       0       0
  3372 ;;      Temps:          0       0       0
  3373 ;;      Totals:         0       0       0
  3374 ;;Total ram usage:        0 bytes
  3375 ;; Hardware stack levels used: 1
  3376 ;; Hardware stack levels required when called: 7
  3377 ;; This function calls:
  3378 ;;		_go_close
  3379 ;;		_go_close_alt
  3380 ;; This function is called by:
  3381 ;;		_get_measure
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385  0346                     _start_alarm:	
  3386                           ;psect for function _start_alarm
  3387                           
  3388  0346                     l2444:	
  3389                           ;incstack = 0
  3390                           ; Regs used in _start_alarm: [wreg+status,2+status,0+pclath+cstack]
  3391                           
  3392                           
  3393                           ;main.c: 217:     FF.bits.ALARM_ON = 1;
  3394  0346  1477               	bsf	_FF,0
  3395  0347                     l339:	
  3396                           ;main.c: 218:     do { LATCbits.LATC0 = 1; } while(0);
  3397                           
  3398  0347  0022               	movlb	2	; select bank2
  3399  0348  140E               	bsf	14,0	;volatile
  3400  0349                     l340:
  3401                           
  3402                           ;main.c: 219:     INTCONbits.TMR0IE = 1;
  3403  0349  168B               	bsf	11,5	;volatile
  3404                           
  3405                           ;main.c: 220:     if (FF.bits.NORMAL_WORK_MODE_ON) {
  3406  034A  1C7A               	btfss	_FF+3,0
  3407  034B  2B4D               	goto	u1731
  3408  034C  2B4E               	goto	u1730
  3409  034D                     u1731:
  3410  034D  2B52               	goto	l341
  3411  034E                     u1730:
  3412  034E                     l2446:
  3413                           
  3414                           ;main.c: 221:         go_close();
  3415  034E  3182  22B7  3183   	fcall	_go_close
  3416                           
  3417                           ;main.c: 222:     } else if (FF.bits.UNIVERSAL_VORK_MODE_ON) {
  3418  0351  2B59               	goto	l344
  3419  0352                     l341:
  3420  0352  1CFA               	btfss	_FF+3,1
  3421  0353  2B55               	goto	u1741
  3422  0354  2B56               	goto	u1740
  3423  0355                     u1741:
  3424  0355  2B59               	goto	l344
  3425  0356                     u1740:
  3426  0356                     l2448:
  3427                           
  3428                           ;main.c: 223:         go_close_alt();
  3429  0356  3184  240A  3183   	fcall	_go_close_alt
  3430  0359                     l344:
  3431  0359  0008               	return
  3432  035A                     __end_of_start_alarm:
  3433                           
  3434                           	psect	text21
  3435  02F1                     __ptext21:	
  3436 ;; *************** function _ADC_GetConversion *****************
  3437 ;; Defined at:
  3438 ;;		line 112 in file "mcc_generated_files/adc.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;  channel         1    wreg     enum E2178
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;  channel         1    4[COMMON] enum E2178
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      unsigned char 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMMON   BANK0   BANK1
  3452 ;;      Params:         0       0       0
  3453 ;;      Locals:         1       0       0
  3454 ;;      Temps:          1       0       0
  3455 ;;      Totals:         2       0       0
  3456 ;;Total ram usage:        2 bytes
  3457 ;; Hardware stack levels used: 1
  3458 ;; Hardware stack levels required when called: 6
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_get_measure
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466  02F1                     _ADC_GetConversion:	
  3467                           ;psect for function _ADC_GetConversion
  3468                           
  3469                           
  3470                           ;incstack = 0
  3471                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3472                           ;ADC_GetConversion@channel stored from wreg
  3473  02F1  00F4               	movwf	ADC_GetConversion@channel
  3474  02F2                     l2432:
  3475                           
  3476                           ;mcc_generated_files/adc.c: 112: char ADC_GetConversion(adc_channel_t channel);mcc_gener
      +                          ated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = channel;
  3477  02F2  0874               	movf	ADC_GetConversion@channel,w
  3478  02F3  00F3               	movwf	??_ADC_GetConversion
  3479  02F4  0DF3               	rlf	??_ADC_GetConversion,f
  3480  02F5  0DF3               	rlf	??_ADC_GetConversion,f
  3481  02F6  0021               	movlb	1	; select bank1
  3482  02F7  081D               	movf	29,w	;volatile
  3483  02F8  0673               	xorwf	??_ADC_GetConversion,w
  3484  02F9  3983               	andlw	-125
  3485  02FA  0673               	xorwf	??_ADC_GetConversion,w
  3486  02FB  009D               	movwf	29	;volatile
  3487  02FC                     l2434:
  3488                           
  3489                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  3490  02FC  141D               	bsf	29,0	;volatile
  3491  02FD                     l2436:
  3492                           
  3493                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  3494  02FD  3006               	movlw	6
  3495  02FE                     u2007:
  3496  02FE  0B89               	decfsz	9,f
  3497  02FF  2AFE               	goto	u2007
  3498  0300  3200               	nop2
  3499  0301                     l2438:
  3500                           
  3501                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  3502  0301  0021               	movlb	1	; select bank1
  3503  0302  149D               	bsf	29,1	;volatile
  3504  0303                     l61:	
  3505                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  3506                           
  3507                           
  3508                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  3509  0303  189D               	btfsc	29,1	;volatile
  3510  0304  2B06               	goto	u1721
  3511  0305  2B07               	goto	u1720
  3512  0306                     u1721:
  3513  0306  2B03               	goto	l61
  3514  0307                     u1720:
  3515  0307                     l2440:
  3516                           
  3517                           ;mcc_generated_files/adc.c: 132:     return (ADRESH);
  3518  0307  081C               	movf	28,w	;volatile
  3519  0308                     l64:
  3520  0308  0008               	return
  3521  0309                     __end_of_ADC_GetConversion:
  3522                           
  3523                           	psect	text22
  3524  0221                     __ptext22:	
  3525 ;; *************** function _get_jump *****************
  3526 ;; Defined at:
  3527 ;;		line 325 in file "main.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;		None
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;		None
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  1    wreg      void 
  3534 ;; Registers used:
  3535 ;;		wreg, status,2, status,0
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMMON   BANK0   BANK1
  3541 ;;      Params:         0       0       0
  3542 ;;      Locals:         0       0       0
  3543 ;;      Temps:          1       0       0
  3544 ;;      Totals:         1       0       0
  3545 ;;Total ram usage:        1 bytes
  3546 ;; Hardware stack levels used: 1
  3547 ;; Hardware stack levels required when called: 6
  3548 ;; This function calls:
  3549 ;;		Nothing
  3550 ;; This function is called by:
  3551 ;;		_main
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555  0221                     _get_jump:	
  3556                           ;psect for function _get_jump
  3557                           
  3558  0221                     l404:	
  3559                           ;incstack = 0
  3560                           ; Regs used in _get_jump: [wreg+status,2+status,0]
  3561                           ;main.c: 327:     static signed char jump_counter;;main.c: 328:     do { ANSELAbits.ANSA
      +                          1 = 0; } while(0);
  3562                           
  3563  0221  0023               	movlb	3	; select bank3
  3564  0222  108C               	bcf	12,1	;volatile
  3565  0223                     l406:	
  3566                           ;main.c: 329:     do { TRISAbits.TRISA1 = 1; } while(0);
  3567                           
  3568  0223  0021               	movlb	1	; select bank1
  3569  0224  148C               	bsf	12,1	;volatile
  3570  0225                     l407:
  3571                           
  3572                           ;main.c: 330:     if (PORTAbits.RA1) jump_counter++;
  3573  0225  0020               	movlb	0	; select bank0
  3574  0226  1C8C               	btfss	12,1	;volatile
  3575  0227  2A29               	goto	u1191
  3576  0228  2A2A               	goto	u1190
  3577  0229                     u1191:
  3578  0229  2A2F               	goto	l2110
  3579  022A                     u1190:
  3580  022A                     l2108:
  3581  022A  3001               	movlw	1
  3582  022B  00F3               	movwf	??_get_jump
  3583  022C  0873               	movf	??_get_jump,w
  3584  022D  07B7               	addwf	get_jump@jump_counter,f
  3585  022E  2A33               	goto	l2112
  3586  022F                     l2110:
  3587  022F  30FF               	movlw	255
  3588  0230  00F3               	movwf	??_get_jump
  3589  0231  0873               	movf	??_get_jump,w
  3590  0232  07B7               	addwf	get_jump@jump_counter,f
  3591  0233                     l2112:
  3592                           
  3593                           ;main.c: 339:     if (jump_counter > 10) {
  3594  0233  0837               	movf	get_jump@jump_counter,w
  3595  0234  3A80               	xorlw	128
  3596  0235  3E75               	addlw	-139
  3597  0236  1C03               	skipc
  3598  0237  2A39               	goto	u1201
  3599  0238  2A3A               	goto	u1200
  3600  0239                     u1201:
  3601  0239  2A41               	goto	l2120
  3602  023A                     u1200:
  3603  023A                     l2114:
  3604                           
  3605                           ;main.c: 340:         jump_counter = 10;
  3606  023A  300A               	movlw	10
  3607  023B  00F3               	movwf	??_get_jump
  3608  023C  0873               	movf	??_get_jump,w
  3609  023D  00B7               	movwf	get_jump@jump_counter
  3610  023E                     l2116:
  3611                           
  3612                           ;main.c: 341:         FF.bits.JUMP_LOW = 0;
  3613  023E  13F7               	bcf	_FF,7
  3614  023F                     l2118:
  3615                           
  3616                           ;main.c: 342:         FF.bits.JUMP_HIGH = 1;
  3617  023F  1478               	bsf	_FF+1,0
  3618                           
  3619                           ;main.c: 343:     } else if (jump_counter<-10) {
  3620  0240  2A4E               	goto	l413
  3621  0241                     l2120:
  3622  0241  0837               	movf	get_jump@jump_counter,w
  3623  0242  3A80               	xorlw	128
  3624  0243  3E8A               	addlw	138
  3625  0244  1803               	skipnc
  3626  0245  2A47               	goto	u1211
  3627  0246  2A48               	goto	u1210
  3628  0247                     u1211:
  3629  0247  2A4E               	goto	l413
  3630  0248                     u1210:
  3631  0248                     l2122:
  3632                           
  3633                           ;main.c: 344:         jump_counter = -10;
  3634  0248  30F6               	movlw	246
  3635  0249  00F3               	movwf	??_get_jump
  3636  024A  0873               	movf	??_get_jump,w
  3637  024B  00B7               	movwf	get_jump@jump_counter
  3638  024C                     l2124:
  3639                           
  3640                           ;main.c: 345:         FF.bits.JUMP_LOW = 1;
  3641  024C  17F7               	bsf	_FF,7
  3642  024D                     l2126:
  3643                           
  3644                           ;main.c: 346:         FF.bits.JUMP_HIGH = 0;
  3645  024D  1078               	bcf	_FF+1,0
  3646  024E                     l413:
  3647  024E  0008               	return
  3648  024F                     __end_of_get_jump:
  3649                           
  3650                           	psect	text23
  3651  014B                     __ptext23:	
  3652 ;; *************** function _get_fun *****************
  3653 ;; Defined at:
  3654 ;;		line 241 in file "main.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;		None
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;		None
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  1    wreg      void 
  3661 ;; Registers used:
  3662 ;;		wreg, status,2, status,0
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMMON   BANK0   BANK1
  3668 ;;      Params:         0       0       0
  3669 ;;      Locals:         0       0       0
  3670 ;;      Temps:          1       0       0
  3671 ;;      Totals:         1       0       0
  3672 ;;Total ram usage:        1 bytes
  3673 ;; Hardware stack levels used: 1
  3674 ;; Hardware stack levels required when called: 6
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		_main
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682  014B                     _get_fun:	
  3683                           ;psect for function _get_fun
  3684                           
  3685  014B                     l366:	
  3686                           ;incstack = 0
  3687                           ; Regs used in _get_fun: [wreg+status,2+status,0]
  3688                           ;main.c: 242:     static signed char fun_counter;;main.c: 243:     do { LATCbits.LATC1 =
      +                           1; } while(0);
  3689                           
  3690  014B  0022               	movlb	2	; select bank2
  3691  014C  148E               	bsf	14,1	;volatile
  3692  014D                     l2076:
  3693                           
  3694                           ;main.c: 244:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3695  014D  3006               	movlw	6
  3696  014E  00F3               	movwf	??_get_fun
  3697  014F  3030               	movlw	48
  3698  0150                     u2017:
  3699  0150  0B89               	decfsz	9,f
  3700  0151  2950               	goto	u2017
  3701  0152  0BF3               	decfsz	??_get_fun,f
  3702  0153  2950               	goto	u2017
  3703  0154  3200               	nop2
  3704  0155                     l2078:
  3705  0155  0023               	movlb	3	; select bank3
  3706  0156  110E               	bcf	14,2	;volatile
  3707  0157                     l2080:
  3708  0157  0021               	movlb	1	; select bank1
  3709  0158  150E               	bsf	14,2	;volatile
  3710  0159                     l2082:
  3711                           
  3712                           ;main.c: 248:     if (PORTCbits.RC2) fun_counter--;
  3713  0159  0020               	movlb	0	; select bank0
  3714  015A  1D0E               	btfss	14,2	;volatile
  3715  015B  295D               	goto	u1161
  3716  015C  295E               	goto	u1160
  3717  015D                     u1161:
  3718  015D  2963               	goto	l2086
  3719  015E                     u1160:
  3720  015E                     l2084:
  3721  015E  30FF               	movlw	255
  3722  015F  00F3               	movwf	??_get_fun
  3723  0160  0873               	movf	??_get_fun,w
  3724  0161  07B9               	addwf	get_fun@fun_counter,f
  3725  0162  2967               	goto	l2088
  3726  0163                     l2086:
  3727  0163  3001               	movlw	1
  3728  0164  00F3               	movwf	??_get_fun
  3729  0165  0873               	movf	??_get_fun,w
  3730  0166  07B9               	addwf	get_fun@fun_counter,f
  3731  0167                     l2088:
  3732  0167  0022               	movlb	2	; select bank2
  3733  0168  108E               	bcf	14,1	;volatile
  3734  0169                     l2090:
  3735                           
  3736                           ;main.c: 257:     if (fun_counter > 10) {
  3737  0169  0020               	movlb	0	; select bank0
  3738  016A  0839               	movf	get_fun@fun_counter,w
  3739  016B  3A80               	xorlw	128
  3740  016C  3E75               	addlw	-139
  3741  016D  1C03               	skipc
  3742  016E  2970               	goto	u1171
  3743  016F  2971               	goto	u1170
  3744  0170                     u1171:
  3745  0170  2978               	goto	l2098
  3746  0171                     u1170:
  3747  0171                     l2092:
  3748                           
  3749                           ;main.c: 258:         fun_counter = 10;
  3750  0171  300A               	movlw	10
  3751  0172  00F3               	movwf	??_get_fun
  3752  0173  0873               	movf	??_get_fun,w
  3753  0174  00B9               	movwf	get_fun@fun_counter
  3754  0175                     l2094:
  3755                           
  3756                           ;main.c: 259:         FF.bits.FUN_LOW = 0;
  3757  0175  11F7               	bcf	_FF,3
  3758  0176                     l2096:
  3759                           
  3760                           ;main.c: 260:         FF.bits.FUN_HIGH = 1;
  3761  0176  1577               	bsf	_FF,2
  3762                           
  3763                           ;main.c: 261:     } else if (fun_counter<-10) {
  3764  0177  2985               	goto	l379
  3765  0178                     l2098:
  3766  0178  0839               	movf	get_fun@fun_counter,w
  3767  0179  3A80               	xorlw	128
  3768  017A  3E8A               	addlw	138
  3769  017B  1803               	skipnc
  3770  017C  297E               	goto	u1181
  3771  017D  297F               	goto	u1180
  3772  017E                     u1181:
  3773  017E  2985               	goto	l379
  3774  017F                     u1180:
  3775  017F                     l2100:
  3776                           
  3777                           ;main.c: 262:         fun_counter = -10;
  3778  017F  30F6               	movlw	246
  3779  0180  00F3               	movwf	??_get_fun
  3780  0181  0873               	movf	??_get_fun,w
  3781  0182  00B9               	movwf	get_fun@fun_counter
  3782  0183                     l2102:
  3783                           
  3784                           ;main.c: 263:         FF.bits.FUN_LOW = 1;
  3785  0183  15F7               	bsf	_FF,3
  3786  0184                     l2104:
  3787                           
  3788                           ;main.c: 264:         FF.bits.FUN_HIGH = 0;
  3789  0184  1177               	bcf	_FF,2
  3790  0185                     l379:
  3791  0185  0008               	return
  3792  0186                     __end_of_get_fun:
  3793                           
  3794                           	psect	text24
  3795  00CA                     __ptext24:	
  3796 ;; *************** function _fun_work *****************
  3797 ;; Defined at:
  3798 ;;		line 476 in file "main.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;		None
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;		None
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  1    wreg      void 
  3805 ;; Registers used:
  3806 ;;		wreg, status,2, status,0, pclath, cstack
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMMON   BANK0   BANK1
  3812 ;;      Params:         0       0       0
  3813 ;;      Locals:         0       0       0
  3814 ;;      Temps:          0       0       0
  3815 ;;      Totals:         0       0       0
  3816 ;;Total ram usage:        0 bytes
  3817 ;; Hardware stack levels used: 1
  3818 ;; Hardware stack levels required when called: 8
  3819 ;; This function calls:
  3820 ;;		_beep_short
  3821 ;;		_go_close
  3822 ;;		_go_close_alt
  3823 ;;		_go_open
  3824 ;;		_go_open_alt
  3825 ;; This function is called by:
  3826 ;;		_main
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830  00CA                     _fun_work:	
  3831                           ;psect for function _fun_work
  3832                           
  3833  00CA                     l2478:	
  3834                           ;incstack = 0
  3835                           ; Regs used in _fun_work: [wreg+status,2+status,0+pclath+cstack]
  3836                           
  3837                           
  3838                           ;main.c: 477:     {;main.c: 478:         if (FF.bits.FUN_LOW &&
  3839  00CA  1DF7               	btfss	_FF,3
  3840  00CB  28CD               	goto	u1791
  3841  00CC  28CE               	goto	u1790
  3842  00CD                     u1791:
  3843  00CD  28ED               	goto	l2494
  3844  00CE                     u1790:
  3845  00CE                     l2480:
  3846  00CE  1CF7               	btfss	_FF,1
  3847  00CF  28D1               	goto	u1801
  3848  00D0  28D2               	goto	u1800
  3849  00D1                     u1801:
  3850  00D1  28ED               	goto	l2494
  3851  00D2                     u1800:
  3852  00D2                     l2482:
  3853  00D2  1E78               	btfss	_FF+1,4
  3854  00D3  28D5               	goto	u1811
  3855  00D4  28D6               	goto	u1810
  3856  00D5                     u1811:
  3857  00D5  28ED               	goto	l2494
  3858  00D6                     u1810:
  3859  00D6                     l2484:
  3860  00D6  1AF8               	btfsc	_FF+1,5
  3861  00D7  28D9               	goto	u1821
  3862  00D8  28DA               	goto	u1820
  3863  00D9                     u1821:
  3864  00D9  28ED               	goto	l2494
  3865  00DA                     u1820:
  3866  00DA                     l2486:
  3867                           
  3868                           ;main.c: 481:                 !FF.bits.RELE_POWER_ON) {;main.c: 483:             beep_sh
      +                          ort(1);
  3869  00DA  3001               	movlw	1
  3870  00DB  3183  23B0  3180   	fcall	_beep_short
  3871  00DE                     l2488:
  3872                           
  3873                           ;main.c: 485:             if (FF.bits.NORMAL_WORK_MODE_ON) go_open();
  3874  00DE  1C7A               	btfss	_FF+3,0
  3875  00DF  28E1               	goto	u1831
  3876  00E0  28E2               	goto	u1830
  3877  00E1                     u1831:
  3878  00E1  28E6               	goto	l466
  3879  00E2                     u1830:
  3880  00E2                     l2490:
  3881  00E2  3183  23DA  3180   	fcall	_go_open
  3882  00E5  28ED               	goto	l2494
  3883  00E6                     l466:	
  3884                           ;main.c: 486:             else if (FF.bits.UNIVERSAL_VORK_MODE_ON) go_open_alt();
  3885                           
  3886  00E6  1CFA               	btfss	_FF+3,1
  3887  00E7  28E9               	goto	u1841
  3888  00E8  28EA               	goto	u1840
  3889  00E9                     u1841:
  3890  00E9  28ED               	goto	l2494
  3891  00EA                     u1840:
  3892  00EA                     l2492:
  3893  00EA  3184  2405  3180   	fcall	_go_open_alt
  3894  00ED                     l2494:
  3895                           
  3896                           ;main.c: 488:         if (!FF.bits.FUN_LOW &&
  3897  00ED  19F7               	btfsc	_FF,3
  3898  00EE  28F0               	goto	u1851
  3899  00EF  28F1               	goto	u1850
  3900  00F0                     u1851:
  3901  00F0  290C               	goto	l473
  3902  00F1                     u1850:
  3903  00F1                     l2496:
  3904  00F1  1D78               	btfss	_FF+1,2
  3905  00F2  28F4               	goto	u1861
  3906  00F3  28F5               	goto	u1860
  3907  00F4                     u1861:
  3908  00F4  290C               	goto	l473
  3909  00F5                     u1860:
  3910  00F5                     l2498:
  3911  00F5  1AF8               	btfsc	_FF+1,5
  3912  00F6  28F8               	goto	u1871
  3913  00F7  28F9               	goto	u1870
  3914  00F8                     u1871:
  3915  00F8  290C               	goto	l473
  3916  00F9                     u1870:
  3917  00F9                     l2500:
  3918                           
  3919                           ;main.c: 490:                 !FF.bits.RELE_POWER_ON) {;main.c: 492:             beep_sh
      +                          ort(2);
  3920  00F9  3002               	movlw	2
  3921  00FA  3183  23B0  3180   	fcall	_beep_short
  3922  00FD                     l2502:
  3923                           
  3924                           ;main.c: 494:             if (FF.bits.NORMAL_WORK_MODE_ON) go_close();
  3925  00FD  1C7A               	btfss	_FF+3,0
  3926  00FE  2900               	goto	u1881
  3927  00FF  2901               	goto	u1880
  3928  0100                     u1881:
  3929  0100  2905               	goto	l470
  3930  0101                     u1880:
  3931  0101                     l2504:
  3932  0101  3182  22B7  3180   	fcall	_go_close
  3933  0104  290C               	goto	l473
  3934  0105                     l470:	
  3935                           ;main.c: 495:             else if (FF.bits.UNIVERSAL_VORK_MODE_ON) go_close_alt();
  3936                           
  3937  0105  1CFA               	btfss	_FF+3,1
  3938  0106  2908               	goto	u1891
  3939  0107  2909               	goto	u1890
  3940  0108                     u1891:
  3941  0108  290C               	goto	l473
  3942  0109                     u1890:
  3943  0109                     l2506:
  3944  0109  3184  240A  3180   	fcall	_go_close_alt
  3945  010C                     l473:
  3946  010C  0008               	return
  3947  010D                     __end_of_fun_work:
  3948                           
  3949                           	psect	text25
  3950  0405                     __ptext25:	
  3951 ;; *************** function _go_open_alt *****************
  3952 ;; Defined at:
  3953 ;;		line 209 in file "main.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;		None
  3956 ;; Auto vars:     Size  Location     Type
  3957 ;;		None
  3958 ;; Return value:  Size  Location     Type
  3959 ;;                  1    wreg      void 
  3960 ;; Registers used:
  3961 ;;		None
  3962 ;; Tracked objects:
  3963 ;;		On entry : 0/0
  3964 ;;		On exit  : 0/0
  3965 ;;		Unchanged: 0/0
  3966 ;; Data sizes:     COMMON   BANK0   BANK1
  3967 ;;      Params:         0       0       0
  3968 ;;      Locals:         0       0       0
  3969 ;;      Temps:          0       0       0
  3970 ;;      Totals:         0       0       0
  3971 ;;Total ram usage:        0 bytes
  3972 ;; Hardware stack levels used: 1
  3973 ;; Hardware stack levels required when called: 6
  3974 ;; This function calls:
  3975 ;;		Nothing
  3976 ;; This function is called by:
  3977 ;;		_fun_work
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981  0405                     _go_open_alt:	
  3982                           ;psect for function _go_open_alt
  3983                           
  3984  0405                     l1392:	
  3985                           ;incstack = 0
  3986                           ; Regs used in _go_open_alt: []
  3987                           
  3988                           
  3989                           ;main.c: 210:     FF.bits.CLOSED = 0;
  3990  0405  1278               	bcf	_FF+1,4
  3991  0406                     l332:	
  3992                           ;main.c: 211:     do { LATCbits.LATC4 = 0; } while(0);
  3993                           
  3994  0406  0022               	movlb	2	; select bank2
  3995  0407  120E               	bcf	14,4	;volatile
  3996  0408                     l334:	
  3997                           ;main.c: 212:     do { LATCbits.LATC5 = 0; } while(0);
  3998                           
  3999  0408  128E               	bcf	14,5	;volatile
  4000  0409                     l336:
  4001  0409  0008               	return
  4002  040A                     __end_of_go_open_alt:
  4003                           
  4004                           	psect	text26
  4005  03DA                     __ptext26:	
  4006 ;; *************** function _go_open *****************
  4007 ;; Defined at:
  4008 ;;		line 195 in file "main.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;		None
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;		None
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  1    wreg      void 
  4015 ;; Registers used:
  4016 ;;		wreg
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMMON   BANK0   BANK1
  4022 ;;      Params:         0       0       0
  4023 ;;      Locals:         0       0       0
  4024 ;;      Temps:          0       0       0
  4025 ;;      Totals:         0       0       0
  4026 ;;Total ram usage:        0 bytes
  4027 ;; Hardware stack levels used: 1
  4028 ;; Hardware stack levels required when called: 6
  4029 ;; This function calls:
  4030 ;;		Nothing
  4031 ;; This function is called by:
  4032 ;;		_povorot
  4033 ;;		_fun_work
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037  03DA                     _go_open:	
  4038                           ;psect for function _go_open
  4039                           
  4040  03DA                     l318:	
  4041                           ;incstack = 0
  4042                           ; Regs used in _go_open: [wreg]
  4043                           ;main.c: 196:     do { LATCbits.LATC4 = 0; } while(0);
  4044                           
  4045  03DA  0022               	movlb	2	; select bank2
  4046  03DB  120E               	bcf	14,4	;volatile
  4047  03DC                     l320:	
  4048                           ;main.c: 197:     do { LATCbits.LATC5 = 1; } while(0);
  4049                           
  4050  03DC  168E               	bsf	14,5	;volatile
  4051  03DD                     l2000:
  4052                           
  4053                           ;main.c: 198:     time_rele_power = 10;
  4054  03DD  300A               	movlw	10
  4055  03DE  0020               	movlb	0	; select bank0
  4056  03DF  00B1               	movwf	_time_rele_power
  4057  03E0  3000               	movlw	0
  4058  03E1  00B2               	movwf	_time_rele_power+1
  4059  03E2                     l2002:
  4060                           
  4061                           ;main.c: 199:     FF.bits.RELE_POWER_ON = 1;
  4062  03E2  16F8               	bsf	_FF+1,5
  4063  03E3                     l322:
  4064  03E3  0008               	return
  4065  03E4                     __end_of_go_open:
  4066                           
  4067                           	psect	text27
  4068  040A                     __ptext27:	
  4069 ;; *************** function _go_close_alt *****************
  4070 ;; Defined at:
  4071 ;;		line 203 in file "main.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;		None
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;		None
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      void 
  4078 ;; Registers used:
  4079 ;;		None
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMMON   BANK0   BANK1
  4085 ;;      Params:         0       0       0
  4086 ;;      Locals:         0       0       0
  4087 ;;      Temps:          0       0       0
  4088 ;;      Totals:         0       0       0
  4089 ;;Total ram usage:        0 bytes
  4090 ;; Hardware stack levels used: 1
  4091 ;; Hardware stack levels required when called: 6
  4092 ;; This function calls:
  4093 ;;		Nothing
  4094 ;; This function is called by:
  4095 ;;		_start_alarm
  4096 ;;		_fun_work
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100  040A                     _go_close_alt:	
  4101                           ;psect for function _go_close_alt
  4102                           
  4103  040A                     l2398:	
  4104                           ;incstack = 0
  4105                           ; Regs used in _go_close_alt: []
  4106                           
  4107                           
  4108                           ;main.c: 204:     FF.bits.CLOSED = 1;
  4109  040A  1678               	bsf	_FF+1,4
  4110  040B                     l325:	
  4111                           ;main.c: 205:     do { LATCbits.LATC4 = 0; } while(0);
  4112                           
  4113  040B  0022               	movlb	2	; select bank2
  4114  040C  120E               	bcf	14,4	;volatile
  4115  040D                     l327:	
  4116                           ;main.c: 206:     do { LATCbits.LATC5 = 1; } while(0);
  4117                           
  4118  040D  168E               	bsf	14,5	;volatile
  4119  040E                     l329:
  4120  040E  0008               	return
  4121  040F                     __end_of_go_close_alt:
  4122                           
  4123                           	psect	text28
  4124  02B7                     __ptext28:	
  4125 ;; *************** function _go_close *****************
  4126 ;; Defined at:
  4127 ;;		line 171 in file "main.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;		None
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;		None
  4132 ;; Return value:  Size  Location     Type
  4133 ;;                  1    wreg      void 
  4134 ;; Registers used:
  4135 ;;		wreg
  4136 ;; Tracked objects:
  4137 ;;		On entry : 0/0
  4138 ;;		On exit  : 0/0
  4139 ;;		Unchanged: 0/0
  4140 ;; Data sizes:     COMMON   BANK0   BANK1
  4141 ;;      Params:         0       0       0
  4142 ;;      Locals:         0       0       0
  4143 ;;      Temps:          2       0       0
  4144 ;;      Totals:         2       0       0
  4145 ;;Total ram usage:        2 bytes
  4146 ;; Hardware stack levels used: 1
  4147 ;; Hardware stack levels required when called: 6
  4148 ;; This function calls:
  4149 ;;		Nothing
  4150 ;; This function is called by:
  4151 ;;		_start_alarm
  4152 ;;		_fun_work
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156  02B7                     _go_close:	
  4157                           ;psect for function _go_close
  4158                           
  4159  02B7                     l2384:	
  4160                           ;incstack = 0
  4161                           ; Regs used in _go_close: [wreg]
  4162                           
  4163                           
  4164                           ;main.c: 172:     time_rotation = 0;
  4165  02B7  3000               	movlw	0
  4166  02B8  0020               	movlb	0	; select bank0
  4167  02B9  00A0               	movwf	_time_rotation
  4168  02BA  3000               	movlw	0
  4169  02BB  00A1               	movwf	_time_rotation+1
  4170  02BC  3000               	movlw	0
  4171  02BD  00A2               	movwf	_time_rotation+2
  4172  02BE                     l2386:
  4173  02BE  0022               	movlb	2	; select bank2
  4174  02BF  160E               	bsf	14,4	;volatile
  4175  02C0                     l2388:
  4176                           
  4177                           ;main.c: 174:     FF.bits.CLOSING = 1;
  4178  02C0  15F8               	bsf	_FF+1,3
  4179                           
  4180                           ;main.c: 175:     _delay((unsigned long)((2 * 1000)*(16000000/4000.0)));
  4181  02C1  3029               	movlw	41
  4182  02C2  00F4               	movwf	??_go_close+1
  4183  02C3  3096               	movlw	150
  4184  02C4  00F3               	movwf	??_go_close
  4185  02C5  307F               	movlw	127
  4186  02C6                     u2027:
  4187  02C6  0B89               	decfsz	9,f
  4188  02C7  2AC6               	goto	u2027
  4189  02C8  0BF3               	decfsz	??_go_close,f
  4190  02C9  2AC6               	goto	u2027
  4191  02CA  0BF4               	decfsz	??_go_close+1,f
  4192  02CB  2AC6               	goto	u2027
  4193  02CC  0000               	nop
  4194  02CD                     l2390:
  4195  02CD  0022               	movlb	2	; select bank2
  4196  02CE  168E               	bsf	14,5	;volatile
  4197  02CF                     l307:
  4198                           
  4199                           ;main.c: 177:     time_rele_power = 10;
  4200  02CF  300A               	movlw	10
  4201  02D0  0020               	movlb	0	; select bank0
  4202  02D1  00B1               	movwf	_time_rele_power
  4203  02D2  3000               	movlw	0
  4204  02D3  00B2               	movwf	_time_rele_power+1
  4205  02D4                     l2392:
  4206                           
  4207                           ;main.c: 178:     FF.bits.RELE_POWER_ON = 1;
  4208  02D4  16F8               	bsf	_FF+1,5
  4209  02D5                     l2394:
  4210                           
  4211                           ;main.c: 179:     FF.bits.RELE_CONTROL_ON = 1;
  4212  02D5  1778               	bsf	_FF+1,6
  4213  02D6                     l308:
  4214  02D6  0008               	return
  4215  02D7                     __end_of_go_close:
  4216                           
  4217                           	psect	text29
  4218  03B0                     __ptext29:	
  4219 ;; *************** function _beep_short *****************
  4220 ;; Defined at:
  4221 ;;		line 150 in file "main.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;  count           1    wreg     unsigned char 
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;  count           1    4[COMMON] unsigned char 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  1    wreg      void 
  4228 ;; Registers used:
  4229 ;;		wreg, status,2, status,0, pclath, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1
  4235 ;;      Params:         0       0       0
  4236 ;;      Locals:         1       0       0
  4237 ;;      Temps:          1       0       0
  4238 ;;      Totals:         2       0       0
  4239 ;;Total ram usage:        2 bytes
  4240 ;; Hardware stack levels used: 1
  4241 ;; Hardware stack levels required when called: 7
  4242 ;; This function calls:
  4243 ;;		_start_tone
  4244 ;; This function is called by:
  4245 ;;		_fun_work
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249  03B0                     _beep_short:	
  4250                           ;psect for function _beep_short
  4251                           
  4252                           
  4253                           ;incstack = 0
  4254                           ; Regs used in _beep_short: [wreg+status,2+status,0+pclath+cstack]
  4255                           ;beep_short@count stored from wreg
  4256  03B0  00F4               	movwf	beep_short@count
  4257  03B1                     l1970:
  4258                           
  4259                           ;main.c: 151:     start_tone();
  4260  03B1  3184  241A  3183   	fcall	_start_tone
  4261  03B4                     l1972:
  4262                           
  4263                           ;main.c: 152:     FF.bits.ZUM_BUSY = 1;
  4264  03B4  1679               	bsf	_FF+2,4
  4265  03B5                     l1974:
  4266                           
  4267                           ;main.c: 153:     time_zummer = 30;
  4268  03B5  301E               	movlw	30
  4269  03B6  0020               	movlb	0	; select bank0
  4270  03B7  00A9               	movwf	_time_zummer
  4271  03B8  3000               	movlw	0
  4272  03B9  00AA               	movwf	_time_zummer+1
  4273  03BA                     l1976:
  4274                           
  4275                           ;main.c: 154:     beep_short_count = count;
  4276  03BA  0874               	movf	beep_short@count,w
  4277  03BB  00F3               	movwf	??_beep_short
  4278  03BC  0873               	movf	??_beep_short,w
  4279  03BD  00BD               	movwf	_beep_short_count
  4280  03BE                     l295:
  4281  03BE  0008               	return
  4282  03BF                     __end_of_beep_short:
  4283                           
  4284                           	psect	text30
  4285  041A                     __ptext30:	
  4286 ;; *************** function _start_tone *****************
  4287 ;; Defined at:
  4288 ;;		line 139 in file "main.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;		None
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;		None
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		None
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMMON   BANK0   BANK1
  4302 ;;      Params:         0       0       0
  4303 ;;      Locals:         0       0       0
  4304 ;;      Temps:          0       0       0
  4305 ;;      Totals:         0       0       0
  4306 ;;Total ram usage:        0 bytes
  4307 ;; Hardware stack levels used: 1
  4308 ;; Hardware stack levels required when called: 6
  4309 ;; This function calls:
  4310 ;;		Nothing
  4311 ;; This function is called by:
  4312 ;;		_beep_short
  4313 ;;		_beep_long
  4314 ;;		_beep_double
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318  041A                     _start_tone:	
  4319                           ;psect for function _start_tone
  4320                           
  4321  041A                     l1880:	
  4322                           ;incstack = 0
  4323                           ; Regs used in _start_tone: []
  4324                           
  4325                           
  4326                           ;main.c: 140:     INTCONbits.TMR0IE = 1;
  4327  041A  168B               	bsf	11,5	;volatile
  4328                           
  4329                           ;main.c: 141:     FF.bits.TONE_ON = 1;
  4330  041B  14F9               	bsf	_FF+2,1
  4331  041C                     l287:
  4332  041C  0008               	return
  4333  041D                     __end_of_start_tone:
  4334                           
  4335                           	psect	intentry
  4336  0004                     __pintentry:	
  4337 ;; *************** function _INTERRUPT_InterruptManager *****************
  4338 ;; Defined at:
  4339 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;		None
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;		None
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      void 
  4346 ;; Registers used:
  4347 ;;		wreg, status,2, status,0, pclath, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMMON   BANK0   BANK1
  4353 ;;      Params:         0       0       0
  4354 ;;      Locals:         0       0       0
  4355 ;;      Temps:          0       0       0
  4356 ;;      Totals:         0       0       0
  4357 ;;Total ram usage:        0 bytes
  4358 ;; Hardware stack levels used: 1
  4359 ;; Hardware stack levels required when called: 5
  4360 ;; This function calls:
  4361 ;;		_TMR0_ISR
  4362 ;;		_TMR2_ISR
  4363 ;; This function is called by:
  4364 ;;		Interrupt level 1
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368  0004                     _INTERRUPT_InterruptManager:
  4369                           
  4370                           ;incstack = 0
  4371  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4372                           
  4373                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  4374  0005  3180               	pagesel	$
  4375  0006                     i1l2250:
  4376                           
  4377                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4378  0006  1E8B               	btfss	11,5	;volatile
  4379  0007  2809               	goto	u146_21
  4380  0008  280A               	goto	u146_20
  4381  0009                     u146_21:
  4382  0009  2812               	goto	i1l108
  4383  000A                     u146_20:
  4384  000A                     i1l2252:
  4385  000A  1D0B               	btfss	11,2	;volatile
  4386  000B  280D               	goto	u147_21
  4387  000C  280E               	goto	u147_20
  4388  000D                     u147_21:
  4389  000D  2812               	goto	i1l108
  4390  000E                     u147_20:
  4391  000E                     i1l2254:
  4392                           
  4393                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  4394  000E  3183  2391  3180   	fcall	_TMR0_ISR
  4395                           
  4396                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  4397  0011  2824               	goto	i1l114
  4398  0012                     i1l108:	
  4399                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  4400                           
  4401  0012  1F0B               	btfss	11,6	;volatile
  4402  0013  2815               	goto	u148_21
  4403  0014  2816               	goto	u148_20
  4404  0015                     u148_21:
  4405  0015  2824               	goto	i1l114
  4406  0016                     u148_20:
  4407  0016                     i1l2256:
  4408                           
  4409                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  4410  0016  0021               	movlb	1	; select bank1
  4411  0017  1C91               	btfss	17,1	;volatile
  4412  0018  281A               	goto	u149_21
  4413  0019  281B               	goto	u149_20
  4414  001A                     u149_21:
  4415  001A  2824               	goto	i1l113
  4416  001B                     u149_20:
  4417  001B                     i1l2258:
  4418  001B  0020               	movlb	0	; select bank0
  4419  001C  1C91               	btfss	17,1	;volatile
  4420  001D  281F               	goto	u150_21
  4421  001E  2820               	goto	u150_20
  4422  001F                     u150_21:
  4423  001F  2824               	goto	i1l113
  4424  0020                     u150_20:
  4425  0020                     i1l2260:
  4426                           
  4427                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
  4428  0020  3183  23BF  3180   	fcall	_TMR2_ISR
  4429                           
  4430                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4431  0023  2824               	goto	i1l114
  4432  0024                     i1l113:	
  4433                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  4434                           
  4435  0024                     i1l114:
  4436  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4437  0025  0009               	retfie
  4438  0026                     __end_of_INTERRUPT_InterruptManager:
  4439                           
  4440                           	psect	text32
  4441  03BF                     __ptext32:	
  4442 ;; *************** function _TMR2_ISR *****************
  4443 ;; Defined at:
  4444 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;		None
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;		None
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  1    wreg      void 
  4451 ;; Registers used:
  4452 ;;		wreg, status,2, status,0, pclath, cstack
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMMON   BANK0   BANK1
  4458 ;;      Params:         0       0       0
  4459 ;;      Locals:         0       0       0
  4460 ;;      Temps:          0       0       0
  4461 ;;      Totals:         0       0       0
  4462 ;;Total ram usage:        0 bytes
  4463 ;; Hardware stack levels used: 1
  4464 ;; Hardware stack levels required when called: 4
  4465 ;; This function calls:
  4466 ;;		Absolute function
  4467 ;;		_TMR2_DefaultInterruptHandler
  4468 ;;		_ms_tick
  4469 ;; This function is called by:
  4470 ;;		_INTERRUPT_InterruptManager
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474  03BF                     _TMR2_ISR:	
  4475                           ;psect for function _TMR2_ISR
  4476                           
  4477  03BF                     i1l2048:	
  4478                           ;incstack = 0
  4479                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  4480                           
  4481                           
  4482                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
  4483  03BF  0020               	movlb	0	; select bank0
  4484  03C0  1091               	bcf	17,1	;volatile
  4485  03C1                     i1l2050:
  4486                           
  4487                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
  4488  03C1  0843               	movf	_TMR2_InterruptHandler,w
  4489  03C2  0444               	iorwf	_TMR2_InterruptHandler+1,w
  4490  03C3  1903               	btfsc	3,2
  4491  03C4  2BC6               	goto	u112_21
  4492  03C5  2BC7               	goto	u112_20
  4493  03C6                     u112_21:
  4494  03C6  2BCC               	goto	i1l154
  4495  03C7                     u112_20:
  4496  03C7                     i1l2052:
  4497                           
  4498                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
  4499  03C7  0844               	movf	_TMR2_InterruptHandler+1,w
  4500  03C8  008A               	movwf	10
  4501  03C9  0843               	movf	_TMR2_InterruptHandler,w
  4502  03CA  000A               	callw
  4503  03CB  3183               	pagesel	$
  4504  03CC                     i1l154:
  4505  03CC  0008               	return
  4506  03CD                     __end_of_TMR2_ISR:
  4507                           
  4508                           	psect	text33
  4509  0427                     __ptext33:	
  4510 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4511 ;; Defined at:
  4512 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;		None
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;		None
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  1    wreg      void 
  4519 ;; Registers used:
  4520 ;;		None
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMMON   BANK0   BANK1
  4526 ;;      Params:         0       0       0
  4527 ;;      Locals:         0       0       0
  4528 ;;      Temps:          0       0       0
  4529 ;;      Totals:         0       0       0
  4530 ;;Total ram usage:        0 bytes
  4531 ;; Hardware stack levels used: 1
  4532 ;; This function calls:
  4533 ;;		Nothing
  4534 ;; This function is called by:
  4535 ;;		_TMR2_Initialize
  4536 ;;		_TMR2_ISR
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540  0427                     _TMR2_DefaultInterruptHandler:	
  4541                           ;psect for function _TMR2_DefaultInterruptHandler
  4542                           
  4543  0427                     i1l160:	
  4544                           ;incstack = 0
  4545                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  4546                           
  4547  0427  0008               	return
  4548  0428                     __end_of_TMR2_DefaultInterruptHandler:
  4549                           
  4550                           	psect	text34
  4551  01F2                     __ptext34:	
  4552 ;; *************** function _ms_tick *****************
  4553 ;; Defined at:
  4554 ;;		line 535 in file "main.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;		None
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;		None
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  1    wreg      void 
  4561 ;; Registers used:
  4562 ;;		wreg, status,2, status,0, pclath, cstack
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMMON   BANK0   BANK1
  4568 ;;      Params:         0       0       0
  4569 ;;      Locals:         0       0       0
  4570 ;;      Temps:          0       0       0
  4571 ;;      Totals:         0       0       0
  4572 ;;Total ram usage:        0 bytes
  4573 ;; Hardware stack levels used: 1
  4574 ;; Hardware stack levels required when called: 3
  4575 ;; This function calls:
  4576 ;;		_sec_tick_work
  4577 ;; This function is called by:
  4578 ;;		_start_setup
  4579 ;;		_TMR2_ISR
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583  01F2                     _ms_tick:	
  4584                           ;psect for function _ms_tick
  4585                           
  4586  01F2                     i1l2012:	
  4587                           ;incstack = 0
  4588                           ; Regs used in _ms_tick: [wreg+status,2+status,0+pclath+cstack]
  4589                           
  4590                           
  4591                           ;main.c: 536:     static unsigned tick_count = 0;;main.c: 537:     tick_count++;
  4592  01F2  3001               	movlw	1
  4593  01F3  0020               	movlb	0	; select bank0
  4594  01F4  07A3               	addwf	ms_tick@tick_count,f
  4595  01F5  3000               	movlw	0
  4596  01F6  3DA4               	addwfc	ms_tick@tick_count+1,f
  4597  01F7                     i1l2014:
  4598                           
  4599                           ;main.c: 539:     if (FF.bits.BEEP_SHORT) {
  4600  01F7  1EF9               	btfss	_FF+2,5
  4601  01F8  29FA               	goto	u106_21
  4602  01F9  29FB               	goto	u106_20
  4603  01FA                     u106_21:
  4604  01FA  29FF               	goto	i1l2018
  4605  01FB                     u106_20:
  4606  01FB                     i1l2016:
  4607                           
  4608                           ;main.c: 540:         time_zummer_short--;
  4609  01FB  3001               	movlw	1
  4610  01FC  02A7               	subwf	_time_zummer_short,f
  4611  01FD  3000               	movlw	0
  4612  01FE  3BA8               	subwfb	_time_zummer_short+1,f
  4613  01FF                     i1l2018:
  4614                           
  4615                           ;main.c: 542:     if (FF.bits.BEEP_LONG) {
  4616  01FF  1DF9               	btfss	_FF+2,3
  4617  0200  2A02               	goto	u107_21
  4618  0201  2A03               	goto	u107_20
  4619  0202                     u107_21:
  4620  0202  2A07               	goto	i1l2022
  4621  0203                     u107_20:
  4622  0203                     i1l2020:
  4623                           
  4624                           ;main.c: 543:         time_zummer_long--;
  4625  0203  3001               	movlw	1
  4626  0204  02A5               	subwf	_time_zummer_long,f
  4627  0205  3000               	movlw	0
  4628  0206  3BA6               	subwfb	_time_zummer_long+1,f
  4629  0207                     i1l2022:
  4630                           
  4631                           ;main.c: 545:     if (tick_count == 100) {
  4632  0207  3064               	movlw	100
  4633  0208  0623               	xorwf	ms_tick@tick_count,w
  4634  0209  0424               	iorwf	ms_tick@tick_count+1,w
  4635  020A  1D03               	btfss	3,2
  4636  020B  2A0D               	goto	u108_21
  4637  020C  2A0E               	goto	u108_20
  4638  020D                     u108_21:
  4639  020D  2A11               	goto	i1l2028
  4640  020E                     u108_20:
  4641  020E                     i1l2024:
  4642                           
  4643                           ;main.c: 546:         FF.bits.ALLOW_MEASURE = 1;
  4644  020E  1677               	bsf	_FF,4
  4645  020F                     i1l2026:
  4646                           
  4647                           ;main.c: 547:         tick_count = 0;
  4648  020F  01A3               	clrf	ms_tick@tick_count
  4649  0210  01A4               	clrf	ms_tick@tick_count+1
  4650  0211                     i1l2028:
  4651                           
  4652                           ;main.c: 550:     if (tick_count == 1000) {
  4653  0211  30E8               	movlw	232
  4654  0212  0623               	xorwf	ms_tick@tick_count,w
  4655  0213  3003               	movlw	3
  4656  0214  1903               	skipnz
  4657  0215  0624               	xorwf	ms_tick@tick_count+1,w
  4658  0216  1D03               	btfss	3,2
  4659  0217  2A19               	goto	u109_21
  4660  0218  2A1A               	goto	u109_20
  4661  0219                     u109_21:
  4662  0219  2A20               	goto	i1l489
  4663  021A                     u109_20:
  4664  021A                     i1l2030:
  4665                           
  4666                           ;main.c: 551:         sec_tick_work();
  4667  021A  3180  2082  3181   	fcall	_sec_tick_work
  4668  021D                     i1l2032:
  4669                           
  4670                           ;main.c: 552:         tick_count = 0;
  4671  021D  0020               	movlb	0	; select bank0
  4672  021E  01A3               	clrf	ms_tick@tick_count
  4673  021F  01A4               	clrf	ms_tick@tick_count+1
  4674  0220                     i1l489:
  4675  0220  0008               	return
  4676  0221                     __end_of_ms_tick:
  4677                           
  4678                           	psect	text35
  4679  0082                     __ptext35:	
  4680 ;; *************** function _sec_tick_work *****************
  4681 ;; Defined at:
  4682 ;;		line 430 in file "main.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;		None
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;		None
  4687 ;; Return value:  Size  Location     Type
  4688 ;;                  1    wreg      void 
  4689 ;; Registers used:
  4690 ;;		wreg, status,2, status,0, pclath, cstack
  4691 ;; Tracked objects:
  4692 ;;		On entry : 0/0
  4693 ;;		On exit  : 0/0
  4694 ;;		Unchanged: 0/0
  4695 ;; Data sizes:     COMMON   BANK0   BANK1
  4696 ;;      Params:         0       0       0
  4697 ;;      Locals:         0       0       0
  4698 ;;      Temps:          1       0       0
  4699 ;;      Totals:         1       0       0
  4700 ;;Total ram usage:        1 bytes
  4701 ;; Hardware stack levels used: 1
  4702 ;; Hardware stack levels required when called: 2
  4703 ;; This function calls:
  4704 ;;		_rele_tick
  4705 ;;		_toggle_zummer
  4706 ;; This function is called by:
  4707 ;;		_ms_tick
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711  0082                     _sec_tick_work:	
  4712                           ;psect for function _sec_tick_work
  4713                           
  4714  0082                     i1l1898:	
  4715                           ;incstack = 0
  4716                           ; Regs used in _sec_tick_work: [wreg+status,2+status,0+pclath+cstack]
  4717                           
  4718                           
  4719                           ;main.c: 434:     if (FF.bits.OPENED && FF.bits.NORMAL_WORK_MODE_ON) time_rotation++;
  4720  0082  1D78               	btfss	_FF+1,2
  4721  0083  2885               	goto	u87_21
  4722  0084  2886               	goto	u87_20
  4723  0085                     u87_21:
  4724  0085  2895               	goto	i1l1904
  4725  0086                     u87_20:
  4726  0086                     i1l1900:
  4727  0086  1C7A               	btfss	_FF+3,0
  4728  0087  2889               	goto	u88_21
  4729  0088  288A               	goto	u88_20
  4730  0089                     u88_21:
  4731  0089  2895               	goto	i1l1904
  4732  008A                     u88_20:
  4733  008A                     i1l1902:
  4734  008A  3001               	movlw	1
  4735  008B  0020               	movlb	0	; select bank0
  4736  008C  07A0               	addwf	_time_rotation,f
  4737  008D  3000               	movlw	0
  4738  008E  1803               	skipnc
  4739  008F  3001               	movlw	1
  4740  0090  07A1               	addwf	_time_rotation+1,f
  4741  0091  3000               	movlw	0
  4742  0092  1803               	skipnc
  4743  0093  3001               	movlw	1
  4744  0094  07A2               	addwf	_time_rotation+2,f
  4745  0095                     i1l1904:
  4746                           
  4747                           ;main.c: 435:     rele_tick();
  4748  0095  3181  21C0  3180   	fcall	_rele_tick
  4749  0098                     i1l1906:
  4750                           
  4751                           ;main.c: 437:     if (FF.bits.ALARM_ON) {
  4752  0098  1C77               	btfss	_FF,0
  4753  0099  289B               	goto	u89_21
  4754  009A  289C               	goto	u89_20
  4755  009B                     u89_21:
  4756  009B  28AC               	goto	i1l447
  4757  009C                     u89_20:
  4758  009C                     i1l1908:
  4759  009C  1003               	clrc
  4760  009D  0022               	movlb	2	; select bank2
  4761  009E  1E0C               	btfss	12,4	;volatile
  4762  009F  1403               	setc
  4763  00A0  1803               	btfsc	3,0
  4764  00A1  28A3               	goto	u90_21
  4765  00A2  28A6               	goto	u90_20
  4766  00A3                     u90_21:
  4767  00A3  0022               	movlb	2	; select bank2
  4768  00A4  160C               	bsf	12,4	;volatile
  4769  00A5  28A8               	goto	u91_24
  4770  00A6                     u90_20:
  4771  00A6  0022               	movlb	2	; select bank2
  4772  00A7  120C               	bcf	12,4	;volatile
  4773  00A8                     u91_24:
  4774  00A8                     i1l1910:
  4775                           
  4776                           ;main.c: 441:         toggle_zummer();
  4777  00A8  3184  2413  3180   	fcall	_toggle_zummer
  4778                           
  4779                           ;main.c: 443:     } else if (FF.bits.ALARM_OFF) {
  4780  00AB  28C9               	goto	i1l457
  4781  00AC                     i1l447:
  4782  00AC  1CF7               	btfss	_FF,1
  4783  00AD  28AF               	goto	u92_21
  4784  00AE  28B0               	goto	u92_20
  4785  00AF                     u92_21:
  4786  00AF  28C9               	goto	i1l457
  4787  00B0                     u92_20:
  4788  00B0                     i1l1912:
  4789                           
  4790                           ;main.c: 445:         static char iled;;main.c: 446:         iled++;
  4791  00B0  3001               	movlw	1
  4792  00B1  00F2               	movwf	??_sec_tick_work
  4793  00B2  0872               	movf	??_sec_tick_work,w
  4794  00B3  0020               	movlb	0	; select bank0
  4795  00B4  07B5               	addwf	sec_tick_work@iled,f
  4796  00B5                     i1l1914:
  4797                           
  4798                           ;main.c: 447:         if (iled > 2) {
  4799  00B5  3003               	movlw	3
  4800  00B6  0235               	subwf	sec_tick_work@iled,w
  4801  00B7  1C03               	skipc
  4802  00B8  28BA               	goto	u93_21
  4803  00B9  28BB               	goto	u93_20
  4804  00BA                     u93_21:
  4805  00BA  28C9               	goto	i1l457
  4806  00BB                     u93_20:
  4807  00BB                     i1l1916:
  4808  00BB  1003               	clrc
  4809  00BC  0022               	movlb	2	; select bank2
  4810  00BD  1E0C               	btfss	12,4	;volatile
  4811  00BE  1403               	setc
  4812  00BF  1803               	btfsc	3,0
  4813  00C0  28C2               	goto	u94_21
  4814  00C1  28C5               	goto	u94_20
  4815  00C2                     u94_21:
  4816  00C2  0022               	movlb	2	; select bank2
  4817  00C3  160C               	bsf	12,4	;volatile
  4818  00C4  28C7               	goto	u95_24
  4819  00C5                     u94_20:
  4820  00C5  0022               	movlb	2	; select bank2
  4821  00C6  120C               	bcf	12,4	;volatile
  4822  00C7                     u95_24:
  4823  00C7                     i1l1918:
  4824                           
  4825                           ;main.c: 449:             iled = 0;
  4826  00C7  0020               	movlb	0	; select bank0
  4827  00C8  01B5               	clrf	sec_tick_work@iled
  4828  00C9                     i1l457:
  4829  00C9  0008               	return
  4830  00CA                     __end_of_sec_tick_work:
  4831                           
  4832                           	psect	text36
  4833  01C0                     __ptext36:	
  4834 ;; *************** function _rele_tick *****************
  4835 ;; Defined at:
  4836 ;;		line 406 in file "main.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;		None
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;		None
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      void 
  4843 ;; Registers used:
  4844 ;;		wreg, status,2, status,0, pclath, cstack
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMMON   BANK0   BANK1
  4850 ;;      Params:         0       0       0
  4851 ;;      Locals:         0       0       0
  4852 ;;      Temps:          2       0       0
  4853 ;;      Totals:         2       0       0
  4854 ;;Total ram usage:        2 bytes
  4855 ;; Hardware stack levels used: 1
  4856 ;; Hardware stack levels required when called: 1
  4857 ;; This function calls:
  4858 ;;		_toggle_zummer
  4859 ;; This function is called by:
  4860 ;;		_sec_tick_work
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864  01C0                     _rele_tick:	
  4865                           ;psect for function _rele_tick
  4866                           
  4867  01C0                     i1l1810:	
  4868                           ;incstack = 0
  4869                           ; Regs used in _rele_tick: [wreg+status,2+status,0+pclath+cstack]
  4870                           
  4871                           
  4872                           ;main.c: 407:     toggle_zummer();
  4873  01C0  3184  2413  3181   	fcall	_toggle_zummer
  4874  01C3                     i1l1812:
  4875                           
  4876                           ;main.c: 408:     if (FF.bits.RELE_POWER_ON) {
  4877  01C3  1EF8               	btfss	_FF+1,5
  4878  01C4  29C6               	goto	u84_21
  4879  01C5  29C7               	goto	u84_20
  4880  01C6                     u84_21:
  4881  01C6  29F1               	goto	i1l443
  4882  01C7                     u84_20:
  4883  01C7                     i1l1814:
  4884                           
  4885                           ;main.c: 409:         if (time_rele_power > 0) {
  4886  01C7  0020               	movlb	0	; select bank0
  4887  01C8  0831               	movf	_time_rele_power,w
  4888  01C9  0432               	iorwf	_time_rele_power+1,w
  4889  01CA  1903               	btfsc	3,2
  4890  01CB  29CD               	goto	u85_21
  4891  01CC  29CE               	goto	u85_20
  4892  01CD                     u85_21:
  4893  01CD  29D3               	goto	i1l433
  4894  01CE                     u85_20:
  4895  01CE                     i1l1816:
  4896                           
  4897                           ;main.c: 410:             time_rele_power--;
  4898  01CE  3001               	movlw	1
  4899  01CF  02B1               	subwf	_time_rele_power,f
  4900  01D0  3000               	movlw	0
  4901  01D1  3BB2               	subwfb	_time_rele_power+1,f
  4902                           
  4903                           ;main.c: 411:         } else {
  4904  01D2  29F1               	goto	i1l443
  4905  01D3                     i1l433:
  4906                           
  4907                           ;main.c: 412:             if (FF.bits.RELE_CONTROL_ON) {
  4908  01D3  1F78               	btfss	_FF+1,6
  4909  01D4  29D6               	goto	u86_21
  4910  01D5  29D7               	goto	u86_20
  4911  01D6                     u86_21:
  4912  01D6  29EC               	goto	i1l441
  4913  01D7                     u86_20:
  4914  01D7                     i1l436:	
  4915                           ;main.c: 413:                 do { LATCbits.LATC5 = 0; } while(0);
  4916                           
  4917  01D7  0022               	movlb	2	; select bank2
  4918  01D8  128E               	bcf	14,5	;volatile
  4919  01D9                     i1l1818:
  4920                           
  4921                           ;main.c: 414:                 _delay((unsigned long)((2 * 1000)*(16000000/4000.0)));
  4922  01D9  3029               	movlw	41
  4923  01DA  00F1               	movwf	??_rele_tick+1
  4924  01DB  3096               	movlw	150
  4925  01DC  00F0               	movwf	??_rele_tick
  4926  01DD  307F               	movlw	127
  4927  01DE                     u203_27:
  4928  01DE  0B89               	decfsz	9,f
  4929  01DF  29DE               	goto	u203_27
  4930  01E0  0BF0               	decfsz	??_rele_tick,f
  4931  01E1  29DE               	goto	u203_27
  4932  01E2  0BF1               	decfsz	??_rele_tick+1,f
  4933  01E3  29DE               	goto	u203_27
  4934  01E4  0000               	nop
  4935  01E5                     i1l1820:
  4936  01E5  0022               	movlb	2	; select bank2
  4937  01E6  120E               	bcf	14,4	;volatile
  4938  01E7                     i1l1822:
  4939                           
  4940                           ;main.c: 416:                 FF.bits.CLOSING = 0;
  4941  01E7  11F8               	bcf	_FF+1,3
  4942  01E8                     i1l1824:
  4943                           
  4944                           ;main.c: 417:                 FF.bits.CLOSED = 1;
  4945  01E8  1678               	bsf	_FF+1,4
  4946  01E9                     i1l1826:
  4947                           
  4948                           ;main.c: 418:                 FF.bits.RELE_CONTROL_ON = 0;
  4949  01E9  1378               	bcf	_FF+1,6
  4950  01EA                     i1l1828:
  4951                           
  4952                           ;main.c: 419:                 FF.bits.RELE_POWER_ON = 0;
  4953  01EA  12F8               	bcf	_FF+1,5
  4954                           
  4955                           ;main.c: 420:             } else {
  4956  01EB  29F1               	goto	i1l443
  4957  01EC                     i1l441:	
  4958                           ;main.c: 421:                 do { LATCbits.LATC5 = 0; } while(0);
  4959                           
  4960  01EC  0022               	movlb	2	; select bank2
  4961  01ED  128E               	bcf	14,5	;volatile
  4962  01EE                     i1l442:
  4963                           
  4964                           ;main.c: 422:                 FF.bits.OPENING = 0;
  4965  01EE  10F8               	bcf	_FF+1,1
  4966                           
  4967                           ;main.c: 423:                 FF.bits.CLOSED = 0;
  4968  01EF  1278               	bcf	_FF+1,4
  4969                           
  4970                           ;main.c: 424:                 FF.bits.RELE_POWER_ON = 0;
  4971  01F0  12F8               	bcf	_FF+1,5
  4972  01F1                     i1l443:
  4973  01F1  0008               	return
  4974  01F2                     __end_of_rele_tick:
  4975                           
  4976                           	psect	text37
  4977  0413                     __ptext37:	
  4978 ;; *************** function _toggle_zummer *****************
  4979 ;; Defined at:
  4980 ;;		line 123 in file "main.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;		None
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;		None
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  1    wreg      void 
  4987 ;; Registers used:
  4988 ;;		None
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMMON   BANK0   BANK1
  4994 ;;      Params:         0       0       0
  4995 ;;      Locals:         0       0       0
  4996 ;;      Temps:          0       0       0
  4997 ;;      Totals:         0       0       0
  4998 ;;Total ram usage:        0 bytes
  4999 ;; Hardware stack levels used: 1
  5000 ;; This function calls:
  5001 ;;		Nothing
  5002 ;; This function is called by:
  5003 ;;		_rele_tick
  5004 ;;		_sec_tick_work
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008  0413                     _toggle_zummer:	
  5009                           ;psect for function _toggle_zummer
  5010                           
  5011  0413                     i1l275:	
  5012                           ;incstack = 0
  5013                           ; Regs used in _toggle_zummer: []
  5014                           ;main.c: 124:     do { LATAbits.LATA5 = 1; } while(0);
  5015                           
  5016  0413  0022               	movlb	2	; select bank2
  5017  0414  168C               	bsf	12,5	;volatile
  5018  0415                     i1l277:	
  5019                           ;main.c: 125:     do { LATAbits.LATA5 = 0; } while(0);
  5020                           
  5021  0415  128C               	bcf	12,5	;volatile
  5022  0416                     i1l279:
  5023  0416  0008               	return
  5024  0417                     __end_of_toggle_zummer:
  5025                           
  5026                           	psect	text38
  5027  0391                     __ptext38:	
  5028 ;; *************** function _TMR0_ISR *****************
  5029 ;; Defined at:
  5030 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;		None
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;		None
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      void 
  5037 ;; Registers used:
  5038 ;;		wreg, status,2, status,0, pclath, cstack
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMMON   BANK0   BANK1
  5044 ;;      Params:         0       0       0
  5045 ;;      Locals:         0       0       0
  5046 ;;      Temps:          0       0       0
  5047 ;;      Totals:         0       0       0
  5048 ;;Total ram usage:        0 bytes
  5049 ;; Hardware stack levels used: 1
  5050 ;; Hardware stack levels required when called: 1
  5051 ;; This function calls:
  5052 ;;		Absolute function
  5053 ;;		_TMR0_DefaultInterruptHandler
  5054 ;;		_timer0_switch
  5055 ;; This function is called by:
  5056 ;;		_INTERRUPT_InterruptManager
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060  0391                     _TMR0_ISR:	
  5061                           ;psect for function _TMR0_ISR
  5062                           
  5063  0391                     i1l2040:	
  5064                           ;incstack = 0
  5065                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  5066                           
  5067                           
  5068                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  5069  0391  110B               	bcf	11,2	;volatile
  5070  0392                     i1l2042:
  5071                           
  5072                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  5073  0392  0020               	movlb	0	; select bank0
  5074  0393  0840               	movf	_timer0ReloadVal,w	;volatile
  5075  0394  0095               	movwf	21	;volatile
  5076  0395                     i1l2044:
  5077                           
  5078                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  5079  0395  0841               	movf	_TMR0_InterruptHandler,w
  5080  0396  0442               	iorwf	_TMR0_InterruptHandler+1,w
  5081  0397  1903               	btfsc	3,2
  5082  0398  2B9A               	goto	u111_21
  5083  0399  2B9B               	goto	u111_20
  5084  039A                     u111_21:
  5085  039A  2BA0               	goto	i1l190
  5086  039B                     u111_20:
  5087  039B                     i1l2046:
  5088                           
  5089                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  5090  039B  0842               	movf	_TMR0_InterruptHandler+1,w
  5091  039C  008A               	movwf	10
  5092  039D  0841               	movf	_TMR0_InterruptHandler,w
  5093  039E  000A               	callw
  5094  039F  3183               	pagesel	$
  5095  03A0                     i1l190:
  5096  03A0  0008               	return
  5097  03A1                     __end_of_TMR0_ISR:
  5098                           
  5099                           	psect	text39
  5100  0428                     __ptext39:	
  5101 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5102 ;; Defined at:
  5103 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;		None
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;		None
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  1    wreg      void 
  5110 ;; Registers used:
  5111 ;;		None
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMMON   BANK0   BANK1
  5117 ;;      Params:         0       0       0
  5118 ;;      Locals:         0       0       0
  5119 ;;      Temps:          0       0       0
  5120 ;;      Totals:         0       0       0
  5121 ;;Total ram usage:        0 bytes
  5122 ;; Hardware stack levels used: 1
  5123 ;; This function calls:
  5124 ;;		Nothing
  5125 ;; This function is called by:
  5126 ;;		_TMR0_Initialize
  5127 ;;		_TMR0_ISR
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131  0428                     _TMR0_DefaultInterruptHandler:	
  5132                           ;psect for function _TMR0_DefaultInterruptHandler
  5133                           
  5134  0428                     i1l196:	
  5135                           ;incstack = 0
  5136                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  5137                           
  5138  0428  0008               	return
  5139  0429                     __end_of_TMR0_DefaultInterruptHandler:
  5140                           
  5141                           	psect	text40
  5142  03CD                     __ptext40:	
  5143 ;; *************** function _timer0_switch *****************
  5144 ;; Defined at:
  5145 ;;		line 135 in file "main.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;		None
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;		None
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  1    wreg      void 
  5152 ;; Registers used:
  5153 ;;		status,0
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMMON   BANK0   BANK1
  5159 ;;      Params:         0       0       0
  5160 ;;      Locals:         0       0       0
  5161 ;;      Temps:          0       0       0
  5162 ;;      Totals:         0       0       0
  5163 ;;Total ram usage:        0 bytes
  5164 ;; Hardware stack levels used: 1
  5165 ;; This function calls:
  5166 ;;		Nothing
  5167 ;; This function is called by:
  5168 ;;		_start_setup
  5169 ;;		_TMR0_ISR
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173  03CD                     _timer0_switch:	
  5174                           ;psect for function _timer0_switch
  5175                           
  5176  03CD                     i1l282:	
  5177                           ;incstack = 0
  5178                           ; Regs used in _timer0_switch: [status,0]
  5179                           ;main.c: 136:     do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  5180                           
  5181  03CD                     i1l1968:
  5182  03CD  1003               	clrc
  5183  03CE  0022               	movlb	2	; select bank2
  5184  03CF  1E8C               	btfss	12,5	;volatile
  5185  03D0  1403               	setc
  5186  03D1  1803               	btfsc	3,0
  5187  03D2  2BD4               	goto	u102_21
  5188  03D3  2BD7               	goto	u102_20
  5189  03D4                     u102_21:
  5190  03D4  0022               	movlb	2	; select bank2
  5191  03D5  168C               	bsf	12,5	;volatile
  5192  03D6  2BD9               	goto	u103_24
  5193  03D7                     u102_20:
  5194  03D7  0022               	movlb	2	; select bank2
  5195  03D8  128C               	bcf	12,5	;volatile
  5196  03D9                     u103_24:
  5197  03D9                     i1l284:
  5198  03D9  0008               	return
  5199  03DA                     __end_of_timer0_switch:
  5200  007E                     btemp	set	126	;btemp
  5201  007E                     int$flags	set	126
  5202  007E                     wtemp0	set	126
  5203                           
  5204                           	psect	idloc
  5205                           
  5206                           ;Config register IDLOC0 @ 0x8000
  5207                           ;	unspecified, using default values
  5208  8000                     	org	32768
  5209  8000  3FFF               	dw	16383
  5210                           
  5211                           ;Config register IDLOC1 @ 0x8001
  5212                           ;	unspecified, using default values
  5213  8001                     	org	32769
  5214  8001  3FFF               	dw	16383
  5215                           
  5216                           ;Config register IDLOC2 @ 0x8002
  5217                           ;	unspecified, using default values
  5218  8002                     	org	32770
  5219  8002  3FFF               	dw	16383
  5220                           
  5221                           ;Config register IDLOC3 @ 0x8003
  5222                           ;	unspecified, using default values
  5223  8003                     	org	32771
  5224  8003  3FFF               	dw	16383
  5225                           
  5226                           	psect	config
  5227                           
  5228                           ;Config register CONFIG1 @ 0x8007
  5229                           ;	Oscillator Selection
  5230                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5231                           ;	Watchdog Timer Enable
  5232                           ;	WDTE = ON, WDT enabled
  5233                           ;	Power-up Timer Enable
  5234                           ;	PWRTE = ON, PWRT enabled
  5235                           ;	MCLR Pin Function Select
  5236                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5237                           ;	Flash Program Memory Code Protection
  5238                           ;	CP = OFF, Program memory code protection is disabled
  5239                           ;	Data Memory Code Protection
  5240                           ;	CPD = OFF, Data memory code protection is disabled
  5241                           ;	Brown-out Reset Enable
  5242                           ;	BOREN = ON, Brown-out Reset enabled
  5243                           ;	Clock Out Enable
  5244                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5245                           ;	Internal/External Switchover
  5246                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5247                           ;	Fail-Safe Clock Monitor Enable
  5248                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5249  8007                     	org	32775
  5250  8007  3FDC               	dw	16348
  5251                           
  5252                           ;Config register CONFIG2 @ 0x8008
  5253                           ;	Flash Memory Self-Write Protection
  5254                           ;	WRT = OFF, Write protection off
  5255                           ;	PLL Enable
  5256                           ;	PLLEN = OFF, 4x PLL disabled
  5257                           ;	Stack Overflow/Underflow Reset Enable
  5258                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5259                           ;	Brown-out Reset Voltage Selection
  5260                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5261                           ;	Low-Voltage Programming Enable
  5262                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5263  8008                     	org	32776
  5264  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         37
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      3      40
    BANK1            32      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0_switch(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0_switch(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ms_tick(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ms_tick(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_get_measure
    _switch_wm->_beep_long
    _start_setup->_eeprom_set
    _eeprom_set->_EEPROM_ReadByte
    _eeprom_set->_EEPROM_WriteByte
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _povorot->_go_close_short
    _get_measure->_ADC_GetConversion
    _start_alarm->_go_close
    _fun_work->_beep_short
    _fun_work->_go_close

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _ms_tick->_sec_tick_work
    _sec_tick_work->_rele_tick

Critical Paths under _main in BANK0

    _start_setup->_eeprom_set
    _eeprom_set->_EEPROM_WriteByte

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1627
                           _fun_work
                            _get_fun
                           _get_jump
                        _get_measure
                            _povorot
                        _start_setup
                          _switch_wm
 ---------------------------------------------------------------------------------
 (1) _switch_wm                                            0     0      0      22
                          _beep_long
 ---------------------------------------------------------------------------------
 (2) _beep_long                                            2     2      0      22
                                              3 COMMON     2     2      0
                         _start_tone
 ---------------------------------------------------------------------------------
 (1) _start_setup                                          0     0      0    1487
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                         _eeprom_set
 ---------------------------------------------------------------------------------
 (2) _eeprom_set                                           2     2      0     791
                                              6 COMMON     1     1      0
                                              2 BANK0      1     1      0
                    _EEPROM_ReadByte
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_WriteByte                                     5     4      1     726
                                              3 COMMON     3     2      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _EEPROM_ReadByte                                      3     3      0      31
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     348
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     174
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     174
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _povorot                                              0     0      0       0
                     _go_close_short
                            _go_open
 ---------------------------------------------------------------------------------
 (2) _go_close_short                                       2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_measure                                          4     4      0      96
                                              5 COMMON     2     2      0
                                              0 BANK0      2     2      0
                  _ADC_GetConversion
                        _start_alarm
 ---------------------------------------------------------------------------------
 (2) _start_alarm                                          0     0      0       0
                           _go_close
                       _go_close_alt
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    2     2      0      31
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_jump                                             1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_fun                                              1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _fun_work                                             0     0      0      22
                         _beep_short
                           _go_close
                       _go_close_alt
                            _go_open
                        _go_open_alt
 ---------------------------------------------------------------------------------
 (2) _go_open_alt                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_open                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _go_close_alt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _go_close                                             2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _beep_short                                           2     2      0      22
                                              3 COMMON     2     2      0
                         _start_tone
 ---------------------------------------------------------------------------------
 (3) _start_tone                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                            _ms_tick *
 ---------------------------------------------------------------------------------
 (7) _ms_tick                                              0     0      0       0
                      _sec_tick_work
 ---------------------------------------------------------------------------------
 (8) _sec_tick_work                                        1     1      0       0
                                              2 COMMON     1     1      0
                          _rele_tick
                      _toggle_zummer
 ---------------------------------------------------------------------------------
 (9) _rele_tick                                            2     2      0       0
                                              0 COMMON     2     2      0
                      _toggle_zummer
 ---------------------------------------------------------------------------------
 (9) _toggle_zummer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _timer0_switch *
 ---------------------------------------------------------------------------------
 (7) _timer0_switch                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _fun_work
     _beep_short
       _start_tone
     _go_close
     _go_close_alt
     _go_open
     _go_open_alt
   _get_fun
   _get_jump
   _get_measure
     _ADC_GetConversion
     _start_alarm
       _go_close
       _go_close_alt
   _povorot
     _go_close_short
     _go_open
   _start_setup
     _SYSTEM_Initialize
       _ADC_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR2_Initialize
         _TMR2_SetInterruptHandler
       _WDT_Initialize
     _TMR0_SetInterruptHandler
     _TMR2_SetInterruptHandler
     _TMR2_StartTimer
     _eeprom_set
       _EEPROM_ReadByte
       _EEPROM_WriteByte
   _switch_wm
     _beep_long
       _start_tone

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _timer0_switch *
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _ms_tick *
       _sec_tick_work
         _rele_tick
           _toggle_zummer
         _toggle_zummer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      33       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      3      28       6       50.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      33       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri May 13 14:12:40 2022

        __end_of_TMR2_SetInterruptHandler 03FF                        get_fun@fun_counter 0039  
                   __end_of_sec_tick_work 00CA                                        l23 036C  
                                      l26 03F2                                        l61 0303  
                                      l29 0412                                        l46 03EB  
                                      _FF 0077                                        l64 0308  
                                      l90 031D                                        _RD 0CA8  
                                      _WR 0CA9                             ?_go_close_alt 0070  
                         _timer0ReloadVal 0040                                       l135 037E  
                                     l320 03DC                                       l322 03E3  
                                     l314 02AF                                       l138 0419  
                                     l307 02CF                                       l315 02B6  
                                     l308 02D6                                       l332 0406  
                                     l404 0221                                       l340 0349  
                                     l325 040B                                       l413 024E  
                                     l341 0352                                       l157 03FE  
                                     l318 03DA                                       l334 0408  
                                     l406 0223                                       l327 040D  
                                     l407 0225                                       l351 010F  
                                     l336 0409                                       l344 0359  
                                     l329 040E                                       l361 014A  
                                     l193 0404                                       l177 0390  
                                     l339 0347                                       l349 010D  
                                     l525 0291                                       l470 0105  
                                     l366 014B                                       l462 0081  
                                     l518 01BF                                       l287 041C  
                                     l295 03BE                                       l551 0333  
                                     l480 02F0                                       l473 010C  
                                     l545 0251                                       l466 00E6  
                                     l554 0345                                       l298 03AF  
                                     l379 0185                                       l548 0275  
                                     l476 02E6                                       l493 0331  
                                     _GIE 005F                               _start_alarm 0346  
                                     _PR2 001B                               _start_setup 0186  
                            ?_go_open_alt 0070                           _TMR2_Initialize 036D  
                                     wreg 0009                                      l2000 03DD  
                                    l2002 03E2                                      l2100 017F  
                                    l2102 0183                                      l2110 022F  
                                    l2104 0184                                      l2120 0241  
                                    l2112 0233                                      l2122 0248  
                                    l2114 023A                                      l2130 0036  
                                    l2124 024C                                      l2116 023E  
                                    l2108 022A                                      l2140 0055  
                                    l2132 0045                                      l2126 024D  
                                    l2118 023F                                      l2150 0073  
                                    l2134 0049                                      l2142 0058  
                                    l2080 0157                                      l2152 0077  
                                    l2144 0067                                      l2136 004D  
                                    l2400 0333                                      l2090 0169  
                                    l2082 0159                                      l2154 007A  
                                    l2146 006B                                      l2138 0051  
                                    l2402 0338                                      l2410 0251  
                                    l2500 00F9                                      l2092 0171  
                                    l2084 015E                                      l2076 014D  
                                    l2148 006F                                      l2404 033C  
                                    l2420 0266                                      l2412 0256  
                                    l2502 00FD                                      l2094 0175  
                                    l2086 0163                                      l2078 0155  
                                    l2406 0343                                      l2430 0273  
                                    l2422 0267                                      l2414 025B  
                                    l2510 0189                                      l2190 02DF  
                                    l1392 0405                                      l2504 0101  
                                    l2096 0176                                      l2088 0167  
                                    l2440 0307                                      l2432 02F2  
                                    l2424 0269                                      l2416 025C  
                                    l2520 01A2                                      l2512 018A  
                                    l2192 02E1                                      l2506 0109  
                                    l2098 0178                                      l2434 02FC  
                                    l2426 026B                                      l2418 0264  
                                    l2450 031E                                      l2530 01AB  
                                    l2522 01A3                                      l2514 019C  
                                    l2194 02EA                                      l2186 02D7  
                                    l2436 02FD                                      l2444 0346  
                                    l2460 0124                                      l2428 026C  
                                    l2452 0326                                      l2540 01B9  
                                    l2532 01B4                                      l2524 01A5  
                                    l2516 019F                                      l2508 0186  
                                    l2196 02EC                                      l2188 02DB  
                                    l2390 02CD                                      l2438 0301  
                                    l2446 034E                                      l2470 0140  
                                    l2462 0126                                      l1830 0309  
                                    l1806 03F9                                      l2454 032B  
                                    l2542 01BA                                      l2534 01B5  
                                    l2526 01A7                                      l2518 01A1  
                                    l2392 02D4                                      l2384 02B7  
                                    l2480 00CE                                      l2448 0356  
                                    l2472 0141                                      l2464 0128  
                                    l2456 0111                                      l1840 0319  
                                    l1832 030C                                      l1808 03FF  
                                    l2544 01BC                                      l2536 01B6  
                                    l2528 01A9                                      l2560 0276  
                                    l2394 02D5                                      l2386 02BE  
                                    l2490 00E2                                      l2482 00D2  
                                    l2474 0147                                      l2466 0132  
                                    l2458 0119                                      l1842 03EC  
                                    l1834 030F                                      l1850 036D  
                                    l2538 01B8                                      l2570 0290  
                                    l2562 0279                                      l2388 02C0  
                                    l2492 00EA                                      l2484 00D6  
                                    l2468 0137                                      l1844 03EF  
                                    l1836 0311                                      l1860 037B  
                                    l1852 0370                                      l2564 027D  
                                    l2398 040A                                      l2486 00DA  
                                    l2494 00ED                                      l2478 00CA  
                                    l1862 03E4                                      l1846 03F0  
                                    l1838 0314                                      l1870 0384  
                                    l1854 0371                                      l2566 0289  
                                    l1880 041A                                      l2496 00F1  
                                    l2488 00DE                                      l1864 03E7  
                                    l1872 0386                                      l1856 0372  
                                    l1848 040F                                      l1952 035A  
                                    l2568 028D                                      l1970 03B1  
                                    l2498 00F5                                      l1866 03E8  
                                    l1874 0387                                      l1858 0374  
                                    l1972 03B4                                      l1876 0388  
                                    l1868 037F                                      l1980 03A5  
                                    l1974 03B5                                      l1990 02A0  
                                    l1878 0389                                      l1966 0417  
                                    l1982 03A6                                      l1976 03BA  
                                    l1992 02AD                                      l1984 03AB  
                                    l1994 02B4                                      l1986 0297  
                                    l1978 03A2                                      l1996 02B5  
                                    l1988 029E                                      u1200 023A  
                                    u1201 0239                                      u1210 0248  
                                    u1211 0247                                      u1300 0073  
                                    u1220 0045                                      u1301 0072  
                                    u1221 0044                                      u1310 0077  
                                    u1230 0049                                      u2007 02FE  
                                    u1311 0076                                      u1231 0048  
                                    u1160 015E                                      u1240 004D  
                                    u1161 015D                                      u2017 0150  
                                    u1241 004C                                      u1225 0041  
                                    u1170 0171                                      u1250 0051  
                                    u2027 02C6                                      u1171 0170  
                                    u1251 0050                                      u1180 017F  
                                    u1260 0055                                      u1181 017E  
                                    u1261 0054                                      _LATA 010C  
                                    u1190 022A                                      u1270 0067  
                                    u1430 02DB                                      u1191 0229  
                                    u1271 0066                                      u1431 02DA  
                                    _LATC 010E                                      u1280 006B  
                                    u1440 02DF                                      u1281 006A  
                                    u1441 02DE                                      u1290 006F  
                                    u1450 02EA                                      u1291 006E  
                                    u1275 0063                                      u1451 02E9  
                                    u1700 0272                                      u1701 0270  
                                    u1800 00D2                                      u1720 0307  
                                    u1801 00D1                                      u1721 0306  
                                    u1810 00D6                                      u1730 034E  
                                    u1714 0273                                      u1811 00D5  
                                    u1731 034D                                      u1820 00DA  
                                    u1740 0356                                      u1900 027D  
                                    u1821 00D9                                      u1741 0355  
                                    u1901 027C                                      u1830 00E2  
                                    u1670 0338                                      u1750 032B  
                                    u1910 028D                                      u1831 00E1  
                                    u1671 0337                                      u1751 032A  
                                    u1911 028C                                      u1840 00EA  
                                    u1760 0132                                      u1680 033C  
                                    u1841 00E9                                      u1761 0131  
                                    u1681 033B                                      u1850 00F1  
                                    u1770 0140                                      u1690 0256  
                                    u1851 00F0                                      u1771 013F  
                                    u1691 0255                                      u1860 00F5  
                                    u1780 0147                                      u1861 00F4  
                                    u1781 0146                                      u1870 00F9  
                                    u1790 00CE                                      u1871 00F8  
                                    u1791 00CD                                      u1880 0101  
                                    u1881 0100                                      u1890 0109  
                                    u1891 0108                                      u1987 02A6  
                                    u1997 0114                                      _TMR0 0015  
                                    _TMR2 001A                                      _WREN 0CAA  
                                    _WPUA 020C                                      _WPUC 020E  
                          ?_toggle_zummer 0070                                      _main 0276  
                                    fsr0h 0005                                      indf0 0000  
                                    fsr0l 0004                      EEPROM_WriteByte@addr 0045  
                                    btemp 007E                           ?_go_close_short 0070  
                                    start 0026                   get_fun_full@fun_counter 0038  
                          ??_go_close_alt 0073                   __end_of_TMR0_Initialize 0391  
          ??_TMR0_DefaultInterruptHandler 0070             __end_of_OSCILLATOR_Initialize 03F3  
                                   ?_main 0070                                     _EEADR 0191  
                                   _T2CON 001C                                     i1l113 0024  
                                   i1l114 0024                                     i1l108 0012  
                                   i1l160 0427                                     i1l154 03CC  
                                   i1l190 03A0                                     i1l441 01EC  
                                   i1l433 01D3                                     i1l282 03CD  
                                   i1l442 01EE                                     i1l275 0413  
                                   i1l443 01F1                                     i1l284 03D9  
                                   i1l196 0428                                     i1l436 01D7  
                                   i1l277 0415                                     i1l279 0416  
                                   i1l447 00AC                                     i1l457 00C9  
                                   i1l489 0220                                     _TRISA 008C  
                                   _TRISC 008E                                     u90_20 00A6  
                                   u90_21 00A3                                     u91_24 00A8  
                                   u84_20 01C7                                     u92_20 00B0  
                                   u84_21 01C6                                     u92_21 00AF  
                                   u85_20 01CE                                     u93_20 00BB  
                                   u85_21 01CD                                     u93_21 00BA  
                                   u86_20 01D7                                     u94_20 00C5  
                                   u86_21 01D6                                     u94_21 00C2  
                                   u87_20 0086                                     u87_21 0085  
                                   u95_24 00C7                                     u88_20 008A  
                                   u88_21 0089                                     u89_20 009C  
                                   u89_21 009B                 ?_TMR0_SetInterruptHandler 0073  
                        __end_of_TMR0_ISR 03A1                           __end_of_get_fun 0186  
                        __end_of_TMR2_ISR 03CD                           __end_of_go_open 03E4  
                          _WDT_Initialize 040F                           __end_of_ms_tick 0221  
                                   pclath 000A                           __end_of_povorot 0082  
                                   status 0003                                     wtemp0 007E  
                       ms_tick@tick_count 0023                           _TMR2_StartTimer 0417  
                         __initialization 0027                              __end_of_main 0297  
                 __end_of_TMR2_Initialize 037F               ?_INTERRUPT_InterruptManager 0070  
                _TMR2_SetInterruptHandler 03F9                                    ??_main 0077  
                  __end_of_WDT_Initialize 0413                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _EEDATA 0193  
                                  _EECON2 0196                                    _APFCON 011D  
                                  _ANSELA 018C                                    _ANSELC 018E  
                         ??_toggle_zummer 0070                                    _BORCON 0116  
                                  u102_20 03D7                                    u102_21 03D4  
                                  i1l2020 0203                                    i1l2012 01F2  
                                  i1l2030 021A                                    i1l2022 0207  
                                  i1l2014 01F7                                    u111_20 039B  
                                  i1l2040 0391                                    i1l2032 021D  
                                  i1l2024 020E                                    i1l2016 01FB  
                                  u111_21 039A                                    i1l2042 0392  
                                  i1l2026 020F                                    i1l2018 01FF  
                                  i1l2050 03C1                                    u103_24 03D9  
                                  i1l2044 0395                                    i1l2028 0211  
                                  i1l2052 03C7                                    i1l2046 039B  
                                  u112_20 03C7                                    i1l2048 03BF  
                                  u112_21 03C6                                    i1l2250 0006  
                                  i1l2260 0020                                    i1l2252 000A  
                                  i1l2254 000E                                    i1l2256 0016  
                                  i1l1810 01C0                                    i1l2258 001B  
                                  i1l1820 01E5                                    i1l1812 01C3  
                                  i1l1900 0086                                    i1l1822 01E7  
                                  i1l1814 01C7                                    i1l1910 00A8  
                                  i1l1902 008A                                    i1l1824 01E8  
                                  i1l1816 01CE                                    i1l1912 00B0  
                                  i1l1904 0095                                    u106_20 01FB  
                                  u106_21 01FA                                    i1l1826 01E9  
                                  i1l1818 01D9                                    i1l1914 00B5  
                                  i1l1906 0098                                    i1l1828 01EA  
                                  i1l1916 00BB                                    i1l1908 009C  
                                  i1l1918 00C7                                    u107_20 0203  
                                  u107_21 0202                                    u203_27 01DE  
                                  i1l1968 03CD                                    u108_20 020E  
                                  u108_21 020D                                    i1l1898 0082  
                                  u109_20 021A                                    u109_21 0219  
                                  u150_20 0020                                    u150_21 001F  
                                  u146_20 000A                                    u146_21 0009  
                                  u147_20 000E                                    u147_21 000D  
                                  u148_20 0016                                    u148_21 0015  
                                  u149_20 001B                                    u149_21 001A  
                        _GOOD_WSP_VOLTAGE 041D                                    _OSCCON 0099  
                                  _WDTCON 0097                          __end_of_get_jump 024F  
                        __end_of_go_close 02D7                          ?_TMR0_Initialize 0070  
                       ??_EEPROM_ReadByte 0073                          __end_of_fun_work 010D  
                __end_of_EEPROM_WriteByte 0276                                 ??_get_fun 0073  
                               ??_go_open 0073                                 ??_ms_tick 0073  
                         ?_WDT_Initialize 0070                            get_measure@res 0045  
                  EEPROM_WriteByte@status 0046                  ADC_GetConversion@channel 0074  
                   _HIGH_WATER_RESISTANSE 0423                                 ??_povorot 0075  
                 __end_of_TMR2_StartTimer 041A  TMR0_SetInterruptHandler@InterruptHandler 0073  
TMR2_SetInterruptHandler@InterruptHandler 0073                      __end_of_go_close_alt 040F  
                       _SYSTEM_Initialize 035A                   __end_of__initialization 0033  
                      ?_SYSTEM_Initialize 0070                             _UP_RESISTANSE 0421  
                         eeprom_set@adres 0047                            __pcstackCOMMON 0070  
               get_jump_full@jump_counter 0036                       ??_SYSTEM_Initialize 0075  
                               ?_TMR0_ISR 0070                            beep_long@count 0074  
                               ?_TMR2_ISR 0070                          ?_TMR2_Initialize 0070  
                            ?_start_alarm 0070                            _OPTION_REGbits 0095  
                            ?_start_setup 0070                                _beep_short 03B0  
               __end_of_SYSTEM_Initialize 036D                          ??_go_close_short 0073  
                   __end_of_timer0_switch 03DA                                __pbssBANK0 0020  
                              __pmaintext 0276          __end_of_TMR0_SetInterruptHandler 0405  
                              ??_TMR0_ISR 0070                                ??_TMR2_ISR 0073  
                         _time_rele_power 0031                                __pintentry 0004  
                       _time_rele_control 002F                                _eeprom_set 031E  
                                 _OSCTUNE 0098                         __end_of_beep_long 03B0  
                        ?_TMR2_StartTimer 0070                                 ?_get_jump 0070  
                               ?_go_close 0070                                 ?_fun_work 0070  
                    _ADC_InterruptHandler 0033                ??_TMR2_SetInterruptHandler 0075  
                __end_of_GOOD_WSP_VOLTAGE 041F                                   __ptext1 02D7  
                                 __ptext2 03A1                       get_measure@measures 003A  
                                 __ptext3 0186                                   __ptext4 031E  
                                 __ptext5 024F                                   __ptext6 0332  
                                 __ptext7 0417                                   __ptext8 035A  
                                 __ptext9 040F                                   _get_fun 014B  
                                 _go_open 03DA                     _OSCILLATOR_Initialize 03EC  
                               _T2CONbits 001C                  ??_PIN_MANAGER_Initialize 0073  
                                 _ms_tick 01F2                                   _povorot 0036  
                             ?_beep_short 0070                                   clrloop0 03F4  
                              ??_get_jump 0073                                ??_go_close 0073  
                       __end_of_rele_tick 01F2                      end_of_initialization 0033  
                              ??_fun_work 0075                           _EEPROM_ReadByte 0332  
                           _sec_tick_work 0082                              _go_close_alt 040A  
                        ??_WDT_Initialize 0073              __end_of_LOW_WATER_RESISTANSE 0427  
                _TMR0_SetInterruptHandler 03FF                                 _PORTAbits 000C  
                               _PORTCbits 000E                         ?_EEPROM_WriteByte 0073  
                       __end_of_switch_wm 02F1                               ?_eeprom_set 0070  
                      ??_EEPROM_WriteByte 0074                                 _TRISAbits 008C  
                               _TRISCbits 008E                        EEPROM_WriteByte@dt 0073  
                              _start_tone 041A                     __end_of_toggle_zummer 0417  
                           ??_get_measure 0075      __end_of_TMR2_DefaultInterruptHandler 0428  
            _TMR2_DefaultInterruptHandler 0427                            ?_sec_tick_work 0070  
                          _ADC_Initialize 03E4                    ?_OSCILLATOR_Initialize 0070  
                           ??_go_open_alt 0073                       start_initialization 0027  
                 __end_of_EEPROM_ReadByte 0346                          _beep_short_count 003D  
                  __end_of_ADC_Initialize 03EC                       __end_of_get_measure 014B  
           ?_TMR2_DefaultInterruptHandler 0070                               __pbssCOMMON 0077  
                               ___latbits 0000                             __pcstackBANK0 0045  
                     __end_of_go_open_alt 040A                               ?_start_tone 0070  
                               _beep_long 03A1                      _LOW_WATER_RESISTANSE 0425  
                   _TMR0_InterruptHandler 0041                                 __pnvBANK0 0041  
                  _PIN_MANAGER_Initialize 0309                           beep_short@count 0074  
                         ??_sec_tick_work 0072                           ?_ADC_Initialize 0070  
            ??_INTERRUPT_InterruptManager 0073                                  ?_get_fun 0070  
                                ?_go_open 0070                         sec_tick_work@iled 0035  
                                ?_ms_tick 0070                              ??_beep_short 0073  
                                ?_povorot 0070                          ?_EEPROM_ReadByte 0070  
                       ??_TMR0_Initialize 0075                                ?_beep_long 0070  
                                _LATAbits 010C                                  _LATCbits 010E  
                               _rele_tick 01C0                                 clear_ram0 03F3  
                                _PIE1bits 0091                               _get_measure 010D  
              ??_TMR0_SetInterruptHandler 0075                                  _PIR1bits 0011  
                               _time_meas 003E                                  _TMR0_ISR 0391  
                                _TMR2_ISR 03BF                        __end_of_beep_short 03BF  
                         _beep_long_count 003C                                _ADCON0bits 009D  
                                _WPUAbits 020C                                  _WPUCbits 020E  
                            ??_eeprom_set 0076            ??_TMR2_DefaultInterruptHandler 0070  
                             _go_open_alt 0405                 ?_TMR2_SetInterruptHandler 0073  
                               _switch_wm 02D7                             _timer0_switch 03CD  
                       _beep_double_count 003B                         ??_TMR2_Initialize 0075  
                              ?_rele_tick 0070                     __end_of_UP_RESISTANSE 0423  
                       _ADC_GetConversion 02F1                        __end_of_eeprom_set 0332  
                 ??_OSCILLATOR_Initialize 0073                        ?_ADC_GetConversion 0070  
                           ??_start_alarm 0075                                _ANSELAbits 018C  
                              _ANSELCbits 018E                       ??_ADC_GetConversion 0073  
                           ??_start_setup 0077                             _time_rele_gap 002D  
                              ?_switch_wm 0070                                  __ptext10 036D  
                                __ptext11 03F9                                  __ptext20 0346  
                                __ptext12 037F                                  __ptext21 02F1  
                                __ptext13 03FF                                  __ptext30 041A  
                                __ptext22 0221                                  __ptext14 0309  
                                __ptext23 014B                                  __ptext15 03EC  
                                __ptext40 03CD                                  __ptext32 03BF  
                                __ptext24 00CA                                  __ptext16 03E4  
                                __ptext33 0427                                  __ptext25 0405  
                                __ptext17 0036                                  __ptext34 01F2  
                                __ptext26 03DA                                  __ptext18 0297  
                                __ptext35 0082                                  __ptext27 040A  
                                __ptext19 010D                                  __ptext36 01C0  
                                __ptext28 02B7                                  __ptext37 0413  
                                __ptext29 03B0                                  __ptext38 0391  
                                __ptext39 0428                            ?_timer0_switch 0070  
                                _get_jump 0221                                  _go_close 02B7  
                         _BAD_WSP_VOLTAGE 041F                             _time_rotation 0020  
                             ??_beep_long 0073                                  _fun_work 00CA  
    __end_of_TMR0_DefaultInterruptHandler 0429              _TMR0_DefaultInterruptHandler 0428  
               __end_of_ADC_GetConversion 0309                                  _time_led 002B  
                                int$flags 007E                         ??_TMR2_StartTimer 0073  
      __end_of_INTERRUPT_InterruptManager 0026                _INTERRUPT_InterruptManager 0004  
                    get_jump@jump_counter 0037                                _INTCONbits 000B  
           __end_of_HIGH_WATER_RESISTANSE 0425                       __end_of_start_alarm 035A  
                     __end_of_start_setup 01C0                                  intlevel1 0000  
                            ??_start_tone 0073                   ?_PIN_MANAGER_Initialize 0070  
                             ??_rele_tick 0070                       EEPROM_ReadByte@addr 0075  
                        ??_ADC_Initialize 0073                            _go_close_short 0297  
           ?_TMR0_DefaultInterruptHandler 0070                             __pstringtext1 041D  
                           __pstringtext2 041F                             __pstringtext3 0421  
                           __pstringtext4 0423                             __pstringtext5 0425  
                      __end_of_start_tone 041D                                _OPTION_REG 0095  
                       _time_zummer_short 0027               _FRIMWARE_VERSION_EEPROM_ADR 003F  
                         _TMR0_Initialize 037F                   __end_of_BAD_WSP_VOLTAGE 0421  
                             ??_switch_wm 0075                               _time_zummer 0029  
                         ??_timer0_switch 0070                          _time_zummer_long 0025  
          __end_of_PIN_MANAGER_Initialize 031E                          _EEPROM_WriteByte 024F  
                  __end_of_go_close_short 02B7                             _toggle_zummer 0413  
                   _TMR2_InterruptHandler 0043                              ?_get_measure 0070  
